#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_b4)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_b4) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B4 0000
        gbc.setState(0x72a9, 0xaaf6, 0xa6a0, 0xe3e9, 0xecc2, 0x9366, 0x1, 0x0);
        gbc.writeMem(0x72a9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xaaf6);
        EXPECT(gbc.pc(), 0x72ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0001
        gbc.setState(0xe554, 0xdd92, 0x650, 0x4783, 0xd41e, 0x6999, 0x1, 0x1);
        gbc.writeMem(0xe554, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xdd92);
        EXPECT(gbc.pc(), 0xe556);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe554), 0xcb);
        EXPECT(gbc.readMem(0xe555), 0xb4);
        // CB B4 0002
        gbc.setState(0x681d, 0x6ac6, 0x80f0, 0xc41b, 0xb036, 0x88b4, 0x0, 0x0);
        gbc.writeMem(0x681d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6ac6);
        EXPECT(gbc.pc(), 0x681f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0003
        gbc.setState(0x5956, 0xc4ea, 0xe550, 0x1179, 0xfd8d, 0xb735, 0x0, 0x0);
        gbc.writeMem(0x5956, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xc4ea);
        EXPECT(gbc.pc(), 0x5958);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0004
        gbc.setState(0x5a73, 0x8ff1, 0x8830, 0x7824, 0xdcd4, 0x25a8, 0x1, 0x1);
        gbc.writeMem(0x5a73, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8ff1);
        EXPECT(gbc.pc(), 0x5a75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0005
        gbc.setState(0x2565, 0x6183, 0xd50, 0x6c69, 0xbb98, 0xec2f, 0x1, 0x0);
        gbc.writeMem(0x2565, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x6183);
        EXPECT(gbc.pc(), 0x2567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0006
        gbc.setState(0xee46, 0xb86f, 0xbb00, 0xefb2, 0x1b3f, 0x39d9, 0x0, 0x0);
        gbc.writeMem(0xee46, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xb86f);
        EXPECT(gbc.pc(), 0xee48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee46), 0xcb);
        EXPECT(gbc.readMem(0xee47), 0xb4);
        // CB B4 0007
        gbc.setState(0xd66d, 0xd7da, 0xfc70, 0xf148, 0x80d1, 0x83e7, 0x1, 0x0);
        gbc.writeMem(0xd66d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd7da);
        EXPECT(gbc.pc(), 0xd66f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd66d), 0xcb);
        EXPECT(gbc.readMem(0xd66e), 0xb4);
        // CB B4 0008
        gbc.setState(0xd7f5, 0xb8e9, 0x25d0, 0xfb62, 0x7e94, 0x6d30, 0x0, 0x0);
        gbc.writeMem(0xd7f5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb8e9);
        EXPECT(gbc.pc(), 0xd7f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7f5), 0xcb);
        EXPECT(gbc.readMem(0xd7f6), 0xb4);
        // CB B4 000A
        gbc.setState(0x2fa5, 0x1b95, 0x6e50, 0x30b2, 0x54b6, 0xf2ff, 0x0, 0x1);
        gbc.writeMem(0x2fa5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1b95);
        EXPECT(gbc.pc(), 0x2fa7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 000B
        gbc.setState(0x1c6, 0x169d, 0x6710, 0xb713, 0xf1f0, 0x899b, 0x1, 0x0);
        gbc.writeMem(0x1c6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x169d);
        EXPECT(gbc.pc(), 0x1c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 000C
        gbc.setState(0x58e8, 0x1e80, 0x4f60, 0x9548, 0x59d1, 0xa4c9, 0x0, 0x0);
        gbc.writeMem(0x58e8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x1e80);
        EXPECT(gbc.pc(), 0x58ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 000D
        gbc.setState(0x9e27, 0xbbf5, 0x46c0, 0xaeaa, 0x4b40, 0xcd9, 0x1, 0x1);
        gbc.writeMem(0x9e27, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xbbf5);
        EXPECT(gbc.pc(), 0x9e29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e27), 0xcb);
        EXPECT(gbc.readMem(0x9e28), 0xb4);
        // CB B4 000E
        gbc.setState(0x7207, 0x5bf5, 0x8fd0, 0xb090, 0xb849, 0xcc52, 0x0, 0x0);
        gbc.writeMem(0x7207, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5bf5);
        EXPECT(gbc.pc(), 0x7209);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 000F
        gbc.setState(0x6695, 0xe250, 0x3930, 0x3798, 0x9b0, 0xf0b4, 0x1, 0x0);
        gbc.writeMem(0x6695, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xe250);
        EXPECT(gbc.pc(), 0x6697);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0010
        gbc.setState(0xe5c1, 0x3372, 0x5260, 0xfc27, 0xd64e, 0x6398, 0x1, 0x1);
        gbc.writeMem(0xe5c1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x3372);
        EXPECT(gbc.pc(), 0xe5c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5c1), 0xcb);
        EXPECT(gbc.readMem(0xe5c2), 0xb4);
        // CB B4 0011
        gbc.setState(0xa7a7, 0x9512, 0xa790, 0x3524, 0x6703, 0xd73d, 0x0, 0x1);
        gbc.writeMem(0xa7a7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9512);
        EXPECT(gbc.pc(), 0xa7a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7a7), 0xcb);
        EXPECT(gbc.readMem(0xa7a8), 0xb4);
        // CB B4 0012
        gbc.setState(0x7722, 0x9845, 0x30d0, 0xebf6, 0x5c3c, 0x87e7, 0x0, 0x0);
        gbc.writeMem(0x7722, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9845);
        EXPECT(gbc.pc(), 0x7724);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0013
        gbc.setState(0x7e32, 0xd18b, 0x9b60, 0x5faf, 0x99c7, 0xe97a, 0x0, 0x1);
        gbc.writeMem(0x7e32, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd18b);
        EXPECT(gbc.pc(), 0x7e34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0014
        gbc.setState(0xd87c, 0xe093, 0xdc90, 0xb04f, 0x9b1f, 0x39ea, 0x0, 0x0);
        gbc.writeMem(0xd87c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xe093);
        EXPECT(gbc.pc(), 0xd87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd87c), 0xcb);
        EXPECT(gbc.readMem(0xd87d), 0xb4);
        // CB B4 0015
        gbc.setState(0x594a, 0xa4c0, 0x9610, 0x45d, 0x84fa, 0x6f82, 0x0, 0x1);
        gbc.writeMem(0x594a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa4c0);
        EXPECT(gbc.pc(), 0x594c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0016
        gbc.setState(0xd020, 0xe2eb, 0xd410, 0x9863, 0xf64f, 0x87d4, 0x1, 0x1);
        gbc.writeMem(0xd020, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe2eb);
        EXPECT(gbc.pc(), 0xd022);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd020), 0xcb);
        EXPECT(gbc.readMem(0xd021), 0xb4);
        // CB B4 0017
        gbc.setState(0x5fc5, 0xc74a, 0xd7d0, 0x367c, 0x84f, 0xf954, 0x0, 0x0);
        gbc.writeMem(0x5fc5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xc74a);
        EXPECT(gbc.pc(), 0x5fc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0018
        gbc.setState(0x1e60, 0x372a, 0x1a40, 0xe992, 0xfcd3, 0x57fb, 0x1, 0x1);
        gbc.writeMem(0x1e60, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x372a);
        EXPECT(gbc.pc(), 0x1e62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0019
        gbc.setState(0x6a5d, 0x7cb9, 0xffc0, 0xd3ff, 0xd45a, 0xd6f1, 0x1, 0x0);
        gbc.writeMem(0x6a5d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x7cb9);
        EXPECT(gbc.pc(), 0x6a5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 001A
        gbc.setState(0x4def, 0x41b5, 0x6560, 0x28db, 0xb130, 0x19d3, 0x0, 0x0);
        gbc.writeMem(0x4def, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x41b5);
        EXPECT(gbc.pc(), 0x4df1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 001B
        gbc.setState(0x6d53, 0xc23a, 0xd190, 0xb3b, 0xc21e, 0x513b, 0x0, 0x0);
        gbc.writeMem(0x6d53, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc23a);
        EXPECT(gbc.pc(), 0x6d55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 001C
        gbc.setState(0xe77e, 0x266f, 0x4930, 0xee43, 0xee02, 0x693f, 0x0, 0x1);
        gbc.writeMem(0xe77e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x266f);
        EXPECT(gbc.pc(), 0xe780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe77e), 0xcb);
        EXPECT(gbc.readMem(0xe77f), 0xb4);
        // CB B4 001D
        gbc.setState(0x94c1, 0xfaa4, 0xde80, 0x3bd4, 0x703d, 0x5f6c, 0x1, 0x0);
        gbc.writeMem(0x94c1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xfaa4);
        EXPECT(gbc.pc(), 0x94c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94c1), 0xcb);
        EXPECT(gbc.readMem(0x94c2), 0xb4);
        // CB B4 001E
        gbc.setState(0xc062, 0xe72c, 0xe710, 0x3068, 0x5bae, 0xc5a5, 0x1, 0x0);
        gbc.writeMem(0xc062, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe72c);
        EXPECT(gbc.pc(), 0xc064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc062), 0xcb);
        EXPECT(gbc.readMem(0xc063), 0xb4);
        // CB B4 001F
        gbc.setState(0xac0c, 0x17e, 0xd9d0, 0x44aa, 0xfb07, 0xbdf2, 0x1, 0x0);
        gbc.writeMem(0xac0c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x17e);
        EXPECT(gbc.pc(), 0xac0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0c), 0xcb);
        EXPECT(gbc.readMem(0xac0d), 0xb4);
        // CB B4 0020
        gbc.setState(0x464d, 0xa09b, 0xe80, 0x4b6f, 0xfdb7, 0x71c0, 0x1, 0x0);
        gbc.writeMem(0x464d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa09b);
        EXPECT(gbc.pc(), 0x464f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0021
        gbc.setState(0xe710, 0x40a6, 0xcb30, 0x985d, 0xdb58, 0x2318, 0x1, 0x0);
        gbc.writeMem(0xe710, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x40a6);
        EXPECT(gbc.pc(), 0xe712);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe710), 0xcb);
        EXPECT(gbc.readMem(0xe711), 0xb4);
        // CB B4 0022
        gbc.setState(0x404f, 0x6a43, 0xe3d0, 0x7116, 0x7803, 0x4758, 0x0, 0x0);
        gbc.writeMem(0x404f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6a43);
        EXPECT(gbc.pc(), 0x4051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0023
        gbc.setState(0x652c, 0x7dba, 0x1f30, 0x194a, 0x2749, 0x361f, 0x1, 0x0);
        gbc.writeMem(0x652c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7dba);
        EXPECT(gbc.pc(), 0x652e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0024
        gbc.setState(0x221a, 0x50aa, 0x2830, 0xe731, 0x9abe, 0x89c6, 0x0, 0x0);
        gbc.writeMem(0x221a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x50aa);
        EXPECT(gbc.pc(), 0x221c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0025
        gbc.setState(0x7aba, 0x870f, 0xccb0, 0xbb85, 0xcb9c, 0x2038, 0x1, 0x1);
        gbc.writeMem(0x7aba, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x870f);
        EXPECT(gbc.pc(), 0x7abc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0026
        gbc.setState(0x1535, 0x3976, 0x5fb0, 0x4f61, 0xa57a, 0x17e5, 0x0, 0x0);
        gbc.writeMem(0x1535, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x3976);
        EXPECT(gbc.pc(), 0x1537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0027
        gbc.setState(0xa452, 0xd2f5, 0x6490, 0xb814, 0xe711, 0x8b81, 0x1, 0x1);
        gbc.writeMem(0xa452, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd2f5);
        EXPECT(gbc.pc(), 0xa454);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa452), 0xcb);
        EXPECT(gbc.readMem(0xa453), 0xb4);
        // CB B4 0028
        gbc.setState(0x39f, 0xcfb6, 0xdba0, 0x6eed, 0x843c, 0x250d, 0x0, 0x0);
        gbc.writeMem(0x39f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xcfb6);
        EXPECT(gbc.pc(), 0x3a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0029
        gbc.setState(0x513c, 0xb267, 0xd630, 0x754b, 0xda65, 0x6bc9, 0x1, 0x1);
        gbc.writeMem(0x513c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb267);
        EXPECT(gbc.pc(), 0x513e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 002A
        gbc.setState(0x8de8, 0x4e21, 0xe6d0, 0x6f83, 0x3856, 0xe62e, 0x0, 0x0);
        gbc.writeMem(0x8de8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4e21);
        EXPECT(gbc.pc(), 0x8dea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de8), 0xcb);
        EXPECT(gbc.readMem(0x8de9), 0xb4);
        // CB B4 002B
        gbc.setState(0x6336, 0x91e4, 0x5700, 0xf09b, 0xdda1, 0x40e, 0x1, 0x0);
        gbc.writeMem(0x6336, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x91e4);
        EXPECT(gbc.pc(), 0x6338);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 002C
        gbc.setState(0x6227, 0x5e73, 0xc560, 0x5209, 0x85b3, 0xae74, 0x0, 0x0);
        gbc.writeMem(0x6227, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5e73);
        EXPECT(gbc.pc(), 0x6229);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 002D
        gbc.setState(0x8ca7, 0xafa7, 0x5550, 0xf035, 0xf36f, 0x5676, 0x1, 0x0);
        gbc.writeMem(0x8ca7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xafa7);
        EXPECT(gbc.pc(), 0x8ca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ca7), 0xcb);
        EXPECT(gbc.readMem(0x8ca8), 0xb4);
        // CB B4 002E
        gbc.setState(0x29cd, 0x3ec2, 0x3910, 0x15ea, 0x118a, 0x3883, 0x1, 0x1);
        gbc.writeMem(0x29cd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x3ec2);
        EXPECT(gbc.pc(), 0x29cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 002F
        gbc.setState(0x9098, 0x1b5a, 0xbf90, 0x7883, 0xe7c7, 0xf9e0, 0x1, 0x0);
        gbc.writeMem(0x9098, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x1b5a);
        EXPECT(gbc.pc(), 0x909a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9098), 0xcb);
        EXPECT(gbc.readMem(0x9099), 0xb4);
        // CB B4 0030
        gbc.setState(0x2057, 0x9bb5, 0xe720, 0x3c9a, 0xe0ab, 0x2be1, 0x0, 0x1);
        gbc.writeMem(0x2057, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x9bb5);
        EXPECT(gbc.pc(), 0x2059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0031
        gbc.setState(0x50a2, 0xd79d, 0x3dc0, 0xdec2, 0x191b, 0xc1f2, 0x0, 0x1);
        gbc.writeMem(0x50a2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xd79d);
        EXPECT(gbc.pc(), 0x50a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0032
        gbc.setState(0x6e34, 0x4a57, 0x16b0, 0x6096, 0xce0c, 0x64bb, 0x1, 0x0);
        gbc.writeMem(0x6e34, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x4a57);
        EXPECT(gbc.pc(), 0x6e36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0033
        gbc.setState(0x8ec5, 0xb95a, 0x5c60, 0xe57c, 0x201, 0x8d29, 0x0, 0x0);
        gbc.writeMem(0x8ec5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xb95a);
        EXPECT(gbc.pc(), 0x8ec7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ec5), 0xcb);
        EXPECT(gbc.readMem(0x8ec6), 0xb4);
        // CB B4 0034
        gbc.setState(0x9e98, 0x76b4, 0xacd0, 0x4924, 0x2c3c, 0x1bac, 0x0, 0x1);
        gbc.writeMem(0x9e98, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x76b4);
        EXPECT(gbc.pc(), 0x9e9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e98), 0xcb);
        EXPECT(gbc.readMem(0x9e99), 0xb4);
        // CB B4 0035
        gbc.setState(0xd903, 0x37b4, 0xb1c0, 0x9ec8, 0xfc6c, 0x376e, 0x0, 0x1);
        gbc.writeMem(0xd903, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x37b4);
        EXPECT(gbc.pc(), 0xd905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd903), 0xcb);
        EXPECT(gbc.readMem(0xd904), 0xb4);
        // CB B4 0036
        gbc.setState(0xab9a, 0x42e4, 0xcbf0, 0x93f3, 0x44b6, 0x2883, 0x0, 0x0);
        gbc.writeMem(0xab9a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x42e4);
        EXPECT(gbc.pc(), 0xab9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab9a), 0xcb);
        EXPECT(gbc.readMem(0xab9b), 0xb4);
        // CB B4 0037
        gbc.setState(0x267b, 0x739b, 0x4b30, 0x86ad, 0x6dd4, 0xad8a, 0x0, 0x1);
        gbc.writeMem(0x267b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x739b);
        EXPECT(gbc.pc(), 0x267d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0038
        gbc.setState(0xceee, 0x791b, 0x87d0, 0xa03e, 0xe45f, 0xe974, 0x0, 0x0);
        gbc.writeMem(0xceee, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x791b);
        EXPECT(gbc.pc(), 0xcef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xceee), 0xcb);
        EXPECT(gbc.readMem(0xceef), 0xb4);
        // CB B4 0039
        gbc.setState(0xee85, 0x89c8, 0x1640, 0xa50c, 0x513f, 0xe23c, 0x0, 0x1);
        gbc.writeMem(0xee85, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x89c8);
        EXPECT(gbc.pc(), 0xee87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee85), 0xcb);
        EXPECT(gbc.readMem(0xee86), 0xb4);
        // CB B4 003B
        gbc.setState(0x1ea7, 0x5230, 0x67b0, 0xb5e0, 0xaf7d, 0x1b0f, 0x1, 0x1);
        gbc.writeMem(0x1ea7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x5230);
        EXPECT(gbc.pc(), 0x1ea9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 003C
        gbc.setState(0x8b07, 0xbbab, 0xff10, 0xc779, 0x69f6, 0x7499, 0x0, 0x0);
        gbc.writeMem(0x8b07, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xbbab);
        EXPECT(gbc.pc(), 0x8b09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b07), 0xcb);
        EXPECT(gbc.readMem(0x8b08), 0xb4);
        // CB B4 003D
        gbc.setState(0x9d00, 0xcbe2, 0xbfe0, 0x849e, 0xac3d, 0xd3ef, 0x1, 0x0);
        gbc.writeMem(0x9d00, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xcbe2);
        EXPECT(gbc.pc(), 0x9d02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d00), 0xcb);
        EXPECT(gbc.readMem(0x9d01), 0xb4);
        // CB B4 003E
        gbc.setState(0x1722, 0xa6f5, 0xf5f0, 0xf3b9, 0x2818, 0xb769, 0x1, 0x0);
        gbc.writeMem(0x1722, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa6f5);
        EXPECT(gbc.pc(), 0x1724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 003F
        gbc.setState(0xc9d1, 0x7092, 0xde30, 0xf277, 0xb796, 0x1121, 0x1, 0x0);
        gbc.writeMem(0xc9d1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x7092);
        EXPECT(gbc.pc(), 0xc9d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9d1), 0xcb);
        EXPECT(gbc.readMem(0xc9d2), 0xb4);
        // CB B4 0041
        gbc.setState(0xe0f1, 0xe627, 0x61c0, 0x4fcd, 0xef1b, 0x275d, 0x0, 0x1);
        gbc.writeMem(0xe0f1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe627);
        EXPECT(gbc.pc(), 0xe0f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0f1), 0xcb);
        EXPECT(gbc.readMem(0xe0f2), 0xb4);
        // CB B4 0042
        gbc.setState(0x4975, 0xa45b, 0x62f0, 0xfc9f, 0x3529, 0x3a97, 0x1, 0x1);
        gbc.writeMem(0x4975, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa45b);
        EXPECT(gbc.pc(), 0x4977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0043
        gbc.setState(0x3f7b, 0x2759, 0x6200, 0xcb2d, 0xd961, 0xb76, 0x0, 0x1);
        gbc.writeMem(0x3f7b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2759);
        EXPECT(gbc.pc(), 0x3f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0044
        gbc.setState(0x2985, 0x1c30, 0xb470, 0xdfde, 0xb756, 0xaf09, 0x0, 0x1);
        gbc.writeMem(0x2985, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1c30);
        EXPECT(gbc.pc(), 0x2987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0045
        gbc.setState(0xb504, 0xd7f3, 0x89e0, 0xa643, 0xae53, 0x1b4e, 0x0, 0x1);
        gbc.writeMem(0xb504, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd7f3);
        EXPECT(gbc.pc(), 0xb506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb504), 0xcb);
        EXPECT(gbc.readMem(0xb505), 0xb4);
        // CB B4 0046
        gbc.setState(0xbfc3, 0xcdc4, 0xace0, 0xc223, 0xdf89, 0xd52c, 0x0, 0x1);
        gbc.writeMem(0xbfc3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xcdc4);
        EXPECT(gbc.pc(), 0xbfc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfc3), 0xcb);
        EXPECT(gbc.readMem(0xbfc4), 0xb4);
        // CB B4 0047
        gbc.setState(0xdb45, 0xe939, 0xe110, 0xd2f3, 0xbdf3, 0x3d68, 0x0, 0x0);
        gbc.writeMem(0xdb45, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xe939);
        EXPECT(gbc.pc(), 0xdb47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb45), 0xcb);
        EXPECT(gbc.readMem(0xdb46), 0xb4);
        // CB B4 0048
        gbc.setState(0xa82c, 0x486f, 0xc640, 0x9cea, 0xf016, 0x6ae2, 0x0, 0x1);
        gbc.writeMem(0xa82c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x486f);
        EXPECT(gbc.pc(), 0xa82e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82c), 0xcb);
        EXPECT(gbc.readMem(0xa82d), 0xb4);
        // CB B4 0049
        gbc.setState(0x8cbb, 0xf5d4, 0x3be0, 0xc069, 0x5c0, 0x5097, 0x1, 0x1);
        gbc.writeMem(0x8cbb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xf5d4);
        EXPECT(gbc.pc(), 0x8cbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cbb), 0xcb);
        EXPECT(gbc.readMem(0x8cbc), 0xb4);
        // CB B4 004A
        gbc.setState(0xb2a1, 0x4e11, 0x4c00, 0x3ae5, 0x6300, 0x23a1, 0x1, 0x0);
        gbc.writeMem(0xb2a1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4e11);
        EXPECT(gbc.pc(), 0xb2a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb2a1), 0xcb);
        EXPECT(gbc.readMem(0xb2a2), 0xb4);
        // CB B4 004B
        gbc.setState(0x7938, 0xf886, 0xb990, 0x98c4, 0xa7aa, 0x28fe, 0x1, 0x0);
        gbc.writeMem(0x7938, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xf886);
        EXPECT(gbc.pc(), 0x793a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 004C
        gbc.setState(0xd5b, 0xbacc, 0x72f0, 0xb96c, 0xee39, 0x445a, 0x0, 0x0);
        gbc.writeMem(0xd5b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbacc);
        EXPECT(gbc.pc(), 0xd5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 004D
        gbc.setState(0x1dd9, 0xd621, 0x18c0, 0x2945, 0x68fc, 0xb105, 0x0, 0x0);
        gbc.writeMem(0x1dd9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xd621);
        EXPECT(gbc.pc(), 0x1ddb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 004E
        gbc.setState(0x1d9, 0x12f4, 0xb6c0, 0xef85, 0xc6d8, 0x98d0, 0x1, 0x1);
        gbc.writeMem(0x1d9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x12f4);
        EXPECT(gbc.pc(), 0x1db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0050
        gbc.setState(0x448, 0x6f2e, 0x9ce0, 0xb560, 0xc169, 0x604, 0x1, 0x0);
        gbc.writeMem(0x448, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6f2e);
        EXPECT(gbc.pc(), 0x44a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0051
        gbc.setState(0x8807, 0x6109, 0x82b0, 0xa0a3, 0xefa, 0x91db, 0x1, 0x0);
        gbc.writeMem(0x8807, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6109);
        EXPECT(gbc.pc(), 0x8809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8807), 0xcb);
        EXPECT(gbc.readMem(0x8808), 0xb4);
        // CB B4 0052
        gbc.setState(0xe8f9, 0x37be, 0xfe80, 0x19e7, 0x17ba, 0x8114, 0x0, 0x1);
        gbc.writeMem(0xe8f9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x37be);
        EXPECT(gbc.pc(), 0xe8fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8f9), 0xcb);
        EXPECT(gbc.readMem(0xe8fa), 0xb4);
        // CB B4 0053
        gbc.setState(0xc85a, 0x74df, 0xff00, 0xac64, 0x299b, 0x321e, 0x0, 0x0);
        gbc.writeMem(0xc85a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x74df);
        EXPECT(gbc.pc(), 0xc85c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc85a), 0xcb);
        EXPECT(gbc.readMem(0xc85b), 0xb4);
        // CB B4 0054
        gbc.setState(0x8f79, 0x4f35, 0x5d20, 0x3e64, 0x898b, 0x4e86, 0x0, 0x1);
        gbc.writeMem(0x8f79, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4f35);
        EXPECT(gbc.pc(), 0x8f7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f79), 0xcb);
        EXPECT(gbc.readMem(0x8f7a), 0xb4);
        // CB B4 0055
        gbc.setState(0x67e2, 0x3513, 0x97b0, 0x65cb, 0x1f35, 0xcd1d, 0x1, 0x1);
        gbc.writeMem(0x67e2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3513);
        EXPECT(gbc.pc(), 0x67e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0056
        gbc.setState(0x3771, 0x3ddd, 0xc2b0, 0x5068, 0x55d6, 0x74b2, 0x0, 0x0);
        gbc.writeMem(0x3771, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3ddd);
        EXPECT(gbc.pc(), 0x3773);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0057
        gbc.setState(0xbb7a, 0x3bab, 0x7210, 0xb2ad, 0xcb37, 0x40a6, 0x0, 0x1);
        gbc.writeMem(0xbb7a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x3bab);
        EXPECT(gbc.pc(), 0xbb7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb7a), 0xcb);
        EXPECT(gbc.readMem(0xbb7b), 0xb4);
        // CB B4 0058
        gbc.setState(0x1360, 0x73a2, 0x9ff0, 0x2927, 0xeb03, 0x1cdd, 0x1, 0x0);
        gbc.writeMem(0x1360, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x73a2);
        EXPECT(gbc.pc(), 0x1362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0059
        gbc.setState(0x17ee, 0x9bf9, 0xf340, 0x88ce, 0xa977, 0x51a1, 0x0, 0x0);
        gbc.writeMem(0x17ee, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9bf9);
        EXPECT(gbc.pc(), 0x17f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 005A
        gbc.setState(0x2cdc, 0xc2c3, 0x25f0, 0x14ce, 0x7ae8, 0x734a, 0x1, 0x0);
        gbc.writeMem(0x2cdc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc2c3);
        EXPECT(gbc.pc(), 0x2cde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 005B
        gbc.setState(0x60bd, 0xb31b, 0x8fb0, 0x6e2c, 0x9b09, 0x63f, 0x0, 0x0);
        gbc.writeMem(0x60bd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb31b);
        EXPECT(gbc.pc(), 0x60bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 005C
        gbc.setState(0x5d63, 0x6845, 0xadd0, 0xa701, 0xfcf8, 0x8292, 0x1, 0x1);
        gbc.writeMem(0x5d63, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6845);
        EXPECT(gbc.pc(), 0x5d65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 005D
        gbc.setState(0x50df, 0xda38, 0x6980, 0x6364, 0x57cc, 0x3090, 0x0, 0x1);
        gbc.writeMem(0x50df, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xda38);
        EXPECT(gbc.pc(), 0x50e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 005E
        gbc.setState(0xdca5, 0x7971, 0x4170, 0xf3e0, 0xd9e0, 0xb12f, 0x1, 0x0);
        gbc.writeMem(0xdca5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7971);
        EXPECT(gbc.pc(), 0xdca7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdca5), 0xcb);
        EXPECT(gbc.readMem(0xdca6), 0xb4);
        // CB B4 005F
        gbc.setState(0xc7d4, 0x2ae5, 0x82d0, 0xae26, 0xd2dc, 0xc36b, 0x0, 0x1);
        gbc.writeMem(0xc7d4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x2ae5);
        EXPECT(gbc.pc(), 0xc7d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7d4), 0xcb);
        EXPECT(gbc.readMem(0xc7d5), 0xb4);
        // CB B4 0060
        gbc.setState(0x6ffe, 0x7c47, 0x3f60, 0x69d, 0xb6e9, 0xdefe, 0x1, 0x1);
        gbc.writeMem(0x6ffe, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x7c47);
        EXPECT(gbc.pc(), 0x7000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0061
        gbc.setState(0x579c, 0xd094, 0x5070, 0xa270, 0x7fc8, 0x5ff1, 0x1, 0x0);
        gbc.writeMem(0x579c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xd094);
        EXPECT(gbc.pc(), 0x579e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0063
        gbc.setState(0x20a8, 0x18f9, 0x2cb0, 0xbcb2, 0x9f1d, 0x4cd4, 0x0, 0x1);
        gbc.writeMem(0x20a8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x18f9);
        EXPECT(gbc.pc(), 0x20aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0064
        gbc.setState(0xe8ad, 0xf3cb, 0xf200, 0x2e61, 0x6bac, 0xcfc2, 0x1, 0x0);
        gbc.writeMem(0xe8ad, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf3cb);
        EXPECT(gbc.pc(), 0xe8af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8ad), 0xcb);
        EXPECT(gbc.readMem(0xe8ae), 0xb4);
        // CB B4 0065
        gbc.setState(0x5980, 0xf527, 0x8400, 0x348c, 0x8812, 0x3ff2, 0x1, 0x1);
        gbc.writeMem(0x5980, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xf527);
        EXPECT(gbc.pc(), 0x5982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0066
        gbc.setState(0x64c2, 0xbff5, 0x3ab0, 0x1d7f, 0xba4d, 0x3784, 0x0, 0x1);
        gbc.writeMem(0x64c2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xbff5);
        EXPECT(gbc.pc(), 0x64c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0067
        gbc.setState(0x8cff, 0x136a, 0x71f0, 0x47a0, 0x231d, 0x66ba, 0x1, 0x0);
        gbc.writeMem(0x8cff, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x136a);
        EXPECT(gbc.pc(), 0x8d01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cff), 0xcb);
        EXPECT(gbc.readMem(0x8d00), 0xb4);
        // CB B4 0068
        gbc.setState(0xd7c6, 0xc081, 0xbe50, 0x4f7a, 0x21e3, 0x15d7, 0x0, 0x0);
        gbc.writeMem(0xd7c6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc081);
        EXPECT(gbc.pc(), 0xd7c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7c6), 0xcb);
        EXPECT(gbc.readMem(0xd7c7), 0xb4);
        // CB B4 0069
        gbc.setState(0x4ede, 0x7ee, 0xf100, 0xcc2e, 0x75dd, 0x185e, 0x1, 0x0);
        gbc.writeMem(0x4ede, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x7ee);
        EXPECT(gbc.pc(), 0x4ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 006B
        gbc.setState(0x4935, 0x4c00, 0x7da0, 0x5095, 0x2caf, 0xaf45, 0x1, 0x0);
        gbc.writeMem(0x4935, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x4c00);
        EXPECT(gbc.pc(), 0x4937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 006C
        gbc.setState(0x2d78, 0xb20e, 0x7860, 0x89f7, 0xa100, 0x1c70, 0x0, 0x1);
        gbc.writeMem(0x2d78, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb20e);
        EXPECT(gbc.pc(), 0x2d7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 006D
        gbc.setState(0xf80, 0xde7a, 0xde60, 0xefc9, 0xb00e, 0x6800, 0x1, 0x1);
        gbc.writeMem(0xf80, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xde7a);
        EXPECT(gbc.pc(), 0xf82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 006E
        gbc.setState(0x4f59, 0x69bc, 0xc4c0, 0x7cc6, 0x9df0, 0x6d88, 0x1, 0x0);
        gbc.writeMem(0x4f59, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x69bc);
        EXPECT(gbc.pc(), 0x4f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 006F
        gbc.setState(0xeb2, 0xfd61, 0xbe10, 0xd322, 0xcf58, 0xca72, 0x1, 0x1);
        gbc.writeMem(0xeb2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xfd61);
        EXPECT(gbc.pc(), 0xeb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0070
        gbc.setState(0x7df7, 0x1503, 0x8330, 0xfc92, 0x65c5, 0xeff, 0x1, 0x0);
        gbc.writeMem(0x7df7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1503);
        EXPECT(gbc.pc(), 0x7df9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0071
        gbc.setState(0x7ea8, 0xf54d, 0xc190, 0x7590, 0xb82d, 0x63a, 0x0, 0x0);
        gbc.writeMem(0x7ea8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf54d);
        EXPECT(gbc.pc(), 0x7eaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0073
        gbc.setState(0x2e96, 0x33fc, 0xd3f0, 0xb761, 0x63d7, 0x52a9, 0x0, 0x0);
        gbc.writeMem(0x2e96, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x33fc);
        EXPECT(gbc.pc(), 0x2e98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0074
        gbc.setState(0x683, 0xad5, 0xf340, 0x9ece, 0xb82b, 0x1b75, 0x0, 0x0);
        gbc.writeMem(0x683, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xad5);
        EXPECT(gbc.pc(), 0x685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0075
        gbc.setState(0x2aa6, 0xbf35, 0x62c0, 0x6883, 0x945d, 0xf07d, 0x0, 0x0);
        gbc.writeMem(0x2aa6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xbf35);
        EXPECT(gbc.pc(), 0x2aa8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0076
        gbc.setState(0xb5f0, 0x65c, 0xd570, 0xfc47, 0xf7b0, 0x48d9, 0x1, 0x1);
        gbc.writeMem(0xb5f0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x65c);
        EXPECT(gbc.pc(), 0xb5f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5f0), 0xcb);
        EXPECT(gbc.readMem(0xb5f1), 0xb4);
        // CB B4 0077
        gbc.setState(0x142b, 0xa9e9, 0x5730, 0x771f, 0xc5e9, 0xaa84, 0x0, 0x0);
        gbc.writeMem(0x142b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa9e9);
        EXPECT(gbc.pc(), 0x142d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0078
        gbc.setState(0xb280, 0xa3fc, 0x22f0, 0xaf6f, 0xbe9, 0x1803, 0x1, 0x0);
        gbc.writeMem(0xb280, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa3fc);
        EXPECT(gbc.pc(), 0xb282);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb280), 0xcb);
        EXPECT(gbc.readMem(0xb281), 0xb4);
        // CB B4 0079
        gbc.setState(0x549c, 0xcb46, 0xf9f0, 0x1f77, 0x28f9, 0xa119, 0x0, 0x1);
        gbc.writeMem(0x549c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xcb46);
        EXPECT(gbc.pc(), 0x549e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 007A
        gbc.setState(0x820f, 0x404f, 0x3120, 0xfab6, 0xa024, 0x1a49, 0x0, 0x0);
        gbc.writeMem(0x820f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x404f);
        EXPECT(gbc.pc(), 0x8211);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x820f), 0xcb);
        EXPECT(gbc.readMem(0x8210), 0xb4);
        // CB B4 007B
        gbc.setState(0x99d1, 0x483e, 0x3800, 0xf772, 0x4360, 0x4c51, 0x1, 0x1);
        gbc.writeMem(0x99d1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x483e);
        EXPECT(gbc.pc(), 0x99d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d1), 0xcb);
        EXPECT(gbc.readMem(0x99d2), 0xb4);
        // CB B4 007C
        gbc.setState(0xbce4, 0x159a, 0x1d40, 0x9eb8, 0xcabc, 0xf7a7, 0x0, 0x0);
        gbc.writeMem(0xbce4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x159a);
        EXPECT(gbc.pc(), 0xbce6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbce4), 0xcb);
        EXPECT(gbc.readMem(0xbce5), 0xb4);
        // CB B4 007D
        gbc.setState(0x979a, 0xad8d, 0x6b50, 0xe5d9, 0xc67a, 0x7f13, 0x1, 0x1);
        gbc.writeMem(0x979a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xad8d);
        EXPECT(gbc.pc(), 0x979c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x979a), 0xcb);
        EXPECT(gbc.readMem(0x979b), 0xb4);
        // CB B4 007E
        gbc.setState(0x8c5e, 0xde48, 0xf350, 0x1ae5, 0x99f2, 0x160c, 0x1, 0x1);
        gbc.writeMem(0x8c5e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xde48);
        EXPECT(gbc.pc(), 0x8c60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c5e), 0xcb);
        EXPECT(gbc.readMem(0x8c5f), 0xb4);
        // CB B4 007F
        gbc.setState(0x40cf, 0xf283, 0x87b0, 0x720b, 0xc948, 0x5cb0, 0x1, 0x1);
        gbc.writeMem(0x40cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xf283);
        EXPECT(gbc.pc(), 0x40d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0080
        gbc.setState(0x63e2, 0x87df, 0x6760, 0x7e58, 0x88a6, 0x5afb, 0x1, 0x1);
        gbc.writeMem(0x63e2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x87df);
        EXPECT(gbc.pc(), 0x63e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0081
        gbc.setState(0x30fe, 0xdd41, 0x4990, 0xca9e, 0xa5bb, 0x20d, 0x1, 0x0);
        gbc.writeMem(0x30fe, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xdd41);
        EXPECT(gbc.pc(), 0x3100);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0082
        gbc.setState(0x454d, 0xf747, 0x2370, 0x151c, 0x1543, 0x91ba, 0x0, 0x0);
        gbc.writeMem(0x454d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf747);
        EXPECT(gbc.pc(), 0x454f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0083
        gbc.setState(0x1294, 0x671c, 0x5750, 0x7058, 0x1db1, 0xa3d1, 0x1, 0x0);
        gbc.writeMem(0x1294, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x671c);
        EXPECT(gbc.pc(), 0x1296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0084
        gbc.setState(0x23de, 0xaffc, 0x630, 0x561f, 0x5d20, 0x4a91, 0x0, 0x1);
        gbc.writeMem(0x23de, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xaffc);
        EXPECT(gbc.pc(), 0x23e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0085
        gbc.setState(0x7da9, 0x6e3e, 0xb580, 0xff21, 0x86a9, 0x5009, 0x0, 0x0);
        gbc.writeMem(0x7da9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x6e3e);
        EXPECT(gbc.pc(), 0x7dab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0086
        gbc.setState(0xab2b, 0x1d96, 0xb640, 0x4a2c, 0x980e, 0x9fab, 0x0, 0x0);
        gbc.writeMem(0xab2b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1d96);
        EXPECT(gbc.pc(), 0xab2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab2b), 0xcb);
        EXPECT(gbc.readMem(0xab2c), 0xb4);
        // CB B4 0087
        gbc.setState(0x40d4, 0xa548, 0x6e40, 0xec0d, 0xb263, 0xd524, 0x0, 0x0);
        gbc.writeMem(0x40d4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xa548);
        EXPECT(gbc.pc(), 0x40d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0089
        gbc.setState(0x9c4a, 0x28d0, 0xbf90, 0xc79f, 0x30f2, 0x64ae, 0x1, 0x1);
        gbc.writeMem(0x9c4a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x28d0);
        EXPECT(gbc.pc(), 0x9c4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c4a), 0xcb);
        EXPECT(gbc.readMem(0x9c4b), 0xb4);
        // CB B4 008A
        gbc.setState(0xbfdf, 0x37c1, 0x84d0, 0x93fd, 0xc48f, 0xbd02, 0x0, 0x1);
        gbc.writeMem(0xbfdf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x37c1);
        EXPECT(gbc.pc(), 0xbfe1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfdf), 0xcb);
        EXPECT(gbc.readMem(0xbfe0), 0xb4);
        // CB B4 008B
        gbc.setState(0xa0b7, 0xb93b, 0xb3a0, 0xe4a, 0xb462, 0x7c2e, 0x1, 0x0);
        gbc.writeMem(0xa0b7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb93b);
        EXPECT(gbc.pc(), 0xa0b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0b7), 0xcb);
        EXPECT(gbc.readMem(0xa0b8), 0xb4);
        // CB B4 008C
        gbc.setState(0x8229, 0x4b45, 0xff10, 0xc582, 0xa19b, 0xf8f9, 0x0, 0x0);
        gbc.writeMem(0x8229, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x4b45);
        EXPECT(gbc.pc(), 0x822b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8229), 0xcb);
        EXPECT(gbc.readMem(0x822a), 0xb4);
        // CB B4 008D
        gbc.setState(0x6e24, 0x26da, 0xc260, 0xf53c, 0xd495, 0x769e, 0x1, 0x1);
        gbc.writeMem(0x6e24, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x26da);
        EXPECT(gbc.pc(), 0x6e26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 008E
        gbc.setState(0xd988, 0x63c4, 0x8da0, 0xd44, 0x1390, 0xa43, 0x1, 0x1);
        gbc.writeMem(0xd988, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x63c4);
        EXPECT(gbc.pc(), 0xd98a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd988), 0xcb);
        EXPECT(gbc.readMem(0xd989), 0xb4);
        // CB B4 008F
        gbc.setState(0x95bd, 0x4a11, 0xd3d0, 0x967d, 0xfc54, 0x8c49, 0x1, 0x0);
        gbc.writeMem(0x95bd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x4a11);
        EXPECT(gbc.pc(), 0x95bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95bd), 0xcb);
        EXPECT(gbc.readMem(0x95be), 0xb4);
        // CB B4 0090
        gbc.setState(0x8086, 0xa777, 0x8d90, 0x7f11, 0x1c96, 0xee81, 0x1, 0x0);
        gbc.writeMem(0x8086, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa777);
        EXPECT(gbc.pc(), 0x8088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8086), 0xcb);
        EXPECT(gbc.readMem(0x8087), 0xb4);
        // CB B4 0092
        gbc.setState(0xbe98, 0xfc01, 0x4340, 0xbc2f, 0x3a91, 0x6abe, 0x0, 0x1);
        gbc.writeMem(0xbe98, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xfc01);
        EXPECT(gbc.pc(), 0xbe9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe98), 0xcb);
        EXPECT(gbc.readMem(0xbe99), 0xb4);
        // CB B4 0093
        gbc.setState(0xa68b, 0x743c, 0x13c0, 0x2995, 0x20c9, 0x77ec, 0x0, 0x0);
        gbc.writeMem(0xa68b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x743c);
        EXPECT(gbc.pc(), 0xa68d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa68b), 0xcb);
        EXPECT(gbc.readMem(0xa68c), 0xb4);
        // CB B4 0095
        gbc.setState(0x875f, 0x66d9, 0x5690, 0x71e3, 0x803c, 0xa84, 0x1, 0x1);
        gbc.writeMem(0x875f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x66d9);
        EXPECT(gbc.pc(), 0x8761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x875f), 0xcb);
        EXPECT(gbc.readMem(0x8760), 0xb4);
        // CB B4 0096
        gbc.setState(0xd069, 0x23da, 0xa8e0, 0x900b, 0x3f69, 0x38ef, 0x1, 0x0);
        gbc.writeMem(0xd069, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x23da);
        EXPECT(gbc.pc(), 0xd06b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd069), 0xcb);
        EXPECT(gbc.readMem(0xd06a), 0xb4);
        // CB B4 0097
        gbc.setState(0x58af, 0x324c, 0xe6d0, 0x3736, 0xbedd, 0x9bfd, 0x0, 0x1);
        gbc.writeMem(0x58af, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x324c);
        EXPECT(gbc.pc(), 0x58b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0098
        gbc.setState(0xb38e, 0xfeab, 0x4630, 0x9b0, 0xd87, 0xaed8, 0x1, 0x0);
        gbc.writeMem(0xb38e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xfeab);
        EXPECT(gbc.pc(), 0xb390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb38e), 0xcb);
        EXPECT(gbc.readMem(0xb38f), 0xb4);
        // CB B4 0099
        gbc.setState(0x4eb0, 0xdbac, 0x91d0, 0xf424, 0x60c9, 0x2a45, 0x1, 0x1);
        gbc.writeMem(0x4eb0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xdbac);
        EXPECT(gbc.pc(), 0x4eb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 009A
        gbc.setState(0xf2a, 0xf3, 0xe390, 0xacc6, 0xb6d8, 0x55ef, 0x0, 0x0);
        gbc.writeMem(0xf2a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf3);
        EXPECT(gbc.pc(), 0xf2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 009B
        gbc.setState(0x4873, 0xa976, 0x7d80, 0xc02b, 0xc298, 0x952f, 0x1, 0x0);
        gbc.writeMem(0x4873, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xa976);
        EXPECT(gbc.pc(), 0x4875);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 009C
        gbc.setState(0xa55f, 0x584b, 0xa0a0, 0x5834, 0xeaa1, 0x4490, 0x0, 0x0);
        gbc.writeMem(0xa55f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x584b);
        EXPECT(gbc.pc(), 0xa561);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa55f), 0xcb);
        EXPECT(gbc.readMem(0xa560), 0xb4);
        // CB B4 009D
        gbc.setState(0xefba, 0x4e8e, 0xd080, 0x92de, 0xf89d, 0xd516, 0x0, 0x1);
        gbc.writeMem(0xefba, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4e8e);
        EXPECT(gbc.pc(), 0xefbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefba), 0xcb);
        EXPECT(gbc.readMem(0xefbb), 0xb4);
        // CB B4 009E
        gbc.setState(0x47f, 0x3687, 0x1940, 0xb107, 0x9de6, 0x23ac, 0x0, 0x0);
        gbc.writeMem(0x47f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x3687);
        EXPECT(gbc.pc(), 0x481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 009F
        gbc.setState(0xbaed, 0x1504, 0x90d0, 0x48f9, 0x1727, 0xbcfe, 0x0, 0x0);
        gbc.writeMem(0xbaed, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1504);
        EXPECT(gbc.pc(), 0xbaef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaed), 0xcb);
        EXPECT(gbc.readMem(0xbaee), 0xb4);
        // CB B4 00A0
        gbc.setState(0x5ce1, 0xba47, 0x5ea0, 0xb765, 0x9016, 0xe25, 0x1, 0x1);
        gbc.writeMem(0x5ce1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xba47);
        EXPECT(gbc.pc(), 0x5ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00A1
        gbc.setState(0xf82, 0x1c5d, 0x9a80, 0x561a, 0xbd86, 0x1c77, 0x1, 0x1);
        gbc.writeMem(0xf82, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1c5d);
        EXPECT(gbc.pc(), 0xf84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00A2
        gbc.setState(0x37dc, 0x90ce, 0x6330, 0xfa0d, 0xd399, 0x5461, 0x1, 0x1);
        gbc.writeMem(0x37dc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x90ce);
        EXPECT(gbc.pc(), 0x37de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00A3
        gbc.setState(0x5f24, 0xac39, 0xbd00, 0xddf, 0x4591, 0xfca1, 0x1, 0x1);
        gbc.writeMem(0x5f24, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xac39);
        EXPECT(gbc.pc(), 0x5f26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00A4
        gbc.setState(0x5300, 0xdd1, 0x7720, 0x78a5, 0x5bb1, 0xbce3, 0x0, 0x1);
        gbc.writeMem(0x5300, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xdd1);
        EXPECT(gbc.pc(), 0x5302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00A5
        gbc.setState(0xc70f, 0x1c40, 0x4ee0, 0xd37e, 0xa9e2, 0x7a0b, 0x0, 0x0);
        gbc.writeMem(0xc70f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x1c40);
        EXPECT(gbc.pc(), 0xc711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc70f), 0xcb);
        EXPECT(gbc.readMem(0xc710), 0xb4);
        // CB B4 00A6
        gbc.setState(0xd62f, 0x473b, 0xc300, 0x9571, 0x3b5, 0x1f9, 0x0, 0x1);
        gbc.writeMem(0xd62f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x473b);
        EXPECT(gbc.pc(), 0xd631);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd62f), 0xcb);
        EXPECT(gbc.readMem(0xd630), 0xb4);
        // CB B4 00A7
        gbc.setState(0xf1e, 0xd15a, 0xe040, 0x7a1f, 0x1f73, 0x9bf7, 0x1, 0x0);
        gbc.writeMem(0xf1e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xd15a);
        EXPECT(gbc.pc(), 0xf20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00A8
        gbc.setState(0xd69b, 0x895b, 0x2640, 0x8baf, 0x1f63, 0x830c, 0x0, 0x1);
        gbc.writeMem(0xd69b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x895b);
        EXPECT(gbc.pc(), 0xd69d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd69b), 0xcb);
        EXPECT(gbc.readMem(0xd69c), 0xb4);
        // CB B4 00AA
        gbc.setState(0xc36a, 0xa81b, 0x1740, 0xb956, 0x616f, 0x95e7, 0x0, 0x1);
        gbc.writeMem(0xc36a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa81b);
        EXPECT(gbc.pc(), 0xc36c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc36a), 0xcb);
        EXPECT(gbc.readMem(0xc36b), 0xb4);
        // CB B4 00AB
        gbc.setState(0xcf38, 0xca42, 0x98c0, 0x9353, 0x5c34, 0x5688, 0x0, 0x0);
        gbc.writeMem(0xcf38, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xca42);
        EXPECT(gbc.pc(), 0xcf3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf38), 0xcb);
        EXPECT(gbc.readMem(0xcf39), 0xb4);
        // CB B4 00AC
        gbc.setState(0x59d0, 0xf2af, 0x8140, 0x464b, 0xd7c3, 0x608d, 0x0, 0x0);
        gbc.writeMem(0x59d0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf2af);
        EXPECT(gbc.pc(), 0x59d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00AD
        gbc.setState(0x3065, 0x52c9, 0xae0, 0xf26d, 0x726d, 0x76b8, 0x1, 0x0);
        gbc.writeMem(0x3065, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x52c9);
        EXPECT(gbc.pc(), 0x3067);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00AE
        gbc.setState(0xda80, 0xd2e8, 0xeb70, 0x8cf1, 0xce65, 0x6f4e, 0x1, 0x1);
        gbc.writeMem(0xda80, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xd2e8);
        EXPECT(gbc.pc(), 0xda82);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda80), 0xcb);
        EXPECT(gbc.readMem(0xda81), 0xb4);
        // CB B4 00AF
        gbc.setState(0x7a6c, 0x5c29, 0x48a0, 0x5a4f, 0x67ff, 0x383b, 0x1, 0x1);
        gbc.writeMem(0x7a6c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x5c29);
        EXPECT(gbc.pc(), 0x7a6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00B0
        gbc.setState(0xcb4f, 0x4518, 0xe1c0, 0x10fb, 0xfdc0, 0x4320, 0x1, 0x0);
        gbc.writeMem(0xcb4f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4518);
        EXPECT(gbc.pc(), 0xcb51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb4f), 0xcb);
        EXPECT(gbc.readMem(0xcb50), 0xb4);
        // CB B4 00B1
        gbc.setState(0xc91b, 0xfef9, 0x1a50, 0x5c3e, 0xf317, 0x3db2, 0x0, 0x0);
        gbc.writeMem(0xc91b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfef9);
        EXPECT(gbc.pc(), 0xc91d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc91b), 0xcb);
        EXPECT(gbc.readMem(0xc91c), 0xb4);
        // CB B4 00B2
        gbc.setState(0x2fc8, 0x830, 0x7c10, 0x2963, 0xd094, 0xfd44, 0x1, 0x0);
        gbc.writeMem(0x2fc8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x830);
        EXPECT(gbc.pc(), 0x2fca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00B3
        gbc.setState(0xd971, 0x51f2, 0x7920, 0x6206, 0x52ed, 0x1448, 0x0, 0x0);
        gbc.writeMem(0xd971, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x51f2);
        EXPECT(gbc.pc(), 0xd973);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd971), 0xcb);
        EXPECT(gbc.readMem(0xd972), 0xb4);
        // CB B4 00B4
        gbc.setState(0x1eb0, 0x8e34, 0x4840, 0x3cd9, 0x874f, 0x4121, 0x0, 0x1);
        gbc.writeMem(0x1eb0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8e34);
        EXPECT(gbc.pc(), 0x1eb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00B5
        gbc.setState(0xe4d8, 0x1c45, 0x4110, 0x1e63, 0xced6, 0x6246, 0x0, 0x1);
        gbc.writeMem(0xe4d8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x1c45);
        EXPECT(gbc.pc(), 0xe4da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4d8), 0xcb);
        EXPECT(gbc.readMem(0xe4d9), 0xb4);
        // CB B4 00B7
        gbc.setState(0x3367, 0xbaeb, 0xf2a0, 0xb21c, 0x2445, 0x4bde, 0x0, 0x1);
        gbc.writeMem(0x3367, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xbaeb);
        EXPECT(gbc.pc(), 0x3369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00B8
        gbc.setState(0x4dd0, 0x9d28, 0xc760, 0x4ced, 0x3346, 0x50c4, 0x1, 0x0);
        gbc.writeMem(0x4dd0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9d28);
        EXPECT(gbc.pc(), 0x4dd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00B9
        gbc.setState(0x7a8e, 0xec31, 0x68b0, 0x7c25, 0xbf64, 0xb056, 0x0, 0x0);
        gbc.writeMem(0x7a8e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xec31);
        EXPECT(gbc.pc(), 0x7a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00BA
        gbc.setState(0x98bc, 0x30ba, 0x7f90, 0xde7f, 0x4018, 0xcd87, 0x0, 0x1);
        gbc.writeMem(0x98bc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x30ba);
        EXPECT(gbc.pc(), 0x98be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98bc), 0xcb);
        EXPECT(gbc.readMem(0x98bd), 0xb4);
        // CB B4 00BB
        gbc.setState(0xe27a, 0x9c94, 0x3560, 0x3950, 0xa339, 0x5921, 0x1, 0x1);
        gbc.writeMem(0xe27a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x9c94);
        EXPECT(gbc.pc(), 0xe27c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe27a), 0xcb);
        EXPECT(gbc.readMem(0xe27b), 0xb4);
        // CB B4 00BC
        gbc.setState(0xb381, 0x9d33, 0x7cf0, 0x40d6, 0xdf62, 0x8e3d, 0x0, 0x1);
        gbc.writeMem(0xb381, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x9d33);
        EXPECT(gbc.pc(), 0xb383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb381), 0xcb);
        EXPECT(gbc.readMem(0xb382), 0xb4);
        // CB B4 00BD
        gbc.setState(0x1bd7, 0x75df, 0xbef0, 0x2601, 0xba3f, 0x1679, 0x1, 0x0);
        gbc.writeMem(0x1bd7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x75df);
        EXPECT(gbc.pc(), 0x1bd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00BE
        gbc.setState(0x8b43, 0xe967, 0xcaf0, 0x2219, 0x9648, 0xb896, 0x1, 0x1);
        gbc.writeMem(0x8b43, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe967);
        EXPECT(gbc.pc(), 0x8b45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b43), 0xcb);
        EXPECT(gbc.readMem(0x8b44), 0xb4);
        // CB B4 00BF
        gbc.setState(0x359a, 0xdd6f, 0x8a50, 0x9953, 0x26a4, 0x7155, 0x0, 0x0);
        gbc.writeMem(0x359a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xdd6f);
        EXPECT(gbc.pc(), 0x359c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00C0
        gbc.setState(0x6a23, 0x132e, 0x2410, 0x657f, 0x763b, 0x96c6, 0x0, 0x1);
        gbc.writeMem(0x6a23, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x132e);
        EXPECT(gbc.pc(), 0x6a25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00C1
        gbc.setState(0x8dfe, 0xd0e8, 0xc720, 0x83c, 0x2ce7, 0x332a, 0x1, 0x1);
        gbc.writeMem(0x8dfe, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd0e8);
        EXPECT(gbc.pc(), 0x8e00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dfe), 0xcb);
        EXPECT(gbc.readMem(0x8dff), 0xb4);
        // CB B4 00C2
        gbc.setState(0x7eb7, 0x4b49, 0x39c0, 0x8760, 0x1451, 0x5adf, 0x1, 0x0);
        gbc.writeMem(0x7eb7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x4b49);
        EXPECT(gbc.pc(), 0x7eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00C3
        gbc.setState(0x1291, 0xe071, 0xa330, 0x784e, 0x7425, 0x57a7, 0x1, 0x0);
        gbc.writeMem(0x1291, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe071);
        EXPECT(gbc.pc(), 0x1293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00C4
        gbc.setState(0xe654, 0x7449, 0x400, 0x3398, 0xe652, 0x6746, 0x0, 0x0);
        gbc.writeMem(0xe654, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7449);
        EXPECT(gbc.pc(), 0xe656);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe654), 0xcb);
        EXPECT(gbc.readMem(0xe655), 0xb4);
        // CB B4 00C5
        gbc.setState(0x84b1, 0x2f3f, 0x2aa0, 0xeb13, 0x455, 0x516a, 0x1, 0x1);
        gbc.writeMem(0x84b1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x2f3f);
        EXPECT(gbc.pc(), 0x84b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b1), 0xcb);
        EXPECT(gbc.readMem(0x84b2), 0xb4);
        // CB B4 00C6
        gbc.setState(0x8c3c, 0xfd0f, 0xc860, 0x8f23, 0x142e, 0x123c, 0x0, 0x1);
        gbc.writeMem(0x8c3c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xfd0f);
        EXPECT(gbc.pc(), 0x8c3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c3c), 0xcb);
        EXPECT(gbc.readMem(0x8c3d), 0xb4);
        // CB B4 00C7
        gbc.setState(0x8d49, 0xba90, 0x4ef0, 0xb8cb, 0x839e, 0x140, 0x1, 0x1);
        gbc.writeMem(0x8d49, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xba90);
        EXPECT(gbc.pc(), 0x8d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d49), 0xcb);
        EXPECT(gbc.readMem(0x8d4a), 0xb4);
        // CB B4 00C8
        gbc.setState(0x3132, 0xd9d9, 0x2350, 0xaffe, 0x8d64, 0xd972, 0x0, 0x1);
        gbc.writeMem(0x3132, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xd9d9);
        EXPECT(gbc.pc(), 0x3134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00CA
        gbc.setState(0xa824, 0xa121, 0x13e0, 0x6b26, 0xd79, 0x3f3f, 0x1, 0x1);
        gbc.writeMem(0xa824, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa121);
        EXPECT(gbc.pc(), 0xa826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa824), 0xcb);
        EXPECT(gbc.readMem(0xa825), 0xb4);
        // CB B4 00CB
        gbc.setState(0x76c, 0xe8d3, 0xa2a0, 0xfc7c, 0x1113, 0xa935, 0x0, 0x1);
        gbc.writeMem(0x76c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xe8d3);
        EXPECT(gbc.pc(), 0x76e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00CC
        gbc.setState(0x2152, 0x88be, 0x8cc0, 0x58b, 0x1830, 0xd21e, 0x0, 0x1);
        gbc.writeMem(0x2152, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x88be);
        EXPECT(gbc.pc(), 0x2154);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00CD
        gbc.setState(0x8a88, 0xedc4, 0x3d60, 0x3053, 0x3416, 0xb8c0, 0x1, 0x1);
        gbc.writeMem(0x8a88, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xedc4);
        EXPECT(gbc.pc(), 0x8a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a88), 0xcb);
        EXPECT(gbc.readMem(0x8a89), 0xb4);
        // CB B4 00CE
        gbc.setState(0x45f4, 0xca62, 0x52a0, 0xc514, 0xca39, 0xc1d4, 0x0, 0x0);
        gbc.writeMem(0x45f4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xca62);
        EXPECT(gbc.pc(), 0x45f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00CF
        gbc.setState(0x7e66, 0x70ef, 0xa7b0, 0x71a1, 0x7650, 0x8618, 0x1, 0x1);
        gbc.writeMem(0x7e66, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x70ef);
        EXPECT(gbc.pc(), 0x7e68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00D0
        gbc.setState(0x7049, 0x2778, 0xe620, 0x80a7, 0x907b, 0x8d73, 0x1, 0x1);
        gbc.writeMem(0x7049, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2778);
        EXPECT(gbc.pc(), 0x704b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00D1
        gbc.setState(0xda7f, 0xa472, 0x25a0, 0xcd88, 0x91de, 0xad09, 0x0, 0x0);
        gbc.writeMem(0xda7f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa472);
        EXPECT(gbc.pc(), 0xda81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda7f), 0xcb);
        EXPECT(gbc.readMem(0xda80), 0xb4);
        // CB B4 00D2
        gbc.setState(0x48c3, 0x6398, 0x2530, 0xa727, 0xe0ee, 0x9cf8, 0x1, 0x1);
        gbc.writeMem(0x48c3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6398);
        EXPECT(gbc.pc(), 0x48c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00D3
        gbc.setState(0x36be, 0x30b1, 0xc3d0, 0x4cee, 0xc8, 0x3ec0, 0x1, 0x1);
        gbc.writeMem(0x36be, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x30b1);
        EXPECT(gbc.pc(), 0x36c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00D4
        gbc.setState(0x5c0c, 0x50fe, 0xd5a0, 0xfb56, 0x36f2, 0x1df5, 0x1, 0x0);
        gbc.writeMem(0x5c0c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x50fe);
        EXPECT(gbc.pc(), 0x5c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00D5
        gbc.setState(0x2e05, 0x8c, 0x9130, 0x50c2, 0x143f, 0x5ce0, 0x0, 0x0);
        gbc.writeMem(0x2e05, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x8c);
        EXPECT(gbc.pc(), 0x2e07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00D6
        gbc.setState(0x2de1, 0xdfd9, 0x1c40, 0x85e0, 0x7050, 0x5e2a, 0x1, 0x1);
        gbc.writeMem(0x2de1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xdfd9);
        EXPECT(gbc.pc(), 0x2de3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00D7
        gbc.setState(0xdccd, 0xe008, 0xd070, 0xbb52, 0x8693, 0x914e, 0x0, 0x1);
        gbc.writeMem(0xdccd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe008);
        EXPECT(gbc.pc(), 0xdccf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdccd), 0xcb);
        EXPECT(gbc.readMem(0xdcce), 0xb4);
        // CB B4 00D8
        gbc.setState(0x98b6, 0x743b, 0xbca0, 0x53b6, 0xe06a, 0x4e3d, 0x0, 0x0);
        gbc.writeMem(0x98b6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x743b);
        EXPECT(gbc.pc(), 0x98b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b6), 0xcb);
        EXPECT(gbc.readMem(0x98b7), 0xb4);
        // CB B4 00D9
        gbc.setState(0x1ed7, 0x654a, 0xe950, 0x3a3e, 0xb597, 0x7cf8, 0x1, 0x0);
        gbc.writeMem(0x1ed7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x654a);
        EXPECT(gbc.pc(), 0x1ed9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00DA
        gbc.setState(0xaa7d, 0xfc4e, 0x64a0, 0x5a21, 0x68f2, 0x43c3, 0x1, 0x0);
        gbc.writeMem(0xaa7d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfc4e);
        EXPECT(gbc.pc(), 0xaa7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa7d), 0xcb);
        EXPECT(gbc.readMem(0xaa7e), 0xb4);
        // CB B4 00DB
        gbc.setState(0xe279, 0xdff5, 0xba0, 0x3c34, 0x9b3b, 0x4ecd, 0x0, 0x1);
        gbc.writeMem(0xe279, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xdff5);
        EXPECT(gbc.pc(), 0xe27b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe279), 0xcb);
        EXPECT(gbc.readMem(0xe27a), 0xb4);
        // CB B4 00DC
        gbc.setState(0x6fc5, 0xc452, 0x3100, 0x6c7e, 0xbcd1, 0x8c21, 0x1, 0x1);
        gbc.writeMem(0x6fc5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xc452);
        EXPECT(gbc.pc(), 0x6fc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00DD
        gbc.setState(0xc1b6, 0xf406, 0x29c0, 0xc376, 0x8096, 0x28b4, 0x0, 0x1);
        gbc.writeMem(0xc1b6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xf406);
        EXPECT(gbc.pc(), 0xc1b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b6), 0xcb);
        EXPECT(gbc.readMem(0xc1b7), 0xb4);
        // CB B4 00DE
        gbc.setState(0x7623, 0x9e05, 0xff50, 0x54b5, 0x4bde, 0xf8c5, 0x1, 0x1);
        gbc.writeMem(0x7623, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9e05);
        EXPECT(gbc.pc(), 0x7625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00DF
        gbc.setState(0xe101, 0xa9d2, 0x5b00, 0x1e6d, 0xea2c, 0x49f0, 0x1, 0x0);
        gbc.writeMem(0xe101, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa9d2);
        EXPECT(gbc.pc(), 0xe103);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe101), 0xcb);
        EXPECT(gbc.readMem(0xe102), 0xb4);
        // CB B4 00E0
        gbc.setState(0x9b0b, 0xcebb, 0x8b80, 0x151f, 0x1070, 0x2de5, 0x0, 0x1);
        gbc.writeMem(0x9b0b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xcebb);
        EXPECT(gbc.pc(), 0x9b0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b0b), 0xcb);
        EXPECT(gbc.readMem(0x9b0c), 0xb4);
        // CB B4 00E1
        gbc.setState(0xe90b, 0x2f2f, 0xa010, 0xc0d6, 0x59c0, 0xea9c, 0x1, 0x0);
        gbc.writeMem(0xe90b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x2f2f);
        EXPECT(gbc.pc(), 0xe90d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe90b), 0xcb);
        EXPECT(gbc.readMem(0xe90c), 0xb4);
        // CB B4 00E3
        gbc.setState(0x2734, 0xcbfd, 0xcea0, 0x1796, 0x3f61, 0x6004, 0x1, 0x0);
        gbc.writeMem(0x2734, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xcbfd);
        EXPECT(gbc.pc(), 0x2736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00E5
        gbc.setState(0x2b9, 0x9e5e, 0x5f0, 0x8b4d, 0x59c5, 0xf7fe, 0x1, 0x1);
        gbc.writeMem(0x2b9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x9e5e);
        EXPECT(gbc.pc(), 0x2bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00E6
        gbc.setState(0xc80d, 0xf9e9, 0xb610, 0xca68, 0xbce2, 0x4fdd, 0x0, 0x0);
        gbc.writeMem(0xc80d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xf9e9);
        EXPECT(gbc.pc(), 0xc80f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc80d), 0xcb);
        EXPECT(gbc.readMem(0xc80e), 0xb4);
        // CB B4 00E7
        gbc.setState(0x97d9, 0x6a3d, 0x5ae0, 0xf8a1, 0x6bb7, 0xe164, 0x1, 0x0);
        gbc.writeMem(0x97d9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6a3d);
        EXPECT(gbc.pc(), 0x97db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97d9), 0xcb);
        EXPECT(gbc.readMem(0x97da), 0xb4);
        // CB B4 00E8
        gbc.setState(0x9157, 0xe66f, 0x8900, 0x8cd9, 0x4c41, 0x8ec4, 0x1, 0x0);
        gbc.writeMem(0x9157, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xe66f);
        EXPECT(gbc.pc(), 0x9159);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9157), 0xcb);
        EXPECT(gbc.readMem(0x9158), 0xb4);
        // CB B4 00EA
        gbc.setState(0x3327, 0xae3a, 0xe000, 0x4c79, 0xf8d, 0x59c7, 0x0, 0x0);
        gbc.writeMem(0x3327, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xae3a);
        EXPECT(gbc.pc(), 0x3329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00EB
        gbc.setState(0xc657, 0x5bed, 0x8d90, 0xfc1b, 0xcc34, 0x794a, 0x0, 0x0);
        gbc.writeMem(0xc657, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x5bed);
        EXPECT(gbc.pc(), 0xc659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc657), 0xcb);
        EXPECT(gbc.readMem(0xc658), 0xb4);
        // CB B4 00EC
        gbc.setState(0x40ee, 0xae7e, 0xb90, 0x9333, 0x4ed4, 0x7cc3, 0x0, 0x0);
        gbc.writeMem(0x40ee, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xae7e);
        EXPECT(gbc.pc(), 0x40f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00ED
        gbc.setState(0x5da3, 0x95ac, 0x6210, 0x4ba7, 0xa8f, 0x9cfc, 0x0, 0x0);
        gbc.writeMem(0x5da3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x95ac);
        EXPECT(gbc.pc(), 0x5da5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00EE
        gbc.setState(0xe614, 0xa0dd, 0x9f0, 0xce63, 0xe4e4, 0xea7f, 0x1, 0x0);
        gbc.writeMem(0xe614, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xa0dd);
        EXPECT(gbc.pc(), 0xe616);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe614), 0xcb);
        EXPECT(gbc.readMem(0xe615), 0xb4);
        // CB B4 00F0
        gbc.setState(0x1265, 0x3a79, 0x4080, 0x9f66, 0x9fa3, 0xb85e, 0x0, 0x1);
        gbc.writeMem(0x1265, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x3a79);
        EXPECT(gbc.pc(), 0x1267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00F1
        gbc.setState(0x128f, 0xb822, 0x7880, 0xded7, 0xe8b7, 0xb4c1, 0x1, 0x1);
        gbc.writeMem(0x128f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb822);
        EXPECT(gbc.pc(), 0x1291);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00F2
        gbc.setState(0xd94a, 0xcd78, 0xf8a0, 0x8868, 0x4346, 0xd343, 0x1, 0x1);
        gbc.writeMem(0xd94a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xcd78);
        EXPECT(gbc.pc(), 0xd94c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd94a), 0xcb);
        EXPECT(gbc.readMem(0xd94b), 0xb4);
        // CB B4 00F3
        gbc.setState(0x5a1d, 0x63d0, 0x3740, 0xc960, 0x9e82, 0xb226, 0x0, 0x0);
        gbc.writeMem(0x5a1d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x63d0);
        EXPECT(gbc.pc(), 0x5a1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00F4
        gbc.setState(0x2a1c, 0x236f, 0x6b60, 0xe3da, 0xf55f, 0xddde, 0x1, 0x0);
        gbc.writeMem(0x2a1c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x236f);
        EXPECT(gbc.pc(), 0x2a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00F5
        gbc.setState(0xc879, 0x316d, 0x1950, 0xb1a6, 0xdaaf, 0x3e, 0x1, 0x1);
        gbc.writeMem(0xc879, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x316d);
        EXPECT(gbc.pc(), 0xc87b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc879), 0xcb);
        EXPECT(gbc.readMem(0xc87a), 0xb4);
        // CB B4 00F6
        gbc.setState(0x7db9, 0xdc75, 0x6380, 0x7b46, 0x9c14, 0x9809, 0x1, 0x0);
        gbc.writeMem(0x7db9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xdc75);
        EXPECT(gbc.pc(), 0x7dbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00F7
        gbc.setState(0x363c, 0xb1de, 0x6b80, 0x65, 0x1599, 0x5e23, 0x1, 0x0);
        gbc.writeMem(0x363c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb1de);
        EXPECT(gbc.pc(), 0x363e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00F8
        gbc.setState(0x26b5, 0x91d5, 0xfc10, 0xb7df, 0x520a, 0xf9a8, 0x1, 0x0);
        gbc.writeMem(0x26b5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x91d5);
        EXPECT(gbc.pc(), 0x26b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00FA
        gbc.setState(0xa29, 0x301a, 0x8620, 0x9cec, 0x24f4, 0x2b67, 0x0, 0x0);
        gbc.writeMem(0xa29, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x301a);
        EXPECT(gbc.pc(), 0xa2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 00FB
        gbc.setState(0x4ce, 0xc99, 0x40f0, 0xb09f, 0x8c4f, 0x7ffd, 0x0, 0x1);
        gbc.writeMem(0x4ce, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xc99);
        EXPECT(gbc.pc(), 0x4d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00FC
        gbc.setState(0xa9f6, 0x5a50, 0x8fe0, 0x38a3, 0xe888, 0xc181, 0x0, 0x1);
        gbc.writeMem(0xa9f6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5a50);
        EXPECT(gbc.pc(), 0xa9f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9f6), 0xcb);
        EXPECT(gbc.readMem(0xa9f7), 0xb4);
        // CB B4 00FD
        gbc.setState(0x54b2, 0xad62, 0x5f0, 0xb2b6, 0x8ff7, 0xffad, 0x1, 0x0);
        gbc.writeMem(0x54b2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xad62);
        EXPECT(gbc.pc(), 0x54b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 00FE
        gbc.setState(0xeb07, 0x3cbc, 0xe160, 0xec4a, 0x733e, 0xc301, 0x1, 0x0);
        gbc.writeMem(0xeb07, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3cbc);
        EXPECT(gbc.pc(), 0xeb09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb07), 0xcb);
        EXPECT(gbc.readMem(0xeb08), 0xb4);
        // CB B4 00FF
        gbc.setState(0x1e14, 0x374c, 0x42e0, 0x4d07, 0x671a, 0xe327, 0x0, 0x1);
        gbc.writeMem(0x1e14, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x374c);
        EXPECT(gbc.pc(), 0x1e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0100
        gbc.setState(0x5f56, 0x90e9, 0x7f70, 0xeed7, 0xb106, 0xc218, 0x0, 0x0);
        gbc.writeMem(0x5f56, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x90e9);
        EXPECT(gbc.pc(), 0x5f58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0101
        gbc.setState(0x6a4d, 0xac76, 0x57a0, 0xaae, 0xdd73, 0xcb87, 0x0, 0x0);
        gbc.writeMem(0x6a4d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xac76);
        EXPECT(gbc.pc(), 0x6a4f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0102
        gbc.setState(0xc35c, 0x62dd, 0xf790, 0xe8a, 0x7d47, 0x9381, 0x1, 0x0);
        gbc.writeMem(0xc35c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x62dd);
        EXPECT(gbc.pc(), 0xc35e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc35c), 0xcb);
        EXPECT(gbc.readMem(0xc35d), 0xb4);
        // CB B4 0103
        gbc.setState(0x3cde, 0x94e2, 0x1ed0, 0x2530, 0xac4f, 0xb2ce, 0x1, 0x1);
        gbc.writeMem(0x3cde, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x94e2);
        EXPECT(gbc.pc(), 0x3ce0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0104
        gbc.setState(0xbd9e, 0xfdda, 0xe0e0, 0x1cc3, 0xb188, 0xc333, 0x1, 0x1);
        gbc.writeMem(0xbd9e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfdda);
        EXPECT(gbc.pc(), 0xbda0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd9e), 0xcb);
        EXPECT(gbc.readMem(0xbd9f), 0xb4);
        // CB B4 0105
        gbc.setState(0x26dd, 0x7913, 0xc1a0, 0xce51, 0x3fc1, 0x8fa5, 0x1, 0x0);
        gbc.writeMem(0x26dd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7913);
        EXPECT(gbc.pc(), 0x26df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0106
        gbc.setState(0x9c0e, 0x2268, 0xbac0, 0xac9b, 0x887f, 0x4f22, 0x1, 0x1);
        gbc.writeMem(0x9c0e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x2268);
        EXPECT(gbc.pc(), 0x9c10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c0e), 0xcb);
        EXPECT(gbc.readMem(0x9c0f), 0xb4);
        // CB B4 0107
        gbc.setState(0xbd12, 0x6bac, 0xe0, 0xcb95, 0x3c39, 0x54d6, 0x1, 0x0);
        gbc.writeMem(0xbd12, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x6bac);
        EXPECT(gbc.pc(), 0xbd14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd12), 0xcb);
        EXPECT(gbc.readMem(0xbd13), 0xb4);
        // CB B4 0108
        gbc.setState(0xb7db, 0x6cce, 0x5140, 0x1530, 0xba9e, 0xe5ae, 0x0, 0x1);
        gbc.writeMem(0xb7db, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x6cce);
        EXPECT(gbc.pc(), 0xb7dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7db), 0xcb);
        EXPECT(gbc.readMem(0xb7dc), 0xb4);
        // CB B4 0109
        gbc.setState(0xeea6, 0xaaa6, 0x5730, 0xb259, 0x535b, 0x1268, 0x1, 0x1);
        gbc.writeMem(0xeea6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xaaa6);
        EXPECT(gbc.pc(), 0xeea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea6), 0xcb);
        EXPECT(gbc.readMem(0xeea7), 0xb4);
        // CB B4 010A
        gbc.setState(0x8044, 0xeeda, 0xdf60, 0xd860, 0xe8a1, 0x6312, 0x1, 0x1);
        gbc.writeMem(0x8044, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xeeda);
        EXPECT(gbc.pc(), 0x8046);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8044), 0xcb);
        EXPECT(gbc.readMem(0x8045), 0xb4);
        // CB B4 010B
        gbc.setState(0x890d, 0xf844, 0xb530, 0x6a94, 0x1ad0, 0x57cc, 0x1, 0x0);
        gbc.writeMem(0x890d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf844);
        EXPECT(gbc.pc(), 0x890f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x890d), 0xcb);
        EXPECT(gbc.readMem(0x890e), 0xb4);
        // CB B4 010C
        gbc.setState(0xb614, 0x32ae, 0xfc10, 0xe4b7, 0xe951, 0xf5ac, 0x0, 0x1);
        gbc.writeMem(0xb614, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x32ae);
        EXPECT(gbc.pc(), 0xb616);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb614), 0xcb);
        EXPECT(gbc.readMem(0xb615), 0xb4);
        // CB B4 010D
        gbc.setState(0x7fe5, 0xd062, 0x4830, 0x7ec2, 0x4f00, 0xd300, 0x0, 0x1);
        gbc.writeMem(0x7fe5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd062);
        EXPECT(gbc.pc(), 0x7fe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 010E
        gbc.setState(0x951b, 0xef1c, 0x8dc0, 0xcca2, 0x6adf, 0x2188, 0x1, 0x1);
        gbc.writeMem(0x951b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xef1c);
        EXPECT(gbc.pc(), 0x951d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x951b), 0xcb);
        EXPECT(gbc.readMem(0x951c), 0xb4);
        // CB B4 010F
        gbc.setState(0x7d75, 0x9548, 0xab80, 0x77e0, 0xda0f, 0x9c7a, 0x1, 0x0);
        gbc.writeMem(0x7d75, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9548);
        EXPECT(gbc.pc(), 0x7d77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0111
        gbc.setState(0x484d, 0x762c, 0x62f0, 0xc11b, 0xbad3, 0xa1d8, 0x0, 0x1);
        gbc.writeMem(0x484d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x762c);
        EXPECT(gbc.pc(), 0x484f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0112
        gbc.setState(0xb133, 0xdcc, 0x89f0, 0xf785, 0x43c2, 0x37cc, 0x1, 0x1);
        gbc.writeMem(0xb133, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xdcc);
        EXPECT(gbc.pc(), 0xb135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb133), 0xcb);
        EXPECT(gbc.readMem(0xb134), 0xb4);
        // CB B4 0113
        gbc.setState(0xc38f, 0xa726, 0x7e0, 0xfdf5, 0xa40d, 0x8fb6, 0x1, 0x0);
        gbc.writeMem(0xc38f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa726);
        EXPECT(gbc.pc(), 0xc391);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc38f), 0xcb);
        EXPECT(gbc.readMem(0xc390), 0xb4);
        // CB B4 0115
        gbc.setState(0xb44, 0x4321, 0xe210, 0xf4b4, 0x594a, 0xa0e8, 0x1, 0x0);
        gbc.writeMem(0xb44, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4321);
        EXPECT(gbc.pc(), 0xb46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0116
        gbc.setState(0xde5b, 0x66f, 0xa230, 0x96df, 0xa13d, 0x4ddf, 0x0, 0x0);
        gbc.writeMem(0xde5b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x66f);
        EXPECT(gbc.pc(), 0xde5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde5b), 0xcb);
        EXPECT(gbc.readMem(0xde5c), 0xb4);
        // CB B4 0117
        gbc.setState(0x46de, 0xe561, 0xa420, 0x2d41, 0x4dd3, 0xfa36, 0x0, 0x1);
        gbc.writeMem(0x46de, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe561);
        EXPECT(gbc.pc(), 0x46e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0118
        gbc.setState(0x1269, 0x58c5, 0xa0, 0x37e1, 0xa3f2, 0xf6fc, 0x0, 0x1);
        gbc.writeMem(0x1269, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x58c5);
        EXPECT(gbc.pc(), 0x126b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0119
        gbc.setState(0xb84c, 0x354d, 0xd830, 0xfd9b, 0xba4e, 0x4f75, 0x1, 0x1);
        gbc.writeMem(0xb84c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x354d);
        EXPECT(gbc.pc(), 0xb84e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb84c), 0xcb);
        EXPECT(gbc.readMem(0xb84d), 0xb4);
        // CB B4 011A
        gbc.setState(0xaa59, 0x2b0e, 0x45c0, 0xdf4b, 0x4e2e, 0x46f0, 0x0, 0x1);
        gbc.writeMem(0xaa59, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2b0e);
        EXPECT(gbc.pc(), 0xaa5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa59), 0xcb);
        EXPECT(gbc.readMem(0xaa5a), 0xb4);
        // CB B4 011B
        gbc.setState(0xd54e, 0xcacb, 0x6290, 0x3d94, 0xc2cc, 0xfc33, 0x0, 0x1);
        gbc.writeMem(0xd54e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcacb);
        EXPECT(gbc.pc(), 0xd550);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd54e), 0xcb);
        EXPECT(gbc.readMem(0xd54f), 0xb4);
        // CB B4 011C
        gbc.setState(0xa29f, 0x39ed, 0x1ee0, 0xda32, 0x8d7a, 0xc64f, 0x0, 0x1);
        gbc.writeMem(0xa29f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x39ed);
        EXPECT(gbc.pc(), 0xa2a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa29f), 0xcb);
        EXPECT(gbc.readMem(0xa2a0), 0xb4);
        // CB B4 011D
        gbc.setState(0xc9d3, 0x5324, 0x7570, 0x8d51, 0x76fb, 0x5152, 0x1, 0x0);
        gbc.writeMem(0xc9d3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x5324);
        EXPECT(gbc.pc(), 0xc9d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9d3), 0xcb);
        EXPECT(gbc.readMem(0xc9d4), 0xb4);
        // CB B4 011E
        gbc.setState(0x9f1c, 0xb471, 0x9ac0, 0x6843, 0xc2b1, 0xa568, 0x1, 0x0);
        gbc.writeMem(0x9f1c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb471);
        EXPECT(gbc.pc(), 0x9f1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f1c), 0xcb);
        EXPECT(gbc.readMem(0x9f1d), 0xb4);
        // CB B4 0120
        gbc.setState(0x20d7, 0x12de, 0xb800, 0x1281, 0xf7de, 0x6881, 0x1, 0x1);
        gbc.writeMem(0x20d7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x12de);
        EXPECT(gbc.pc(), 0x20d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0121
        gbc.setState(0xa9cb, 0x1063, 0x21c0, 0xaa5a, 0xacd2, 0xe94a, 0x0, 0x1);
        gbc.writeMem(0xa9cb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x1063);
        EXPECT(gbc.pc(), 0xa9cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9cb), 0xcb);
        EXPECT(gbc.readMem(0xa9cc), 0xb4);
        // CB B4 0122
        gbc.setState(0xe9d1, 0xe89c, 0x54f0, 0xa721, 0x715, 0x9818, 0x1, 0x1);
        gbc.writeMem(0xe9d1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xe89c);
        EXPECT(gbc.pc(), 0xe9d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d1), 0xcb);
        EXPECT(gbc.readMem(0xe9d2), 0xb4);
        // CB B4 0123
        gbc.setState(0xa7a1, 0xc037, 0x8f40, 0x6e18, 0xe16a, 0x736b, 0x1, 0x1);
        gbc.writeMem(0xa7a1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc037);
        EXPECT(gbc.pc(), 0xa7a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7a1), 0xcb);
        EXPECT(gbc.readMem(0xa7a2), 0xb4);
        // CB B4 0124
        gbc.setState(0x70b7, 0xb041, 0xc10, 0xe0aa, 0xb544, 0x3ebd, 0x1, 0x0);
        gbc.writeMem(0x70b7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb041);
        EXPECT(gbc.pc(), 0x70b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0125
        gbc.setState(0x1662, 0xed6a, 0x2ac0, 0xfa10, 0x4ca0, 0xf441, 0x1, 0x0);
        gbc.writeMem(0x1662, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xed6a);
        EXPECT(gbc.pc(), 0x1664);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0126
        gbc.setState(0xe272, 0x9bbb, 0xd4c0, 0xd144, 0xf3af, 0x3451, 0x1, 0x0);
        gbc.writeMem(0xe272, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x9bbb);
        EXPECT(gbc.pc(), 0xe274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe272), 0xcb);
        EXPECT(gbc.readMem(0xe273), 0xb4);
        // CB B4 0127
        gbc.setState(0xc36d, 0xd262, 0xc360, 0xb458, 0xc8f2, 0xb86, 0x1, 0x0);
        gbc.writeMem(0xc36d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xd262);
        EXPECT(gbc.pc(), 0xc36f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc36d), 0xcb);
        EXPECT(gbc.readMem(0xc36e), 0xb4);
        // CB B4 0128
        gbc.setState(0x9d5f, 0x78c8, 0xa50, 0xe779, 0x5708, 0x3a87, 0x1, 0x0);
        gbc.writeMem(0x9d5f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x78c8);
        EXPECT(gbc.pc(), 0x9d61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d5f), 0xcb);
        EXPECT(gbc.readMem(0x9d60), 0xb4);
        // CB B4 0129
        gbc.setState(0x2902, 0xb370, 0xb230, 0xf798, 0x1c5b, 0x96f, 0x1, 0x1);
        gbc.writeMem(0x2902, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb370);
        EXPECT(gbc.pc(), 0x2904);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 012A
        gbc.setState(0x80ed, 0x448, 0x4f40, 0xcec8, 0x9472, 0x9f67, 0x1, 0x0);
        gbc.writeMem(0x80ed, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x448);
        EXPECT(gbc.pc(), 0x80ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ed), 0xcb);
        EXPECT(gbc.readMem(0x80ee), 0xb4);
        // CB B4 012B
        gbc.setState(0xd047, 0x8b98, 0xf150, 0xae00, 0x6c1, 0x8d43, 0x0, 0x0);
        gbc.writeMem(0xd047, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8b98);
        EXPECT(gbc.pc(), 0xd049);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd047), 0xcb);
        EXPECT(gbc.readMem(0xd048), 0xb4);
        // CB B4 012C
        gbc.setState(0x9c28, 0x4fff, 0xd0e0, 0xb09a, 0x755, 0x36d2, 0x1, 0x0);
        gbc.writeMem(0x9c28, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4fff);
        EXPECT(gbc.pc(), 0x9c2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c28), 0xcb);
        EXPECT(gbc.readMem(0x9c29), 0xb4);
        // CB B4 012D
        gbc.setState(0x2a4a, 0x6b24, 0x2170, 0x3367, 0xdd99, 0x5b7b, 0x1, 0x1);
        gbc.writeMem(0x2a4a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x6b24);
        EXPECT(gbc.pc(), 0x2a4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 012E
        gbc.setState(0xabb4, 0xd3b3, 0x22d0, 0xc2f6, 0x49a1, 0xefc, 0x1, 0x1);
        gbc.writeMem(0xabb4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xd3b3);
        EXPECT(gbc.pc(), 0xabb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabb4), 0xcb);
        EXPECT(gbc.readMem(0xabb5), 0xb4);
        // CB B4 012F
        gbc.setState(0x5f1e, 0xd283, 0xda90, 0x8b2b, 0x4ca9, 0x4977, 0x0, 0x0);
        gbc.writeMem(0x5f1e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xd283);
        EXPECT(gbc.pc(), 0x5f20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0130
        gbc.setState(0x529c, 0x8e31, 0xb170, 0x60a, 0x932f, 0x91a9, 0x0, 0x0);
        gbc.writeMem(0x529c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x8e31);
        EXPECT(gbc.pc(), 0x529e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0131
        gbc.setState(0xc5fd, 0xdc78, 0x36f0, 0x8d05, 0xbc3e, 0x56f9, 0x0, 0x1);
        gbc.writeMem(0xc5fd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xdc78);
        EXPECT(gbc.pc(), 0xc5ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5fd), 0xcb);
        EXPECT(gbc.readMem(0xc5fe), 0xb4);
        // CB B4 0132
        gbc.setState(0x561f, 0x3920, 0xcc90, 0x3007, 0xbcdb, 0x58d7, 0x1, 0x0);
        gbc.writeMem(0x561f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x3920);
        EXPECT(gbc.pc(), 0x5621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0133
        gbc.setState(0xec3, 0x4054, 0xa30, 0xa442, 0xe415, 0xa62, 0x0, 0x0);
        gbc.writeMem(0xec3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x4054);
        EXPECT(gbc.pc(), 0xec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0134
        gbc.setState(0x13f, 0x3671, 0xdba0, 0xdd07, 0xa536, 0xbfa8, 0x1, 0x0);
        gbc.writeMem(0x13f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3671);
        EXPECT(gbc.pc(), 0x141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0135
        gbc.setState(0xe3c, 0x1f32, 0xf940, 0xe7e5, 0x6d89, 0xe60c, 0x0, 0x0);
        gbc.writeMem(0xe3c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1f32);
        EXPECT(gbc.pc(), 0xe3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0136
        gbc.setState(0x2282, 0x8c25, 0x2580, 0xd334, 0x4310, 0x5472, 0x1, 0x1);
        gbc.writeMem(0x2282, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8c25);
        EXPECT(gbc.pc(), 0x2284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0137
        gbc.setState(0xe4d2, 0x1fae, 0xad30, 0x1091, 0xc419, 0x4954, 0x1, 0x0);
        gbc.writeMem(0xe4d2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x1fae);
        EXPECT(gbc.pc(), 0xe4d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4d2), 0xcb);
        EXPECT(gbc.readMem(0xe4d3), 0xb4);
        // CB B4 0138
        gbc.setState(0x7d21, 0x1fe9, 0xe7e0, 0x4ac4, 0xd668, 0x8321, 0x1, 0x1);
        gbc.writeMem(0x7d21, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x1fe9);
        EXPECT(gbc.pc(), 0x7d23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0139
        gbc.setState(0x8cfb, 0x3884, 0x8da0, 0x3ddd, 0x1978, 0xa104, 0x1, 0x0);
        gbc.writeMem(0x8cfb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x3884);
        EXPECT(gbc.pc(), 0x8cfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cfb), 0xcb);
        EXPECT(gbc.readMem(0x8cfc), 0xb4);
        // CB B4 013A
        gbc.setState(0x982c, 0xb04, 0x2b20, 0x8d7f, 0x156f, 0x557d, 0x1, 0x1);
        gbc.writeMem(0x982c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb04);
        EXPECT(gbc.pc(), 0x982e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x982c), 0xcb);
        EXPECT(gbc.readMem(0x982d), 0xb4);
        // CB B4 013B
        gbc.setState(0x31c9, 0x8d96, 0xfab0, 0x974f, 0x3b23, 0x31dd, 0x1, 0x1);
        gbc.writeMem(0x31c9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x8d96);
        EXPECT(gbc.pc(), 0x31cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 013C
        gbc.setState(0xd8cf, 0x9611, 0x63e0, 0x4a6a, 0xeb02, 0x61c9, 0x1, 0x0);
        gbc.writeMem(0xd8cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9611);
        EXPECT(gbc.pc(), 0xd8d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8cf), 0xcb);
        EXPECT(gbc.readMem(0xd8d0), 0xb4);
        // CB B4 013D
        gbc.setState(0x4bad, 0xd860, 0xd9c0, 0xe1df, 0xfd75, 0xc256, 0x0, 0x1);
        gbc.writeMem(0x4bad, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xd860);
        EXPECT(gbc.pc(), 0x4baf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 013E
        gbc.setState(0xabe8, 0x1368, 0x2a0, 0x1ceb, 0xf97, 0x50a6, 0x1, 0x1);
        gbc.writeMem(0xabe8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1368);
        EXPECT(gbc.pc(), 0xabea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabe8), 0xcb);
        EXPECT(gbc.readMem(0xabe9), 0xb4);
        // CB B4 013F
        gbc.setState(0x7259, 0x4240, 0x8220, 0x90a7, 0xfbce, 0xdfa4, 0x0, 0x0);
        gbc.writeMem(0x7259, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4240);
        EXPECT(gbc.pc(), 0x725b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0140
        gbc.setState(0x602e, 0x71cd, 0x2860, 0x9992, 0x1142, 0xe118, 0x1, 0x0);
        gbc.writeMem(0x602e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x71cd);
        EXPECT(gbc.pc(), 0x6030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0141
        gbc.setState(0xee73, 0x3068, 0xb040, 0x1735, 0x5435, 0x7509, 0x0, 0x0);
        gbc.writeMem(0xee73, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x3068);
        EXPECT(gbc.pc(), 0xee75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee73), 0xcb);
        EXPECT(gbc.readMem(0xee74), 0xb4);
        // CB B4 0142
        gbc.setState(0x48f, 0xb102, 0x9410, 0x5d69, 0x1ccc, 0x1ee7, 0x0, 0x0);
        gbc.writeMem(0x48f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xb102);
        EXPECT(gbc.pc(), 0x491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0143
        gbc.setState(0x4b2c, 0x4263, 0x28c0, 0x8da2, 0x8aa9, 0xf20b, 0x1, 0x1);
        gbc.writeMem(0x4b2c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x4263);
        EXPECT(gbc.pc(), 0x4b2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0144
        gbc.setState(0xac59, 0xfba7, 0xd830, 0x646b, 0xc989, 0xf932, 0x1, 0x1);
        gbc.writeMem(0xac59, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfba7);
        EXPECT(gbc.pc(), 0xac5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac59), 0xcb);
        EXPECT(gbc.readMem(0xac5a), 0xb4);
        // CB B4 0145
        gbc.setState(0xb7e, 0xa03c, 0xc470, 0x2ece, 0xf60c, 0x8190, 0x0, 0x0);
        gbc.writeMem(0xb7e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa03c);
        EXPECT(gbc.pc(), 0xb80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0146
        gbc.setState(0xeadb, 0xdfb6, 0xea0, 0x3e60, 0xd3a4, 0xfe66, 0x0, 0x1);
        gbc.writeMem(0xeadb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdfb6);
        EXPECT(gbc.pc(), 0xeadd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeadb), 0xcb);
        EXPECT(gbc.readMem(0xeadc), 0xb4);
        // CB B4 0147
        gbc.setState(0xc145, 0x3918, 0x38d0, 0xeb09, 0xf994, 0xe951, 0x1, 0x1);
        gbc.writeMem(0xc145, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3918);
        EXPECT(gbc.pc(), 0xc147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc145), 0xcb);
        EXPECT(gbc.readMem(0xc146), 0xb4);
        // CB B4 0148
        gbc.setState(0x9205, 0x8e7e, 0x2770, 0x61c8, 0xf6ee, 0x4ab5, 0x1, 0x1);
        gbc.writeMem(0x9205, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8e7e);
        EXPECT(gbc.pc(), 0x9207);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9205), 0xcb);
        EXPECT(gbc.readMem(0x9206), 0xb4);
        // CB B4 0149
        gbc.setState(0x9a2e, 0x6639, 0x1a30, 0x5a6f, 0x8a42, 0x1026, 0x1, 0x0);
        gbc.writeMem(0x9a2e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6639);
        EXPECT(gbc.pc(), 0x9a30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a2e), 0xcb);
        EXPECT(gbc.readMem(0x9a2f), 0xb4);
        // CB B4 014A
        gbc.setState(0x7427, 0xc56, 0x6120, 0x311b, 0x85c4, 0x9238, 0x1, 0x1);
        gbc.writeMem(0x7427, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc56);
        EXPECT(gbc.pc(), 0x7429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 014B
        gbc.setState(0xa3bc, 0x3e1b, 0x4350, 0x4a03, 0x6a7, 0xc737, 0x0, 0x1);
        gbc.writeMem(0xa3bc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x3e1b);
        EXPECT(gbc.pc(), 0xa3be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3bc), 0xcb);
        EXPECT(gbc.readMem(0xa3bd), 0xb4);
        // CB B4 014C
        gbc.setState(0x6189, 0xd0dc, 0xc00, 0xd382, 0xbec6, 0x35d6, 0x0, 0x0);
        gbc.writeMem(0x6189, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xd0dc);
        EXPECT(gbc.pc(), 0x618b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 014D
        gbc.setState(0x352, 0x9748, 0x6b50, 0xcc15, 0x7be2, 0x47fa, 0x1, 0x0);
        gbc.writeMem(0x352, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x9748);
        EXPECT(gbc.pc(), 0x354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 014E
        gbc.setState(0x97bd, 0x4386, 0x82b0, 0xc974, 0xea23, 0x1218, 0x1, 0x1);
        gbc.writeMem(0x97bd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4386);
        EXPECT(gbc.pc(), 0x97bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97bd), 0xcb);
        EXPECT(gbc.readMem(0x97be), 0xb4);
        // CB B4 014F
        gbc.setState(0xedff, 0x62da, 0x2350, 0xd7f7, 0x2040, 0x5eff, 0x0, 0x0);
        gbc.writeMem(0xedff, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x62da);
        EXPECT(gbc.pc(), 0xee01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedff), 0xcb);
        EXPECT(gbc.readMem(0xee00), 0xb4);
        // CB B4 0150
        gbc.setState(0x19bb, 0x2850, 0xd960, 0x4678, 0x6011, 0x139b, 0x0, 0x0);
        gbc.writeMem(0x19bb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2850);
        EXPECT(gbc.pc(), 0x19bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0151
        gbc.setState(0x8030, 0x496c, 0x8a60, 0xe990, 0x2f77, 0x2096, 0x0, 0x1);
        gbc.writeMem(0x8030, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x496c);
        EXPECT(gbc.pc(), 0x8032);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8030), 0xcb);
        EXPECT(gbc.readMem(0x8031), 0xb4);
        // CB B4 0152
        gbc.setState(0x4916, 0x575f, 0x1b60, 0xbee, 0xe9a, 0x1077, 0x0, 0x1);
        gbc.writeMem(0x4916, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x575f);
        EXPECT(gbc.pc(), 0x4918);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0153
        gbc.setState(0xeb6, 0x10e5, 0xb7b0, 0x986e, 0x2646, 0x39, 0x1, 0x0);
        gbc.writeMem(0xeb6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x10e5);
        EXPECT(gbc.pc(), 0xeb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0154
        gbc.setState(0x4cc9, 0x5da1, 0xc650, 0x477e, 0x1709, 0x7a8d, 0x0, 0x0);
        gbc.writeMem(0x4cc9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5da1);
        EXPECT(gbc.pc(), 0x4ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0155
        gbc.setState(0x2dd3, 0xc5f, 0xe330, 0x36c, 0x6d86, 0x3ed2, 0x0, 0x1);
        gbc.writeMem(0x2dd3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc5f);
        EXPECT(gbc.pc(), 0x2dd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0156
        gbc.setState(0x736e, 0x25da, 0x5c90, 0x960b, 0xf996, 0xe066, 0x1, 0x0);
        gbc.writeMem(0x736e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x25da);
        EXPECT(gbc.pc(), 0x7370);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0157
        gbc.setState(0x9154, 0x555a, 0xded0, 0x57cd, 0x5238, 0xcb8d, 0x1, 0x0);
        gbc.writeMem(0x9154, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x555a);
        EXPECT(gbc.pc(), 0x9156);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9154), 0xcb);
        EXPECT(gbc.readMem(0x9155), 0xb4);
        // CB B4 0158
        gbc.setState(0x8983, 0xaff9, 0xe7e0, 0xf413, 0xc463, 0xa297, 0x0, 0x0);
        gbc.writeMem(0x8983, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xaff9);
        EXPECT(gbc.pc(), 0x8985);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8983), 0xcb);
        EXPECT(gbc.readMem(0x8984), 0xb4);
        // CB B4 0159
        gbc.setState(0x282e, 0xf10a, 0x8490, 0x5a01, 0xce30, 0xa636, 0x1, 0x0);
        gbc.writeMem(0x282e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf10a);
        EXPECT(gbc.pc(), 0x2830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 015A
        gbc.setState(0x16c8, 0x7e7, 0xb570, 0x3907, 0xfe9b, 0xe8e6, 0x0, 0x0);
        gbc.writeMem(0x16c8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7e7);
        EXPECT(gbc.pc(), 0x16ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 015B
        gbc.setState(0xc444, 0x703, 0x1060, 0xc10d, 0xcdb2, 0x89bc, 0x1, 0x1);
        gbc.writeMem(0xc444, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x703);
        EXPECT(gbc.pc(), 0xc446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc444), 0xcb);
        EXPECT(gbc.readMem(0xc445), 0xb4);
        // CB B4 015C
        gbc.setState(0x606, 0xb1c3, 0x7e00, 0x6f07, 0xd3f0, 0xac9, 0x0, 0x0);
        gbc.writeMem(0x606, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xb1c3);
        EXPECT(gbc.pc(), 0x608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 015E
        gbc.setState(0x9241, 0x27df, 0x1290, 0x6847, 0x6eed, 0xd269, 0x0, 0x1);
        gbc.writeMem(0x9241, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x27df);
        EXPECT(gbc.pc(), 0x9243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9241), 0xcb);
        EXPECT(gbc.readMem(0x9242), 0xb4);
        // CB B4 015F
        gbc.setState(0x9112, 0x864f, 0x9990, 0xf03f, 0x70f5, 0x2589, 0x1, 0x0);
        gbc.writeMem(0x9112, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x864f);
        EXPECT(gbc.pc(), 0x9114);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9112), 0xcb);
        EXPECT(gbc.readMem(0x9113), 0xb4);
        // CB B4 0160
        gbc.setState(0x1839, 0xea0b, 0x8970, 0x87e, 0x3373, 0xc0b2, 0x1, 0x0);
        gbc.writeMem(0x1839, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xea0b);
        EXPECT(gbc.pc(), 0x183b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0162
        gbc.setState(0x1eb9, 0x55e9, 0x7db0, 0x3ccf, 0x9f5, 0xfe5d, 0x0, 0x0);
        gbc.writeMem(0x1eb9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x55e9);
        EXPECT(gbc.pc(), 0x1ebb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0163
        gbc.setState(0x534f, 0x7d38, 0xb590, 0x29e7, 0x1880, 0xe1f8, 0x0, 0x0);
        gbc.writeMem(0x534f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7d38);
        EXPECT(gbc.pc(), 0x5351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0164
        gbc.setState(0x7123, 0xf5db, 0xf160, 0xd16c, 0x2bbe, 0xc1e6, 0x0, 0x0);
        gbc.writeMem(0x7123, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf5db);
        EXPECT(gbc.pc(), 0x7125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0165
        gbc.setState(0xbfda, 0xc896, 0x3660, 0xbe7c, 0x3bf9, 0xcefc, 0x1, 0x1);
        gbc.writeMem(0xbfda, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xc896);
        EXPECT(gbc.pc(), 0xbfdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfda), 0xcb);
        EXPECT(gbc.readMem(0xbfdb), 0xb4);
        // CB B4 0166
        gbc.setState(0x158f, 0x543, 0xa200, 0xa077, 0x9e33, 0xb133, 0x1, 0x1);
        gbc.writeMem(0x158f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x543);
        EXPECT(gbc.pc(), 0x1591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0167
        gbc.setState(0xaf6d, 0xaa67, 0x6a70, 0x53fe, 0x5593, 0xf38f, 0x1, 0x0);
        gbc.writeMem(0xaf6d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xaa67);
        EXPECT(gbc.pc(), 0xaf6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf6d), 0xcb);
        EXPECT(gbc.readMem(0xaf6e), 0xb4);
        // CB B4 0168
        gbc.setState(0xd07d, 0xe530, 0x8920, 0x8e04, 0x6b04, 0x7fe1, 0x1, 0x1);
        gbc.writeMem(0xd07d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe530);
        EXPECT(gbc.pc(), 0xd07f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd07d), 0xcb);
        EXPECT(gbc.readMem(0xd07e), 0xb4);
        // CB B4 0169
        gbc.setState(0xc420, 0xcbb0, 0xe500, 0x1bef, 0x279d, 0xaea, 0x1, 0x1);
        gbc.writeMem(0xc420, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xcbb0);
        EXPECT(gbc.pc(), 0xc422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc420), 0xcb);
        EXPECT(gbc.readMem(0xc421), 0xb4);
        // CB B4 016A
        gbc.setState(0x87a, 0x1d93, 0xae80, 0xc879, 0x377f, 0x9175, 0x0, 0x1);
        gbc.writeMem(0x87a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x1d93);
        EXPECT(gbc.pc(), 0x87c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 016B
        gbc.setState(0xb17d, 0x6314, 0x9ef0, 0xf629, 0xfed0, 0xadc4, 0x0, 0x1);
        gbc.writeMem(0xb17d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6314);
        EXPECT(gbc.pc(), 0xb17f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb17d), 0xcb);
        EXPECT(gbc.readMem(0xb17e), 0xb4);
        // CB B4 016C
        gbc.setState(0xd40c, 0x7665, 0x3370, 0xb980, 0x4484, 0x7ddf, 0x1, 0x0);
        gbc.writeMem(0xd40c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7665);
        EXPECT(gbc.pc(), 0xd40e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd40c), 0xcb);
        EXPECT(gbc.readMem(0xd40d), 0xb4);
        // CB B4 016D
        gbc.setState(0xbb68, 0x7093, 0x5440, 0xd086, 0x351, 0x8b26, 0x1, 0x0);
        gbc.writeMem(0xbb68, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x7093);
        EXPECT(gbc.pc(), 0xbb6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb68), 0xcb);
        EXPECT(gbc.readMem(0xbb69), 0xb4);
        // CB B4 016E
        gbc.setState(0xc114, 0x6c32, 0x1a40, 0xe054, 0x2dc3, 0x530, 0x1, 0x1);
        gbc.writeMem(0xc114, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x6c32);
        EXPECT(gbc.pc(), 0xc116);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc114), 0xcb);
        EXPECT(gbc.readMem(0xc115), 0xb4);
        // CB B4 016F
        gbc.setState(0x23a6, 0x8f76, 0x64d0, 0x2b62, 0x9cbe, 0xfbe4, 0x0, 0x0);
        gbc.writeMem(0x23a6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8f76);
        EXPECT(gbc.pc(), 0x23a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0170
        gbc.setState(0x92d9, 0xda57, 0x4ff0, 0x5410, 0x6ec9, 0x3bcd, 0x0, 0x1);
        gbc.writeMem(0x92d9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xda57);
        EXPECT(gbc.pc(), 0x92db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d9), 0xcb);
        EXPECT(gbc.readMem(0x92da), 0xb4);
        // CB B4 0171
        gbc.setState(0xc26, 0x3ecf, 0x1e20, 0x6fb2, 0x3e37, 0xb008, 0x0, 0x0);
        gbc.writeMem(0xc26, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x3ecf);
        EXPECT(gbc.pc(), 0xc28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0172
        gbc.setState(0x69cf, 0x4423, 0xdb10, 0xbb0f, 0xb3b1, 0x5a0e, 0x1, 0x1);
        gbc.writeMem(0x69cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x4423);
        EXPECT(gbc.pc(), 0x69d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0173
        gbc.setState(0x3a90, 0x1605, 0x5080, 0x97f4, 0xa6de, 0x222e, 0x1, 0x0);
        gbc.writeMem(0x3a90, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x1605);
        EXPECT(gbc.pc(), 0x3a92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0174
        gbc.setState(0xd448, 0x283, 0x1b0, 0x429e, 0x6316, 0xaae3, 0x1, 0x1);
        gbc.writeMem(0xd448, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x283);
        EXPECT(gbc.pc(), 0xd44a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd448), 0xcb);
        EXPECT(gbc.readMem(0xd449), 0xb4);
        // CB B4 0175
        gbc.setState(0x6df, 0xcf3a, 0x3570, 0x347c, 0x8fb6, 0x239f, 0x0, 0x0);
        gbc.writeMem(0x6df, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xcf3a);
        EXPECT(gbc.pc(), 0x6e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0176
        gbc.setState(0x16cd, 0x9343, 0x37a0, 0x473a, 0x5501, 0x22cc, 0x0, 0x1);
        gbc.writeMem(0x16cd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9343);
        EXPECT(gbc.pc(), 0x16cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0177
        gbc.setState(0xdb72, 0x2a8a, 0x4fa0, 0xde54, 0x6e2b, 0x414f, 0x0, 0x0);
        gbc.writeMem(0xdb72, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2a8a);
        EXPECT(gbc.pc(), 0xdb74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb72), 0xcb);
        EXPECT(gbc.readMem(0xdb73), 0xb4);
        // CB B4 0178
        gbc.setState(0xdaff, 0xfa20, 0xb780, 0x899c, 0xf1ae, 0xa176, 0x0, 0x0);
        gbc.writeMem(0xdaff, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xfa20);
        EXPECT(gbc.pc(), 0xdb01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaff), 0xcb);
        EXPECT(gbc.readMem(0xdb00), 0xb4);
        // CB B4 0179
        gbc.setState(0x60b8, 0xef28, 0x4ac0, 0x1c38, 0x5fcb, 0x749, 0x1, 0x0);
        gbc.writeMem(0x60b8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xef28);
        EXPECT(gbc.pc(), 0x60ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 017A
        gbc.setState(0x46b4, 0x4819, 0x9100, 0xc431, 0xa270, 0x92c5, 0x0, 0x1);
        gbc.writeMem(0x46b4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4819);
        EXPECT(gbc.pc(), 0x46b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 017B
        gbc.setState(0x3dd1, 0x73fb, 0xe2c0, 0x23c7, 0xb066, 0x25a5, 0x1, 0x1);
        gbc.writeMem(0x3dd1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x73fb);
        EXPECT(gbc.pc(), 0x3dd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 017C
        gbc.setState(0xc74, 0xc195, 0x4480, 0xb664, 0xe6c9, 0x7dc, 0x0, 0x0);
        gbc.writeMem(0xc74, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xc195);
        EXPECT(gbc.pc(), 0xc76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 017D
        gbc.setState(0xac23, 0xa97d, 0xe6c0, 0xc956, 0x4916, 0x6233, 0x1, 0x1);
        gbc.writeMem(0xac23, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa97d);
        EXPECT(gbc.pc(), 0xac25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac23), 0xcb);
        EXPECT(gbc.readMem(0xac24), 0xb4);
        // CB B4 017E
        gbc.setState(0x1331, 0x854d, 0x290, 0x64c8, 0x2371, 0x22ee, 0x1, 0x1);
        gbc.writeMem(0x1331, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x854d);
        EXPECT(gbc.pc(), 0x1333);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 017F
        gbc.setState(0xc794, 0xf451, 0x4070, 0xa1bb, 0xa033, 0x1a6, 0x0, 0x1);
        gbc.writeMem(0xc794, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xf451);
        EXPECT(gbc.pc(), 0xc796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc794), 0xcb);
        EXPECT(gbc.readMem(0xc795), 0xb4);
        // CB B4 0180
        gbc.setState(0xc764, 0xc0d6, 0x57a0, 0x9ea2, 0x3127, 0x39a3, 0x1, 0x1);
        gbc.writeMem(0xc764, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc0d6);
        EXPECT(gbc.pc(), 0xc766);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc764), 0xcb);
        EXPECT(gbc.readMem(0xc765), 0xb4);
        // CB B4 0181
        gbc.setState(0x49e2, 0x1cf4, 0x5bc0, 0x258, 0x23d8, 0x5916, 0x1, 0x0);
        gbc.writeMem(0x49e2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1cf4);
        EXPECT(gbc.pc(), 0x49e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0182
        gbc.setState(0xc148, 0xa2e, 0x1f90, 0x80ce, 0xf950, 0x6d2a, 0x0, 0x1);
        gbc.writeMem(0xc148, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa2e);
        EXPECT(gbc.pc(), 0xc14a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc148), 0xcb);
        EXPECT(gbc.readMem(0xc149), 0xb4);
        // CB B4 0183
        gbc.setState(0xba11, 0x83fe, 0x5890, 0x3e37, 0xe8cf, 0x6558, 0x1, 0x1);
        gbc.writeMem(0xba11, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x83fe);
        EXPECT(gbc.pc(), 0xba13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba11), 0xcb);
        EXPECT(gbc.readMem(0xba12), 0xb4);
        // CB B4 0184
        gbc.setState(0x6fdd, 0xca63, 0x6490, 0x37ff, 0x5cfe, 0x45fc, 0x0, 0x0);
        gbc.writeMem(0x6fdd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xca63);
        EXPECT(gbc.pc(), 0x6fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0186
        gbc.setState(0x94b1, 0x76ea, 0x1ee0, 0xe1e, 0x8d30, 0xf30b, 0x1, 0x0);
        gbc.writeMem(0x94b1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x76ea);
        EXPECT(gbc.pc(), 0x94b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94b1), 0xcb);
        EXPECT(gbc.readMem(0x94b2), 0xb4);
        // CB B4 0187
        gbc.setState(0xfd8, 0x7564, 0x52b0, 0xa765, 0x51e2, 0x4978, 0x0, 0x1);
        gbc.writeMem(0xfd8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x7564);
        EXPECT(gbc.pc(), 0xfda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0188
        gbc.setState(0x10f4, 0xbb06, 0x3090, 0xfc4e, 0x62c9, 0x212b, 0x0, 0x0);
        gbc.writeMem(0x10f4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbb06);
        EXPECT(gbc.pc(), 0x10f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0189
        gbc.setState(0x3ae6, 0x6c3d, 0x9cc0, 0xa43a, 0xdf81, 0xae1e, 0x1, 0x0);
        gbc.writeMem(0x3ae6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6c3d);
        EXPECT(gbc.pc(), 0x3ae8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 018A
        gbc.setState(0x593, 0xced0, 0xaa10, 0xb13c, 0x7458, 0xf270, 0x0, 0x1);
        gbc.writeMem(0x593, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xced0);
        EXPECT(gbc.pc(), 0x595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 018B
        gbc.setState(0xb07e, 0x5d2a, 0xf890, 0xe3ab, 0xb6e0, 0xa0aa, 0x0, 0x1);
        gbc.writeMem(0xb07e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5d2a);
        EXPECT(gbc.pc(), 0xb080);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb07e), 0xcb);
        EXPECT(gbc.readMem(0xb07f), 0xb4);
        // CB B4 018C
        gbc.setState(0x169d, 0x8ca4, 0x7070, 0x8bdd, 0x49e3, 0xdd94, 0x0, 0x1);
        gbc.writeMem(0x169d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8ca4);
        EXPECT(gbc.pc(), 0x169f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 018E
        gbc.setState(0x76b, 0x83a7, 0xba70, 0x6440, 0x37b7, 0xc93a, 0x0, 0x1);
        gbc.writeMem(0x76b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x83a7);
        EXPECT(gbc.pc(), 0x76d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 018F
        gbc.setState(0xe1a3, 0x7cc3, 0x24c0, 0x79ae, 0xb58d, 0xf24a, 0x1, 0x1);
        gbc.writeMem(0xe1a3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7cc3);
        EXPECT(gbc.pc(), 0xe1a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1a3), 0xcb);
        EXPECT(gbc.readMem(0xe1a4), 0xb4);
        // CB B4 0191
        gbc.setState(0x4a09, 0xa68, 0x7a0, 0xd513, 0x1414, 0xac2e, 0x1, 0x1);
        gbc.writeMem(0x4a09, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa68);
        EXPECT(gbc.pc(), 0x4a0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0192
        gbc.setState(0xd7b2, 0x469f, 0x8c90, 0x32a6, 0xd101, 0xbe5e, 0x1, 0x0);
        gbc.writeMem(0xd7b2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x469f);
        EXPECT(gbc.pc(), 0xd7b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b2), 0xcb);
        EXPECT(gbc.readMem(0xd7b3), 0xb4);
        // CB B4 0193
        gbc.setState(0xa729, 0xc354, 0x96e0, 0x4b2, 0x210f, 0x83de, 0x0, 0x0);
        gbc.writeMem(0xa729, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc354);
        EXPECT(gbc.pc(), 0xa72b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa729), 0xcb);
        EXPECT(gbc.readMem(0xa72a), 0xb4);
        // CB B4 0194
        gbc.setState(0xb3da, 0xa5ea, 0x42e0, 0xf26, 0xe967, 0x65cf, 0x1, 0x1);
        gbc.writeMem(0xb3da, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa5ea);
        EXPECT(gbc.pc(), 0xb3dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3da), 0xcb);
        EXPECT(gbc.readMem(0xb3db), 0xb4);
        // CB B4 0195
        gbc.setState(0x5f8a, 0x6f55, 0x76f0, 0xd876, 0xa94f, 0xde01, 0x1, 0x0);
        gbc.writeMem(0x5f8a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6f55);
        EXPECT(gbc.pc(), 0x5f8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0196
        gbc.setState(0xaa50, 0xafe5, 0x2510, 0x617f, 0xa926, 0x4774, 0x1, 0x1);
        gbc.writeMem(0xaa50, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xafe5);
        EXPECT(gbc.pc(), 0xaa52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa50), 0xcb);
        EXPECT(gbc.readMem(0xaa51), 0xb4);
        // CB B4 0197
        gbc.setState(0x8070, 0x7034, 0x2800, 0xf995, 0x37bb, 0xad3b, 0x0, 0x0);
        gbc.writeMem(0x8070, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x7034);
        EXPECT(gbc.pc(), 0x8072);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8070), 0xcb);
        EXPECT(gbc.readMem(0x8071), 0xb4);
        // CB B4 0198
        gbc.setState(0x9a31, 0x7436, 0xc4f0, 0x980, 0x90b0, 0x4343, 0x1, 0x0);
        gbc.writeMem(0x9a31, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x7436);
        EXPECT(gbc.pc(), 0x9a33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a31), 0xcb);
        EXPECT(gbc.readMem(0x9a32), 0xb4);
        // CB B4 0199
        gbc.setState(0xb1be, 0x4a6d, 0x9a10, 0x71ad, 0x7683, 0xf6e, 0x1, 0x0);
        gbc.writeMem(0xb1be, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4a6d);
        EXPECT(gbc.pc(), 0xb1c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1be), 0xcb);
        EXPECT(gbc.readMem(0xb1bf), 0xb4);
        // CB B4 019A
        gbc.setState(0x8f47, 0xa391, 0x2a00, 0xaec1, 0xc5c2, 0x4089, 0x0, 0x1);
        gbc.writeMem(0x8f47, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa391);
        EXPECT(gbc.pc(), 0x8f49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f47), 0xcb);
        EXPECT(gbc.readMem(0x8f48), 0xb4);
        // CB B4 019B
        gbc.setState(0x70a0, 0x9887, 0x29d0, 0x5a77, 0x1038, 0x3744, 0x1, 0x0);
        gbc.writeMem(0x70a0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9887);
        EXPECT(gbc.pc(), 0x70a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 019C
        gbc.setState(0x1f50, 0x3326, 0x1230, 0xa567, 0x5091, 0x87fa, 0x0, 0x1);
        gbc.writeMem(0x1f50, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3326);
        EXPECT(gbc.pc(), 0x1f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 019D
        gbc.setState(0x6617, 0x9513, 0x6d60, 0x1f09, 0x4c17, 0xafbc, 0x1, 0x1);
        gbc.writeMem(0x6617, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x9513);
        EXPECT(gbc.pc(), 0x6619);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 019E
        gbc.setState(0x404e, 0xaf5b, 0x5720, 0x461b, 0xbff7, 0x1ed6, 0x1, 0x1);
        gbc.writeMem(0x404e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xaf5b);
        EXPECT(gbc.pc(), 0x4050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 019F
        gbc.setState(0x6bac, 0x2fea, 0xe90, 0x4d7a, 0x9d09, 0x8c03, 0x0, 0x0);
        gbc.writeMem(0x6bac, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2fea);
        EXPECT(gbc.pc(), 0x6bae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01A0
        gbc.setState(0xc1ae, 0xae23, 0xdaa0, 0x3b10, 0x5c85, 0x7fe5, 0x0, 0x1);
        gbc.writeMem(0xc1ae, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xae23);
        EXPECT(gbc.pc(), 0xc1b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ae), 0xcb);
        EXPECT(gbc.readMem(0xc1af), 0xb4);
        // CB B4 01A1
        gbc.setState(0x11b7, 0xf810, 0x7ac0, 0x7244, 0xab82, 0x7542, 0x0, 0x1);
        gbc.writeMem(0x11b7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf810);
        EXPECT(gbc.pc(), 0x11b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01A2
        gbc.setState(0x94c9, 0x3056, 0xc9b0, 0xfb30, 0x1a1c, 0x1a1, 0x0, 0x1);
        gbc.writeMem(0x94c9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3056);
        EXPECT(gbc.pc(), 0x94cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94c9), 0xcb);
        EXPECT(gbc.readMem(0x94ca), 0xb4);
        // CB B4 01A3
        gbc.setState(0xdd11, 0x925b, 0x7240, 0x7716, 0x14a3, 0xdbaa, 0x1, 0x0);
        gbc.writeMem(0xdd11, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x925b);
        EXPECT(gbc.pc(), 0xdd13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd11), 0xcb);
        EXPECT(gbc.readMem(0xdd12), 0xb4);
        // CB B4 01A4
        gbc.setState(0xc2a7, 0x451d, 0x670, 0x1fea, 0x65e, 0xed77, 0x0, 0x0);
        gbc.writeMem(0xc2a7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x451d);
        EXPECT(gbc.pc(), 0xc2a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2a7), 0xcb);
        EXPECT(gbc.readMem(0xc2a8), 0xb4);
        // CB B4 01A5
        gbc.setState(0xc711, 0x759, 0xdd40, 0x828f, 0xcf39, 0xc08c, 0x1, 0x0);
        gbc.writeMem(0xc711, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x759);
        EXPECT(gbc.pc(), 0xc713);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc711), 0xcb);
        EXPECT(gbc.readMem(0xc712), 0xb4);
        // CB B4 01A6
        gbc.setState(0xec47, 0xd3ee, 0x3730, 0x682e, 0x6244, 0x2754, 0x1, 0x1);
        gbc.writeMem(0xec47, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xd3ee);
        EXPECT(gbc.pc(), 0xec49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec47), 0xcb);
        EXPECT(gbc.readMem(0xec48), 0xb4);
        // CB B4 01A7
        gbc.setState(0x438c, 0x9ad1, 0x6f20, 0x20f, 0x8499, 0x111d, 0x1, 0x1);
        gbc.writeMem(0x438c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9ad1);
        EXPECT(gbc.pc(), 0x438e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01A8
        gbc.setState(0x10e3, 0x4217, 0x7a40, 0x99ec, 0xac5b, 0xf876, 0x0, 0x1);
        gbc.writeMem(0x10e3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4217);
        EXPECT(gbc.pc(), 0x10e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01A9
        gbc.setState(0x40be, 0xf3e5, 0xa150, 0x3c8b, 0x67d8, 0x662c, 0x1, 0x0);
        gbc.writeMem(0x40be, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xf3e5);
        EXPECT(gbc.pc(), 0x40c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01AA
        gbc.setState(0x22cb, 0xe9da, 0xf480, 0x1815, 0x350f, 0xcf89, 0x1, 0x1);
        gbc.writeMem(0x22cb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe9da);
        EXPECT(gbc.pc(), 0x22cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01AB
        gbc.setState(0x840c, 0x5c22, 0x12a0, 0x7c74, 0x70a8, 0x18cf, 0x1, 0x1);
        gbc.writeMem(0x840c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5c22);
        EXPECT(gbc.pc(), 0x840e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840c), 0xcb);
        EXPECT(gbc.readMem(0x840d), 0xb4);
        // CB B4 01AC
        gbc.setState(0x49a6, 0x2730, 0x420, 0xd9ab, 0xa3c6, 0x5629, 0x1, 0x1);
        gbc.writeMem(0x49a6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x2730);
        EXPECT(gbc.pc(), 0x49a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01AD
        gbc.setState(0x1133, 0xb708, 0x2390, 0xa639, 0xf3b3, 0x8913, 0x1, 0x1);
        gbc.writeMem(0x1133, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb708);
        EXPECT(gbc.pc(), 0x1135);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01AE
        gbc.setState(0xce46, 0xf2c8, 0xfc00, 0x35af, 0x3c8, 0xab4e, 0x1, 0x0);
        gbc.writeMem(0xce46, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf2c8);
        EXPECT(gbc.pc(), 0xce48);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce46), 0xcb);
        EXPECT(gbc.readMem(0xce47), 0xb4);
        // CB B4 01AF
        gbc.setState(0x2c40, 0x7619, 0xd730, 0x45bb, 0xcafb, 0x6998, 0x1, 0x1);
        gbc.writeMem(0x2c40, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7619);
        EXPECT(gbc.pc(), 0x2c42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01B0
        gbc.setState(0x26c0, 0x3864, 0x6630, 0xda87, 0x2a7, 0xb211, 0x1, 0x1);
        gbc.writeMem(0x26c0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3864);
        EXPECT(gbc.pc(), 0x26c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01B1
        gbc.setState(0xdb2b, 0xcaa0, 0x6b40, 0x1e7a, 0xa696, 0xad0c, 0x0, 0x1);
        gbc.writeMem(0xdb2b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xcaa0);
        EXPECT(gbc.pc(), 0xdb2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb2b), 0xcb);
        EXPECT(gbc.readMem(0xdb2c), 0xb4);
        // CB B4 01B2
        gbc.setState(0xe97f, 0xe0d7, 0xc350, 0xd95c, 0x18f1, 0x38ab, 0x1, 0x1);
        gbc.writeMem(0xe97f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe0d7);
        EXPECT(gbc.pc(), 0xe981);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe97f), 0xcb);
        EXPECT(gbc.readMem(0xe980), 0xb4);
        // CB B4 01B3
        gbc.setState(0xa04, 0x3872, 0x6350, 0xaa2a, 0xb56c, 0xccff, 0x0, 0x0);
        gbc.writeMem(0xa04, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3872);
        EXPECT(gbc.pc(), 0xa06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01B4
        gbc.setState(0x8831, 0x8189, 0x5ad0, 0xb57e, 0xa80, 0x2fd1, 0x1, 0x1);
        gbc.writeMem(0x8831, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8189);
        EXPECT(gbc.pc(), 0x8833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8831), 0xcb);
        EXPECT(gbc.readMem(0x8832), 0xb4);
        // CB B4 01B5
        gbc.setState(0xee51, 0x53ca, 0xd170, 0xc656, 0x188a, 0xe28d, 0x0, 0x1);
        gbc.writeMem(0xee51, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x53ca);
        EXPECT(gbc.pc(), 0xee53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee51), 0xcb);
        EXPECT(gbc.readMem(0xee52), 0xb4);
        // CB B4 01B6
        gbc.setState(0x5185, 0xfbb0, 0xb2f0, 0x202f, 0x574f, 0x4556, 0x1, 0x0);
        gbc.writeMem(0x5185, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xfbb0);
        EXPECT(gbc.pc(), 0x5187);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01B7
        gbc.setState(0xd953, 0xed79, 0xdf70, 0x8e32, 0x6198, 0x8dc3, 0x0, 0x1);
        gbc.writeMem(0xd953, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xed79);
        EXPECT(gbc.pc(), 0xd955);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd953), 0xcb);
        EXPECT(gbc.readMem(0xd954), 0xb4);
        // CB B4 01B8
        gbc.setState(0x6f83, 0xfd0c, 0x820, 0x8c82, 0x3800, 0xb3f3, 0x1, 0x1);
        gbc.writeMem(0x6f83, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xfd0c);
        EXPECT(gbc.pc(), 0x6f85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01B9
        gbc.setState(0xcbde, 0x910c, 0x53d0, 0xac2b, 0x8df1, 0xc5c9, 0x0, 0x0);
        gbc.writeMem(0xcbde, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x910c);
        EXPECT(gbc.pc(), 0xcbe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbde), 0xcb);
        EXPECT(gbc.readMem(0xcbdf), 0xb4);
        // CB B4 01BA
        gbc.setState(0x36be, 0xd523, 0x4100, 0xb4aa, 0x1339, 0x746b, 0x1, 0x0);
        gbc.writeMem(0x36be, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd523);
        EXPECT(gbc.pc(), 0x36c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01BB
        gbc.setState(0xbf, 0x3c5e, 0x1660, 0x74c, 0x2828, 0xe334, 0x1, 0x0);
        gbc.writeMem(0xbf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3c5e);
        EXPECT(gbc.pc(), 0xc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01BC
        gbc.setState(0xd8f, 0x7536, 0xc070, 0x143c, 0x6db7, 0x9acd, 0x1, 0x0);
        gbc.writeMem(0xd8f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7536);
        EXPECT(gbc.pc(), 0xd91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01BD
        gbc.setState(0x8dca, 0xe104, 0xd500, 0x289f, 0x5110, 0x89ca, 0x0, 0x0);
        gbc.writeMem(0x8dca, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xe104);
        EXPECT(gbc.pc(), 0x8dcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dca), 0xcb);
        EXPECT(gbc.readMem(0x8dcb), 0xb4);
        // CB B4 01BE
        gbc.setState(0xe349, 0x4c89, 0x49a0, 0x38f5, 0xcecb, 0x636e, 0x1, 0x0);
        gbc.writeMem(0xe349, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4c89);
        EXPECT(gbc.pc(), 0xe34b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe349), 0xcb);
        EXPECT(gbc.readMem(0xe34a), 0xb4);
        // CB B4 01BF
        gbc.setState(0x2eed, 0x438c, 0x9d40, 0xc6a4, 0x777e, 0x95e3, 0x0, 0x1);
        gbc.writeMem(0x2eed, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x438c);
        EXPECT(gbc.pc(), 0x2eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01C0
        gbc.setState(0x338b, 0x3bbb, 0x42c0, 0xc637, 0xd812, 0x423c, 0x0, 0x0);
        gbc.writeMem(0x338b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3bbb);
        EXPECT(gbc.pc(), 0x338d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01C1
        gbc.setState(0x37da, 0x5c3f, 0x49a0, 0xb94, 0xc34, 0x3d9c, 0x0, 0x1);
        gbc.writeMem(0x37da, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5c3f);
        EXPECT(gbc.pc(), 0x37dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01C3
        gbc.setState(0xae87, 0x4382, 0x7590, 0x8ab0, 0x65d2, 0x28b, 0x1, 0x0);
        gbc.writeMem(0xae87, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4382);
        EXPECT(gbc.pc(), 0xae89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae87), 0xcb);
        EXPECT(gbc.readMem(0xae88), 0xb4);
        // CB B4 01C4
        gbc.setState(0x2c4d, 0x38ec, 0x21c0, 0xd895, 0xb75e, 0x5dff, 0x1, 0x1);
        gbc.writeMem(0x2c4d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x38ec);
        EXPECT(gbc.pc(), 0x2c4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01C5
        gbc.setState(0x7984, 0x969c, 0x9b90, 0x8758, 0x50fa, 0x9647, 0x1, 0x1);
        gbc.writeMem(0x7984, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x969c);
        EXPECT(gbc.pc(), 0x7986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01C6
        gbc.setState(0x76ae, 0x37a6, 0xa740, 0xaf8b, 0xa403, 0x9906, 0x0, 0x1);
        gbc.writeMem(0x76ae, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x37a6);
        EXPECT(gbc.pc(), 0x76b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01C7
        gbc.setState(0xb540, 0x37cb, 0x9420, 0xe7d5, 0xf68f, 0x3576, 0x0, 0x1);
        gbc.writeMem(0xb540, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x37cb);
        EXPECT(gbc.pc(), 0xb542);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb540), 0xcb);
        EXPECT(gbc.readMem(0xb541), 0xb4);
        // CB B4 01C9
        gbc.setState(0x2edd, 0xd1fa, 0x6e70, 0x88ee, 0x31e9, 0xc42a, 0x1, 0x0);
        gbc.writeMem(0x2edd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd1fa);
        EXPECT(gbc.pc(), 0x2edf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01CB
        gbc.setState(0x8cce, 0x1b29, 0x8eb0, 0xe101, 0x12e4, 0xf40f, 0x1, 0x0);
        gbc.writeMem(0x8cce, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x1b29);
        EXPECT(gbc.pc(), 0x8cd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cce), 0xcb);
        EXPECT(gbc.readMem(0x8ccf), 0xb4);
        // CB B4 01CC
        gbc.setState(0xc8cc, 0x6ed8, 0x6570, 0x4bda, 0x6e6c, 0x7465, 0x0, 0x0);
        gbc.writeMem(0xc8cc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x6ed8);
        EXPECT(gbc.pc(), 0xc8ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8cc), 0xcb);
        EXPECT(gbc.readMem(0xc8cd), 0xb4);
        // CB B4 01CD
        gbc.setState(0x403f, 0xe19, 0xcc0, 0xee4a, 0x8196, 0xf18f, 0x1, 0x0);
        gbc.writeMem(0x403f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe19);
        EXPECT(gbc.pc(), 0x4041);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01CE
        gbc.setState(0x2a20, 0x92ce, 0xbcc0, 0x9f58, 0x4ed7, 0xfd2d, 0x0, 0x1);
        gbc.writeMem(0x2a20, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x92ce);
        EXPECT(gbc.pc(), 0x2a22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01CF
        gbc.setState(0xd9e9, 0x3d9, 0xa170, 0xea6e, 0x7223, 0xc315, 0x1, 0x0);
        gbc.writeMem(0xd9e9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x3d9);
        EXPECT(gbc.pc(), 0xd9eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9e9), 0xcb);
        EXPECT(gbc.readMem(0xd9ea), 0xb4);
        // CB B4 01D0
        gbc.setState(0x69c7, 0xba25, 0x2ab0, 0xe39, 0xa825, 0xd4b8, 0x0, 0x1);
        gbc.writeMem(0x69c7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xba25);
        EXPECT(gbc.pc(), 0x69c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01D1
        gbc.setState(0xdf08, 0x6686, 0x8ae0, 0xd59f, 0x3a7c, 0x3812, 0x1, 0x1);
        gbc.writeMem(0xdf08, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6686);
        EXPECT(gbc.pc(), 0xdf0a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf08), 0xcb);
        EXPECT(gbc.readMem(0xdf09), 0xb4);
        // CB B4 01D2
        gbc.setState(0x6b4c, 0xd356, 0xd780, 0x27a4, 0xf782, 0xfab6, 0x0, 0x0);
        gbc.writeMem(0x6b4c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd356);
        EXPECT(gbc.pc(), 0x6b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01D3
        gbc.setState(0x169, 0x17ab, 0xea00, 0xba0, 0x495d, 0x1e07, 0x1, 0x1);
        gbc.writeMem(0x169, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x17ab);
        EXPECT(gbc.pc(), 0x16b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01D4
        gbc.setState(0x420, 0xb74, 0x3df0, 0x5473, 0x47fd, 0x1470, 0x0, 0x1);
        gbc.writeMem(0x420, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb74);
        EXPECT(gbc.pc(), 0x422);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01D7
        gbc.setState(0xec25, 0x2703, 0xfcd0, 0xc971, 0x303c, 0xc5fd, 0x1, 0x0);
        gbc.writeMem(0xec25, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x2703);
        EXPECT(gbc.pc(), 0xec27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec25), 0xcb);
        EXPECT(gbc.readMem(0xec26), 0xb4);
        // CB B4 01D8
        gbc.setState(0xc2c0, 0xab8b, 0xdf90, 0x2cdf, 0x9ac0, 0x3a1a, 0x0, 0x1);
        gbc.writeMem(0xc2c0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xab8b);
        EXPECT(gbc.pc(), 0xc2c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2c0), 0xcb);
        EXPECT(gbc.readMem(0xc2c1), 0xb4);
        // CB B4 01D9
        gbc.setState(0xbc53, 0xbee0, 0x3460, 0x5424, 0xbd24, 0x1897, 0x1, 0x1);
        gbc.writeMem(0xbc53, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xbee0);
        EXPECT(gbc.pc(), 0xbc55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc53), 0xcb);
        EXPECT(gbc.readMem(0xbc54), 0xb4);
        // CB B4 01DA
        gbc.setState(0x3d61, 0x8476, 0x2720, 0x68be, 0x41d5, 0x7adf, 0x0, 0x0);
        gbc.writeMem(0x3d61, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8476);
        EXPECT(gbc.pc(), 0x3d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01DB
        gbc.setState(0x712d, 0xfa27, 0x4290, 0xd96c, 0x8ca3, 0xf718, 0x1, 0x1);
        gbc.writeMem(0x712d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xfa27);
        EXPECT(gbc.pc(), 0x712f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01DC
        gbc.setState(0x1824, 0x6d28, 0x3fd0, 0x2d56, 0x899c, 0xa63a, 0x0, 0x1);
        gbc.writeMem(0x1824, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x6d28);
        EXPECT(gbc.pc(), 0x1826);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01DD
        gbc.setState(0xe75f, 0x9294, 0x3310, 0x34d9, 0x39f9, 0xa6ea, 0x1, 0x1);
        gbc.writeMem(0xe75f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9294);
        EXPECT(gbc.pc(), 0xe761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe75f), 0xcb);
        EXPECT(gbc.readMem(0xe760), 0xb4);
        // CB B4 01DE
        gbc.setState(0xe402, 0x97d8, 0x460, 0x9a73, 0x4923, 0x5465, 0x1, 0x1);
        gbc.writeMem(0xe402, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x97d8);
        EXPECT(gbc.pc(), 0xe404);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe402), 0xcb);
        EXPECT(gbc.readMem(0xe403), 0xb4);
        // CB B4 01DF
        gbc.setState(0x615a, 0x90a5, 0x7790, 0xba43, 0x4fa8, 0x65f3, 0x1, 0x1);
        gbc.writeMem(0x615a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x90a5);
        EXPECT(gbc.pc(), 0x615c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01E0
        gbc.setState(0x37cc, 0x67db, 0xbf60, 0xb335, 0x45eb, 0x490a, 0x1, 0x1);
        gbc.writeMem(0x37cc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x67db);
        EXPECT(gbc.pc(), 0x37ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01E2
        gbc.setState(0x9759, 0x4122, 0x3330, 0x31c4, 0x305a, 0xc9be, 0x0, 0x1);
        gbc.writeMem(0x9759, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4122);
        EXPECT(gbc.pc(), 0x975b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9759), 0xcb);
        EXPECT(gbc.readMem(0x975a), 0xb4);
        // CB B4 01E3
        gbc.setState(0x2fee, 0x1e98, 0xd340, 0xf9f9, 0x2559, 0x2901, 0x0, 0x1);
        gbc.writeMem(0x2fee, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1e98);
        EXPECT(gbc.pc(), 0x2ff0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01E4
        gbc.setState(0x1a23, 0xe2b3, 0x5090, 0x5257, 0x9349, 0xd5de, 0x1, 0x0);
        gbc.writeMem(0x1a23, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe2b3);
        EXPECT(gbc.pc(), 0x1a25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01E5
        gbc.setState(0xd66f, 0x5c1e, 0xb4d0, 0x5223, 0xd93, 0x110, 0x1, 0x0);
        gbc.writeMem(0xd66f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x5c1e);
        EXPECT(gbc.pc(), 0xd671);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd66f), 0xcb);
        EXPECT(gbc.readMem(0xd670), 0xb4);
        // CB B4 01E7
        gbc.setState(0x5574, 0xbba2, 0x5e50, 0xa7d9, 0x33c0, 0x6bf1, 0x1, 0x0);
        gbc.writeMem(0x5574, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xbba2);
        EXPECT(gbc.pc(), 0x5576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01E8
        gbc.setState(0xd15b, 0x4d4e, 0xee10, 0xf4ee, 0x7477, 0xc0c7, 0x0, 0x1);
        gbc.writeMem(0xd15b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x4d4e);
        EXPECT(gbc.pc(), 0xd15d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd15b), 0xcb);
        EXPECT(gbc.readMem(0xd15c), 0xb4);
        // CB B4 01E9
        gbc.setState(0x2408, 0x2153, 0x3570, 0xc70b, 0x6f74, 0x7b6f, 0x0, 0x1);
        gbc.writeMem(0x2408, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2153);
        EXPECT(gbc.pc(), 0x240a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01EA
        gbc.setState(0x89c4, 0x134e, 0x15c0, 0x3d9c, 0xae6c, 0xcb8f, 0x1, 0x1);
        gbc.writeMem(0x89c4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x134e);
        EXPECT(gbc.pc(), 0x89c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89c4), 0xcb);
        EXPECT(gbc.readMem(0x89c5), 0xb4);
        // CB B4 01EB
        gbc.setState(0xd53b, 0x8547, 0xc230, 0x4083, 0x4373, 0x76e, 0x1, 0x1);
        gbc.writeMem(0xd53b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8547);
        EXPECT(gbc.pc(), 0xd53d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd53b), 0xcb);
        EXPECT(gbc.readMem(0xd53c), 0xb4);
        // CB B4 01EC
        gbc.setState(0xbd4b, 0x7beb, 0x8a30, 0xedd4, 0x5db4, 0x33eb, 0x0, 0x1);
        gbc.writeMem(0xbd4b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x7beb);
        EXPECT(gbc.pc(), 0xbd4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd4b), 0xcb);
        EXPECT(gbc.readMem(0xbd4c), 0xb4);
        // CB B4 01ED
        gbc.setState(0xe85b, 0x1094, 0x12c0, 0x6d1, 0x79d0, 0x3d09, 0x0, 0x0);
        gbc.writeMem(0xe85b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x1094);
        EXPECT(gbc.pc(), 0xe85d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe85b), 0xcb);
        EXPECT(gbc.readMem(0xe85c), 0xb4);
        // CB B4 01EE
        gbc.setState(0x7462, 0x6182, 0xc980, 0xa985, 0x6bf3, 0x5a7e, 0x0, 0x1);
        gbc.writeMem(0x7462, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6182);
        EXPECT(gbc.pc(), 0x7464);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01EF
        gbc.setState(0xcaf7, 0x495c, 0x4d0, 0xc100, 0x5fcd, 0x9874, 0x0, 0x0);
        gbc.writeMem(0xcaf7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x495c);
        EXPECT(gbc.pc(), 0xcaf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaf7), 0xcb);
        EXPECT(gbc.readMem(0xcaf8), 0xb4);
        // CB B4 01F0
        gbc.setState(0xa722, 0x907d, 0xabb0, 0xe295, 0x2e12, 0x8389, 0x1, 0x0);
        gbc.writeMem(0xa722, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x907d);
        EXPECT(gbc.pc(), 0xa724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa722), 0xcb);
        EXPECT(gbc.readMem(0xa723), 0xb4);
        // CB B4 01F1
        gbc.setState(0x46e9, 0xd2d, 0x860, 0x9084, 0xda31, 0x72b7, 0x1, 0x0);
        gbc.writeMem(0x46e9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd2d);
        EXPECT(gbc.pc(), 0x46eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01F2
        gbc.setState(0x6c50, 0x2d2e, 0x2f00, 0x2faa, 0x27b7, 0xcf77, 0x1, 0x0);
        gbc.writeMem(0x6c50, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2d2e);
        EXPECT(gbc.pc(), 0x6c52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01F3
        gbc.setState(0x7c09, 0xd68, 0xd2d0, 0xcf33, 0xcfa8, 0xc05b, 0x1, 0x0);
        gbc.writeMem(0x7c09, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd68);
        EXPECT(gbc.pc(), 0x7c0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01F4
        gbc.setState(0x31a0, 0xf6d8, 0xf520, 0x73fd, 0x9347, 0x5412, 0x0, 0x0);
        gbc.writeMem(0x31a0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xf6d8);
        EXPECT(gbc.pc(), 0x31a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01F5
        gbc.setState(0x9701, 0xae66, 0xbc00, 0xa888, 0xbf55, 0x49c3, 0x0, 0x1);
        gbc.writeMem(0x9701, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xae66);
        EXPECT(gbc.pc(), 0x9703);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9701), 0xcb);
        EXPECT(gbc.readMem(0x9702), 0xb4);
        // CB B4 01F6
        gbc.setState(0xba25, 0xe84a, 0x8980, 0xb045, 0x6d3c, 0x25ce, 0x0, 0x0);
        gbc.writeMem(0xba25, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xe84a);
        EXPECT(gbc.pc(), 0xba27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba25), 0xcb);
        EXPECT(gbc.readMem(0xba26), 0xb4);
        // CB B4 01F7
        gbc.setState(0x27f6, 0xed0b, 0xf060, 0x4ca6, 0xb4c5, 0x86d5, 0x1, 0x1);
        gbc.writeMem(0x27f6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xed0b);
        EXPECT(gbc.pc(), 0x27f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01F8
        gbc.setState(0x5de6, 0x226c, 0x790, 0x9e4a, 0xa78d, 0x4cbb, 0x1, 0x1);
        gbc.writeMem(0x5de6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x226c);
        EXPECT(gbc.pc(), 0x5de8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01F9
        gbc.setState(0x616c, 0xdefe, 0x3bc0, 0x1954, 0x8831, 0x7bc9, 0x1, 0x1);
        gbc.writeMem(0x616c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xdefe);
        EXPECT(gbc.pc(), 0x616e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01FA
        gbc.setState(0x955e, 0x9279, 0xbb10, 0x3de9, 0x6606, 0x546f, 0x1, 0x1);
        gbc.writeMem(0x955e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9279);
        EXPECT(gbc.pc(), 0x9560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955e), 0xcb);
        EXPECT(gbc.readMem(0x955f), 0xb4);
        // CB B4 01FB
        gbc.setState(0x2676, 0x7edf, 0xada0, 0xcdcc, 0xcc9b, 0xcde6, 0x0, 0x1);
        gbc.writeMem(0x2676, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x7edf);
        EXPECT(gbc.pc(), 0x2678);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01FC
        gbc.setState(0x6808, 0xabaa, 0x1f10, 0x9ba7, 0x628a, 0x7e91, 0x0, 0x0);
        gbc.writeMem(0x6808, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xabaa);
        EXPECT(gbc.pc(), 0x680a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 01FD
        gbc.setState(0x6b90, 0x6493, 0xcde0, 0x9307, 0x9c30, 0x9cea, 0x0, 0x1);
        gbc.writeMem(0x6b90, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x6493);
        EXPECT(gbc.pc(), 0x6b92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 01FE
        gbc.setState(0x9dd6, 0xc8ee, 0x1640, 0xf733, 0x51d7, 0x269e, 0x1, 0x0);
        gbc.writeMem(0x9dd6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc8ee);
        EXPECT(gbc.pc(), 0x9dd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dd6), 0xcb);
        EXPECT(gbc.readMem(0x9dd7), 0xb4);
        // CB B4 01FF
        gbc.setState(0x5ed5, 0xe67b, 0x9e10, 0xe3f8, 0x7c0f, 0x924d, 0x1, 0x0);
        gbc.writeMem(0x5ed5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe67b);
        EXPECT(gbc.pc(), 0x5ed7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0200
        gbc.setState(0x350d, 0x17c3, 0x8210, 0x7294, 0x67a9, 0x8c94, 0x1, 0x1);
        gbc.writeMem(0x350d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x17c3);
        EXPECT(gbc.pc(), 0x350f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0201
        gbc.setState(0x9830, 0x2acf, 0xbe30, 0x45bd, 0x1df, 0xa25c, 0x0, 0x0);
        gbc.writeMem(0x9830, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2acf);
        EXPECT(gbc.pc(), 0x9832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9830), 0xcb);
        EXPECT(gbc.readMem(0x9831), 0xb4);
        // CB B4 0202
        gbc.setState(0x650c, 0x40bf, 0xa260, 0x9e1c, 0x43f1, 0x7d6d, 0x1, 0x1);
        gbc.writeMem(0x650c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x40bf);
        EXPECT(gbc.pc(), 0x650e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0203
        gbc.setState(0x6f7, 0xa032, 0x4140, 0x6eb0, 0xb61, 0xd704, 0x0, 0x1);
        gbc.writeMem(0x6f7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa032);
        EXPECT(gbc.pc(), 0x6f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0204
        gbc.setState(0xae77, 0xe637, 0xc8e0, 0xe8a4, 0x3223, 0xe98f, 0x0, 0x0);
        gbc.writeMem(0xae77, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xe637);
        EXPECT(gbc.pc(), 0xae79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae77), 0xcb);
        EXPECT(gbc.readMem(0xae78), 0xb4);
        // CB B4 0205
        gbc.setState(0x42f4, 0xedc, 0xc290, 0x21e5, 0xab60, 0x4f7f, 0x1, 0x0);
        gbc.writeMem(0x42f4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xedc);
        EXPECT(gbc.pc(), 0x42f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0206
        gbc.setState(0x72ef, 0x314e, 0xcb90, 0xcc13, 0xdf2, 0x4a63, 0x0, 0x0);
        gbc.writeMem(0x72ef, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x314e);
        EXPECT(gbc.pc(), 0x72f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0207
        gbc.setState(0x9a11, 0x6a53, 0x6720, 0x2a91, 0x31d8, 0x9f, 0x0, 0x1);
        gbc.writeMem(0x9a11, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6a53);
        EXPECT(gbc.pc(), 0x9a13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a11), 0xcb);
        EXPECT(gbc.readMem(0x9a12), 0xb4);
        // CB B4 0208
        gbc.setState(0x4cab, 0x2183, 0x26b0, 0xd047, 0xd5dc, 0x5a9d, 0x0, 0x0);
        gbc.writeMem(0x4cab, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x2183);
        EXPECT(gbc.pc(), 0x4cad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0209
        gbc.setState(0x610f, 0x6feb, 0xb6b0, 0x3424, 0xf0b, 0x5ca4, 0x0, 0x1);
        gbc.writeMem(0x610f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6feb);
        EXPECT(gbc.pc(), 0x6111);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 020A
        gbc.setState(0x797b, 0x5239, 0xd6e0, 0x73e6, 0xd1d0, 0xe18d, 0x0, 0x0);
        gbc.writeMem(0x797b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x5239);
        EXPECT(gbc.pc(), 0x797d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 020B
        gbc.setState(0x47d1, 0x9539, 0x96f0, 0xb6e3, 0xbb7d, 0xc45b, 0x0, 0x0);
        gbc.writeMem(0x47d1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x9539);
        EXPECT(gbc.pc(), 0x47d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 020C
        gbc.setState(0x9449, 0x9158, 0xa4f0, 0xf503, 0x9868, 0xa875, 0x0, 0x0);
        gbc.writeMem(0x9449, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9158);
        EXPECT(gbc.pc(), 0x944b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9449), 0xcb);
        EXPECT(gbc.readMem(0x944a), 0xb4);
        // CB B4 020D
        gbc.setState(0x77cd, 0xd80f, 0x660, 0x3678, 0x262e, 0xdfaf, 0x1, 0x1);
        gbc.writeMem(0x77cd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xd80f);
        EXPECT(gbc.pc(), 0x77cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 020E
        gbc.setState(0x8564, 0xb337, 0xac00, 0xbd3a, 0xe5ce, 0x9fcd, 0x0, 0x0);
        gbc.writeMem(0x8564, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xb337);
        EXPECT(gbc.pc(), 0x8566);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8564), 0xcb);
        EXPECT(gbc.readMem(0x8565), 0xb4);
        // CB B4 0210
        gbc.setState(0x9167, 0xbc5d, 0x9950, 0x1ce3, 0x7c79, 0xe172, 0x0, 0x0);
        gbc.writeMem(0x9167, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xbc5d);
        EXPECT(gbc.pc(), 0x9169);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9167), 0xcb);
        EXPECT(gbc.readMem(0x9168), 0xb4);
        // CB B4 0211
        gbc.setState(0xe657, 0x14eb, 0xecc0, 0x4feb, 0x1ba0, 0xd90c, 0x0, 0x1);
        gbc.writeMem(0xe657, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x14eb);
        EXPECT(gbc.pc(), 0xe659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe657), 0xcb);
        EXPECT(gbc.readMem(0xe658), 0xb4);
        // CB B4 0212
        gbc.setState(0x39d3, 0x2f16, 0x3090, 0xf59d, 0xf442, 0xbd17, 0x1, 0x0);
        gbc.writeMem(0x39d3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2f16);
        EXPECT(gbc.pc(), 0x39d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0213
        gbc.setState(0x5d2c, 0xa6a4, 0x3620, 0x86fc, 0x4ab7, 0xf094, 0x0, 0x0);
        gbc.writeMem(0x5d2c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xa6a4);
        EXPECT(gbc.pc(), 0x5d2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0214
        gbc.setState(0xe5a8, 0x4a66, 0x9e90, 0x8824, 0xb2de, 0xe5da, 0x0, 0x0);
        gbc.writeMem(0xe5a8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x4a66);
        EXPECT(gbc.pc(), 0xe5aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a8), 0xcb);
        EXPECT(gbc.readMem(0xe5a9), 0xb4);
        // CB B4 0215
        gbc.setState(0x293d, 0x7e16, 0x7330, 0x43bd, 0xe2d9, 0xe285, 0x1, 0x1);
        gbc.writeMem(0x293d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x7e16);
        EXPECT(gbc.pc(), 0x293f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0216
        gbc.setState(0xd53, 0x5ebb, 0xe5c0, 0xb7b1, 0x82e7, 0x3011, 0x1, 0x0);
        gbc.writeMem(0xd53, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x5ebb);
        EXPECT(gbc.pc(), 0xd55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0217
        gbc.setState(0xeacd, 0xf36, 0x1820, 0x563a, 0xd85f, 0x75dc, 0x1, 0x1);
        gbc.writeMem(0xeacd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf36);
        EXPECT(gbc.pc(), 0xeacf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeacd), 0xcb);
        EXPECT(gbc.readMem(0xeace), 0xb4);
        // CB B4 0218
        gbc.setState(0x8aa0, 0x485f, 0x9a0, 0xe4af, 0xc033, 0xf6a9, 0x0, 0x0);
        gbc.writeMem(0x8aa0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x485f);
        EXPECT(gbc.pc(), 0x8aa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aa0), 0xcb);
        EXPECT(gbc.readMem(0x8aa1), 0xb4);
        // CB B4 0219
        gbc.setState(0xba95, 0x5bf, 0x3f40, 0x11ed, 0xb70d, 0xbb24, 0x0, 0x0);
        gbc.writeMem(0xba95, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x5bf);
        EXPECT(gbc.pc(), 0xba97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba95), 0xcb);
        EXPECT(gbc.readMem(0xba96), 0xb4);
        // CB B4 021A
        gbc.setState(0x97b8, 0x94f4, 0x5960, 0x38b7, 0xc91, 0x4040, 0x1, 0x1);
        gbc.writeMem(0x97b8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x94f4);
        EXPECT(gbc.pc(), 0x97ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97b8), 0xcb);
        EXPECT(gbc.readMem(0x97b9), 0xb4);
        // CB B4 021B
        gbc.setState(0xcdbc, 0x9ba6, 0xf1d0, 0x1965, 0xdc73, 0x1d70, 0x0, 0x1);
        gbc.writeMem(0xcdbc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9ba6);
        EXPECT(gbc.pc(), 0xcdbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdbc), 0xcb);
        EXPECT(gbc.readMem(0xcdbd), 0xb4);
        // CB B4 021C
        gbc.setState(0x7e94, 0x7934, 0xb660, 0x1799, 0xc239, 0x423f, 0x1, 0x0);
        gbc.writeMem(0x7e94, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x7934);
        EXPECT(gbc.pc(), 0x7e96);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 021D
        gbc.setState(0xa3de, 0x3c41, 0xf6a0, 0x8875, 0xa563, 0x3903, 0x1, 0x1);
        gbc.writeMem(0xa3de, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3c41);
        EXPECT(gbc.pc(), 0xa3e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3de), 0xcb);
        EXPECT(gbc.readMem(0xa3df), 0xb4);
        // CB B4 021E
        gbc.setState(0xbb37, 0x2b12, 0x1960, 0xcd23, 0xe56, 0xf971, 0x0, 0x1);
        gbc.writeMem(0xbb37, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x2b12);
        EXPECT(gbc.pc(), 0xbb39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb37), 0xcb);
        EXPECT(gbc.readMem(0xbb38), 0xb4);
        // CB B4 021F
        gbc.setState(0xb740, 0xe871, 0x8260, 0xcfa1, 0xcc4f, 0xc0ac, 0x0, 0x0);
        gbc.writeMem(0xb740, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xe871);
        EXPECT(gbc.pc(), 0xb742);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb740), 0xcb);
        EXPECT(gbc.readMem(0xb741), 0xb4);
        // CB B4 0220
        gbc.setState(0xdb19, 0x2516, 0x3040, 0x11a3, 0xb5a8, 0xbf7d, 0x1, 0x0);
        gbc.writeMem(0xdb19, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x2516);
        EXPECT(gbc.pc(), 0xdb1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb19), 0xcb);
        EXPECT(gbc.readMem(0xdb1a), 0xb4);
        // CB B4 0221
        gbc.setState(0xc9c1, 0x7b0b, 0xe90, 0xfb3c, 0xeeb6, 0x40e0, 0x0, 0x0);
        gbc.writeMem(0xc9c1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x7b0b);
        EXPECT(gbc.pc(), 0xc9c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9c1), 0xcb);
        EXPECT(gbc.readMem(0xc9c2), 0xb4);
        // CB B4 0222
        gbc.setState(0x58dc, 0xb58a, 0x7840, 0xc666, 0x5971, 0x6664, 0x1, 0x1);
        gbc.writeMem(0x58dc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xb58a);
        EXPECT(gbc.pc(), 0x58de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0223
        gbc.setState(0x3dca, 0xfe3f, 0xbcb0, 0xfdae, 0xb5d7, 0x72f, 0x1, 0x1);
        gbc.writeMem(0x3dca, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfe3f);
        EXPECT(gbc.pc(), 0x3dcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0224
        gbc.setState(0x463c, 0x34dc, 0x55e0, 0x57d7, 0x59b9, 0x5bb6, 0x0, 0x1);
        gbc.writeMem(0x463c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x34dc);
        EXPECT(gbc.pc(), 0x463e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0225
        gbc.setState(0x3287, 0x4a67, 0xbf10, 0x2775, 0xbd19, 0x8404, 0x0, 0x1);
        gbc.writeMem(0x3287, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x4a67);
        EXPECT(gbc.pc(), 0x3289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0226
        gbc.setState(0xa080, 0xc09b, 0xacd0, 0xab96, 0x4c24, 0x2eec, 0x0, 0x1);
        gbc.writeMem(0xa080, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc09b);
        EXPECT(gbc.pc(), 0xa082);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa080), 0xcb);
        EXPECT(gbc.readMem(0xa081), 0xb4);
        // CB B4 0227
        gbc.setState(0x9ffb, 0x163a, 0x1810, 0xd1b6, 0xe8ce, 0xfeb9, 0x0, 0x0);
        gbc.writeMem(0x9ffb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x163a);
        EXPECT(gbc.pc(), 0x9ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ffb), 0xcb);
        EXPECT(gbc.readMem(0x9ffc), 0xb4);
        // CB B4 0228
        gbc.setState(0xb7f8, 0x4fb8, 0x8110, 0x391b, 0xc07a, 0x9323, 0x1, 0x1);
        gbc.writeMem(0xb7f8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4fb8);
        EXPECT(gbc.pc(), 0xb7fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7f8), 0xcb);
        EXPECT(gbc.readMem(0xb7f9), 0xb4);
        // CB B4 0229
        gbc.setState(0xb0d9, 0x306, 0x3420, 0xdca7, 0x8d13, 0x6e15, 0x1, 0x0);
        gbc.writeMem(0xb0d9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x306);
        EXPECT(gbc.pc(), 0xb0db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb0d9), 0xcb);
        EXPECT(gbc.readMem(0xb0da), 0xb4);
        // CB B4 022A
        gbc.setState(0x7f1, 0x50e1, 0x1bf0, 0xb988, 0x110e, 0xfb2, 0x0, 0x0);
        gbc.writeMem(0x7f1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x50e1);
        EXPECT(gbc.pc(), 0x7f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 022B
        gbc.setState(0xed1a, 0xcb14, 0x20d0, 0x22e, 0x471e, 0xf69e, 0x0, 0x0);
        gbc.writeMem(0xed1a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xcb14);
        EXPECT(gbc.pc(), 0xed1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed1a), 0xcb);
        EXPECT(gbc.readMem(0xed1b), 0xb4);
        // CB B4 022C
        gbc.setState(0x4c0, 0x93f0, 0x96d0, 0x493a, 0xa7d, 0x43df, 0x1, 0x1);
        gbc.writeMem(0x4c0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x93f0);
        EXPECT(gbc.pc(), 0x4c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 022D
        gbc.setState(0x6e76, 0x74a5, 0x1f0, 0xd77a, 0xe13d, 0x22b8, 0x1, 0x0);
        gbc.writeMem(0x6e76, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x74a5);
        EXPECT(gbc.pc(), 0x6e78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 022E
        gbc.setState(0xe514, 0x73ce, 0x92b0, 0xcfb9, 0x442, 0xe7fe, 0x0, 0x1);
        gbc.writeMem(0xe514, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x73ce);
        EXPECT(gbc.pc(), 0xe516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe514), 0xcb);
        EXPECT(gbc.readMem(0xe515), 0xb4);
        // CB B4 022F
        gbc.setState(0x2017, 0xba21, 0x90b0, 0x1a59, 0xc49c, 0x3ceb, 0x0, 0x0);
        gbc.writeMem(0x2017, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xba21);
        EXPECT(gbc.pc(), 0x2019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0230
        gbc.setState(0x5e44, 0xf994, 0xde40, 0xbbb4, 0xd077, 0xbfb7, 0x1, 0x0);
        gbc.writeMem(0x5e44, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xf994);
        EXPECT(gbc.pc(), 0x5e46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0231
        gbc.setState(0x61a5, 0xe732, 0xeb10, 0xe154, 0x6954, 0x3328, 0x0, 0x0);
        gbc.writeMem(0x61a5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xe732);
        EXPECT(gbc.pc(), 0x61a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0232
        gbc.setState(0x76ca, 0x1775, 0xa550, 0xcd9b, 0x7e7f, 0x6668, 0x0, 0x0);
        gbc.writeMem(0x76ca, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1775);
        EXPECT(gbc.pc(), 0x76cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0234
        gbc.setState(0x4d02, 0x84c9, 0x3560, 0xf912, 0xfa23, 0x8113, 0x0, 0x1);
        gbc.writeMem(0x4d02, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x84c9);
        EXPECT(gbc.pc(), 0x4d04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0235
        gbc.setState(0x7ab0, 0xf51d, 0x5db0, 0x5751, 0xe5b1, 0x3420, 0x1, 0x1);
        gbc.writeMem(0x7ab0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xf51d);
        EXPECT(gbc.pc(), 0x7ab2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0236
        gbc.setState(0x4fb2, 0x5646, 0x4b0, 0x7b56, 0x75bd, 0x1d1, 0x1, 0x1);
        gbc.writeMem(0x4fb2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5646);
        EXPECT(gbc.pc(), 0x4fb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0237
        gbc.setState(0xde2b, 0x227b, 0x68b0, 0xa0ca, 0x3c7b, 0xb4c2, 0x1, 0x1);
        gbc.writeMem(0xde2b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x227b);
        EXPECT(gbc.pc(), 0xde2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde2b), 0xcb);
        EXPECT(gbc.readMem(0xde2c), 0xb4);
        // CB B4 0238
        gbc.setState(0x4c10, 0x4a37, 0xced0, 0xdf40, 0x4c40, 0x776c, 0x1, 0x1);
        gbc.writeMem(0x4c10, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x4a37);
        EXPECT(gbc.pc(), 0x4c12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 023A
        gbc.setState(0xc6ce, 0x9b2f, 0x9ba0, 0xdd3d, 0x3105, 0x9574, 0x0, 0x1);
        gbc.writeMem(0xc6ce, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9b2f);
        EXPECT(gbc.pc(), 0xc6d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ce), 0xcb);
        EXPECT(gbc.readMem(0xc6cf), 0xb4);
        // CB B4 023B
        gbc.setState(0x443a, 0xaa64, 0x9650, 0xa52c, 0xc1ab, 0x9b97, 0x1, 0x1);
        gbc.writeMem(0x443a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xaa64);
        EXPECT(gbc.pc(), 0x443c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 023C
        gbc.setState(0x1d91, 0x79d5, 0xe9e0, 0xe823, 0xf30e, 0x63b, 0x1, 0x0);
        gbc.writeMem(0x1d91, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x79d5);
        EXPECT(gbc.pc(), 0x1d93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 023D
        gbc.setState(0x28cd, 0xdaa2, 0xd670, 0x4a30, 0x1c64, 0x4eec, 0x1, 0x1);
        gbc.writeMem(0x28cd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdaa2);
        EXPECT(gbc.pc(), 0x28cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 023E
        gbc.setState(0xe5c4, 0xa515, 0x3a00, 0x85e1, 0x941c, 0xc282, 0x0, 0x0);
        gbc.writeMem(0xe5c4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xa515);
        EXPECT(gbc.pc(), 0xe5c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5c4), 0xcb);
        EXPECT(gbc.readMem(0xe5c5), 0xb4);
        // CB B4 023F
        gbc.setState(0xcaea, 0x251, 0x8630, 0xe7ba, 0xdaa9, 0xe6d0, 0x1, 0x1);
        gbc.writeMem(0xcaea, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x251);
        EXPECT(gbc.pc(), 0xcaec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaea), 0xcb);
        EXPECT(gbc.readMem(0xcaeb), 0xb4);
        // CB B4 0240
        gbc.setState(0x7870, 0xb312, 0x9a30, 0xebda, 0xdb2c, 0x2ed3, 0x1, 0x1);
        gbc.writeMem(0x7870, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb312);
        EXPECT(gbc.pc(), 0x7872);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0241
        gbc.setState(0x3d27, 0x2910, 0x6090, 0xcd78, 0x7710, 0xfbee, 0x1, 0x1);
        gbc.writeMem(0x3d27, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x2910);
        EXPECT(gbc.pc(), 0x3d29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0242
        gbc.setState(0xe845, 0x13bb, 0x8f50, 0xc77d, 0x4512, 0x7742, 0x0, 0x1);
        gbc.writeMem(0xe845, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x13bb);
        EXPECT(gbc.pc(), 0xe847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe845), 0xcb);
        EXPECT(gbc.readMem(0xe846), 0xb4);
        // CB B4 0243
        gbc.setState(0x744, 0xebaf, 0xb560, 0x5f9a, 0x6aac, 0xa5c3, 0x1, 0x0);
        gbc.writeMem(0x744, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xebaf);
        EXPECT(gbc.pc(), 0x746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0244
        gbc.setState(0xa253, 0x7d23, 0xfe00, 0xd4b5, 0xb3d, 0x12, 0x1, 0x1);
        gbc.writeMem(0xa253, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x7d23);
        EXPECT(gbc.pc(), 0xa255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa253), 0xcb);
        EXPECT(gbc.readMem(0xa254), 0xb4);
        // CB B4 0245
        gbc.setState(0x9afb, 0xf5ef, 0x2a40, 0x82ac, 0xe076, 0x7896, 0x0, 0x0);
        gbc.writeMem(0x9afb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xf5ef);
        EXPECT(gbc.pc(), 0x9afd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9afb), 0xcb);
        EXPECT(gbc.readMem(0x9afc), 0xb4);
        // CB B4 0247
        gbc.setState(0xc875, 0x24d7, 0xe5e0, 0xfce, 0x6f83, 0x7152, 0x0, 0x0);
        gbc.writeMem(0xc875, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x24d7);
        EXPECT(gbc.pc(), 0xc877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc875), 0xcb);
        EXPECT(gbc.readMem(0xc876), 0xb4);
        // CB B4 0248
        gbc.setState(0xd2a6, 0xe1c4, 0xa190, 0x6b8b, 0xf39, 0xdaa4, 0x0, 0x1);
        gbc.writeMem(0xd2a6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xe1c4);
        EXPECT(gbc.pc(), 0xd2a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2a6), 0xcb);
        EXPECT(gbc.readMem(0xd2a7), 0xb4);
        // CB B4 0249
        gbc.setState(0x12fc, 0x3942, 0xd8c0, 0x8cd, 0x91a3, 0xa4cf, 0x0, 0x0);
        gbc.writeMem(0x12fc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3942);
        EXPECT(gbc.pc(), 0x12fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 024A
        gbc.setState(0x4060, 0xcffc, 0x3c00, 0x61b, 0xcf04, 0x10cf, 0x1, 0x0);
        gbc.writeMem(0x4060, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xcffc);
        EXPECT(gbc.pc(), 0x4062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 024B
        gbc.setState(0xa725, 0xf25, 0x87c0, 0x738c, 0xbb2d, 0xd32b, 0x0, 0x1);
        gbc.writeMem(0xa725, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf25);
        EXPECT(gbc.pc(), 0xa727);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa725), 0xcb);
        EXPECT(gbc.readMem(0xa726), 0xb4);
        // CB B4 024C
        gbc.setState(0x6ccb, 0x7def, 0x7f0, 0xc23d, 0xd9d2, 0xaf7d, 0x0, 0x1);
        gbc.writeMem(0x6ccb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7def);
        EXPECT(gbc.pc(), 0x6ccd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 024D
        gbc.setState(0x2ec8, 0xc6f7, 0x3560, 0x2644, 0x51a0, 0x6fc4, 0x1, 0x1);
        gbc.writeMem(0x2ec8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc6f7);
        EXPECT(gbc.pc(), 0x2eca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 024E
        gbc.setState(0x9353, 0x6beb, 0x76e0, 0x7914, 0x6e0a, 0xc6c9, 0x0, 0x1);
        gbc.writeMem(0x9353, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6beb);
        EXPECT(gbc.pc(), 0x9355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9353), 0xcb);
        EXPECT(gbc.readMem(0x9354), 0xb4);
        // CB B4 024F
        gbc.setState(0x3a85, 0x282b, 0x4300, 0x65c1, 0x9671, 0xcd14, 0x1, 0x0);
        gbc.writeMem(0x3a85, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x282b);
        EXPECT(gbc.pc(), 0x3a87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0250
        gbc.setState(0xe026, 0xc50c, 0x6240, 0xb916, 0x6239, 0x4bcd, 0x0, 0x1);
        gbc.writeMem(0xe026, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xc50c);
        EXPECT(gbc.pc(), 0xe028);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe026), 0xcb);
        EXPECT(gbc.readMem(0xe027), 0xb4);
        // CB B4 0251
        gbc.setState(0xe090, 0x7bd5, 0x4dd0, 0xc065, 0x7224, 0x5aad, 0x1, 0x0);
        gbc.writeMem(0xe090, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7bd5);
        EXPECT(gbc.pc(), 0xe092);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe090), 0xcb);
        EXPECT(gbc.readMem(0xe091), 0xb4);
        // CB B4 0252
        gbc.setState(0x7d76, 0x66e2, 0x5e80, 0x5feb, 0x8f0e, 0xa0f1, 0x1, 0x0);
        gbc.writeMem(0x7d76, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x66e2);
        EXPECT(gbc.pc(), 0x7d78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0253
        gbc.setState(0x93c5, 0xdc5c, 0x1340, 0xb4d8, 0xbbaa, 0xc466, 0x1, 0x0);
        gbc.writeMem(0x93c5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdc5c);
        EXPECT(gbc.pc(), 0x93c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c5), 0xcb);
        EXPECT(gbc.readMem(0x93c6), 0xb4);
        // CB B4 0254
        gbc.setState(0x41a2, 0x6c9c, 0x88f0, 0x9f49, 0x66a8, 0x3b5, 0x1, 0x0);
        gbc.writeMem(0x41a2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6c9c);
        EXPECT(gbc.pc(), 0x41a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0255
        gbc.setState(0x2119, 0xfccf, 0x55e0, 0x6d5a, 0x9d64, 0x5329, 0x0, 0x1);
        gbc.writeMem(0x2119, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xfccf);
        EXPECT(gbc.pc(), 0x211b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0256
        gbc.setState(0x649d, 0x9950, 0x20d0, 0xc497, 0xdbb5, 0x6aa0, 0x0, 0x0);
        gbc.writeMem(0x649d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9950);
        EXPECT(gbc.pc(), 0x649f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0257
        gbc.setState(0xe0a8, 0xad31, 0x5610, 0xb712, 0x5ae0, 0x749a, 0x0, 0x1);
        gbc.writeMem(0xe0a8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xad31);
        EXPECT(gbc.pc(), 0xe0aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0a8), 0xcb);
        EXPECT(gbc.readMem(0xe0a9), 0xb4);
        // CB B4 0259
        gbc.setState(0xa3e6, 0x7296, 0xc680, 0x8ad3, 0xcdb4, 0xaca3, 0x0, 0x0);
        gbc.writeMem(0xa3e6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7296);
        EXPECT(gbc.pc(), 0xa3e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3e6), 0xcb);
        EXPECT(gbc.readMem(0xa3e7), 0xb4);
        // CB B4 025A
        gbc.setState(0x8714, 0x1af0, 0xca50, 0x9f85, 0x7c4d, 0x6a80, 0x0, 0x0);
        gbc.writeMem(0x8714, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1af0);
        EXPECT(gbc.pc(), 0x8716);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8714), 0xcb);
        EXPECT(gbc.readMem(0x8715), 0xb4);
        // CB B4 025B
        gbc.setState(0x3c56, 0x86c, 0x5240, 0x21b, 0xfa00, 0x74db, 0x0, 0x0);
        gbc.writeMem(0x3c56, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x86c);
        EXPECT(gbc.pc(), 0x3c58);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 025C
        gbc.setState(0xbf92, 0xf3b9, 0x3fe0, 0x2401, 0x745, 0xcf91, 0x1, 0x0);
        gbc.writeMem(0xbf92, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf3b9);
        EXPECT(gbc.pc(), 0xbf94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf92), 0xcb);
        EXPECT(gbc.readMem(0xbf93), 0xb4);
        // CB B4 025F
        gbc.setState(0xbfbc, 0xd496, 0x95d0, 0xe765, 0xe9ac, 0xa3c1, 0x0, 0x0);
        gbc.writeMem(0xbfbc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xd496);
        EXPECT(gbc.pc(), 0xbfbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfbc), 0xcb);
        EXPECT(gbc.readMem(0xbfbd), 0xb4);
        // CB B4 0260
        gbc.setState(0x6cf5, 0xca68, 0xe840, 0x450c, 0x33eb, 0xeaee, 0x1, 0x1);
        gbc.writeMem(0x6cf5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xca68);
        EXPECT(gbc.pc(), 0x6cf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0261
        gbc.setState(0x5da4, 0xbb79, 0x6a10, 0xb591, 0xbfd8, 0x130b, 0x1, 0x0);
        gbc.writeMem(0x5da4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xbb79);
        EXPECT(gbc.pc(), 0x5da6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0262
        gbc.setState(0x15cf, 0x9e04, 0xed10, 0xb35d, 0x7ed2, 0x7e05, 0x0, 0x1);
        gbc.writeMem(0x15cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9e04);
        EXPECT(gbc.pc(), 0x15d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0263
        gbc.setState(0x8616, 0xf547, 0x9a80, 0x5573, 0xc44d, 0xdb99, 0x1, 0x1);
        gbc.writeMem(0x8616, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xf547);
        EXPECT(gbc.pc(), 0x8618);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8616), 0xcb);
        EXPECT(gbc.readMem(0x8617), 0xb4);
        // CB B4 0264
        gbc.setState(0x4004, 0xbbbf, 0x5400, 0xe02d, 0x3c83, 0x4e21, 0x0, 0x0);
        gbc.writeMem(0x4004, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbbbf);
        EXPECT(gbc.pc(), 0x4006);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0265
        gbc.setState(0x840b, 0x6bc, 0x7f60, 0x42c3, 0x3d41, 0x858, 0x0, 0x1);
        gbc.writeMem(0x840b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6bc);
        EXPECT(gbc.pc(), 0x840d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x840b), 0xcb);
        EXPECT(gbc.readMem(0x840c), 0xb4);
        // CB B4 0266
        gbc.setState(0xbf81, 0x990c, 0xcaf0, 0x6cc, 0xdbbf, 0x8480, 0x0, 0x1);
        gbc.writeMem(0xbf81, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x990c);
        EXPECT(gbc.pc(), 0xbf83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf81), 0xcb);
        EXPECT(gbc.readMem(0xbf82), 0xb4);
        // CB B4 0267
        gbc.setState(0x2920, 0x8f2d, 0x16a0, 0x313c, 0x39c8, 0x8dc4, 0x1, 0x1);
        gbc.writeMem(0x2920, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8f2d);
        EXPECT(gbc.pc(), 0x2922);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0268
        gbc.setState(0xb85e, 0xdacc, 0xf980, 0xf23a, 0x1ec3, 0x2052, 0x1, 0x1);
        gbc.writeMem(0xb85e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xdacc);
        EXPECT(gbc.pc(), 0xb860);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb85e), 0xcb);
        EXPECT(gbc.readMem(0xb85f), 0xb4);
        // CB B4 0269
        gbc.setState(0xf7f, 0xc0ef, 0xc4c0, 0xe8b3, 0xd1c4, 0xe1c2, 0x0, 0x1);
        gbc.writeMem(0xf7f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc0ef);
        EXPECT(gbc.pc(), 0xf81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 026A
        gbc.setState(0x509b, 0x2182, 0x6d10, 0x94a3, 0xfab0, 0x7c97, 0x1, 0x1);
        gbc.writeMem(0x509b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x2182);
        EXPECT(gbc.pc(), 0x509d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 026B
        gbc.setState(0x1dc1, 0xb544, 0x8040, 0x377a, 0xb878, 0x9db, 0x0, 0x0);
        gbc.writeMem(0x1dc1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb544);
        EXPECT(gbc.pc(), 0x1dc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 026D
        gbc.setState(0x77ea, 0x3ad4, 0xd480, 0x4bb4, 0x4b59, 0x712b, 0x0, 0x1);
        gbc.writeMem(0x77ea, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3ad4);
        EXPECT(gbc.pc(), 0x77ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 026E
        gbc.setState(0x7db4, 0x41cc, 0xe110, 0x5919, 0x8232, 0xf5dd, 0x0, 0x1);
        gbc.writeMem(0x7db4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x41cc);
        EXPECT(gbc.pc(), 0x7db6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 026F
        gbc.setState(0x5aa4, 0x493b, 0x220, 0x46e7, 0x54f4, 0x1362, 0x0, 0x1);
        gbc.writeMem(0x5aa4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x493b);
        EXPECT(gbc.pc(), 0x5aa6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0270
        gbc.setState(0xd11d, 0x3d38, 0x4d30, 0x13bd, 0xaec5, 0x9f5c, 0x0, 0x1);
        gbc.writeMem(0xd11d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x3d38);
        EXPECT(gbc.pc(), 0xd11f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd11d), 0xcb);
        EXPECT(gbc.readMem(0xd11e), 0xb4);
        // CB B4 0273
        gbc.setState(0x2006, 0xb8cf, 0x3260, 0xf562, 0x2ccf, 0x671a, 0x0, 0x1);
        gbc.writeMem(0x2006, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xb8cf);
        EXPECT(gbc.pc(), 0x2008);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0274
        gbc.setState(0xc364, 0xdc0a, 0xd070, 0xf550, 0x758f, 0x1748, 0x0, 0x1);
        gbc.writeMem(0xc364, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdc0a);
        EXPECT(gbc.pc(), 0xc366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc364), 0xcb);
        EXPECT(gbc.readMem(0xc365), 0xb4);
        // CB B4 0275
        gbc.setState(0x732f, 0x645e, 0x5f90, 0x1f7d, 0xb5c0, 0x5c4b, 0x0, 0x0);
        gbc.writeMem(0x732f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x645e);
        EXPECT(gbc.pc(), 0x7331);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0276
        gbc.setState(0x987b, 0x850d, 0x11e0, 0x9cd4, 0xfa1a, 0x5769, 0x0, 0x1);
        gbc.writeMem(0x987b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x850d);
        EXPECT(gbc.pc(), 0x987d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x987b), 0xcb);
        EXPECT(gbc.readMem(0x987c), 0xb4);
        // CB B4 0277
        gbc.setState(0x36af, 0x8950, 0x5f70, 0xf132, 0x4074, 0xc452, 0x1, 0x0);
        gbc.writeMem(0x36af, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8950);
        EXPECT(gbc.pc(), 0x36b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0278
        gbc.setState(0x565b, 0xc646, 0xebd0, 0xa76d, 0xc99, 0xc871, 0x0, 0x1);
        gbc.writeMem(0x565b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc646);
        EXPECT(gbc.pc(), 0x565d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0279
        gbc.setState(0x9a16, 0x2562, 0x5340, 0xc401, 0x65b9, 0xe907, 0x0, 0x0);
        gbc.writeMem(0x9a16, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x2562);
        EXPECT(gbc.pc(), 0x9a18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a16), 0xcb);
        EXPECT(gbc.readMem(0x9a17), 0xb4);
        // CB B4 027A
        gbc.setState(0x3626, 0xb33e, 0x8900, 0xba6, 0xaf11, 0x519b, 0x0, 0x1);
        gbc.writeMem(0x3626, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xb33e);
        EXPECT(gbc.pc(), 0x3628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 027B
        gbc.setState(0x3a83, 0x1fdc, 0x3110, 0x1c9d, 0x7f89, 0x21fb, 0x1, 0x1);
        gbc.writeMem(0x3a83, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1fdc);
        EXPECT(gbc.pc(), 0x3a85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 027C
        gbc.setState(0xdbec, 0x3c7e, 0xe710, 0xcb48, 0x5b73, 0x9cbb, 0x1, 0x0);
        gbc.writeMem(0xdbec, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3c7e);
        EXPECT(gbc.pc(), 0xdbee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbec), 0xcb);
        EXPECT(gbc.readMem(0xdbed), 0xb4);
        // CB B4 027D
        gbc.setState(0x5950, 0xd0de, 0xa240, 0xefc5, 0xd9fc, 0x655c, 0x1, 0x1);
        gbc.writeMem(0x5950, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd0de);
        EXPECT(gbc.pc(), 0x5952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 027E
        gbc.setState(0x2194, 0xee52, 0xaec0, 0x84f5, 0x1995, 0x9cde, 0x1, 0x1);
        gbc.writeMem(0x2194, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xee52);
        EXPECT(gbc.pc(), 0x2196);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 027F
        gbc.setState(0x6d3d, 0x9b19, 0x5730, 0xb306, 0x1570, 0x944b, 0x1, 0x1);
        gbc.writeMem(0x6d3d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9b19);
        EXPECT(gbc.pc(), 0x6d3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0280
        gbc.setState(0x42b4, 0xc195, 0xb3c0, 0xd603, 0xc237, 0x4326, 0x1, 0x0);
        gbc.writeMem(0x42b4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xc195);
        EXPECT(gbc.pc(), 0x42b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0281
        gbc.setState(0xbb32, 0x28d3, 0x3620, 0x5f5a, 0x894d, 0xff8c, 0x1, 0x0);
        gbc.writeMem(0xbb32, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x28d3);
        EXPECT(gbc.pc(), 0xbb34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb32), 0xcb);
        EXPECT(gbc.readMem(0xbb33), 0xb4);
        // CB B4 0282
        gbc.setState(0x7641, 0x6501, 0xeac0, 0x3aa4, 0x17a0, 0x8775, 0x1, 0x1);
        gbc.writeMem(0x7641, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6501);
        EXPECT(gbc.pc(), 0x7643);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0283
        gbc.setState(0xe38c, 0xf6d, 0xbf00, 0xcfa9, 0xa221, 0xd6a9, 0x1, 0x0);
        gbc.writeMem(0xe38c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xf6d);
        EXPECT(gbc.pc(), 0xe38e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe38c), 0xcb);
        EXPECT(gbc.readMem(0xe38d), 0xb4);
        // CB B4 0284
        gbc.setState(0xcc86, 0xbea8, 0x5fe0, 0x833a, 0x209b, 0x7139, 0x0, 0x0);
        gbc.writeMem(0xcc86, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xbea8);
        EXPECT(gbc.pc(), 0xcc88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc86), 0xcb);
        EXPECT(gbc.readMem(0xcc87), 0xb4);
        // CB B4 0285
        gbc.setState(0x6800, 0x7716, 0xdff0, 0x6c23, 0x9aaa, 0x262e, 0x1, 0x1);
        gbc.writeMem(0x6800, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x7716);
        EXPECT(gbc.pc(), 0x6802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0286
        gbc.setState(0x7b1c, 0x353f, 0x9c40, 0xabbb, 0x2451, 0x4d4f, 0x0, 0x0);
        gbc.writeMem(0x7b1c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x353f);
        EXPECT(gbc.pc(), 0x7b1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0287
        gbc.setState(0xe85d, 0xefac, 0x24e0, 0xc1b4, 0x7a03, 0x9a54, 0x0, 0x1);
        gbc.writeMem(0xe85d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xefac);
        EXPECT(gbc.pc(), 0xe85f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe85d), 0xcb);
        EXPECT(gbc.readMem(0xe85e), 0xb4);
        // CB B4 0288
        gbc.setState(0x5a96, 0xc231, 0xadd0, 0x814b, 0x67c7, 0x65, 0x0, 0x0);
        gbc.writeMem(0x5a96, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc231);
        EXPECT(gbc.pc(), 0x5a98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0289
        gbc.setState(0xa34c, 0x31a, 0x210, 0xe65, 0xb040, 0x7249, 0x1, 0x0);
        gbc.writeMem(0xa34c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x31a);
        EXPECT(gbc.pc(), 0xa34e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa34c), 0xcb);
        EXPECT(gbc.readMem(0xa34d), 0xb4);
        // CB B4 028A
        gbc.setState(0xf0, 0x2f78, 0xa720, 0xab56, 0xd249, 0x8a36, 0x1, 0x1);
        gbc.writeMem(0xf0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x2f78);
        EXPECT(gbc.pc(), 0xf2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 028B
        gbc.setState(0xd15f, 0x7176, 0x4b30, 0xa9ab, 0xd315, 0x427d, 0x1, 0x1);
        gbc.writeMem(0xd15f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x7176);
        EXPECT(gbc.pc(), 0xd161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd15f), 0xcb);
        EXPECT(gbc.readMem(0xd160), 0xb4);
        // CB B4 028C
        gbc.setState(0x93dc, 0x6f56, 0x94e0, 0x3dac, 0xef29, 0x675e, 0x0, 0x0);
        gbc.writeMem(0x93dc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x6f56);
        EXPECT(gbc.pc(), 0x93de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93dc), 0xcb);
        EXPECT(gbc.readMem(0x93dd), 0xb4);
        // CB B4 028D
        gbc.setState(0x36b, 0x6e2d, 0xefb0, 0xea82, 0x19ca, 0x5ff5, 0x1, 0x0);
        gbc.writeMem(0x36b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6e2d);
        EXPECT(gbc.pc(), 0x36d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 028E
        gbc.setState(0x4347, 0xcc74, 0xb390, 0xe65, 0x58ee, 0xa4e1, 0x0, 0x0);
        gbc.writeMem(0x4347, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xcc74);
        EXPECT(gbc.pc(), 0x4349);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 028F
        gbc.setState(0xdbf4, 0xd2de, 0x1170, 0xd516, 0x70f3, 0xfa3c, 0x1, 0x0);
        gbc.writeMem(0xdbf4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd2de);
        EXPECT(gbc.pc(), 0xdbf6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbf4), 0xcb);
        EXPECT(gbc.readMem(0xdbf5), 0xb4);
        // CB B4 0290
        gbc.setState(0xd9c7, 0xc522, 0x4400, 0x9990, 0xd406, 0xc93c, 0x0, 0x1);
        gbc.writeMem(0xd9c7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc522);
        EXPECT(gbc.pc(), 0xd9c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9c7), 0xcb);
        EXPECT(gbc.readMem(0xd9c8), 0xb4);
        // CB B4 0292
        gbc.setState(0x4760, 0x3df2, 0x2e40, 0x2f5e, 0x3eac, 0x9c03, 0x1, 0x0);
        gbc.writeMem(0x4760, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x3df2);
        EXPECT(gbc.pc(), 0x4762);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0293
        gbc.setState(0xabec, 0xc4f7, 0x100, 0xb160, 0xc4dd, 0x1b51, 0x0, 0x0);
        gbc.writeMem(0xabec, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xc4f7);
        EXPECT(gbc.pc(), 0xabee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabec), 0xcb);
        EXPECT(gbc.readMem(0xabed), 0xb4);
        // CB B4 0294
        gbc.setState(0x67ea, 0x309a, 0x1c70, 0xecd, 0x166f, 0x7860, 0x0, 0x0);
        gbc.writeMem(0x67ea, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x309a);
        EXPECT(gbc.pc(), 0x67ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0295
        gbc.setState(0x5b20, 0x2f5c, 0xaa60, 0x2351, 0xe2ad, 0x6773, 0x1, 0x1);
        gbc.writeMem(0x5b20, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2f5c);
        EXPECT(gbc.pc(), 0x5b22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0296
        gbc.setState(0x50ec, 0xc3e4, 0x5f90, 0x2922, 0x6c37, 0xa4e5, 0x1, 0x0);
        gbc.writeMem(0x50ec, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xc3e4);
        EXPECT(gbc.pc(), 0x50ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0297
        gbc.setState(0x3f48, 0x1f0c, 0x3340, 0xd22, 0x5d5d, 0xf6c2, 0x0, 0x1);
        gbc.writeMem(0x3f48, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x1f0c);
        EXPECT(gbc.pc(), 0x3f4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0298
        gbc.setState(0x7351, 0x91a3, 0x84f0, 0xcf7a, 0x81f, 0x7f9f, 0x1, 0x1);
        gbc.writeMem(0x7351, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x91a3);
        EXPECT(gbc.pc(), 0x7353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0299
        gbc.setState(0x875c, 0x13a1, 0xce30, 0x762, 0xac74, 0x3a80, 0x1, 0x1);
        gbc.writeMem(0x875c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x13a1);
        EXPECT(gbc.pc(), 0x875e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x875c), 0xcb);
        EXPECT(gbc.readMem(0x875d), 0xb4);
        // CB B4 029A
        gbc.setState(0xd277, 0x420f, 0xde80, 0x9603, 0x8577, 0x8707, 0x1, 0x0);
        gbc.writeMem(0xd277, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x420f);
        EXPECT(gbc.pc(), 0xd279);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd277), 0xcb);
        EXPECT(gbc.readMem(0xd278), 0xb4);
        // CB B4 029B
        gbc.setState(0x64e1, 0x4f42, 0x9a60, 0xaee, 0xcaed, 0x5e7d, 0x0, 0x0);
        gbc.writeMem(0x64e1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4f42);
        EXPECT(gbc.pc(), 0x64e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 029C
        gbc.setState(0x3512, 0xd259, 0x9a80, 0x9346, 0xfe5d, 0x5375, 0x1, 0x0);
        gbc.writeMem(0x3512, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd259);
        EXPECT(gbc.pc(), 0x3514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 029D
        gbc.setState(0xe35f, 0xab44, 0x19f0, 0xc87a, 0xc496, 0x6b67, 0x1, 0x0);
        gbc.writeMem(0xe35f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xab44);
        EXPECT(gbc.pc(), 0xe361);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe35f), 0xcb);
        EXPECT(gbc.readMem(0xe360), 0xb4);
        // CB B4 029E
        gbc.setState(0x1512, 0x73fe, 0xce90, 0xa09b, 0xd8e3, 0xbb33, 0x1, 0x1);
        gbc.writeMem(0x1512, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x73fe);
        EXPECT(gbc.pc(), 0x1514);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 029F
        gbc.setState(0x894e, 0x7965, 0x2420, 0x8314, 0xe84c, 0xdf6f, 0x0, 0x0);
        gbc.writeMem(0x894e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7965);
        EXPECT(gbc.pc(), 0x8950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x894e), 0xcb);
        EXPECT(gbc.readMem(0x894f), 0xb4);
        // CB B4 02A0
        gbc.setState(0x71e4, 0xb4e8, 0x310, 0xd5d5, 0x6c69, 0xe40c, 0x0, 0x1);
        gbc.writeMem(0x71e4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb4e8);
        EXPECT(gbc.pc(), 0x71e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02A1
        gbc.setState(0xe4c, 0xdcb9, 0x97d0, 0xb951, 0xeff9, 0x599f, 0x0, 0x1);
        gbc.writeMem(0xe4c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xdcb9);
        EXPECT(gbc.pc(), 0xe4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02A2
        gbc.setState(0xb4ae, 0xfabd, 0x5d50, 0x6299, 0xdc50, 0x89c0, 0x1, 0x1);
        gbc.writeMem(0xb4ae, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xfabd);
        EXPECT(gbc.pc(), 0xb4b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ae), 0xcb);
        EXPECT(gbc.readMem(0xb4af), 0xb4);
        // CB B4 02A3
        gbc.setState(0x17a4, 0x27e6, 0xeb90, 0x5cfd, 0x30bd, 0xe34d, 0x0, 0x1);
        gbc.writeMem(0x17a4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x27e6);
        EXPECT(gbc.pc(), 0x17a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02A4
        gbc.setState(0xce74, 0xf9af, 0x4ab0, 0x57a3, 0x7459, 0x6046, 0x0, 0x1);
        gbc.writeMem(0xce74, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xf9af);
        EXPECT(gbc.pc(), 0xce76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce74), 0xcb);
        EXPECT(gbc.readMem(0xce75), 0xb4);
        // CB B4 02A5
        gbc.setState(0x9fa5, 0xa598, 0x57f0, 0xd7ff, 0xc9ff, 0x73b1, 0x1, 0x0);
        gbc.writeMem(0x9fa5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa598);
        EXPECT(gbc.pc(), 0x9fa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa5), 0xcb);
        EXPECT(gbc.readMem(0x9fa6), 0xb4);
        // CB B4 02A6
        gbc.setState(0xbbad, 0x99f, 0x3790, 0x246b, 0x6be1, 0x321a, 0x1, 0x0);
        gbc.writeMem(0xbbad, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x99f);
        EXPECT(gbc.pc(), 0xbbaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbad), 0xcb);
        EXPECT(gbc.readMem(0xbbae), 0xb4);
        // CB B4 02A7
        gbc.setState(0x7e58, 0xe638, 0x5180, 0xaf92, 0xc51b, 0x27b7, 0x1, 0x1);
        gbc.writeMem(0x7e58, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xe638);
        EXPECT(gbc.pc(), 0x7e5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02A8
        gbc.setState(0x2e5a, 0xb7ab, 0xda30, 0x6659, 0xab3, 0x665f, 0x1, 0x0);
        gbc.writeMem(0x2e5a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xb7ab);
        EXPECT(gbc.pc(), 0x2e5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02A9
        gbc.setState(0x4cb0, 0xe00d, 0x8910, 0x640a, 0x2a24, 0x4496, 0x1, 0x0);
        gbc.writeMem(0x4cb0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xe00d);
        EXPECT(gbc.pc(), 0x4cb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02AA
        gbc.setState(0x8444, 0x5dd0, 0x9660, 0x689, 0xbd69, 0xdac8, 0x1, 0x1);
        gbc.writeMem(0x8444, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x5dd0);
        EXPECT(gbc.pc(), 0x8446);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8444), 0xcb);
        EXPECT(gbc.readMem(0x8445), 0xb4);
        // CB B4 02AB
        gbc.setState(0x8c1f, 0xc167, 0x40b0, 0x9e62, 0xc972, 0x19c2, 0x1, 0x1);
        gbc.writeMem(0x8c1f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc167);
        EXPECT(gbc.pc(), 0x8c21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c1f), 0xcb);
        EXPECT(gbc.readMem(0x8c20), 0xb4);
        // CB B4 02AC
        gbc.setState(0xb4c3, 0xc224, 0x4710, 0xe850, 0xadfc, 0xb69e, 0x1, 0x1);
        gbc.writeMem(0xb4c3, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xc224);
        EXPECT(gbc.pc(), 0xb4c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4c3), 0xcb);
        EXPECT(gbc.readMem(0xb4c4), 0xb4);
        // CB B4 02AD
        gbc.setState(0x786d, 0x2b0, 0x90d0, 0xb7a5, 0x2488, 0xad2f, 0x0, 0x1);
        gbc.writeMem(0x786d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x2b0);
        EXPECT(gbc.pc(), 0x786f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02AE
        gbc.setState(0x5557, 0x7abd, 0xec10, 0x922d, 0x395d, 0x36a0, 0x0, 0x0);
        gbc.writeMem(0x5557, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x7abd);
        EXPECT(gbc.pc(), 0x5559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02AF
        gbc.setState(0x1984, 0x2138, 0x68b0, 0x3c77, 0x6a33, 0x46a6, 0x0, 0x0);
        gbc.writeMem(0x1984, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2138);
        EXPECT(gbc.pc(), 0x1986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02B0
        gbc.setState(0x46f9, 0x6335, 0x8750, 0x4a1b, 0x57eb, 0xc659, 0x0, 0x1);
        gbc.writeMem(0x46f9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x6335);
        EXPECT(gbc.pc(), 0x46fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02B2
        gbc.setState(0x555c, 0x9666, 0x4ac0, 0x1e8d, 0x1bda, 0x9be7, 0x1, 0x1);
        gbc.writeMem(0x555c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9666);
        EXPECT(gbc.pc(), 0x555e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02B3
        gbc.setState(0x2d15, 0x34b0, 0xe4a0, 0xa56, 0x85f0, 0x7901, 0x1, 0x0);
        gbc.writeMem(0x2d15, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x34b0);
        EXPECT(gbc.pc(), 0x2d17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02B5
        gbc.setState(0xda4e, 0x331e, 0x7820, 0x3868, 0x8667, 0xbcaf, 0x1, 0x1);
        gbc.writeMem(0xda4e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x331e);
        EXPECT(gbc.pc(), 0xda50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda4e), 0xcb);
        EXPECT(gbc.readMem(0xda4f), 0xb4);
        // CB B4 02B6
        gbc.setState(0xc2bc, 0x15aa, 0x6c10, 0xa538, 0x9933, 0x7d1b, 0x0, 0x0);
        gbc.writeMem(0xc2bc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x15aa);
        EXPECT(gbc.pc(), 0xc2be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2bc), 0xcb);
        EXPECT(gbc.readMem(0xc2bd), 0xb4);
        // CB B4 02B8
        gbc.setState(0xdaf1, 0xcde6, 0x360, 0x4106, 0x7e2, 0xc933, 0x0, 0x0);
        gbc.writeMem(0xdaf1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xcde6);
        EXPECT(gbc.pc(), 0xdaf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaf1), 0xcb);
        EXPECT(gbc.readMem(0xdaf2), 0xb4);
        // CB B4 02B9
        gbc.setState(0x5d91, 0x397d, 0xf540, 0xbe24, 0x161e, 0xb2ff, 0x0, 0x1);
        gbc.writeMem(0x5d91, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x397d);
        EXPECT(gbc.pc(), 0x5d93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02BA
        gbc.setState(0xd5a0, 0xde1e, 0x89e0, 0xba1e, 0xc1c2, 0xebb5, 0x1, 0x0);
        gbc.writeMem(0xd5a0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xde1e);
        EXPECT(gbc.pc(), 0xd5a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5a0), 0xcb);
        EXPECT(gbc.readMem(0xd5a1), 0xb4);
        // CB B4 02BB
        gbc.setState(0xb111, 0xe632, 0x5b70, 0x93d1, 0xd5f9, 0xf87, 0x0, 0x1);
        gbc.writeMem(0xb111, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe632);
        EXPECT(gbc.pc(), 0xb113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb111), 0xcb);
        EXPECT(gbc.readMem(0xb112), 0xb4);
        // CB B4 02BC
        gbc.setState(0x51ce, 0x350e, 0x3b30, 0xcdec, 0xc35e, 0xb6b, 0x1, 0x1);
        gbc.writeMem(0x51ce, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x350e);
        EXPECT(gbc.pc(), 0x51d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02BD
        gbc.setState(0xba4e, 0x307a, 0x9b20, 0x8bac, 0xa168, 0xe0ff, 0x0, 0x0);
        gbc.writeMem(0xba4e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x307a);
        EXPECT(gbc.pc(), 0xba50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba4e), 0xcb);
        EXPECT(gbc.readMem(0xba4f), 0xb4);
        // CB B4 02BE
        gbc.setState(0xdb8f, 0xd029, 0xb870, 0xf04a, 0x2c17, 0xaf3d, 0x0, 0x1);
        gbc.writeMem(0xdb8f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd029);
        EXPECT(gbc.pc(), 0xdb91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb8f), 0xcb);
        EXPECT(gbc.readMem(0xdb90), 0xb4);
        // CB B4 02BF
        gbc.setState(0xef32, 0x9749, 0x2810, 0x4826, 0x2252, 0x1409, 0x0, 0x1);
        gbc.writeMem(0xef32, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x9749);
        EXPECT(gbc.pc(), 0xef34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef32), 0xcb);
        EXPECT(gbc.readMem(0xef33), 0xb4);
        // CB B4 02C0
        gbc.setState(0x244d, 0x3081, 0xf8d0, 0xdf59, 0x63fc, 0x5228, 0x1, 0x1);
        gbc.writeMem(0x244d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3081);
        EXPECT(gbc.pc(), 0x244f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02C1
        gbc.setState(0xd, 0xaf26, 0xf850, 0x2b7f, 0x1897, 0xc679, 0x1, 0x1);
        gbc.writeMem(0xd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xaf26);
        EXPECT(gbc.pc(), 0xf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02C2
        gbc.setState(0x4758, 0x8d3f, 0x1d20, 0x6d8b, 0x99f2, 0x203c, 0x1, 0x0);
        gbc.writeMem(0x4758, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x8d3f);
        EXPECT(gbc.pc(), 0x475a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02C3
        gbc.setState(0xaf42, 0x800b, 0x74a0, 0x4de9, 0x7588, 0x7d52, 0x1, 0x1);
        gbc.writeMem(0xaf42, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x800b);
        EXPECT(gbc.pc(), 0xaf44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf42), 0xcb);
        EXPECT(gbc.readMem(0xaf43), 0xb4);
        // CB B4 02C4
        gbc.setState(0x2de2, 0x654a, 0x7810, 0x247c, 0x9297, 0x22bb, 0x0, 0x1);
        gbc.writeMem(0x2de2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x654a);
        EXPECT(gbc.pc(), 0x2de4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02C5
        gbc.setState(0x8963, 0x3572, 0x8640, 0x2939, 0x4824, 0x3746, 0x0, 0x0);
        gbc.writeMem(0x8963, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3572);
        EXPECT(gbc.pc(), 0x8965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8963), 0xcb);
        EXPECT(gbc.readMem(0x8964), 0xb4);
        // CB B4 02C6
        gbc.setState(0x1667, 0xbdf3, 0xf6b0, 0x1b70, 0x8619, 0xfd85, 0x0, 0x0);
        gbc.writeMem(0x1667, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xbdf3);
        EXPECT(gbc.pc(), 0x1669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02C7
        gbc.setState(0x4927, 0x9553, 0x5980, 0x58bc, 0x8f8, 0xcfd0, 0x1, 0x1);
        gbc.writeMem(0x4927, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x9553);
        EXPECT(gbc.pc(), 0x4929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02C8
        gbc.setState(0xd6f8, 0xbe25, 0x2c50, 0x76ad, 0x85, 0xf602, 0x0, 0x0);
        gbc.writeMem(0xd6f8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xbe25);
        EXPECT(gbc.pc(), 0xd6fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6f8), 0xcb);
        EXPECT(gbc.readMem(0xd6f9), 0xb4);
        // CB B4 02C9
        gbc.setState(0xeb94, 0x1313, 0xb330, 0x9e69, 0x807b, 0x9780, 0x0, 0x1);
        gbc.writeMem(0xeb94, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1313);
        EXPECT(gbc.pc(), 0xeb96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb94), 0xcb);
        EXPECT(gbc.readMem(0xeb95), 0xb4);
        // CB B4 02CA
        gbc.setState(0x24f, 0x92ba, 0x78f0, 0x9258, 0x5410, 0xd724, 0x1, 0x0);
        gbc.writeMem(0x24f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x92ba);
        EXPECT(gbc.pc(), 0x251);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02CB
        gbc.setState(0xf6e, 0x6e6b, 0xfbe0, 0x274e, 0xf75b, 0x3aab, 0x0, 0x1);
        gbc.writeMem(0xf6e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6e6b);
        EXPECT(gbc.pc(), 0xf70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02CC
        gbc.setState(0x9c56, 0x85dd, 0x87d0, 0x6c22, 0x8b53, 0xc039, 0x1, 0x1);
        gbc.writeMem(0x9c56, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x85dd);
        EXPECT(gbc.pc(), 0x9c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c56), 0xcb);
        EXPECT(gbc.readMem(0x9c57), 0xb4);
        // CB B4 02CD
        gbc.setState(0xd9d2, 0xaeea, 0x6d40, 0xcecf, 0xe0b6, 0x946f, 0x0, 0x0);
        gbc.writeMem(0xd9d2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xaeea);
        EXPECT(gbc.pc(), 0xd9d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d2), 0xcb);
        EXPECT(gbc.readMem(0xd9d3), 0xb4);
        // CB B4 02CE
        gbc.setState(0x23e8, 0x8d4, 0xb0, 0xca44, 0xf47, 0xb66c, 0x1, 0x1);
        gbc.writeMem(0x23e8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8d4);
        EXPECT(gbc.pc(), 0x23ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02CF
        gbc.setState(0xd16f, 0x1d3d, 0x56f0, 0x228d, 0x2255, 0xe018, 0x1, 0x0);
        gbc.writeMem(0xd16f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1d3d);
        EXPECT(gbc.pc(), 0xd171);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd16f), 0xcb);
        EXPECT(gbc.readMem(0xd170), 0xb4);
        // CB B4 02D0
        gbc.setState(0x102d, 0x58c7, 0x1fc0, 0x878e, 0xb7fd, 0x5286, 0x1, 0x0);
        gbc.writeMem(0x102d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x58c7);
        EXPECT(gbc.pc(), 0x102f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02D1
        gbc.setState(0x51a2, 0x409f, 0x92c0, 0x923b, 0xf318, 0xabe9, 0x0, 0x1);
        gbc.writeMem(0x51a2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x409f);
        EXPECT(gbc.pc(), 0x51a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02D3
        gbc.setState(0x22b2, 0x83e6, 0x6720, 0xc685, 0x5d90, 0x24e1, 0x1, 0x0);
        gbc.writeMem(0x22b2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x83e6);
        EXPECT(gbc.pc(), 0x22b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02D4
        gbc.setState(0xa51f, 0xac40, 0x7970, 0x946c, 0xa09a, 0x6c79, 0x1, 0x1);
        gbc.writeMem(0xa51f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xac40);
        EXPECT(gbc.pc(), 0xa521);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa51f), 0xcb);
        EXPECT(gbc.readMem(0xa520), 0xb4);
        // CB B4 02D5
        gbc.setState(0x4b29, 0x305c, 0x7c80, 0x6122, 0x7c3e, 0x1b83, 0x1, 0x1);
        gbc.writeMem(0x4b29, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x305c);
        EXPECT(gbc.pc(), 0x4b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02D6
        gbc.setState(0xcfcf, 0xc87f, 0x1ef0, 0x7e10, 0xe43f, 0x1362, 0x1, 0x0);
        gbc.writeMem(0xcfcf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xc87f);
        EXPECT(gbc.pc(), 0xcfd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfcf), 0xcb);
        EXPECT(gbc.readMem(0xcfd0), 0xb4);
        // CB B4 02D7
        gbc.setState(0xda2e, 0x442d, 0x4420, 0x5823, 0xf506, 0xd159, 0x0, 0x0);
        gbc.writeMem(0xda2e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x442d);
        EXPECT(gbc.pc(), 0xda30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda2e), 0xcb);
        EXPECT(gbc.readMem(0xda2f), 0xb4);
        // CB B4 02D8
        gbc.setState(0x2974, 0xa6d4, 0xd700, 0x904b, 0xbe3, 0xd832, 0x0, 0x0);
        gbc.writeMem(0x2974, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa6d4);
        EXPECT(gbc.pc(), 0x2976);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02D9
        gbc.setState(0xea5, 0xa4aa, 0xfc90, 0x30e, 0xb3da, 0x9bb8, 0x1, 0x1);
        gbc.writeMem(0xea5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa4aa);
        EXPECT(gbc.pc(), 0xea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02DA
        gbc.setState(0x3969, 0x8461, 0x9f80, 0x26c, 0x9e60, 0x23b0, 0x1, 0x0);
        gbc.writeMem(0x3969, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8461);
        EXPECT(gbc.pc(), 0x396b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02DB
        gbc.setState(0x4dae, 0xdf67, 0xe3d0, 0x8a68, 0x36a4, 0xdcdb, 0x1, 0x1);
        gbc.writeMem(0x4dae, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xdf67);
        EXPECT(gbc.pc(), 0x4db0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02DC
        gbc.setState(0x2023, 0xd6d4, 0x7030, 0xb6f3, 0xccf4, 0x1b35, 0x1, 0x1);
        gbc.writeMem(0x2023, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd6d4);
        EXPECT(gbc.pc(), 0x2025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02DD
        gbc.setState(0x511f, 0xb611, 0x8690, 0x788d, 0x4c3f, 0xebad, 0x0, 0x1);
        gbc.writeMem(0x511f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xb611);
        EXPECT(gbc.pc(), 0x5121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02DE
        gbc.setState(0x632e, 0x6e7f, 0x1e00, 0x593e, 0x20f5, 0x28ee, 0x0, 0x0);
        gbc.writeMem(0x632e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6e7f);
        EXPECT(gbc.pc(), 0x6330);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02DF
        gbc.setState(0x5a36, 0x5205, 0xd0, 0xfdb7, 0x8ba0, 0x525c, 0x0, 0x1);
        gbc.writeMem(0x5a36, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5205);
        EXPECT(gbc.pc(), 0x5a38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02E0
        gbc.setState(0x832d, 0xbcd8, 0xb7a0, 0x8261, 0xb948, 0x2f21, 0x0, 0x1);
        gbc.writeMem(0x832d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbcd8);
        EXPECT(gbc.pc(), 0x832f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x832d), 0xcb);
        EXPECT(gbc.readMem(0x832e), 0xb4);
        // CB B4 02E1
        gbc.setState(0xbc47, 0x1261, 0x9860, 0x9a2b, 0xd251, 0x6fb6, 0x1, 0x0);
        gbc.writeMem(0xbc47, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1261);
        EXPECT(gbc.pc(), 0xbc49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc47), 0xcb);
        EXPECT(gbc.readMem(0xbc48), 0xb4);
        // CB B4 02E2
        gbc.setState(0xef8f, 0xb0a, 0x1ff0, 0x341b, 0xe4f9, 0xfed7, 0x1, 0x1);
        gbc.writeMem(0xef8f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xb0a);
        EXPECT(gbc.pc(), 0xef91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef8f), 0xcb);
        EXPECT(gbc.readMem(0xef90), 0xb4);
        // CB B4 02E3
        gbc.setState(0x6f0d, 0xdff2, 0x56d0, 0x6552, 0xc91b, 0xab07, 0x1, 0x1);
        gbc.writeMem(0x6f0d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xdff2);
        EXPECT(gbc.pc(), 0x6f0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02E4
        gbc.setState(0xdab4, 0xe546, 0x6200, 0xae27, 0x646b, 0x8c3d, 0x0, 0x1);
        gbc.writeMem(0xdab4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe546);
        EXPECT(gbc.pc(), 0xdab6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdab4), 0xcb);
        EXPECT(gbc.readMem(0xdab5), 0xb4);
        // CB B4 02E5
        gbc.setState(0xb1ad, 0x88e4, 0xba10, 0xe498, 0x4f27, 0x3dbc, 0x0, 0x1);
        gbc.writeMem(0xb1ad, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x88e4);
        EXPECT(gbc.pc(), 0xb1af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ad), 0xcb);
        EXPECT(gbc.readMem(0xb1ae), 0xb4);
        // CB B4 02E6
        gbc.setState(0xdf91, 0xdc76, 0x1a40, 0xeeb5, 0x4ac7, 0xde12, 0x0, 0x1);
        gbc.writeMem(0xdf91, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xdc76);
        EXPECT(gbc.pc(), 0xdf93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf91), 0xcb);
        EXPECT(gbc.readMem(0xdf92), 0xb4);
        // CB B4 02E7
        gbc.setState(0x7f7a, 0x67d8, 0x3400, 0xd98b, 0x5bc7, 0x1946, 0x1, 0x0);
        gbc.writeMem(0x7f7a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x67d8);
        EXPECT(gbc.pc(), 0x7f7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02E8
        gbc.setState(0x7258, 0x24ad, 0xb70, 0x2660, 0x197f, 0xcb7d, 0x0, 0x0);
        gbc.writeMem(0x7258, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x24ad);
        EXPECT(gbc.pc(), 0x725a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02E9
        gbc.setState(0x4f5c, 0x5cbf, 0x2cf0, 0x3bed, 0xaf29, 0x7cba, 0x0, 0x1);
        gbc.writeMem(0x4f5c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x5cbf);
        EXPECT(gbc.pc(), 0x4f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02EA
        gbc.setState(0xb882, 0x2052, 0xa000, 0xc62b, 0xaf28, 0x7a03, 0x1, 0x1);
        gbc.writeMem(0xb882, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x2052);
        EXPECT(gbc.pc(), 0xb884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb882), 0xcb);
        EXPECT(gbc.readMem(0xb883), 0xb4);
        // CB B4 02EB
        gbc.setState(0xe86d, 0x5c2d, 0xeb60, 0xf020, 0x504d, 0xa5c2, 0x1, 0x0);
        gbc.writeMem(0xe86d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x5c2d);
        EXPECT(gbc.pc(), 0xe86f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe86d), 0xcb);
        EXPECT(gbc.readMem(0xe86e), 0xb4);
        // CB B4 02EC
        gbc.setState(0x7cd5, 0x4313, 0xf0, 0xdfca, 0x2f2a, 0x19e2, 0x1, 0x0);
        gbc.writeMem(0x7cd5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4313);
        EXPECT(gbc.pc(), 0x7cd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02ED
        gbc.setState(0x7697, 0x3220, 0x5ec0, 0x16bf, 0x2ea3, 0x6202, 0x1, 0x0);
        gbc.writeMem(0x7697, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3220);
        EXPECT(gbc.pc(), 0x7699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02EF
        gbc.setState(0xc86f, 0xa695, 0xeab0, 0xa8dc, 0xd0e6, 0x69c9, 0x1, 0x1);
        gbc.writeMem(0xc86f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa695);
        EXPECT(gbc.pc(), 0xc871);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc86f), 0xcb);
        EXPECT(gbc.readMem(0xc870), 0xb4);
        // CB B4 02F0
        gbc.setState(0xb9f5, 0x30ea, 0xd2b0, 0x7b42, 0x422a, 0xcc81, 0x1, 0x0);
        gbc.writeMem(0xb9f5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x30ea);
        EXPECT(gbc.pc(), 0xb9f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9f5), 0xcb);
        EXPECT(gbc.readMem(0xb9f6), 0xb4);
        // CB B4 02F1
        gbc.setState(0xe08b, 0x8d9b, 0x6bc0, 0xb4cd, 0x34f9, 0xce45, 0x1, 0x1);
        gbc.writeMem(0xe08b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x8d9b);
        EXPECT(gbc.pc(), 0xe08d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe08b), 0xcb);
        EXPECT(gbc.readMem(0xe08c), 0xb4);
        // CB B4 02F2
        gbc.setState(0x6b1d, 0xf8bc, 0xc570, 0x6603, 0x4e39, 0x63ef, 0x0, 0x0);
        gbc.writeMem(0x6b1d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf8bc);
        EXPECT(gbc.pc(), 0x6b1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02F3
        gbc.setState(0x459f, 0x8f6d, 0xa590, 0x43a4, 0x235c, 0xea9e, 0x0, 0x1);
        gbc.writeMem(0x459f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8f6d);
        EXPECT(gbc.pc(), 0x45a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02F4
        gbc.setState(0x8972, 0x3dc3, 0xb2e0, 0x7ffa, 0x23e7, 0xff76, 0x1, 0x0);
        gbc.writeMem(0x8972, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x3dc3);
        EXPECT(gbc.pc(), 0x8974);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8972), 0xcb);
        EXPECT(gbc.readMem(0x8973), 0xb4);
        // CB B4 02F5
        gbc.setState(0x848c, 0x2b77, 0xac10, 0xb4d4, 0x7691, 0xd8b9, 0x1, 0x1);
        gbc.writeMem(0x848c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2b77);
        EXPECT(gbc.pc(), 0x848e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x848c), 0xcb);
        EXPECT(gbc.readMem(0x848d), 0xb4);
        // CB B4 02F6
        gbc.setState(0x6f72, 0x6bae, 0xecf0, 0x95db, 0x2515, 0xadd, 0x0, 0x1);
        gbc.writeMem(0x6f72, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x6bae);
        EXPECT(gbc.pc(), 0x6f74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02F7
        gbc.setState(0x43cf, 0x9d76, 0x56e0, 0x8568, 0xd4c8, 0x44ea, 0x1, 0x1);
        gbc.writeMem(0x43cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9d76);
        EXPECT(gbc.pc(), 0x43d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02F8
        gbc.setState(0x6e04, 0xcc12, 0xd2c0, 0x8e6c, 0x1655, 0x1f82, 0x1, 0x0);
        gbc.writeMem(0x6e04, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xcc12);
        EXPECT(gbc.pc(), 0x6e06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02F9
        gbc.setState(0x9d82, 0xa784, 0x96e0, 0xca29, 0xfe42, 0xc1e3, 0x1, 0x0);
        gbc.writeMem(0x9d82, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa784);
        EXPECT(gbc.pc(), 0x9d84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d82), 0xcb);
        EXPECT(gbc.readMem(0x9d83), 0xb4);
        // CB B4 02FA
        gbc.setState(0x58bd, 0x1b36, 0x4320, 0x5863, 0x40cb, 0x746f, 0x0, 0x0);
        gbc.writeMem(0x58bd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x1b36);
        EXPECT(gbc.pc(), 0x58bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 02FB
        gbc.setState(0xb306, 0x572f, 0xc6e0, 0x6f97, 0x79a6, 0xdc7c, 0x0, 0x1);
        gbc.writeMem(0xb306, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x572f);
        EXPECT(gbc.pc(), 0xb308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb306), 0xcb);
        EXPECT(gbc.readMem(0xb307), 0xb4);
        // CB B4 02FC
        gbc.setState(0x7079, 0x377f, 0x68b0, 0xafdf, 0x8662, 0x925d, 0x1, 0x1);
        gbc.writeMem(0x7079, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x377f);
        EXPECT(gbc.pc(), 0x707b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02FD
        gbc.setState(0x250d, 0xd43f, 0x3cd0, 0xd3f8, 0x6da8, 0xbfa9, 0x0, 0x0);
        gbc.writeMem(0x250d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd43f);
        EXPECT(gbc.pc(), 0x250f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 02FF
        gbc.setState(0xa99f, 0xc642, 0x4140, 0xd8a9, 0x20bf, 0x7ead, 0x1, 0x0);
        gbc.writeMem(0xa99f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xc642);
        EXPECT(gbc.pc(), 0xa9a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99f), 0xcb);
        EXPECT(gbc.readMem(0xa9a0), 0xb4);
        // CB B4 0300
        gbc.setState(0xca9a, 0xc1af, 0xe020, 0xa972, 0x6cc3, 0x4187, 0x1, 0x0);
        gbc.writeMem(0xca9a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xc1af);
        EXPECT(gbc.pc(), 0xca9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca9a), 0xcb);
        EXPECT(gbc.readMem(0xca9b), 0xb4);
        // CB B4 0301
        gbc.setState(0x8a7b, 0xf2e, 0xe5a0, 0x9302, 0xccd4, 0x3e2a, 0x1, 0x0);
        gbc.writeMem(0x8a7b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf2e);
        EXPECT(gbc.pc(), 0x8a7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a7b), 0xcb);
        EXPECT(gbc.readMem(0x8a7c), 0xb4);
        // CB B4 0303
        gbc.setState(0x30ed, 0xf39f, 0x99d0, 0xaf81, 0x3d31, 0xfee6, 0x0, 0x1);
        gbc.writeMem(0x30ed, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf39f);
        EXPECT(gbc.pc(), 0x30ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0304
        gbc.setState(0x2332, 0x761d, 0x52e0, 0x7e9e, 0xcb6e, 0x421c, 0x0, 0x1);
        gbc.writeMem(0x2332, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x761d);
        EXPECT(gbc.pc(), 0x2334);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0305
        gbc.setState(0xd608, 0xc29, 0xba80, 0xa3f9, 0x5814, 0xc64f, 0x0, 0x1);
        gbc.writeMem(0xd608, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc29);
        EXPECT(gbc.pc(), 0xd60a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd608), 0xcb);
        EXPECT(gbc.readMem(0xd609), 0xb4);
        // CB B4 0306
        gbc.setState(0xb96, 0xc4c8, 0xb030, 0x7ac, 0x6c0b, 0xefe2, 0x1, 0x0);
        gbc.writeMem(0xb96, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xc4c8);
        EXPECT(gbc.pc(), 0xb98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0307
        gbc.setState(0x339e, 0x320e, 0xc8e0, 0x6504, 0xa29f, 0xd3e0, 0x1, 0x0);
        gbc.writeMem(0x339e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x320e);
        EXPECT(gbc.pc(), 0x33a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0308
        gbc.setState(0x2f83, 0xd9e3, 0xd600, 0x77cb, 0x3a55, 0xff7f, 0x1, 0x1);
        gbc.writeMem(0x2f83, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xd9e3);
        EXPECT(gbc.pc(), 0x2f85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0309
        gbc.setState(0xe3d7, 0x96e4, 0x4490, 0x110a, 0x3a8c, 0xa129, 0x1, 0x1);
        gbc.writeMem(0xe3d7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x96e4);
        EXPECT(gbc.pc(), 0xe3d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3d7), 0xcb);
        EXPECT(gbc.readMem(0xe3d8), 0xb4);
        // CB B4 030A
        gbc.setState(0xd61d, 0x339, 0xd170, 0x8c2d, 0x431a, 0x7b18, 0x1, 0x1);
        gbc.writeMem(0xd61d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x339);
        EXPECT(gbc.pc(), 0xd61f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd61d), 0xcb);
        EXPECT(gbc.readMem(0xd61e), 0xb4);
        // CB B4 030B
        gbc.setState(0x46a1, 0x2e6d, 0x190, 0x16c7, 0x79bf, 0x11ca, 0x1, 0x0);
        gbc.writeMem(0x46a1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2e6d);
        EXPECT(gbc.pc(), 0x46a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 030C
        gbc.setState(0xd033, 0xfc0e, 0xe2a0, 0xea28, 0xa261, 0xedbc, 0x1, 0x1);
        gbc.writeMem(0xd033, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xfc0e);
        EXPECT(gbc.pc(), 0xd035);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd033), 0xcb);
        EXPECT(gbc.readMem(0xd034), 0xb4);
        // CB B4 030D
        gbc.setState(0xbffa, 0x1325, 0xb3c0, 0x976f, 0xa526, 0x1eaa, 0x0, 0x0);
        gbc.writeMem(0xbffa, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x1325);
        EXPECT(gbc.pc(), 0xbffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbffa), 0xcb);
        EXPECT(gbc.readMem(0xbffb), 0xb4);
        // CB B4 030E
        gbc.setState(0x6128, 0x38af, 0x10a0, 0x21c1, 0xa006, 0x134b, 0x1, 0x0);
        gbc.writeMem(0x6128, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x38af);
        EXPECT(gbc.pc(), 0x612a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 030F
        gbc.setState(0x2f3d, 0x83, 0xe760, 0x1dc4, 0x29b6, 0x908c, 0x1, 0x0);
        gbc.writeMem(0x2f3d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x83);
        EXPECT(gbc.pc(), 0x2f3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0310
        gbc.setState(0x2471, 0x17fe, 0x29a0, 0x3736, 0xba6b, 0x6b72, 0x0, 0x1);
        gbc.writeMem(0x2471, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x17fe);
        EXPECT(gbc.pc(), 0x2473);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0311
        gbc.setState(0x5c83, 0xab61, 0x21e0, 0xbff1, 0x545, 0xb9a8, 0x1, 0x0);
        gbc.writeMem(0x5c83, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xab61);
        EXPECT(gbc.pc(), 0x5c85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0312
        gbc.setState(0x91ff, 0x43e9, 0x4500, 0x6ab6, 0x623c, 0x2a9a, 0x1, 0x0);
        gbc.writeMem(0x91ff, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x43e9);
        EXPECT(gbc.pc(), 0x9201);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ff), 0xcb);
        EXPECT(gbc.readMem(0x9200), 0xb4);
        // CB B4 0313
        gbc.setState(0xab48, 0xd7c8, 0x5070, 0x505b, 0x3642, 0x1c4d, 0x1, 0x0);
        gbc.writeMem(0xab48, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xd7c8);
        EXPECT(gbc.pc(), 0xab4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab48), 0xcb);
        EXPECT(gbc.readMem(0xab49), 0xb4);
        // CB B4 0314
        gbc.setState(0x4862, 0x5fef, 0x9e70, 0x413e, 0xec81, 0x6192, 0x0, 0x0);
        gbc.writeMem(0x4862, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5fef);
        EXPECT(gbc.pc(), 0x4864);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0315
        gbc.setState(0x9035, 0xb22e, 0x6280, 0xc630, 0xbac8, 0xdfcc, 0x1, 0x1);
        gbc.writeMem(0x9035, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb22e);
        EXPECT(gbc.pc(), 0x9037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9035), 0xcb);
        EXPECT(gbc.readMem(0x9036), 0xb4);
        // CB B4 0316
        gbc.setState(0x2d14, 0x3a37, 0x8910, 0x87d0, 0xb5a5, 0x6cde, 0x0, 0x1);
        gbc.writeMem(0x2d14, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3a37);
        EXPECT(gbc.pc(), 0x2d16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0317
        gbc.setState(0xc360, 0xf021, 0x6a30, 0x28e9, 0x900, 0x5a1c, 0x1, 0x0);
        gbc.writeMem(0xc360, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf021);
        EXPECT(gbc.pc(), 0xc362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc360), 0xcb);
        EXPECT(gbc.readMem(0xc361), 0xb4);
        // CB B4 0318
        gbc.setState(0x4bd5, 0xbf07, 0x9c40, 0xf238, 0xe40d, 0x7bf, 0x1, 0x1);
        gbc.writeMem(0x4bd5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xbf07);
        EXPECT(gbc.pc(), 0x4bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0319
        gbc.setState(0x5757, 0x36d3, 0x7410, 0xe4cb, 0x626d, 0x5b7f, 0x0, 0x1);
        gbc.writeMem(0x5757, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x36d3);
        EXPECT(gbc.pc(), 0x5759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 031A
        gbc.setState(0xe009, 0x7f1a, 0x8770, 0x1c08, 0x1144, 0x210e, 0x0, 0x0);
        gbc.writeMem(0xe009, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7f1a);
        EXPECT(gbc.pc(), 0xe00b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe009), 0xcb);
        EXPECT(gbc.readMem(0xe00a), 0xb4);
        // CB B4 031B
        gbc.setState(0x2cf9, 0x517f, 0x6810, 0x8e1c, 0xb59b, 0xe451, 0x1, 0x1);
        gbc.writeMem(0x2cf9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x517f);
        EXPECT(gbc.pc(), 0x2cfb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 031C
        gbc.setState(0xe967, 0xdbc9, 0xbe60, 0x36bf, 0x26c2, 0x6b81, 0x0, 0x0);
        gbc.writeMem(0xe967, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xdbc9);
        EXPECT(gbc.pc(), 0xe969);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe967), 0xcb);
        EXPECT(gbc.readMem(0xe968), 0xb4);
        // CB B4 031D
        gbc.setState(0x3f49, 0xdbef, 0x2520, 0xa3c2, 0xaa78, 0xb2ea, 0x0, 0x1);
        gbc.writeMem(0x3f49, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xdbef);
        EXPECT(gbc.pc(), 0x3f4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 031E
        gbc.setState(0xe2b5, 0xa7f7, 0xf4b0, 0x172, 0x3d62, 0x8cd9, 0x0, 0x1);
        gbc.writeMem(0xe2b5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xa7f7);
        EXPECT(gbc.pc(), 0xe2b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2b5), 0xcb);
        EXPECT(gbc.readMem(0xe2b6), 0xb4);
        // CB B4 031F
        gbc.setState(0x1f1d, 0x3242, 0x3830, 0xa876, 0xacf, 0x131a, 0x0, 0x0);
        gbc.writeMem(0x1f1d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3242);
        EXPECT(gbc.pc(), 0x1f1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0320
        gbc.setState(0xcfe4, 0xfccd, 0x9700, 0xcc82, 0x41a9, 0x365a, 0x0, 0x0);
        gbc.writeMem(0xcfe4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xfccd);
        EXPECT(gbc.pc(), 0xcfe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfe4), 0xcb);
        EXPECT(gbc.readMem(0xcfe5), 0xb4);
        // CB B4 0321
        gbc.setState(0xcf4a, 0x10a8, 0x2180, 0xa356, 0xefbb, 0x9ee5, 0x1, 0x1);
        gbc.writeMem(0xcf4a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x10a8);
        EXPECT(gbc.pc(), 0xcf4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4a), 0xcb);
        EXPECT(gbc.readMem(0xcf4b), 0xb4);
        // CB B4 0322
        gbc.setState(0x6b96, 0xe534, 0xe680, 0xecdc, 0xd9e0, 0xde17, 0x1, 0x1);
        gbc.writeMem(0x6b96, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xe534);
        EXPECT(gbc.pc(), 0x6b98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0323
        gbc.setState(0x51d2, 0xa840, 0x31d0, 0x81d1, 0x3908, 0xcaa7, 0x1, 0x1);
        gbc.writeMem(0x51d2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa840);
        EXPECT(gbc.pc(), 0x51d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0324
        gbc.setState(0x2897, 0xf38, 0xeb60, 0x74c7, 0x5697, 0xfe0b, 0x0, 0x1);
        gbc.writeMem(0x2897, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf38);
        EXPECT(gbc.pc(), 0x2899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0325
        gbc.setState(0x7890, 0x59cb, 0x2270, 0xa437, 0xd795, 0xc68a, 0x1, 0x1);
        gbc.writeMem(0x7890, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x59cb);
        EXPECT(gbc.pc(), 0x7892);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0326
        gbc.setState(0x7e7c, 0x1440, 0x2e40, 0xeca6, 0x56c6, 0x2e9c, 0x0, 0x0);
        gbc.writeMem(0x7e7c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x1440);
        EXPECT(gbc.pc(), 0x7e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0327
        gbc.setState(0xdf, 0x6a02, 0x9e70, 0xa988, 0x10c5, 0x727a, 0x1, 0x0);
        gbc.writeMem(0xdf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x6a02);
        EXPECT(gbc.pc(), 0xe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0328
        gbc.setState(0x8698, 0xcb99, 0x9eb0, 0x189d, 0xbed2, 0xac42, 0x0, 0x0);
        gbc.writeMem(0x8698, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xcb99);
        EXPECT(gbc.pc(), 0x869a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8698), 0xcb);
        EXPECT(gbc.readMem(0x8699), 0xb4);
        // CB B4 0329
        gbc.setState(0x957c, 0x5d75, 0x9c00, 0x6302, 0x4c6b, 0x5f8f, 0x1, 0x0);
        gbc.writeMem(0x957c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5d75);
        EXPECT(gbc.pc(), 0x957e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x957c), 0xcb);
        EXPECT(gbc.readMem(0x957d), 0xb4);
        // CB B4 032A
        gbc.setState(0x425b, 0xef15, 0xc130, 0xdcae, 0x24ba, 0x61a0, 0x1, 0x1);
        gbc.writeMem(0x425b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xef15);
        EXPECT(gbc.pc(), 0x425d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 032B
        gbc.setState(0xe300, 0xe577, 0x7d50, 0xf968, 0xe1d3, 0xf883, 0x0, 0x0);
        gbc.writeMem(0xe300, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe577);
        EXPECT(gbc.pc(), 0xe302);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe300), 0xcb);
        EXPECT(gbc.readMem(0xe301), 0xb4);
        // CB B4 032C
        gbc.setState(0xdfbd, 0x8935, 0x8790, 0xa616, 0x3525, 0x51d4, 0x0, 0x0);
        gbc.writeMem(0xdfbd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x8935);
        EXPECT(gbc.pc(), 0xdfbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfbd), 0xcb);
        EXPECT(gbc.readMem(0xdfbe), 0xb4);
        // CB B4 032D
        gbc.setState(0x1ea2, 0xd46, 0xb7f0, 0xac0c, 0x5f05, 0xe716, 0x0, 0x1);
        gbc.writeMem(0x1ea2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xd46);
        EXPECT(gbc.pc(), 0x1ea4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 032E
        gbc.setState(0x981c, 0x948d, 0x75d0, 0x5b6b, 0x85ec, 0x4218, 0x1, 0x0);
        gbc.writeMem(0x981c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x948d);
        EXPECT(gbc.pc(), 0x981e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x981c), 0xcb);
        EXPECT(gbc.readMem(0x981d), 0xb4);
        // CB B4 032F
        gbc.setState(0xccb2, 0x9111, 0xec10, 0x8b36, 0xca8c, 0xb492, 0x0, 0x1);
        gbc.writeMem(0xccb2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9111);
        EXPECT(gbc.pc(), 0xccb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccb2), 0xcb);
        EXPECT(gbc.readMem(0xccb3), 0xb4);
        // CB B4 0330
        gbc.setState(0xbef0, 0x6ab3, 0xca10, 0x728c, 0xc9a4, 0xaa99, 0x1, 0x1);
        gbc.writeMem(0xbef0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6ab3);
        EXPECT(gbc.pc(), 0xbef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef0), 0xcb);
        EXPECT(gbc.readMem(0xbef1), 0xb4);
        // CB B4 0331
        gbc.setState(0x1e87, 0x9fd2, 0x7fb0, 0xbc2, 0xf596, 0xc86a, 0x1, 0x1);
        gbc.writeMem(0x1e87, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9fd2);
        EXPECT(gbc.pc(), 0x1e89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0332
        gbc.setState(0x593f, 0xe537, 0xf2f0, 0x9ea7, 0x6d89, 0xa34c, 0x0, 0x1);
        gbc.writeMem(0x593f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe537);
        EXPECT(gbc.pc(), 0x5941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0333
        gbc.setState(0x9a5d, 0x193b, 0xdf20, 0x1ae3, 0x53a5, 0xfec6, 0x0, 0x1);
        gbc.writeMem(0x9a5d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x193b);
        EXPECT(gbc.pc(), 0x9a5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a5d), 0xcb);
        EXPECT(gbc.readMem(0x9a5e), 0xb4);
        // CB B4 0334
        gbc.setState(0x418b, 0xc216, 0x2c20, 0x398b, 0xa50, 0x6eef, 0x1, 0x0);
        gbc.writeMem(0x418b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xc216);
        EXPECT(gbc.pc(), 0x418d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0335
        gbc.setState(0x4f97, 0xece1, 0x6430, 0xe765, 0x1bf9, 0x36c4, 0x0, 0x0);
        gbc.writeMem(0x4f97, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xece1);
        EXPECT(gbc.pc(), 0x4f99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0336
        gbc.setState(0x5485, 0x6a4b, 0x97c0, 0x9c04, 0xd27d, 0x6718, 0x1, 0x1);
        gbc.writeMem(0x5485, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6a4b);
        EXPECT(gbc.pc(), 0x5487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0337
        gbc.setState(0x7c8a, 0x4b14, 0x9520, 0xc5a0, 0x1ea3, 0x841c, 0x1, 0x0);
        gbc.writeMem(0x7c8a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4b14);
        EXPECT(gbc.pc(), 0x7c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0338
        gbc.setState(0xc01f, 0x48ba, 0xa430, 0x9247, 0x6b9d, 0xc0c8, 0x0, 0x1);
        gbc.writeMem(0xc01f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x48ba);
        EXPECT(gbc.pc(), 0xc021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc01f), 0xcb);
        EXPECT(gbc.readMem(0xc020), 0xb4);
        // CB B4 0339
        gbc.setState(0xcf4e, 0xc94b, 0x1dc0, 0xdda4, 0x7d46, 0x2ef5, 0x1, 0x0);
        gbc.writeMem(0xcf4e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xc94b);
        EXPECT(gbc.pc(), 0xcf50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf4e), 0xcb);
        EXPECT(gbc.readMem(0xcf4f), 0xb4);
        // CB B4 033A
        gbc.setState(0x30b2, 0xf927, 0x1630, 0xd474, 0x7745, 0xfa3d, 0x0, 0x0);
        gbc.writeMem(0x30b2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xf927);
        EXPECT(gbc.pc(), 0x30b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 033B
        gbc.setState(0x9321, 0x3910, 0x9d10, 0x9699, 0xe609, 0xa910, 0x1, 0x0);
        gbc.writeMem(0x9321, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x3910);
        EXPECT(gbc.pc(), 0x9323);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9321), 0xcb);
        EXPECT(gbc.readMem(0x9322), 0xb4);
        // CB B4 033C
        gbc.setState(0xeaf9, 0xfe82, 0x6db0, 0xddf3, 0xaa5, 0xdfc3, 0x0, 0x1);
        gbc.writeMem(0xeaf9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xfe82);
        EXPECT(gbc.pc(), 0xeafb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaf9), 0xcb);
        EXPECT(gbc.readMem(0xeafa), 0xb4);
        // CB B4 033D
        gbc.setState(0x28cf, 0xcd4a, 0x9f0, 0x342b, 0xbb84, 0x884f, 0x1, 0x0);
        gbc.writeMem(0x28cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xcd4a);
        EXPECT(gbc.pc(), 0x28d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 033E
        gbc.setState(0x662a, 0x7568, 0x7c60, 0xb39, 0x52c7, 0x659b, 0x0, 0x1);
        gbc.writeMem(0x662a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x7568);
        EXPECT(gbc.pc(), 0x662c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 033F
        gbc.setState(0x82da, 0xb567, 0xc20, 0xb40a, 0x4d95, 0x34c, 0x0, 0x0);
        gbc.writeMem(0x82da, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb567);
        EXPECT(gbc.pc(), 0x82dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82da), 0xcb);
        EXPECT(gbc.readMem(0x82db), 0xb4);
        // CB B4 0340
        gbc.setState(0xe545, 0x810b, 0x1a40, 0x3a7d, 0x333d, 0x3333, 0x0, 0x0);
        gbc.writeMem(0xe545, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x810b);
        EXPECT(gbc.pc(), 0xe547);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe545), 0xcb);
        EXPECT(gbc.readMem(0xe546), 0xb4);
        // CB B4 0341
        gbc.setState(0x306a, 0xd2b4, 0x7460, 0xce43, 0x6c38, 0xe34f, 0x0, 0x0);
        gbc.writeMem(0x306a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xd2b4);
        EXPECT(gbc.pc(), 0x306c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0342
        gbc.setState(0x12f5, 0x118a, 0xb960, 0x3b1c, 0xdf8d, 0xf504, 0x1, 0x1);
        gbc.writeMem(0x12f5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x118a);
        EXPECT(gbc.pc(), 0x12f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0343
        gbc.setState(0xb3cd, 0xfea4, 0xc920, 0xa20d, 0xd065, 0xc21d, 0x1, 0x1);
        gbc.writeMem(0xb3cd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xfea4);
        EXPECT(gbc.pc(), 0xb3cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3cd), 0xcb);
        EXPECT(gbc.readMem(0xb3ce), 0xb4);
        // CB B4 0344
        gbc.setState(0xdf07, 0x4a0e, 0x7f00, 0x314c, 0x187c, 0x5f52, 0x0, 0x1);
        gbc.writeMem(0xdf07, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x4a0e);
        EXPECT(gbc.pc(), 0xdf09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf07), 0xcb);
        EXPECT(gbc.readMem(0xdf08), 0xb4);
        // CB B4 0345
        gbc.setState(0x6d66, 0x881, 0x45f0, 0xc7fd, 0x2ad3, 0x57b0, 0x1, 0x0);
        gbc.writeMem(0x6d66, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x881);
        EXPECT(gbc.pc(), 0x6d68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0346
        gbc.setState(0x104c, 0x4ca4, 0xfb60, 0xf706, 0xebe3, 0x861, 0x0, 0x0);
        gbc.writeMem(0x104c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4ca4);
        EXPECT(gbc.pc(), 0x104e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0347
        gbc.setState(0x40f6, 0x5c9b, 0xbb80, 0x1c38, 0x268c, 0xcb37, 0x0, 0x1);
        gbc.writeMem(0x40f6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x5c9b);
        EXPECT(gbc.pc(), 0x40f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0348
        gbc.setState(0x119a, 0xa4ef, 0xaa0, 0xd2b3, 0x689b, 0x1e4c, 0x0, 0x1);
        gbc.writeMem(0x119a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xa4ef);
        EXPECT(gbc.pc(), 0x119c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0349
        gbc.setState(0x22b1, 0xf728, 0xb350, 0x69e4, 0x684b, 0xbe6c, 0x1, 0x0);
        gbc.writeMem(0x22b1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xf728);
        EXPECT(gbc.pc(), 0x22b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 034A
        gbc.setState(0x50d0, 0xab0d, 0x3400, 0x1e96, 0xb8db, 0x515f, 0x0, 0x1);
        gbc.writeMem(0x50d0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xab0d);
        EXPECT(gbc.pc(), 0x50d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 034B
        gbc.setState(0x8672, 0x9dfb, 0x5810, 0x5a94, 0xe546, 0x4e2, 0x1, 0x0);
        gbc.writeMem(0x8672, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9dfb);
        EXPECT(gbc.pc(), 0x8674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8672), 0xcb);
        EXPECT(gbc.readMem(0x8673), 0xb4);
        // CB B4 034C
        gbc.setState(0x5f57, 0x2f41, 0x100, 0x2627, 0x8e5d, 0x427f, 0x0, 0x0);
        gbc.writeMem(0x5f57, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x2f41);
        EXPECT(gbc.pc(), 0x5f59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 034E
        gbc.setState(0x7296, 0x2214, 0x94e0, 0xc600, 0xbbfe, 0x646, 0x1, 0x1);
        gbc.writeMem(0x7296, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2214);
        EXPECT(gbc.pc(), 0x7298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 034F
        gbc.setState(0xc5bc, 0x2c5, 0x9b70, 0x925, 0xa46d, 0x373d, 0x1, 0x0);
        gbc.writeMem(0xc5bc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2c5);
        EXPECT(gbc.pc(), 0xc5be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5bc), 0xcb);
        EXPECT(gbc.readMem(0xc5bd), 0xb4);
        // CB B4 0350
        gbc.setState(0xa423, 0xdf8b, 0xfd10, 0x195d, 0xf2f0, 0xb386, 0x1, 0x0);
        gbc.writeMem(0xa423, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xdf8b);
        EXPECT(gbc.pc(), 0xa425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa423), 0xcb);
        EXPECT(gbc.readMem(0xa424), 0xb4);
        // CB B4 0351
        gbc.setState(0xe184, 0xc6ab, 0x9960, 0x6add, 0xa983, 0x5022, 0x0, 0x0);
        gbc.writeMem(0xe184, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xc6ab);
        EXPECT(gbc.pc(), 0xe186);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe184), 0xcb);
        EXPECT(gbc.readMem(0xe185), 0xb4);
        // CB B4 0352
        gbc.setState(0x11e8, 0xea0f, 0x7370, 0x6269, 0x5de6, 0xd1f, 0x0, 0x1);
        gbc.writeMem(0x11e8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xea0f);
        EXPECT(gbc.pc(), 0x11ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0353
        gbc.setState(0xbc06, 0x98ea, 0x4f10, 0xb0bc, 0xfc5a, 0x664b, 0x1, 0x0);
        gbc.writeMem(0xbc06, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x98ea);
        EXPECT(gbc.pc(), 0xbc08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc06), 0xcb);
        EXPECT(gbc.readMem(0xbc07), 0xb4);
        // CB B4 0354
        gbc.setState(0x65f5, 0x9c0c, 0xf00, 0x886e, 0x5db, 0xb294, 0x0, 0x0);
        gbc.writeMem(0x65f5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x9c0c);
        EXPECT(gbc.pc(), 0x65f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0355
        gbc.setState(0x522, 0xeb84, 0x7f70, 0x846e, 0xdb66, 0x8c02, 0x0, 0x0);
        gbc.writeMem(0x522, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xeb84);
        EXPECT(gbc.pc(), 0x524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0356
        gbc.setState(0x894e, 0x39e8, 0x80, 0x9064, 0x1d2b, 0x9b51, 0x0, 0x1);
        gbc.writeMem(0x894e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x39e8);
        EXPECT(gbc.pc(), 0x8950);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x894e), 0xcb);
        EXPECT(gbc.readMem(0x894f), 0xb4);
        // CB B4 0357
        gbc.setState(0x2c77, 0x16ec, 0x4e60, 0x3fba, 0xcf68, 0xda4f, 0x0, 0x0);
        gbc.writeMem(0x2c77, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x16ec);
        EXPECT(gbc.pc(), 0x2c79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0358
        gbc.setState(0x8c7, 0x5d96, 0x4770, 0xb62c, 0xd14a, 0xa330, 0x0, 0x1);
        gbc.writeMem(0x8c7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x5d96);
        EXPECT(gbc.pc(), 0x8c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0359
        gbc.setState(0x4b65, 0x1129, 0x4140, 0xc230, 0x84bc, 0x4a8, 0x1, 0x1);
        gbc.writeMem(0x4b65, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x1129);
        EXPECT(gbc.pc(), 0x4b67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 035A
        gbc.setState(0xab98, 0xecdb, 0x5a40, 0xb693, 0x4589, 0x6f34, 0x0, 0x1);
        gbc.writeMem(0xab98, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xecdb);
        EXPECT(gbc.pc(), 0xab9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab98), 0xcb);
        EXPECT(gbc.readMem(0xab99), 0xb4);
        // CB B4 035B
        gbc.setState(0xc98e, 0x4fb5, 0x9150, 0xf069, 0x3241, 0xc1a4, 0x0, 0x1);
        gbc.writeMem(0xc98e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4fb5);
        EXPECT(gbc.pc(), 0xc990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98e), 0xcb);
        EXPECT(gbc.readMem(0xc98f), 0xb4);
        // CB B4 035C
        gbc.setState(0x85c, 0xb22c, 0xb720, 0x889e, 0x97b8, 0x84ac, 0x1, 0x1);
        gbc.writeMem(0x85c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb22c);
        EXPECT(gbc.pc(), 0x85e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 035D
        gbc.setState(0x3ddc, 0x58e5, 0x8dd0, 0x9343, 0x4336, 0xd012, 0x0, 0x1);
        gbc.writeMem(0x3ddc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x58e5);
        EXPECT(gbc.pc(), 0x3dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 035E
        gbc.setState(0xa415, 0xf460, 0xf7f0, 0x12a5, 0x10eb, 0x435b, 0x0, 0x0);
        gbc.writeMem(0xa415, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xf460);
        EXPECT(gbc.pc(), 0xa417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa415), 0xcb);
        EXPECT(gbc.readMem(0xa416), 0xb4);
        // CB B4 035F
        gbc.setState(0x23dd, 0x9c08, 0x2030, 0xa0f0, 0x7e15, 0x10b5, 0x1, 0x0);
        gbc.writeMem(0x23dd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9c08);
        EXPECT(gbc.pc(), 0x23df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0360
        gbc.setState(0xe9d5, 0x477f, 0x9600, 0x103, 0x5b3f, 0x36ad, 0x1, 0x1);
        gbc.writeMem(0xe9d5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x477f);
        EXPECT(gbc.pc(), 0xe9d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9d5), 0xcb);
        EXPECT(gbc.readMem(0xe9d6), 0xb4);
        // CB B4 0361
        gbc.setState(0xb9ab, 0xa70f, 0x1e30, 0x8cb2, 0x4880, 0xa301, 0x0, 0x0);
        gbc.writeMem(0xb9ab, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa70f);
        EXPECT(gbc.pc(), 0xb9ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ab), 0xcb);
        EXPECT(gbc.readMem(0xb9ac), 0xb4);
        // CB B4 0362
        gbc.setState(0x89cf, 0x9da2, 0x8e80, 0x7613, 0x62c0, 0xe46f, 0x0, 0x0);
        gbc.writeMem(0x89cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9da2);
        EXPECT(gbc.pc(), 0x89d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89cf), 0xcb);
        EXPECT(gbc.readMem(0x89d0), 0xb4);
        // CB B4 0363
        gbc.setState(0xa4b5, 0x3229, 0xee40, 0x47a5, 0x8bc, 0x7001, 0x1, 0x1);
        gbc.writeMem(0xa4b5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x3229);
        EXPECT(gbc.pc(), 0xa4b7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4b5), 0xcb);
        EXPECT(gbc.readMem(0xa4b6), 0xb4);
        // CB B4 0364
        gbc.setState(0xddb7, 0xfcd1, 0xc320, 0xd159, 0x9767, 0x4baa, 0x1, 0x0);
        gbc.writeMem(0xddb7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xfcd1);
        EXPECT(gbc.pc(), 0xddb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddb7), 0xcb);
        EXPECT(gbc.readMem(0xddb8), 0xb4);
        // CB B4 0365
        gbc.setState(0x7e33, 0x2610, 0xcc90, 0xdd90, 0x933, 0xc152, 0x1, 0x1);
        gbc.writeMem(0x7e33, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x2610);
        EXPECT(gbc.pc(), 0x7e35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0366
        gbc.setState(0x4fff, 0x8180, 0x1490, 0x8ae7, 0x1318, 0xfe21, 0x1, 0x1);
        gbc.writeMem(0x4fff, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x8180);
        EXPECT(gbc.pc(), 0x5001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0367
        gbc.setState(0x7269, 0x3417, 0x2020, 0x2866, 0x7480, 0xb1ef, 0x1, 0x1);
        gbc.writeMem(0x7269, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x3417);
        EXPECT(gbc.pc(), 0x726b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0368
        gbc.setState(0xb037, 0xf56c, 0x3830, 0x9def, 0x7e5f, 0x8171, 0x0, 0x0);
        gbc.writeMem(0xb037, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf56c);
        EXPECT(gbc.pc(), 0xb039);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb037), 0xcb);
        EXPECT(gbc.readMem(0xb038), 0xb4);
        // CB B4 0369
        gbc.setState(0x4911, 0xf675, 0x25c0, 0x3594, 0x2805, 0x6db8, 0x1, 0x1);
        gbc.writeMem(0x4911, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xf675);
        EXPECT(gbc.pc(), 0x4913);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 036A
        gbc.setState(0x8117, 0xe019, 0xf360, 0x82db, 0xdeb, 0x3a05, 0x0, 0x1);
        gbc.writeMem(0x8117, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe019);
        EXPECT(gbc.pc(), 0x8119);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8117), 0xcb);
        EXPECT(gbc.readMem(0x8118), 0xb4);
        // CB B4 036B
        gbc.setState(0x7edc, 0x363f, 0x6640, 0x3bd0, 0x8cda, 0x4395, 0x0, 0x1);
        gbc.writeMem(0x7edc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x363f);
        EXPECT(gbc.pc(), 0x7ede);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 036C
        gbc.setState(0x83a9, 0x8b12, 0x1160, 0xb22c, 0x6a69, 0x11c2, 0x0, 0x1);
        gbc.writeMem(0x83a9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8b12);
        EXPECT(gbc.pc(), 0x83ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83a9), 0xcb);
        EXPECT(gbc.readMem(0x83aa), 0xb4);
        // CB B4 036D
        gbc.setState(0x2cf, 0xefb3, 0xd6b0, 0xe2ce, 0x22ad, 0x72d3, 0x0, 0x0);
        gbc.writeMem(0x2cf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xefb3);
        EXPECT(gbc.pc(), 0x2d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 036E
        gbc.setState(0x42e1, 0xcc1a, 0x9440, 0xb0da, 0xd8d1, 0x985c, 0x1, 0x0);
        gbc.writeMem(0x42e1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xcc1a);
        EXPECT(gbc.pc(), 0x42e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 036F
        gbc.setState(0x63a6, 0x2eea, 0x9980, 0x1038, 0xbe0f, 0x780f, 0x0, 0x1);
        gbc.writeMem(0x63a6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x2eea);
        EXPECT(gbc.pc(), 0x63a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0370
        gbc.setState(0x4a9a, 0xd2a, 0x5810, 0xaf99, 0x5d8b, 0x594a, 0x1, 0x0);
        gbc.writeMem(0x4a9a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd2a);
        EXPECT(gbc.pc(), 0x4a9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0371
        gbc.setState(0x5d73, 0x5aa3, 0x6cb0, 0x7ffd, 0x5ec9, 0xd90a, 0x1, 0x0);
        gbc.writeMem(0x5d73, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x5aa3);
        EXPECT(gbc.pc(), 0x5d75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0372
        gbc.setState(0x245, 0x36ff, 0x2880, 0x1a7b, 0x589c, 0x2a89, 0x1, 0x1);
        gbc.writeMem(0x245, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x36ff);
        EXPECT(gbc.pc(), 0x247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0373
        gbc.setState(0x8b02, 0x70c4, 0x2620, 0xf87b, 0xc4aa, 0x3cdc, 0x1, 0x1);
        gbc.writeMem(0x8b02, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x70c4);
        EXPECT(gbc.pc(), 0x8b04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b02), 0xcb);
        EXPECT(gbc.readMem(0x8b03), 0xb4);
        // CB B4 0374
        gbc.setState(0xd750, 0xa70b, 0x1a00, 0x2416, 0xed7a, 0xdbc8, 0x1, 0x0);
        gbc.writeMem(0xd750, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa70b);
        EXPECT(gbc.pc(), 0xd752);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd750), 0xcb);
        EXPECT(gbc.readMem(0xd751), 0xb4);
        // CB B4 0375
        gbc.setState(0xd1db, 0xcbaf, 0x9830, 0xb3de, 0xe7da, 0x15b0, 0x0, 0x1);
        gbc.writeMem(0xd1db, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xcbaf);
        EXPECT(gbc.pc(), 0xd1dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1db), 0xcb);
        EXPECT(gbc.readMem(0xd1dc), 0xb4);
        // CB B4 0376
        gbc.setState(0xd48b, 0xd382, 0x20b0, 0xf6b4, 0xc583, 0xb6e8, 0x0, 0x0);
        gbc.writeMem(0xd48b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd382);
        EXPECT(gbc.pc(), 0xd48d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd48b), 0xcb);
        EXPECT(gbc.readMem(0xd48c), 0xb4);
        // CB B4 0377
        gbc.setState(0xddaa, 0xb6b8, 0x5d10, 0x2fce, 0xdde7, 0x25ff, 0x1, 0x1);
        gbc.writeMem(0xddaa, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb6b8);
        EXPECT(gbc.pc(), 0xddac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddaa), 0xcb);
        EXPECT(gbc.readMem(0xddab), 0xb4);
        // CB B4 0378
        gbc.setState(0x79b7, 0x9d49, 0x6dc0, 0xd605, 0x3eaa, 0x5b44, 0x1, 0x1);
        gbc.writeMem(0x79b7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x9d49);
        EXPECT(gbc.pc(), 0x79b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0379
        gbc.setState(0x475a, 0x1184, 0xd5e0, 0x6626, 0xdeac, 0x17b2, 0x1, 0x0);
        gbc.writeMem(0x475a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x1184);
        EXPECT(gbc.pc(), 0x475c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 037A
        gbc.setState(0xb92f, 0xd9d9, 0xecb0, 0xe35b, 0x9181, 0x2327, 0x1, 0x1);
        gbc.writeMem(0xb92f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd9d9);
        EXPECT(gbc.pc(), 0xb931);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb92f), 0xcb);
        EXPECT(gbc.readMem(0xb930), 0xb4);
        // CB B4 037B
        gbc.setState(0x8ae7, 0xb04a, 0x7b40, 0x4e00, 0x49f2, 0xe33a, 0x0, 0x1);
        gbc.writeMem(0x8ae7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb04a);
        EXPECT(gbc.pc(), 0x8ae9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ae7), 0xcb);
        EXPECT(gbc.readMem(0x8ae8), 0xb4);
        // CB B4 037C
        gbc.setState(0x308c, 0x2cec, 0xf330, 0x77ad, 0x95eb, 0x264f, 0x0, 0x0);
        gbc.writeMem(0x308c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2cec);
        EXPECT(gbc.pc(), 0x308e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 037D
        gbc.setState(0x9c11, 0x53fa, 0x2830, 0xf092, 0x2d4b, 0x7f32, 0x0, 0x0);
        gbc.writeMem(0x9c11, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x53fa);
        EXPECT(gbc.pc(), 0x9c13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c11), 0xcb);
        EXPECT(gbc.readMem(0x9c12), 0xb4);
        // CB B4 037E
        gbc.setState(0x7c84, 0xa6c9, 0xbd00, 0x6cb3, 0x80af, 0x75a0, 0x1, 0x1);
        gbc.writeMem(0x7c84, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa6c9);
        EXPECT(gbc.pc(), 0x7c86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 037F
        gbc.setState(0xde4, 0x717f, 0xcc30, 0x4da6, 0x703e, 0x627d, 0x0, 0x1);
        gbc.writeMem(0xde4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x717f);
        EXPECT(gbc.pc(), 0xde6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0380
        gbc.setState(0xbc68, 0xbee7, 0xedc0, 0xdcf2, 0xa267, 0x3088, 0x0, 0x1);
        gbc.writeMem(0xbc68, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xbee7);
        EXPECT(gbc.pc(), 0xbc6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc68), 0xcb);
        EXPECT(gbc.readMem(0xbc69), 0xb4);
        // CB B4 0381
        gbc.setState(0x82a8, 0x8ac7, 0x3000, 0xe1fc, 0x2e9b, 0x91fd, 0x1, 0x1);
        gbc.writeMem(0x82a8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8ac7);
        EXPECT(gbc.pc(), 0x82aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82a8), 0xcb);
        EXPECT(gbc.readMem(0x82a9), 0xb4);
        // CB B4 0382
        gbc.setState(0x1166, 0x9457, 0xf4a0, 0x34e3, 0xb9d3, 0xefbf, 0x1, 0x1);
        gbc.writeMem(0x1166, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x9457);
        EXPECT(gbc.pc(), 0x1168);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0383
        gbc.setState(0x261, 0x8dde, 0x3040, 0x2de4, 0xf4ff, 0xf9cd, 0x0, 0x0);
        gbc.writeMem(0x261, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8dde);
        EXPECT(gbc.pc(), 0x263);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0384
        gbc.setState(0x508d, 0x5bfc, 0xa780, 0x210f, 0x4b50, 0x3fd0, 0x0, 0x0);
        gbc.writeMem(0x508d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x5bfc);
        EXPECT(gbc.pc(), 0x508f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0385
        gbc.setState(0xab52, 0x46a0, 0xe300, 0x8bdf, 0x963b, 0x64c6, 0x1, 0x0);
        gbc.writeMem(0xab52, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x46a0);
        EXPECT(gbc.pc(), 0xab54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab52), 0xcb);
        EXPECT(gbc.readMem(0xab53), 0xb4);
        // CB B4 0386
        gbc.setState(0x18d5, 0x4a2f, 0x2f60, 0x2c9f, 0x4723, 0xec69, 0x1, 0x1);
        gbc.writeMem(0x18d5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x4a2f);
        EXPECT(gbc.pc(), 0x18d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0387
        gbc.setState(0x6ef2, 0x1f07, 0xf920, 0xf092, 0x23c1, 0x2515, 0x0, 0x1);
        gbc.writeMem(0x6ef2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1f07);
        EXPECT(gbc.pc(), 0x6ef4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0388
        gbc.setState(0x20fc, 0x2ad1, 0x9090, 0x2542, 0xfcb3, 0x3ceb, 0x0, 0x0);
        gbc.writeMem(0x20fc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x2ad1);
        EXPECT(gbc.pc(), 0x20fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0389
        gbc.setState(0xf18, 0xe43e, 0x1010, 0x2bca, 0x392f, 0xb8b, 0x1, 0x0);
        gbc.writeMem(0xf18, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe43e);
        EXPECT(gbc.pc(), 0xf1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 038A
        gbc.setState(0xb737, 0x40e1, 0x7db0, 0xbe8c, 0x175, 0x912, 0x1, 0x1);
        gbc.writeMem(0xb737, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x40e1);
        EXPECT(gbc.pc(), 0xb739);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb737), 0xcb);
        EXPECT(gbc.readMem(0xb738), 0xb4);
        // CB B4 038B
        gbc.setState(0x99d5, 0x7af9, 0x3d0, 0x7b52, 0x9c85, 0x3891, 0x0, 0x0);
        gbc.writeMem(0x99d5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7af9);
        EXPECT(gbc.pc(), 0x99d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99d5), 0xcb);
        EXPECT(gbc.readMem(0x99d6), 0xb4);
        // CB B4 038C
        gbc.setState(0xbfae, 0xa50d, 0x6de0, 0x657a, 0x2e90, 0xc31b, 0x0, 0x0);
        gbc.writeMem(0xbfae, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa50d);
        EXPECT(gbc.pc(), 0xbfb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfae), 0xcb);
        EXPECT(gbc.readMem(0xbfaf), 0xb4);
        // CB B4 038D
        gbc.setState(0x964f, 0x60a8, 0x6f60, 0x69c5, 0x60f1, 0x2496, 0x1, 0x0);
        gbc.writeMem(0x964f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x60a8);
        EXPECT(gbc.pc(), 0x9651);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x964f), 0xcb);
        EXPECT(gbc.readMem(0x9650), 0xb4);
        // CB B4 038E
        gbc.setState(0xaa47, 0x8962, 0x92c0, 0x6744, 0xb081, 0x6ff3, 0x0, 0x0);
        gbc.writeMem(0xaa47, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x8962);
        EXPECT(gbc.pc(), 0xaa49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa47), 0xcb);
        EXPECT(gbc.readMem(0xaa48), 0xb4);
        // CB B4 038F
        gbc.setState(0x6461, 0x3f23, 0xbdc0, 0x563, 0x5ffb, 0xfa7d, 0x0, 0x1);
        gbc.writeMem(0x6461, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3f23);
        EXPECT(gbc.pc(), 0x6463);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0390
        gbc.setState(0x24eb, 0x11dc, 0x300, 0xca38, 0x48ee, 0x8cc0, 0x0, 0x1);
        gbc.writeMem(0x24eb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x11dc);
        EXPECT(gbc.pc(), 0x24ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0391
        gbc.setState(0xa6b6, 0xb200, 0xea70, 0xf650, 0x8c84, 0x4ece, 0x0, 0x0);
        gbc.writeMem(0xa6b6, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb200);
        EXPECT(gbc.pc(), 0xa6b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6b6), 0xcb);
        EXPECT(gbc.readMem(0xa6b7), 0xb4);
        // CB B4 0392
        gbc.setState(0xab22, 0x724f, 0x1e80, 0x49d8, 0x5c80, 0x5719, 0x0, 0x1);
        gbc.writeMem(0xab22, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x724f);
        EXPECT(gbc.pc(), 0xab24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab22), 0xcb);
        EXPECT(gbc.readMem(0xab23), 0xb4);
        // CB B4 0393
        gbc.setState(0x724f, 0xbca2, 0xf120, 0xd575, 0x4378, 0xd344, 0x0, 0x0);
        gbc.writeMem(0x724f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xbca2);
        EXPECT(gbc.pc(), 0x7251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0394
        gbc.setState(0x940f, 0xd150, 0x1c70, 0xaee, 0xa02, 0xa2e4, 0x1, 0x0);
        gbc.writeMem(0x940f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xd150);
        EXPECT(gbc.pc(), 0x9411);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x940f), 0xcb);
        EXPECT(gbc.readMem(0x9410), 0xb4);
        // CB B4 0395
        gbc.setState(0x7814, 0x9f19, 0xfc10, 0x1249, 0x3665, 0xafe2, 0x1, 0x0);
        gbc.writeMem(0x7814, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9f19);
        EXPECT(gbc.pc(), 0x7816);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0396
        gbc.setState(0x8a29, 0x9edb, 0xfb40, 0xbfb4, 0x320f, 0x3e4b, 0x1, 0x1);
        gbc.writeMem(0x8a29, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9edb);
        EXPECT(gbc.pc(), 0x8a2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a29), 0xcb);
        EXPECT(gbc.readMem(0x8a2a), 0xb4);
        // CB B4 0397
        gbc.setState(0x3859, 0xed81, 0xc5f0, 0xe7ea, 0xd530, 0xb366, 0x0, 0x1);
        gbc.writeMem(0x3859, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xed81);
        EXPECT(gbc.pc(), 0x385b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 0398
        gbc.setState(0x1245, 0xd96f, 0x2520, 0xabb5, 0xccfc, 0xe894, 0x1, 0x0);
        gbc.writeMem(0x1245, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xd96f);
        EXPECT(gbc.pc(), 0x1247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 0399
        gbc.setState(0x43db, 0x934f, 0x8d80, 0x9b5e, 0x5136, 0x33c9, 0x0, 0x0);
        gbc.writeMem(0x43db, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x934f);
        EXPECT(gbc.pc(), 0x43dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 039A
        gbc.setState(0x68ce, 0xfe, 0xd8d0, 0x66cf, 0xa1d1, 0xe05c, 0x1, 0x0);
        gbc.writeMem(0x68ce, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xfe);
        EXPECT(gbc.pc(), 0x68d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 039B
        gbc.setState(0xf8a, 0x4359, 0x3ed0, 0xbd59, 0xc484, 0xf0b2, 0x1, 0x0);
        gbc.writeMem(0xf8a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4359);
        EXPECT(gbc.pc(), 0xf8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 039C
        gbc.setState(0x932, 0xdf26, 0x3190, 0xc272, 0x3fae, 0x46b7, 0x1, 0x0);
        gbc.writeMem(0x932, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xdf26);
        EXPECT(gbc.pc(), 0x934);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 039D
        gbc.setState(0x7a2, 0x529e, 0x88d0, 0xba4c, 0x73e3, 0x58bd, 0x0, 0x1);
        gbc.writeMem(0x7a2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x529e);
        EXPECT(gbc.pc(), 0x7a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 039E
        gbc.setState(0x773d, 0xea83, 0xd000, 0xefc5, 0xb110, 0xb26f, 0x1, 0x0);
        gbc.writeMem(0x773d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xea83);
        EXPECT(gbc.pc(), 0x773f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 039F
        gbc.setState(0xed1d, 0x1d03, 0x4780, 0x2a18, 0xd9d2, 0x803c, 0x0, 0x1);
        gbc.writeMem(0xed1d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1d03);
        EXPECT(gbc.pc(), 0xed1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed1d), 0xcb);
        EXPECT(gbc.readMem(0xed1e), 0xb4);
        // CB B4 03A0
        gbc.setState(0x7cdf, 0xc9ce, 0x57f0, 0xd444, 0x8c6a, 0x283c, 0x0, 0x0);
        gbc.writeMem(0x7cdf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc9ce);
        EXPECT(gbc.pc(), 0x7ce1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03A1
        gbc.setState(0x97c2, 0x3ef1, 0xf9f0, 0x29b4, 0xe14a, 0x522e, 0x0, 0x0);
        gbc.writeMem(0x97c2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x3ef1);
        EXPECT(gbc.pc(), 0x97c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c2), 0xcb);
        EXPECT(gbc.readMem(0x97c3), 0xb4);
        // CB B4 03A2
        gbc.setState(0xbbc7, 0x45d6, 0xc460, 0xbdca, 0x2746, 0x3f83, 0x0, 0x1);
        gbc.writeMem(0xbbc7, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x45d6);
        EXPECT(gbc.pc(), 0xbbc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc7), 0xcb);
        EXPECT(gbc.readMem(0xbbc8), 0xb4);
        // CB B4 03A3
        gbc.setState(0xe671, 0x6427, 0xb4e0, 0x159c, 0x2332, 0xc457, 0x1, 0x1);
        gbc.writeMem(0xe671, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6427);
        EXPECT(gbc.pc(), 0xe673);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe671), 0xcb);
        EXPECT(gbc.readMem(0xe672), 0xb4);
        // CB B4 03A4
        gbc.setState(0xe35d, 0x1808, 0x2f80, 0x1c64, 0xde4b, 0x8903, 0x1, 0x0);
        gbc.writeMem(0xe35d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x1808);
        EXPECT(gbc.pc(), 0xe35f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35d), 0xcb);
        EXPECT(gbc.readMem(0xe35e), 0xb4);
        // CB B4 03A5
        gbc.setState(0x93f8, 0x6583, 0x3c80, 0x78e4, 0x9410, 0x8c35, 0x0, 0x1);
        gbc.writeMem(0x93f8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6583);
        EXPECT(gbc.pc(), 0x93fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f8), 0xcb);
        EXPECT(gbc.readMem(0x93f9), 0xb4);
        // CB B4 03A6
        gbc.setState(0xe501, 0x3aa9, 0x55f0, 0x6236, 0x8f8d, 0x9b60, 0x0, 0x1);
        gbc.writeMem(0xe501, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3aa9);
        EXPECT(gbc.pc(), 0xe503);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe501), 0xcb);
        EXPECT(gbc.readMem(0xe502), 0xb4);
        // CB B4 03A7
        gbc.setState(0xea41, 0x2ba1, 0x4910, 0xae79, 0x7856, 0xb85c, 0x0, 0x0);
        gbc.writeMem(0xea41, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x2ba1);
        EXPECT(gbc.pc(), 0xea43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea41), 0xcb);
        EXPECT(gbc.readMem(0xea42), 0xb4);
        // CB B4 03A8
        gbc.setState(0xc74e, 0xb8c9, 0x6a60, 0xb454, 0x7cd, 0xfd15, 0x1, 0x0);
        gbc.writeMem(0xc74e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb8c9);
        EXPECT(gbc.pc(), 0xc750);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc74e), 0xcb);
        EXPECT(gbc.readMem(0xc74f), 0xb4);
        // CB B4 03A9
        gbc.setState(0x4a1c, 0x1dc1, 0x1ff0, 0xd702, 0x6a8, 0x5a63, 0x1, 0x1);
        gbc.writeMem(0x4a1c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x1dc1);
        EXPECT(gbc.pc(), 0x4a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03AA
        gbc.setState(0xf2e, 0x6e20, 0x2570, 0xd3ea, 0xf3e7, 0x9a6c, 0x1, 0x1);
        gbc.writeMem(0xf2e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6e20);
        EXPECT(gbc.pc(), 0xf30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03AB
        gbc.setState(0xbdb2, 0xc6d2, 0xdc60, 0xbcff, 0xb6b, 0xaa5e, 0x1, 0x0);
        gbc.writeMem(0xbdb2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc6d2);
        EXPECT(gbc.pc(), 0xbdb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdb2), 0xcb);
        EXPECT(gbc.readMem(0xbdb3), 0xb4);
        // CB B4 03AC
        gbc.setState(0x1e4e, 0xfb89, 0x9840, 0xa0ea, 0x5791, 0x690, 0x0, 0x0);
        gbc.writeMem(0x1e4e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xfb89);
        EXPECT(gbc.pc(), 0x1e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03AD
        gbc.setState(0x7773, 0x3e89, 0x1270, 0x37f, 0xfc3d, 0x6992, 0x1, 0x0);
        gbc.writeMem(0x7773, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3e89);
        EXPECT(gbc.pc(), 0x7775);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03AE
        gbc.setState(0xe151, 0xed2b, 0x42b0, 0xb8e9, 0x3920, 0x85ca, 0x0, 0x1);
        gbc.writeMem(0xe151, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xed2b);
        EXPECT(gbc.pc(), 0xe153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe151), 0xcb);
        EXPECT(gbc.readMem(0xe152), 0xb4);
        // CB B4 03AF
        gbc.setState(0x10cb, 0x908d, 0x6cb0, 0x8ee2, 0xdde3, 0xe534, 0x0, 0x1);
        gbc.writeMem(0x10cb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x908d);
        EXPECT(gbc.pc(), 0x10cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03B0
        gbc.setState(0x8e3a, 0x68a, 0x3860, 0x842d, 0xfad7, 0xedcc, 0x1, 0x0);
        gbc.writeMem(0x8e3a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x68a);
        EXPECT(gbc.pc(), 0x8e3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e3a), 0xcb);
        EXPECT(gbc.readMem(0x8e3b), 0xb4);
        // CB B4 03B1
        gbc.setState(0x21a, 0xbc19, 0xb2e0, 0x4367, 0x88ae, 0xce3b, 0x0, 0x1);
        gbc.writeMem(0x21a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xbc19);
        EXPECT(gbc.pc(), 0x21c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03B2
        gbc.setState(0x422f, 0x2eca, 0x7410, 0x68a8, 0xf60c, 0x2cc0, 0x0, 0x0);
        gbc.writeMem(0x422f, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x2eca);
        EXPECT(gbc.pc(), 0x4231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03B3
        gbc.setState(0x2f07, 0x45eb, 0xaf60, 0xc7c9, 0x32c1, 0xe532, 0x0, 0x1);
        gbc.writeMem(0x2f07, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x45eb);
        EXPECT(gbc.pc(), 0x2f09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03B4
        gbc.setState(0x544d, 0x6c42, 0xd840, 0x458e, 0xf56f, 0x5986, 0x1, 0x0);
        gbc.writeMem(0x544d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6c42);
        EXPECT(gbc.pc(), 0x544f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03B5
        gbc.setState(0x380, 0x355e, 0xf290, 0xc8bd, 0x16f8, 0x44b, 0x0, 0x1);
        gbc.writeMem(0x380, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x355e);
        EXPECT(gbc.pc(), 0x382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03B6
        gbc.setState(0x9e15, 0x6953, 0x5f30, 0xdf45, 0x202a, 0x4ee0, 0x0, 0x1);
        gbc.writeMem(0x9e15, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x6953);
        EXPECT(gbc.pc(), 0x9e17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e15), 0xcb);
        EXPECT(gbc.readMem(0x9e16), 0xb4);
        // CB B4 03B7
        gbc.setState(0xdc14, 0xab4c, 0x8150, 0xadb9, 0xccda, 0x7568, 0x0, 0x1);
        gbc.writeMem(0xdc14, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xab4c);
        EXPECT(gbc.pc(), 0xdc16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc14), 0xcb);
        EXPECT(gbc.readMem(0xdc15), 0xb4);
        // CB B4 03B8
        gbc.setState(0x62ab, 0xdff1, 0xfdf0, 0x621, 0x193f, 0x6fbb, 0x0, 0x0);
        gbc.writeMem(0x62ab, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xdff1);
        EXPECT(gbc.pc(), 0x62ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03B9
        gbc.setState(0x8e25, 0x392b, 0x5f50, 0x8755, 0x7c04, 0x6d1a, 0x0, 0x0);
        gbc.writeMem(0x8e25, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x392b);
        EXPECT(gbc.pc(), 0x8e27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e25), 0xcb);
        EXPECT(gbc.readMem(0x8e26), 0xb4);
        // CB B4 03BA
        gbc.setState(0x3a5, 0x203f, 0x2510, 0x6496, 0xda6e, 0xe87d, 0x1, 0x1);
        gbc.writeMem(0x3a5, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x203f);
        EXPECT(gbc.pc(), 0x3a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03BB
        gbc.setState(0x44f0, 0x54b9, 0x3b20, 0x190b, 0xb1e0, 0xec15, 0x0, 0x0);
        gbc.writeMem(0x44f0, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x54b9);
        EXPECT(gbc.pc(), 0x44f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03BC
        gbc.setState(0x72c1, 0x5ddd, 0xbf40, 0xe53d, 0x454e, 0x3493, 0x1, 0x1);
        gbc.writeMem(0x72c1, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x5ddd);
        EXPECT(gbc.pc(), 0x72c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03BD
        gbc.setState(0xbe02, 0xfa9b, 0xab90, 0x27c4, 0xc8b3, 0x2471, 0x0, 0x0);
        gbc.writeMem(0xbe02, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xfa9b);
        EXPECT(gbc.pc(), 0xbe04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe02), 0xcb);
        EXPECT(gbc.readMem(0xbe03), 0xb4);
        // CB B4 03BE
        gbc.setState(0x9196, 0x7d39, 0xd4a0, 0x35c7, 0x7e1b, 0x8a5c, 0x1, 0x0);
        gbc.writeMem(0x9196, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x7d39);
        EXPECT(gbc.pc(), 0x9198);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9196), 0xcb);
        EXPECT(gbc.readMem(0x9197), 0xb4);
        // CB B4 03BF
        gbc.setState(0x175b, 0x4f15, 0xe3a0, 0x3f58, 0x4281, 0xee9e, 0x0, 0x1);
        gbc.writeMem(0x175b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x4f15);
        EXPECT(gbc.pc(), 0x175d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03C0
        gbc.setState(0x27bf, 0x1f9, 0x6480, 0x89b5, 0xe66a, 0x9c32, 0x1, 0x0);
        gbc.writeMem(0x27bf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1f9);
        EXPECT(gbc.pc(), 0x27c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03C1
        gbc.setState(0x6952, 0xdb25, 0x7bb0, 0xb0ea, 0x6369, 0x9b9b, 0x1, 0x1);
        gbc.writeMem(0x6952, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xdb25);
        EXPECT(gbc.pc(), 0x6954);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03C2
        gbc.setState(0x64b9, 0xe535, 0x8160, 0xbbdf, 0xcff3, 0x963c, 0x0, 0x0);
        gbc.writeMem(0x64b9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xe535);
        EXPECT(gbc.pc(), 0x64bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03C3
        gbc.setState(0x8d64, 0x923c, 0xcc70, 0x826b, 0x8695, 0xa3e3, 0x1, 0x0);
        gbc.writeMem(0x8d64, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x923c);
        EXPECT(gbc.pc(), 0x8d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d64), 0xcb);
        EXPECT(gbc.readMem(0x8d65), 0xb4);
        // CB B4 03C4
        gbc.setState(0x63c, 0x6a23, 0x380, 0x1893, 0xb33c, 0x68a3, 0x0, 0x1);
        gbc.writeMem(0x63c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x6a23);
        EXPECT(gbc.pc(), 0x63e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03C5
        gbc.setState(0x1529, 0xb772, 0x4460, 0x70fc, 0xda59, 0x83e8, 0x0, 0x0);
        gbc.writeMem(0x1529, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xb772);
        EXPECT(gbc.pc(), 0x152b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03C6
        gbc.setState(0xba22, 0xcde0, 0x9450, 0x2960, 0x4eb4, 0xbbbf, 0x0, 0x1);
        gbc.writeMem(0xba22, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xcde0);
        EXPECT(gbc.pc(), 0xba24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba22), 0xcb);
        EXPECT(gbc.readMem(0xba23), 0xb4);
        // CB B4 03C7
        gbc.setState(0x7b28, 0xf606, 0x8780, 0xd100, 0x8ea6, 0x361, 0x0, 0x1);
        gbc.writeMem(0x7b28, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf606);
        EXPECT(gbc.pc(), 0x7b2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03C8
        gbc.setState(0xac9e, 0x129d, 0x5220, 0x8520, 0x8017, 0xf4e, 0x1, 0x0);
        gbc.writeMem(0xac9e, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x129d);
        EXPECT(gbc.pc(), 0xaca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac9e), 0xcb);
        EXPECT(gbc.readMem(0xac9f), 0xb4);
        // CB B4 03C9
        gbc.setState(0x1e36, 0xf3fd, 0x3ae0, 0xb950, 0x14ba, 0x7f88, 0x0, 0x1);
        gbc.writeMem(0x1e36, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf3fd);
        EXPECT(gbc.pc(), 0x1e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03CA
        gbc.setState(0x8411, 0xd193, 0x12f0, 0xad93, 0x9e9e, 0x1ded, 0x1, 0x0);
        gbc.writeMem(0x8411, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xd193);
        EXPECT(gbc.pc(), 0x8413);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8411), 0xcb);
        EXPECT(gbc.readMem(0x8412), 0xb4);
        // CB B4 03CB
        gbc.setState(0xe0c4, 0x9d9b, 0x12d0, 0xacf1, 0x39be, 0x8b0b, 0x1, 0x1);
        gbc.writeMem(0xe0c4, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9d9b);
        EXPECT(gbc.pc(), 0xe0c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0c4), 0xcb);
        EXPECT(gbc.readMem(0xe0c5), 0xb4);
        // CB B4 03CC
        gbc.setState(0xba4b, 0x7570, 0x6e00, 0xf61f, 0x89fc, 0x72d4, 0x0, 0x0);
        gbc.writeMem(0xba4b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7570);
        EXPECT(gbc.pc(), 0xba4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba4b), 0xcb);
        EXPECT(gbc.readMem(0xba4c), 0xb4);
        // CB B4 03CE
        gbc.setState(0xd1bd, 0xe31, 0x1320, 0x147a, 0x210, 0xbb7b, 0x0, 0x1);
        gbc.writeMem(0xd1bd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe31);
        EXPECT(gbc.pc(), 0xd1bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1bd), 0xcb);
        EXPECT(gbc.readMem(0xd1be), 0xb4);
        // CB B4 03CF
        gbc.setState(0x3c03, 0xb4d1, 0xd630, 0x53aa, 0x6820, 0xf5a7, 0x0, 0x0);
        gbc.writeMem(0x3c03, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xb4d1);
        EXPECT(gbc.pc(), 0x3c05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03D0
        gbc.setState(0xcfa8, 0x991c, 0xb0a0, 0xec17, 0x974b, 0x542a, 0x1, 0x0);
        gbc.writeMem(0xcfa8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x991c);
        EXPECT(gbc.pc(), 0xcfaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfa8), 0xcb);
        EXPECT(gbc.readMem(0xcfa9), 0xb4);
        // CB B4 03D1
        gbc.setState(0x8dc2, 0x429, 0x300, 0x949e, 0x2616, 0xcc99, 0x0, 0x1);
        gbc.writeMem(0x8dc2, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x429);
        EXPECT(gbc.pc(), 0x8dc4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dc2), 0xcb);
        EXPECT(gbc.readMem(0x8dc3), 0xb4);
        // CB B4 03D2
        gbc.setState(0x72cd, 0xbb30, 0xc1a0, 0x40ad, 0x79af, 0xb893, 0x1, 0x0);
        gbc.writeMem(0x72cd, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xbb30);
        EXPECT(gbc.pc(), 0x72cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03D3
        gbc.setState(0xc7fb, 0xa16, 0x39a0, 0xdb58, 0x5016, 0x7c2c, 0x1, 0x1);
        gbc.writeMem(0xc7fb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa16);
        EXPECT(gbc.pc(), 0xc7fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7fb), 0xcb);
        EXPECT(gbc.readMem(0xc7fc), 0xb4);
        // CB B4 03D4
        gbc.setState(0xe8be, 0x664c, 0xb5c0, 0x28d1, 0xe6b0, 0x7894, 0x1, 0x1);
        gbc.writeMem(0xe8be, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x664c);
        EXPECT(gbc.pc(), 0xe8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8be), 0xcb);
        EXPECT(gbc.readMem(0xe8bf), 0xb4);
        // CB B4 03D5
        gbc.setState(0xb50b, 0xd555, 0xca80, 0xc827, 0xb0d0, 0xd5c7, 0x1, 0x0);
        gbc.writeMem(0xb50b, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd555);
        EXPECT(gbc.pc(), 0xb50d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb50b), 0xcb);
        EXPECT(gbc.readMem(0xb50c), 0xb4);
        // CB B4 03D6
        gbc.setState(0x961c, 0x297e, 0x7c70, 0x8dc, 0x9e8e, 0x652e, 0x0, 0x0);
        gbc.writeMem(0x961c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x297e);
        EXPECT(gbc.pc(), 0x961e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x961c), 0xcb);
        EXPECT(gbc.readMem(0x961d), 0xb4);
        // CB B4 03D7
        gbc.setState(0xc0c9, 0x179d, 0x290, 0xd234, 0x5c5, 0xf54a, 0x0, 0x0);
        gbc.writeMem(0xc0c9, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x179d);
        EXPECT(gbc.pc(), 0xc0cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0c9), 0xcb);
        EXPECT(gbc.readMem(0xc0ca), 0xb4);
        // CB B4 03D8
        gbc.setState(0xab79, 0xbae6, 0x74d0, 0x96c7, 0x94d0, 0x6e1b, 0x0, 0x0);
        gbc.writeMem(0xab79, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xbae6);
        EXPECT(gbc.pc(), 0xab7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab79), 0xcb);
        EXPECT(gbc.readMem(0xab7a), 0xb4);
        // CB B4 03D9
        gbc.setState(0x696d, 0x7eab, 0x73f0, 0xffbb, 0x26e8, 0xf8c8, 0x1, 0x0);
        gbc.writeMem(0x696d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7eab);
        EXPECT(gbc.pc(), 0x696f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03DA
        gbc.setState(0x50bb, 0x3837, 0xfdf0, 0x83d7, 0x1c21, 0x26ee, 0x0, 0x1);
        gbc.writeMem(0x50bb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3837);
        EXPECT(gbc.pc(), 0x50bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03DB
        gbc.setState(0x3b06, 0x246e, 0x88f0, 0x21fb, 0x1c0b, 0x5beb, 0x0, 0x0);
        gbc.writeMem(0x3b06, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x246e);
        EXPECT(gbc.pc(), 0x3b08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03DC
        gbc.setState(0x741c, 0xf2af, 0xb5f0, 0xc34b, 0x60b5, 0x5d84, 0x1, 0x1);
        gbc.writeMem(0x741c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf2af);
        EXPECT(gbc.pc(), 0x741e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03DD
        gbc.setState(0x2644, 0xd276, 0x5be0, 0x25d8, 0x2c5e, 0x8e47, 0x1, 0x0);
        gbc.writeMem(0x2644, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd276);
        EXPECT(gbc.pc(), 0x2646);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03DE
        gbc.setState(0x5cdf, 0xd11a, 0xb940, 0x9821, 0x9e0c, 0x0, 0x1, 0x0);
        gbc.writeMem(0x5cdf, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd11a);
        EXPECT(gbc.pc(), 0x5ce1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03DF
        gbc.setState(0xdaa8, 0x747a, 0xa8d0, 0xeb3b, 0xf6ac, 0x209a, 0x1, 0x0);
        gbc.writeMem(0xdaa8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x747a);
        EXPECT(gbc.pc(), 0xdaaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaa8), 0xcb);
        EXPECT(gbc.readMem(0xdaa9), 0xb4);
        // CB B4 03E0
        gbc.setState(0x5fcc, 0x4750, 0x320, 0xa279, 0xe10f, 0xb3e5, 0x0, 0x1);
        gbc.writeMem(0x5fcc, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4750);
        EXPECT(gbc.pc(), 0x5fce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03E1
        gbc.setState(0x269c, 0x4a1c, 0xe3e0, 0xf8d8, 0x1266, 0x6d41, 0x1, 0x1);
        gbc.writeMem(0x269c, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x4a1c);
        EXPECT(gbc.pc(), 0x269e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03E2
        gbc.setState(0x6707, 0xcf30, 0xf330, 0x8d5, 0xbcd2, 0xab3d, 0x1, 0x1);
        gbc.writeMem(0x6707, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xcf30);
        EXPECT(gbc.pc(), 0x6709);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB B4 03E3
        gbc.setState(0xde5d, 0x15a3, 0x7aa0, 0x3b29, 0xa128, 0xe313, 0x1, 0x0);
        gbc.writeMem(0xde5d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x15a3);
        EXPECT(gbc.pc(), 0xde5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde5d), 0xcb);
        EXPECT(gbc.readMem(0xde5e), 0xb4);
        // CB B4 03E4
        gbc.setState(0x6ffb, 0xca79, 0x35a0, 0x2ada, 0xfc52, 0x27ef, 0x0, 0x0);
        gbc.writeMem(0x6ffb, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xca79);
        EXPECT(gbc.pc(), 0x6ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB B4 03E5
        gbc.setState(0x8fd8, 0xad7b, 0x2c60, 0x96bf, 0xc2c6, 0xb91d, 0x0, 0x1);
        gbc.writeMem(0x8fd8, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xad7b);
        EXPECT(gbc.pc(), 0x8fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd8), 0xcb);
        EXPECT(gbc.readMem(0x8fd9), 0xb4);
        // CB B4 03E6
        gbc.setState(0xad4d, 0xb16a, 0x7e70, 0x54dd, 0x5733, 0x8013, 0x1, 0x0);
        gbc.writeMem(0xad4d, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xb16a);
        EXPECT(gbc.pc(), 0xad4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad4d), 0xcb);
        EXPECT(gbc.readMem(0xad4e), 0xb4);
        // CB B4 03E7
        gbc.setState(0xd01a, 0xec4e, 0xb1e0, 0xca95, 0x4cf2, 0x92ad, 0x1, 0x1);
        gbc.writeMem(0xd01a, { 0xcb, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xec4e);
        EXPECT(gbc.pc(), 0xd01c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd01a), 0xcb);
        EXPECT(gbc.readMem(0xd01b), 0xb4);
    }
}
#endif
