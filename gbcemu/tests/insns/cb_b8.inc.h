    TEST(gbcemu, opcode_cb_b8) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB B8 0000
        gbc.setState(0xca41, 0xe675, 0xe070, 0x370c, 0x355a, 0x2069, 0x0, 0x1);
        gbc.writeMem(0xca41, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xe675, gbc.sp());
        EXPECT(0xca43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca41));
        EXPECT(0xb8, gbc.readMem(0xca42));
        // CB B8 0001
        gbc.setState(0x4947, 0x46e5, 0xbf70, 0x95b0, 0xe7e2, 0xeb8b, 0x0, 0x0);
        gbc.writeMem(0x4947, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x46e5, gbc.sp());
        EXPECT(0x4949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0002
        gbc.setState(0x74d2, 0xcb1b, 0x4230, 0xdc66, 0x5c4c, 0x4bc6, 0x0, 0x1);
        gbc.writeMem(0x74d2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcb1b, gbc.sp());
        EXPECT(0x74d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0004
        gbc.setState(0xe48c, 0xe244, 0xc820, 0xc514, 0x999c, 0xd1cf, 0x0, 0x0);
        gbc.writeMem(0xe48c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xe244, gbc.sp());
        EXPECT(0xe48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48c));
        EXPECT(0xb8, gbc.readMem(0xe48d));
        // CB B8 0005
        gbc.setState(0xaa62, 0x7ddf, 0xe030, 0xbf49, 0xf7aa, 0xae0d, 0x0, 0x1);
        gbc.writeMem(0xaa62, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7ddf, gbc.sp());
        EXPECT(0xaa64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa62));
        EXPECT(0xb8, gbc.readMem(0xaa63));
        // CB B8 0006
        gbc.setState(0x1d96, 0x7f54, 0xb580, 0x2452, 0x62bc, 0xd3bd, 0x0, 0x0);
        gbc.writeMem(0x1d96, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0x1d98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0007
        gbc.setState(0x6982, 0xedfa, 0xa0f0, 0x5190, 0x9785, 0xc93, 0x1, 0x0);
        gbc.writeMem(0x6982, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xedfa, gbc.sp());
        EXPECT(0x6984, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0008
        gbc.setState(0x9ce2, 0x5aa3, 0x3980, 0x9aa, 0xa087, 0x864, 0x0, 0x0);
        gbc.writeMem(0x9ce2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x5aa3, gbc.sp());
        EXPECT(0x9ce4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ce2));
        EXPECT(0xb8, gbc.readMem(0x9ce3));
        // CB B8 0009
        gbc.setState(0xe15f, 0xe603, 0xe150, 0xfa51, 0x2bde, 0x7988, 0x0, 0x0);
        gbc.writeMem(0xe15f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe603, gbc.sp());
        EXPECT(0xe161, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15f));
        EXPECT(0xb8, gbc.readMem(0xe160));
        // CB B8 000A
        gbc.setState(0x25df, 0x94fe, 0xbf50, 0xd18, 0x59b9, 0x5fcf, 0x0, 0x0);
        gbc.writeMem(0x25df, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x94fe, gbc.sp());
        EXPECT(0x25e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 000C
        gbc.setState(0xd04f, 0xa1c8, 0xa8b0, 0x290a, 0xdb11, 0x1286, 0x1, 0x1);
        gbc.writeMem(0xd04f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa1c8, gbc.sp());
        EXPECT(0xd051, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd04f));
        EXPECT(0xb8, gbc.readMem(0xd050));
        // CB B8 000D
        gbc.setState(0x44be, 0x3b33, 0xc580, 0x17d4, 0x59bb, 0xd596, 0x0, 0x1);
        gbc.writeMem(0x44be, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3b33, gbc.sp());
        EXPECT(0x44c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 000E
        gbc.setState(0xe47e, 0xf724, 0x91b0, 0x363b, 0x612f, 0x6d51, 0x1, 0x1);
        gbc.writeMem(0xe47e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf724, gbc.sp());
        EXPECT(0xe480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe47e));
        EXPECT(0xb8, gbc.readMem(0xe47f));
        // CB B8 000F
        gbc.setState(0xa82b, 0xc9cf, 0x2440, 0x1840, 0x3eac, 0x96e, 0x1, 0x0);
        gbc.writeMem(0xa82b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc9cf, gbc.sp());
        EXPECT(0xa82d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa82b));
        EXPECT(0xb8, gbc.readMem(0xa82c));
        // CB B8 0010
        gbc.setState(0x7eee, 0x1061, 0x44a0, 0x211a, 0x5094, 0x7bce, 0x1, 0x1);
        gbc.writeMem(0x7eee, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1061, gbc.sp());
        EXPECT(0x7ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0011
        gbc.setState(0xca92, 0x2ac3, 0x57f0, 0x436e, 0x851b, 0xb5a1, 0x0, 0x1);
        gbc.writeMem(0xca92, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x2ac3, gbc.sp());
        EXPECT(0xca94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca92));
        EXPECT(0xb8, gbc.readMem(0xca93));
        // CB B8 0012
        gbc.setState(0x54e0, 0xf08, 0x4e10, 0xe717, 0x987b, 0xa1d, 0x1, 0x1);
        gbc.writeMem(0x54e0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf08, gbc.sp());
        EXPECT(0x54e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0013
        gbc.setState(0x2dfd, 0x14c3, 0xcce0, 0x608d, 0x671d, 0x479e, 0x0, 0x0);
        gbc.writeMem(0x2dfd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x14c3, gbc.sp());
        EXPECT(0x2dff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0014
        gbc.setState(0x9bb3, 0xca66, 0x49c0, 0x1401, 0x7e0c, 0x3c41, 0x0, 0x0);
        gbc.writeMem(0x9bb3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xca66, gbc.sp());
        EXPECT(0x9bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bb3));
        EXPECT(0xb8, gbc.readMem(0x9bb4));
        // CB B8 0015
        gbc.setState(0x7fb3, 0xfd84, 0xa9e0, 0xf897, 0x7e7e, 0x8d7f, 0x0, 0x1);
        gbc.writeMem(0x7fb3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xfd84, gbc.sp());
        EXPECT(0x7fb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0016
        gbc.setState(0xe10d, 0xfa5, 0x1c80, 0xe998, 0x2981, 0x8be3, 0x0, 0x0);
        gbc.writeMem(0xe10d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfa5, gbc.sp());
        EXPECT(0xe10f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe10d));
        EXPECT(0xb8, gbc.readMem(0xe10e));
        // CB B8 0017
        gbc.setState(0x7bf8, 0x43d1, 0xde0, 0x8294, 0x3fd8, 0x4211, 0x1, 0x0);
        gbc.writeMem(0x7bf8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x43d1, gbc.sp());
        EXPECT(0x7bfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0018
        gbc.setState(0xd6f6, 0xa22c, 0x6500, 0x811c, 0xeef7, 0x69c, 0x0, 0x1);
        gbc.writeMem(0xd6f6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa22c, gbc.sp());
        EXPECT(0xd6f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6f6));
        EXPECT(0xb8, gbc.readMem(0xd6f7));
        // CB B8 0019
        gbc.setState(0xf14, 0x8907, 0x4830, 0xde39, 0x9bd, 0x1d48, 0x0, 0x0);
        gbc.writeMem(0xf14, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8907, gbc.sp());
        EXPECT(0xf16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 001A
        gbc.setState(0x6671, 0x1db9, 0x6b50, 0xda2f, 0x68cd, 0x791, 0x0, 0x0);
        gbc.writeMem(0x6671, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1db9, gbc.sp());
        EXPECT(0x6673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 001B
        gbc.setState(0x64df, 0xe59, 0x6d50, 0xbaee, 0x6c95, 0xe7c0, 0x1, 0x1);
        gbc.writeMem(0x64df, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xe59, gbc.sp());
        EXPECT(0x64e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 001C
        gbc.setState(0x4bfc, 0x388b, 0xe50, 0x9164, 0xae3a, 0xa85d, 0x0, 0x0);
        gbc.writeMem(0x4bfc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x388b, gbc.sp());
        EXPECT(0x4bfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 001D
        gbc.setState(0xbc3e, 0x3af2, 0xb4a0, 0x5fcb, 0x77b6, 0xfe4d, 0x0, 0x1);
        gbc.writeMem(0xbc3e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3af2, gbc.sp());
        EXPECT(0xbc40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc3e));
        EXPECT(0xb8, gbc.readMem(0xbc3f));
        // CB B8 001E
        gbc.setState(0xd0ab, 0x5a29, 0x6260, 0xd0d4, 0x9321, 0x1d59, 0x1, 0x1);
        gbc.writeMem(0xd0ab, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5a29, gbc.sp());
        EXPECT(0xd0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ab));
        EXPECT(0xb8, gbc.readMem(0xd0ac));
        // CB B8 001F
        gbc.setState(0x7d9e, 0x14cc, 0x3e30, 0x923d, 0x8d2f, 0x138e, 0x1, 0x1);
        gbc.writeMem(0x7d9e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x14cc, gbc.sp());
        EXPECT(0x7da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0020
        gbc.setState(0xd35, 0xed87, 0x9390, 0x512c, 0x928a, 0x5a26, 0x0, 0x1);
        gbc.writeMem(0xd35, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xed87, gbc.sp());
        EXPECT(0xd37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0021
        gbc.setState(0x7d10, 0x94bc, 0xed00, 0x301c, 0xbfad, 0x7072, 0x0, 0x1);
        gbc.writeMem(0x7d10, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x94bc, gbc.sp());
        EXPECT(0x7d12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0022
        gbc.setState(0xe3ae, 0x6d42, 0x6400, 0x391e, 0x6046, 0x52b4, 0x0, 0x1);
        gbc.writeMem(0xe3ae, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x6d42, gbc.sp());
        EXPECT(0xe3b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3ae));
        EXPECT(0xb8, gbc.readMem(0xe3af));
        // CB B8 0024
        gbc.setState(0x3dec, 0xba20, 0x2300, 0x9258, 0x365f, 0x7b25, 0x0, 0x1);
        gbc.writeMem(0x3dec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xba20, gbc.sp());
        EXPECT(0x3dee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0025
        gbc.setState(0xe94a, 0x3dc6, 0x5c20, 0xeac5, 0xffc2, 0xca80, 0x0, 0x0);
        gbc.writeMem(0xe94a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3dc6, gbc.sp());
        EXPECT(0xe94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe94a));
        EXPECT(0xb8, gbc.readMem(0xe94b));
        // CB B8 0026
        gbc.setState(0xe988, 0x6a85, 0xbdb0, 0xb89, 0xf76e, 0x5f8, 0x0, 0x0);
        gbc.writeMem(0xe988, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6a85, gbc.sp());
        EXPECT(0xe98a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe988));
        EXPECT(0xb8, gbc.readMem(0xe989));
        // CB B8 0027
        gbc.setState(0x20c9, 0x34f2, 0xa210, 0xd3e2, 0x3e61, 0x4719, 0x0, 0x1);
        gbc.writeMem(0x20c9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x34f2, gbc.sp());
        EXPECT(0x20cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0028
        gbc.setState(0x56ad, 0x1563, 0x9d10, 0xd0af, 0xf455, 0x56f2, 0x1, 0x0);
        gbc.writeMem(0x56ad, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1563, gbc.sp());
        EXPECT(0x56af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0029
        gbc.setState(0x3d6, 0x348f, 0x5780, 0x474d, 0xf3e3, 0xc41b, 0x1, 0x0);
        gbc.writeMem(0x3d6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x348f, gbc.sp());
        EXPECT(0x3d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 002A
        gbc.setState(0x41a2, 0x8f3d, 0x1dd0, 0xf626, 0x461, 0x2869, 0x1, 0x0);
        gbc.writeMem(0x41a2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8f3d, gbc.sp());
        EXPECT(0x41a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 002B
        gbc.setState(0xe62a, 0x8fba, 0x2330, 0xa6b1, 0xea90, 0x6954, 0x1, 0x1);
        gbc.writeMem(0xe62a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8fba, gbc.sp());
        EXPECT(0xe62c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62a));
        EXPECT(0xb8, gbc.readMem(0xe62b));
        // CB B8 002C
        gbc.setState(0x57f9, 0xcb88, 0xbb20, 0xd4c4, 0x3bb1, 0x95b4, 0x0, 0x1);
        gbc.writeMem(0x57f9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcb88, gbc.sp());
        EXPECT(0x57fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 002D
        gbc.setState(0xa949, 0x2647, 0x5120, 0xb5f2, 0x1d2e, 0xc6d2, 0x0, 0x1);
        gbc.writeMem(0xa949, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x2647, gbc.sp());
        EXPECT(0xa94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa949));
        EXPECT(0xb8, gbc.readMem(0xa94a));
        // CB B8 002E
        gbc.setState(0x5d47, 0x87c7, 0xd1b0, 0xa20a, 0x9844, 0x7594, 0x0, 0x1);
        gbc.writeMem(0x5d47, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x87c7, gbc.sp());
        EXPECT(0x5d49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 002F
        gbc.setState(0x4e22, 0x98ca, 0x7b80, 0x3f11, 0xb95e, 0xf106, 0x0, 0x0);
        gbc.writeMem(0x4e22, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x98ca, gbc.sp());
        EXPECT(0x4e24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0030
        gbc.setState(0x6a58, 0x7ed2, 0x9450, 0xc491, 0x32a0, 0x6834, 0x0, 0x0);
        gbc.writeMem(0x6a58, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7ed2, gbc.sp());
        EXPECT(0x6a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0031
        gbc.setState(0x21f1, 0x2d72, 0xb930, 0xcedc, 0xb8ef, 0x1ed5, 0x0, 0x1);
        gbc.writeMem(0x21f1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2d72, gbc.sp());
        EXPECT(0x21f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0032
        gbc.setState(0x3f96, 0xa640, 0x85b0, 0x17d6, 0x6700, 0x403, 0x0, 0x0);
        gbc.writeMem(0x3f96, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xa640, gbc.sp());
        EXPECT(0x3f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0033
        gbc.setState(0x13b2, 0xf142, 0x5960, 0x6093, 0xeb95, 0xc69c, 0x1, 0x1);
        gbc.writeMem(0x13b2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf142, gbc.sp());
        EXPECT(0x13b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0035
        gbc.setState(0xa651, 0x1212, 0x34d0, 0xea37, 0x12dd, 0x4be7, 0x1, 0x0);
        gbc.writeMem(0xa651, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x1212, gbc.sp());
        EXPECT(0xa653, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa651));
        EXPECT(0xb8, gbc.readMem(0xa652));
        // CB B8 0036
        gbc.setState(0x18eb, 0x3b65, 0x1550, 0x368, 0xfbde, 0x5be, 0x0, 0x0);
        gbc.writeMem(0x18eb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3b65, gbc.sp());
        EXPECT(0x18ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0037
        gbc.setState(0xec7d, 0xe8dc, 0x9890, 0x2da7, 0x6056, 0x6cf0, 0x0, 0x0);
        gbc.writeMem(0xec7d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe8dc, gbc.sp());
        EXPECT(0xec7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec7d));
        EXPECT(0xb8, gbc.readMem(0xec7e));
        // CB B8 0038
        gbc.setState(0x1547, 0x91e2, 0xfc50, 0x6704, 0xcd49, 0xffb6, 0x0, 0x0);
        gbc.writeMem(0x1547, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x91e2, gbc.sp());
        EXPECT(0x1549, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0039
        gbc.setState(0x1ab2, 0x5741, 0xaff0, 0x1099, 0x67d3, 0xa877, 0x0, 0x1);
        gbc.writeMem(0x1ab2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5741, gbc.sp());
        EXPECT(0x1ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 003A
        gbc.setState(0x1321, 0x62d3, 0xcd30, 0xd1b4, 0xf613, 0x30d4, 0x1, 0x0);
        gbc.writeMem(0x1321, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x62d3, gbc.sp());
        EXPECT(0x1323, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 003B
        gbc.setState(0xcd2d, 0x6418, 0x1d90, 0xb35, 0xb961, 0x1165, 0x0, 0x0);
        gbc.writeMem(0xcd2d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6418, gbc.sp());
        EXPECT(0xcd2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd2d));
        EXPECT(0xb8, gbc.readMem(0xcd2e));
        // CB B8 003C
        gbc.setState(0x93a9, 0x1f70, 0xa910, 0x53cf, 0x5497, 0xe35c, 0x0, 0x1);
        gbc.writeMem(0x93a9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1f70, gbc.sp());
        EXPECT(0x93ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a9));
        EXPECT(0xb8, gbc.readMem(0x93aa));
        // CB B8 003D
        gbc.setState(0x50af, 0x7440, 0xb160, 0x8fa8, 0xe542, 0xd10f, 0x0, 0x0);
        gbc.writeMem(0x50af, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7440, gbc.sp());
        EXPECT(0x50b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 003E
        gbc.setState(0x9e18, 0xcd65, 0xac90, 0x63e5, 0x7d77, 0xf8bd, 0x1, 0x1);
        gbc.writeMem(0x9e18, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xcd65, gbc.sp());
        EXPECT(0x9e1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e18));
        EXPECT(0xb8, gbc.readMem(0x9e19));
        // CB B8 003F
        gbc.setState(0x29c1, 0xfb01, 0xde00, 0x6f26, 0x127e, 0x1dcb, 0x0, 0x0);
        gbc.writeMem(0x29c1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfb01, gbc.sp());
        EXPECT(0x29c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0040
        gbc.setState(0x7453, 0x6c60, 0x77a0, 0xf6dc, 0xd1f6, 0xb3b9, 0x1, 0x1);
        gbc.writeMem(0x7453, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x6c60, gbc.sp());
        EXPECT(0x7455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0041
        gbc.setState(0x2e89, 0x6096, 0xb370, 0xa2bf, 0x9420, 0x3368, 0x0, 0x0);
        gbc.writeMem(0x2e89, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6096, gbc.sp());
        EXPECT(0x2e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0042
        gbc.setState(0x6cf6, 0x6186, 0x7b90, 0x66e7, 0x9f95, 0x393f, 0x1, 0x0);
        gbc.writeMem(0x6cf6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x6186, gbc.sp());
        EXPECT(0x6cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0043
        gbc.setState(0x7f02, 0xdff5, 0x14a0, 0xe68f, 0xe221, 0xc3e5, 0x1, 0x1);
        gbc.writeMem(0x7f02, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xdff5, gbc.sp());
        EXPECT(0x7f04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0044
        gbc.setState(0x14bf, 0x4d82, 0xbf20, 0x353d, 0xb1e5, 0x7b78, 0x1, 0x1);
        gbc.writeMem(0x14bf, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x4d82, gbc.sp());
        EXPECT(0x14c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0045
        gbc.setState(0xb75d, 0xb38b, 0x11b0, 0xffbc, 0x213a, 0x523e, 0x0, 0x1);
        gbc.writeMem(0xb75d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb38b, gbc.sp());
        EXPECT(0xb75f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb75d));
        EXPECT(0xb8, gbc.readMem(0xb75e));
        // CB B8 0046
        gbc.setState(0x4566, 0xdada, 0x5c80, 0x9360, 0xe4a, 0xd877, 0x1, 0x0);
        gbc.writeMem(0x4566, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xdada, gbc.sp());
        EXPECT(0x4568, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0047
        gbc.setState(0x86ff, 0xbb8a, 0xf9f0, 0x8e60, 0x477, 0xc78e, 0x0, 0x0);
        gbc.writeMem(0x86ff, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xbb8a, gbc.sp());
        EXPECT(0x8701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86ff));
        EXPECT(0xb8, gbc.readMem(0x8700));
        // CB B8 0048
        gbc.setState(0x3c8e, 0xec22, 0x84f0, 0xba38, 0xb622, 0x9ef8, 0x0, 0x0);
        gbc.writeMem(0x3c8e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xec22, gbc.sp());
        EXPECT(0x3c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0049
        gbc.setState(0x1cc6, 0xcc96, 0x3be0, 0x707c, 0xa1a0, 0x62fd, 0x0, 0x0);
        gbc.writeMem(0x1cc6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xcc96, gbc.sp());
        EXPECT(0x1cc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 004A
        gbc.setState(0x41b1, 0x8836, 0x8e70, 0x1be9, 0x7231, 0xe67a, 0x1, 0x0);
        gbc.writeMem(0x41b1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8836, gbc.sp());
        EXPECT(0x41b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 004B
        gbc.setState(0x3401, 0x7801, 0x3360, 0x25fd, 0xac50, 0xacbb, 0x0, 0x0);
        gbc.writeMem(0x3401, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7801, gbc.sp());
        EXPECT(0x3403, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 004C
        gbc.setState(0xbd9e, 0xf5bd, 0x49f0, 0x405b, 0x7053, 0x4639, 0x0, 0x0);
        gbc.writeMem(0xbd9e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xf5bd, gbc.sp());
        EXPECT(0xbda0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9e));
        EXPECT(0xb8, gbc.readMem(0xbd9f));
        // CB B8 004D
        gbc.setState(0x6363, 0xd58e, 0xe0e0, 0xa3, 0x6689, 0xbeaf, 0x1, 0x0);
        gbc.writeMem(0x6363, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xd58e, gbc.sp());
        EXPECT(0x6365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 004E
        gbc.setState(0xb32e, 0x5954, 0xef20, 0xcbee, 0x5c74, 0x6446, 0x0, 0x1);
        gbc.writeMem(0xb32e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5954, gbc.sp());
        EXPECT(0xb330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32e));
        EXPECT(0xb8, gbc.readMem(0xb32f));
        // CB B8 004F
        gbc.setState(0x16b4, 0xb009, 0x4ca0, 0x34cf, 0xad9a, 0x7025, 0x0, 0x0);
        gbc.writeMem(0x16b4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb009, gbc.sp());
        EXPECT(0x16b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0050
        gbc.setState(0xf95, 0xb4b4, 0xa490, 0x7e5b, 0x2d52, 0xa9d, 0x1, 0x1);
        gbc.writeMem(0xf95, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb4b4, gbc.sp());
        EXPECT(0xf97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0051
        gbc.setState(0xbe2b, 0xc56a, 0x2ea0, 0xdfc0, 0x24f5, 0xfae8, 0x0, 0x1);
        gbc.writeMem(0xbe2b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc56a, gbc.sp());
        EXPECT(0xbe2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe2b));
        EXPECT(0xb8, gbc.readMem(0xbe2c));
        // CB B8 0052
        gbc.setState(0x9127, 0x75ed, 0xfbc0, 0x477b, 0x90e8, 0xdcc, 0x1, 0x0);
        gbc.writeMem(0x9127, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x75ed, gbc.sp());
        EXPECT(0x9129, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9127));
        EXPECT(0xb8, gbc.readMem(0x9128));
        // CB B8 0053
        gbc.setState(0xdd01, 0x971c, 0xbce0, 0x6f34, 0xc926, 0x65fd, 0x1, 0x0);
        gbc.writeMem(0xdd01, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x971c, gbc.sp());
        EXPECT(0xdd03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd01));
        EXPECT(0xb8, gbc.readMem(0xdd02));
        // CB B8 0054
        gbc.setState(0xeb2a, 0x378b, 0xc710, 0x1d3f, 0xa4eb, 0x86f9, 0x0, 0x1);
        gbc.writeMem(0xeb2a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x378b, gbc.sp());
        EXPECT(0xeb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2a));
        EXPECT(0xb8, gbc.readMem(0xeb2b));
        // CB B8 0055
        gbc.setState(0x8ac7, 0x68c7, 0x91f0, 0xb8d2, 0x4bf4, 0x1dcb, 0x0, 0x0);
        gbc.writeMem(0x8ac7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x68c7, gbc.sp());
        EXPECT(0x8ac9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ac7));
        EXPECT(0xb8, gbc.readMem(0x8ac8));
        // CB B8 0056
        gbc.setState(0x9062, 0x684a, 0x2440, 0x2d3d, 0x7f2a, 0xcb01, 0x0, 0x0);
        gbc.writeMem(0x9062, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x684a, gbc.sp());
        EXPECT(0x9064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9062));
        EXPECT(0xb8, gbc.readMem(0x9063));
        // CB B8 0057
        gbc.setState(0x29dc, 0x5d0c, 0x7290, 0xeb1e, 0x9c66, 0x2cb5, 0x0, 0x1);
        gbc.writeMem(0x29dc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5d0c, gbc.sp());
        EXPECT(0x29de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0059
        gbc.setState(0xb418, 0x914c, 0x8ba0, 0xee5d, 0x6769, 0xa5be, 0x0, 0x0);
        gbc.writeMem(0xb418, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x914c, gbc.sp());
        EXPECT(0xb41a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb418));
        EXPECT(0xb8, gbc.readMem(0xb419));
        // CB B8 005B
        gbc.setState(0x482e, 0xbe58, 0x83c0, 0x3e8, 0x3268, 0x35e, 0x0, 0x1);
        gbc.writeMem(0x482e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbe58, gbc.sp());
        EXPECT(0x4830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 005C
        gbc.setState(0xed1a, 0xbf78, 0x3000, 0x5b97, 0x24ac, 0xe8c8, 0x0, 0x1);
        gbc.writeMem(0xed1a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbf78, gbc.sp());
        EXPECT(0xed1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed1a));
        EXPECT(0xb8, gbc.readMem(0xed1b));
        // CB B8 005D
        gbc.setState(0xc783, 0x1b, 0x42f0, 0x8f4c, 0x7db7, 0x2735, 0x0, 0x1);
        gbc.writeMem(0xc783, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1b, gbc.sp());
        EXPECT(0xc785, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc783));
        EXPECT(0xb8, gbc.readMem(0xc784));
        // CB B8 005E
        gbc.setState(0x1e8f, 0xe21e, 0x55f0, 0x471e, 0xf09e, 0xc110, 0x1, 0x1);
        gbc.writeMem(0x1e8f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe21e, gbc.sp());
        EXPECT(0x1e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 005F
        gbc.setState(0xc2c4, 0x6ad6, 0x6c90, 0xe27b, 0xbf7b, 0x1997, 0x1, 0x0);
        gbc.writeMem(0xc2c4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6ad6, gbc.sp());
        EXPECT(0xc2c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2c4));
        EXPECT(0xb8, gbc.readMem(0xc2c5));
        // CB B8 0060
        gbc.setState(0x3aff, 0x48ee, 0x7970, 0xd41, 0x7aa9, 0x1e2a, 0x0, 0x0);
        gbc.writeMem(0x3aff, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x48ee, gbc.sp());
        EXPECT(0x3b01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0061
        gbc.setState(0x22be, 0x621e, 0x41b0, 0xb7a3, 0x53b1, 0x4c6a, 0x0, 0x0);
        gbc.writeMem(0x22be, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x621e, gbc.sp());
        EXPECT(0x22c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0062
        gbc.setState(0x6e5f, 0x3e19, 0xc040, 0xf5, 0x635a, 0x3199, 0x1, 0x1);
        gbc.writeMem(0x6e5f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x3e19, gbc.sp());
        EXPECT(0x6e61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0063
        gbc.setState(0xe46a, 0x4c04, 0xed90, 0x3e68, 0xc27b, 0xa723, 0x0, 0x0);
        gbc.writeMem(0xe46a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4c04, gbc.sp());
        EXPECT(0xe46c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe46a));
        EXPECT(0xb8, gbc.readMem(0xe46b));
        // CB B8 0064
        gbc.setState(0x98d5, 0x16c9, 0xd9c0, 0x2d87, 0x3f7c, 0xbcbc, 0x1, 0x0);
        gbc.writeMem(0x98d5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x16c9, gbc.sp());
        EXPECT(0x98d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d5));
        EXPECT(0xb8, gbc.readMem(0x98d6));
        // CB B8 0065
        gbc.setState(0xbec7, 0xfc0e, 0x1360, 0xc591, 0x9388, 0xe1f1, 0x1, 0x0);
        gbc.writeMem(0xbec7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xfc0e, gbc.sp());
        EXPECT(0xbec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbec7));
        EXPECT(0xb8, gbc.readMem(0xbec8));
        // CB B8 0066
        gbc.setState(0x974, 0x9494, 0xaf0, 0xef0f, 0xf654, 0x78e4, 0x0, 0x0);
        gbc.writeMem(0x974, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x9494, gbc.sp());
        EXPECT(0x976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0067
        gbc.setState(0xabb4, 0x2749, 0xd420, 0xdb8a, 0x1ac8, 0xc87e, 0x0, 0x0);
        gbc.writeMem(0xabb4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2749, gbc.sp());
        EXPECT(0xabb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb4));
        EXPECT(0xb8, gbc.readMem(0xabb5));
        // CB B8 0068
        gbc.setState(0x6d88, 0x1f09, 0x1ca0, 0xe266, 0xae1, 0x5a83, 0x0, 0x0);
        gbc.writeMem(0x6d88, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1f09, gbc.sp());
        EXPECT(0x6d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 006A
        gbc.setState(0x93e0, 0x8e51, 0xe5b0, 0xdbfd, 0x5e10, 0x2476, 0x1, 0x1);
        gbc.writeMem(0x93e0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8e51, gbc.sp());
        EXPECT(0x93e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e0));
        EXPECT(0xb8, gbc.readMem(0x93e1));
        // CB B8 006B
        gbc.setState(0xc072, 0x5d79, 0xf040, 0xccef, 0xcbdf, 0x8ceb, 0x1, 0x0);
        gbc.writeMem(0xc072, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5d79, gbc.sp());
        EXPECT(0xc074, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc072));
        EXPECT(0xb8, gbc.readMem(0xc073));
        // CB B8 006C
        gbc.setState(0xbbce, 0x1c6c, 0xb7f0, 0xedc1, 0x842c, 0x7b0, 0x0, 0x0);
        gbc.writeMem(0xbbce, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1c6c, gbc.sp());
        EXPECT(0xbbd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbce));
        EXPECT(0xb8, gbc.readMem(0xbbcf));
        // CB B8 006D
        gbc.setState(0x605, 0x2d60, 0x48a0, 0x80b9, 0x22a2, 0xdf02, 0x0, 0x1);
        gbc.writeMem(0x605, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x2d60, gbc.sp());
        EXPECT(0x607, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 006E
        gbc.setState(0x232c, 0xc1b5, 0xdac0, 0x929d, 0x8393, 0xb67f, 0x0, 0x1);
        gbc.writeMem(0x232c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc1b5, gbc.sp());
        EXPECT(0x232e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 006F
        gbc.setState(0xde85, 0xc4bd, 0xc830, 0x60b7, 0xd5c0, 0xe8c1, 0x0, 0x1);
        gbc.writeMem(0xde85, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xc4bd, gbc.sp());
        EXPECT(0xde87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde85));
        EXPECT(0xb8, gbc.readMem(0xde86));
        // CB B8 0070
        gbc.setState(0xb1a, 0x3142, 0x6390, 0x7b56, 0xc8b, 0xb18f, 0x0, 0x0);
        gbc.writeMem(0xb1a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3142, gbc.sp());
        EXPECT(0xb1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0071
        gbc.setState(0x1d30, 0x74d5, 0xcf80, 0x4756, 0xd6e1, 0x2075, 0x0, 0x1);
        gbc.writeMem(0x1d30, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x74d5, gbc.sp());
        EXPECT(0x1d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0072
        gbc.setState(0xecfc, 0x7d77, 0xcb20, 0xe82a, 0x29b2, 0xf9f9, 0x0, 0x1);
        gbc.writeMem(0xecfc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7d77, gbc.sp());
        EXPECT(0xecfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecfc));
        EXPECT(0xb8, gbc.readMem(0xecfd));
        // CB B8 0073
        gbc.setState(0x9b2a, 0x17a, 0x5b80, 0x859d, 0xd7fe, 0xa30d, 0x1, 0x0);
        gbc.writeMem(0x9b2a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x17a, gbc.sp());
        EXPECT(0x9b2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b2a));
        EXPECT(0xb8, gbc.readMem(0x9b2b));
        // CB B8 0074
        gbc.setState(0xba31, 0xfd16, 0xcb0, 0xcd53, 0xb964, 0xd9ba, 0x1, 0x1);
        gbc.writeMem(0xba31, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfd16, gbc.sp());
        EXPECT(0xba33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba31));
        EXPECT(0xb8, gbc.readMem(0xba32));
        // CB B8 0075
        gbc.setState(0xa21, 0x8e74, 0xa5a0, 0x84e9, 0x2a1d, 0xcf73, 0x1, 0x0);
        gbc.writeMem(0xa21, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8e74, gbc.sp());
        EXPECT(0xa23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0076
        gbc.setState(0x7576, 0x6c2e, 0x1ca0, 0x2b10, 0xfd38, 0x5228, 0x1, 0x1);
        gbc.writeMem(0x7576, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6c2e, gbc.sp());
        EXPECT(0x7578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0077
        gbc.setState(0x6a2b, 0x4649, 0xa950, 0xa863, 0xaa6e, 0x3f47, 0x0, 0x1);
        gbc.writeMem(0x6a2b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x4649, gbc.sp());
        EXPECT(0x6a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0078
        gbc.setState(0x84ad, 0x9fa8, 0x5e00, 0xbde, 0x1159, 0x64e6, 0x1, 0x1);
        gbc.writeMem(0x84ad, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9fa8, gbc.sp());
        EXPECT(0x84af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ad));
        EXPECT(0xb8, gbc.readMem(0x84ae));
        // CB B8 0079
        gbc.setState(0x996a, 0xfa72, 0xe660, 0xd08a, 0x3d6b, 0x2711, 0x0, 0x1);
        gbc.writeMem(0x996a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfa72, gbc.sp());
        EXPECT(0x996c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x996a));
        EXPECT(0xb8, gbc.readMem(0x996b));
        // CB B8 007A
        gbc.setState(0x99d4, 0x625e, 0xf4b0, 0xc617, 0x65b0, 0xd005, 0x0, 0x1);
        gbc.writeMem(0x99d4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x625e, gbc.sp());
        EXPECT(0x99d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99d4));
        EXPECT(0xb8, gbc.readMem(0x99d5));
        // CB B8 007B
        gbc.setState(0x466c, 0xfe80, 0x1bd0, 0xf443, 0x458f, 0xed85, 0x1, 0x1);
        gbc.writeMem(0x466c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfe80, gbc.sp());
        EXPECT(0x466e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 007C
        gbc.setState(0x80a8, 0xaac8, 0xb0e0, 0xfcd3, 0xf986, 0xa235, 0x1, 0x0);
        gbc.writeMem(0x80a8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xaac8, gbc.sp());
        EXPECT(0x80aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a8));
        EXPECT(0xb8, gbc.readMem(0x80a9));
        // CB B8 007E
        gbc.setState(0x3ab8, 0x6d04, 0x470, 0x3b25, 0x2014, 0x3ca8, 0x1, 0x1);
        gbc.writeMem(0x3ab8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x6d04, gbc.sp());
        EXPECT(0x3aba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 007F
        gbc.setState(0x5830, 0x1026, 0x34e0, 0xaae, 0x60bf, 0x3614, 0x1, 0x1);
        gbc.writeMem(0x5830, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1026, gbc.sp());
        EXPECT(0x5832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0080
        gbc.setState(0x43fc, 0x827c, 0x48f0, 0x5978, 0x5c8a, 0x81d9, 0x1, 0x0);
        gbc.writeMem(0x43fc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x827c, gbc.sp());
        EXPECT(0x43fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0081
        gbc.setState(0x4568, 0x181a, 0xb8e0, 0x2194, 0x8fc, 0x1f4d, 0x0, 0x0);
        gbc.writeMem(0x4568, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x181a, gbc.sp());
        EXPECT(0x456a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0082
        gbc.setState(0x72e0, 0x639, 0xf260, 0x5ae4, 0xd902, 0x28bd, 0x0, 0x1);
        gbc.writeMem(0x72e0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x639, gbc.sp());
        EXPECT(0x72e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0083
        gbc.setState(0x3d94, 0x7f0d, 0xaf10, 0xa3d5, 0x5e8e, 0x9602, 0x1, 0x1);
        gbc.writeMem(0x3d94, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7f0d, gbc.sp());
        EXPECT(0x3d96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0084
        gbc.setState(0x5475, 0x9276, 0xf800, 0xcbeb, 0x314, 0x5004, 0x0, 0x1);
        gbc.writeMem(0x5475, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9276, gbc.sp());
        EXPECT(0x5477, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0085
        gbc.setState(0xf0b, 0xdf7f, 0x3f60, 0xf013, 0x43fd, 0xe07, 0x0, 0x1);
        gbc.writeMem(0xf0b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdf7f, gbc.sp());
        EXPECT(0xf0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0086
        gbc.setState(0x6702, 0x59e0, 0xd0d0, 0x8a64, 0xf684, 0xc07f, 0x0, 0x1);
        gbc.writeMem(0x6702, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x59e0, gbc.sp());
        EXPECT(0x6704, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0087
        gbc.setState(0x2f2e, 0x8ada, 0xdbe0, 0x4eed, 0x78f1, 0x2699, 0x0, 0x1);
        gbc.writeMem(0x2f2e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8ada, gbc.sp());
        EXPECT(0x2f30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0088
        gbc.setState(0x8f34, 0xfa17, 0xaa80, 0x479f, 0x8609, 0x721c, 0x0, 0x1);
        gbc.writeMem(0x8f34, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xfa17, gbc.sp());
        EXPECT(0x8f36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f34));
        EXPECT(0xb8, gbc.readMem(0x8f35));
        // CB B8 0089
        gbc.setState(0x2217, 0xcf9e, 0x66b0, 0xf772, 0xc04a, 0xa5e9, 0x1, 0x0);
        gbc.writeMem(0x2217, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcf9e, gbc.sp());
        EXPECT(0x2219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 008A
        gbc.setState(0xd209, 0x1c8a, 0x69d0, 0xa795, 0x94f, 0xcec0, 0x0, 0x0);
        gbc.writeMem(0xd209, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1c8a, gbc.sp());
        EXPECT(0xd20b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd209));
        EXPECT(0xb8, gbc.readMem(0xd20a));
        // CB B8 008B
        gbc.setState(0xad17, 0x9510, 0xcb00, 0xebda, 0x3de5, 0x48ae, 0x0, 0x1);
        gbc.writeMem(0xad17, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x9510, gbc.sp());
        EXPECT(0xad19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad17));
        EXPECT(0xb8, gbc.readMem(0xad18));
        // CB B8 008C
        gbc.setState(0x89a4, 0x91ef, 0xbe10, 0x8efc, 0xd104, 0x6411, 0x1, 0x0);
        gbc.writeMem(0x89a4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x91ef, gbc.sp());
        EXPECT(0x89a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a4));
        EXPECT(0xb8, gbc.readMem(0x89a5));
        // CB B8 008D
        gbc.setState(0xd80f, 0x1a62, 0x91d0, 0x8a8d, 0x4144, 0x61b1, 0x1, 0x0);
        gbc.writeMem(0xd80f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1a62, gbc.sp());
        EXPECT(0xd811, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd80f));
        EXPECT(0xb8, gbc.readMem(0xd810));
        // CB B8 008E
        gbc.setState(0x6a0f, 0x4bea, 0x97d0, 0xb80e, 0xf8b5, 0xe057, 0x0, 0x1);
        gbc.writeMem(0x6a0f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x4bea, gbc.sp());
        EXPECT(0x6a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 008F
        gbc.setState(0xefa6, 0xc1cf, 0xe930, 0x3d43, 0xa597, 0x3008, 0x0, 0x1);
        gbc.writeMem(0xefa6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc1cf, gbc.sp());
        EXPECT(0xefa8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa6));
        EXPECT(0xb8, gbc.readMem(0xefa7));
        // CB B8 0090
        gbc.setState(0x3f3e, 0x390a, 0x6ac0, 0x8e6c, 0xcb5f, 0x4abd, 0x1, 0x1);
        gbc.writeMem(0x3f3e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x390a, gbc.sp());
        EXPECT(0x3f40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0091
        gbc.setState(0x5bc5, 0x4485, 0xab00, 0x8a6f, 0xe715, 0xfc96, 0x0, 0x1);
        gbc.writeMem(0x5bc5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4485, gbc.sp());
        EXPECT(0x5bc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0092
        gbc.setState(0x5273, 0xc1e6, 0x1230, 0xe894, 0xecd7, 0x474c, 0x0, 0x0);
        gbc.writeMem(0x5273, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc1e6, gbc.sp());
        EXPECT(0x5275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0093
        gbc.setState(0x188, 0xcbcc, 0x2160, 0x24d4, 0xa386, 0xae26, 0x0, 0x0);
        gbc.writeMem(0x188, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcbcc, gbc.sp());
        EXPECT(0x18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0094
        gbc.setState(0x2bea, 0x18b4, 0x76d0, 0xc740, 0x2d96, 0xcb88, 0x1, 0x0);
        gbc.writeMem(0x2bea, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x18b4, gbc.sp());
        EXPECT(0x2bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0095
        gbc.setState(0xd34c, 0x67a, 0x6450, 0xace0, 0xb970, 0x2357, 0x0, 0x1);
        gbc.writeMem(0xd34c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x67a, gbc.sp());
        EXPECT(0xd34e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd34c));
        EXPECT(0xb8, gbc.readMem(0xd34d));
        // CB B8 0096
        gbc.setState(0xb432, 0x801c, 0x5900, 0x98c0, 0x9848, 0x244a, 0x0, 0x1);
        gbc.writeMem(0xb432, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x801c, gbc.sp());
        EXPECT(0xb434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb432));
        EXPECT(0xb8, gbc.readMem(0xb433));
        // CB B8 0098
        gbc.setState(0x60c0, 0x53ff, 0xc0e0, 0x82ca, 0xb495, 0x6dc0, 0x0, 0x1);
        gbc.writeMem(0x60c0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x53ff, gbc.sp());
        EXPECT(0x60c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0099
        gbc.setState(0x16e8, 0x440f, 0x6b50, 0x28aa, 0x526d, 0x79ee, 0x0, 0x0);
        gbc.writeMem(0x16e8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x440f, gbc.sp());
        EXPECT(0x16ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 009A
        gbc.setState(0xebba, 0xa38d, 0xe5a0, 0xce54, 0x7c03, 0xce60, 0x0, 0x0);
        gbc.writeMem(0xebba, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa38d, gbc.sp());
        EXPECT(0xebbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebba));
        EXPECT(0xb8, gbc.readMem(0xebbb));
        // CB B8 009B
        gbc.setState(0x7074, 0x1391, 0x9bd0, 0x13e7, 0x14b6, 0x511e, 0x0, 0x0);
        gbc.writeMem(0x7074, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1391, gbc.sp());
        EXPECT(0x7076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 009C
        gbc.setState(0x7eb4, 0x8d27, 0x57d0, 0x13cf, 0xc77b, 0x86dc, 0x1, 0x0);
        gbc.writeMem(0x7eb4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x8d27, gbc.sp());
        EXPECT(0x7eb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 009D
        gbc.setState(0x3a5, 0xfb7, 0x9620, 0x1a7b, 0xab6d, 0xa3c7, 0x0, 0x1);
        gbc.writeMem(0x3a5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfb7, gbc.sp());
        EXPECT(0x3a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 009E
        gbc.setState(0x5f3, 0x652b, 0x9d0, 0x5f2c, 0x1221, 0xb44d, 0x1, 0x0);
        gbc.writeMem(0x5f3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x652b, gbc.sp());
        EXPECT(0x5f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 009F
        gbc.setState(0x2457, 0xf494, 0xa2f0, 0x7a10, 0x7bf, 0x93a9, 0x0, 0x0);
        gbc.writeMem(0x2457, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf494, gbc.sp());
        EXPECT(0x2459, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00A0
        gbc.setState(0x753d, 0x4c9b, 0x25d0, 0x13a9, 0xa0c5, 0x84a5, 0x0, 0x1);
        gbc.writeMem(0x753d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4c9b, gbc.sp());
        EXPECT(0x753f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00A1
        gbc.setState(0x5ff3, 0x8bdb, 0xdc30, 0x4624, 0x512a, 0x2190, 0x0, 0x1);
        gbc.writeMem(0x5ff3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8bdb, gbc.sp());
        EXPECT(0x5ff5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00A2
        gbc.setState(0x4ec4, 0x8a1, 0x4430, 0x21a4, 0x2dc6, 0x1dde, 0x1, 0x0);
        gbc.writeMem(0x4ec4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8a1, gbc.sp());
        EXPECT(0x4ec6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00A3
        gbc.setState(0xccc5, 0xecbd, 0x76c0, 0x34ba, 0xb9ea, 0x945c, 0x0, 0x1);
        gbc.writeMem(0xccc5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xecbd, gbc.sp());
        EXPECT(0xccc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc5));
        EXPECT(0xb8, gbc.readMem(0xccc6));
        // CB B8 00A4
        gbc.setState(0x22dd, 0xb9e6, 0x17e0, 0x3e83, 0x4597, 0x336a, 0x0, 0x1);
        gbc.writeMem(0x22dd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb9e6, gbc.sp());
        EXPECT(0x22df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00A5
        gbc.setState(0xd0f7, 0x50b6, 0xc2d0, 0xa47, 0xe4f3, 0x51be, 0x1, 0x0);
        gbc.writeMem(0xd0f7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x50b6, gbc.sp());
        EXPECT(0xd0f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f7));
        EXPECT(0xb8, gbc.readMem(0xd0f8));
        // CB B8 00A6
        gbc.setState(0x350b, 0x38b9, 0x6e50, 0xed5e, 0x9161, 0xf226, 0x0, 0x1);
        gbc.writeMem(0x350b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x38b9, gbc.sp());
        EXPECT(0x350d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00A7
        gbc.setState(0xab09, 0x5a91, 0x3e70, 0xfc3f, 0x47c4, 0x8fd6, 0x1, 0x0);
        gbc.writeMem(0xab09, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x5a91, gbc.sp());
        EXPECT(0xab0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab09));
        EXPECT(0xb8, gbc.readMem(0xab0a));
        // CB B8 00A8
        gbc.setState(0x280c, 0xb264, 0xc1a0, 0xbcff, 0xbbc5, 0xe58, 0x0, 0x1);
        gbc.writeMem(0x280c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb264, gbc.sp());
        EXPECT(0x280e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00AA
        gbc.setState(0x8244, 0x36f3, 0xf770, 0xb214, 0x83e3, 0x8a2, 0x1, 0x0);
        gbc.writeMem(0x8244, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x36f3, gbc.sp());
        EXPECT(0x8246, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8244));
        EXPECT(0xb8, gbc.readMem(0x8245));
        // CB B8 00AB
        gbc.setState(0xbbec, 0xf0c3, 0x7d60, 0xf76b, 0xabd6, 0xa291, 0x0, 0x1);
        gbc.writeMem(0xbbec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xf0c3, gbc.sp());
        EXPECT(0xbbee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbec));
        EXPECT(0xb8, gbc.readMem(0xbbed));
        // CB B8 00AC
        gbc.setState(0x623a, 0xf719, 0xaf40, 0x7f90, 0x10f9, 0xd929, 0x0, 0x0);
        gbc.writeMem(0x623a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf719, gbc.sp());
        EXPECT(0x623c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00AD
        gbc.setState(0xe150, 0x380c, 0x940, 0x9126, 0x73f8, 0xd73e, 0x0, 0x1);
        gbc.writeMem(0xe150, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x380c, gbc.sp());
        EXPECT(0xe152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe150));
        EXPECT(0xb8, gbc.readMem(0xe151));
        // CB B8 00AE
        gbc.setState(0xb1c2, 0x1146, 0xa2a0, 0xab4b, 0xf2d3, 0x159d, 0x0, 0x0);
        gbc.writeMem(0xb1c2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1146, gbc.sp());
        EXPECT(0xb1c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1c2));
        EXPECT(0xb8, gbc.readMem(0xb1c3));
        // CB B8 00AF
        gbc.setState(0x8516, 0xd103, 0xf360, 0x4f78, 0x769b, 0xe75e, 0x0, 0x1);
        gbc.writeMem(0x8516, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xd103, gbc.sp());
        EXPECT(0x8518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8516));
        EXPECT(0xb8, gbc.readMem(0x8517));
        // CB B8 00B0
        gbc.setState(0xb39e, 0x4bea, 0xd6c0, 0xcaf7, 0xc53a, 0x9dbd, 0x1, 0x1);
        gbc.writeMem(0xb39e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4bea, gbc.sp());
        EXPECT(0xb3a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb39e));
        EXPECT(0xb8, gbc.readMem(0xb39f));
        // CB B8 00B2
        gbc.setState(0x3df3, 0xfb10, 0xf270, 0xbe15, 0x7543, 0xd534, 0x0, 0x0);
        gbc.writeMem(0x3df3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xfb10, gbc.sp());
        EXPECT(0x3df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00B3
        gbc.setState(0x4212, 0x883b, 0x64d0, 0xb5d2, 0x534b, 0x1b18, 0x0, 0x1);
        gbc.writeMem(0x4212, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x883b, gbc.sp());
        EXPECT(0x4214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00B4
        gbc.setState(0x6920, 0x39d1, 0xaa70, 0x1127, 0xf754, 0x3b86, 0x0, 0x1);
        gbc.writeMem(0x6920, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x39d1, gbc.sp());
        EXPECT(0x6922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00B6
        gbc.setState(0x45b0, 0x7cb4, 0xeda0, 0xd327, 0x2208, 0xf22d, 0x0, 0x0);
        gbc.writeMem(0x45b0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x7cb4, gbc.sp());
        EXPECT(0x45b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00B7
        gbc.setState(0xbd21, 0x2895, 0x8d60, 0x2400, 0xe807, 0x97d1, 0x0, 0x1);
        gbc.writeMem(0xbd21, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2895, gbc.sp());
        EXPECT(0xbd23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd21));
        EXPECT(0xb8, gbc.readMem(0xbd22));
        // CB B8 00B8
        gbc.setState(0xec08, 0x45d, 0xad60, 0xbfd, 0x58f3, 0x85a4, 0x1, 0x0);
        gbc.writeMem(0xec08, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x45d, gbc.sp());
        EXPECT(0xec0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec08));
        EXPECT(0xb8, gbc.readMem(0xec09));
        // CB B8 00B9
        gbc.setState(0x8666, 0xb1df, 0xbf20, 0xab47, 0xe6e9, 0xf812, 0x0, 0x1);
        gbc.writeMem(0x8666, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb1df, gbc.sp());
        EXPECT(0x8668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8666));
        EXPECT(0xb8, gbc.readMem(0x8667));
        // CB B8 00BA
        gbc.setState(0x8db7, 0x8309, 0x2820, 0x2ac8, 0x1101, 0x908e, 0x1, 0x0);
        gbc.writeMem(0x8db7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8309, gbc.sp());
        EXPECT(0x8db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8db7));
        EXPECT(0xb8, gbc.readMem(0x8db8));
        // CB B8 00BC
        gbc.setState(0x6af3, 0xaa90, 0xc360, 0x75a7, 0xf023, 0x2683, 0x1, 0x0);
        gbc.writeMem(0x6af3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xaa90, gbc.sp());
        EXPECT(0x6af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00BD
        gbc.setState(0xe42f, 0xe367, 0xe080, 0xd7fb, 0xe7bd, 0x7b98, 0x0, 0x0);
        gbc.writeMem(0xe42f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe367, gbc.sp());
        EXPECT(0xe431, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe42f));
        EXPECT(0xb8, gbc.readMem(0xe430));
        // CB B8 00BE
        gbc.setState(0x24f2, 0xb671, 0xc930, 0x5e43, 0x18fb, 0x227d, 0x1, 0x1);
        gbc.writeMem(0x24f2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xb671, gbc.sp());
        EXPECT(0x24f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00BF
        gbc.setState(0x40bd, 0xbeff, 0x5930, 0x76b, 0x498d, 0x2d04, 0x0, 0x0);
        gbc.writeMem(0x40bd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xbeff, gbc.sp());
        EXPECT(0x40bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00C0
        gbc.setState(0x5b55, 0xb58b, 0x5560, 0xf7dc, 0x7cab, 0x2b5, 0x0, 0x0);
        gbc.writeMem(0x5b55, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb58b, gbc.sp());
        EXPECT(0x5b57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00C1
        gbc.setState(0x72ed, 0xe427, 0xee80, 0xa13d, 0x54f5, 0xd2c3, 0x1, 0x0);
        gbc.writeMem(0x72ed, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xe427, gbc.sp());
        EXPECT(0x72ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00C2
        gbc.setState(0x3795, 0xd051, 0xb1f0, 0xbc76, 0xfca1, 0x1508, 0x0, 0x0);
        gbc.writeMem(0x3795, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd051, gbc.sp());
        EXPECT(0x3797, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00C3
        gbc.setState(0xbd0f, 0xd0de, 0xad80, 0x7c37, 0x7f0c, 0xbc73, 0x0, 0x0);
        gbc.writeMem(0xbd0f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd0de, gbc.sp());
        EXPECT(0xbd11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd0f));
        EXPECT(0xb8, gbc.readMem(0xbd10));
        // CB B8 00C4
        gbc.setState(0x5ad1, 0x21cb, 0xd380, 0x5789, 0x67e4, 0x64ca, 0x1, 0x1);
        gbc.writeMem(0x5ad1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x21cb, gbc.sp());
        EXPECT(0x5ad3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00C5
        gbc.setState(0xa7e9, 0x96, 0x3370, 0xf82, 0xcf26, 0x5579, 0x1, 0x0);
        gbc.writeMem(0xa7e9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x96, gbc.sp());
        EXPECT(0xa7eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7e9));
        EXPECT(0xb8, gbc.readMem(0xa7ea));
        // CB B8 00C6
        gbc.setState(0xb3f1, 0xc3ba, 0x49f0, 0x61f3, 0xf5a8, 0x89d5, 0x0, 0x1);
        gbc.writeMem(0xb3f1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xc3ba, gbc.sp());
        EXPECT(0xb3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3f1));
        EXPECT(0xb8, gbc.readMem(0xb3f2));
        // CB B8 00C7
        gbc.setState(0x77e2, 0xa1b6, 0xc880, 0xabc, 0x4280, 0xe03f, 0x0, 0x1);
        gbc.writeMem(0x77e2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xa1b6, gbc.sp());
        EXPECT(0x77e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00C8
        gbc.setState(0x340e, 0x346a, 0xc1a0, 0xbb38, 0x3d81, 0x5da9, 0x1, 0x0);
        gbc.writeMem(0x340e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x346a, gbc.sp());
        EXPECT(0x3410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00C9
        gbc.setState(0xeed7, 0x598, 0x8500, 0x8fc8, 0x7073, 0xc7cc, 0x1, 0x0);
        gbc.writeMem(0xeed7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x598, gbc.sp());
        EXPECT(0xeed9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeed7));
        EXPECT(0xb8, gbc.readMem(0xeed8));
        // CB B8 00CA
        gbc.setState(0xaddb, 0xc7c, 0xb470, 0x11bd, 0xaae8, 0xe35, 0x1, 0x1);
        gbc.writeMem(0xaddb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc7c, gbc.sp());
        EXPECT(0xaddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddb));
        EXPECT(0xb8, gbc.readMem(0xaddc));
        // CB B8 00CB
        gbc.setState(0x9f60, 0x6159, 0x9260, 0x9943, 0x58ec, 0x79ad, 0x1, 0x1);
        gbc.writeMem(0x9f60, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6159, gbc.sp());
        EXPECT(0x9f62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f60));
        EXPECT(0xb8, gbc.readMem(0x9f61));
        // CB B8 00CC
        gbc.setState(0x1fa9, 0x3ac2, 0x1e60, 0xd938, 0x687e, 0xe7e1, 0x1, 0x1);
        gbc.writeMem(0x1fa9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3ac2, gbc.sp());
        EXPECT(0x1fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00CD
        gbc.setState(0xb7d8, 0x208c, 0xa590, 0xdb8c, 0x94d7, 0xc94b, 0x1, 0x0);
        gbc.writeMem(0xb7d8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x208c, gbc.sp());
        EXPECT(0xb7da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d8));
        EXPECT(0xb8, gbc.readMem(0xb7d9));
        // CB B8 00CE
        gbc.setState(0x2434, 0xb74b, 0xdd40, 0x3a6d, 0x100e, 0x5bd1, 0x0, 0x0);
        gbc.writeMem(0x2434, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xb74b, gbc.sp());
        EXPECT(0x2436, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00CF
        gbc.setState(0xbdf5, 0xa05e, 0x950, 0xff5, 0x2ac2, 0xbeb0, 0x1, 0x0);
        gbc.writeMem(0xbdf5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa05e, gbc.sp());
        EXPECT(0xbdf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdf5));
        EXPECT(0xb8, gbc.readMem(0xbdf6));
        // CB B8 00D0
        gbc.setState(0x64d7, 0xd014, 0x4f30, 0xbcbe, 0xf8b4, 0x658a, 0x1, 0x0);
        gbc.writeMem(0x64d7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xd014, gbc.sp());
        EXPECT(0x64d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00D1
        gbc.setState(0xd82f, 0xb204, 0x9320, 0xd924, 0x6a9, 0x98b9, 0x0, 0x0);
        gbc.writeMem(0xd82f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb204, gbc.sp());
        EXPECT(0xd831, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd82f));
        EXPECT(0xb8, gbc.readMem(0xd830));
        // CB B8 00D2
        gbc.setState(0x2c1b, 0xe27d, 0x7840, 0x50b8, 0x44b, 0xe8cb, 0x0, 0x1);
        gbc.writeMem(0x2c1b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe27d, gbc.sp());
        EXPECT(0x2c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00D3
        gbc.setState(0x8691, 0x6fe4, 0xeb20, 0x2734, 0x44bc, 0x3475, 0x0, 0x0);
        gbc.writeMem(0x8691, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x6fe4, gbc.sp());
        EXPECT(0x8693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8691));
        EXPECT(0xb8, gbc.readMem(0x8692));
        // CB B8 00D4
        gbc.setState(0xa889, 0xb1aa, 0xe40, 0x77d7, 0x544a, 0x7729, 0x0, 0x1);
        gbc.writeMem(0xa889, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb1aa, gbc.sp());
        EXPECT(0xa88b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa889));
        EXPECT(0xb8, gbc.readMem(0xa88a));
        // CB B8 00D5
        gbc.setState(0xefcb, 0x586, 0xd470, 0x95f6, 0x2284, 0x8b3f, 0x0, 0x1);
        gbc.writeMem(0xefcb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x586, gbc.sp());
        EXPECT(0xefcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefcb));
        EXPECT(0xb8, gbc.readMem(0xefcc));
        // CB B8 00D6
        gbc.setState(0x25d6, 0x8bdc, 0x33f0, 0xeeab, 0xfc11, 0x1b6b, 0x0, 0x1);
        gbc.writeMem(0x25d6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x8bdc, gbc.sp());
        EXPECT(0x25d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00D7
        gbc.setState(0x92ba, 0x209f, 0xcab0, 0xa1d3, 0x2f4d, 0x7c24, 0x1, 0x0);
        gbc.writeMem(0x92ba, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x209f, gbc.sp());
        EXPECT(0x92bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ba));
        EXPECT(0xb8, gbc.readMem(0x92bb));
        // CB B8 00D8
        gbc.setState(0x3fd1, 0x4f67, 0x5740, 0xe5f6, 0xf87, 0x54b7, 0x1, 0x0);
        gbc.writeMem(0x3fd1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4f67, gbc.sp());
        EXPECT(0x3fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00D9
        gbc.setState(0x423, 0x3572, 0x77f0, 0xc67b, 0x2fd5, 0xfbdc, 0x1, 0x1);
        gbc.writeMem(0x423, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3572, gbc.sp());
        EXPECT(0x425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00DA
        gbc.setState(0x9036, 0x9faf, 0xf6f0, 0x921a, 0x4c58, 0x4629, 0x0, 0x1);
        gbc.writeMem(0x9036, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9faf, gbc.sp());
        EXPECT(0x9038, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9036));
        EXPECT(0xb8, gbc.readMem(0x9037));
        // CB B8 00DB
        gbc.setState(0x685a, 0x102a, 0x2700, 0xf721, 0x3078, 0x7112, 0x1, 0x0);
        gbc.writeMem(0x685a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x102a, gbc.sp());
        EXPECT(0x685c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00DC
        gbc.setState(0xb215, 0xade5, 0xdff0, 0x5b29, 0xa836, 0x7ada, 0x1, 0x0);
        gbc.writeMem(0xb215, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xade5, gbc.sp());
        EXPECT(0xb217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb215));
        EXPECT(0xb8, gbc.readMem(0xb216));
        // CB B8 00DD
        gbc.setState(0x596c, 0xaad2, 0x480, 0x602, 0xe3a5, 0x9755, 0x1, 0x1);
        gbc.writeMem(0x596c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xaad2, gbc.sp());
        EXPECT(0x596e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00DE
        gbc.setState(0xb0e9, 0x9335, 0xb430, 0xd468, 0x5e16, 0xcf6e, 0x0, 0x0);
        gbc.writeMem(0xb0e9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9335, gbc.sp());
        EXPECT(0xb0eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e9));
        EXPECT(0xb8, gbc.readMem(0xb0ea));
        // CB B8 00DF
        gbc.setState(0x5fa5, 0x9bca, 0x8220, 0x7b94, 0x27d3, 0xde05, 0x1, 0x0);
        gbc.writeMem(0x5fa5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9bca, gbc.sp());
        EXPECT(0x5fa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00E0
        gbc.setState(0xd7b5, 0xb14b, 0xdf80, 0x65e3, 0x85a, 0xccd7, 0x0, 0x1);
        gbc.writeMem(0xd7b5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb14b, gbc.sp());
        EXPECT(0xd7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7b5));
        EXPECT(0xb8, gbc.readMem(0xd7b6));
        // CB B8 00E1
        gbc.setState(0xbb7c, 0x8a64, 0x8d0, 0x4f7, 0xfc33, 0x7b00, 0x0, 0x0);
        gbc.writeMem(0xbb7c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8a64, gbc.sp());
        EXPECT(0xbb7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb7c));
        EXPECT(0xb8, gbc.readMem(0xbb7d));
        // CB B8 00E2
        gbc.setState(0x93e5, 0x4407, 0x72a0, 0xa71d, 0xae4c, 0xeb50, 0x1, 0x1);
        gbc.writeMem(0x93e5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4407, gbc.sp());
        EXPECT(0x93e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e5));
        EXPECT(0xb8, gbc.readMem(0x93e6));
        // CB B8 00E3
        gbc.setState(0xc351, 0x94ba, 0xa850, 0xb225, 0xdc63, 0xa9f0, 0x0, 0x1);
        gbc.writeMem(0xc351, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x94ba, gbc.sp());
        EXPECT(0xc353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc351));
        EXPECT(0xb8, gbc.readMem(0xc352));
        // CB B8 00E4
        gbc.setState(0xe230, 0x8140, 0x40e0, 0x8106, 0x975c, 0xccb1, 0x0, 0x1);
        gbc.writeMem(0xe230, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8140, gbc.sp());
        EXPECT(0xe232, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe230));
        EXPECT(0xb8, gbc.readMem(0xe231));
        // CB B8 00E5
        gbc.setState(0x1c37, 0x4153, 0xd630, 0x23ea, 0xa9f4, 0xf3fa, 0x1, 0x1);
        gbc.writeMem(0x1c37, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4153, gbc.sp());
        EXPECT(0x1c39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00E6
        gbc.setState(0x3958, 0x2dc1, 0x7820, 0x556d, 0xcd43, 0xeef4, 0x1, 0x0);
        gbc.writeMem(0x3958, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2dc1, gbc.sp());
        EXPECT(0x395a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00E7
        gbc.setState(0x506c, 0x6506, 0x2d0, 0x6c9d, 0xb333, 0xa19c, 0x1, 0x1);
        gbc.writeMem(0x506c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6506, gbc.sp());
        EXPECT(0x506e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00E8
        gbc.setState(0xb182, 0xed47, 0x14a0, 0x8633, 0xabc4, 0x37df, 0x1, 0x0);
        gbc.writeMem(0xb182, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xed47, gbc.sp());
        EXPECT(0xb184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb182));
        EXPECT(0xb8, gbc.readMem(0xb183));
        // CB B8 00E9
        gbc.setState(0x4014, 0x9bf0, 0x6e70, 0x8acc, 0xba47, 0xfa4d, 0x1, 0x1);
        gbc.writeMem(0x4014, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9bf0, gbc.sp());
        EXPECT(0x4016, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00EA
        gbc.setState(0xbe0d, 0xafa4, 0x7e40, 0xeb9c, 0xc1c8, 0xac49, 0x1, 0x0);
        gbc.writeMem(0xbe0d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xafa4, gbc.sp());
        EXPECT(0xbe0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe0d));
        EXPECT(0xb8, gbc.readMem(0xbe0e));
        // CB B8 00EC
        gbc.setState(0x1b65, 0x5728, 0xbd90, 0x898a, 0xe350, 0xc18d, 0x0, 0x0);
        gbc.writeMem(0x1b65, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5728, gbc.sp());
        EXPECT(0x1b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00ED
        gbc.setState(0x605b, 0x771a, 0xef0, 0x2b3d, 0x603a, 0xf3cb, 0x1, 0x1);
        gbc.writeMem(0x605b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x771a, gbc.sp());
        EXPECT(0x605d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00EE
        gbc.setState(0xe80c, 0x4efb, 0x3970, 0x74c0, 0xbdc0, 0xd5b4, 0x1, 0x0);
        gbc.writeMem(0xe80c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4efb, gbc.sp());
        EXPECT(0xe80e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe80c));
        EXPECT(0xb8, gbc.readMem(0xe80d));
        // CB B8 00EF
        gbc.setState(0x68fb, 0x265, 0xb1d0, 0xde62, 0x6c01, 0x175e, 0x0, 0x1);
        gbc.writeMem(0x68fb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x265, gbc.sp());
        EXPECT(0x68fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 00F0
        gbc.setState(0xd3ae, 0xb38b, 0xaca0, 0x97d0, 0xdc7e, 0xc366, 0x1, 0x0);
        gbc.writeMem(0xd3ae, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb38b, gbc.sp());
        EXPECT(0xd3b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ae));
        EXPECT(0xb8, gbc.readMem(0xd3af));
        // CB B8 00F1
        gbc.setState(0xdbca, 0xded0, 0xa5e0, 0xccae, 0x7af9, 0x497c, 0x0, 0x0);
        gbc.writeMem(0xdbca, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xded0, gbc.sp());
        EXPECT(0xdbcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbca));
        EXPECT(0xb8, gbc.readMem(0xdbcb));
        // CB B8 00F2
        gbc.setState(0xc7b4, 0x211c, 0x980, 0x260a, 0x3acc, 0x20d2, 0x1, 0x0);
        gbc.writeMem(0xc7b4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x211c, gbc.sp());
        EXPECT(0xc7b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7b4));
        EXPECT(0xb8, gbc.readMem(0xc7b5));
        // CB B8 00F3
        gbc.setState(0xb05, 0x6b00, 0xd4c0, 0x4c28, 0x3af9, 0x2777, 0x0, 0x1);
        gbc.writeMem(0xb05, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6b00, gbc.sp());
        EXPECT(0xb07, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00F5
        gbc.setState(0xb906, 0xcf04, 0xd0e0, 0x6afb, 0xc8ca, 0x390d, 0x1, 0x0);
        gbc.writeMem(0xb906, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcf04, gbc.sp());
        EXPECT(0xb908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb906));
        EXPECT(0xb8, gbc.readMem(0xb907));
        // CB B8 00F6
        gbc.setState(0xbf5f, 0xb2dd, 0x2900, 0xf44a, 0x65ab, 0xa767, 0x0, 0x1);
        gbc.writeMem(0xbf5f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xb2dd, gbc.sp());
        EXPECT(0xbf61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf5f));
        EXPECT(0xb8, gbc.readMem(0xbf60));
        // CB B8 00F7
        gbc.setState(0x3df6, 0x1ff4, 0xf9c0, 0x6210, 0x76b2, 0xa70f, 0x1, 0x1);
        gbc.writeMem(0x3df6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x1ff4, gbc.sp());
        EXPECT(0x3df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00F8
        gbc.setState(0x9a81, 0xb0ab, 0xc310, 0x3523, 0xb74a, 0x2304, 0x1, 0x1);
        gbc.writeMem(0x9a81, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb0ab, gbc.sp());
        EXPECT(0x9a83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a81));
        EXPECT(0xb8, gbc.readMem(0x9a82));
        // CB B8 00F9
        gbc.setState(0x9b97, 0x4a45, 0x6ee0, 0xa80e, 0x4f14, 0xbb95, 0x0, 0x1);
        gbc.writeMem(0x9b97, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4a45, gbc.sp());
        EXPECT(0x9b99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b97));
        EXPECT(0xb8, gbc.readMem(0x9b98));
        // CB B8 00FB
        gbc.setState(0xe74b, 0x5714, 0xa1b0, 0x476a, 0x3039, 0xca13, 0x0, 0x0);
        gbc.writeMem(0xe74b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x5714, gbc.sp());
        EXPECT(0xe74d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe74b));
        EXPECT(0xb8, gbc.readMem(0xe74c));
        // CB B8 00FC
        gbc.setState(0x2100, 0xb938, 0xfae0, 0x5449, 0xc9d9, 0x539f, 0x0, 0x1);
        gbc.writeMem(0x2100, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb938, gbc.sp());
        EXPECT(0x2102, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00FD
        gbc.setState(0xdf3f, 0x4c7b, 0x2d50, 0x70a7, 0x2091, 0xb6be, 0x1, 0x1);
        gbc.writeMem(0xdf3f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x4c7b, gbc.sp());
        EXPECT(0xdf41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf3f));
        EXPECT(0xb8, gbc.readMem(0xdf40));
        // CB B8 00FE
        gbc.setState(0x6fd4, 0xc456, 0x3320, 0xecc2, 0x45b3, 0xf7eb, 0x0, 0x1);
        gbc.writeMem(0x6fd4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc456, gbc.sp());
        EXPECT(0x6fd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 00FF
        gbc.setState(0x179d, 0xcbe9, 0xde90, 0xfb4d, 0xbec7, 0xa2d8, 0x1, 0x1);
        gbc.writeMem(0x179d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcbe9, gbc.sp());
        EXPECT(0x179f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0100
        gbc.setState(0xd21f, 0x10a1, 0xe1a0, 0xaaf5, 0x6b67, 0x7402, 0x0, 0x1);
        gbc.writeMem(0xd21f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x10a1, gbc.sp());
        EXPECT(0xd221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21f));
        EXPECT(0xb8, gbc.readMem(0xd220));
        // CB B8 0101
        gbc.setState(0xbb7b, 0xea2a, 0xad50, 0x9c53, 0xa6dc, 0xda3b, 0x1, 0x1);
        gbc.writeMem(0xbb7b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xea2a, gbc.sp());
        EXPECT(0xbb7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb7b));
        EXPECT(0xb8, gbc.readMem(0xbb7c));
        // CB B8 0102
        gbc.setState(0x9181, 0x6846, 0xb300, 0xda08, 0xfc9e, 0xa5f9, 0x0, 0x0);
        gbc.writeMem(0x9181, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6846, gbc.sp());
        EXPECT(0x9183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9181));
        EXPECT(0xb8, gbc.readMem(0x9182));
        // CB B8 0103
        gbc.setState(0xb4f0, 0x261c, 0xc060, 0x954e, 0x4266, 0x8b53, 0x0, 0x1);
        gbc.writeMem(0xb4f0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x261c, gbc.sp());
        EXPECT(0xb4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f0));
        EXPECT(0xb8, gbc.readMem(0xb4f1));
        // CB B8 0104
        gbc.setState(0xb344, 0xda2, 0x4220, 0xf723, 0x5973, 0x77f1, 0x1, 0x1);
        gbc.writeMem(0xb344, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xda2, gbc.sp());
        EXPECT(0xb346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb344));
        EXPECT(0xb8, gbc.readMem(0xb345));
        // CB B8 0105
        gbc.setState(0x8981, 0x10a1, 0x5e00, 0x1ea4, 0x5107, 0x6cc3, 0x1, 0x1);
        gbc.writeMem(0x8981, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x10a1, gbc.sp());
        EXPECT(0x8983, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8981));
        EXPECT(0xb8, gbc.readMem(0x8982));
        // CB B8 0106
        gbc.setState(0xd188, 0xfe4, 0xea70, 0xb9fb, 0xd9cd, 0x3981, 0x0, 0x1);
        gbc.writeMem(0xd188, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xfe4, gbc.sp());
        EXPECT(0xd18a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd188));
        EXPECT(0xb8, gbc.readMem(0xd189));
        // CB B8 0107
        gbc.setState(0xdb8, 0x87b0, 0x16c0, 0x507f, 0xaca4, 0x876a, 0x1, 0x1);
        gbc.writeMem(0xdb8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x87b0, gbc.sp());
        EXPECT(0xdba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0108
        gbc.setState(0x994d, 0x84cc, 0x12f0, 0x43b6, 0x601a, 0xba70, 0x0, 0x0);
        gbc.writeMem(0x994d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x84cc, gbc.sp());
        EXPECT(0x994f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x994d));
        EXPECT(0xb8, gbc.readMem(0x994e));
        // CB B8 0109
        gbc.setState(0x3333, 0xc55a, 0xb390, 0xab84, 0x6bdc, 0xc3fe, 0x1, 0x0);
        gbc.writeMem(0x3333, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc55a, gbc.sp());
        EXPECT(0x3335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 010A
        gbc.setState(0x7de, 0x1631, 0xe160, 0x1bd4, 0xa872, 0x9755, 0x0, 0x0);
        gbc.writeMem(0x7de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1631, gbc.sp());
        EXPECT(0x7e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 010B
        gbc.setState(0x1076, 0x8cf9, 0x7e60, 0xf634, 0x5feb, 0xff2, 0x1, 0x0);
        gbc.writeMem(0x1076, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x8cf9, gbc.sp());
        EXPECT(0x1078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 010C
        gbc.setState(0x2edd, 0xf2de, 0xfb70, 0x736c, 0xb808, 0xe775, 0x1, 0x1);
        gbc.writeMem(0x2edd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xf2de, gbc.sp());
        EXPECT(0x2edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 010D
        gbc.setState(0x1e1a, 0xf809, 0x89e0, 0x1397, 0x7e94, 0x2270, 0x0, 0x1);
        gbc.writeMem(0x1e1a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xf809, gbc.sp());
        EXPECT(0x1e1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 010E
        gbc.setState(0x7963, 0xff9b, 0x2fb0, 0x6c1b, 0x807f, 0xac59, 0x0, 0x0);
        gbc.writeMem(0x7963, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xff9b, gbc.sp());
        EXPECT(0x7965, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 010F
        gbc.setState(0xb9de, 0x9da, 0x6b20, 0x82f5, 0x5f6, 0x7455, 0x1, 0x0);
        gbc.writeMem(0xb9de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9da, gbc.sp());
        EXPECT(0xb9e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9de));
        EXPECT(0xb8, gbc.readMem(0xb9df));
        // CB B8 0110
        gbc.setState(0x27c2, 0x9433, 0xc5e0, 0x727d, 0x7eed, 0x9f5d, 0x1, 0x1);
        gbc.writeMem(0x27c2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9433, gbc.sp());
        EXPECT(0x27c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0111
        gbc.setState(0x1a20, 0x98b4, 0xe5f0, 0xc896, 0xe7d3, 0x3d16, 0x1, 0x1);
        gbc.writeMem(0x1a20, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x98b4, gbc.sp());
        EXPECT(0x1a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0112
        gbc.setState(0xa161, 0x6424, 0xd1c0, 0x5a7f, 0x2b64, 0x9ce8, 0x0, 0x1);
        gbc.writeMem(0xa161, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6424, gbc.sp());
        EXPECT(0xa163, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa161));
        EXPECT(0xb8, gbc.readMem(0xa162));
        // CB B8 0113
        gbc.setState(0x6e93, 0xbea8, 0x5e00, 0xf00a, 0xc02e, 0x2064, 0x1, 0x0);
        gbc.writeMem(0x6e93, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xbea8, gbc.sp());
        EXPECT(0x6e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0115
        gbc.setState(0xaf5c, 0xd41c, 0x1880, 0x5629, 0xa0a7, 0x1624, 0x1, 0x1);
        gbc.writeMem(0xaf5c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd41c, gbc.sp());
        EXPECT(0xaf5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5c));
        EXPECT(0xb8, gbc.readMem(0xaf5d));
        // CB B8 0116
        gbc.setState(0x63c, 0xadf3, 0xd480, 0x7e8f, 0xd5ae, 0x703a, 0x1, 0x0);
        gbc.writeMem(0x63c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xadf3, gbc.sp());
        EXPECT(0x63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0117
        gbc.setState(0xe681, 0x3b8e, 0x5690, 0x4954, 0xe995, 0xe601, 0x0, 0x0);
        gbc.writeMem(0xe681, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3b8e, gbc.sp());
        EXPECT(0xe683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe681));
        EXPECT(0xb8, gbc.readMem(0xe682));
        // CB B8 0118
        gbc.setState(0xb681, 0x9758, 0x43a0, 0x6b64, 0x8c25, 0x9690, 0x0, 0x0);
        gbc.writeMem(0xb681, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9758, gbc.sp());
        EXPECT(0xb683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb681));
        EXPECT(0xb8, gbc.readMem(0xb682));
        // CB B8 0119
        gbc.setState(0x865d, 0xb42d, 0x7d90, 0x8427, 0x894d, 0xdd54, 0x1, 0x1);
        gbc.writeMem(0x865d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb42d, gbc.sp());
        EXPECT(0x865f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x865d));
        EXPECT(0xb8, gbc.readMem(0x865e));
        // CB B8 011A
        gbc.setState(0x5e8b, 0xa981, 0x93b0, 0xea48, 0x588f, 0x6009, 0x0, 0x0);
        gbc.writeMem(0x5e8b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa981, gbc.sp());
        EXPECT(0x5e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 011B
        gbc.setState(0x3078, 0x7a47, 0x78e0, 0x6067, 0xeff4, 0x2c26, 0x0, 0x1);
        gbc.writeMem(0x3078, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7a47, gbc.sp());
        EXPECT(0x307a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 011C
        gbc.setState(0x6a98, 0x9932, 0x4eb0, 0xddf9, 0xac0f, 0x62c3, 0x0, 0x1);
        gbc.writeMem(0x6a98, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9932, gbc.sp());
        EXPECT(0x6a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 011D
        gbc.setState(0xc24e, 0x57d6, 0xa010, 0x3ed9, 0x4ce5, 0xf7e6, 0x0, 0x0);
        gbc.writeMem(0xc24e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x57d6, gbc.sp());
        EXPECT(0xc250, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc24e));
        EXPECT(0xb8, gbc.readMem(0xc24f));
        // CB B8 011E
        gbc.setState(0x1364, 0xdb69, 0x6af0, 0x64cd, 0x42dd, 0xfdbb, 0x1, 0x1);
        gbc.writeMem(0x1364, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdb69, gbc.sp());
        EXPECT(0x1366, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 011F
        gbc.setState(0xd3b1, 0xf0e8, 0x74d0, 0xe83, 0x8c55, 0x8394, 0x0, 0x0);
        gbc.writeMem(0xd3b1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf0e8, gbc.sp());
        EXPECT(0xd3b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b1));
        EXPECT(0xb8, gbc.readMem(0xd3b2));
        // CB B8 0120
        gbc.setState(0x1d6f, 0x2207, 0xedf0, 0x4a48, 0xcae4, 0xc918, 0x1, 0x0);
        gbc.writeMem(0x1d6f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2207, gbc.sp());
        EXPECT(0x1d71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0121
        gbc.setState(0xcdf3, 0xcb80, 0x5400, 0x1434, 0x5ff3, 0xf2a4, 0x1, 0x0);
        gbc.writeMem(0xcdf3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xcb80, gbc.sp());
        EXPECT(0xcdf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf3));
        EXPECT(0xb8, gbc.readMem(0xcdf4));
        // CB B8 0122
        gbc.setState(0x7bd8, 0x2354, 0xaa30, 0x8122, 0xe444, 0xc747, 0x1, 0x0);
        gbc.writeMem(0x7bd8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2354, gbc.sp());
        EXPECT(0x7bda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0123
        gbc.setState(0x4e4, 0xa5a6, 0x3ef0, 0x7173, 0x41a7, 0xaeb7, 0x0, 0x1);
        gbc.writeMem(0x4e4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xa5a6, gbc.sp());
        EXPECT(0x4e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0124
        gbc.setState(0xc18, 0x456d, 0x6960, 0x4822, 0xd4df, 0xd1bd, 0x0, 0x1);
        gbc.writeMem(0xc18, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x456d, gbc.sp());
        EXPECT(0xc1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0125
        gbc.setState(0xb58c, 0x257c, 0xadc0, 0x75d8, 0x5b29, 0x2ef2, 0x1, 0x0);
        gbc.writeMem(0xb58c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x257c, gbc.sp());
        EXPECT(0xb58e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb58c));
        EXPECT(0xb8, gbc.readMem(0xb58d));
        // CB B8 0126
        gbc.setState(0x1be4, 0x3231, 0x6260, 0x182d, 0xe003, 0xcc8, 0x0, 0x1);
        gbc.writeMem(0x1be4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x3231, gbc.sp());
        EXPECT(0x1be6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0127
        gbc.setState(0xa258, 0x2be4, 0x2f50, 0x456d, 0x1cdb, 0xb7a9, 0x1, 0x1);
        gbc.writeMem(0xa258, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2be4, gbc.sp());
        EXPECT(0xa25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa258));
        EXPECT(0xb8, gbc.readMem(0xa259));
        // CB B8 0128
        gbc.setState(0xd386, 0xb824, 0x2710, 0xfb10, 0x5e9c, 0x2a57, 0x0, 0x0);
        gbc.writeMem(0xd386, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xb824, gbc.sp());
        EXPECT(0xd388, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd386));
        EXPECT(0xb8, gbc.readMem(0xd387));
        // CB B8 0129
        gbc.setState(0x49ae, 0x6252, 0x310, 0xd9cd, 0x55e8, 0x8755, 0x0, 0x0);
        gbc.writeMem(0x49ae, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6252, gbc.sp());
        EXPECT(0x49b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 012A
        gbc.setState(0xcbb5, 0x808f, 0xabc0, 0x3022, 0x60c7, 0xedf3, 0x1, 0x1);
        gbc.writeMem(0xcbb5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x808f, gbc.sp());
        EXPECT(0xcbb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb5));
        EXPECT(0xb8, gbc.readMem(0xcbb6));
        // CB B8 012B
        gbc.setState(0xa332, 0x6864, 0xd2f0, 0x4b88, 0xa6bf, 0x94f7, 0x0, 0x1);
        gbc.writeMem(0xa332, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6864, gbc.sp());
        EXPECT(0xa334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa332));
        EXPECT(0xb8, gbc.readMem(0xa333));
        // CB B8 012C
        gbc.setState(0x5df4, 0x160, 0x2d60, 0xc790, 0xc11b, 0x59ff, 0x0, 0x1);
        gbc.writeMem(0x5df4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x160, gbc.sp());
        EXPECT(0x5df6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 012E
        gbc.setState(0xa5b7, 0x80f, 0x4f80, 0xca45, 0x9efe, 0xf99d, 0x1, 0x0);
        gbc.writeMem(0xa5b7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x80f, gbc.sp());
        EXPECT(0xa5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5b7));
        EXPECT(0xb8, gbc.readMem(0xa5b8));
        // CB B8 012F
        gbc.setState(0xa4a0, 0x5705, 0x9c40, 0x84d4, 0x36d5, 0x9ecb, 0x1, 0x1);
        gbc.writeMem(0xa4a0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5705, gbc.sp());
        EXPECT(0xa4a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4a0));
        EXPECT(0xb8, gbc.readMem(0xa4a1));
        // CB B8 0130
        gbc.setState(0xd268, 0x8a41, 0x36e0, 0x86dc, 0x2036, 0x57b9, 0x0, 0x0);
        gbc.writeMem(0xd268, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8a41, gbc.sp());
        EXPECT(0xd26a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd268));
        EXPECT(0xb8, gbc.readMem(0xd269));
        // CB B8 0131
        gbc.setState(0xa346, 0xcca5, 0x5800, 0x937c, 0xa3ca, 0x9959, 0x1, 0x0);
        gbc.writeMem(0xa346, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcca5, gbc.sp());
        EXPECT(0xa348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa346));
        EXPECT(0xb8, gbc.readMem(0xa347));
        // CB B8 0132
        gbc.setState(0x22a8, 0x4c96, 0x5170, 0xb15d, 0x811a, 0x20dd, 0x1, 0x0);
        gbc.writeMem(0x22a8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4c96, gbc.sp());
        EXPECT(0x22aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0133
        gbc.setState(0x5227, 0xd406, 0x1ac0, 0xadf5, 0xec86, 0xd1fa, 0x1, 0x1);
        gbc.writeMem(0x5227, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd406, gbc.sp());
        EXPECT(0x5229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0134
        gbc.setState(0xa834, 0xa1e7, 0x4970, 0xc8df, 0x9d7c, 0xedb2, 0x0, 0x0);
        gbc.writeMem(0xa834, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa1e7, gbc.sp());
        EXPECT(0xa836, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa834));
        EXPECT(0xb8, gbc.readMem(0xa835));
        // CB B8 0136
        gbc.setState(0xabc2, 0xc4e, 0x1150, 0x60d2, 0x21fc, 0xb117, 0x0, 0x1);
        gbc.writeMem(0xabc2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xc4e, gbc.sp());
        EXPECT(0xabc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabc2));
        EXPECT(0xb8, gbc.readMem(0xabc3));
        // CB B8 0137
        gbc.setState(0xd6fc, 0x1cee, 0x8800, 0xf146, 0xcb23, 0xe196, 0x0, 0x0);
        gbc.writeMem(0xd6fc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1cee, gbc.sp());
        EXPECT(0xd6fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fc));
        EXPECT(0xb8, gbc.readMem(0xd6fd));
        // CB B8 0139
        gbc.setState(0xef8, 0xfcec, 0x68a0, 0x9969, 0x97c8, 0x4e56, 0x0, 0x1);
        gbc.writeMem(0xef8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xfcec, gbc.sp());
        EXPECT(0xefa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 013A
        gbc.setState(0x38de, 0x44ff, 0x5cc0, 0x3b7a, 0x7c7b, 0x1efd, 0x1, 0x1);
        gbc.writeMem(0x38de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x44ff, gbc.sp());
        EXPECT(0x38e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 013C
        gbc.setState(0x9b05, 0xf7b7, 0x19f0, 0xa214, 0x8927, 0xeaba, 0x1, 0x0);
        gbc.writeMem(0x9b05, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xf7b7, gbc.sp());
        EXPECT(0x9b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b05));
        EXPECT(0xb8, gbc.readMem(0x9b06));
        // CB B8 013D
        gbc.setState(0x97de, 0x7ab5, 0xf880, 0x5b7a, 0xf269, 0xca17, 0x1, 0x1);
        gbc.writeMem(0x97de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7ab5, gbc.sp());
        EXPECT(0x97e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97de));
        EXPECT(0xb8, gbc.readMem(0x97df));
        // CB B8 013E
        gbc.setState(0x7f16, 0x986e, 0x6680, 0x76bf, 0xc47a, 0xedb7, 0x1, 0x1);
        gbc.writeMem(0x7f16, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x986e, gbc.sp());
        EXPECT(0x7f18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 013F
        gbc.setState(0x8fb2, 0x757b, 0x6ae0, 0x865d, 0x831e, 0xdb6d, 0x1, 0x1);
        gbc.writeMem(0x8fb2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x757b, gbc.sp());
        EXPECT(0x8fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8fb2));
        EXPECT(0xb8, gbc.readMem(0x8fb3));
        // CB B8 0140
        gbc.setState(0x789b, 0x908b, 0xf7a0, 0x2899, 0x6187, 0x4237, 0x0, 0x1);
        gbc.writeMem(0x789b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x908b, gbc.sp());
        EXPECT(0x789d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0141
        gbc.setState(0x80a4, 0x4d9c, 0x2e40, 0x95bf, 0xf153, 0x8210, 0x0, 0x0);
        gbc.writeMem(0x80a4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x4d9c, gbc.sp());
        EXPECT(0x80a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a4));
        EXPECT(0xb8, gbc.readMem(0x80a5));
        // CB B8 0142
        gbc.setState(0x1d17, 0x2489, 0xbaf0, 0x7ce1, 0x7726, 0x7b43, 0x0, 0x0);
        gbc.writeMem(0x1d17, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2489, gbc.sp());
        EXPECT(0x1d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0143
        gbc.setState(0xde6f, 0x26bf, 0xbd10, 0x9beb, 0xb334, 0x815a, 0x0, 0x1);
        gbc.writeMem(0xde6f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x26bf, gbc.sp());
        EXPECT(0xde71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde6f));
        EXPECT(0xb8, gbc.readMem(0xde70));
        // CB B8 0144
        gbc.setState(0xb80, 0x694b, 0xe440, 0x3314, 0x7714, 0xb528, 0x0, 0x1);
        gbc.writeMem(0xb80, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x694b, gbc.sp());
        EXPECT(0xb82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0146
        gbc.setState(0xa1b2, 0xda3f, 0xa7f0, 0x3372, 0x28a5, 0xf8f6, 0x1, 0x0);
        gbc.writeMem(0xa1b2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xda3f, gbc.sp());
        EXPECT(0xa1b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1b2));
        EXPECT(0xb8, gbc.readMem(0xa1b3));
        // CB B8 0147
        gbc.setState(0xc826, 0xf45b, 0xf440, 0x7079, 0x2ca0, 0xdd7d, 0x1, 0x1);
        gbc.writeMem(0xc826, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf45b, gbc.sp());
        EXPECT(0xc828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc826));
        EXPECT(0xb8, gbc.readMem(0xc827));
        // CB B8 0148
        gbc.setState(0x54e0, 0x9ac7, 0xb750, 0x8ec0, 0xb064, 0x22da, 0x1, 0x1);
        gbc.writeMem(0x54e0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9ac7, gbc.sp());
        EXPECT(0x54e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0149
        gbc.setState(0x143a, 0x4cdd, 0xf410, 0x5c0e, 0x6d5, 0x8cb6, 0x0, 0x1);
        gbc.writeMem(0x143a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4cdd, gbc.sp());
        EXPECT(0x143c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 014A
        gbc.setState(0xe427, 0x31fd, 0xbcd0, 0x1959, 0xeba4, 0xb443, 0x0, 0x0);
        gbc.writeMem(0xe427, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x31fd, gbc.sp());
        EXPECT(0xe429, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe427));
        EXPECT(0xb8, gbc.readMem(0xe428));
        // CB B8 014B
        gbc.setState(0x9449, 0xd24a, 0xf440, 0xa0c1, 0xe550, 0x512c, 0x0, 0x0);
        gbc.writeMem(0x9449, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd24a, gbc.sp());
        EXPECT(0x944b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9449));
        EXPECT(0xb8, gbc.readMem(0x944a));
        // CB B8 014C
        gbc.setState(0xd5b9, 0x33a3, 0x1ea0, 0x7d5e, 0xe84a, 0x9a65, 0x1, 0x0);
        gbc.writeMem(0xd5b9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x33a3, gbc.sp());
        EXPECT(0xd5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5b9));
        EXPECT(0xb8, gbc.readMem(0xd5ba));
        // CB B8 014D
        gbc.setState(0x9b0d, 0x218a, 0xc5e0, 0x8b09, 0xcd7e, 0x9fc2, 0x0, 0x1);
        gbc.writeMem(0x9b0d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x218a, gbc.sp());
        EXPECT(0x9b0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0d));
        EXPECT(0xb8, gbc.readMem(0x9b0e));
        // CB B8 014E
        gbc.setState(0x7b0e, 0x1bcd, 0x5760, 0x3e3d, 0x7dc5, 0x63c6, 0x1, 0x0);
        gbc.writeMem(0x7b0e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1bcd, gbc.sp());
        EXPECT(0x7b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 014F
        gbc.setState(0xcc7d, 0x6809, 0x8660, 0x79a6, 0x4370, 0xd70c, 0x0, 0x1);
        gbc.writeMem(0xcc7d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x6809, gbc.sp());
        EXPECT(0xcc7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc7d));
        EXPECT(0xb8, gbc.readMem(0xcc7e));
        // CB B8 0151
        gbc.setState(0x704d, 0xed00, 0xe80, 0xbab4, 0xdcb, 0x15a5, 0x0, 0x1);
        gbc.writeMem(0x704d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xed00, gbc.sp());
        EXPECT(0x704f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0152
        gbc.setState(0xbcf4, 0x4f16, 0x5ba0, 0xf7a, 0xfbb9, 0x6d5c, 0x0, 0x0);
        gbc.writeMem(0xbcf4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4f16, gbc.sp());
        EXPECT(0xbcf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcf4));
        EXPECT(0xb8, gbc.readMem(0xbcf5));
        // CB B8 0153
        gbc.setState(0x8bcb, 0xaf76, 0x81f0, 0x4f93, 0x7b6, 0xc038, 0x0, 0x0);
        gbc.writeMem(0x8bcb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xaf76, gbc.sp());
        EXPECT(0x8bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bcb));
        EXPECT(0xb8, gbc.readMem(0x8bcc));
        // CB B8 0154
        gbc.setState(0x6606, 0x2bd1, 0xd700, 0xce0, 0x223, 0xbfa7, 0x0, 0x1);
        gbc.writeMem(0x6606, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2bd1, gbc.sp());
        EXPECT(0x6608, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0155
        gbc.setState(0x416c, 0x71d2, 0xd990, 0xb043, 0x3b2, 0x2986, 0x0, 0x0);
        gbc.writeMem(0x416c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x71d2, gbc.sp());
        EXPECT(0x416e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0156
        gbc.setState(0x96ae, 0x939f, 0x7200, 0xdc42, 0x8db8, 0x63cd, 0x1, 0x1);
        gbc.writeMem(0x96ae, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x939f, gbc.sp());
        EXPECT(0x96b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ae));
        EXPECT(0xb8, gbc.readMem(0x96af));
        // CB B8 0158
        gbc.setState(0xb8a9, 0x6f88, 0xb710, 0x27f1, 0x7461, 0xf473, 0x0, 0x1);
        gbc.writeMem(0xb8a9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6f88, gbc.sp());
        EXPECT(0xb8ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8a9));
        EXPECT(0xb8, gbc.readMem(0xb8aa));
        // CB B8 0159
        gbc.setState(0x6087, 0x7e8a, 0x1840, 0x1e70, 0x357b, 0xab0d, 0x0, 0x1);
        gbc.writeMem(0x6087, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7e8a, gbc.sp());
        EXPECT(0x6089, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 015A
        gbc.setState(0xad69, 0x4ac5, 0x9e10, 0xfde2, 0xbac1, 0xad69, 0x0, 0x1);
        gbc.writeMem(0xad69, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4ac5, gbc.sp());
        EXPECT(0xad6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad69));
        EXPECT(0xb8, gbc.readMem(0xad6a));
        // CB B8 015B
        gbc.setState(0x8ba9, 0x9e0f, 0x1820, 0x81a9, 0x3055, 0x5428, 0x1, 0x0);
        gbc.writeMem(0x8ba9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9e0f, gbc.sp());
        EXPECT(0x8bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ba9));
        EXPECT(0xb8, gbc.readMem(0x8baa));
        // CB B8 015C
        gbc.setState(0xe122, 0x7a6, 0x6930, 0x1f06, 0xb217, 0x6fb5, 0x0, 0x0);
        gbc.writeMem(0xe122, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7a6, gbc.sp());
        EXPECT(0xe124, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe122));
        EXPECT(0xb8, gbc.readMem(0xe123));
        // CB B8 015D
        gbc.setState(0xac88, 0x5c12, 0xec40, 0xceb0, 0x4037, 0xc2db, 0x0, 0x1);
        gbc.writeMem(0xac88, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5c12, gbc.sp());
        EXPECT(0xac8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac88));
        EXPECT(0xb8, gbc.readMem(0xac89));
        // CB B8 015E
        gbc.setState(0x8218, 0x131b, 0xbbb0, 0xb0e7, 0x3fd, 0xe47b, 0x1, 0x1);
        gbc.writeMem(0x8218, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x131b, gbc.sp());
        EXPECT(0x821a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8218));
        EXPECT(0xb8, gbc.readMem(0x8219));
        // CB B8 015F
        gbc.setState(0x5d4a, 0x449e, 0x60e0, 0x9cbc, 0x3b6, 0x4ff, 0x0, 0x0);
        gbc.writeMem(0x5d4a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x449e, gbc.sp());
        EXPECT(0x5d4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0160
        gbc.setState(0xc0ac, 0xac68, 0xfb80, 0x9fa2, 0x4008, 0xfbcd, 0x1, 0x0);
        gbc.writeMem(0xc0ac, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xac68, gbc.sp());
        EXPECT(0xc0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ac));
        EXPECT(0xb8, gbc.readMem(0xc0ad));
        // CB B8 0161
        gbc.setState(0x59d6, 0x476b, 0x69d0, 0xa3, 0x8cc4, 0x47c5, 0x1, 0x1);
        gbc.writeMem(0x59d6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x476b, gbc.sp());
        EXPECT(0x59d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0162
        gbc.setState(0x30, 0x4e77, 0xf070, 0xfc6d, 0x6138, 0x7037, 0x0, 0x0);
        gbc.writeMem(0x30, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4e77, gbc.sp());
        EXPECT(0x32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0163
        gbc.setState(0x3432, 0x9a74, 0x73b0, 0x6551, 0xc973, 0x53d7, 0x0, 0x0);
        gbc.writeMem(0x3432, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9a74, gbc.sp());
        EXPECT(0x3434, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0164
        gbc.setState(0x1919, 0x279e, 0xbb10, 0xe16, 0xe78e, 0x8727, 0x0, 0x1);
        gbc.writeMem(0x1919, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x279e, gbc.sp());
        EXPECT(0x191b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0165
        gbc.setState(0xc203, 0x40c7, 0x35f0, 0x771f, 0x247e, 0x9e62, 0x0, 0x0);
        gbc.writeMem(0xc203, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x40c7, gbc.sp());
        EXPECT(0xc205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc203));
        EXPECT(0xb8, gbc.readMem(0xc204));
        // CB B8 0166
        gbc.setState(0x3922, 0xa5b0, 0xdae0, 0xc35a, 0xa871, 0x8bd7, 0x0, 0x0);
        gbc.writeMem(0x3922, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa5b0, gbc.sp());
        EXPECT(0x3924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0167
        gbc.setState(0xbe31, 0xb404, 0x6040, 0x7970, 0xd562, 0xf3a5, 0x0, 0x0);
        gbc.writeMem(0xbe31, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb404, gbc.sp());
        EXPECT(0xbe33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe31));
        EXPECT(0xb8, gbc.readMem(0xbe32));
        // CB B8 0168
        gbc.setState(0x8666, 0xed8b, 0x4ac0, 0x9fca, 0x412f, 0x4fe5, 0x0, 0x1);
        gbc.writeMem(0x8666, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xed8b, gbc.sp());
        EXPECT(0x8668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8666));
        EXPECT(0xb8, gbc.readMem(0x8667));
        // CB B8 0169
        gbc.setState(0xc358, 0x4ddd, 0xbcd0, 0xa7d0, 0x2c5c, 0x7582, 0x0, 0x0);
        gbc.writeMem(0xc358, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x4ddd, gbc.sp());
        EXPECT(0xc35a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc358));
        EXPECT(0xb8, gbc.readMem(0xc359));
        // CB B8 016A
        gbc.setState(0x821b, 0xd648, 0x7000, 0x50ce, 0xa1f0, 0x7d64, 0x0, 0x1);
        gbc.writeMem(0x821b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xd648, gbc.sp());
        EXPECT(0x821d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x821b));
        EXPECT(0xb8, gbc.readMem(0x821c));
        // CB B8 016B
        gbc.setState(0x14e4, 0x22b8, 0xd2c0, 0x878e, 0x7b20, 0xc815, 0x1, 0x0);
        gbc.writeMem(0x14e4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x22b8, gbc.sp());
        EXPECT(0x14e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 016D
        gbc.setState(0x38be, 0x7daf, 0xbf50, 0x378c, 0x6671, 0xde2f, 0x0, 0x1);
        gbc.writeMem(0x38be, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7daf, gbc.sp());
        EXPECT(0x38c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 016E
        gbc.setState(0xe8a6, 0xefd6, 0x13a0, 0x331e, 0xb590, 0xd05a, 0x1, 0x0);
        gbc.writeMem(0xe8a6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xefd6, gbc.sp());
        EXPECT(0xe8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8a6));
        EXPECT(0xb8, gbc.readMem(0xe8a7));
        // CB B8 016F
        gbc.setState(0x4ae6, 0xc94, 0xdf50, 0x2a9b, 0x7435, 0x791c, 0x0, 0x0);
        gbc.writeMem(0x4ae6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc94, gbc.sp());
        EXPECT(0x4ae8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0170
        gbc.setState(0xd1b7, 0xa01b, 0x70d0, 0x3431, 0xfa07, 0x294f, 0x0, 0x1);
        gbc.writeMem(0xd1b7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa01b, gbc.sp());
        EXPECT(0xd1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1b7));
        EXPECT(0xb8, gbc.readMem(0xd1b8));
        // CB B8 0171
        gbc.setState(0x233d, 0x8181, 0x2740, 0x13b4, 0x5b7f, 0x3e34, 0x0, 0x0);
        gbc.writeMem(0x233d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x8181, gbc.sp());
        EXPECT(0x233f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0172
        gbc.setState(0xdbfa, 0x675, 0x1af0, 0xf6b6, 0x18f3, 0xb13b, 0x1, 0x0);
        gbc.writeMem(0xdbfa, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x675, gbc.sp());
        EXPECT(0xdbfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbfa));
        EXPECT(0xb8, gbc.readMem(0xdbfb));
        // CB B8 0173
        gbc.setState(0x35fe, 0xe801, 0x5190, 0xb816, 0x73a4, 0x9b18, 0x1, 0x0);
        gbc.writeMem(0x35fe, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe801, gbc.sp());
        EXPECT(0x3600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0174
        gbc.setState(0xc527, 0x1a09, 0xfb0, 0x974b, 0x2345, 0xecf1, 0x1, 0x0);
        gbc.writeMem(0xc527, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1a09, gbc.sp());
        EXPECT(0xc529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc527));
        EXPECT(0xb8, gbc.readMem(0xc528));
        // CB B8 0175
        gbc.setState(0x413f, 0x2335, 0x5560, 0x19fe, 0x3bc, 0x2a03, 0x1, 0x0);
        gbc.writeMem(0x413f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2335, gbc.sp());
        EXPECT(0x4141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0176
        gbc.setState(0x5d90, 0xc1d1, 0x6140, 0xb006, 0xe90f, 0xcfec, 0x0, 0x1);
        gbc.writeMem(0x5d90, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc1d1, gbc.sp());
        EXPECT(0x5d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0177
        gbc.setState(0x7286, 0x7cf2, 0x38e0, 0x115e, 0x367, 0xef7e, 0x1, 0x1);
        gbc.writeMem(0x7286, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x7cf2, gbc.sp());
        EXPECT(0x7288, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0178
        gbc.setState(0xb268, 0xcdd6, 0xba70, 0xaea1, 0x4493, 0x7c66, 0x1, 0x0);
        gbc.writeMem(0xb268, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcdd6, gbc.sp());
        EXPECT(0xb26a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb268));
        EXPECT(0xb8, gbc.readMem(0xb269));
        // CB B8 0179
        gbc.setState(0x9dbb, 0x1f74, 0x1630, 0xfc64, 0xa1e3, 0x5bb1, 0x0, 0x1);
        gbc.writeMem(0x9dbb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x1f74, gbc.sp());
        EXPECT(0x9dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dbb));
        EXPECT(0xb8, gbc.readMem(0x9dbc));
        // CB B8 017A
        gbc.setState(0x30b7, 0xcd1f, 0x5f80, 0x21e9, 0xe551, 0x134d, 0x1, 0x1);
        gbc.writeMem(0x30b7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xcd1f, gbc.sp());
        EXPECT(0x30b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 017B
        gbc.setState(0x7638, 0x1c7a, 0xf050, 0x159f, 0x64a3, 0x31bc, 0x0, 0x0);
        gbc.writeMem(0x7638, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x1c7a, gbc.sp());
        EXPECT(0x763a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 017C
        gbc.setState(0xa313, 0x4a00, 0x74a0, 0x74e5, 0x6a3a, 0x2da5, 0x1, 0x1);
        gbc.writeMem(0xa313, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x4a00, gbc.sp());
        EXPECT(0xa315, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa313));
        EXPECT(0xb8, gbc.readMem(0xa314));
        // CB B8 017D
        gbc.setState(0x2872, 0xcf88, 0xad70, 0x4e13, 0xfc8c, 0x3561, 0x1, 0x1);
        gbc.writeMem(0x2872, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xcf88, gbc.sp());
        EXPECT(0x2874, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 017E
        gbc.setState(0x2176, 0xfb99, 0x5690, 0x88a5, 0x5c89, 0x4e62, 0x0, 0x1);
        gbc.writeMem(0x2176, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfb99, gbc.sp());
        EXPECT(0x2178, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 017F
        gbc.setState(0x9a38, 0xeda6, 0x4070, 0x919b, 0x8340, 0x973b, 0x0, 0x0);
        gbc.writeMem(0x9a38, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xeda6, gbc.sp());
        EXPECT(0x9a3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a38));
        EXPECT(0xb8, gbc.readMem(0x9a39));
        // CB B8 0180
        gbc.setState(0xd54c, 0xc6e0, 0xc4c0, 0xd9c9, 0x5c8e, 0xd1c0, 0x1, 0x0);
        gbc.writeMem(0xd54c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc6e0, gbc.sp());
        EXPECT(0xd54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd54c));
        EXPECT(0xb8, gbc.readMem(0xd54d));
        // CB B8 0181
        gbc.setState(0x295d, 0x1298, 0xa960, 0x6564, 0xf105, 0x6c24, 0x1, 0x0);
        gbc.writeMem(0x295d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1298, gbc.sp());
        EXPECT(0x295f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0182
        gbc.setState(0xcc0f, 0x34ce, 0x6a70, 0x37e, 0x9770, 0x63f5, 0x1, 0x1);
        gbc.writeMem(0xcc0f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x34ce, gbc.sp());
        EXPECT(0xcc11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc0f));
        EXPECT(0xb8, gbc.readMem(0xcc10));
        // CB B8 0183
        gbc.setState(0x32d6, 0xb25a, 0xd0e0, 0xc1d6, 0x663e, 0xac25, 0x0, 0x0);
        gbc.writeMem(0x32d6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb25a, gbc.sp());
        EXPECT(0x32d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0184
        gbc.setState(0x54e, 0xc014, 0xbe50, 0x5623, 0xda45, 0xa3de, 0x1, 0x0);
        gbc.writeMem(0x54e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc014, gbc.sp());
        EXPECT(0x550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0185
        gbc.setState(0x26de, 0x2ace, 0xbbf0, 0xc9bc, 0x1359, 0xa386, 0x0, 0x0);
        gbc.writeMem(0x26de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2ace, gbc.sp());
        EXPECT(0x26e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0186
        gbc.setState(0x40b4, 0x2574, 0x8190, 0xd935, 0x677a, 0xbed1, 0x1, 0x1);
        gbc.writeMem(0x40b4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2574, gbc.sp());
        EXPECT(0x40b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0187
        gbc.setState(0x49fe, 0xbe31, 0x88e0, 0x511d, 0x398, 0x8394, 0x1, 0x1);
        gbc.writeMem(0x49fe, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xbe31, gbc.sp());
        EXPECT(0x4a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0188
        gbc.setState(0x8f69, 0x6902, 0x7000, 0x9549, 0xf367, 0xfd78, 0x1, 0x0);
        gbc.writeMem(0x8f69, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6902, gbc.sp());
        EXPECT(0x8f6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f69));
        EXPECT(0xb8, gbc.readMem(0x8f6a));
        // CB B8 0189
        gbc.setState(0xdc88, 0xd5de, 0x7440, 0xd9c2, 0x24af, 0x5624, 0x0, 0x0);
        gbc.writeMem(0xdc88, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xd5de, gbc.sp());
        EXPECT(0xdc8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc88));
        EXPECT(0xb8, gbc.readMem(0xdc89));
        // CB B8 018A
        gbc.setState(0x56fc, 0x46db, 0x9270, 0x5b62, 0xde1f, 0xb37b, 0x1, 0x0);
        gbc.writeMem(0x56fc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x46db, gbc.sp());
        EXPECT(0x56fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 018B
        gbc.setState(0x951e, 0xe4f, 0x4140, 0x68b2, 0xb899, 0xd057, 0x1, 0x1);
        gbc.writeMem(0x951e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe4f, gbc.sp());
        EXPECT(0x9520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951e));
        EXPECT(0xb8, gbc.readMem(0x951f));
        // CB B8 018C
        gbc.setState(0xb831, 0x93b6, 0xc4d0, 0xb9f7, 0xcb01, 0x980a, 0x0, 0x1);
        gbc.writeMem(0xb831, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x93b6, gbc.sp());
        EXPECT(0xb833, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb831));
        EXPECT(0xb8, gbc.readMem(0xb832));
        // CB B8 018D
        gbc.setState(0x9453, 0x77ca, 0xa780, 0xd566, 0x8ac9, 0x2368, 0x1, 0x0);
        gbc.writeMem(0x9453, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x77ca, gbc.sp());
        EXPECT(0x9455, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9453));
        EXPECT(0xb8, gbc.readMem(0x9454));
        // CB B8 018E
        gbc.setState(0x6f82, 0x9ddf, 0xb9f0, 0xee28, 0xca0c, 0xa29a, 0x1, 0x1);
        gbc.writeMem(0x6f82, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9ddf, gbc.sp());
        EXPECT(0x6f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 018F
        gbc.setState(0x1d5c, 0x3060, 0xa020, 0xbfae, 0x10d2, 0x2631, 0x0, 0x0);
        gbc.writeMem(0x1d5c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x3060, gbc.sp());
        EXPECT(0x1d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0190
        gbc.setState(0x74bd, 0x178c, 0x8210, 0x86df, 0x57c7, 0x7f81, 0x0, 0x1);
        gbc.writeMem(0x74bd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x178c, gbc.sp());
        EXPECT(0x74bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0192
        gbc.setState(0x52e0, 0x2681, 0xff20, 0x8cfc, 0x75bc, 0xec67, 0x1, 0x1);
        gbc.writeMem(0x52e0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2681, gbc.sp());
        EXPECT(0x52e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0193
        gbc.setState(0x167c, 0xa5e4, 0x2550, 0xf5fb, 0x3e2f, 0xf201, 0x0, 0x0);
        gbc.writeMem(0x167c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa5e4, gbc.sp());
        EXPECT(0x167e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0194
        gbc.setState(0x2f46, 0xc708, 0xbee0, 0xf214, 0xb709, 0x4f70, 0x0, 0x0);
        gbc.writeMem(0x2f46, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xc708, gbc.sp());
        EXPECT(0x2f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0195
        gbc.setState(0x8825, 0x7158, 0xba00, 0x1c4f, 0xb1de, 0x45ac, 0x1, 0x0);
        gbc.writeMem(0x8825, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x7158, gbc.sp());
        EXPECT(0x8827, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8825));
        EXPECT(0xb8, gbc.readMem(0x8826));
        // CB B8 0196
        gbc.setState(0xc126, 0xcdee, 0x290, 0x2167, 0xb850, 0x78fa, 0x0, 0x0);
        gbc.writeMem(0xc126, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcdee, gbc.sp());
        EXPECT(0xc128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc126));
        EXPECT(0xb8, gbc.readMem(0xc127));
        // CB B8 0197
        gbc.setState(0xdfe4, 0x5691, 0xb0c0, 0x9972, 0x7c26, 0xafda, 0x0, 0x0);
        gbc.writeMem(0xdfe4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5691, gbc.sp());
        EXPECT(0xdfe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfe4));
        EXPECT(0xb8, gbc.readMem(0xdfe5));
        // CB B8 0198
        gbc.setState(0x79f, 0x12ec, 0x8e50, 0x6a0d, 0xdee8, 0xc738, 0x1, 0x0);
        gbc.writeMem(0x79f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x12ec, gbc.sp());
        EXPECT(0x7a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0199
        gbc.setState(0xe4d9, 0x2cce, 0x14b0, 0xb488, 0xc3a7, 0x9564, 0x0, 0x1);
        gbc.writeMem(0xe4d9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2cce, gbc.sp());
        EXPECT(0xe4db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d9));
        EXPECT(0xb8, gbc.readMem(0xe4da));
        // CB B8 019A
        gbc.setState(0x1a8e, 0x42d2, 0x6840, 0xa580, 0x8878, 0x240c, 0x1, 0x0);
        gbc.writeMem(0x1a8e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x42d2, gbc.sp());
        EXPECT(0x1a90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 019B
        gbc.setState(0x83bb, 0xabe2, 0x4e70, 0xe6d3, 0xe357, 0xfedc, 0x0, 0x1);
        gbc.writeMem(0x83bb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xabe2, gbc.sp());
        EXPECT(0x83bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83bb));
        EXPECT(0xb8, gbc.readMem(0x83bc));
        // CB B8 019C
        gbc.setState(0x19f9, 0x8e8d, 0x6e40, 0xbf8d, 0x8323, 0x5fbe, 0x1, 0x1);
        gbc.writeMem(0x19f9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8e8d, gbc.sp());
        EXPECT(0x19fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 019D
        gbc.setState(0x3fe3, 0xd950, 0xb100, 0xb01, 0x27f7, 0x3250, 0x0, 0x1);
        gbc.writeMem(0x3fe3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd950, gbc.sp());
        EXPECT(0x3fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 019E
        gbc.setState(0xbe3a, 0xfcc2, 0xacc0, 0x6d59, 0xe23f, 0xc782, 0x0, 0x1);
        gbc.writeMem(0xbe3a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfcc2, gbc.sp());
        EXPECT(0xbe3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe3a));
        EXPECT(0xb8, gbc.readMem(0xbe3b));
        // CB B8 019F
        gbc.setState(0x218e, 0xa447, 0xcbc0, 0x8603, 0x2bcb, 0xffda, 0x0, 0x0);
        gbc.writeMem(0x218e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa447, gbc.sp());
        EXPECT(0x2190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01A1
        gbc.setState(0x334b, 0x4182, 0x67e0, 0x9b56, 0xb983, 0x41b1, 0x1, 0x1);
        gbc.writeMem(0x334b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4182, gbc.sp());
        EXPECT(0x334d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01A2
        gbc.setState(0x9dff, 0xc410, 0x4480, 0xe63e, 0x1e70, 0xdc9, 0x0, 0x1);
        gbc.writeMem(0x9dff, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xc410, gbc.sp());
        EXPECT(0x9e01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dff));
        EXPECT(0xb8, gbc.readMem(0x9e00));
        // CB B8 01A3
        gbc.setState(0x1d9e, 0x9e25, 0xa740, 0x7a58, 0xc204, 0xbac8, 0x0, 0x1);
        gbc.writeMem(0x1d9e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9e25, gbc.sp());
        EXPECT(0x1da0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01A4
        gbc.setState(0xd304, 0xae02, 0x490, 0x4fd5, 0x2208, 0x1bc6, 0x1, 0x1);
        gbc.writeMem(0xd304, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xae02, gbc.sp());
        EXPECT(0xd306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd304));
        EXPECT(0xb8, gbc.readMem(0xd305));
        // CB B8 01A5
        gbc.setState(0x65be, 0xfb52, 0x5b70, 0x6997, 0x4274, 0xf8cb, 0x1, 0x0);
        gbc.writeMem(0x65be, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xfb52, gbc.sp());
        EXPECT(0x65c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01A6
        gbc.setState(0x9236, 0x682d, 0x4fd0, 0x8c9, 0x7c63, 0x1b10, 0x0, 0x0);
        gbc.writeMem(0x9236, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x682d, gbc.sp());
        EXPECT(0x9238, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9236));
        EXPECT(0xb8, gbc.readMem(0x9237));
        // CB B8 01A7
        gbc.setState(0xa6b0, 0x2e75, 0x4c70, 0xdfe4, 0xa8c0, 0x44b4, 0x0, 0x1);
        gbc.writeMem(0xa6b0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2e75, gbc.sp());
        EXPECT(0xa6b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b0));
        EXPECT(0xb8, gbc.readMem(0xa6b1));
        // CB B8 01A8
        gbc.setState(0x5ce9, 0xb0ae, 0x4a80, 0xc264, 0xad86, 0x19e7, 0x1, 0x1);
        gbc.writeMem(0x5ce9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb0ae, gbc.sp());
        EXPECT(0x5ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01A9
        gbc.setState(0x35de, 0x54d2, 0x4950, 0x2ddd, 0x223d, 0x2a2e, 0x1, 0x1);
        gbc.writeMem(0x35de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x54d2, gbc.sp());
        EXPECT(0x35e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01AA
        gbc.setState(0x7ea6, 0xa5, 0xbe70, 0xa8e2, 0x18c2, 0xc126, 0x0, 0x1);
        gbc.writeMem(0x7ea6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa5, gbc.sp());
        EXPECT(0x7ea8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01AB
        gbc.setState(0x585a, 0x8e95, 0x98a0, 0x9281, 0x2bee, 0x5c6e, 0x0, 0x1);
        gbc.writeMem(0x585a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8e95, gbc.sp());
        EXPECT(0x585c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01AC
        gbc.setState(0x8dc5, 0xdd98, 0xccc0, 0x2f7b, 0x4a2d, 0xb8a7, 0x1, 0x1);
        gbc.writeMem(0x8dc5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdd98, gbc.sp());
        EXPECT(0x8dc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dc5));
        EXPECT(0xb8, gbc.readMem(0x8dc6));
        // CB B8 01AE
        gbc.setState(0x1211, 0xebf5, 0x7680, 0xa3e7, 0x1c8, 0x7587, 0x1, 0x0);
        gbc.writeMem(0x1211, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xebf5, gbc.sp());
        EXPECT(0x1213, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01AF
        gbc.setState(0x1534, 0xee40, 0x3b30, 0xc389, 0x53f2, 0xd8df, 0x1, 0x0);
        gbc.writeMem(0x1534, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xee40, gbc.sp());
        EXPECT(0x1536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01B0
        gbc.setState(0x29ab, 0x2a87, 0xb700, 0x1363, 0x6f7a, 0x654f, 0x0, 0x0);
        gbc.writeMem(0x29ab, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2a87, gbc.sp());
        EXPECT(0x29ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01B2
        gbc.setState(0x2101, 0x7a76, 0xc610, 0xb22d, 0x871d, 0x769d, 0x0, 0x1);
        gbc.writeMem(0x2101, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x7a76, gbc.sp());
        EXPECT(0x2103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01B3
        gbc.setState(0x6a49, 0xdb8, 0xaeb0, 0x1114, 0x7172, 0x8ac7, 0x1, 0x1);
        gbc.writeMem(0x6a49, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdb8, gbc.sp());
        EXPECT(0x6a4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01B4
        gbc.setState(0x22a5, 0xf1c0, 0x52c0, 0x737, 0xea4d, 0xa294, 0x1, 0x1);
        gbc.writeMem(0x22a5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf1c0, gbc.sp());
        EXPECT(0x22a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01B5
        gbc.setState(0x7cfb, 0x7e36, 0x2670, 0xf452, 0xcad, 0x9ac9, 0x1, 0x0);
        gbc.writeMem(0x7cfb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7e36, gbc.sp());
        EXPECT(0x7cfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01B6
        gbc.setState(0xe101, 0x84cd, 0x7b60, 0xb456, 0x491d, 0x1022, 0x1, 0x1);
        gbc.writeMem(0xe101, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x84cd, gbc.sp());
        EXPECT(0xe103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe101));
        EXPECT(0xb8, gbc.readMem(0xe102));
        // CB B8 01B7
        gbc.setState(0xed6e, 0xb30e, 0x5aa0, 0xa79, 0xb5ae, 0xb537, 0x0, 0x1);
        gbc.writeMem(0xed6e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb30e, gbc.sp());
        EXPECT(0xed70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed6e));
        EXPECT(0xb8, gbc.readMem(0xed6f));
        // CB B8 01B8
        gbc.setState(0xc4a, 0x5786, 0xed40, 0x3c3f, 0x84ab, 0xefdd, 0x0, 0x1);
        gbc.writeMem(0xc4a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5786, gbc.sp());
        EXPECT(0xc4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01B9
        gbc.setState(0xec32, 0x92e0, 0x5730, 0x9825, 0x28e2, 0x8c53, 0x1, 0x0);
        gbc.writeMem(0xec32, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x92e0, gbc.sp());
        EXPECT(0xec34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec32));
        EXPECT(0xb8, gbc.readMem(0xec33));
        // CB B8 01BA
        gbc.setState(0x871c, 0xce75, 0xb240, 0x3d4d, 0xb85, 0xe0a9, 0x0, 0x1);
        gbc.writeMem(0x871c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xce75, gbc.sp());
        EXPECT(0x871e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x871c));
        EXPECT(0xb8, gbc.readMem(0x871d));
        // CB B8 01BB
        gbc.setState(0xc84a, 0xe4e1, 0xb340, 0x8bc8, 0xdf5, 0xcb06, 0x0, 0x1);
        gbc.writeMem(0xc84a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe4e1, gbc.sp());
        EXPECT(0xc84c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84a));
        EXPECT(0xb8, gbc.readMem(0xc84b));
        // CB B8 01BC
        gbc.setState(0xa0d9, 0xdb43, 0xebb0, 0xa67c, 0x4c54, 0x5f6f, 0x0, 0x0);
        gbc.writeMem(0xa0d9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdb43, gbc.sp());
        EXPECT(0xa0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d9));
        EXPECT(0xb8, gbc.readMem(0xa0da));
        // CB B8 01BD
        gbc.setState(0x89e4, 0x9807, 0x4d80, 0x7ed2, 0x8947, 0x45da, 0x1, 0x1);
        gbc.writeMem(0x89e4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x9807, gbc.sp());
        EXPECT(0x89e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e4));
        EXPECT(0xb8, gbc.readMem(0x89e5));
        // CB B8 01BE
        gbc.setState(0x9d50, 0x26c1, 0x56c0, 0xb221, 0xe27, 0x2d8a, 0x1, 0x0);
        gbc.writeMem(0x9d50, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x26c1, gbc.sp());
        EXPECT(0x9d52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d50));
        EXPECT(0xb8, gbc.readMem(0x9d51));
        // CB B8 01BF
        gbc.setState(0xcea1, 0x2054, 0xefd0, 0xf9f, 0x4594, 0x1be1, 0x1, 0x0);
        gbc.writeMem(0xcea1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2054, gbc.sp());
        EXPECT(0xcea3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea1));
        EXPECT(0xb8, gbc.readMem(0xcea2));
        // CB B8 01C0
        gbc.setState(0x245b, 0x4eaf, 0x6370, 0x1766, 0xb35f, 0x6edb, 0x1, 0x1);
        gbc.writeMem(0x245b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4eaf, gbc.sp());
        EXPECT(0x245d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01C1
        gbc.setState(0xd43e, 0x2d43, 0xed90, 0x23d8, 0x4642, 0x83e8, 0x1, 0x1);
        gbc.writeMem(0xd43e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x2d43, gbc.sp());
        EXPECT(0xd440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43e));
        EXPECT(0xb8, gbc.readMem(0xd43f));
        // CB B8 01C2
        gbc.setState(0x148c, 0xbc57, 0xd6d0, 0xeeb5, 0x30b6, 0x79a0, 0x1, 0x1);
        gbc.writeMem(0x148c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbc57, gbc.sp());
        EXPECT(0x148e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01C3
        gbc.setState(0x27a8, 0x10d3, 0x5860, 0x19e5, 0xff56, 0xfbf, 0x1, 0x0);
        gbc.writeMem(0x27a8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x10d3, gbc.sp());
        EXPECT(0x27aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01C4
        gbc.setState(0x2ac9, 0xfe05, 0x4bb0, 0x9dfe, 0xbeca, 0xdb25, 0x0, 0x1);
        gbc.writeMem(0x2ac9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xfe05, gbc.sp());
        EXPECT(0x2acb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01C5
        gbc.setState(0x9a8, 0xe325, 0xcf80, 0x29ca, 0xe58a, 0xed2a, 0x1, 0x1);
        gbc.writeMem(0x9a8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xe325, gbc.sp());
        EXPECT(0x9aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01C6
        gbc.setState(0x43e2, 0x13f, 0x5990, 0xa945, 0xe36, 0x4abf, 0x0, 0x1);
        gbc.writeMem(0x43e2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x13f, gbc.sp());
        EXPECT(0x43e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01C7
        gbc.setState(0xd798, 0x5c2c, 0xd650, 0xebf0, 0x939d, 0xf211, 0x0, 0x1);
        gbc.writeMem(0xd798, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5c2c, gbc.sp());
        EXPECT(0xd79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd798));
        EXPECT(0xb8, gbc.readMem(0xd799));
        // CB B8 01C8
        gbc.setState(0xdfeb, 0x4ed0, 0xd3f0, 0xf433, 0xe917, 0xcf5f, 0x0, 0x0);
        gbc.writeMem(0xdfeb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4ed0, gbc.sp());
        EXPECT(0xdfed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfeb));
        EXPECT(0xb8, gbc.readMem(0xdfec));
        // CB B8 01C9
        gbc.setState(0x511b, 0x4cd3, 0x2000, 0x4c76, 0x329, 0xd1a, 0x0, 0x1);
        gbc.writeMem(0x511b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4cd3, gbc.sp());
        EXPECT(0x511d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01CA
        gbc.setState(0x57c0, 0x5122, 0xf230, 0x76f7, 0xd78, 0x4b42, 0x0, 0x0);
        gbc.writeMem(0x57c0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5122, gbc.sp());
        EXPECT(0x57c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01CB
        gbc.setState(0x4bb6, 0xf8e5, 0x81c0, 0x7ef7, 0xe6f3, 0xf0a1, 0x1, 0x0);
        gbc.writeMem(0x4bb6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xf8e5, gbc.sp());
        EXPECT(0x4bb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01CD
        gbc.setState(0x1b06, 0xde4b, 0x22b0, 0xa164, 0x6659, 0x81bc, 0x1, 0x1);
        gbc.writeMem(0x1b06, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xde4b, gbc.sp());
        EXPECT(0x1b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01CE
        gbc.setState(0xea64, 0x639f, 0x5e30, 0x3eb5, 0x867d, 0xb51e, 0x1, 0x1);
        gbc.writeMem(0xea64, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x639f, gbc.sp());
        EXPECT(0xea66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea64));
        EXPECT(0xb8, gbc.readMem(0xea65));
        // CB B8 01CF
        gbc.setState(0x4ad8, 0xb880, 0x690, 0x226, 0x40f9, 0x198d, 0x0, 0x1);
        gbc.writeMem(0x4ad8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb880, gbc.sp());
        EXPECT(0x4ada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01D0
        gbc.setState(0x156a, 0x3b00, 0x4700, 0x1956, 0x3c98, 0x8961, 0x1, 0x1);
        gbc.writeMem(0x156a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3b00, gbc.sp());
        EXPECT(0x156c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01D1
        gbc.setState(0xcefc, 0x67df, 0xa5a0, 0x8ba7, 0xdd78, 0xc66e, 0x1, 0x0);
        gbc.writeMem(0xcefc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x67df, gbc.sp());
        EXPECT(0xcefe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcefc));
        EXPECT(0xb8, gbc.readMem(0xcefd));
        // CB B8 01D2
        gbc.setState(0x76d0, 0x5f57, 0x2060, 0x5fe6, 0x9ba5, 0x6da2, 0x1, 0x0);
        gbc.writeMem(0x76d0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5f57, gbc.sp());
        EXPECT(0x76d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01D3
        gbc.setState(0x79d5, 0x77f1, 0xa4c0, 0x9c89, 0x8885, 0x9c84, 0x1, 0x1);
        gbc.writeMem(0x79d5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x77f1, gbc.sp());
        EXPECT(0x79d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01D4
        gbc.setState(0x7d07, 0x14bd, 0x33a0, 0x3167, 0xf350, 0x557c, 0x1, 0x1);
        gbc.writeMem(0x7d07, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x14bd, gbc.sp());
        EXPECT(0x7d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01D5
        gbc.setState(0x5040, 0xc348, 0xbe40, 0x613a, 0x705c, 0x7dfb, 0x0, 0x1);
        gbc.writeMem(0x5040, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc348, gbc.sp());
        EXPECT(0x5042, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01D6
        gbc.setState(0x79b, 0x5fd2, 0x2f10, 0xd87c, 0x160b, 0xbf9f, 0x0, 0x0);
        gbc.writeMem(0x79b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5fd2, gbc.sp());
        EXPECT(0x79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01D7
        gbc.setState(0x9602, 0xa250, 0xb760, 0xf3e7, 0x39bd, 0xd31f, 0x1, 0x1);
        gbc.writeMem(0x9602, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xa250, gbc.sp());
        EXPECT(0x9604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9602));
        EXPECT(0xb8, gbc.readMem(0x9603));
        // CB B8 01D8
        gbc.setState(0x46c7, 0x94f9, 0xdb0, 0xdd0c, 0xa5d6, 0x80f1, 0x0, 0x0);
        gbc.writeMem(0x46c7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x94f9, gbc.sp());
        EXPECT(0x46c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01D9
        gbc.setState(0xef27, 0xa789, 0x7a90, 0x12eb, 0xb496, 0x52cf, 0x0, 0x1);
        gbc.writeMem(0xef27, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa789, gbc.sp());
        EXPECT(0xef29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef27));
        EXPECT(0xb8, gbc.readMem(0xef28));
        // CB B8 01DB
        gbc.setState(0xaca2, 0xe46a, 0x8dd0, 0xa57a, 0x74b9, 0xe019, 0x0, 0x0);
        gbc.writeMem(0xaca2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe46a, gbc.sp());
        EXPECT(0xaca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaca2));
        EXPECT(0xb8, gbc.readMem(0xaca3));
        // CB B8 01DD
        gbc.setState(0xd5bd, 0x1485, 0xca10, 0xd85e, 0xb8d9, 0x82a4, 0x0, 0x1);
        gbc.writeMem(0xd5bd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1485, gbc.sp());
        EXPECT(0xd5bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5bd));
        EXPECT(0xb8, gbc.readMem(0xd5be));
        // CB B8 01DE
        gbc.setState(0x50ac, 0x45e9, 0x3dc0, 0x977c, 0x613a, 0x97fc, 0x0, 0x1);
        gbc.writeMem(0x50ac, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x45e9, gbc.sp());
        EXPECT(0x50ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01DF
        gbc.setState(0x719a, 0x4ecf, 0x3770, 0xa9b4, 0xe30c, 0x8467, 0x0, 0x1);
        gbc.writeMem(0x719a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4ecf, gbc.sp());
        EXPECT(0x719c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01E0
        gbc.setState(0x272a, 0xe6d8, 0x6c70, 0x665f, 0x9709, 0xeaaa, 0x1, 0x0);
        gbc.writeMem(0x272a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xe6d8, gbc.sp());
        EXPECT(0x272c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01E1
        gbc.setState(0xac4c, 0x59, 0xb4e0, 0x4519, 0x36bb, 0x8234, 0x0, 0x0);
        gbc.writeMem(0xac4c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x59, gbc.sp());
        EXPECT(0xac4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac4c));
        EXPECT(0xb8, gbc.readMem(0xac4d));
        // CB B8 01E2
        gbc.setState(0x2128, 0x1543, 0xc310, 0xdec3, 0x3e5c, 0xc9a3, 0x0, 0x0);
        gbc.writeMem(0x2128, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1543, gbc.sp());
        EXPECT(0x212a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01E3
        gbc.setState(0xb895, 0x278c, 0x4070, 0x40a9, 0xbf6b, 0x7c12, 0x1, 0x0);
        gbc.writeMem(0xb895, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x278c, gbc.sp());
        EXPECT(0xb897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb895));
        EXPECT(0xb8, gbc.readMem(0xb896));
        // CB B8 01E4
        gbc.setState(0x12e6, 0x6db1, 0x5ab0, 0xcd58, 0x4101, 0xf466, 0x0, 0x1);
        gbc.writeMem(0x12e6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x6db1, gbc.sp());
        EXPECT(0x12e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01E5
        gbc.setState(0x6f4a, 0xd67f, 0xc460, 0xa62f, 0x509a, 0x6623, 0x1, 0x1);
        gbc.writeMem(0x6f4a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd67f, gbc.sp());
        EXPECT(0x6f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01E6
        gbc.setState(0x863b, 0x4cb5, 0x8760, 0x7794, 0xed81, 0xd6a8, 0x0, 0x0);
        gbc.writeMem(0x863b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x4cb5, gbc.sp());
        EXPECT(0x863d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863b));
        EXPECT(0xb8, gbc.readMem(0x863c));
        // CB B8 01E7
        gbc.setState(0x3d56, 0x396a, 0x4c40, 0x48f, 0x63ee, 0x2a3, 0x1, 0x0);
        gbc.writeMem(0x3d56, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x396a, gbc.sp());
        EXPECT(0x3d58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01E9
        gbc.setState(0xad7e, 0x5063, 0x26b0, 0x401c, 0x1df4, 0x5053, 0x0, 0x0);
        gbc.writeMem(0xad7e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5063, gbc.sp());
        EXPECT(0xad80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad7e));
        EXPECT(0xb8, gbc.readMem(0xad7f));
        // CB B8 01EA
        gbc.setState(0x7141, 0x12c5, 0xf820, 0x101e, 0x5632, 0x3f04, 0x1, 0x1);
        gbc.writeMem(0x7141, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x12c5, gbc.sp());
        EXPECT(0x7143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01EB
        gbc.setState(0x9928, 0x7984, 0xbe30, 0x554a, 0xea23, 0x9ffb, 0x1, 0x0);
        gbc.writeMem(0x9928, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x7984, gbc.sp());
        EXPECT(0x992a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9928));
        EXPECT(0xb8, gbc.readMem(0x9929));
        // CB B8 01ED
        gbc.setState(0xc1bc, 0xa506, 0xa8f0, 0xaae1, 0x5d7a, 0xeaa6, 0x1, 0x1);
        gbc.writeMem(0xc1bc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa506, gbc.sp());
        EXPECT(0xc1be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1bc));
        EXPECT(0xb8, gbc.readMem(0xc1bd));
        // CB B8 01EE
        gbc.setState(0x82d3, 0x5072, 0xb700, 0x11b1, 0x6f1, 0xb4c1, 0x0, 0x0);
        gbc.writeMem(0x82d3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5072, gbc.sp());
        EXPECT(0x82d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d3));
        EXPECT(0xb8, gbc.readMem(0x82d4));
        // CB B8 01EF
        gbc.setState(0xa29f, 0x8c15, 0x5c30, 0xa4ab, 0xb538, 0xd6c8, 0x1, 0x1);
        gbc.writeMem(0xa29f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8c15, gbc.sp());
        EXPECT(0xa2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa29f));
        EXPECT(0xb8, gbc.readMem(0xa2a0));
        // CB B8 01F0
        gbc.setState(0x7fa3, 0xaead, 0xec30, 0x5112, 0xb458, 0x2c7f, 0x1, 0x0);
        gbc.writeMem(0x7fa3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xaead, gbc.sp());
        EXPECT(0x7fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01F1
        gbc.setState(0xb4ae, 0x9616, 0xc180, 0x52de, 0x9e23, 0x1ff9, 0x1, 0x1);
        gbc.writeMem(0xb4ae, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9616, gbc.sp());
        EXPECT(0xb4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4ae));
        EXPECT(0xb8, gbc.readMem(0xb4af));
        // CB B8 01F2
        gbc.setState(0x1f3c, 0x7bb0, 0x4f0, 0x6f9f, 0xc685, 0x68b, 0x0, 0x1);
        gbc.writeMem(0x1f3c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7bb0, gbc.sp());
        EXPECT(0x1f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01F3
        gbc.setState(0xda91, 0x9685, 0x94a0, 0xd79a, 0xb225, 0x3953, 0x1, 0x0);
        gbc.writeMem(0xda91, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x9685, gbc.sp());
        EXPECT(0xda93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda91));
        EXPECT(0xb8, gbc.readMem(0xda92));
        // CB B8 01F4
        gbc.setState(0xa568, 0xf9be, 0x31b0, 0xa300, 0xfde4, 0x67d, 0x1, 0x1);
        gbc.writeMem(0xa568, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf9be, gbc.sp());
        EXPECT(0xa56a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa568));
        EXPECT(0xb8, gbc.readMem(0xa569));
        // CB B8 01F5
        gbc.setState(0x1c88, 0x213f, 0x6fc0, 0x4ee9, 0x70dc, 0x65df, 0x1, 0x0);
        gbc.writeMem(0x1c88, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x213f, gbc.sp());
        EXPECT(0x1c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01F6
        gbc.setState(0xd6dd, 0x9a2d, 0x1ef0, 0x2744, 0x9a16, 0xd04e, 0x1, 0x0);
        gbc.writeMem(0xd6dd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9a2d, gbc.sp());
        EXPECT(0xd6df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6dd));
        EXPECT(0xb8, gbc.readMem(0xd6de));
        // CB B8 01F7
        gbc.setState(0x676b, 0xac2d, 0x87e0, 0xa568, 0xabeb, 0xa0fa, 0x0, 0x1);
        gbc.writeMem(0x676b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xac2d, gbc.sp());
        EXPECT(0x676d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01F8
        gbc.setState(0x8ace, 0xe73c, 0x2660, 0xa6a4, 0x42f4, 0x9a4f, 0x0, 0x1);
        gbc.writeMem(0x8ace, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe73c, gbc.sp());
        EXPECT(0x8ad0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ace));
        EXPECT(0xb8, gbc.readMem(0x8acf));
        // CB B8 01FA
        gbc.setState(0x9893, 0xb84b, 0xa380, 0x5a0a, 0xc63e, 0xfecd, 0x1, 0x1);
        gbc.writeMem(0x9893, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xb84b, gbc.sp());
        EXPECT(0x9895, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9893));
        EXPECT(0xb8, gbc.readMem(0x9894));
        // CB B8 01FB
        gbc.setState(0x7526, 0xdb88, 0xe690, 0xbdff, 0xe212, 0xb96f, 0x1, 0x0);
        gbc.writeMem(0x7526, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xdb88, gbc.sp());
        EXPECT(0x7528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 01FC
        gbc.setState(0xb84a, 0xa1e4, 0xfa60, 0x4231, 0x853d, 0x3773, 0x0, 0x1);
        gbc.writeMem(0xb84a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa1e4, gbc.sp());
        EXPECT(0xb84c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb84a));
        EXPECT(0xb8, gbc.readMem(0xb84b));
        // CB B8 01FD
        gbc.setState(0x5507, 0x3cc7, 0x12a0, 0xedb8, 0xe163, 0x3b07, 0x1, 0x1);
        gbc.writeMem(0x5507, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3cc7, gbc.sp());
        EXPECT(0x5509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 01FE
        gbc.setState(0xe43f, 0x770b, 0xe270, 0x712d, 0xca0e, 0x3c3, 0x1, 0x0);
        gbc.writeMem(0xe43f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x770b, gbc.sp());
        EXPECT(0xe441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe43f));
        EXPECT(0xb8, gbc.readMem(0xe440));
        // CB B8 01FF
        gbc.setState(0x78eb, 0x47d, 0xa270, 0xb542, 0x1aa5, 0xc053, 0x0, 0x1);
        gbc.writeMem(0x78eb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x47d, gbc.sp());
        EXPECT(0x78ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0200
        gbc.setState(0xb2e4, 0xa2ee, 0xfc70, 0xbd1b, 0x3216, 0x2332, 0x1, 0x1);
        gbc.writeMem(0xb2e4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa2ee, gbc.sp());
        EXPECT(0xb2e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2e4));
        EXPECT(0xb8, gbc.readMem(0xb2e5));
        // CB B8 0201
        gbc.setState(0x278b, 0xf870, 0x2350, 0xea4e, 0x735e, 0xf044, 0x1, 0x1);
        gbc.writeMem(0x278b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf870, gbc.sp());
        EXPECT(0x278d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0202
        gbc.setState(0xded6, 0x9b26, 0xd5a0, 0x6ef5, 0x96eb, 0xb07a, 0x1, 0x1);
        gbc.writeMem(0xded6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9b26, gbc.sp());
        EXPECT(0xded8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded6));
        EXPECT(0xb8, gbc.readMem(0xded7));
        // CB B8 0203
        gbc.setState(0x74ed, 0xaba8, 0xe1f0, 0x1700, 0xf2a7, 0x7062, 0x0, 0x1);
        gbc.writeMem(0x74ed, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xaba8, gbc.sp());
        EXPECT(0x74ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0204
        gbc.setState(0x3c69, 0x94f5, 0xa7c0, 0x1d, 0x786f, 0x9a07, 0x0, 0x0);
        gbc.writeMem(0x3c69, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x94f5, gbc.sp());
        EXPECT(0x3c6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0205
        gbc.setState(0x413f, 0xb594, 0x72d0, 0x8295, 0xcc29, 0x5afe, 0x1, 0x1);
        gbc.writeMem(0x413f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb594, gbc.sp());
        EXPECT(0x4141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0206
        gbc.setState(0xd627, 0xc06, 0xea10, 0x43ae, 0x3d18, 0xe247, 0x1, 0x1);
        gbc.writeMem(0xd627, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc06, gbc.sp());
        EXPECT(0xd629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd627));
        EXPECT(0xb8, gbc.readMem(0xd628));
        // CB B8 0207
        gbc.setState(0xaeb7, 0xda80, 0xb560, 0xed27, 0xf211, 0xa5e, 0x0, 0x1);
        gbc.writeMem(0xaeb7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xda80, gbc.sp());
        EXPECT(0xaeb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb7));
        EXPECT(0xb8, gbc.readMem(0xaeb8));
        // CB B8 0208
        gbc.setState(0xe183, 0x7efd, 0xf720, 0x5978, 0x7c95, 0x1da, 0x1, 0x0);
        gbc.writeMem(0xe183, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x7efd, gbc.sp());
        EXPECT(0xe185, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe183));
        EXPECT(0xb8, gbc.readMem(0xe184));
        // CB B8 0209
        gbc.setState(0x5608, 0x5fcb, 0x36f0, 0x4109, 0x9157, 0x526e, 0x0, 0x1);
        gbc.writeMem(0x5608, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5fcb, gbc.sp());
        EXPECT(0x560a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 020A
        gbc.setState(0x55ff, 0x844, 0xa780, 0xf097, 0xd37e, 0xd302, 0x1, 0x1);
        gbc.writeMem(0x55ff, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x844, gbc.sp());
        EXPECT(0x5601, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 020B
        gbc.setState(0xc621, 0x8abe, 0xace0, 0xb196, 0x1afd, 0x56b0, 0x0, 0x0);
        gbc.writeMem(0xc621, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8abe, gbc.sp());
        EXPECT(0xc623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc621));
        EXPECT(0xb8, gbc.readMem(0xc622));
        // CB B8 020C
        gbc.setState(0x673d, 0x1d0d, 0xba80, 0x6876, 0x2c47, 0x109, 0x1, 0x0);
        gbc.writeMem(0x673d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x1d0d, gbc.sp());
        EXPECT(0x673f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 020D
        gbc.setState(0x3395, 0xc883, 0xa430, 0x7f17, 0x175, 0x9aa6, 0x1, 0x0);
        gbc.writeMem(0x3395, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc883, gbc.sp());
        EXPECT(0x3397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 020E
        gbc.setState(0x9cad, 0x2380, 0xc7d0, 0xc2c7, 0x1c57, 0x7387, 0x1, 0x1);
        gbc.writeMem(0x9cad, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2380, gbc.sp());
        EXPECT(0x9caf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cad));
        EXPECT(0xb8, gbc.readMem(0x9cae));
        // CB B8 020F
        gbc.setState(0xa324, 0x35cf, 0x4f70, 0xc7db, 0xece5, 0x9f85, 0x1, 0x1);
        gbc.writeMem(0xa324, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x35cf, gbc.sp());
        EXPECT(0xa326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa324));
        EXPECT(0xb8, gbc.readMem(0xa325));
        // CB B8 0210
        gbc.setState(0x1b35, 0xf81e, 0x76d0, 0xac51, 0xbec1, 0xf5db, 0x0, 0x1);
        gbc.writeMem(0x1b35, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf81e, gbc.sp());
        EXPECT(0x1b37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0211
        gbc.setState(0x6b50, 0xbab9, 0x4ad0, 0xdd8c, 0x15d3, 0xfef1, 0x1, 0x1);
        gbc.writeMem(0x6b50, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xbab9, gbc.sp());
        EXPECT(0x6b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0212
        gbc.setState(0x2864, 0xc3b0, 0xa5b0, 0x9a51, 0x2f0d, 0xc55, 0x1, 0x1);
        gbc.writeMem(0x2864, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xc3b0, gbc.sp());
        EXPECT(0x2866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0213
        gbc.setState(0x71d2, 0x8b32, 0x6de0, 0xbc7a, 0x2b38, 0x46bc, 0x1, 0x1);
        gbc.writeMem(0x71d2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8b32, gbc.sp());
        EXPECT(0x71d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0214
        gbc.setState(0x96ad, 0xce45, 0x87f0, 0x3e4a, 0xff0e, 0x52ae, 0x0, 0x1);
        gbc.writeMem(0x96ad, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xce45, gbc.sp());
        EXPECT(0x96af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ad));
        EXPECT(0xb8, gbc.readMem(0x96ae));
        // CB B8 0215
        gbc.setState(0x7e8c, 0xa447, 0x29f0, 0x26d2, 0x6577, 0xd2a4, 0x0, 0x0);
        gbc.writeMem(0x7e8c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa447, gbc.sp());
        EXPECT(0x7e8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0216
        gbc.setState(0x34b9, 0x29b7, 0xe950, 0x1cad, 0x10de, 0x9579, 0x0, 0x0);
        gbc.writeMem(0x34b9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x29b7, gbc.sp());
        EXPECT(0x34bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0217
        gbc.setState(0x1958, 0xe09b, 0xff80, 0x3c73, 0x14a0, 0x26df, 0x1, 0x0);
        gbc.writeMem(0x1958, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe09b, gbc.sp());
        EXPECT(0x195a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0218
        gbc.setState(0xed86, 0xefef, 0xd5f0, 0x6859, 0x7c80, 0xdc83, 0x0, 0x1);
        gbc.writeMem(0xed86, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xefef, gbc.sp());
        EXPECT(0xed88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed86));
        EXPECT(0xb8, gbc.readMem(0xed87));
        // CB B8 0219
        gbc.setState(0x8603, 0x2994, 0xfef0, 0xd9c9, 0x6a2d, 0xe7cf, 0x0, 0x1);
        gbc.writeMem(0x8603, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2994, gbc.sp());
        EXPECT(0x8605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8603));
        EXPECT(0xb8, gbc.readMem(0x8604));
        // CB B8 021A
        gbc.setState(0x4e02, 0x3740, 0xbde0, 0x41c7, 0x372d, 0xc720, 0x0, 0x1);
        gbc.writeMem(0x4e02, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3740, gbc.sp());
        EXPECT(0x4e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 021B
        gbc.setState(0xce83, 0x6cbc, 0x1ee0, 0xdc82, 0x72cb, 0xef2e, 0x0, 0x0);
        gbc.writeMem(0xce83, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x6cbc, gbc.sp());
        EXPECT(0xce85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce83));
        EXPECT(0xb8, gbc.readMem(0xce84));
        // CB B8 021C
        gbc.setState(0x8773, 0x345a, 0x5610, 0xa4ca, 0xf93f, 0x261f, 0x0, 0x0);
        gbc.writeMem(0x8773, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x345a, gbc.sp());
        EXPECT(0x8775, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8773));
        EXPECT(0xb8, gbc.readMem(0x8774));
        // CB B8 021D
        gbc.setState(0x18ce, 0xb167, 0xebd0, 0x8105, 0x5d1e, 0x5ae1, 0x1, 0x0);
        gbc.writeMem(0x18ce, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb167, gbc.sp());
        EXPECT(0x18d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 021E
        gbc.setState(0xdbe3, 0xfdea, 0x6ef0, 0xf9ef, 0x34bf, 0xa142, 0x0, 0x0);
        gbc.writeMem(0xdbe3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xfdea, gbc.sp());
        EXPECT(0xdbe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe3));
        EXPECT(0xb8, gbc.readMem(0xdbe4));
        // CB B8 021F
        gbc.setState(0xb4d0, 0x30a5, 0xe540, 0xd9d3, 0x1c89, 0x6149, 0x1, 0x1);
        gbc.writeMem(0xb4d0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x30a5, gbc.sp());
        EXPECT(0xb4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4d0));
        EXPECT(0xb8, gbc.readMem(0xb4d1));
        // CB B8 0220
        gbc.setState(0xa99f, 0x8e18, 0xb20, 0x1095, 0xe41f, 0x797, 0x0, 0x1);
        gbc.writeMem(0xa99f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8e18, gbc.sp());
        EXPECT(0xa9a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa99f));
        EXPECT(0xb8, gbc.readMem(0xa9a0));
        // CB B8 0221
        gbc.setState(0xa652, 0x8c03, 0xd650, 0x2c52, 0x1ac4, 0xaa5d, 0x0, 0x1);
        gbc.writeMem(0xa652, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8c03, gbc.sp());
        EXPECT(0xa654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa652));
        EXPECT(0xb8, gbc.readMem(0xa653));
        // CB B8 0222
        gbc.setState(0xd618, 0xf477, 0x4f60, 0x1272, 0xb0aa, 0xe5a2, 0x0, 0x1);
        gbc.writeMem(0xd618, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xf477, gbc.sp());
        EXPECT(0xd61a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd618));
        EXPECT(0xb8, gbc.readMem(0xd619));
        // CB B8 0223
        gbc.setState(0xd569, 0xe5d9, 0xfd00, 0xc6d2, 0x8ef0, 0xf08e, 0x0, 0x0);
        gbc.writeMem(0xd569, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe5d9, gbc.sp());
        EXPECT(0xd56b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd569));
        EXPECT(0xb8, gbc.readMem(0xd56a));
        // CB B8 0224
        gbc.setState(0xc1fb, 0x281c, 0x4bf0, 0x4f5b, 0xc478, 0x2cb1, 0x1, 0x1);
        gbc.writeMem(0xc1fb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x281c, gbc.sp());
        EXPECT(0xc1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1fb));
        EXPECT(0xb8, gbc.readMem(0xc1fc));
        // CB B8 0225
        gbc.setState(0x2e64, 0xf46b, 0x8f60, 0x6b46, 0x887c, 0xae79, 0x0, 0x1);
        gbc.writeMem(0x2e64, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf46b, gbc.sp());
        EXPECT(0x2e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0226
        gbc.setState(0x84e4, 0xa4c4, 0xc7b0, 0xae09, 0x8f6c, 0x48bb, 0x1, 0x0);
        gbc.writeMem(0x84e4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa4c4, gbc.sp());
        EXPECT(0x84e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e4));
        EXPECT(0xb8, gbc.readMem(0x84e5));
        // CB B8 0228
        gbc.setState(0xe2de, 0xa7d7, 0x3e70, 0x430, 0x574, 0xf681, 0x0, 0x1);
        gbc.writeMem(0xe2de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa7d7, gbc.sp());
        EXPECT(0xe2e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2de));
        EXPECT(0xb8, gbc.readMem(0xe2df));
        // CB B8 0229
        gbc.setState(0x7760, 0x2d57, 0x410, 0xf412, 0x3f5b, 0x8bb0, 0x0, 0x0);
        gbc.writeMem(0x7760, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2d57, gbc.sp());
        EXPECT(0x7762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 022A
        gbc.setState(0xe6e3, 0xf1b5, 0x2ac0, 0xf0f3, 0xd787, 0xb203, 0x1, 0x1);
        gbc.writeMem(0xe6e3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf1b5, gbc.sp());
        EXPECT(0xe6e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6e3));
        EXPECT(0xb8, gbc.readMem(0xe6e4));
        // CB B8 022B
        gbc.setState(0xd55c, 0xe569, 0xf9c0, 0x6875, 0x2556, 0x8629, 0x0, 0x1);
        gbc.writeMem(0xd55c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xe569, gbc.sp());
        EXPECT(0xd55e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd55c));
        EXPECT(0xb8, gbc.readMem(0xd55d));
        // CB B8 022D
        gbc.setState(0xec6c, 0xf9cd, 0x7480, 0x57a4, 0xeb89, 0x51f, 0x0, 0x0);
        gbc.writeMem(0xec6c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xf9cd, gbc.sp());
        EXPECT(0xec6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec6c));
        EXPECT(0xb8, gbc.readMem(0xec6d));
        // CB B8 022F
        gbc.setState(0x1b8c, 0x8da, 0x9f60, 0x1235, 0x2477, 0xff24, 0x0, 0x1);
        gbc.writeMem(0x1b8c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x8da, gbc.sp());
        EXPECT(0x1b8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0230
        gbc.setState(0x320f, 0xd46e, 0x6af0, 0x9a94, 0x6ca1, 0x857a, 0x1, 0x1);
        gbc.writeMem(0x320f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd46e, gbc.sp());
        EXPECT(0x3211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0231
        gbc.setState(0x1f79, 0xef5f, 0xfb50, 0x6422, 0xc6e1, 0x9343, 0x0, 0x0);
        gbc.writeMem(0x1f79, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xef5f, gbc.sp());
        EXPECT(0x1f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0232
        gbc.setState(0xe2a5, 0xbd0e, 0x4fc0, 0x2050, 0xe133, 0x8d05, 0x0, 0x0);
        gbc.writeMem(0xe2a5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbd0e, gbc.sp());
        EXPECT(0xe2a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2a5));
        EXPECT(0xb8, gbc.readMem(0xe2a6));
        // CB B8 0234
        gbc.setState(0xb315, 0x51fc, 0xcd90, 0x3998, 0x9a50, 0x196b, 0x0, 0x1);
        gbc.writeMem(0xb315, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x51fc, gbc.sp());
        EXPECT(0xb317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb315));
        EXPECT(0xb8, gbc.readMem(0xb316));
        // CB B8 0235
        gbc.setState(0xad1b, 0xf9c0, 0xd420, 0xcbfb, 0x83d0, 0xf4e, 0x1, 0x1);
        gbc.writeMem(0xad1b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xf9c0, gbc.sp());
        EXPECT(0xad1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad1b));
        EXPECT(0xb8, gbc.readMem(0xad1c));
        // CB B8 0236
        gbc.setState(0x4d8d, 0x7d1c, 0xb6b0, 0x8d6c, 0x63c, 0x628e, 0x0, 0x0);
        gbc.writeMem(0x4d8d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7d1c, gbc.sp());
        EXPECT(0x4d8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0237
        gbc.setState(0x9729, 0x22e5, 0xb020, 0x1c8b, 0x41a0, 0x8204, 0x0, 0x0);
        gbc.writeMem(0x9729, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x22e5, gbc.sp());
        EXPECT(0x972b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9729));
        EXPECT(0xb8, gbc.readMem(0x972a));
        // CB B8 0238
        gbc.setState(0xd687, 0xa12c, 0xd1c0, 0x5686, 0xbd1d, 0x822e, 0x1, 0x0);
        gbc.writeMem(0xd687, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa12c, gbc.sp());
        EXPECT(0xd689, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd687));
        EXPECT(0xb8, gbc.readMem(0xd688));
        // CB B8 0239
        gbc.setState(0x25c4, 0x4265, 0xd0, 0x63b0, 0xf652, 0x94ce, 0x0, 0x1);
        gbc.writeMem(0x25c4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4265, gbc.sp());
        EXPECT(0x25c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 023C
        gbc.setState(0xd1ad, 0x8d41, 0xaf90, 0xfca5, 0x556d, 0x7d2f, 0x1, 0x0);
        gbc.writeMem(0xd1ad, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x8d41, gbc.sp());
        EXPECT(0xd1af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ad));
        EXPECT(0xb8, gbc.readMem(0xd1ae));
        // CB B8 023D
        gbc.setState(0xed83, 0x9716, 0x47a0, 0xed8e, 0x6335, 0xf734, 0x0, 0x0);
        gbc.writeMem(0xed83, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9716, gbc.sp());
        EXPECT(0xed85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed83));
        EXPECT(0xb8, gbc.readMem(0xed84));
        // CB B8 023E
        gbc.setState(0xd05f, 0x3d5a, 0x32f0, 0x39cf, 0x35f8, 0xf01a, 0x1, 0x1);
        gbc.writeMem(0xd05f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3d5a, gbc.sp());
        EXPECT(0xd061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd05f));
        EXPECT(0xb8, gbc.readMem(0xd060));
        // CB B8 023F
        gbc.setState(0xe3a9, 0xa432, 0xdcd0, 0xe02d, 0xd0f4, 0x6f6f, 0x1, 0x0);
        gbc.writeMem(0xe3a9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa432, gbc.sp());
        EXPECT(0xe3ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3a9));
        EXPECT(0xb8, gbc.readMem(0xe3aa));
        // CB B8 0240
        gbc.setState(0xeedb, 0xf2c8, 0x1320, 0x97e1, 0x5276, 0x62b2, 0x0, 0x1);
        gbc.writeMem(0xeedb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf2c8, gbc.sp());
        EXPECT(0xeedd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeedb));
        EXPECT(0xb8, gbc.readMem(0xeedc));
        // CB B8 0241
        gbc.setState(0x44c6, 0xe78f, 0x3f0, 0x7f21, 0x669b, 0x562c, 0x0, 0x0);
        gbc.writeMem(0x44c6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe78f, gbc.sp());
        EXPECT(0x44c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0242
        gbc.setState(0xdbef, 0xdbf6, 0xc810, 0x3b25, 0x611e, 0x269, 0x1, 0x0);
        gbc.writeMem(0xdbef, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdbf6, gbc.sp());
        EXPECT(0xdbf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbef));
        EXPECT(0xb8, gbc.readMem(0xdbf0));
        // CB B8 0243
        gbc.setState(0x1def, 0xa85, 0xaac0, 0x42f5, 0xf31a, 0xfad4, 0x1, 0x1);
        gbc.writeMem(0x1def, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa85, gbc.sp());
        EXPECT(0x1df1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0244
        gbc.setState(0x4a1d, 0x7d3e, 0x2cd0, 0x33c9, 0x90a1, 0x7bab, 0x0, 0x1);
        gbc.writeMem(0x4a1d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7d3e, gbc.sp());
        EXPECT(0x4a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0246
        gbc.setState(0x6264, 0x6c50, 0xb7a0, 0x950, 0x3131, 0xad5c, 0x0, 0x1);
        gbc.writeMem(0x6264, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6c50, gbc.sp());
        EXPECT(0x6266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0247
        gbc.setState(0x7d94, 0xef52, 0x8c60, 0x110f, 0xa589, 0xb27c, 0x0, 0x0);
        gbc.writeMem(0x7d94, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xef52, gbc.sp());
        EXPECT(0x7d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0249
        gbc.setState(0x82d4, 0xddfa, 0x8d10, 0xab27, 0xcb46, 0x6bd7, 0x0, 0x1);
        gbc.writeMem(0x82d4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xddfa, gbc.sp());
        EXPECT(0x82d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82d4));
        EXPECT(0xb8, gbc.readMem(0x82d5));
        // CB B8 024A
        gbc.setState(0xa67a, 0x3062, 0xe350, 0x8eb1, 0xd471, 0xd49c, 0x0, 0x1);
        gbc.writeMem(0xa67a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3062, gbc.sp());
        EXPECT(0xa67c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa67a));
        EXPECT(0xb8, gbc.readMem(0xa67b));
        // CB B8 024C
        gbc.setState(0xc58, 0x8891, 0xa660, 0x9d50, 0xc34e, 0x2819, 0x0, 0x1);
        gbc.writeMem(0xc58, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8891, gbc.sp());
        EXPECT(0xc5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 024D
        gbc.setState(0xbb19, 0x3952, 0xdbe0, 0x5f8d, 0x3da0, 0xc72, 0x0, 0x0);
        gbc.writeMem(0xbb19, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3952, gbc.sp());
        EXPECT(0xbb1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb19));
        EXPECT(0xb8, gbc.readMem(0xbb1a));
        // CB B8 024E
        gbc.setState(0x4c7c, 0x462, 0x2740, 0xa6a0, 0x51c0, 0xfdf2, 0x0, 0x1);
        gbc.writeMem(0x4c7c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x462, gbc.sp());
        EXPECT(0x4c7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0250
        gbc.setState(0x84, 0xf68e, 0xe920, 0x46f7, 0xec9d, 0xaf0a, 0x1, 0x1);
        gbc.writeMem(0x84, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf68e, gbc.sp());
        EXPECT(0x86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0251
        gbc.setState(0x98d9, 0x1355, 0xc1b0, 0x7668, 0xbe56, 0x70ca, 0x1, 0x0);
        gbc.writeMem(0x98d9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x1355, gbc.sp());
        EXPECT(0x98db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d9));
        EXPECT(0xb8, gbc.readMem(0x98da));
        // CB B8 0252
        gbc.setState(0x3840, 0x845a, 0xda20, 0x9c35, 0x6c6, 0xaab2, 0x0, 0x0);
        gbc.writeMem(0x3840, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x845a, gbc.sp());
        EXPECT(0x3842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0253
        gbc.setState(0xd42e, 0x4a84, 0x3010, 0x9ab0, 0xbec6, 0x83bc, 0x0, 0x0);
        gbc.writeMem(0xd42e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4a84, gbc.sp());
        EXPECT(0xd430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd42e));
        EXPECT(0xb8, gbc.readMem(0xd42f));
        // CB B8 0254
        gbc.setState(0x5e2f, 0x6bb1, 0xd080, 0x3a1a, 0x6838, 0xdf4b, 0x1, 0x0);
        gbc.writeMem(0x5e2f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x6bb1, gbc.sp());
        EXPECT(0x5e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0255
        gbc.setState(0xcb7c, 0x8e32, 0xc0f0, 0xa16d, 0x2aa3, 0x5b1f, 0x1, 0x0);
        gbc.writeMem(0xcb7c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8e32, gbc.sp());
        EXPECT(0xcb7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb7c));
        EXPECT(0xb8, gbc.readMem(0xcb7d));
        // CB B8 0257
        gbc.setState(0x5711, 0x296e, 0x6e90, 0xb582, 0xa3a5, 0x4099, 0x0, 0x0);
        gbc.writeMem(0x5711, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x296e, gbc.sp());
        EXPECT(0x5713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0258
        gbc.setState(0xacd9, 0x54c3, 0x5ca0, 0x4ee8, 0xa17e, 0xd0c5, 0x1, 0x1);
        gbc.writeMem(0xacd9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x54c3, gbc.sp());
        EXPECT(0xacdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd9));
        EXPECT(0xb8, gbc.readMem(0xacda));
        // CB B8 025A
        gbc.setState(0x7f18, 0x84d9, 0x5990, 0x437a, 0x5226, 0x4a10, 0x1, 0x1);
        gbc.writeMem(0x7f18, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x84d9, gbc.sp());
        EXPECT(0x7f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 025B
        gbc.setState(0x1f9f, 0x3ba3, 0x1790, 0xaa61, 0xc143, 0xacee, 0x0, 0x0);
        gbc.writeMem(0x1f9f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3ba3, gbc.sp());
        EXPECT(0x1fa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 025D
        gbc.setState(0x7e57, 0x209f, 0xe320, 0x362b, 0xd60b, 0x6aa4, 0x0, 0x1);
        gbc.writeMem(0x7e57, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x209f, gbc.sp());
        EXPECT(0x7e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 025E
        gbc.setState(0xbce1, 0x3ee5, 0x3f00, 0x6329, 0xc465, 0x7edd, 0x0, 0x1);
        gbc.writeMem(0xbce1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3ee5, gbc.sp());
        EXPECT(0xbce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbce1));
        EXPECT(0xb8, gbc.readMem(0xbce2));
        // CB B8 025F
        gbc.setState(0x3ce6, 0xcc15, 0x5280, 0xb971, 0x5c43, 0x4a15, 0x0, 0x1);
        gbc.writeMem(0x3ce6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcc15, gbc.sp());
        EXPECT(0x3ce8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0260
        gbc.setState(0x3aab, 0x4a7e, 0xcc50, 0xca8d, 0x1b00, 0xb281, 0x0, 0x1);
        gbc.writeMem(0x3aab, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4a7e, gbc.sp());
        EXPECT(0x3aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0261
        gbc.setState(0x877b, 0xeb87, 0x13c0, 0xcc35, 0x8362, 0xc394, 0x0, 0x1);
        gbc.writeMem(0x877b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xeb87, gbc.sp());
        EXPECT(0x877d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x877b));
        EXPECT(0xb8, gbc.readMem(0x877c));
        // CB B8 0262
        gbc.setState(0x6180, 0xba5e, 0x5ce0, 0x808b, 0x1b39, 0xf895, 0x1, 0x0);
        gbc.writeMem(0x6180, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xba5e, gbc.sp());
        EXPECT(0x6182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0264
        gbc.setState(0xbf45, 0xb5d3, 0x2990, 0xdcea, 0xd45a, 0x403a, 0x1, 0x1);
        gbc.writeMem(0xbf45, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb5d3, gbc.sp());
        EXPECT(0xbf47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf45));
        EXPECT(0xb8, gbc.readMem(0xbf46));
        // CB B8 0265
        gbc.setState(0x1407, 0x9e3c, 0x2660, 0x9037, 0x6d0, 0xb04c, 0x1, 0x1);
        gbc.writeMem(0x1407, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x9e3c, gbc.sp());
        EXPECT(0x1409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0266
        gbc.setState(0x67b9, 0x9385, 0x4890, 0x853, 0xfdac, 0x3381, 0x0, 0x1);
        gbc.writeMem(0x67b9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9385, gbc.sp());
        EXPECT(0x67bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0267
        gbc.setState(0x9d8e, 0x3d10, 0xb730, 0x8c2b, 0x693e, 0x30a0, 0x1, 0x0);
        gbc.writeMem(0x9d8e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3d10, gbc.sp());
        EXPECT(0x9d90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d8e));
        EXPECT(0xb8, gbc.readMem(0x9d8f));
        // CB B8 0268
        gbc.setState(0xe034, 0x444e, 0xac40, 0x5e78, 0xaa88, 0x9ff0, 0x1, 0x1);
        gbc.writeMem(0xe034, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x444e, gbc.sp());
        EXPECT(0xe036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe034));
        EXPECT(0xb8, gbc.readMem(0xe035));
        // CB B8 0269
        gbc.setState(0x5a18, 0xa3b3, 0xacd0, 0x4d6c, 0x4a39, 0x1ae5, 0x1, 0x0);
        gbc.writeMem(0x5a18, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa3b3, gbc.sp());
        EXPECT(0x5a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 026A
        gbc.setState(0xd4fa, 0x5185, 0x2de0, 0x18e1, 0x78f1, 0x6106, 0x0, 0x0);
        gbc.writeMem(0xd4fa, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x5185, gbc.sp());
        EXPECT(0xd4fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4fa));
        EXPECT(0xb8, gbc.readMem(0xd4fb));
        // CB B8 026B
        gbc.setState(0x4b77, 0x62eb, 0xa540, 0x61a8, 0x8ea4, 0x800e, 0x0, 0x1);
        gbc.writeMem(0x4b77, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x62eb, gbc.sp());
        EXPECT(0x4b79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 026C
        gbc.setState(0x6575, 0x8f86, 0x3fe0, 0xb700, 0xea57, 0xd976, 0x0, 0x0);
        gbc.writeMem(0x6575, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8f86, gbc.sp());
        EXPECT(0x6577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 026D
        gbc.setState(0x36a7, 0xdfd2, 0xf730, 0x6cde, 0x8369, 0x8310, 0x1, 0x1);
        gbc.writeMem(0x36a7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xdfd2, gbc.sp());
        EXPECT(0x36a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 026F
        gbc.setState(0xb419, 0xcf57, 0x4d80, 0x347b, 0x8e30, 0x48af, 0x1, 0x1);
        gbc.writeMem(0xb419, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xcf57, gbc.sp());
        EXPECT(0xb41b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb419));
        EXPECT(0xb8, gbc.readMem(0xb41a));
        // CB B8 0270
        gbc.setState(0x25fd, 0x8c08, 0xd880, 0x7881, 0x325c, 0xb7f5, 0x0, 0x1);
        gbc.writeMem(0x25fd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8c08, gbc.sp());
        EXPECT(0x25ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0272
        gbc.setState(0xc9c1, 0x3820, 0x1790, 0xed50, 0xb867, 0x43a5, 0x0, 0x1);
        gbc.writeMem(0xc9c1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3820, gbc.sp());
        EXPECT(0xc9c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9c1));
        EXPECT(0xb8, gbc.readMem(0xc9c2));
        // CB B8 0273
        gbc.setState(0x861b, 0xc1c0, 0x7f50, 0xf001, 0x53e4, 0x2485, 0x0, 0x0);
        gbc.writeMem(0x861b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc1c0, gbc.sp());
        EXPECT(0x861d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x861b));
        EXPECT(0xb8, gbc.readMem(0x861c));
        // CB B8 0274
        gbc.setState(0x6f38, 0x3295, 0x7470, 0xcc16, 0x9c38, 0x794, 0x1, 0x0);
        gbc.writeMem(0x6f38, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3295, gbc.sp());
        EXPECT(0x6f3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0275
        gbc.setState(0x17cc, 0xd414, 0x73d0, 0xb043, 0xa9a4, 0xa5db, 0x1, 0x0);
        gbc.writeMem(0x17cc, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xd414, gbc.sp());
        EXPECT(0x17ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0276
        gbc.setState(0x39a4, 0x9e90, 0xb310, 0xa293, 0x1e27, 0xead8, 0x1, 0x0);
        gbc.writeMem(0x39a4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x9e90, gbc.sp());
        EXPECT(0x39a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0277
        gbc.setState(0xcce0, 0xdeed, 0xf2a0, 0x999c, 0x1214, 0x656, 0x1, 0x1);
        gbc.writeMem(0xcce0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xdeed, gbc.sp());
        EXPECT(0xcce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcce0));
        EXPECT(0xb8, gbc.readMem(0xcce1));
        // CB B8 0278
        gbc.setState(0xe15a, 0x402e, 0x3d70, 0x7053, 0xde9b, 0x371f, 0x0, 0x1);
        gbc.writeMem(0xe15a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x402e, gbc.sp());
        EXPECT(0xe15c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15a));
        EXPECT(0xb8, gbc.readMem(0xe15b));
        // CB B8 0279
        gbc.setState(0xb79c, 0x5a84, 0x8cc0, 0x6fc4, 0xeef0, 0x4637, 0x0, 0x0);
        gbc.writeMem(0xb79c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x5a84, gbc.sp());
        EXPECT(0xb79e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79c));
        EXPECT(0xb8, gbc.readMem(0xb79d));
        // CB B8 027A
        gbc.setState(0x1252, 0xfedc, 0x5ec0, 0xbc2d, 0xf420, 0x400f, 0x1, 0x0);
        gbc.writeMem(0x1252, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfedc, gbc.sp());
        EXPECT(0x1254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 027B
        gbc.setState(0xa4b5, 0x4c7f, 0xcfc0, 0x2897, 0xb0b9, 0x23c6, 0x1, 0x0);
        gbc.writeMem(0xa4b5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x4c7f, gbc.sp());
        EXPECT(0xa4b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4b5));
        EXPECT(0xb8, gbc.readMem(0xa4b6));
        // CB B8 027D
        gbc.setState(0x4226, 0x8ccc, 0xd530, 0x93d1, 0xa513, 0x2578, 0x0, 0x0);
        gbc.writeMem(0x4226, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8ccc, gbc.sp());
        EXPECT(0x4228, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 027E
        gbc.setState(0x22e, 0xcc0a, 0xbf90, 0xb36a, 0xefab, 0xe827, 0x1, 0x0);
        gbc.writeMem(0x22e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xcc0a, gbc.sp());
        EXPECT(0x230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 027F
        gbc.setState(0xb96c, 0xeb41, 0x44a0, 0x17ca, 0xb731, 0x67d6, 0x0, 0x1);
        gbc.writeMem(0xb96c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xeb41, gbc.sp());
        EXPECT(0xb96e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96c));
        EXPECT(0xb8, gbc.readMem(0xb96d));
        // CB B8 0280
        gbc.setState(0xd7, 0xfefc, 0xedc0, 0xfff7, 0xf5e1, 0x138b, 0x1, 0x1);
        gbc.writeMem(0xd7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xfefc, gbc.sp());
        EXPECT(0xd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0281
        gbc.setState(0xb6b1, 0xc59c, 0x49b0, 0xa615, 0x765f, 0x351a, 0x1, 0x1);
        gbc.writeMem(0xb6b1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xc59c, gbc.sp());
        EXPECT(0xb6b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6b1));
        EXPECT(0xb8, gbc.readMem(0xb6b2));
        // CB B8 0282
        gbc.setState(0x8d5e, 0x4d12, 0xbbb0, 0x57f6, 0x4577, 0xedf6, 0x1, 0x0);
        gbc.writeMem(0x8d5e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4d12, gbc.sp());
        EXPECT(0x8d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d5e));
        EXPECT(0xb8, gbc.readMem(0x8d5f));
        // CB B8 0283
        gbc.setState(0x8ff4, 0xeff, 0x1ab0, 0xdd18, 0xc6f3, 0xcdb3, 0x0, 0x1);
        gbc.writeMem(0x8ff4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xeff, gbc.sp());
        EXPECT(0x8ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ff4));
        EXPECT(0xb8, gbc.readMem(0x8ff5));
        // CB B8 0284
        gbc.setState(0x7ea2, 0xb091, 0xb9b0, 0x37aa, 0xe86d, 0x8b9a, 0x1, 0x0);
        gbc.writeMem(0x7ea2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb091, gbc.sp());
        EXPECT(0x7ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0285
        gbc.setState(0x1fa3, 0xbea1, 0xf70, 0x69ce, 0x1b2d, 0xbc2e, 0x0, 0x0);
        gbc.writeMem(0x1fa3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbea1, gbc.sp());
        EXPECT(0x1fa5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0286
        gbc.setState(0x5101, 0x354b, 0xb430, 0x83ed, 0xd1b0, 0x708a, 0x1, 0x1);
        gbc.writeMem(0x5101, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x354b, gbc.sp());
        EXPECT(0x5103, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0287
        gbc.setState(0xc44d, 0x9f34, 0x1c60, 0xf057, 0x213, 0x105b, 0x1, 0x1);
        gbc.writeMem(0xc44d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9f34, gbc.sp());
        EXPECT(0xc44f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc44d));
        EXPECT(0xb8, gbc.readMem(0xc44e));
        // CB B8 0288
        gbc.setState(0xc503, 0x3580, 0x8d00, 0x6ad8, 0xd464, 0x94b, 0x0, 0x0);
        gbc.writeMem(0xc503, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3580, gbc.sp());
        EXPECT(0xc505, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc503));
        EXPECT(0xb8, gbc.readMem(0xc504));
        // CB B8 028A
        gbc.setState(0x7e13, 0x7157, 0xee10, 0xa796, 0x5d9a, 0x12c, 0x1, 0x1);
        gbc.writeMem(0x7e13, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7157, gbc.sp());
        EXPECT(0x7e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 028B
        gbc.setState(0xd868, 0xa3b2, 0x7610, 0xfca4, 0x6286, 0x1977, 0x1, 0x0);
        gbc.writeMem(0xd868, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa3b2, gbc.sp());
        EXPECT(0xd86a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd868));
        EXPECT(0xb8, gbc.readMem(0xd869));
        // CB B8 028C
        gbc.setState(0x8c4a, 0x7096, 0xc830, 0xc0d9, 0x9d54, 0x4f34, 0x1, 0x1);
        gbc.writeMem(0x8c4a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x7096, gbc.sp());
        EXPECT(0x8c4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c4a));
        EXPECT(0xb8, gbc.readMem(0x8c4b));
        // CB B8 028D
        gbc.setState(0xc8ac, 0xde5e, 0x9930, 0x4e1, 0x7044, 0x399c, 0x0, 0x0);
        gbc.writeMem(0xc8ac, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xde5e, gbc.sp());
        EXPECT(0xc8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8ac));
        EXPECT(0xb8, gbc.readMem(0xc8ad));
        // CB B8 028E
        gbc.setState(0x90fe, 0x8f96, 0xf510, 0x69df, 0x3805, 0x2882, 0x0, 0x0);
        gbc.writeMem(0x90fe, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8f96, gbc.sp());
        EXPECT(0x9100, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90fe));
        EXPECT(0xb8, gbc.readMem(0x90ff));
        // CB B8 028F
        gbc.setState(0xb837, 0x5fba, 0xce90, 0x7168, 0x6443, 0x24bf, 0x1, 0x0);
        gbc.writeMem(0xb837, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x5fba, gbc.sp());
        EXPECT(0xb839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb837));
        EXPECT(0xb8, gbc.readMem(0xb838));
        // CB B8 0290
        gbc.setState(0x7c01, 0x8bde, 0x7510, 0xae40, 0xbd80, 0xdf0d, 0x1, 0x0);
        gbc.writeMem(0x7c01, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8bde, gbc.sp());
        EXPECT(0x7c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0291
        gbc.setState(0x4ddb, 0xa796, 0x1fe0, 0x6947, 0x97e3, 0x415c, 0x1, 0x0);
        gbc.writeMem(0x4ddb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa796, gbc.sp());
        EXPECT(0x4ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0293
        gbc.setState(0x2496, 0xe894, 0x3290, 0x7345, 0xaabe, 0x31ec, 0x0, 0x0);
        gbc.writeMem(0x2496, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xe894, gbc.sp());
        EXPECT(0x2498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0294
        gbc.setState(0xaa44, 0xdbfe, 0xb320, 0xbb59, 0xd8cb, 0x64ee, 0x0, 0x1);
        gbc.writeMem(0xaa44, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdbfe, gbc.sp());
        EXPECT(0xaa46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa44));
        EXPECT(0xb8, gbc.readMem(0xaa45));
        // CB B8 0295
        gbc.setState(0x1551, 0x9313, 0x9e40, 0x665c, 0xb2d6, 0x1e63, 0x1, 0x0);
        gbc.writeMem(0x1551, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x9313, gbc.sp());
        EXPECT(0x1553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0296
        gbc.setState(0x3c39, 0x6848, 0x2770, 0x6e7d, 0xe18a, 0x4a78, 0x0, 0x1);
        gbc.writeMem(0x3c39, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6848, gbc.sp());
        EXPECT(0x3c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0297
        gbc.setState(0x144f, 0xbfa7, 0xe9c0, 0x17ec, 0x38, 0x26ef, 0x1, 0x1);
        gbc.writeMem(0x144f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbfa7, gbc.sp());
        EXPECT(0x1451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0298
        gbc.setState(0x9732, 0xb31e, 0x9070, 0xaf, 0xbfbe, 0x383, 0x1, 0x0);
        gbc.writeMem(0x9732, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb31e, gbc.sp());
        EXPECT(0x9734, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9732));
        EXPECT(0xb8, gbc.readMem(0x9733));
        // CB B8 0299
        gbc.setState(0x504, 0xadf7, 0x99c0, 0x5422, 0x2e08, 0x756a, 0x0, 0x1);
        gbc.writeMem(0x504, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xadf7, gbc.sp());
        EXPECT(0x506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 029A
        gbc.setState(0x4299, 0x5061, 0xe50, 0x73bc, 0xbf97, 0xa625, 0x0, 0x1);
        gbc.writeMem(0x4299, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5061, gbc.sp());
        EXPECT(0x429b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 029B
        gbc.setState(0x5a5a, 0x45a2, 0x8510, 0x5ce7, 0x838b, 0x12b7, 0x1, 0x1);
        gbc.writeMem(0x5a5a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x45a2, gbc.sp());
        EXPECT(0x5a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 029C
        gbc.setState(0x3cb3, 0xda97, 0xb750, 0xfddd, 0x10b0, 0x9f9a, 0x1, 0x0);
        gbc.writeMem(0x3cb3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xda97, gbc.sp());
        EXPECT(0x3cb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 029E
        gbc.setState(0x8f61, 0x826f, 0xa690, 0x18a5, 0xb766, 0x97d2, 0x0, 0x1);
        gbc.writeMem(0x8f61, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x826f, gbc.sp());
        EXPECT(0x8f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f61));
        EXPECT(0xb8, gbc.readMem(0x8f62));
        // CB B8 029F
        gbc.setState(0xdbc3, 0xe937, 0x5da0, 0xd3ae, 0x33ed, 0x702, 0x0, 0x0);
        gbc.writeMem(0xdbc3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe937, gbc.sp());
        EXPECT(0xdbc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc3));
        EXPECT(0xb8, gbc.readMem(0xdbc4));
        // CB B8 02A0
        gbc.setState(0xbc83, 0xbf5c, 0xca80, 0x2d5f, 0xd29a, 0xb4bb, 0x1, 0x0);
        gbc.writeMem(0xbc83, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbf5c, gbc.sp());
        EXPECT(0xbc85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc83));
        EXPECT(0xb8, gbc.readMem(0xbc84));
        // CB B8 02A1
        gbc.setState(0x7ed2, 0xa78b, 0xcd60, 0x49af, 0x732, 0xf835, 0x0, 0x1);
        gbc.writeMem(0x7ed2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa78b, gbc.sp());
        EXPECT(0x7ed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02A2
        gbc.setState(0x78f5, 0x3ce6, 0xe9c0, 0x1b7c, 0xb10a, 0xc14b, 0x1, 0x0);
        gbc.writeMem(0x78f5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3ce6, gbc.sp());
        EXPECT(0x78f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02A3
        gbc.setState(0x71c3, 0x2816, 0x5e0, 0x1b05, 0x1192, 0xd3c8, 0x0, 0x0);
        gbc.writeMem(0x71c3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x2816, gbc.sp());
        EXPECT(0x71c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02A4
        gbc.setState(0x9dd0, 0x1bc0, 0x82f0, 0xc36d, 0xac70, 0xc9b0, 0x0, 0x1);
        gbc.writeMem(0x9dd0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1bc0, gbc.sp());
        EXPECT(0x9dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dd0));
        EXPECT(0xb8, gbc.readMem(0x9dd1));
        // CB B8 02A5
        gbc.setState(0x7735, 0xa2c3, 0x9630, 0x31d5, 0x7759, 0x8eac, 0x0, 0x0);
        gbc.writeMem(0x7735, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa2c3, gbc.sp());
        EXPECT(0x7737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02A6
        gbc.setState(0xd67e, 0x7219, 0x34b0, 0xf505, 0xccba, 0x997f, 0x1, 0x1);
        gbc.writeMem(0xd67e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7219, gbc.sp());
        EXPECT(0xd680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd67e));
        EXPECT(0xb8, gbc.readMem(0xd67f));
        // CB B8 02A7
        gbc.setState(0xc899, 0xcf34, 0x6200, 0xa0e6, 0x78ca, 0x12c7, 0x0, 0x1);
        gbc.writeMem(0xc899, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xcf34, gbc.sp());
        EXPECT(0xc89b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc899));
        EXPECT(0xb8, gbc.readMem(0xc89a));
        // CB B8 02A8
        gbc.setState(0x830c, 0x8dcb, 0x37b0, 0x993b, 0x6d6, 0xf75d, 0x0, 0x0);
        gbc.writeMem(0x830c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x8dcb, gbc.sp());
        EXPECT(0x830e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x830c));
        EXPECT(0xb8, gbc.readMem(0x830d));
        // CB B8 02A9
        gbc.setState(0xee10, 0x98cd, 0xcc30, 0x2848, 0x23b1, 0x8b00, 0x0, 0x0);
        gbc.writeMem(0xee10, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x98cd, gbc.sp());
        EXPECT(0xee12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee10));
        EXPECT(0xb8, gbc.readMem(0xee11));
        // CB B8 02AA
        gbc.setState(0x1412, 0x427f, 0xdc80, 0x5218, 0xbc25, 0xcd50, 0x1, 0x1);
        gbc.writeMem(0x1412, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x427f, gbc.sp());
        EXPECT(0x1414, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02AB
        gbc.setState(0x8291, 0x7450, 0xee60, 0xe05d, 0xf934, 0x5bf9, 0x0, 0x0);
        gbc.writeMem(0x8291, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7450, gbc.sp());
        EXPECT(0x8293, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8291));
        EXPECT(0xb8, gbc.readMem(0x8292));
        // CB B8 02AC
        gbc.setState(0x7a04, 0xcc17, 0x440, 0x8b33, 0x9850, 0xf617, 0x1, 0x0);
        gbc.writeMem(0x7a04, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xcc17, gbc.sp());
        EXPECT(0x7a06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02AD
        gbc.setState(0xee, 0xd781, 0x8d80, 0x1c85, 0x4812, 0xaef6, 0x0, 0x0);
        gbc.writeMem(0xee, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd781, gbc.sp());
        EXPECT(0xf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02AE
        gbc.setState(0x640e, 0x7ea3, 0x98e0, 0x378a, 0xe3d, 0x4ab7, 0x0, 0x0);
        gbc.writeMem(0x640e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7ea3, gbc.sp());
        EXPECT(0x6410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02AF
        gbc.setState(0x58f4, 0x9de6, 0x2b60, 0xbb30, 0xdf2b, 0x3b8b, 0x1, 0x1);
        gbc.writeMem(0x58f4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9de6, gbc.sp());
        EXPECT(0x58f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02B0
        gbc.setState(0x9a09, 0xb05, 0xcb40, 0x7cd2, 0x3b26, 0x8685, 0x1, 0x0);
        gbc.writeMem(0x9a09, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xb05, gbc.sp());
        EXPECT(0x9a0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a09));
        EXPECT(0xb8, gbc.readMem(0x9a0a));
        // CB B8 02B1
        gbc.setState(0x3e75, 0xe097, 0x280, 0x3d0f, 0xa2bc, 0xfc52, 0x0, 0x0);
        gbc.writeMem(0x3e75, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe097, gbc.sp());
        EXPECT(0x3e77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02B2
        gbc.setState(0xa80d, 0x97ca, 0x3520, 0x46d3, 0xaa6a, 0xd540, 0x0, 0x1);
        gbc.writeMem(0xa80d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x97ca, gbc.sp());
        EXPECT(0xa80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa80d));
        EXPECT(0xb8, gbc.readMem(0xa80e));
        // CB B8 02B3
        gbc.setState(0x6c7, 0xf210, 0xbfb0, 0x2b67, 0xc0c1, 0x5514, 0x1, 0x0);
        gbc.writeMem(0x6c7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf210, gbc.sp());
        EXPECT(0x6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02B4
        gbc.setState(0x1ac6, 0xdfae, 0x1dc0, 0xb565, 0xfad1, 0x7f5a, 0x0, 0x1);
        gbc.writeMem(0x1ac6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xdfae, gbc.sp());
        EXPECT(0x1ac8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02B5
        gbc.setState(0xdbc5, 0xb3ce, 0x7c80, 0xb409, 0x3c9a, 0x9204, 0x1, 0x0);
        gbc.writeMem(0xdbc5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb3ce, gbc.sp());
        EXPECT(0xdbc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc5));
        EXPECT(0xb8, gbc.readMem(0xdbc6));
        // CB B8 02B6
        gbc.setState(0xdaec, 0x6480, 0x2830, 0x75a0, 0x44ad, 0xbc87, 0x0, 0x0);
        gbc.writeMem(0xdaec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6480, gbc.sp());
        EXPECT(0xdaee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaec));
        EXPECT(0xb8, gbc.readMem(0xdaed));
        // CB B8 02B7
        gbc.setState(0x4480, 0xdc69, 0xf810, 0x9787, 0x672b, 0xa861, 0x0, 0x0);
        gbc.writeMem(0x4480, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xdc69, gbc.sp());
        EXPECT(0x4482, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02B8
        gbc.setState(0x6623, 0xa6b4, 0xf680, 0xd4c0, 0x9986, 0x4409, 0x1, 0x0);
        gbc.writeMem(0x6623, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa6b4, gbc.sp());
        EXPECT(0x6625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02B9
        gbc.setState(0x9cb0, 0x24f1, 0xf9b0, 0xc0d3, 0x5bb4, 0xcbe0, 0x0, 0x1);
        gbc.writeMem(0x9cb0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x24f1, gbc.sp());
        EXPECT(0x9cb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb0));
        EXPECT(0xb8, gbc.readMem(0x9cb1));
        // CB B8 02BA
        gbc.setState(0x7a3e, 0xba9c, 0x4060, 0x2571, 0x5e7d, 0x4f44, 0x0, 0x1);
        gbc.writeMem(0x7a3e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xba9c, gbc.sp());
        EXPECT(0x7a40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02BB
        gbc.setState(0x53ed, 0x5a6e, 0xf2a0, 0xea28, 0xdd60, 0x66ce, 0x0, 0x0);
        gbc.writeMem(0x53ed, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5a6e, gbc.sp());
        EXPECT(0x53ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02BC
        gbc.setState(0x857e, 0x2911, 0xc020, 0x6e4, 0x4235, 0xcdf0, 0x1, 0x0);
        gbc.writeMem(0x857e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2911, gbc.sp());
        EXPECT(0x8580, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x857e));
        EXPECT(0xb8, gbc.readMem(0x857f));
        // CB B8 02BD
        gbc.setState(0xa5bd, 0x17ad, 0xa3f0, 0xdc6, 0x8463, 0xb028, 0x1, 0x0);
        gbc.writeMem(0xa5bd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x17ad, gbc.sp());
        EXPECT(0xa5bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5bd));
        EXPECT(0xb8, gbc.readMem(0xa5be));
        // CB B8 02BE
        gbc.setState(0xd253, 0xfac5, 0x5ee0, 0xc9a9, 0x3f79, 0xaa60, 0x1, 0x0);
        gbc.writeMem(0xd253, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfac5, gbc.sp());
        EXPECT(0xd255, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd253));
        EXPECT(0xb8, gbc.readMem(0xd254));
        // CB B8 02BF
        gbc.setState(0x1150, 0xb6d4, 0xa190, 0x411a, 0xa5b1, 0xd45b, 0x0, 0x1);
        gbc.writeMem(0x1150, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xb6d4, gbc.sp());
        EXPECT(0x1152, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02C0
        gbc.setState(0xd55c, 0xa71d, 0xefb0, 0xc009, 0x9dac, 0xbc95, 0x1, 0x0);
        gbc.writeMem(0xd55c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xa71d, gbc.sp());
        EXPECT(0xd55e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd55c));
        EXPECT(0xb8, gbc.readMem(0xd55d));
        // CB B8 02C1
        gbc.setState(0x7a64, 0x5dae, 0xeed0, 0x3c20, 0x9a99, 0xcf59, 0x1, 0x0);
        gbc.writeMem(0x7a64, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5dae, gbc.sp());
        EXPECT(0x7a66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02C2
        gbc.setState(0x43b1, 0x6881, 0x2580, 0x7ffe, 0x2fd9, 0x95e9, 0x0, 0x0);
        gbc.writeMem(0x43b1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6881, gbc.sp());
        EXPECT(0x43b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02C3
        gbc.setState(0x24cb, 0x8aab, 0x33b0, 0x52d4, 0x2d1b, 0x5caf, 0x1, 0x0);
        gbc.writeMem(0x24cb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8aab, gbc.sp());
        EXPECT(0x24cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02C4
        gbc.setState(0x731c, 0x8166, 0x5300, 0x6dde, 0xeb6b, 0x5ade, 0x1, 0x1);
        gbc.writeMem(0x731c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8166, gbc.sp());
        EXPECT(0x731e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02C5
        gbc.setState(0x1950, 0xdf, 0x5cd0, 0x513e, 0xbb43, 0x23da, 0x0, 0x1);
        gbc.writeMem(0x1950, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdf, gbc.sp());
        EXPECT(0x1952, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02C6
        gbc.setState(0x81c8, 0xc22c, 0xf830, 0x9544, 0x21ff, 0x9ff0, 0x0, 0x1);
        gbc.writeMem(0x81c8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc22c, gbc.sp());
        EXPECT(0x81ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81c8));
        EXPECT(0xb8, gbc.readMem(0x81c9));
        // CB B8 02C7
        gbc.setState(0x4d9e, 0x8cdf, 0xc6b0, 0x6504, 0x4cfa, 0x3271, 0x1, 0x1);
        gbc.writeMem(0x4d9e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8cdf, gbc.sp());
        EXPECT(0x4da0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02C8
        gbc.setState(0x279f, 0x69c5, 0x9b30, 0x9c7b, 0xfa8a, 0xe328, 0x1, 0x0);
        gbc.writeMem(0x279f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x69c5, gbc.sp());
        EXPECT(0x27a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02C9
        gbc.setState(0xbea7, 0x7f8a, 0xe670, 0x5d46, 0x3b4a, 0xc6ba, 0x1, 0x0);
        gbc.writeMem(0xbea7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7f8a, gbc.sp());
        EXPECT(0xbea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea7));
        EXPECT(0xb8, gbc.readMem(0xbea8));
        // CB B8 02CA
        gbc.setState(0xdb4f, 0x9df1, 0xacd0, 0xff30, 0x59d7, 0xcad2, 0x0, 0x0);
        gbc.writeMem(0xdb4f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9df1, gbc.sp());
        EXPECT(0xdb51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb4f));
        EXPECT(0xb8, gbc.readMem(0xdb50));
        // CB B8 02CB
        gbc.setState(0x18e1, 0x4471, 0x160, 0x615a, 0x5487, 0xd368, 0x0, 0x0);
        gbc.writeMem(0x18e1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4471, gbc.sp());
        EXPECT(0x18e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02CC
        gbc.setState(0xe86f, 0x6277, 0xb5c0, 0xd96d, 0xaae7, 0xc7c2, 0x0, 0x0);
        gbc.writeMem(0xe86f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6277, gbc.sp());
        EXPECT(0xe871, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe86f));
        EXPECT(0xb8, gbc.readMem(0xe870));
        // CB B8 02CD
        gbc.setState(0x51c5, 0xc248, 0x6b0, 0x6c41, 0x60b3, 0xacc8, 0x1, 0x0);
        gbc.writeMem(0x51c5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc248, gbc.sp());
        EXPECT(0x51c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02CE
        gbc.setState(0xc1ec, 0x8b6b, 0x7c30, 0x3769, 0xa57e, 0x274, 0x1, 0x0);
        gbc.writeMem(0xc1ec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8b6b, gbc.sp());
        EXPECT(0xc1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ec));
        EXPECT(0xb8, gbc.readMem(0xc1ed));
        // CB B8 02CF
        gbc.setState(0x8b8e, 0xc985, 0x7a90, 0xc92b, 0x316a, 0x3ce1, 0x1, 0x1);
        gbc.writeMem(0x8b8e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc985, gbc.sp());
        EXPECT(0x8b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b8e));
        EXPECT(0xb8, gbc.readMem(0x8b8f));
        // CB B8 02D0
        gbc.setState(0x5ec5, 0xd261, 0x3190, 0x8e03, 0xb3ea, 0x92f9, 0x1, 0x1);
        gbc.writeMem(0x5ec5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd261, gbc.sp());
        EXPECT(0x5ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02D1
        gbc.setState(0x4e75, 0xb7cc, 0x4f20, 0xe1d, 0x59f2, 0x6dc0, 0x1, 0x0);
        gbc.writeMem(0x4e75, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb7cc, gbc.sp());
        EXPECT(0x4e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02D2
        gbc.setState(0x873d, 0x47c3, 0x6870, 0xf77e, 0xc19e, 0xba5b, 0x1, 0x0);
        gbc.writeMem(0x873d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x47c3, gbc.sp());
        EXPECT(0x873f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x873d));
        EXPECT(0xb8, gbc.readMem(0x873e));
        // CB B8 02D3
        gbc.setState(0xbbc8, 0x42e3, 0x62c0, 0xda35, 0x6b09, 0x2ac7, 0x1, 0x0);
        gbc.writeMem(0xbbc8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x42e3, gbc.sp());
        EXPECT(0xbbca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbc8));
        EXPECT(0xb8, gbc.readMem(0xbbc9));
        // CB B8 02D4
        gbc.setState(0x8441, 0x7fb4, 0x4280, 0xa654, 0xf5b7, 0x9d57, 0x0, 0x0);
        gbc.writeMem(0x8441, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x7fb4, gbc.sp());
        EXPECT(0x8443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8441));
        EXPECT(0xb8, gbc.readMem(0x8442));
        // CB B8 02D5
        gbc.setState(0x140f, 0xedfe, 0x1960, 0x610d, 0x920d, 0x5739, 0x1, 0x1);
        gbc.writeMem(0x140f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xedfe, gbc.sp());
        EXPECT(0x1411, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02D6
        gbc.setState(0xd10a, 0xfd44, 0x5b80, 0x5539, 0x50ef, 0x2a67, 0x0, 0x1);
        gbc.writeMem(0xd10a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfd44, gbc.sp());
        EXPECT(0xd10c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd10a));
        EXPECT(0xb8, gbc.readMem(0xd10b));
        // CB B8 02D7
        gbc.setState(0xc407, 0x92f7, 0x21b0, 0x1aa2, 0x5cbc, 0xf481, 0x0, 0x1);
        gbc.writeMem(0xc407, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x92f7, gbc.sp());
        EXPECT(0xc409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc407));
        EXPECT(0xb8, gbc.readMem(0xc408));
        // CB B8 02D8
        gbc.setState(0x14a2, 0xc4b5, 0xeef0, 0xc1f7, 0x2a60, 0xe498, 0x1, 0x1);
        gbc.writeMem(0x14a2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc4b5, gbc.sp());
        EXPECT(0x14a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02DA
        gbc.setState(0x80cb, 0x9750, 0x8e40, 0xf541, 0xdc78, 0xe09, 0x1, 0x1);
        gbc.writeMem(0x80cb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9750, gbc.sp());
        EXPECT(0x80cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80cb));
        EXPECT(0xb8, gbc.readMem(0x80cc));
        // CB B8 02DB
        gbc.setState(0x69ac, 0x3080, 0xa6e0, 0x726, 0xe2b, 0x60d2, 0x0, 0x0);
        gbc.writeMem(0x69ac, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3080, gbc.sp());
        EXPECT(0x69ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02DD
        gbc.setState(0xeb98, 0x9326, 0x4f0, 0xa252, 0xe1da, 0x351a, 0x0, 0x1);
        gbc.writeMem(0xeb98, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9326, gbc.sp());
        EXPECT(0xeb9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb98));
        EXPECT(0xb8, gbc.readMem(0xeb99));
        // CB B8 02DE
        gbc.setState(0xd0ea, 0xe735, 0x4240, 0xfc7d, 0x7a1e, 0xcd1c, 0x1, 0x0);
        gbc.writeMem(0xd0ea, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xe735, gbc.sp());
        EXPECT(0xd0ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ea));
        EXPECT(0xb8, gbc.readMem(0xd0eb));
        // CB B8 02DF
        gbc.setState(0x79d8, 0xf765, 0x87f0, 0xe7e9, 0x594, 0xb1d6, 0x0, 0x1);
        gbc.writeMem(0x79d8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xf765, gbc.sp());
        EXPECT(0x79da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02E0
        gbc.setState(0x2977, 0x8eb1, 0x2130, 0x5cef, 0xdab3, 0xe54, 0x1, 0x0);
        gbc.writeMem(0x2977, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x8eb1, gbc.sp());
        EXPECT(0x2979, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02E1
        gbc.setState(0x7885, 0xca76, 0xf610, 0xec5b, 0xd6ef, 0x6838, 0x0, 0x1);
        gbc.writeMem(0x7885, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xca76, gbc.sp());
        EXPECT(0x7887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02E2
        gbc.setState(0x5268, 0x349f, 0xc580, 0xeb28, 0x599f, 0x4a1d, 0x1, 0x1);
        gbc.writeMem(0x5268, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x349f, gbc.sp());
        EXPECT(0x526a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02E3
        gbc.setState(0x5b65, 0x929c, 0x9990, 0x1de0, 0xfe3c, 0x9a1c, 0x0, 0x1);
        gbc.writeMem(0x5b65, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x929c, gbc.sp());
        EXPECT(0x5b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02E4
        gbc.setState(0xbe43, 0x5419, 0x5cd0, 0x66f7, 0x98f0, 0x218d, 0x0, 0x0);
        gbc.writeMem(0xbe43, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5419, gbc.sp());
        EXPECT(0xbe45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe43));
        EXPECT(0xb8, gbc.readMem(0xbe44));
        // CB B8 02E5
        gbc.setState(0xe1f9, 0x866b, 0xc00, 0xa4cb, 0xf3ba, 0xf833, 0x1, 0x1);
        gbc.writeMem(0xe1f9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x866b, gbc.sp());
        EXPECT(0xe1fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1f9));
        EXPECT(0xb8, gbc.readMem(0xe1fa));
        // CB B8 02E6
        gbc.setState(0xc364, 0xee47, 0xd0, 0x5252, 0x84a1, 0x477d, 0x0, 0x1);
        gbc.writeMem(0xc364, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xee47, gbc.sp());
        EXPECT(0xc366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc364));
        EXPECT(0xb8, gbc.readMem(0xc365));
        // CB B8 02E7
        gbc.setState(0xcbe0, 0x800c, 0xcd10, 0x830a, 0x6501, 0x4533, 0x0, 0x0);
        gbc.writeMem(0xcbe0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x800c, gbc.sp());
        EXPECT(0xcbe2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe0));
        EXPECT(0xb8, gbc.readMem(0xcbe1));
        // CB B8 02E8
        gbc.setState(0x7192, 0x91d3, 0x2490, 0x7601, 0x4176, 0x39e6, 0x1, 0x0);
        gbc.writeMem(0x7192, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x91d3, gbc.sp());
        EXPECT(0x7194, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02E9
        gbc.setState(0x7fe4, 0x74a8, 0xd840, 0xce4, 0x2fd1, 0x5faa, 0x1, 0x0);
        gbc.writeMem(0x7fe4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x74a8, gbc.sp());
        EXPECT(0x7fe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02EA
        gbc.setState(0xd297, 0x9c78, 0x9900, 0x919a, 0x3dfc, 0x75b5, 0x1, 0x0);
        gbc.writeMem(0xd297, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9c78, gbc.sp());
        EXPECT(0xd299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd297));
        EXPECT(0xb8, gbc.readMem(0xd298));
        // CB B8 02EB
        gbc.setState(0x3aec, 0x1ef8, 0xfa80, 0xd8a, 0x4014, 0xce3, 0x0, 0x0);
        gbc.writeMem(0x3aec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x1ef8, gbc.sp());
        EXPECT(0x3aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02EC
        gbc.setState(0x82fd, 0x97e3, 0x3090, 0x37e0, 0xf5c2, 0xe8ad, 0x0, 0x0);
        gbc.writeMem(0x82fd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x97e3, gbc.sp());
        EXPECT(0x82ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82fd));
        EXPECT(0xb8, gbc.readMem(0x82fe));
        // CB B8 02ED
        gbc.setState(0x6964, 0xa319, 0x9510, 0x9771, 0xc391, 0x8f7c, 0x0, 0x0);
        gbc.writeMem(0x6964, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa319, gbc.sp());
        EXPECT(0x6966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02EE
        gbc.setState(0x6527, 0xaa24, 0xae10, 0x6187, 0xd9c7, 0x205, 0x1, 0x1);
        gbc.writeMem(0x6527, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaa24, gbc.sp());
        EXPECT(0x6529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02EF
        gbc.setState(0x5c1d, 0xebd, 0xddf0, 0x4543, 0x417a, 0x9bcc, 0x1, 0x0);
        gbc.writeMem(0x5c1d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xebd, gbc.sp());
        EXPECT(0x5c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02F0
        gbc.setState(0x1b6, 0x3c78, 0xba70, 0x701d, 0xa61c, 0x6c75, 0x1, 0x0);
        gbc.writeMem(0x1b6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3c78, gbc.sp());
        EXPECT(0x1b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02F1
        gbc.setState(0x15e7, 0x4a50, 0xd4a0, 0x1e57, 0xb154, 0xd01b, 0x1, 0x0);
        gbc.writeMem(0x15e7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4a50, gbc.sp());
        EXPECT(0x15e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02F2
        gbc.setState(0x1622, 0x3c41, 0xbda0, 0x600a, 0x9fcc, 0xae64, 0x0, 0x1);
        gbc.writeMem(0x1622, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3c41, gbc.sp());
        EXPECT(0x1624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02F3
        gbc.setState(0x5362, 0x273, 0xf480, 0x59d2, 0x39d2, 0x5112, 0x1, 0x1);
        gbc.writeMem(0x5362, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x273, gbc.sp());
        EXPECT(0x5364, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02F4
        gbc.setState(0xc59c, 0xe49, 0x52a0, 0x470a, 0xea2c, 0x65d1, 0x0, 0x0);
        gbc.writeMem(0xc59c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe49, gbc.sp());
        EXPECT(0xc59e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc59c));
        EXPECT(0xb8, gbc.readMem(0xc59d));
        // CB B8 02F5
        gbc.setState(0x6641, 0x771b, 0x4d80, 0xf015, 0x84b3, 0x67d1, 0x1, 0x0);
        gbc.writeMem(0x6641, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x771b, gbc.sp());
        EXPECT(0x6643, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02F6
        gbc.setState(0xbe0c, 0x3ef0, 0x53b0, 0xf62b, 0x2829, 0x2135, 0x0, 0x0);
        gbc.writeMem(0xbe0c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3ef0, gbc.sp());
        EXPECT(0xbe0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe0c));
        EXPECT(0xb8, gbc.readMem(0xbe0d));
        // CB B8 02F7
        gbc.setState(0xe511, 0x179c, 0x91e0, 0x1a0, 0xd449, 0xf284, 0x1, 0x0);
        gbc.writeMem(0xe511, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x179c, gbc.sp());
        EXPECT(0xe513, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe511));
        EXPECT(0xb8, gbc.readMem(0xe512));
        // CB B8 02F8
        gbc.setState(0x5a6, 0xb1f, 0xdc60, 0xa6fa, 0x2252, 0x59e7, 0x1, 0x1);
        gbc.writeMem(0x5a6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xb1f, gbc.sp());
        EXPECT(0x5a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02F9
        gbc.setState(0x1e8f, 0x8686, 0xbb00, 0x881e, 0x83ed, 0x67c8, 0x0, 0x0);
        gbc.writeMem(0x1e8f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8686, gbc.sp());
        EXPECT(0x1e91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02FA
        gbc.setState(0x76a5, 0xd605, 0xb1c0, 0xe4e, 0x7740, 0x6f01, 0x1, 0x1);
        gbc.writeMem(0x76a5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd605, gbc.sp());
        EXPECT(0x76a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02FB
        gbc.setState(0xa3ef, 0x60d7, 0xf7a0, 0xc463, 0x3de4, 0xb227, 0x1, 0x1);
        gbc.writeMem(0xa3ef, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x60d7, gbc.sp());
        EXPECT(0xa3f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ef));
        EXPECT(0xb8, gbc.readMem(0xa3f0));
        // CB B8 02FC
        gbc.setState(0x9c38, 0xb045, 0x7eb0, 0x8460, 0x5254, 0xff9f, 0x0, 0x1);
        gbc.writeMem(0x9c38, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb045, gbc.sp());
        EXPECT(0x9c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c38));
        EXPECT(0xb8, gbc.readMem(0x9c39));
        // CB B8 02FD
        gbc.setState(0x5603, 0x6564, 0x80e0, 0x45d4, 0xd21, 0x8ebe, 0x0, 0x0);
        gbc.writeMem(0x5603, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x6564, gbc.sp());
        EXPECT(0x5605, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 02FE
        gbc.setState(0x42f3, 0x25d3, 0x7cd0, 0x94c0, 0xfd7e, 0x1fa6, 0x1, 0x0);
        gbc.writeMem(0x42f3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x25d3, gbc.sp());
        EXPECT(0x42f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 02FF
        gbc.setState(0x4e89, 0x391f, 0xb050, 0x78e9, 0x5d87, 0xc309, 0x0, 0x1);
        gbc.writeMem(0x4e89, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x391f, gbc.sp());
        EXPECT(0x4e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0300
        gbc.setState(0xb316, 0xfb5, 0x74e0, 0x7e23, 0x85d8, 0xfd26, 0x1, 0x0);
        gbc.writeMem(0xb316, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xfb5, gbc.sp());
        EXPECT(0xb318, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb316));
        EXPECT(0xb8, gbc.readMem(0xb317));
        // CB B8 0301
        gbc.setState(0xb90e, 0x4cdd, 0x990, 0x1d7f, 0x6930, 0x1624, 0x0, 0x0);
        gbc.writeMem(0xb90e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4cdd, gbc.sp());
        EXPECT(0xb910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb90e));
        EXPECT(0xb8, gbc.readMem(0xb90f));
        // CB B8 0302
        gbc.setState(0xab84, 0x7aec, 0xa210, 0x1050, 0x2d1a, 0x4bc3, 0x1, 0x0);
        gbc.writeMem(0xab84, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x7aec, gbc.sp());
        EXPECT(0xab86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab84));
        EXPECT(0xb8, gbc.readMem(0xab85));
        // CB B8 0303
        gbc.setState(0xc1c6, 0x4b42, 0x8e40, 0x3e52, 0xb478, 0x368a, 0x1, 0x1);
        gbc.writeMem(0xc1c6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4b42, gbc.sp());
        EXPECT(0xc1c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1c6));
        EXPECT(0xb8, gbc.readMem(0xc1c7));
        // CB B8 0306
        gbc.setState(0x5d63, 0xfc29, 0x19d0, 0x9e62, 0x1cfc, 0xe784, 0x0, 0x0);
        gbc.writeMem(0x5d63, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xfc29, gbc.sp());
        EXPECT(0x5d65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0307
        gbc.setState(0x24b9, 0xddb6, 0x60f0, 0xff04, 0xd163, 0xc94a, 0x1, 0x0);
        gbc.writeMem(0x24b9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xddb6, gbc.sp());
        EXPECT(0x24bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0308
        gbc.setState(0x75de, 0x5adf, 0xf910, 0x87fd, 0xd612, 0xc5e2, 0x1, 0x1);
        gbc.writeMem(0x75de, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5adf, gbc.sp());
        EXPECT(0x75e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0309
        gbc.setState(0x4000, 0x7b2e, 0x2630, 0x1d9e, 0x5b04, 0xc41c, 0x0, 0x1);
        gbc.writeMem(0x4000, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7b2e, gbc.sp());
        EXPECT(0x4002, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 030A
        gbc.setState(0x90d6, 0x196d, 0xae0, 0x15dc, 0xf96f, 0x9946, 0x0, 0x1);
        gbc.writeMem(0x90d6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x196d, gbc.sp());
        EXPECT(0x90d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d6));
        EXPECT(0xb8, gbc.readMem(0x90d7));
        // CB B8 030B
        gbc.setState(0x538b, 0xe00c, 0xb980, 0x8629, 0xf23, 0xa0cb, 0x0, 0x0);
        gbc.writeMem(0x538b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe00c, gbc.sp());
        EXPECT(0x538d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 030C
        gbc.setState(0x56a0, 0x9594, 0x94e0, 0xcabe, 0x4421, 0x6f0e, 0x0, 0x1);
        gbc.writeMem(0x56a0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9594, gbc.sp());
        EXPECT(0x56a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 030D
        gbc.setState(0x90a1, 0xe715, 0xdac0, 0x7504, 0x9f8a, 0xad52, 0x0, 0x0);
        gbc.writeMem(0x90a1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe715, gbc.sp());
        EXPECT(0x90a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a1));
        EXPECT(0xb8, gbc.readMem(0x90a2));
        // CB B8 030E
        gbc.setState(0xbff, 0x5693, 0x8940, 0x4be9, 0x808a, 0x8972, 0x1, 0x1);
        gbc.writeMem(0xbff, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5693, gbc.sp());
        EXPECT(0xc01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 030F
        gbc.setState(0xd1cb, 0xe506, 0xc790, 0xc84d, 0xf3d4, 0x1d6a, 0x1, 0x0);
        gbc.writeMem(0xd1cb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe506, gbc.sp());
        EXPECT(0xd1cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1cb));
        EXPECT(0xb8, gbc.readMem(0xd1cc));
        // CB B8 0310
        gbc.setState(0xa94f, 0x59ff, 0xce40, 0x5d18, 0x61ea, 0x3f96, 0x0, 0x1);
        gbc.writeMem(0xa94f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x59ff, gbc.sp());
        EXPECT(0xa951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa94f));
        EXPECT(0xb8, gbc.readMem(0xa950));
        // CB B8 0311
        gbc.setState(0xd333, 0xedd7, 0xbba0, 0xc761, 0x3da0, 0xed2d, 0x0, 0x0);
        gbc.writeMem(0xd333, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xedd7, gbc.sp());
        EXPECT(0xd335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd333));
        EXPECT(0xb8, gbc.readMem(0xd334));
        // CB B8 0312
        gbc.setState(0xcd04, 0xb7e2, 0xc410, 0xfaca, 0xf01d, 0xa1e, 0x1, 0x1);
        gbc.writeMem(0xcd04, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xb7e2, gbc.sp());
        EXPECT(0xcd06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd04));
        EXPECT(0xb8, gbc.readMem(0xcd05));
        // CB B8 0313
        gbc.setState(0x50f4, 0xff2f, 0xf760, 0xe632, 0x24a, 0xefd5, 0x0, 0x0);
        gbc.writeMem(0x50f4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xff2f, gbc.sp());
        EXPECT(0x50f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0314
        gbc.setState(0x61e7, 0xd83c, 0x66b0, 0xc23d, 0x43a3, 0xba53, 0x1, 0x0);
        gbc.writeMem(0x61e7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd83c, gbc.sp());
        EXPECT(0x61e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0315
        gbc.setState(0xce37, 0x5e13, 0x27c0, 0xfa86, 0x2d44, 0x3a1b, 0x0, 0x0);
        gbc.writeMem(0xce37, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x5e13, gbc.sp());
        EXPECT(0xce39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce37));
        EXPECT(0xb8, gbc.readMem(0xce38));
        // CB B8 0316
        gbc.setState(0xa735, 0x38c, 0xdb30, 0x9534, 0x8acd, 0x4407, 0x1, 0x0);
        gbc.writeMem(0xa735, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x38c, gbc.sp());
        EXPECT(0xa737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa735));
        EXPECT(0xb8, gbc.readMem(0xa736));
        // CB B8 0317
        gbc.setState(0x6748, 0xae9e, 0x2180, 0xab1f, 0xdc64, 0x3d2f, 0x0, 0x0);
        gbc.writeMem(0x6748, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xae9e, gbc.sp());
        EXPECT(0x674a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0318
        gbc.setState(0xc479, 0xfc05, 0xf010, 0x1b3a, 0x81fb, 0x6fdf, 0x0, 0x1);
        gbc.writeMem(0xc479, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfc05, gbc.sp());
        EXPECT(0xc47b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc479));
        EXPECT(0xb8, gbc.readMem(0xc47a));
        // CB B8 0319
        gbc.setState(0xabe9, 0xa546, 0xf4a0, 0xee15, 0x758e, 0x1433, 0x0, 0x1);
        gbc.writeMem(0xabe9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa546, gbc.sp());
        EXPECT(0xabeb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe9));
        EXPECT(0xb8, gbc.readMem(0xabea));
        // CB B8 031A
        gbc.setState(0xca57, 0xd952, 0x9ec0, 0x2d96, 0x505e, 0xfe80, 0x0, 0x0);
        gbc.writeMem(0xca57, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xd952, gbc.sp());
        EXPECT(0xca59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca57));
        EXPECT(0xb8, gbc.readMem(0xca58));
        // CB B8 031B
        gbc.setState(0x12ec, 0xffd7, 0x8b90, 0x1e9c, 0x6dae, 0xa42d, 0x0, 0x1);
        gbc.writeMem(0x12ec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xffd7, gbc.sp());
        EXPECT(0x12ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 031C
        gbc.setState(0x977b, 0x9fdc, 0xb3a0, 0xf8bc, 0xad2d, 0x31ad, 0x1, 0x1);
        gbc.writeMem(0x977b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9fdc, gbc.sp());
        EXPECT(0x977d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x977b));
        EXPECT(0xb8, gbc.readMem(0x977c));
        // CB B8 031D
        gbc.setState(0x8148, 0xa957, 0x7ee0, 0x75bc, 0x36bb, 0x19df, 0x1, 0x1);
        gbc.writeMem(0x8148, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa957, gbc.sp());
        EXPECT(0x814a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8148));
        EXPECT(0xb8, gbc.readMem(0x8149));
        // CB B8 031E
        gbc.setState(0xd565, 0x1bd1, 0xdfb0, 0xdb02, 0x15d7, 0x1fae, 0x1, 0x1);
        gbc.writeMem(0xd565, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x1bd1, gbc.sp());
        EXPECT(0xd567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd565));
        EXPECT(0xb8, gbc.readMem(0xd566));
        // CB B8 031F
        gbc.setState(0x20b5, 0xfb8, 0x8e20, 0x6208, 0x4d69, 0xae9c, 0x1, 0x1);
        gbc.writeMem(0x20b5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfb8, gbc.sp());
        EXPECT(0x20b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0320
        gbc.setState(0x13e1, 0xf32d, 0xd70, 0x3570, 0x6364, 0x2fb8, 0x0, 0x0);
        gbc.writeMem(0x13e1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf32d, gbc.sp());
        EXPECT(0x13e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0321
        gbc.setState(0xccc4, 0xd462, 0x3cc0, 0xe5a4, 0x6aae, 0xdad3, 0x1, 0x0);
        gbc.writeMem(0xccc4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd462, gbc.sp());
        EXPECT(0xccc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccc4));
        EXPECT(0xb8, gbc.readMem(0xccc5));
        // CB B8 0322
        gbc.setState(0x53a5, 0x9792, 0xdee0, 0x4d61, 0xd0eb, 0x655e, 0x1, 0x0);
        gbc.writeMem(0x53a5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x9792, gbc.sp());
        EXPECT(0x53a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0323
        gbc.setState(0x9195, 0x87cd, 0x94f0, 0xb793, 0xf7d8, 0xd296, 0x1, 0x1);
        gbc.writeMem(0x9195, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x87cd, gbc.sp());
        EXPECT(0x9197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9195));
        EXPECT(0xb8, gbc.readMem(0x9196));
        // CB B8 0324
        gbc.setState(0x41b9, 0xa5af, 0x190, 0x9dd5, 0xcc28, 0xa306, 0x1, 0x0);
        gbc.writeMem(0x41b9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xa5af, gbc.sp());
        EXPECT(0x41bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0325
        gbc.setState(0x2645, 0xc35, 0xe4c0, 0xdee6, 0xa50, 0x4566, 0x1, 0x0);
        gbc.writeMem(0x2645, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc35, gbc.sp());
        EXPECT(0x2647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0326
        gbc.setState(0xdc95, 0x7580, 0x1360, 0x7b9e, 0x534, 0x6dab, 0x0, 0x0);
        gbc.writeMem(0xdc95, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x7580, gbc.sp());
        EXPECT(0xdc97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc95));
        EXPECT(0xb8, gbc.readMem(0xdc96));
        // CB B8 0327
        gbc.setState(0xec5, 0x96bb, 0x2250, 0x5f9b, 0x8eca, 0x5f37, 0x1, 0x1);
        gbc.writeMem(0xec5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x96bb, gbc.sp());
        EXPECT(0xec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0328
        gbc.setState(0xa58, 0xc6bf, 0x7c20, 0xe420, 0x4385, 0x76dd, 0x1, 0x1);
        gbc.writeMem(0xa58, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xc6bf, gbc.sp());
        EXPECT(0xa5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0329
        gbc.setState(0x37c9, 0x84df, 0x3330, 0x8e6c, 0x957f, 0xd42f, 0x1, 0x0);
        gbc.writeMem(0x37c9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x84df, gbc.sp());
        EXPECT(0x37cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 032A
        gbc.setState(0xbda7, 0xe3e9, 0x5f10, 0xb1d2, 0x838b, 0xc768, 0x1, 0x0);
        gbc.writeMem(0xbda7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xe3e9, gbc.sp());
        EXPECT(0xbda9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda7));
        EXPECT(0xb8, gbc.readMem(0xbda8));
        // CB B8 032B
        gbc.setState(0x2212, 0x453b, 0x7a80, 0xadeb, 0x3486, 0x3019, 0x0, 0x1);
        gbc.writeMem(0x2212, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x453b, gbc.sp());
        EXPECT(0x2214, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 032C
        gbc.setState(0x7524, 0xefba, 0xe8c0, 0x1828, 0x9b06, 0x2e8, 0x1, 0x0);
        gbc.writeMem(0x7524, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xefba, gbc.sp());
        EXPECT(0x7526, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 032D
        gbc.setState(0xef45, 0x565e, 0x9060, 0x111a, 0x3d8d, 0x42b5, 0x0, 0x1);
        gbc.writeMem(0xef45, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x565e, gbc.sp());
        EXPECT(0xef47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef45));
        EXPECT(0xb8, gbc.readMem(0xef46));
        // CB B8 032E
        gbc.setState(0xa571, 0xdbe5, 0xb3f0, 0x3758, 0x6962, 0x7748, 0x1, 0x1);
        gbc.writeMem(0xa571, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdbe5, gbc.sp());
        EXPECT(0xa573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa571));
        EXPECT(0xb8, gbc.readMem(0xa572));
        // CB B8 032F
        gbc.setState(0x5ad7, 0x6330, 0x3af0, 0x4ea2, 0x8696, 0xd06f, 0x0, 0x0);
        gbc.writeMem(0x5ad7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6330, gbc.sp());
        EXPECT(0x5ad9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0330
        gbc.setState(0xa167, 0x3166, 0xf1d0, 0x9bca, 0x3527, 0x5e34, 0x0, 0x0);
        gbc.writeMem(0xa167, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3166, gbc.sp());
        EXPECT(0xa169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa167));
        EXPECT(0xb8, gbc.readMem(0xa168));
        // CB B8 0331
        gbc.setState(0x59f7, 0x9d3d, 0x1a80, 0xed4d, 0x2be4, 0xaa27, 0x1, 0x0);
        gbc.writeMem(0x59f7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9d3d, gbc.sp());
        EXPECT(0x59f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0332
        gbc.setState(0x636d, 0x1df2, 0x6250, 0xc004, 0x147, 0xc991, 0x0, 0x1);
        gbc.writeMem(0x636d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x1df2, gbc.sp());
        EXPECT(0x636f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0333
        gbc.setState(0xb79b, 0x7371, 0x8440, 0x52aa, 0x1067, 0xef59, 0x0, 0x1);
        gbc.writeMem(0xb79b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x7371, gbc.sp());
        EXPECT(0xb79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb79b));
        EXPECT(0xb8, gbc.readMem(0xb79c));
        // CB B8 0334
        gbc.setState(0xd211, 0xcbd5, 0xe030, 0x51ea, 0x7d0d, 0x3b5, 0x0, 0x1);
        gbc.writeMem(0xd211, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xcbd5, gbc.sp());
        EXPECT(0xd213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd211));
        EXPECT(0xb8, gbc.readMem(0xd212));
        // CB B8 0335
        gbc.setState(0x3452, 0xc321, 0x9fe0, 0x9d91, 0x7a6f, 0xae59, 0x1, 0x1);
        gbc.writeMem(0x3452, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc321, gbc.sp());
        EXPECT(0x3454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0337
        gbc.setState(0x4f5f, 0x90a6, 0x5460, 0x5231, 0xf5b8, 0x4af7, 0x1, 0x0);
        gbc.writeMem(0x4f5f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x90a6, gbc.sp());
        EXPECT(0x4f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0338
        gbc.setState(0x8f4e, 0x5706, 0x1780, 0xaeec, 0xf13c, 0xa950, 0x1, 0x0);
        gbc.writeMem(0x8f4e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5706, gbc.sp());
        EXPECT(0x8f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f4e));
        EXPECT(0xb8, gbc.readMem(0x8f4f));
        // CB B8 0339
        gbc.setState(0x6c65, 0x911f, 0x1a00, 0xed3e, 0xf68a, 0x8e37, 0x0, 0x1);
        gbc.writeMem(0x6c65, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x911f, gbc.sp());
        EXPECT(0x6c67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 033A
        gbc.setState(0xdb9d, 0x32cd, 0x4380, 0xfa28, 0xcd8b, 0x700e, 0x0, 0x1);
        gbc.writeMem(0xdb9d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x32cd, gbc.sp());
        EXPECT(0xdb9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9d));
        EXPECT(0xb8, gbc.readMem(0xdb9e));
        // CB B8 033B
        gbc.setState(0x8f8f, 0x2fe0, 0xd0b0, 0x597d, 0x4652, 0xac21, 0x1, 0x0);
        gbc.writeMem(0x8f8f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2fe0, gbc.sp());
        EXPECT(0x8f91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f8f));
        EXPECT(0xb8, gbc.readMem(0x8f90));
        // CB B8 033C
        gbc.setState(0x73db, 0x125, 0xee10, 0xc6f8, 0x78b1, 0x16cf, 0x1, 0x1);
        gbc.writeMem(0x73db, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x125, gbc.sp());
        EXPECT(0x73dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 033D
        gbc.setState(0x2d0b, 0xb4ca, 0xabb0, 0x87d2, 0xbbff, 0xee8a, 0x0, 0x1);
        gbc.writeMem(0x2d0b, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb4ca, gbc.sp());
        EXPECT(0x2d0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 033E
        gbc.setState(0xc065, 0x60b5, 0x44b0, 0xfa5e, 0x7806, 0x9a23, 0x0, 0x0);
        gbc.writeMem(0xc065, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x60b5, gbc.sp());
        EXPECT(0xc067, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc065));
        EXPECT(0xb8, gbc.readMem(0xc066));
        // CB B8 033F
        gbc.setState(0x6f, 0x5958, 0x7490, 0xb758, 0x525c, 0xec8b, 0x1, 0x0);
        gbc.writeMem(0x6f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x5958, gbc.sp());
        EXPECT(0x71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0340
        gbc.setState(0x9a7d, 0x1fa2, 0xfdb0, 0x58f7, 0xcf49, 0x5ed6, 0x1, 0x0);
        gbc.writeMem(0x9a7d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x1fa2, gbc.sp());
        EXPECT(0x9a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a7d));
        EXPECT(0xb8, gbc.readMem(0x9a7e));
        // CB B8 0341
        gbc.setState(0x2f15, 0x16e8, 0x4800, 0xe546, 0xbcd4, 0x12bf, 0x1, 0x0);
        gbc.writeMem(0x2f15, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x16e8, gbc.sp());
        EXPECT(0x2f17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0342
        gbc.setState(0xb72c, 0x271, 0x1ba0, 0xd13d, 0xb85c, 0x64ee, 0x0, 0x0);
        gbc.writeMem(0xb72c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x271, gbc.sp());
        EXPECT(0xb72e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb72c));
        EXPECT(0xb8, gbc.readMem(0xb72d));
        // CB B8 0344
        gbc.setState(0xb571, 0x8076, 0x6a70, 0xb941, 0xd3ac, 0xc640, 0x1, 0x1);
        gbc.writeMem(0xb571, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8076, gbc.sp());
        EXPECT(0xb573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb571));
        EXPECT(0xb8, gbc.readMem(0xb572));
        // CB B8 0345
        gbc.setState(0x4a5d, 0x3e88, 0xf4d0, 0x9317, 0xe775, 0x5fa8, 0x1, 0x0);
        gbc.writeMem(0x4a5d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3e88, gbc.sp());
        EXPECT(0x4a5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0346
        gbc.setState(0xa061, 0x9b2e, 0x4830, 0x54e0, 0xebad, 0x3aa2, 0x0, 0x1);
        gbc.writeMem(0xa061, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9b2e, gbc.sp());
        EXPECT(0xa063, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa061));
        EXPECT(0xb8, gbc.readMem(0xa062));
        // CB B8 0347
        gbc.setState(0x4a7e, 0xe10a, 0x8dc0, 0x5af8, 0x6745, 0x8122, 0x1, 0x0);
        gbc.writeMem(0x4a7e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xe10a, gbc.sp());
        EXPECT(0x4a80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0348
        gbc.setState(0x4f62, 0x6cc2, 0x3e20, 0x5a46, 0xe1cf, 0xad87, 0x1, 0x1);
        gbc.writeMem(0x4f62, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6cc2, gbc.sp());
        EXPECT(0x4f64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0349
        gbc.setState(0x11b9, 0xacc3, 0xf3b0, 0x15b6, 0xc2c4, 0xc734, 0x0, 0x1);
        gbc.writeMem(0x11b9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xacc3, gbc.sp());
        EXPECT(0x11bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 034A
        gbc.setState(0x599a, 0xb179, 0xfee0, 0x6608, 0x46f0, 0x34e2, 0x1, 0x1);
        gbc.writeMem(0x599a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb179, gbc.sp());
        EXPECT(0x599c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 034B
        gbc.setState(0x8c95, 0x2c8b, 0x2780, 0x63a, 0x3653, 0xef48, 0x1, 0x1);
        gbc.writeMem(0x8c95, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2c8b, gbc.sp());
        EXPECT(0x8c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c95));
        EXPECT(0xb8, gbc.readMem(0x8c96));
        // CB B8 034C
        gbc.setState(0x1985, 0x1d7, 0x5b40, 0xbdce, 0x671a, 0x76c0, 0x0, 0x0);
        gbc.writeMem(0x1985, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x1d7, gbc.sp());
        EXPECT(0x1987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 034D
        gbc.setState(0x4c96, 0x97f6, 0x5db0, 0x1fba, 0x303f, 0x8a, 0x0, 0x0);
        gbc.writeMem(0x4c96, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x97f6, gbc.sp());
        EXPECT(0x4c98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 034E
        gbc.setState(0xac06, 0x4ed, 0x1fc0, 0xa7fa, 0x8a51, 0xef6a, 0x0, 0x1);
        gbc.writeMem(0xac06, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x4ed, gbc.sp());
        EXPECT(0xac08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac06));
        EXPECT(0xb8, gbc.readMem(0xac07));
        // CB B8 034F
        gbc.setState(0x8145, 0x2eb9, 0x92c0, 0x3938, 0x564e, 0xa9a0, 0x1, 0x0);
        gbc.writeMem(0x8145, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2eb9, gbc.sp());
        EXPECT(0x8147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8145));
        EXPECT(0xb8, gbc.readMem(0x8146));
        // CB B8 0350
        gbc.setState(0x6ec7, 0xa6bf, 0x4a00, 0x50c2, 0xa73e, 0x7c80, 0x0, 0x1);
        gbc.writeMem(0x6ec7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa6bf, gbc.sp());
        EXPECT(0x6ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0351
        gbc.setState(0x6b6f, 0x59e9, 0xf590, 0x279, 0xffe0, 0x5ae0, 0x1, 0x1);
        gbc.writeMem(0x6b6f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x59e9, gbc.sp());
        EXPECT(0x6b71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0352
        gbc.setState(0x2cbb, 0xbcb9, 0xc210, 0x790, 0x853e, 0xd6f7, 0x0, 0x0);
        gbc.writeMem(0x2cbb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xbcb9, gbc.sp());
        EXPECT(0x2cbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0353
        gbc.setState(0x432d, 0x24b3, 0x9220, 0xc187, 0xc126, 0x1688, 0x1, 0x1);
        gbc.writeMem(0x432d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x24b3, gbc.sp());
        EXPECT(0x432f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0354
        gbc.setState(0x86da, 0x930f, 0x8350, 0x57a1, 0x36cd, 0xd8ad, 0x0, 0x0);
        gbc.writeMem(0x86da, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x930f, gbc.sp());
        EXPECT(0x86dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86da));
        EXPECT(0xb8, gbc.readMem(0x86db));
        // CB B8 0355
        gbc.setState(0x9dee, 0xb33a, 0x4450, 0xb58e, 0xc560, 0x43d9, 0x0, 0x1);
        gbc.writeMem(0x9dee, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb33a, gbc.sp());
        EXPECT(0x9df0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dee));
        EXPECT(0xb8, gbc.readMem(0x9def));
        // CB B8 0356
        gbc.setState(0xcdbf, 0xf1f7, 0x7af0, 0x2f7e, 0xae8f, 0x6e1, 0x0, 0x0);
        gbc.writeMem(0xcdbf, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf1f7, gbc.sp());
        EXPECT(0xcdc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdbf));
        EXPECT(0xb8, gbc.readMem(0xcdc0));
        // CB B8 0357
        gbc.setState(0x607f, 0x674d, 0x3400, 0x3b42, 0x40ce, 0xe247, 0x1, 0x1);
        gbc.writeMem(0x607f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x674d, gbc.sp());
        EXPECT(0x6081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0359
        gbc.setState(0x9f37, 0x5575, 0x54b0, 0x1161, 0x1ada, 0xc12, 0x1, 0x1);
        gbc.writeMem(0x9f37, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x5575, gbc.sp());
        EXPECT(0x9f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f37));
        EXPECT(0xb8, gbc.readMem(0x9f38));
        // CB B8 035A
        gbc.setState(0x16a6, 0x7773, 0xa5f0, 0x94dd, 0xe751, 0xb438, 0x0, 0x0);
        gbc.writeMem(0x16a6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7773, gbc.sp());
        EXPECT(0x16a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 035B
        gbc.setState(0x218e, 0xbbf4, 0xd060, 0x5025, 0x90db, 0x486c, 0x0, 0x0);
        gbc.writeMem(0x218e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xbbf4, gbc.sp());
        EXPECT(0x2190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 035C
        gbc.setState(0x840d, 0x6b12, 0x15c0, 0xd256, 0x8a3a, 0xb926, 0x0, 0x0);
        gbc.writeMem(0x840d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6b12, gbc.sp());
        EXPECT(0x840f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840d));
        EXPECT(0xb8, gbc.readMem(0x840e));
        // CB B8 035D
        gbc.setState(0x23d, 0x45a4, 0xa130, 0x4497, 0x812f, 0x6018, 0x0, 0x1);
        gbc.writeMem(0x23d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x45a4, gbc.sp());
        EXPECT(0x23f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 035E
        gbc.setState(0xec1c, 0xa974, 0xdc10, 0x8371, 0x77ee, 0xf251, 0x1, 0x1);
        gbc.writeMem(0xec1c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa974, gbc.sp());
        EXPECT(0xec1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec1c));
        EXPECT(0xb8, gbc.readMem(0xec1d));
        // CB B8 035F
        gbc.setState(0x3ab, 0x820c, 0xb920, 0x6ca2, 0xade7, 0x313b, 0x0, 0x0);
        gbc.writeMem(0x3ab, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x820c, gbc.sp());
        EXPECT(0x3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0360
        gbc.setState(0x4464, 0x8650, 0x6850, 0xc302, 0x8727, 0x7020, 0x1, 0x1);
        gbc.writeMem(0x4464, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8650, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0361
        gbc.setState(0x6c27, 0x6af5, 0x26b0, 0x47f7, 0x41d, 0x56de, 0x0, 0x1);
        gbc.writeMem(0x6c27, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x6af5, gbc.sp());
        EXPECT(0x6c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0362
        gbc.setState(0x6cf7, 0x5f29, 0xb1b0, 0x5881, 0xd31d, 0x85d8, 0x1, 0x0);
        gbc.writeMem(0x6cf7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5f29, gbc.sp());
        EXPECT(0x6cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0363
        gbc.setState(0x1132, 0x78b9, 0xe310, 0x211c, 0x8c07, 0xeea3, 0x1, 0x1);
        gbc.writeMem(0x1132, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x78b9, gbc.sp());
        EXPECT(0x1134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0364
        gbc.setState(0xe58, 0x4583, 0x4380, 0x96e, 0x655, 0x54bd, 0x1, 0x0);
        gbc.writeMem(0xe58, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4583, gbc.sp());
        EXPECT(0xe5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0365
        gbc.setState(0x4ae8, 0x26cd, 0x2c20, 0xcd19, 0x4761, 0x9981, 0x1, 0x0);
        gbc.writeMem(0x4ae8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x26cd, gbc.sp());
        EXPECT(0x4aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0366
        gbc.setState(0x8966, 0xee94, 0xd470, 0x7a1e, 0x62c0, 0x234f, 0x1, 0x1);
        gbc.writeMem(0x8966, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xee94, gbc.sp());
        EXPECT(0x8968, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8966));
        EXPECT(0xb8, gbc.readMem(0x8967));
        // CB B8 0367
        gbc.setState(0xe6b7, 0x3839, 0xe2f0, 0xc687, 0x9b4f, 0xd464, 0x1, 0x1);
        gbc.writeMem(0xe6b7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3839, gbc.sp());
        EXPECT(0xe6b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6b7));
        EXPECT(0xb8, gbc.readMem(0xe6b8));
        // CB B8 0368
        gbc.setState(0x343, 0xec9d, 0x2230, 0x5d76, 0xc2db, 0x5fbd, 0x1, 0x1);
        gbc.writeMem(0x343, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xec9d, gbc.sp());
        EXPECT(0x345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0369
        gbc.setState(0x9683, 0x2e3e, 0x2fd0, 0x1ef7, 0x5b2, 0xb827, 0x1, 0x0);
        gbc.writeMem(0x9683, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x2e3e, gbc.sp());
        EXPECT(0x9685, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9683));
        EXPECT(0xb8, gbc.readMem(0x9684));
        // CB B8 036A
        gbc.setState(0xd542, 0x56c8, 0xec20, 0x2b98, 0xe91, 0xb2c, 0x1, 0x1);
        gbc.writeMem(0xd542, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x56c8, gbc.sp());
        EXPECT(0xd544, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd542));
        EXPECT(0xb8, gbc.readMem(0xd543));
        // CB B8 036B
        gbc.setState(0x77f3, 0x47d4, 0x9d20, 0x88a5, 0xc4a, 0x375c, 0x0, 0x1);
        gbc.writeMem(0x77f3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x47d4, gbc.sp());
        EXPECT(0x77f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 036C
        gbc.setState(0xdaf4, 0xe597, 0xd7d0, 0x2ad1, 0x1d58, 0x4edf, 0x0, 0x1);
        gbc.writeMem(0xdaf4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe597, gbc.sp());
        EXPECT(0xdaf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf4));
        EXPECT(0xb8, gbc.readMem(0xdaf5));
        // CB B8 036D
        gbc.setState(0xc167, 0x4817, 0xd850, 0x2800, 0x883b, 0x381f, 0x0, 0x1);
        gbc.writeMem(0xc167, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4817, gbc.sp());
        EXPECT(0xc169, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc167));
        EXPECT(0xb8, gbc.readMem(0xc168));
        // CB B8 036E
        gbc.setState(0x2139, 0x32b4, 0x4390, 0xe88d, 0xf387, 0xab78, 0x1, 0x0);
        gbc.writeMem(0x2139, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x32b4, gbc.sp());
        EXPECT(0x213b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 036F
        gbc.setState(0xadfb, 0x8421, 0xb4b0, 0x5cb6, 0x11b3, 0xda38, 0x1, 0x1);
        gbc.writeMem(0xadfb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8421, gbc.sp());
        EXPECT(0xadfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadfb));
        EXPECT(0xb8, gbc.readMem(0xadfc));
        // CB B8 0370
        gbc.setState(0x1507, 0x35ff, 0x36d0, 0x6434, 0x1a36, 0x335b, 0x1, 0x1);
        gbc.writeMem(0x1507, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x35ff, gbc.sp());
        EXPECT(0x1509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0371
        gbc.setState(0x720, 0x32a8, 0x5d60, 0x5e2f, 0x978a, 0x12a0, 0x0, 0x0);
        gbc.writeMem(0x720, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x32a8, gbc.sp());
        EXPECT(0x722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0372
        gbc.setState(0xc9ad, 0x1a7c, 0xdfb0, 0xae3a, 0xe0a7, 0x15c, 0x0, 0x0);
        gbc.writeMem(0xc9ad, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1a7c, gbc.sp());
        EXPECT(0xc9af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ad));
        EXPECT(0xb8, gbc.readMem(0xc9ae));
        // CB B8 0373
        gbc.setState(0x38a8, 0x1efb, 0xd520, 0x8d86, 0xc9f4, 0xd110, 0x1, 0x1);
        gbc.writeMem(0x38a8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1efb, gbc.sp());
        EXPECT(0x38aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0374
        gbc.setState(0x3504, 0x5b1, 0x9390, 0xe736, 0x4d49, 0xe0e8, 0x0, 0x0);
        gbc.writeMem(0x3504, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5b1, gbc.sp());
        EXPECT(0x3506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0375
        gbc.setState(0x666e, 0x3a66, 0xea70, 0x11d3, 0xb493, 0x7c2a, 0x0, 0x1);
        gbc.writeMem(0x666e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x3a66, gbc.sp());
        EXPECT(0x6670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0376
        gbc.setState(0x5c38, 0xab3b, 0xd6d0, 0xfdd6, 0xd021, 0xe7e1, 0x1, 0x0);
        gbc.writeMem(0x5c38, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xab3b, gbc.sp());
        EXPECT(0x5c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0377
        gbc.setState(0xc7ec, 0x3d67, 0xc470, 0x7e74, 0xa019, 0x818, 0x1, 0x1);
        gbc.writeMem(0xc7ec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3d67, gbc.sp());
        EXPECT(0xc7ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7ec));
        EXPECT(0xb8, gbc.readMem(0xc7ed));
        // CB B8 0378
        gbc.setState(0x9443, 0xc2da, 0x3d30, 0x4bd3, 0xe6a9, 0x5a7f, 0x0, 0x0);
        gbc.writeMem(0x9443, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc2da, gbc.sp());
        EXPECT(0x9445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9443));
        EXPECT(0xb8, gbc.readMem(0x9444));
        // CB B8 0379
        gbc.setState(0x5549, 0x7c7b, 0xe100, 0xdd3e, 0x1aa2, 0x2888, 0x0, 0x1);
        gbc.writeMem(0x5549, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x7c7b, gbc.sp());
        EXPECT(0x554b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 037A
        gbc.setState(0x4f86, 0xce78, 0xeae0, 0x2d42, 0xd040, 0xfcbe, 0x0, 0x1);
        gbc.writeMem(0x4f86, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xce78, gbc.sp());
        EXPECT(0x4f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 037B
        gbc.setState(0x9c86, 0xfd40, 0xaac0, 0x26c6, 0x1059, 0xab96, 0x1, 0x1);
        gbc.writeMem(0x9c86, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfd40, gbc.sp());
        EXPECT(0x9c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c86));
        EXPECT(0xb8, gbc.readMem(0x9c87));
        // CB B8 037C
        gbc.setState(0x14fd, 0x8ba6, 0x2570, 0x476e, 0x9fad, 0x7c68, 0x1, 0x1);
        gbc.writeMem(0x14fd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x8ba6, gbc.sp());
        EXPECT(0x14ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 037D
        gbc.setState(0x3aab, 0x14e, 0x9e20, 0xdff5, 0xc23b, 0xd5dd, 0x0, 0x1);
        gbc.writeMem(0x3aab, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x14e, gbc.sp());
        EXPECT(0x3aad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 037E
        gbc.setState(0xacc4, 0x1af7, 0x5a50, 0xe5a1, 0x20fe, 0xf37a, 0x0, 0x1);
        gbc.writeMem(0xacc4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1af7, gbc.sp());
        EXPECT(0xacc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc4));
        EXPECT(0xb8, gbc.readMem(0xacc5));
        // CB B8 037F
        gbc.setState(0x9b5, 0xf1bf, 0x6ed0, 0x5564, 0xd814, 0xb7e7, 0x1, 0x0);
        gbc.writeMem(0x9b5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf1bf, gbc.sp());
        EXPECT(0x9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0380
        gbc.setState(0x3db3, 0x49e1, 0x7c20, 0x32c0, 0x2ba2, 0xde04, 0x1, 0x1);
        gbc.writeMem(0x3db3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x49e1, gbc.sp());
        EXPECT(0x3db5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0381
        gbc.setState(0xa079, 0x7211, 0x8300, 0x4df0, 0xc3df, 0x99dc, 0x0, 0x1);
        gbc.writeMem(0xa079, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7211, gbc.sp());
        EXPECT(0xa07b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa079));
        EXPECT(0xb8, gbc.readMem(0xa07a));
        // CB B8 0383
        gbc.setState(0x7abb, 0xa40, 0xb700, 0x7c67, 0x4bc5, 0x3577, 0x0, 0x1);
        gbc.writeMem(0x7abb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa40, gbc.sp());
        EXPECT(0x7abd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0384
        gbc.setState(0xcef3, 0xf82, 0x7dd0, 0xf9f3, 0x50d7, 0xd878, 0x0, 0x1);
        gbc.writeMem(0xcef3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf82, gbc.sp());
        EXPECT(0xcef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcef3));
        EXPECT(0xb8, gbc.readMem(0xcef4));
        // CB B8 0385
        gbc.setState(0x2e11, 0x8c98, 0xa3f0, 0xf173, 0x3032, 0x237a, 0x1, 0x0);
        gbc.writeMem(0x2e11, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x8c98, gbc.sp());
        EXPECT(0x2e13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0386
        gbc.setState(0xb8e8, 0x6867, 0x19a0, 0x4102, 0xb67a, 0x4c7d, 0x1, 0x0);
        gbc.writeMem(0xb8e8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x6867, gbc.sp());
        EXPECT(0xb8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8e8));
        EXPECT(0xb8, gbc.readMem(0xb8e9));
        // CB B8 0387
        gbc.setState(0x4b01, 0x27fb, 0x6f10, 0x2d73, 0x7dd3, 0x47bc, 0x1, 0x1);
        gbc.writeMem(0x4b01, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x27fb, gbc.sp());
        EXPECT(0x4b03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0388
        gbc.setState(0x5449, 0x8e79, 0xee20, 0x539a, 0xbb8f, 0x8dad, 0x0, 0x0);
        gbc.writeMem(0x5449, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8e79, gbc.sp());
        EXPECT(0x544b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0389
        gbc.setState(0x6346, 0x72e7, 0x3f10, 0x84b, 0x8241, 0xf0d9, 0x1, 0x0);
        gbc.writeMem(0x6346, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x72e7, gbc.sp());
        EXPECT(0x6348, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 038A
        gbc.setState(0x32d5, 0x35a7, 0xfee0, 0x46c6, 0xfb19, 0x9dd4, 0x0, 0x1);
        gbc.writeMem(0x32d5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x35a7, gbc.sp());
        EXPECT(0x32d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 038B
        gbc.setState(0x48c, 0x91a0, 0x5c70, 0xda4a, 0xb117, 0xa47d, 0x0, 0x0);
        gbc.writeMem(0x48c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x91a0, gbc.sp());
        EXPECT(0x48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 038C
        gbc.setState(0xa879, 0xc50c, 0x8d00, 0x849, 0x5d31, 0x60f6, 0x1, 0x1);
        gbc.writeMem(0xa879, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xc50c, gbc.sp());
        EXPECT(0xa87b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa879));
        EXPECT(0xb8, gbc.readMem(0xa87a));
        // CB B8 038D
        gbc.setState(0x1fd1, 0x2e28, 0xf8f0, 0x6797, 0xb54e, 0xa66f, 0x1, 0x1);
        gbc.writeMem(0x1fd1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2e28, gbc.sp());
        EXPECT(0x1fd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 038E
        gbc.setState(0xb976, 0xbcfc, 0xf420, 0x50f7, 0x90af, 0x3bcf, 0x1, 0x0);
        gbc.writeMem(0xb976, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xbcfc, gbc.sp());
        EXPECT(0xb978, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb976));
        EXPECT(0xb8, gbc.readMem(0xb977));
        // CB B8 038F
        gbc.setState(0xcb96, 0x469, 0x4950, 0x123f, 0xb357, 0xb582, 0x1, 0x1);
        gbc.writeMem(0xcb96, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x469, gbc.sp());
        EXPECT(0xcb98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb96));
        EXPECT(0xb8, gbc.readMem(0xcb97));
        // CB B8 0391
        gbc.setState(0xa9d9, 0x308d, 0x7450, 0x90b0, 0x5d10, 0x7b92, 0x1, 0x1);
        gbc.writeMem(0xa9d9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x308d, gbc.sp());
        EXPECT(0xa9db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9d9));
        EXPECT(0xb8, gbc.readMem(0xa9da));
        // CB B8 0392
        gbc.setState(0x9b79, 0x6bb7, 0xaec0, 0xa62f, 0x6d54, 0xcb0, 0x1, 0x0);
        gbc.writeMem(0x9b79, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6bb7, gbc.sp());
        EXPECT(0x9b7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b79));
        EXPECT(0xb8, gbc.readMem(0x9b7a));
        // CB B8 0393
        gbc.setState(0x23f9, 0x4b52, 0x1cf0, 0x9ff7, 0x3953, 0x70d3, 0x1, 0x0);
        gbc.writeMem(0x23f9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x4b52, gbc.sp());
        EXPECT(0x23fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0394
        gbc.setState(0xd39a, 0x838, 0xb80, 0x8d88, 0x6755, 0x8a0, 0x1, 0x0);
        gbc.writeMem(0xd39a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x838, gbc.sp());
        EXPECT(0xd39c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd39a));
        EXPECT(0xb8, gbc.readMem(0xd39b));
        // CB B8 0395
        gbc.setState(0x9a18, 0x7838, 0x32a0, 0x41f5, 0xd927, 0x84cd, 0x1, 0x1);
        gbc.writeMem(0x9a18, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7838, gbc.sp());
        EXPECT(0x9a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a18));
        EXPECT(0xb8, gbc.readMem(0x9a19));
        // CB B8 0396
        gbc.setState(0x3826, 0xb48c, 0x9040, 0x32b1, 0x52f3, 0x81ef, 0x1, 0x0);
        gbc.writeMem(0x3826, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xb48c, gbc.sp());
        EXPECT(0x3828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 0398
        gbc.setState(0x1234, 0xad2d, 0xe350, 0xc966, 0xff6f, 0x6d82, 0x1, 0x1);
        gbc.writeMem(0x1234, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xad2d, gbc.sp());
        EXPECT(0x1236, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 0399
        gbc.setState(0x1c84, 0xca25, 0xf350, 0x4eb1, 0x8365, 0x6b66, 0x0, 0x0);
        gbc.writeMem(0x1c84, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xca25, gbc.sp());
        EXPECT(0x1c86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 039A
        gbc.setState(0xce1f, 0xd144, 0xa3d0, 0x894f, 0xe5b9, 0x6b7, 0x0, 0x0);
        gbc.writeMem(0xce1f, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd144, gbc.sp());
        EXPECT(0xce21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1f));
        EXPECT(0xb8, gbc.readMem(0xce20));
        // CB B8 039B
        gbc.setState(0xec76, 0xc77b, 0xd480, 0x2ec7, 0xef06, 0xc1f0, 0x0, 0x0);
        gbc.writeMem(0xec76, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc77b, gbc.sp());
        EXPECT(0xec78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec76));
        EXPECT(0xb8, gbc.readMem(0xec77));
        // CB B8 039C
        gbc.setState(0xadaf, 0x6c9, 0xd700, 0x3020, 0xca27, 0x792b, 0x1, 0x0);
        gbc.writeMem(0xadaf, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6c9, gbc.sp());
        EXPECT(0xadb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadaf));
        EXPECT(0xb8, gbc.readMem(0xadb0));
        // CB B8 039E
        gbc.setState(0xa5cf, 0xbb19, 0x9b80, 0x34ca, 0xce7e, 0x6d2e, 0x0, 0x0);
        gbc.writeMem(0xa5cf, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xbb19, gbc.sp());
        EXPECT(0xa5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5cf));
        EXPECT(0xb8, gbc.readMem(0xa5d0));
        // CB B8 039F
        gbc.setState(0x737c, 0xaadc, 0x46d0, 0x755c, 0xae11, 0x418a, 0x0, 0x1);
        gbc.writeMem(0x737c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xaadc, gbc.sp());
        EXPECT(0x737e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03A0
        gbc.setState(0x1f14, 0x98a1, 0x61f0, 0x8f36, 0xf30b, 0xfb01, 0x1, 0x1);
        gbc.writeMem(0x1f14, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x98a1, gbc.sp());
        EXPECT(0x1f16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03A1
        gbc.setState(0x98d9, 0x3368, 0x55d0, 0xc371, 0x3b1, 0x6445, 0x0, 0x1);
        gbc.writeMem(0x98d9, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x3368, gbc.sp());
        EXPECT(0x98db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d9));
        EXPECT(0xb8, gbc.readMem(0x98da));
        // CB B8 03A3
        gbc.setState(0x6f0c, 0x5845, 0xfe00, 0x800, 0x1a5a, 0x1ed3, 0x0, 0x0);
        gbc.writeMem(0x6f0c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5845, gbc.sp());
        EXPECT(0x6f0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03A4
        gbc.setState(0xb35, 0xc98d, 0x4e90, 0x5a50, 0x4da, 0x76be, 0x1, 0x0);
        gbc.writeMem(0xb35, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc98d, gbc.sp());
        EXPECT(0xb37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03A5
        gbc.setState(0xaf11, 0x3fb4, 0x99e0, 0x3abb, 0x8bcf, 0xd8a9, 0x0, 0x1);
        gbc.writeMem(0xaf11, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x3fb4, gbc.sp());
        EXPECT(0xaf13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf11));
        EXPECT(0xb8, gbc.readMem(0xaf12));
        // CB B8 03A6
        gbc.setState(0x3bd4, 0x92aa, 0x1020, 0x62b4, 0xfcd8, 0x9540, 0x1, 0x0);
        gbc.writeMem(0x3bd4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x92aa, gbc.sp());
        EXPECT(0x3bd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03A7
        gbc.setState(0x33a7, 0x8f78, 0x1330, 0x83a7, 0x4e10, 0x1efd, 0x0, 0x0);
        gbc.writeMem(0x33a7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8f78, gbc.sp());
        EXPECT(0x33a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03A8
        gbc.setState(0xd421, 0x98b0, 0x7a30, 0x997e, 0x6274, 0x3a3e, 0x1, 0x0);
        gbc.writeMem(0xd421, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x98b0, gbc.sp());
        EXPECT(0xd423, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd421));
        EXPECT(0xb8, gbc.readMem(0xd422));
        // CB B8 03A9
        gbc.setState(0x7bc3, 0x975b, 0x9f40, 0x4bd6, 0xd432, 0x7f64, 0x1, 0x1);
        gbc.writeMem(0x7bc3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x975b, gbc.sp());
        EXPECT(0x7bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03AA
        gbc.setState(0x74c7, 0xdcb2, 0x2fd0, 0xf15d, 0xa0d, 0xaadc, 0x1, 0x1);
        gbc.writeMem(0x74c7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xdcb2, gbc.sp());
        EXPECT(0x74c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03AB
        gbc.setState(0x30bd, 0x78ba, 0x4530, 0x8fab, 0xfb73, 0x1a5b, 0x1, 0x1);
        gbc.writeMem(0x30bd, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x78ba, gbc.sp());
        EXPECT(0x30bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03AC
        gbc.setState(0xd91d, 0x76bb, 0x5710, 0xb371, 0xebf2, 0x14d4, 0x0, 0x0);
        gbc.writeMem(0xd91d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x76bb, gbc.sp());
        EXPECT(0xd91f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd91d));
        EXPECT(0xb8, gbc.readMem(0xd91e));
        // CB B8 03AD
        gbc.setState(0x3a63, 0x6d6f, 0x18b0, 0x5f81, 0x10d, 0x7b32, 0x0, 0x0);
        gbc.writeMem(0x3a63, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6d6f, gbc.sp());
        EXPECT(0x3a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03AE
        gbc.setState(0x1ed4, 0xd25f, 0xb60, 0x95bd, 0xf637, 0xf17d, 0x0, 0x0);
        gbc.writeMem(0x1ed4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd25f, gbc.sp());
        EXPECT(0x1ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03AF
        gbc.setState(0x85d1, 0xaedc, 0xfc80, 0x6bf1, 0xa45a, 0x1c9, 0x0, 0x1);
        gbc.writeMem(0x85d1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xaedc, gbc.sp());
        EXPECT(0x85d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85d1));
        EXPECT(0xb8, gbc.readMem(0x85d2));
        // CB B8 03B0
        gbc.setState(0xcc04, 0xe141, 0xc0a0, 0x43cc, 0x4285, 0x6d46, 0x0, 0x0);
        gbc.writeMem(0xcc04, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xe141, gbc.sp());
        EXPECT(0xcc06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc04));
        EXPECT(0xb8, gbc.readMem(0xcc05));
        // CB B8 03B1
        gbc.setState(0x7c2e, 0x56f9, 0x9790, 0x6c8e, 0x658, 0xf73b, 0x0, 0x0);
        gbc.writeMem(0x7c2e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x56f9, gbc.sp());
        EXPECT(0x7c30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03B3
        gbc.setState(0xcc9d, 0x844a, 0xa030, 0xdc2a, 0xfd61, 0x5f68, 0x0, 0x0);
        gbc.writeMem(0xcc9d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x844a, gbc.sp());
        EXPECT(0xcc9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc9d));
        EXPECT(0xb8, gbc.readMem(0xcc9e));
        // CB B8 03B4
        gbc.setState(0x4156, 0xc278, 0x2660, 0x3ca1, 0x9e43, 0xacf4, 0x1, 0x1);
        gbc.writeMem(0x4156, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc278, gbc.sp());
        EXPECT(0x4158, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03B5
        gbc.setState(0x2712, 0x320, 0x4b50, 0xa050, 0xa5c7, 0x2acc, 0x0, 0x1);
        gbc.writeMem(0x2712, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x320, gbc.sp());
        EXPECT(0x2714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03B6
        gbc.setState(0x6b7, 0x7152, 0xff70, 0x714f, 0x214f, 0x19e3, 0x0, 0x1);
        gbc.writeMem(0x6b7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7152, gbc.sp());
        EXPECT(0x6b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03B7
        gbc.setState(0x7715, 0xcea6, 0x7d60, 0xc3eb, 0x444f, 0x9612, 0x0, 0x0);
        gbc.writeMem(0x7715, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xcea6, gbc.sp());
        EXPECT(0x7717, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03B8
        gbc.setState(0xe424, 0xa0d4, 0xda50, 0x3674, 0x7b98, 0xb590, 0x0, 0x1);
        gbc.writeMem(0xe424, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa0d4, gbc.sp());
        EXPECT(0xe426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe424));
        EXPECT(0xb8, gbc.readMem(0xe425));
        // CB B8 03B9
        gbc.setState(0xd0ec, 0xe570, 0x40b0, 0x1580, 0x51bb, 0x9750, 0x1, 0x1);
        gbc.writeMem(0xd0ec, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe570, gbc.sp());
        EXPECT(0xd0ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ec));
        EXPECT(0xb8, gbc.readMem(0xd0ed));
        // CB B8 03BA
        gbc.setState(0xe9ff, 0xc57, 0xf40, 0x48cd, 0xf58c, 0x6d30, 0x1, 0x0);
        gbc.writeMem(0xe9ff, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xc57, gbc.sp());
        EXPECT(0xea01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ff));
        EXPECT(0xb8, gbc.readMem(0xea00));
        // CB B8 03BB
        gbc.setState(0xa02, 0xbce5, 0xda20, 0x1ecb, 0x225a, 0x8169, 0x1, 0x1);
        gbc.writeMem(0xa02, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbce5, gbc.sp());
        EXPECT(0xa04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03BC
        gbc.setState(0xaa92, 0x8abf, 0xeb70, 0x7ea4, 0x43f1, 0x2cb9, 0x1, 0x1);
        gbc.writeMem(0xaa92, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8abf, gbc.sp());
        EXPECT(0xaa94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa92));
        EXPECT(0xb8, gbc.readMem(0xaa93));
        // CB B8 03BD
        gbc.setState(0xa6b1, 0x44cd, 0xbc30, 0xcb2c, 0x5424, 0x9868, 0x0, 0x0);
        gbc.writeMem(0xa6b1, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x44cd, gbc.sp());
        EXPECT(0xa6b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b1));
        EXPECT(0xb8, gbc.readMem(0xa6b2));
        // CB B8 03BE
        gbc.setState(0xa61a, 0xf3b, 0xd440, 0xa623, 0x5257, 0xb182, 0x1, 0x1);
        gbc.writeMem(0xa61a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xf3b, gbc.sp());
        EXPECT(0xa61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa61a));
        EXPECT(0xb8, gbc.readMem(0xa61b));
        // CB B8 03BF
        gbc.setState(0x92a5, 0xead, 0xf6b0, 0x7b36, 0x6125, 0x2fe, 0x1, 0x1);
        gbc.writeMem(0x92a5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xead, gbc.sp());
        EXPECT(0x92a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a5));
        EXPECT(0xb8, gbc.readMem(0x92a6));
        // CB B8 03C0
        gbc.setState(0xd009, 0xd14, 0xad40, 0x7dc3, 0x2d42, 0x98ad, 0x0, 0x0);
        gbc.writeMem(0xd009, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd14, gbc.sp());
        EXPECT(0xd00b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd009));
        EXPECT(0xb8, gbc.readMem(0xd00a));
        // CB B8 03C1
        gbc.setState(0x2660, 0x9e3, 0x3e40, 0x5f3e, 0xa822, 0x4b70, 0x0, 0x1);
        gbc.writeMem(0x2660, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9e3, gbc.sp());
        EXPECT(0x2662, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03C2
        gbc.setState(0x6f61, 0x5274, 0x43f0, 0xdb71, 0x27bc, 0x2993, 0x1, 0x0);
        gbc.writeMem(0x6f61, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5274, gbc.sp());
        EXPECT(0x6f63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03C3
        gbc.setState(0xa82e, 0x2b9, 0x92f0, 0x9f9e, 0x28a4, 0xfa43, 0x0, 0x1);
        gbc.writeMem(0xa82e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x2b9, gbc.sp());
        EXPECT(0xa830, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa82e));
        EXPECT(0xb8, gbc.readMem(0xa82f));
        // CB B8 03C4
        gbc.setState(0x5aa8, 0xd710, 0xb550, 0x64a4, 0x5335, 0x9de4, 0x1, 0x0);
        gbc.writeMem(0x5aa8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xd710, gbc.sp());
        EXPECT(0x5aaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03C5
        gbc.setState(0x1f9d, 0x6269, 0x3300, 0x1c0b, 0x7f99, 0x866d, 0x0, 0x0);
        gbc.writeMem(0x1f9d, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6269, gbc.sp());
        EXPECT(0x1f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03C6
        gbc.setState(0x37b5, 0xfe85, 0xb210, 0xa2ae, 0x70de, 0xae33, 0x1, 0x1);
        gbc.writeMem(0x37b5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xfe85, gbc.sp());
        EXPECT(0x37b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03C7
        gbc.setState(0x62ba, 0x949a, 0xba20, 0xc59b, 0xbc1c, 0xef45, 0x1, 0x1);
        gbc.writeMem(0x62ba, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x949a, gbc.sp());
        EXPECT(0x62bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03C8
        gbc.setState(0xcb31, 0xfc6b, 0x73a0, 0x40ac, 0xc584, 0x6005, 0x0, 0x1);
        gbc.writeMem(0xcb31, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfc6b, gbc.sp());
        EXPECT(0xcb33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb31));
        EXPECT(0xb8, gbc.readMem(0xcb32));
        // CB B8 03C9
        gbc.setState(0x6eeb, 0xb57a, 0xc090, 0x8ccd, 0x959f, 0x4a3e, 0x0, 0x1);
        gbc.writeMem(0x6eeb, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb57a, gbc.sp());
        EXPECT(0x6eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03CA
        gbc.setState(0x47d0, 0x7b1b, 0xa1f0, 0x692b, 0x5055, 0xdb0b, 0x0, 0x1);
        gbc.writeMem(0x47d0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x7b1b, gbc.sp());
        EXPECT(0x47d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03CB
        gbc.setState(0x7247, 0xfafb, 0xa320, 0x404d, 0xb768, 0xaa63, 0x0, 0x0);
        gbc.writeMem(0x7247, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfafb, gbc.sp());
        EXPECT(0x7249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03CC
        gbc.setState(0x2d9c, 0xe919, 0x3e90, 0xfce3, 0xac8f, 0x928d, 0x1, 0x1);
        gbc.writeMem(0x2d9c, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xe919, gbc.sp());
        EXPECT(0x2d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03CD
        gbc.setState(0x5576, 0xc6ae, 0x23c0, 0x304b, 0x9e18, 0x483b, 0x0, 0x1);
        gbc.writeMem(0x5576, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xc6ae, gbc.sp());
        EXPECT(0x5578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03CE
        gbc.setState(0xa351, 0x573d, 0x5670, 0x358, 0x6a39, 0x1e73, 0x0, 0x1);
        gbc.writeMem(0xa351, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x573d, gbc.sp());
        EXPECT(0xa353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa351));
        EXPECT(0xb8, gbc.readMem(0xa352));
        // CB B8 03CF
        gbc.setState(0x80e5, 0x1539, 0xba0, 0xd05c, 0xa5b9, 0xcc3b, 0x1, 0x1);
        gbc.writeMem(0x80e5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1539, gbc.sp());
        EXPECT(0x80e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e5));
        EXPECT(0xb8, gbc.readMem(0x80e6));
        // CB B8 03D0
        gbc.setState(0x9b78, 0x9b8c, 0x6860, 0x9eb4, 0x7206, 0x9539, 0x0, 0x1);
        gbc.writeMem(0x9b78, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9b8c, gbc.sp());
        EXPECT(0x9b7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b78));
        EXPECT(0xb8, gbc.readMem(0x9b79));
        // CB B8 03D1
        gbc.setState(0x5fb0, 0x6c5c, 0xc920, 0xc72, 0x7f74, 0x2982, 0x1, 0x1);
        gbc.writeMem(0x5fb0, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6c5c, gbc.sp());
        EXPECT(0x5fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03D2
        gbc.setState(0xaf1e, 0x7e9a, 0x6430, 0x3d01, 0x3e2, 0xb0c2, 0x0, 0x0);
        gbc.writeMem(0xaf1e, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x7e9a, gbc.sp());
        EXPECT(0xaf20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf1e));
        EXPECT(0xb8, gbc.readMem(0xaf1f));
        // CB B8 03D3
        gbc.setState(0xdfb6, 0xc266, 0x83a0, 0x4266, 0x6a2b, 0xa5c8, 0x1, 0x0);
        gbc.writeMem(0xdfb6, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc266, gbc.sp());
        EXPECT(0xdfb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfb6));
        EXPECT(0xb8, gbc.readMem(0xdfb7));
        // CB B8 03D4
        gbc.setState(0x2e93, 0xed37, 0xbed0, 0x73e2, 0x528, 0x426e, 0x1, 0x1);
        gbc.writeMem(0x2e93, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xed37, gbc.sp());
        EXPECT(0x2e95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03D5
        gbc.setState(0x3966, 0xf78e, 0x1780, 0x7c24, 0x1e3d, 0x2040, 0x0, 0x1);
        gbc.writeMem(0x3966, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf78e, gbc.sp());
        EXPECT(0x3968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03D6
        gbc.setState(0x2fe7, 0xbf22, 0x9ec0, 0x14f6, 0xeb83, 0xe9bd, 0x1, 0x1);
        gbc.writeMem(0x2fe7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xbf22, gbc.sp());
        EXPECT(0x2fe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03D7
        gbc.setState(0x8409, 0xad19, 0x7c40, 0xda0c, 0xe26b, 0x3e97, 0x0, 0x1);
        gbc.writeMem(0x8409, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xad19, gbc.sp());
        EXPECT(0x840b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8409));
        EXPECT(0xb8, gbc.readMem(0x840a));
        // CB B8 03D9
        gbc.setState(0x3f20, 0x42bb, 0x7950, 0xe593, 0x24e4, 0x775c, 0x1, 0x0);
        gbc.writeMem(0x3f20, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x42bb, gbc.sp());
        EXPECT(0x3f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03DA
        gbc.setState(0x14d4, 0x3c74, 0x160, 0xc1b5, 0xa464, 0xc7fb, 0x0, 0x1);
        gbc.writeMem(0x14d4, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3c74, gbc.sp());
        EXPECT(0x14d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03DB
        gbc.setState(0x8901, 0xe487, 0xb820, 0x59bd, 0xe723, 0xeca8, 0x0, 0x0);
        gbc.writeMem(0x8901, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xe487, gbc.sp());
        EXPECT(0x8903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8901));
        EXPECT(0xb8, gbc.readMem(0x8902));
        // CB B8 03DC
        gbc.setState(0xc418, 0x76e0, 0x30f0, 0xa6b3, 0x7c24, 0x48fc, 0x0, 0x0);
        gbc.writeMem(0xc418, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x76e0, gbc.sp());
        EXPECT(0xc41a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc418));
        EXPECT(0xb8, gbc.readMem(0xc419));
        // CB B8 03DD
        gbc.setState(0x4e18, 0x64ba, 0x1ac0, 0xa238, 0x1b13, 0x46d8, 0x0, 0x0);
        gbc.writeMem(0x4e18, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x64ba, gbc.sp());
        EXPECT(0x4e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03DF
        gbc.setState(0x7cc3, 0xe474, 0x8a00, 0x584d, 0xa6da, 0xc752, 0x1, 0x0);
        gbc.writeMem(0x7cc3, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xe474, gbc.sp());
        EXPECT(0x7cc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03E0
        gbc.setState(0x34e2, 0x9fe7, 0x5210, 0x4bcc, 0xb4bc, 0x3204, 0x0, 0x1);
        gbc.writeMem(0x34e2, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x9fe7, gbc.sp());
        EXPECT(0x34e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03E1
        gbc.setState(0x9b5, 0xa65d, 0x7880, 0xc4c9, 0x2b3d, 0x69d0, 0x1, 0x1);
        gbc.writeMem(0x9b5, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa65d, gbc.sp());
        EXPECT(0x9b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03E2
        gbc.setState(0x42e7, 0xab5e, 0x7440, 0x68ca, 0xc51a, 0x5b4e, 0x0, 0x0);
        gbc.writeMem(0x42e7, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xab5e, gbc.sp());
        EXPECT(0x42e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03E3
        gbc.setState(0x1ab8, 0xa19c, 0xe0a0, 0x43ef, 0x46b2, 0xc796, 0x0, 0x0);
        gbc.writeMem(0x1ab8, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa19c, gbc.sp());
        EXPECT(0x1aba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB B8 03E4
        gbc.setState(0x7c86, 0xe16, 0x7d0, 0xdb0b, 0x375a, 0x1955, 0x1, 0x1);
        gbc.writeMem(0x7c86, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe16, gbc.sp());
        EXPECT(0x7c88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03E5
        gbc.setState(0x6f54, 0xf571, 0x4130, 0xdf7a, 0x2849, 0xbc79, 0x1, 0x0);
        gbc.writeMem(0x6f54, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xf571, gbc.sp());
        EXPECT(0x6f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03E6
        gbc.setState(0x249a, 0xf224, 0x66f0, 0x7ca7, 0x7baf, 0xd94b, 0x1, 0x1);
        gbc.writeMem(0x249a, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf224, gbc.sp());
        EXPECT(0x249c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB B8 03E7
        gbc.setState(0x2002, 0x280a, 0xfda0, 0x9518, 0xce3c, 0xa632, 0x1, 0x0);
        gbc.writeMem(0x2002, { 0xcb, 0xb8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x280a, gbc.sp());
        EXPECT(0x2004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
