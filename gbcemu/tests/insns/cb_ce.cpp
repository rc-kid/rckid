#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_ce)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_ce) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB CE 0001
        gbc.setState(0x961e, 0x8992, 0x9a90, 0xf6ff, 0x65b3, 0x9b8f, 0x1, 0x0);
        gbc.writeMem(0x961e, { 0xcb, 0xce });
        gbc.writeMem(0x9b8f, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8992);
        EXPECT(gbc.pc(), 0x9620);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x961e), 0xcb);
        EXPECT(gbc.readMem(0x961f), 0xce);
        EXPECT(gbc.readMem(0x9b8f), 0x8a);
        // CB CE 0004
        gbc.setState(0x82ac, 0x50f0, 0x430, 0xd577, 0x9cc5, 0xde78, 0x1, 0x1);
        gbc.writeMem(0x82ac, { 0xcb, 0xce });
        gbc.writeMem(0xde78, { 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x50f0);
        EXPECT(gbc.pc(), 0x82ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82ac), 0xcb);
        EXPECT(gbc.readMem(0x82ad), 0xce);
        EXPECT(gbc.readMem(0xde78), 0x27);
        // CB CE 0006
        gbc.setState(0x6563, 0xe38f, 0x18b0, 0x115d, 0x73df, 0xdd48, 0x0, 0x1);
        gbc.writeMem(0x6563, { 0xcb, 0xce });
        gbc.writeMem(0xdd48, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xe38f);
        EXPECT(gbc.pc(), 0x6565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd48), 0x9e);
        // CB CE 0008
        gbc.setState(0x3e3b, 0x9d13, 0xfae0, 0x70a, 0x60df, 0xd6c3, 0x1, 0x1);
        gbc.writeMem(0x3e3b, { 0xcb, 0xce });
        gbc.writeMem(0xd6c3, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9d13);
        EXPECT(gbc.pc(), 0x3e3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6c3), 0x87);
        // CB CE 0009
        gbc.setState(0x259f, 0xf15d, 0x40, 0x90f5, 0x5833, 0x5a36, 0x0, 0x1);
        gbc.writeMem(0x259f, { 0xcb, 0xce });
        gbc.writeMem(0x5a36, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xf15d);
        EXPECT(gbc.pc(), 0x25a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 000A
        gbc.setState(0xef5c, 0x4459, 0xc2a0, 0x5e2c, 0x990e, 0xc119, 0x1, 0x1);
        gbc.writeMem(0xc119, { 0xc1 });
        gbc.writeMem(0xef5c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x4459);
        EXPECT(gbc.pc(), 0xef5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc119), 0xc3);
        EXPECT(gbc.readMem(0xef5c), 0xcb);
        EXPECT(gbc.readMem(0xef5d), 0xce);
        // CB CE 000C
        gbc.setState(0x98d6, 0x3267, 0x4d60, 0xb82a, 0xdbc, 0xdb96, 0x0, 0x0);
        gbc.writeMem(0x98d6, { 0xcb, 0xce });
        gbc.writeMem(0xdb96, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x3267);
        EXPECT(gbc.pc(), 0x98d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d6), 0xcb);
        EXPECT(gbc.readMem(0x98d7), 0xce);
        EXPECT(gbc.readMem(0xdb96), 0xa2);
        // CB CE 000D
        gbc.setState(0xc14f, 0xff3e, 0x3e20, 0x15a4, 0x98d2, 0x89f0, 0x1, 0x0);
        gbc.writeMem(0x89f0, { 0x38 });
        gbc.writeMem(0xc14f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xff3e);
        EXPECT(gbc.pc(), 0xc151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f0), 0x3a);
        EXPECT(gbc.readMem(0xc14f), 0xcb);
        EXPECT(gbc.readMem(0xc150), 0xce);
        // CB CE 000E
        gbc.setState(0x31a9, 0x3324, 0xb520, 0x638b, 0x7bb5, 0xe145, 0x1, 0x1);
        gbc.writeMem(0x31a9, { 0xcb, 0xce });
        gbc.writeMem(0xe145, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x3324);
        EXPECT(gbc.pc(), 0x31ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe145), 0xda);
        // CB CE 000F
        gbc.setState(0xc3e3, 0x9ef1, 0x8b60, 0x39f0, 0x3a3b, 0xa25c, 0x0, 0x1);
        gbc.writeMem(0xa25c, { 0xcf });
        gbc.writeMem(0xc3e3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x9ef1);
        EXPECT(gbc.pc(), 0xc3e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa25c), 0xcf);
        EXPECT(gbc.readMem(0xc3e3), 0xcb);
        EXPECT(gbc.readMem(0xc3e4), 0xce);
        // CB CE 0010
        gbc.setState(0x3ac3, 0x2e5e, 0x4f90, 0x574f, 0xef9, 0xd343, 0x1, 0x1);
        gbc.writeMem(0x3ac3, { 0xcb, 0xce });
        gbc.writeMem(0xd343, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x2e5e);
        EXPECT(gbc.pc(), 0x3ac5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd343), 0x5e);
        // CB CE 0012
        gbc.setState(0x73bc, 0xf129, 0x1550, 0x24b9, 0x6907, 0x28be, 0x1, 0x1);
        gbc.writeMem(0x28be, { 0xf7 });
        gbc.writeMem(0x73bc, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf129);
        EXPECT(gbc.pc(), 0x73be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0014
        gbc.setState(0x157b, 0xda84, 0x6900, 0xf571, 0x1e8f, 0x97cb, 0x1, 0x1);
        gbc.writeMem(0x157b, { 0xcb, 0xce });
        gbc.writeMem(0x97cb, { 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xda84);
        EXPECT(gbc.pc(), 0x157d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97cb), 0x77);
        // CB CE 0015
        gbc.setState(0xb975, 0x82e4, 0x7c70, 0xfd2c, 0x9441, 0x3f6a, 0x1, 0x0);
        gbc.writeMem(0x3f6a, { 0xf6 });
        gbc.writeMem(0xb975, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x82e4);
        EXPECT(gbc.pc(), 0xb977);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb975), 0xcb);
        EXPECT(gbc.readMem(0xb976), 0xce);
        // CB CE 0016
        gbc.setState(0x8727, 0xca69, 0x3b10, 0x6656, 0xae7, 0xf1a0, 0x0, 0x1);
        gbc.writeMem(0x8727, { 0xcb, 0xce });
        gbc.writeMem(0xf1a0, { 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xca69);
        EXPECT(gbc.pc(), 0x8729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8727), 0xcb);
        EXPECT(gbc.readMem(0x8728), 0xce);
        EXPECT(gbc.readMem(0xf1a0), 0x33);
        // CB CE 0017
        gbc.setState(0x9ce9, 0x5db, 0x49f0, 0x1881, 0x6802, 0x7521, 0x0, 0x1);
        gbc.writeMem(0x7521, { 0x72 });
        gbc.writeMem(0x9ce9, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5db);
        EXPECT(gbc.pc(), 0x9ceb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce9), 0xcb);
        EXPECT(gbc.readMem(0x9cea), 0xce);
        // CB CE 001B
        gbc.setState(0xb9fa, 0x7e4a, 0xb7e0, 0xccf1, 0xf9c1, 0xfd02, 0x0, 0x1);
        gbc.writeMem(0xb9fa, { 0xcb, 0xce });
        gbc.writeMem(0xfd02, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x7e4a);
        EXPECT(gbc.pc(), 0xb9fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9fa), 0xcb);
        EXPECT(gbc.readMem(0xb9fb), 0xce);
        EXPECT(gbc.readMem(0xfd02), 0xfe);
        // CB CE 001D
        gbc.setState(0x57aa, 0xa857, 0xe250, 0x2026, 0xa627, 0xcde3, 0x1, 0x1);
        gbc.writeMem(0x57aa, { 0xcb, 0xce });
        gbc.writeMem(0xcde3, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xa857);
        EXPECT(gbc.pc(), 0x57ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcde3), 0x3b);
        // CB CE 001F
        gbc.setState(0x30a5, 0xcd6a, 0x5b0, 0x30e0, 0x64ad, 0x96b5, 0x1, 0x1);
        gbc.writeMem(0x30a5, { 0xcb, 0xce });
        gbc.writeMem(0x96b5, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xcd6a);
        EXPECT(gbc.pc(), 0x30a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96b5), 0x36);
        // CB CE 0020
        gbc.setState(0x9c70, 0x180c, 0x36c0, 0x52e6, 0x2a44, 0x2ee4, 0x0, 0x0);
        gbc.writeMem(0x2ee4, { 0xce });
        gbc.writeMem(0x9c70, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x180c);
        EXPECT(gbc.pc(), 0x9c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c70), 0xcb);
        EXPECT(gbc.readMem(0x9c71), 0xce);
        // CB CE 0021
        gbc.setState(0x27ef, 0xc88, 0xb7d0, 0xfbda, 0x589f, 0xa504, 0x1, 0x0);
        gbc.writeMem(0x27ef, { 0xcb, 0xce });
        gbc.writeMem(0xa504, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xc88);
        EXPECT(gbc.pc(), 0x27f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa504), 0xda);
        // CB CE 0022
        gbc.setState(0x4693, 0xc786, 0xdd60, 0xe90, 0x510, 0xec44, 0x0, 0x1);
        gbc.writeMem(0x4693, { 0xcb, 0xce });
        gbc.writeMem(0xec44, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xc786);
        EXPECT(gbc.pc(), 0x4695);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec44), 0x82);
        // CB CE 0024
        gbc.setState(0xba61, 0x6c03, 0xa8f0, 0x63e4, 0x1caa, 0x40ed, 0x1, 0x1);
        gbc.writeMem(0x40ed, { 0xba });
        gbc.writeMem(0xba61, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6c03);
        EXPECT(gbc.pc(), 0xba63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba61), 0xcb);
        EXPECT(gbc.readMem(0xba62), 0xce);
        // CB CE 0025
        gbc.setState(0xb355, 0x48f8, 0x1310, 0xf603, 0x8c10, 0x6565, 0x0, 0x0);
        gbc.writeMem(0x6565, { 0x5b });
        gbc.writeMem(0xb355, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x48f8);
        EXPECT(gbc.pc(), 0xb357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb355), 0xcb);
        EXPECT(gbc.readMem(0xb356), 0xce);
        // CB CE 0026
        gbc.setState(0x576e, 0x7eaf, 0xe060, 0x76ba, 0x3422, 0xbc55, 0x0, 0x1);
        gbc.writeMem(0x576e, { 0xcb, 0xce });
        gbc.writeMem(0xbc55, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x7eaf);
        EXPECT(gbc.pc(), 0x5770);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc55), 0xee);
        // CB CE 0027
        gbc.setState(0xa09a, 0x9cb5, 0x2fb0, 0x19b0, 0x5851, 0x58dd, 0x1, 0x0);
        gbc.writeMem(0x58dd, { 0x3a });
        gbc.writeMem(0xa09a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x9cb5);
        EXPECT(gbc.pc(), 0xa09c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa09a), 0xcb);
        EXPECT(gbc.readMem(0xa09b), 0xce);
        // CB CE 0029
        gbc.setState(0xaced, 0x6a53, 0x28f0, 0x42ca, 0xc8bf, 0x5f97, 0x0, 0x1);
        gbc.writeMem(0x5f97, { 0x6a });
        gbc.writeMem(0xaced, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x6a53);
        EXPECT(gbc.pc(), 0xacef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaced), 0xcb);
        EXPECT(gbc.readMem(0xacee), 0xce);
        // CB CE 002A
        gbc.setState(0xd072, 0xfdda, 0x8300, 0x4992, 0x9a98, 0x8ab6, 0x0, 0x1);
        gbc.writeMem(0x8ab6, { 0xc8 });
        gbc.writeMem(0xd072, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xfdda);
        EXPECT(gbc.pc(), 0xd074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab6), 0xca);
        EXPECT(gbc.readMem(0xd072), 0xcb);
        EXPECT(gbc.readMem(0xd073), 0xce);
        // CB CE 002C
        gbc.setState(0x4dd4, 0xba19, 0x1340, 0x555, 0x98eb, 0x9fe6, 0x1, 0x0);
        gbc.writeMem(0x4dd4, { 0xcb, 0xce });
        gbc.writeMem(0x9fe6, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xba19);
        EXPECT(gbc.pc(), 0x4dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fe6), 0x76);
        // CB CE 002E
        gbc.setState(0xd371, 0x4f81, 0x610, 0xf4b7, 0xa593, 0xe05a, 0x1, 0x0);
        gbc.writeMem(0xd371, { 0xcb, 0xce });
        gbc.writeMem(0xe05a, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4f81);
        EXPECT(gbc.pc(), 0xd373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd371), 0xcb);
        EXPECT(gbc.readMem(0xd372), 0xce);
        EXPECT(gbc.readMem(0xe05a), 0x3);
        // CB CE 002F
        gbc.setState(0x56a1, 0x6b1c, 0xcc10, 0xcf19, 0x2420, 0xd941, 0x0, 0x1);
        gbc.writeMem(0x56a1, { 0xcb, 0xce });
        gbc.writeMem(0xd941, { 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6b1c);
        EXPECT(gbc.pc(), 0x56a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd941), 0xb);
        // CB CE 0030
        gbc.setState(0x12d6, 0x6060, 0x2c60, 0x2393, 0xad48, 0x9ca0, 0x1, 0x0);
        gbc.writeMem(0x12d6, { 0xcb, 0xce });
        gbc.writeMem(0x9ca0, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x6060);
        EXPECT(gbc.pc(), 0x12d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ca0), 0x3b);
        // CB CE 0031
        gbc.setState(0x346, 0x2ef3, 0x67e0, 0xaf41, 0x2066, 0x3070, 0x1, 0x0);
        gbc.writeMem(0x346, { 0xcb, 0xce });
        gbc.writeMem(0x3070, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2ef3);
        EXPECT(gbc.pc(), 0x348);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0033
        gbc.setState(0x8c9b, 0xf9b0, 0x6eb0, 0xaed5, 0xad43, 0xa516, 0x0, 0x1);
        gbc.writeMem(0x8c9b, { 0xcb, 0xce });
        gbc.writeMem(0xa516, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf9b0);
        EXPECT(gbc.pc(), 0x8c9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c9b), 0xcb);
        EXPECT(gbc.readMem(0x8c9c), 0xce);
        EXPECT(gbc.readMem(0xa516), 0x46);
        // CB CE 0034
        gbc.setState(0xe440, 0xfe46, 0x8310, 0xed5d, 0xa60a, 0x4d5e, 0x0, 0x0);
        gbc.writeMem(0x4d5e, { 0x8f });
        gbc.writeMem(0xe440, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xfe46);
        EXPECT(gbc.pc(), 0xe442);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe440), 0xcb);
        EXPECT(gbc.readMem(0xe441), 0xce);
        // CB CE 0036
        gbc.setState(0x7bac, 0xe0a1, 0xefe0, 0xa2d7, 0x1482, 0x9ab3, 0x0, 0x1);
        gbc.writeMem(0x7bac, { 0xcb, 0xce });
        gbc.writeMem(0x9ab3, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xe0a1);
        EXPECT(gbc.pc(), 0x7bae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ab3), 0xc3);
        // CB CE 0037
        gbc.setState(0x6997, 0x5f46, 0x5410, 0x1121, 0x1d8b, 0x6e76, 0x1, 0x1);
        gbc.writeMem(0x6997, { 0xcb, 0xce });
        gbc.writeMem(0x6e76, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5f46);
        EXPECT(gbc.pc(), 0x6999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0038
        gbc.setState(0xd48e, 0x364f, 0xeee0, 0xcfd3, 0x228c, 0xc3e4, 0x1, 0x0);
        gbc.writeMem(0xc3e4, { 0xbb });
        gbc.writeMem(0xd48e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x364f);
        EXPECT(gbc.pc(), 0xd490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e4), 0xbb);
        EXPECT(gbc.readMem(0xd48e), 0xcb);
        EXPECT(gbc.readMem(0xd48f), 0xce);
        // CB CE 0039
        gbc.setState(0xdd3a, 0xea8d, 0xf210, 0x4edb, 0xa036, 0xf55c, 0x1, 0x1);
        gbc.writeMem(0xdd3a, { 0xcb, 0xce });
        gbc.writeMem(0xf55c, { 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xea8d);
        EXPECT(gbc.pc(), 0xdd3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd3a), 0xcb);
        EXPECT(gbc.readMem(0xdd3b), 0xce);
        EXPECT(gbc.readMem(0xf55c), 0x8b);
        // CB CE 003A
        gbc.setState(0xeceb, 0x4079, 0x8f70, 0x145, 0xe4c8, 0xff7b, 0x1, 0x0);
        gbc.writeMem(0xeceb, { 0xcb, 0xce });
        gbc.writeMem(0xff7b, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x4079);
        EXPECT(gbc.pc(), 0xeced);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeceb), 0xcb);
        EXPECT(gbc.readMem(0xecec), 0xce);
        EXPECT(gbc.readMem(0xff7b), 0x6);
        // CB CE 003B
        gbc.setState(0x3dab, 0xe438, 0xffc0, 0xb928, 0xd248, 0x3088, 0x1, 0x1);
        gbc.writeMem(0x3088, { 0x47 });
        gbc.writeMem(0x3dab, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe438);
        EXPECT(gbc.pc(), 0x3dad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 003C
        gbc.setState(0x267f, 0x8a88, 0xc5f0, 0xcec9, 0xd0ba, 0x9669, 0x1, 0x1);
        gbc.writeMem(0x267f, { 0xcb, 0xce });
        gbc.writeMem(0x9669, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x8a88);
        EXPECT(gbc.pc(), 0x2681);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9669), 0x4e);
        // CB CE 003D
        gbc.setState(0xca5b, 0xa1f0, 0x1cc0, 0x8ddb, 0x8665, 0x6510, 0x0, 0x0);
        gbc.writeMem(0x6510, { 0x3 });
        gbc.writeMem(0xca5b, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa1f0);
        EXPECT(gbc.pc(), 0xca5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca5b), 0xcb);
        EXPECT(gbc.readMem(0xca5c), 0xce);
        // CB CE 003E
        gbc.setState(0x813c, 0x5458, 0x14a0, 0xc88d, 0x1013, 0xeaf5, 0x0, 0x0);
        gbc.writeMem(0x813c, { 0xcb, 0xce });
        gbc.writeMem(0xeaf5, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x5458);
        EXPECT(gbc.pc(), 0x813e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x813c), 0xcb);
        EXPECT(gbc.readMem(0x813d), 0xce);
        EXPECT(gbc.readMem(0xeaf5), 0xba);
        // CB CE 003F
        gbc.setState(0x6a3e, 0x12c1, 0x1c30, 0x87a3, 0x835b, 0x81e0, 0x0, 0x1);
        gbc.writeMem(0x6a3e, { 0xcb, 0xce });
        gbc.writeMem(0x81e0, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x12c1);
        EXPECT(gbc.pc(), 0x6a40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81e0), 0xe3);
        // CB CE 0040
        gbc.setState(0x7dbe, 0x6f2e, 0xeaf0, 0x1301, 0x4fb1, 0xbcdc, 0x0, 0x0);
        gbc.writeMem(0x7dbe, { 0xcb, 0xce });
        gbc.writeMem(0xbcdc, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6f2e);
        EXPECT(gbc.pc(), 0x7dc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcdc), 0x63);
        // CB CE 0041
        gbc.setState(0xe472, 0xcd29, 0x9610, 0x9c5e, 0xbb1, 0x8fc6, 0x0, 0x1);
        gbc.writeMem(0x8fc6, { 0x3b });
        gbc.writeMem(0xe472, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcd29);
        EXPECT(gbc.pc(), 0xe474);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fc6), 0x3b);
        EXPECT(gbc.readMem(0xe472), 0xcb);
        EXPECT(gbc.readMem(0xe473), 0xce);
        // CB CE 0043
        gbc.setState(0xcf0d, 0x54b3, 0x8220, 0x36e3, 0x6b41, 0x8084, 0x1, 0x1);
        gbc.writeMem(0x8084, { 0xe });
        gbc.writeMem(0xcf0d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x54b3);
        EXPECT(gbc.pc(), 0xcf0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8084), 0xe);
        EXPECT(gbc.readMem(0xcf0d), 0xcb);
        EXPECT(gbc.readMem(0xcf0e), 0xce);
        // CB CE 004A
        gbc.setState(0x3038, 0x31d8, 0xa8e0, 0x9602, 0x83b0, 0x92a8, 0x0, 0x0);
        gbc.writeMem(0x3038, { 0xcb, 0xce });
        gbc.writeMem(0x92a8, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x31d8);
        EXPECT(gbc.pc(), 0x303a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a8), 0x27);
        // CB CE 004B
        gbc.setState(0xc43c, 0xb7a, 0xa770, 0x762a, 0xa480, 0x3b40, 0x0, 0x1);
        gbc.writeMem(0x3b40, { 0x5a });
        gbc.writeMem(0xc43c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xb7a);
        EXPECT(gbc.pc(), 0xc43e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc43c), 0xcb);
        EXPECT(gbc.readMem(0xc43d), 0xce);
        // CB CE 004C
        gbc.setState(0x37ef, 0x2711, 0x29c0, 0x9aff, 0x1792, 0x9355, 0x1, 0x0);
        gbc.writeMem(0x37ef, { 0xcb, 0xce });
        gbc.writeMem(0x9355, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x2711);
        EXPECT(gbc.pc(), 0x37f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9355), 0x6);
        // CB CE 004D
        gbc.setState(0xb85a, 0xc0e8, 0x1f00, 0x7acc, 0x6635, 0xae82, 0x1, 0x0);
        gbc.writeMem(0xae82, { 0x35 });
        gbc.writeMem(0xb85a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc0e8);
        EXPECT(gbc.pc(), 0xb85c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae82), 0x37);
        EXPECT(gbc.readMem(0xb85a), 0xcb);
        EXPECT(gbc.readMem(0xb85b), 0xce);
        // CB CE 004F
        gbc.setState(0xb5a9, 0x317, 0xec20, 0xb11c, 0xe1ae, 0xaf94, 0x0, 0x0);
        gbc.writeMem(0xaf94, { 0x84 });
        gbc.writeMem(0xb5a9, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x317);
        EXPECT(gbc.pc(), 0xb5ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf94), 0x86);
        EXPECT(gbc.readMem(0xb5a9), 0xcb);
        EXPECT(gbc.readMem(0xb5aa), 0xce);
        // CB CE 0050
        gbc.setState(0x2c3b, 0xfca4, 0x2db0, 0x338, 0xc74e, 0x6646, 0x0, 0x0);
        gbc.writeMem(0x2c3b, { 0xcb, 0xce });
        gbc.writeMem(0x6646, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xfca4);
        EXPECT(gbc.pc(), 0x2c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0051
        gbc.setState(0x246f, 0x1835, 0xee0, 0x207f, 0xca42, 0x8ebc, 0x0, 0x0);
        gbc.writeMem(0x246f, { 0xcb, 0xce });
        gbc.writeMem(0x8ebc, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x1835);
        EXPECT(gbc.pc(), 0x2471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ebc), 0x7);
        // CB CE 0052
        gbc.setState(0xd0f0, 0xeca4, 0x1960, 0x7e37, 0xfd29, 0x5d8a, 0x0, 0x1);
        gbc.writeMem(0x5d8a, { 0xef });
        gbc.writeMem(0xd0f0, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xeca4);
        EXPECT(gbc.pc(), 0xd0f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0f0), 0xcb);
        EXPECT(gbc.readMem(0xd0f1), 0xce);
        // CB CE 0054
        gbc.setState(0x6ac9, 0x4044, 0xcc90, 0x3deb, 0xee08, 0xc62e, 0x0, 0x0);
        gbc.writeMem(0x6ac9, { 0xcb, 0xce });
        gbc.writeMem(0xc62e, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x4044);
        EXPECT(gbc.pc(), 0x6acb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc62e), 0xce);
        // CB CE 0055
        gbc.setState(0xd21a, 0xb3e0, 0xce30, 0xe2c1, 0x9edf, 0xda06, 0x0, 0x0);
        gbc.writeMem(0xd21a, { 0xcb, 0xce });
        gbc.writeMem(0xda06, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xb3e0);
        EXPECT(gbc.pc(), 0xd21c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd21a), 0xcb);
        EXPECT(gbc.readMem(0xd21b), 0xce);
        EXPECT(gbc.readMem(0xda06), 0x36);
        // CB CE 0056
        gbc.setState(0x7980, 0x68c5, 0xe6b0, 0x13db, 0xaade, 0x9ca4, 0x1, 0x0);
        gbc.writeMem(0x7980, { 0xcb, 0xce });
        gbc.writeMem(0x9ca4, { 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x68c5);
        EXPECT(gbc.pc(), 0x7982);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca4), 0x56);
        // CB CE 0058
        gbc.setState(0x24fc, 0xe21f, 0x74e0, 0xabef, 0xfe69, 0xb780, 0x0, 0x0);
        gbc.writeMem(0x24fc, { 0xcb, 0xce });
        gbc.writeMem(0xb780, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe21f);
        EXPECT(gbc.pc(), 0x24fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb780), 0x93);
        // CB CE 005A
        gbc.setState(0x3900, 0xb601, 0x8420, 0xbf1e, 0xba1d, 0x7670, 0x0, 0x0);
        gbc.writeMem(0x3900, { 0xcb, 0xce });
        gbc.writeMem(0x7670, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xb601);
        EXPECT(gbc.pc(), 0x3902);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 005C
        gbc.setState(0x4bef, 0xe675, 0x76c0, 0x1dd7, 0x3a25, 0xfc53, 0x1, 0x0);
        gbc.writeMem(0x4bef, { 0xcb, 0xce });
        gbc.writeMem(0xfc53, { 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe675);
        EXPECT(gbc.pc(), 0x4bf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc53), 0x76);
        // CB CE 005D
        gbc.setState(0x2fcd, 0x138b, 0x9c60, 0xa78, 0x69b1, 0x3024, 0x1, 0x0);
        gbc.writeMem(0x2fcd, { 0xcb, 0xce });
        gbc.writeMem(0x3024, { 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x138b);
        EXPECT(gbc.pc(), 0x2fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 005E
        gbc.setState(0xd574, 0xe89f, 0x6f80, 0xb09, 0x8525, 0xb537, 0x0, 0x1);
        gbc.writeMem(0xb537, { 0xbb });
        gbc.writeMem(0xd574, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xe89f);
        EXPECT(gbc.pc(), 0xd576);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb537), 0xbb);
        EXPECT(gbc.readMem(0xd574), 0xcb);
        EXPECT(gbc.readMem(0xd575), 0xce);
        // CB CE 0061
        gbc.setState(0x5765, 0x9b3b, 0xa440, 0x561c, 0x1bb8, 0xdeda, 0x0, 0x0);
        gbc.writeMem(0x5765, { 0xcb, 0xce });
        gbc.writeMem(0xdeda, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9b3b);
        EXPECT(gbc.pc(), 0x5767);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeda), 0x43);
        // CB CE 0062
        gbc.setState(0x494c, 0x9fd6, 0x2350, 0xc04d, 0x559b, 0x9888, 0x0, 0x0);
        gbc.writeMem(0x494c, { 0xcb, 0xce });
        gbc.writeMem(0x9888, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x9fd6);
        EXPECT(gbc.pc(), 0x494e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9888), 0xc3);
        // CB CE 0063
        gbc.setState(0x8571, 0x61ab, 0xd1f0, 0x2504, 0xe1d9, 0x462d, 0x0, 0x0);
        gbc.writeMem(0x462d, { 0x6b });
        gbc.writeMem(0x8571, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x61ab);
        EXPECT(gbc.pc(), 0x8573);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8571), 0xcb);
        EXPECT(gbc.readMem(0x8572), 0xce);
        // CB CE 0064
        gbc.setState(0x1b10, 0x2d48, 0x4f0, 0x9f35, 0xee82, 0xfb1a, 0x1, 0x1);
        gbc.writeMem(0x1b10, { 0xcb, 0xce });
        gbc.writeMem(0xfb1a, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2d48);
        EXPECT(gbc.pc(), 0x1b12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb1a), 0x2f);
        // CB CE 0065
        gbc.setState(0xe038, 0x619e, 0xdd70, 0x303e, 0x61d3, 0xd6ec, 0x1, 0x0);
        gbc.writeMem(0xd6ec, { 0xb7 });
        gbc.writeMem(0xe038, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x619e);
        EXPECT(gbc.pc(), 0xe03a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ec), 0xb7);
        EXPECT(gbc.readMem(0xe038), 0xcb);
        EXPECT(gbc.readMem(0xe039), 0xce);
        // CB CE 0067
        gbc.setState(0x6372, 0xdf4f, 0x4a90, 0xcb24, 0x8678, 0x3d57, 0x1, 0x0);
        gbc.writeMem(0x3d57, { 0xef });
        gbc.writeMem(0x6372, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xdf4f);
        EXPECT(gbc.pc(), 0x6374);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0068
        gbc.setState(0x5f05, 0x39ba, 0x35b0, 0x7932, 0x6b14, 0xea40, 0x1, 0x0);
        gbc.writeMem(0x5f05, { 0xcb, 0xce });
        gbc.writeMem(0xea40, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x39ba);
        EXPECT(gbc.pc(), 0x5f07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea40), 0x9e);
        // CB CE 0069
        gbc.setState(0xc571, 0x5732, 0x9ee0, 0xb9e3, 0xbca5, 0x6203, 0x0, 0x1);
        gbc.writeMem(0x6203, { 0x92 });
        gbc.writeMem(0xc571, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5732);
        EXPECT(gbc.pc(), 0xc573);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc571), 0xcb);
        EXPECT(gbc.readMem(0xc572), 0xce);
        // CB CE 006A
        gbc.setState(0x2081, 0xac65, 0x8c40, 0xd3a7, 0x9012, 0x8cd1, 0x0, 0x1);
        gbc.writeMem(0x2081, { 0xcb, 0xce });
        gbc.writeMem(0x8cd1, { 0xbe });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xac65);
        EXPECT(gbc.pc(), 0x2083);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cd1), 0xbe);
        // CB CE 006B
        gbc.setState(0x610b, 0x7fae, 0x1ce0, 0xa3d2, 0x339c, 0x83c6, 0x0, 0x1);
        gbc.writeMem(0x610b, { 0xcb, 0xce });
        gbc.writeMem(0x83c6, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7fae);
        EXPECT(gbc.pc(), 0x610d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83c6), 0x22);
        // CB CE 006C
        gbc.setState(0x9a6b, 0x83c7, 0xfb10, 0x2d5e, 0xfdd2, 0x8e90, 0x1, 0x0);
        gbc.writeMem(0x8e90, { 0xa2 });
        gbc.writeMem(0x9a6b, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x83c7);
        EXPECT(gbc.pc(), 0x9a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e90), 0xa2);
        EXPECT(gbc.readMem(0x9a6b), 0xcb);
        EXPECT(gbc.readMem(0x9a6c), 0xce);
        // CB CE 006D
        gbc.setState(0x98ad, 0x60cb, 0xbfd0, 0x8005, 0x1f77, 0x59db, 0x0, 0x0);
        gbc.writeMem(0x59db, { 0xf3 });
        gbc.writeMem(0x98ad, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x60cb);
        EXPECT(gbc.pc(), 0x98af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ad), 0xcb);
        EXPECT(gbc.readMem(0x98ae), 0xce);
        // CB CE 006F
        gbc.setState(0x13bf, 0xe33e, 0x39b0, 0x2de7, 0xdb64, 0xdc9c, 0x1, 0x0);
        gbc.writeMem(0x13bf, { 0xcb, 0xce });
        gbc.writeMem(0xdc9c, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe33e);
        EXPECT(gbc.pc(), 0x13c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc9c), 0xc6);
        // CB CE 0070
        gbc.setState(0xe792, 0xaaa3, 0x89a0, 0xe944, 0x40d6, 0xdffb, 0x0, 0x1);
        gbc.writeMem(0xdffb, { 0x50 });
        gbc.writeMem(0xe792, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xaaa3);
        EXPECT(gbc.pc(), 0xe794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdffb), 0x52);
        EXPECT(gbc.readMem(0xe792), 0xcb);
        EXPECT(gbc.readMem(0xe793), 0xce);
        // CB CE 0071
        gbc.setState(0x46e9, 0x94a, 0x73f0, 0x7d91, 0x88fe, 0xeec0, 0x1, 0x1);
        gbc.writeMem(0x46e9, { 0xcb, 0xce });
        gbc.writeMem(0xeec0, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x94a);
        EXPECT(gbc.pc(), 0x46eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeec0), 0x22);
        // CB CE 0073
        gbc.setState(0x843a, 0x1266, 0x30f0, 0xdb15, 0xc23c, 0xc990, 0x0, 0x1);
        gbc.writeMem(0x843a, { 0xcb, 0xce });
        gbc.writeMem(0xc990, { 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x1266);
        EXPECT(gbc.pc(), 0x843c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x843a), 0xcb);
        EXPECT(gbc.readMem(0x843b), 0xce);
        EXPECT(gbc.readMem(0xc990), 0x2b);
        // CB CE 0075
        gbc.setState(0x8a31, 0xf95c, 0x9920, 0x1f91, 0xdc48, 0xd0ff, 0x1, 0x1);
        gbc.writeMem(0x8a31, { 0xcb, 0xce });
        gbc.writeMem(0xd0ff, { 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf95c);
        EXPECT(gbc.pc(), 0x8a33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a31), 0xcb);
        EXPECT(gbc.readMem(0x8a32), 0xce);
        EXPECT(gbc.readMem(0xd0ff), 0xb);
        // CB CE 007A
        gbc.setState(0x2486, 0x91fe, 0x39a0, 0xd201, 0xb48a, 0xb614, 0x0, 0x0);
        gbc.writeMem(0x2486, { 0xcb, 0xce });
        gbc.writeMem(0xb614, { 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x91fe);
        EXPECT(gbc.pc(), 0x2488);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb614), 0x4f);
        // CB CE 007C
        gbc.setState(0x1ce1, 0x3e9e, 0xea0, 0x408a, 0x5c3a, 0x1b91, 0x1, 0x0);
        gbc.writeMem(0x1b91, { 0x57 });
        gbc.writeMem(0x1ce1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3e9e);
        EXPECT(gbc.pc(), 0x1ce3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 007D
        gbc.setState(0xd0a6, 0x2b70, 0x2780, 0xcea, 0x8e96, 0x8e14, 0x1, 0x1);
        gbc.writeMem(0x8e14, { 0xfb });
        gbc.writeMem(0xd0a6, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2b70);
        EXPECT(gbc.pc(), 0xd0a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e14), 0xfb);
        EXPECT(gbc.readMem(0xd0a6), 0xcb);
        EXPECT(gbc.readMem(0xd0a7), 0xce);
        // CB CE 007F
        gbc.setState(0x5ac, 0x402, 0x7d70, 0x4697, 0x9769, 0xcfbb, 0x1, 0x1);
        gbc.writeMem(0x5ac, { 0xcb, 0xce });
        gbc.writeMem(0xcfbb, { 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x402);
        EXPECT(gbc.pc(), 0x5ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfbb), 0x8b);
        // CB CE 0080
        gbc.setState(0xab25, 0x59ab, 0x4620, 0x9bf0, 0xf0ae, 0xe00d, 0x0, 0x1);
        gbc.writeMem(0xab25, { 0xcb, 0xce });
        gbc.writeMem(0xe00d, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x59ab);
        EXPECT(gbc.pc(), 0xab27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab25), 0xcb);
        EXPECT(gbc.readMem(0xab26), 0xce);
        EXPECT(gbc.readMem(0xe00d), 0xbb);
        // CB CE 0081
        gbc.setState(0x3bed, 0x9a89, 0x33e0, 0x20d0, 0x1da4, 0x8a95, 0x0, 0x1);
        gbc.writeMem(0x3bed, { 0xcb, 0xce });
        gbc.writeMem(0x8a95, { 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x9a89);
        EXPECT(gbc.pc(), 0x3bef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a95), 0x2e);
        // CB CE 0082
        gbc.setState(0x186b, 0x4e52, 0x9ca0, 0x36fa, 0x4b8f, 0xf8ec, 0x0, 0x0);
        gbc.writeMem(0x186b, { 0xcb, 0xce });
        gbc.writeMem(0xf8ec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x4e52);
        EXPECT(gbc.pc(), 0x186d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8ec), 0x2);
        // CB CE 0083
        gbc.setState(0x498e, 0xe28, 0xf2d0, 0xeb4e, 0xba41, 0x147a, 0x0, 0x0);
        gbc.writeMem(0x147a, { 0x5f });
        gbc.writeMem(0x498e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xe28);
        EXPECT(gbc.pc(), 0x4990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0084
        gbc.setState(0x984, 0xc459, 0xa3c0, 0x3f7, 0x5640, 0xac43, 0x1, 0x1);
        gbc.writeMem(0x984, { 0xcb, 0xce });
        gbc.writeMem(0xac43, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc459);
        EXPECT(gbc.pc(), 0x986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac43), 0xaa);
        // CB CE 0085
        gbc.setState(0x247f, 0xd81d, 0x7a80, 0xee3d, 0x73f1, 0x93c9, 0x0, 0x0);
        gbc.writeMem(0x247f, { 0xcb, 0xce });
        gbc.writeMem(0x93c9, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd81d);
        EXPECT(gbc.pc(), 0x2481);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93c9), 0xbf);
        // CB CE 0086
        gbc.setState(0xe315, 0x58b1, 0x5bf0, 0xa2fa, 0x6ab, 0x69c3, 0x1, 0x1);
        gbc.writeMem(0x69c3, { 0xa7 });
        gbc.writeMem(0xe315, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x58b1);
        EXPECT(gbc.pc(), 0xe317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe315), 0xcb);
        EXPECT(gbc.readMem(0xe316), 0xce);
        // CB CE 0087
        gbc.setState(0x9a98, 0xa967, 0x9d60, 0x71e6, 0xf065, 0x54f1, 0x0, 0x0);
        gbc.writeMem(0x54f1, { 0x3a });
        gbc.writeMem(0x9a98, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa967);
        EXPECT(gbc.pc(), 0x9a9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a98), 0xcb);
        EXPECT(gbc.readMem(0x9a99), 0xce);
        // CB CE 0089
        gbc.setState(0x6884, 0xdfe5, 0x9ef0, 0xc75f, 0xd7fb, 0xbfb4, 0x1, 0x0);
        gbc.writeMem(0x6884, { 0xcb, 0xce });
        gbc.writeMem(0xbfb4, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xdfe5);
        EXPECT(gbc.pc(), 0x6886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfb4), 0x96);
        // CB CE 008A
        gbc.setState(0x90c2, 0x3f2, 0x5920, 0xa6a0, 0x4393, 0xaadc, 0x1, 0x1);
        gbc.writeMem(0x90c2, { 0xcb, 0xce });
        gbc.writeMem(0xaadc, { 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x3f2);
        EXPECT(gbc.pc(), 0x90c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c2), 0xcb);
        EXPECT(gbc.readMem(0x90c3), 0xce);
        EXPECT(gbc.readMem(0xaadc), 0xbe);
        // CB CE 008C
        gbc.setState(0x79e3, 0xecc5, 0x9b0, 0xa007, 0x3684, 0xe9a, 0x1, 0x0);
        gbc.writeMem(0xe9a, { 0x2b });
        gbc.writeMem(0x79e3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xecc5);
        EXPECT(gbc.pc(), 0x79e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 008D
        gbc.setState(0x7123, 0x9616, 0x1210, 0x22c2, 0x54db, 0xf264, 0x0, 0x1);
        gbc.writeMem(0x7123, { 0xcb, 0xce });
        gbc.writeMem(0xf264, { 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9616);
        EXPECT(gbc.pc(), 0x7125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf264), 0x7);
        // CB CE 008E
        gbc.setState(0x98f7, 0xbd18, 0xfd10, 0xb33f, 0xa962, 0xd631, 0x1, 0x1);
        gbc.writeMem(0x98f7, { 0xcb, 0xce });
        gbc.writeMem(0xd631, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbd18);
        EXPECT(gbc.pc(), 0x98f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98f7), 0xcb);
        EXPECT(gbc.readMem(0x98f8), 0xce);
        EXPECT(gbc.readMem(0xd631), 0x5f);
        // CB CE 0090
        gbc.setState(0xae2d, 0x672, 0x7660, 0xf60a, 0x7081, 0xa957, 0x0, 0x0);
        gbc.writeMem(0xa957, { 0x72 });
        gbc.writeMem(0xae2d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x672);
        EXPECT(gbc.pc(), 0xae2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa957), 0x72);
        EXPECT(gbc.readMem(0xae2d), 0xcb);
        EXPECT(gbc.readMem(0xae2e), 0xce);
        // CB CE 0091
        gbc.setState(0x8eca, 0xf167, 0x6320, 0xd16f, 0x1365, 0x6929, 0x1, 0x1);
        gbc.writeMem(0x6929, { 0x6 });
        gbc.writeMem(0x8eca, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xf167);
        EXPECT(gbc.pc(), 0x8ecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eca), 0xcb);
        EXPECT(gbc.readMem(0x8ecb), 0xce);
        // CB CE 0092
        gbc.setState(0xa2d1, 0xea60, 0xf420, 0x12f4, 0xe96a, 0xfa49, 0x1, 0x1);
        gbc.writeMem(0xa2d1, { 0xcb, 0xce });
        gbc.writeMem(0xfa49, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xea60);
        EXPECT(gbc.pc(), 0xa2d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d1), 0xcb);
        EXPECT(gbc.readMem(0xa2d2), 0xce);
        EXPECT(gbc.readMem(0xfa49), 0xaf);
        // CB CE 0094
        gbc.setState(0xeb87, 0xa714, 0xeea0, 0x9937, 0xd2df, 0xcee7, 0x0, 0x0);
        gbc.writeMem(0xcee7, { 0xb2 });
        gbc.writeMem(0xeb87, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa714);
        EXPECT(gbc.pc(), 0xeb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcee7), 0xb2);
        EXPECT(gbc.readMem(0xeb87), 0xcb);
        EXPECT(gbc.readMem(0xeb88), 0xce);
        // CB CE 0098
        gbc.setState(0xee6c, 0x6dc7, 0x9b90, 0xe292, 0xc723, 0x2d47, 0x0, 0x1);
        gbc.writeMem(0x2d47, { 0xcb });
        gbc.writeMem(0xee6c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6dc7);
        EXPECT(gbc.pc(), 0xee6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee6c), 0xcb);
        EXPECT(gbc.readMem(0xee6d), 0xce);
        // CB CE 0099
        gbc.setState(0x29f5, 0x10ae, 0x2a90, 0x8705, 0xcfb9, 0x1d91, 0x0, 0x1);
        gbc.writeMem(0x1d91, { 0xa6 });
        gbc.writeMem(0x29f5, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x10ae);
        EXPECT(gbc.pc(), 0x29f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 009A
        gbc.setState(0x886, 0x2ffc, 0xe530, 0x9eb4, 0x19b8, 0x1cbd, 0x0, 0x0);
        gbc.writeMem(0x886, { 0xcb, 0xce });
        gbc.writeMem(0x1cbd, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x2ffc);
        EXPECT(gbc.pc(), 0x888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 009C
        gbc.setState(0x24ba, 0x6d6c, 0x62d0, 0x4aef, 0xe5d6, 0x332b, 0x1, 0x0);
        gbc.writeMem(0x24ba, { 0xcb, 0xce });
        gbc.writeMem(0x332b, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6d6c);
        EXPECT(gbc.pc(), 0x24bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 009D
        gbc.setState(0x239b, 0xf1b, 0x45a0, 0x7ec6, 0x8a2f, 0xfc9f, 0x1, 0x1);
        gbc.writeMem(0x239b, { 0xcb, 0xce });
        gbc.writeMem(0xfc9f, { 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf1b);
        EXPECT(gbc.pc(), 0x239d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc9f), 0xe6);
        // CB CE 009F
        gbc.setState(0x7896, 0xba31, 0x2b60, 0xe533, 0xf051, 0x864c, 0x0, 0x1);
        gbc.writeMem(0x7896, { 0xcb, 0xce });
        gbc.writeMem(0x864c, { 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xba31);
        EXPECT(gbc.pc(), 0x7898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x864c), 0xea);
        // CB CE 00A0
        gbc.setState(0x6128, 0x81, 0x5960, 0xf0a1, 0xab06, 0x9e3, 0x1, 0x1);
        gbc.writeMem(0x9e3, { 0xf7 });
        gbc.writeMem(0x6128, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x81);
        EXPECT(gbc.pc(), 0x612a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 00A1
        gbc.setState(0x256c, 0x6386, 0xbff0, 0x6a89, 0xd054, 0x82fa, 0x1, 0x0);
        gbc.writeMem(0x256c, { 0xcb, 0xce });
        gbc.writeMem(0x82fa, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6386);
        EXPECT(gbc.pc(), 0x256e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82fa), 0x3);
        // CB CE 00A2
        gbc.setState(0xd8b6, 0x4f87, 0xd4e0, 0xff3f, 0x16a2, 0x5a8e, 0x1, 0x0);
        gbc.writeMem(0x5a8e, { 0x9f });
        gbc.writeMem(0xd8b6, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4f87);
        EXPECT(gbc.pc(), 0xd8b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8b6), 0xcb);
        EXPECT(gbc.readMem(0xd8b7), 0xce);
        // CB CE 00A3
        gbc.setState(0xc86e, 0x4fc8, 0x1fd0, 0x6486, 0xeeb8, 0x9672, 0x1, 0x0);
        gbc.writeMem(0x9672, { 0x75 });
        gbc.writeMem(0xc86e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4fc8);
        EXPECT(gbc.pc(), 0xc870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9672), 0x77);
        EXPECT(gbc.readMem(0xc86e), 0xcb);
        EXPECT(gbc.readMem(0xc86f), 0xce);
        // CB CE 00A4
        gbc.setState(0xb231, 0xeb53, 0xa9c0, 0x3f32, 0xaf9f, 0xe308, 0x1, 0x1);
        gbc.writeMem(0xb231, { 0xcb, 0xce });
        gbc.writeMem(0xe308, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xeb53);
        EXPECT(gbc.pc(), 0xb233);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb231), 0xcb);
        EXPECT(gbc.readMem(0xb232), 0xce);
        EXPECT(gbc.readMem(0xe308), 0x8e);
        // CB CE 00A6
        gbc.setState(0x9cdc, 0x6174, 0x6120, 0x7cea, 0xd549, 0xba5, 0x1, 0x1);
        gbc.writeMem(0xba5, { 0x5b });
        gbc.writeMem(0x9cdc, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6174);
        EXPECT(gbc.pc(), 0x9cde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cdc), 0xcb);
        EXPECT(gbc.readMem(0x9cdd), 0xce);
        // CB CE 00A7
        gbc.setState(0x183d, 0xc4d5, 0xe2c0, 0x77d8, 0x41c2, 0xc35c, 0x1, 0x1);
        gbc.writeMem(0x183d, { 0xcb, 0xce });
        gbc.writeMem(0xc35c, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc4d5);
        EXPECT(gbc.pc(), 0x183f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc35c), 0x3a);
        // CB CE 00A8
        gbc.setState(0x25ed, 0xfa79, 0x1370, 0x8b37, 0x50ce, 0xf52c, 0x0, 0x0);
        gbc.writeMem(0x25ed, { 0xcb, 0xce });
        gbc.writeMem(0xf52c, { 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfa79);
        EXPECT(gbc.pc(), 0x25ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf52c), 0x17);
        // CB CE 00A9
        gbc.setState(0xd665, 0x4a39, 0xe890, 0x391c, 0x484b, 0x9837, 0x1, 0x1);
        gbc.writeMem(0x9837, { 0x56 });
        gbc.writeMem(0xd665, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4a39);
        EXPECT(gbc.pc(), 0xd667);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9837), 0x56);
        EXPECT(gbc.readMem(0xd665), 0xcb);
        EXPECT(gbc.readMem(0xd666), 0xce);
        // CB CE 00AB
        gbc.setState(0x8fdd, 0xc8f4, 0x4090, 0x3a34, 0x5cae, 0xbe71, 0x1, 0x1);
        gbc.writeMem(0x8fdd, { 0xcb, 0xce });
        gbc.writeMem(0xbe71, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc8f4);
        EXPECT(gbc.pc(), 0x8fdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fdd), 0xcb);
        EXPECT(gbc.readMem(0x8fde), 0xce);
        EXPECT(gbc.readMem(0xbe71), 0x2);
        // CB CE 00AC
        gbc.setState(0x3d21, 0x7f6e, 0x9b20, 0x85d0, 0xb3dc, 0x9995, 0x0, 0x1);
        gbc.writeMem(0x3d21, { 0xcb, 0xce });
        gbc.writeMem(0x9995, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7f6e);
        EXPECT(gbc.pc(), 0x3d23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9995), 0xc6);
        // CB CE 00AF
        gbc.setState(0x4247, 0xba60, 0x5d80, 0xdcd3, 0x9191, 0x3fa5, 0x1, 0x1);
        gbc.writeMem(0x3fa5, { 0xb6 });
        gbc.writeMem(0x4247, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xba60);
        EXPECT(gbc.pc(), 0x4249);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 00B1
        gbc.setState(0x3094, 0x9bbf, 0x9200, 0x3b19, 0x1867, 0xe8cc, 0x0, 0x0);
        gbc.writeMem(0x3094, { 0xcb, 0xce });
        gbc.writeMem(0xe8cc, { 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9bbf);
        EXPECT(gbc.pc(), 0x3096);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8cc), 0x32);
        // CB CE 00B3
        gbc.setState(0x1d05, 0xa833, 0x71a0, 0x96e6, 0x48fc, 0xd88c, 0x0, 0x0);
        gbc.writeMem(0x1d05, { 0xcb, 0xce });
        gbc.writeMem(0xd88c, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xa833);
        EXPECT(gbc.pc(), 0x1d07);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd88c), 0x8f);
        // CB CE 00B4
        gbc.setState(0xdb82, 0xe813, 0x8d80, 0xfdf0, 0xa771, 0x37f6, 0x0, 0x0);
        gbc.writeMem(0x37f6, { 0xce });
        gbc.writeMem(0xdb82, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xe813);
        EXPECT(gbc.pc(), 0xdb84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb82), 0xcb);
        EXPECT(gbc.readMem(0xdb83), 0xce);
        // CB CE 00B5
        gbc.setState(0xa3f3, 0xdc9a, 0x18c0, 0x8dff, 0xe554, 0x898, 0x0, 0x1);
        gbc.writeMem(0x898, { 0xb7 });
        gbc.writeMem(0xa3f3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xdc9a);
        EXPECT(gbc.pc(), 0xa3f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f3), 0xcb);
        EXPECT(gbc.readMem(0xa3f4), 0xce);
        // CB CE 00B6
        gbc.setState(0x2a87, 0x4085, 0x6fc0, 0x6c42, 0x1a7a, 0x82d, 0x0, 0x1);
        gbc.writeMem(0x82d, { 0x4a });
        gbc.writeMem(0x2a87, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4085);
        EXPECT(gbc.pc(), 0x2a89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 00B7
        gbc.setState(0x58ab, 0x9927, 0xa940, 0xf97f, 0x5eb5, 0x938a, 0x1, 0x1);
        gbc.writeMem(0x58ab, { 0xcb, 0xce });
        gbc.writeMem(0x938a, { 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x9927);
        EXPECT(gbc.pc(), 0x58ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x938a), 0xf7);
        // CB CE 00B9
        gbc.setState(0x212d, 0x2a04, 0xc160, 0x50c5, 0xa0ca, 0x4a41, 0x1, 0x1);
        gbc.writeMem(0x212d, { 0xcb, 0xce });
        gbc.writeMem(0x4a41, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x2a04);
        EXPECT(gbc.pc(), 0x212f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 00BA
        gbc.setState(0xea6, 0xd921, 0xbb20, 0x7fdc, 0x7571, 0x9619, 0x1, 0x0);
        gbc.writeMem(0xea6, { 0xcb, 0xce });
        gbc.writeMem(0x9619, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd921);
        EXPECT(gbc.pc(), 0xea8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9619), 0x23);
        // CB CE 00BB
        gbc.setState(0x4e7, 0x39ad, 0x58b0, 0xd44a, 0x1aed, 0xc0b7, 0x1, 0x1);
        gbc.writeMem(0x4e7, { 0xcb, 0xce });
        gbc.writeMem(0xc0b7, { 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x39ad);
        EXPECT(gbc.pc(), 0x4e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b7), 0x22);
        // CB CE 00BC
        gbc.setState(0x94a8, 0xb6ac, 0x8f90, 0xb572, 0x13ca, 0x432e, 0x0, 0x0);
        gbc.writeMem(0x432e, { 0x77 });
        gbc.writeMem(0x94a8, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb6ac);
        EXPECT(gbc.pc(), 0x94aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94a8), 0xcb);
        EXPECT(gbc.readMem(0x94a9), 0xce);
        // CB CE 00BD
        gbc.setState(0xe359, 0x1167, 0x47e0, 0x8f66, 0x46fc, 0x3c80, 0x0, 0x1);
        gbc.writeMem(0x3c80, { 0x7e });
        gbc.writeMem(0xe359, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1167);
        EXPECT(gbc.pc(), 0xe35b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe359), 0xcb);
        EXPECT(gbc.readMem(0xe35a), 0xce);
        // CB CE 00BE
        gbc.setState(0xbd5d, 0x1250, 0x7230, 0x2d4, 0x6cd8, 0x25ee, 0x0, 0x1);
        gbc.writeMem(0x25ee, { 0x32 });
        gbc.writeMem(0xbd5d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1250);
        EXPECT(gbc.pc(), 0xbd5f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5d), 0xcb);
        EXPECT(gbc.readMem(0xbd5e), 0xce);
        // CB CE 00BF
        gbc.setState(0x9e21, 0xa732, 0x79c0, 0x7b0c, 0x866f, 0x8679, 0x1, 0x0);
        gbc.writeMem(0x8679, { 0x21 });
        gbc.writeMem(0x9e21, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa732);
        EXPECT(gbc.pc(), 0x9e23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8679), 0x23);
        EXPECT(gbc.readMem(0x9e21), 0xcb);
        EXPECT(gbc.readMem(0x9e22), 0xce);
        // CB CE 00C0
        gbc.setState(0x2ed1, 0xc092, 0x46a0, 0x6fb, 0x75e5, 0x5496, 0x1, 0x1);
        gbc.writeMem(0x2ed1, { 0xcb, 0xce });
        gbc.writeMem(0x5496, { 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xc092);
        EXPECT(gbc.pc(), 0x2ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 00C1
        gbc.setState(0x124a, 0x85b0, 0xf030, 0xf63e, 0x3993, 0x7136, 0x1, 0x0);
        gbc.writeMem(0x124a, { 0xcb, 0xce });
        gbc.writeMem(0x7136, { 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x85b0);
        EXPECT(gbc.pc(), 0x124c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 00C2
        gbc.setState(0x4561, 0x30ba, 0x3960, 0xa152, 0x5615, 0xecc0, 0x1, 0x0);
        gbc.writeMem(0x4561, { 0xcb, 0xce });
        gbc.writeMem(0xecc0, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x30ba);
        EXPECT(gbc.pc(), 0x4563);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecc0), 0xeb);
        // CB CE 00C3
        gbc.setState(0x4f63, 0x6ed3, 0x4c70, 0x4d84, 0x95d5, 0xc3a5, 0x1, 0x1);
        gbc.writeMem(0x4f63, { 0xcb, 0xce });
        gbc.writeMem(0xc3a5, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x6ed3);
        EXPECT(gbc.pc(), 0x4f65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3a5), 0xf6);
        // CB CE 00C4
        gbc.setState(0x6ec3, 0xbc9a, 0x4cb0, 0x9d71, 0x699c, 0xb7fc, 0x0, 0x1);
        gbc.writeMem(0x6ec3, { 0xcb, 0xce });
        gbc.writeMem(0xb7fc, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbc9a);
        EXPECT(gbc.pc(), 0x6ec5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7fc), 0x62);
        // CB CE 00C5
        gbc.setState(0xd269, 0x734a, 0xe8d0, 0x6dd, 0xa77, 0xb810, 0x1, 0x1);
        gbc.writeMem(0xb810, { 0x73 });
        gbc.writeMem(0xd269, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x734a);
        EXPECT(gbc.pc(), 0xd26b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb810), 0x73);
        EXPECT(gbc.readMem(0xd269), 0xcb);
        EXPECT(gbc.readMem(0xd26a), 0xce);
        // CB CE 00C6
        gbc.setState(0x97a0, 0x5e30, 0x67a0, 0xc938, 0xac7d, 0x97c6, 0x0, 0x1);
        gbc.writeMem(0x97a0, { 0xcb, 0xce });
        gbc.writeMem(0x97c6, { 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5e30);
        EXPECT(gbc.pc(), 0x97a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97a0), 0xcb);
        EXPECT(gbc.readMem(0x97a1), 0xce);
        EXPECT(gbc.readMem(0x97c6), 0x2a);
        // CB CE 00C7
        gbc.setState(0x3281, 0xffde, 0xfd60, 0xb3ce, 0xb192, 0x8934, 0x1, 0x1);
        gbc.writeMem(0x3281, { 0xcb, 0xce });
        gbc.writeMem(0x8934, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xffde);
        EXPECT(gbc.pc(), 0x3283);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8934), 0x86);
        // CB CE 00C8
        gbc.setState(0xef2d, 0x9094, 0x5df0, 0x3bf4, 0xaa28, 0x875a, 0x1, 0x1);
        gbc.writeMem(0x875a, { 0xbf });
        gbc.writeMem(0xef2d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x9094);
        EXPECT(gbc.pc(), 0xef2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x875a), 0xbf);
        EXPECT(gbc.readMem(0xef2d), 0xcb);
        EXPECT(gbc.readMem(0xef2e), 0xce);
        // CB CE 00C9
        gbc.setState(0x6529, 0xc086, 0x8b50, 0xfe52, 0xc369, 0xa6bc, 0x1, 0x1);
        gbc.writeMem(0x6529, { 0xcb, 0xce });
        gbc.writeMem(0xa6bc, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xc086);
        EXPECT(gbc.pc(), 0x652b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6bc), 0x6e);
        // CB CE 00CA
        gbc.setState(0x363, 0xa2f1, 0x5180, 0xc0d4, 0xc229, 0xf8a3, 0x0, 0x1);
        gbc.writeMem(0x363, { 0xcb, 0xce });
        gbc.writeMem(0xf8a3, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa2f1);
        EXPECT(gbc.pc(), 0x365);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8a3), 0x87);
        // CB CE 00CB
        gbc.setState(0x1af5, 0xac6f, 0x7f10, 0x515c, 0xb123, 0xfc0f, 0x0, 0x1);
        gbc.writeMem(0x1af5, { 0xcb, 0xce });
        gbc.writeMem(0xfc0f, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xac6f);
        EXPECT(gbc.pc(), 0x1af7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc0f), 0x36);
        // CB CE 00CC
        gbc.setState(0xc33d, 0xbfb8, 0xa7e0, 0xf027, 0xb5e1, 0xd8e8, 0x1, 0x0);
        gbc.writeMem(0xc33d, { 0xcb, 0xce });
        gbc.writeMem(0xd8e8, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xbfb8);
        EXPECT(gbc.pc(), 0xc33f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc33d), 0xcb);
        EXPECT(gbc.readMem(0xc33e), 0xce);
        EXPECT(gbc.readMem(0xd8e8), 0x8a);
        // CB CE 00CE
        gbc.setState(0x490f, 0x918a, 0x8ca0, 0x904e, 0x4b09, 0x5cfe, 0x1, 0x1);
        gbc.writeMem(0x490f, { 0xcb, 0xce });
        gbc.writeMem(0x5cfe, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x918a);
        EXPECT(gbc.pc(), 0x4911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 00CF
        gbc.setState(0x2b89, 0x65ed, 0x2410, 0x5400, 0xe790, 0xad5f, 0x1, 0x1);
        gbc.writeMem(0x2b89, { 0xcb, 0xce });
        gbc.writeMem(0xad5f, { 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x65ed);
        EXPECT(gbc.pc(), 0x2b8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad5f), 0x87);
        // CB CE 00D0
        gbc.setState(0x1a48, 0xc8a9, 0x1a90, 0x5ec2, 0x5927, 0xe963, 0x1, 0x1);
        gbc.writeMem(0x1a48, { 0xcb, 0xce });
        gbc.writeMem(0xe963, { 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xc8a9);
        EXPECT(gbc.pc(), 0x1a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe963), 0xa);
        // CB CE 00D1
        gbc.setState(0x7e81, 0x80a8, 0x2e50, 0x4a12, 0x478c, 0x6143, 0x1, 0x0);
        gbc.writeMem(0x6143, { 0x4b });
        gbc.writeMem(0x7e81, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x80a8);
        EXPECT(gbc.pc(), 0x7e83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 00D2
        gbc.setState(0x9ef4, 0xf58, 0x5730, 0x2827, 0xcd47, 0x3f94, 0x0, 0x0);
        gbc.writeMem(0x3f94, { 0xd6 });
        gbc.writeMem(0x9ef4, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xf58);
        EXPECT(gbc.pc(), 0x9ef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef4), 0xcb);
        EXPECT(gbc.readMem(0x9ef5), 0xce);
        // CB CE 00D3
        gbc.setState(0xda99, 0x1287, 0x8360, 0xa63, 0x251b, 0x29d2, 0x1, 0x0);
        gbc.writeMem(0x29d2, { 0x66 });
        gbc.writeMem(0xda99, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x1287);
        EXPECT(gbc.pc(), 0xda9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda99), 0xcb);
        EXPECT(gbc.readMem(0xda9a), 0xce);
        // CB CE 00D4
        gbc.setState(0x3b3f, 0x73a7, 0x96d0, 0xbc7e, 0x3d18, 0x2c82, 0x1, 0x0);
        gbc.writeMem(0x2c82, { 0xc2 });
        gbc.writeMem(0x3b3f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x73a7);
        EXPECT(gbc.pc(), 0x3b41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 00D5
        gbc.setState(0xda49, 0x2b6f, 0x850, 0x1a6a, 0x619d, 0xc3ce, 0x0, 0x1);
        gbc.writeMem(0xc3ce, { 0xa0 });
        gbc.writeMem(0xda49, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2b6f);
        EXPECT(gbc.pc(), 0xda4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc3ce), 0xa2);
        EXPECT(gbc.readMem(0xda49), 0xcb);
        EXPECT(gbc.readMem(0xda4a), 0xce);
        // CB CE 00D6
        gbc.setState(0xa28c, 0xe798, 0x7be0, 0x5187, 0xa3, 0x7421, 0x1, 0x1);
        gbc.writeMem(0x7421, { 0x36 });
        gbc.writeMem(0xa28c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe798);
        EXPECT(gbc.pc(), 0xa28e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa28c), 0xcb);
        EXPECT(gbc.readMem(0xa28d), 0xce);
        // CB CE 00D7
        gbc.setState(0xa59f, 0xb8d0, 0xa6d0, 0x3c6, 0xb341, 0x9e22, 0x0, 0x0);
        gbc.writeMem(0x9e22, { 0x96 });
        gbc.writeMem(0xa59f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xb8d0);
        EXPECT(gbc.pc(), 0xa5a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e22), 0x96);
        EXPECT(gbc.readMem(0xa59f), 0xcb);
        EXPECT(gbc.readMem(0xa5a0), 0xce);
        // CB CE 00D8
        gbc.setState(0x3a6e, 0xb25f, 0x83f0, 0x9015, 0xc380, 0xfa5b, 0x0, 0x0);
        gbc.writeMem(0x3a6e, { 0xcb, 0xce });
        gbc.writeMem(0xfa5b, { 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xb25f);
        EXPECT(gbc.pc(), 0x3a70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfa5b), 0x7a);
        // CB CE 00DA
        gbc.setState(0xbff, 0xaa98, 0x8760, 0x4d3, 0x8334, 0x52a1, 0x1, 0x1);
        gbc.writeMem(0xbff, { 0xcb, 0xce });
        gbc.writeMem(0x52a1, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xaa98);
        EXPECT(gbc.pc(), 0xc01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 00DB
        gbc.setState(0xc8c8, 0xdf26, 0x6b10, 0x6246, 0x8c31, 0xd9e1, 0x1, 0x0);
        gbc.writeMem(0xc8c8, { 0xcb, 0xce });
        gbc.writeMem(0xd9e1, { 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdf26);
        EXPECT(gbc.pc(), 0xc8ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c8), 0xcb);
        EXPECT(gbc.readMem(0xc8c9), 0xce);
        EXPECT(gbc.readMem(0xd9e1), 0x5e);
        // CB CE 00DC
        gbc.setState(0xaa3f, 0xf2e1, 0x98d0, 0x9291, 0x28f2, 0xd501, 0x1, 0x1);
        gbc.writeMem(0xaa3f, { 0xcb, 0xce });
        gbc.writeMem(0xd501, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf2e1);
        EXPECT(gbc.pc(), 0xaa41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa3f), 0xcb);
        EXPECT(gbc.readMem(0xaa40), 0xce);
        EXPECT(gbc.readMem(0xd501), 0x8a);
        // CB CE 00DD
        gbc.setState(0x9ef3, 0xf156, 0x6290, 0xad11, 0x7733, 0x635c, 0x1, 0x1);
        gbc.writeMem(0x635c, { 0xba });
        gbc.writeMem(0x9ef3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf156);
        EXPECT(gbc.pc(), 0x9ef5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ef3), 0xcb);
        EXPECT(gbc.readMem(0x9ef4), 0xce);
        // CB CE 00DE
        gbc.setState(0xe5a6, 0x9f31, 0x5d90, 0x1e3f, 0x9a4d, 0xbd39, 0x1, 0x1);
        gbc.writeMem(0xbd39, { 0x5d });
        gbc.writeMem(0xe5a6, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x9f31);
        EXPECT(gbc.pc(), 0xe5a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd39), 0x5f);
        EXPECT(gbc.readMem(0xe5a6), 0xcb);
        EXPECT(gbc.readMem(0xe5a7), 0xce);
        // CB CE 00DF
        gbc.setState(0xb2b, 0x7123, 0xb190, 0x2ea8, 0x88f8, 0x52d7, 0x0, 0x0);
        gbc.writeMem(0xb2b, { 0xcb, 0xce });
        gbc.writeMem(0x52d7, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x7123);
        EXPECT(gbc.pc(), 0xb2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 00E0
        gbc.setState(0x9b3, 0x48c6, 0xf7f0, 0x45b7, 0x21df, 0x80bd, 0x1, 0x1);
        gbc.writeMem(0x9b3, { 0xcb, 0xce });
        gbc.writeMem(0x80bd, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x48c6);
        EXPECT(gbc.pc(), 0x9b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80bd), 0x37);
        // CB CE 00E1
        gbc.setState(0xbd26, 0x786d, 0xc270, 0xc1db, 0x700d, 0xaf1, 0x1, 0x0);
        gbc.writeMem(0xaf1, { 0x87 });
        gbc.writeMem(0xbd26, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x786d);
        EXPECT(gbc.pc(), 0xbd28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd26), 0xcb);
        EXPECT(gbc.readMem(0xbd27), 0xce);
        // CB CE 00E2
        gbc.setState(0x27c5, 0x2bc, 0x3260, 0x3d30, 0xdf84, 0xb75e, 0x1, 0x1);
        gbc.writeMem(0x27c5, { 0xcb, 0xce });
        gbc.writeMem(0xb75e, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2bc);
        EXPECT(gbc.pc(), 0x27c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb75e), 0xf3);
        // CB CE 00E3
        gbc.setState(0x4ce7, 0x34d8, 0xc870, 0x3b3f, 0xa6c2, 0xd4f0, 0x1, 0x0);
        gbc.writeMem(0x4ce7, { 0xcb, 0xce });
        gbc.writeMem(0xd4f0, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x34d8);
        EXPECT(gbc.pc(), 0x4ce9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4f0), 0x7a);
        // CB CE 00E4
        gbc.setState(0x767a, 0xaa3e, 0x9df0, 0x17f6, 0x6199, 0xaf03, 0x0, 0x0);
        gbc.writeMem(0x767a, { 0xcb, 0xce });
        gbc.writeMem(0xaf03, { 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xaa3e);
        EXPECT(gbc.pc(), 0x767c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf03), 0x5a);
        // CB CE 00E5
        gbc.setState(0xcf94, 0xed84, 0xed20, 0x156f, 0xd007, 0xd677, 0x0, 0x1);
        gbc.writeMem(0xcf94, { 0xcb, 0xce });
        gbc.writeMem(0xd677, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xed84);
        EXPECT(gbc.pc(), 0xcf96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf94), 0xcb);
        EXPECT(gbc.readMem(0xcf95), 0xce);
        EXPECT(gbc.readMem(0xd677), 0xf6);
        // CB CE 00E6
        gbc.setState(0x1939, 0xaf30, 0xc340, 0xfbc2, 0x1c1a, 0x9261, 0x0, 0x1);
        gbc.writeMem(0x1939, { 0xcb, 0xce });
        gbc.writeMem(0x9261, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xaf30);
        EXPECT(gbc.pc(), 0x193b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9261), 0xb3);
        // CB CE 00E7
        gbc.setState(0x35ee, 0x7e25, 0x5870, 0x3f0d, 0x3daf, 0xe27a, 0x1, 0x1);
        gbc.writeMem(0x35ee, { 0xcb, 0xce });
        gbc.writeMem(0xe27a, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x7e25);
        EXPECT(gbc.pc(), 0x35f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe27a), 0x6b);
        // CB CE 00E9
        gbc.setState(0x6274, 0x4b0, 0xd900, 0xb976, 0x59bf, 0xd69f, 0x0, 0x1);
        gbc.writeMem(0x6274, { 0xcb, 0xce });
        gbc.writeMem(0xd69f, { 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4b0);
        EXPECT(gbc.pc(), 0x6276);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd69f), 0xba);
        // CB CE 00EC
        gbc.setState(0xfd5, 0x5562, 0x6d0, 0x205d, 0xeb6b, 0x811c, 0x0, 0x1);
        gbc.writeMem(0xfd5, { 0xcb, 0xce });
        gbc.writeMem(0x811c, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x5562);
        EXPECT(gbc.pc(), 0xfd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x811c), 0xe2);
        // CB CE 00ED
        gbc.setState(0x7b9d, 0x83ad, 0xa500, 0x66d0, 0xece3, 0xbfa, 0x1, 0x1);
        gbc.writeMem(0xbfa, { 0xcb });
        gbc.writeMem(0x7b9d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x83ad);
        EXPECT(gbc.pc(), 0x7b9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 00EF
        gbc.setState(0xea87, 0xd3ce, 0xeb40, 0x246d, 0x80ad, 0x351d, 0x1, 0x0);
        gbc.writeMem(0x351d, { 0xe });
        gbc.writeMem(0xea87, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd3ce);
        EXPECT(gbc.pc(), 0xea89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea87), 0xcb);
        EXPECT(gbc.readMem(0xea88), 0xce);
        // CB CE 00F0
        gbc.setState(0x47bb, 0xfa3, 0xaae0, 0xa128, 0xbe4d, 0x74d1, 0x1, 0x1);
        gbc.writeMem(0x47bb, { 0xcb, 0xce });
        gbc.writeMem(0x74d1, { 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xfa3);
        EXPECT(gbc.pc(), 0x47bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 00F1
        gbc.setState(0x25dd, 0xdd21, 0x16e0, 0x1f30, 0x4345, 0xfcad, 0x0, 0x1);
        gbc.writeMem(0x25dd, { 0xcb, 0xce });
        gbc.writeMem(0xfcad, { 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xdd21);
        EXPECT(gbc.pc(), 0x25df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfcad), 0x47);
        // CB CE 00F2
        gbc.setState(0x15a, 0xde3, 0xce50, 0x94a, 0x96a0, 0xe482, 0x1, 0x1);
        gbc.writeMem(0x15a, { 0xcb, 0xce });
        gbc.writeMem(0xe482, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xde3);
        EXPECT(gbc.pc(), 0x15c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe482), 0x2f);
        // CB CE 00F3
        gbc.setState(0x1950, 0xbb1a, 0x3f40, 0x61ce, 0xf4fb, 0x9139, 0x1, 0x1);
        gbc.writeMem(0x1950, { 0xcb, 0xce });
        gbc.writeMem(0x9139, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xbb1a);
        EXPECT(gbc.pc(), 0x1952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9139), 0x23);
        // CB CE 00F5
        gbc.setState(0x6de, 0x65cf, 0x5070, 0x2615, 0xc17a, 0x4772, 0x0, 0x0);
        gbc.writeMem(0x6de, { 0xcb, 0xce });
        gbc.writeMem(0x4772, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x65cf);
        EXPECT(gbc.pc(), 0x6e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 00F6
        gbc.setState(0x7fbb, 0x307, 0x66b0, 0x5c79, 0x1677, 0x9a00, 0x1, 0x0);
        gbc.writeMem(0x7fbb, { 0xcb, 0xce });
        gbc.writeMem(0x9a00, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x307);
        EXPECT(gbc.pc(), 0x7fbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a00), 0x8a);
        // CB CE 00F7
        gbc.setState(0x43cc, 0xe440, 0x47b0, 0xbd45, 0x26e8, 0x4f3f, 0x1, 0x1);
        gbc.writeMem(0x43cc, { 0xcb, 0xce });
        gbc.writeMem(0x4f3f, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xe440);
        EXPECT(gbc.pc(), 0x43ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 00F9
        gbc.setState(0x8fec, 0xfca5, 0x8dc0, 0x1a3, 0x3d97, 0xd26f, 0x1, 0x0);
        gbc.writeMem(0x8fec, { 0xcb, 0xce });
        gbc.writeMem(0xd26f, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xfca5);
        EXPECT(gbc.pc(), 0x8fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fec), 0xcb);
        EXPECT(gbc.readMem(0x8fed), 0xce);
        EXPECT(gbc.readMem(0xd26f), 0xef);
        // CB CE 00FB
        gbc.setState(0x377d, 0x34ba, 0x80d0, 0x52ef, 0xc79e, 0x2c4b, 0x1, 0x0);
        gbc.writeMem(0x2c4b, { 0x8f });
        gbc.writeMem(0x377d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x34ba);
        EXPECT(gbc.pc(), 0x377f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 00FD
        gbc.setState(0xc578, 0x9eaf, 0x8300, 0xbcad, 0xaf26, 0xc4e0, 0x1, 0x0);
        gbc.writeMem(0xc4e0, { 0x3c });
        gbc.writeMem(0xc578, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9eaf);
        EXPECT(gbc.pc(), 0xc57a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4e0), 0x3e);
        EXPECT(gbc.readMem(0xc578), 0xcb);
        EXPECT(gbc.readMem(0xc579), 0xce);
        // CB CE 00FF
        gbc.setState(0xa022, 0x9f25, 0xe420, 0x54e3, 0x10e1, 0x11e6, 0x0, 0x1);
        gbc.writeMem(0x11e6, { 0x3b });
        gbc.writeMem(0xa022, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9f25);
        EXPECT(gbc.pc(), 0xa024);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa022), 0xcb);
        EXPECT(gbc.readMem(0xa023), 0xce);
        // CB CE 0100
        gbc.setState(0x2bb4, 0x6349, 0x5cc0, 0x2d9f, 0xe7f1, 0x5f93, 0x1, 0x1);
        gbc.writeMem(0x2bb4, { 0xcb, 0xce });
        gbc.writeMem(0x5f93, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x6349);
        EXPECT(gbc.pc(), 0x2bb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0102
        gbc.setState(0x6c64, 0x26bf, 0xba0, 0x871a, 0xd1b6, 0x868c, 0x1, 0x0);
        gbc.writeMem(0x6c64, { 0xcb, 0xce });
        gbc.writeMem(0x868c, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x26bf);
        EXPECT(gbc.pc(), 0x6c66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x868c), 0xde);
        // CB CE 0103
        gbc.setState(0xb099, 0x28a0, 0x1e80, 0xd1a5, 0x94ca, 0xa553, 0x0, 0x1);
        gbc.writeMem(0xa553, { 0xcd });
        gbc.writeMem(0xb099, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x28a0);
        EXPECT(gbc.pc(), 0xb09b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa553), 0xcf);
        EXPECT(gbc.readMem(0xb099), 0xcb);
        EXPECT(gbc.readMem(0xb09a), 0xce);
        // CB CE 0106
        gbc.setState(0x2f07, 0x1c97, 0x49a0, 0xd242, 0xd0a, 0x2f5e, 0x1, 0x1);
        gbc.writeMem(0x2f07, { 0xcb, 0xce });
        gbc.writeMem(0x2f5e, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1c97);
        EXPECT(gbc.pc(), 0x2f09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0107
        gbc.setState(0xcb1b, 0x2ea0, 0xf910, 0xb223, 0xa282, 0x53a, 0x1, 0x0);
        gbc.writeMem(0x53a, { 0x2a });
        gbc.writeMem(0xcb1b, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2ea0);
        EXPECT(gbc.pc(), 0xcb1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb1b), 0xcb);
        EXPECT(gbc.readMem(0xcb1c), 0xce);
        // CB CE 0108
        gbc.setState(0x2ad1, 0x2449, 0x35d0, 0xdb5, 0x4f87, 0x430b, 0x1, 0x1);
        gbc.writeMem(0x2ad1, { 0xcb, 0xce });
        gbc.writeMem(0x430b, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2449);
        EXPECT(gbc.pc(), 0x2ad3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0109
        gbc.setState(0x7b28, 0x56ff, 0xcd00, 0x35d9, 0x8d58, 0x94de, 0x1, 0x0);
        gbc.writeMem(0x7b28, { 0xcb, 0xce });
        gbc.writeMem(0x94de, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x56ff);
        EXPECT(gbc.pc(), 0x7b2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94de), 0xb3);
        // CB CE 010B
        gbc.setState(0xec2e, 0x2a76, 0xaa00, 0x9555, 0xd633, 0xc470, 0x0, 0x0);
        gbc.writeMem(0xc470, { 0x5b });
        gbc.writeMem(0xec2e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2a76);
        EXPECT(gbc.pc(), 0xec30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc470), 0x5b);
        EXPECT(gbc.readMem(0xec2e), 0xcb);
        EXPECT(gbc.readMem(0xec2f), 0xce);
        // CB CE 010D
        gbc.setState(0xc5ec, 0x4bd4, 0x9f60, 0x79d8, 0xc044, 0x1034, 0x0, 0x1);
        gbc.writeMem(0x1034, { 0x67 });
        gbc.writeMem(0xc5ec, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x4bd4);
        EXPECT(gbc.pc(), 0xc5ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ec), 0xcb);
        EXPECT(gbc.readMem(0xc5ed), 0xce);
        // CB CE 010E
        gbc.setState(0x55c2, 0xd7d3, 0x2820, 0xad6d, 0xec10, 0x3a37, 0x1, 0x0);
        gbc.writeMem(0x3a37, { 0x1a });
        gbc.writeMem(0x55c2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xd7d3);
        EXPECT(gbc.pc(), 0x55c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0110
        gbc.setState(0x5125, 0x9a27, 0xde10, 0xd5a1, 0x915b, 0xc6ab, 0x1, 0x0);
        gbc.writeMem(0x5125, { 0xcb, 0xce });
        gbc.writeMem(0xc6ab, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x9a27);
        EXPECT(gbc.pc(), 0x5127);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6ab), 0xd2);
        // CB CE 0111
        gbc.setState(0x25ac, 0x650b, 0x62e0, 0x1e7a, 0x9410, 0x7e6d, 0x0, 0x0);
        gbc.writeMem(0x25ac, { 0xcb, 0xce });
        gbc.writeMem(0x7e6d, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x650b);
        EXPECT(gbc.pc(), 0x25ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0113
        gbc.setState(0x22e9, 0x8df6, 0xbec0, 0x2e9f, 0xdeae, 0xa85e, 0x1, 0x1);
        gbc.writeMem(0x22e9, { 0xcb, 0xce });
        gbc.writeMem(0xa85e, { 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x8df6);
        EXPECT(gbc.pc(), 0x22eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa85e), 0x3e);
        // CB CE 0114
        gbc.setState(0x29bd, 0x503b, 0x97d0, 0x71a0, 0xeb4e, 0x4693, 0x0, 0x0);
        gbc.writeMem(0x29bd, { 0xcb, 0xce });
        gbc.writeMem(0x4693, { 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x503b);
        EXPECT(gbc.pc(), 0x29bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0117
        gbc.setState(0x473a, 0xb92b, 0x33a0, 0xd4b4, 0xc66a, 0xea2e, 0x0, 0x1);
        gbc.writeMem(0x473a, { 0xcb, 0xce });
        gbc.writeMem(0xea2e, { 0x40 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb92b);
        EXPECT(gbc.pc(), 0x473c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea2e), 0x42);
        // CB CE 011A
        gbc.setState(0x4f59, 0x8092, 0xce30, 0xbdb8, 0x2a66, 0x98c0, 0x1, 0x0);
        gbc.writeMem(0x4f59, { 0xcb, 0xce });
        gbc.writeMem(0x98c0, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x8092);
        EXPECT(gbc.pc(), 0x4f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98c0), 0x47);
        // CB CE 011D
        gbc.setState(0x33c1, 0x112a, 0x3280, 0x684f, 0xd5c7, 0x1fc8, 0x0, 0x1);
        gbc.writeMem(0x1fc8, { 0xdf });
        gbc.writeMem(0x33c1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x112a);
        EXPECT(gbc.pc(), 0x33c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 011F
        gbc.setState(0x60ac, 0xf409, 0x5790, 0x356e, 0x9366, 0x873b, 0x0, 0x0);
        gbc.writeMem(0x60ac, { 0xcb, 0xce });
        gbc.writeMem(0x873b, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf409);
        EXPECT(gbc.pc(), 0x60ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x873b), 0x97);
        // CB CE 0120
        gbc.setState(0x8816, 0x9509, 0xfe70, 0xdedf, 0x8e95, 0x9dd3, 0x0, 0x0);
        gbc.writeMem(0x8816, { 0xcb, 0xce });
        gbc.writeMem(0x9dd3, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x9509);
        EXPECT(gbc.pc(), 0x8818);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8816), 0xcb);
        EXPECT(gbc.readMem(0x8817), 0xce);
        EXPECT(gbc.readMem(0x9dd3), 0x3);
        // CB CE 0121
        gbc.setState(0xc8f0, 0x3e19, 0xaaa0, 0x50cb, 0x9c5d, 0x85c9, 0x1, 0x1);
        gbc.writeMem(0x85c9, { 0x57 });
        gbc.writeMem(0xc8f0, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x3e19);
        EXPECT(gbc.pc(), 0xc8f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c9), 0x57);
        EXPECT(gbc.readMem(0xc8f0), 0xcb);
        EXPECT(gbc.readMem(0xc8f1), 0xce);
        // CB CE 0123
        gbc.setState(0xd5bc, 0xe4d3, 0x41f0, 0x80e5, 0xe6df, 0xeee8, 0x0, 0x1);
        gbc.writeMem(0xd5bc, { 0xcb, 0xce });
        gbc.writeMem(0xeee8, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe4d3);
        EXPECT(gbc.pc(), 0xd5be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5bc), 0xcb);
        EXPECT(gbc.readMem(0xd5bd), 0xce);
        EXPECT(gbc.readMem(0xeee8), 0xab);
        // CB CE 0124
        gbc.setState(0x7b4c, 0xe9d9, 0xd030, 0xf764, 0xe507, 0xd54f, 0x0, 0x1);
        gbc.writeMem(0x7b4c, { 0xcb, 0xce });
        gbc.writeMem(0xd54f, { 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xe9d9);
        EXPECT(gbc.pc(), 0x7b4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd54f), 0xba);
        // CB CE 0126
        gbc.setState(0x46b, 0x8f32, 0x3ac0, 0x6543, 0x61ad, 0xbbfb, 0x0, 0x0);
        gbc.writeMem(0x46b, { 0xcb, 0xce });
        gbc.writeMem(0xbbfb, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x8f32);
        EXPECT(gbc.pc(), 0x46d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbfb), 0x97);
        // CB CE 0127
        gbc.setState(0x3bcc, 0xf7af, 0x3720, 0x77eb, 0x35e4, 0x47cd, 0x0, 0x0);
        gbc.writeMem(0x3bcc, { 0xcb, 0xce });
        gbc.writeMem(0x47cd, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xf7af);
        EXPECT(gbc.pc(), 0x3bce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 012B
        gbc.setState(0xe4ab, 0xcbc0, 0xf2c0, 0x92f6, 0xd29, 0x822c, 0x0, 0x0);
        gbc.writeMem(0x822c, { 0xfd });
        gbc.writeMem(0xe4ab, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xcbc0);
        EXPECT(gbc.pc(), 0xe4ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x822c), 0xff);
        EXPECT(gbc.readMem(0xe4ab), 0xcb);
        EXPECT(gbc.readMem(0xe4ac), 0xce);
        // CB CE 012C
        gbc.setState(0x4065, 0xb299, 0x29e0, 0xc67b, 0xae51, 0xedfe, 0x0, 0x0);
        gbc.writeMem(0x4065, { 0xcb, 0xce });
        gbc.writeMem(0xedfe, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb299);
        EXPECT(gbc.pc(), 0x4067);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedfe), 0x1e);
        // CB CE 012D
        gbc.setState(0x9381, 0x26c, 0x1760, 0xe879, 0x1c68, 0xacc3, 0x1, 0x1);
        gbc.writeMem(0x9381, { 0xcb, 0xce });
        gbc.writeMem(0xacc3, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x26c);
        EXPECT(gbc.pc(), 0x9383);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9381), 0xcb);
        EXPECT(gbc.readMem(0x9382), 0xce);
        EXPECT(gbc.readMem(0xacc3), 0x7f);
        // CB CE 012E
        gbc.setState(0xbab6, 0x5cc6, 0xb750, 0xcb1b, 0x47bb, 0x888a, 0x1, 0x1);
        gbc.writeMem(0x888a, { 0x5d });
        gbc.writeMem(0xbab6, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5cc6);
        EXPECT(gbc.pc(), 0xbab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x888a), 0x5f);
        EXPECT(gbc.readMem(0xbab6), 0xcb);
        EXPECT(gbc.readMem(0xbab7), 0xce);
        // CB CE 012F
        gbc.setState(0x3bc9, 0xbfaa, 0x4e30, 0xfea0, 0x4b3c, 0x5d23, 0x1, 0x0);
        gbc.writeMem(0x3bc9, { 0xcb, 0xce });
        gbc.writeMem(0x5d23, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xbfaa);
        EXPECT(gbc.pc(), 0x3bcb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0130
        gbc.setState(0x5127, 0xd531, 0x600, 0x3ba5, 0x36b2, 0xf4bf, 0x1, 0x0);
        gbc.writeMem(0x5127, { 0xcb, 0xce });
        gbc.writeMem(0xf4bf, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd531);
        EXPECT(gbc.pc(), 0x5129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf4bf), 0xd6);
        // CB CE 0131
        gbc.setState(0xee77, 0xa108, 0x3410, 0x2860, 0xed36, 0x7e55, 0x1, 0x0);
        gbc.writeMem(0x7e55, { 0x2b });
        gbc.writeMem(0xee77, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xa108);
        EXPECT(gbc.pc(), 0xee79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee77), 0xcb);
        EXPECT(gbc.readMem(0xee78), 0xce);
        // CB CE 0133
        gbc.setState(0xc18d, 0x9642, 0xbf90, 0xb0db, 0x9b34, 0xa4d1, 0x1, 0x0);
        gbc.writeMem(0xa4d1, { 0xbc });
        gbc.writeMem(0xc18d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9642);
        EXPECT(gbc.pc(), 0xc18f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d1), 0xbe);
        EXPECT(gbc.readMem(0xc18d), 0xcb);
        EXPECT(gbc.readMem(0xc18e), 0xce);
        // CB CE 0134
        gbc.setState(0x2fe4, 0x8aa8, 0x4ed0, 0xf23b, 0x9c03, 0x9cb7, 0x1, 0x0);
        gbc.writeMem(0x2fe4, { 0xcb, 0xce });
        gbc.writeMem(0x9cb7, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8aa8);
        EXPECT(gbc.pc(), 0x2fe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb7), 0x3f);
        // CB CE 0135
        gbc.setState(0xd624, 0xedc9, 0x9300, 0x6c9d, 0x66c, 0x9ee3, 0x0, 0x0);
        gbc.writeMem(0x9ee3, { 0x5c });
        gbc.writeMem(0xd624, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xedc9);
        EXPECT(gbc.pc(), 0xd626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ee3), 0x5e);
        EXPECT(gbc.readMem(0xd624), 0xcb);
        EXPECT(gbc.readMem(0xd625), 0xce);
        // CB CE 0136
        gbc.setState(0x8176, 0xaefd, 0x90b0, 0x11fd, 0xb1f0, 0x23bc, 0x0, 0x0);
        gbc.writeMem(0x23bc, { 0x3e });
        gbc.writeMem(0x8176, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xaefd);
        EXPECT(gbc.pc(), 0x8178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8176), 0xcb);
        EXPECT(gbc.readMem(0x8177), 0xce);
        // CB CE 0138
        gbc.setState(0x4520, 0x2fa0, 0x1e50, 0xe3cf, 0xa34b, 0x70ed, 0x0, 0x1);
        gbc.writeMem(0x4520, { 0xcb, 0xce });
        gbc.writeMem(0x70ed, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x2fa0);
        EXPECT(gbc.pc(), 0x4522);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0139
        gbc.setState(0x25dc, 0xabd3, 0x50d0, 0x4d7e, 0x8b3, 0x9c18, 0x0, 0x0);
        gbc.writeMem(0x25dc, { 0xcb, 0xce });
        gbc.writeMem(0x9c18, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xabd3);
        EXPECT(gbc.pc(), 0x25de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c18), 0x16);
        // CB CE 013A
        gbc.setState(0xc9b8, 0xe043, 0x3280, 0x3444, 0x7830, 0xd9f7, 0x0, 0x1);
        gbc.writeMem(0xc9b8, { 0xcb, 0xce });
        gbc.writeMem(0xd9f7, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xe043);
        EXPECT(gbc.pc(), 0xc9ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9b8), 0xcb);
        EXPECT(gbc.readMem(0xc9b9), 0xce);
        EXPECT(gbc.readMem(0xd9f7), 0x92);
        // CB CE 013B
        gbc.setState(0xd8db, 0x5e44, 0xb0f0, 0xe364, 0xc972, 0x6866, 0x1, 0x1);
        gbc.writeMem(0x6866, { 0x4e });
        gbc.writeMem(0xd8db, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x5e44);
        EXPECT(gbc.pc(), 0xd8dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8db), 0xcb);
        EXPECT(gbc.readMem(0xd8dc), 0xce);
        // CB CE 013D
        gbc.setState(0x22a0, 0xc845, 0x3520, 0xc8c, 0x3bcc, 0x2a1a, 0x1, 0x1);
        gbc.writeMem(0x22a0, { 0xcb, 0xce });
        gbc.writeMem(0x2a1a, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc845);
        EXPECT(gbc.pc(), 0x22a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 013E
        gbc.setState(0xc0b2, 0xf2ad, 0xcfb0, 0xa12d, 0xb6d9, 0xc0b2, 0x1, 0x1);
        gbc.writeMem(0xc0b2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xf2ad);
        EXPECT(gbc.pc(), 0xc0b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b2), 0xcb);
        EXPECT(gbc.readMem(0xc0b3), 0xce);
        // CB CE 013F
        gbc.setState(0xa598, 0xf97b, 0x9c70, 0xb14b, 0xaf12, 0x1c86, 0x1, 0x0);
        gbc.writeMem(0x1c86, { 0x62 });
        gbc.writeMem(0xa598, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf97b);
        EXPECT(gbc.pc(), 0xa59a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa598), 0xcb);
        EXPECT(gbc.readMem(0xa599), 0xce);
        // CB CE 0140
        gbc.setState(0x39b7, 0x8aa0, 0x6140, 0x85aa, 0xcc1d, 0x9120, 0x1, 0x0);
        gbc.writeMem(0x39b7, { 0xcb, 0xce });
        gbc.writeMem(0x9120, { 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8aa0);
        EXPECT(gbc.pc(), 0x39b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9120), 0x2b);
        // CB CE 0141
        gbc.setState(0x244d, 0x28d5, 0xb40, 0xf398, 0xe1b7, 0x9f7b, 0x0, 0x1);
        gbc.writeMem(0x244d, { 0xcb, 0xce });
        gbc.writeMem(0x9f7b, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x28d5);
        EXPECT(gbc.pc(), 0x244f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f7b), 0xcb);
        // CB CE 0142
        gbc.setState(0x968c, 0xe7d1, 0x3ee0, 0x4be3, 0x7a24, 0xad1b, 0x0, 0x1);
        gbc.writeMem(0x968c, { 0xcb, 0xce });
        gbc.writeMem(0xad1b, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe7d1);
        EXPECT(gbc.pc(), 0x968e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968c), 0xcb);
        EXPECT(gbc.readMem(0x968d), 0xce);
        EXPECT(gbc.readMem(0xad1b), 0xf2);
        // CB CE 0143
        gbc.setState(0x982b, 0x7be3, 0x4c60, 0x4552, 0xf704, 0xc654, 0x1, 0x1);
        gbc.writeMem(0x982b, { 0xcb, 0xce });
        gbc.writeMem(0xc654, { 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7be3);
        EXPECT(gbc.pc(), 0x982d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x982b), 0xcb);
        EXPECT(gbc.readMem(0x982c), 0xce);
        EXPECT(gbc.readMem(0xc654), 0x5a);
        // CB CE 0144
        gbc.setState(0xc424, 0x3831, 0x5b0, 0x1104, 0xe1fe, 0x9ebb, 0x1, 0x1);
        gbc.writeMem(0x9ebb, { 0xc6 });
        gbc.writeMem(0xc424, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x3831);
        EXPECT(gbc.pc(), 0xc426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ebb), 0xc6);
        EXPECT(gbc.readMem(0xc424), 0xcb);
        EXPECT(gbc.readMem(0xc425), 0xce);
        // CB CE 0145
        gbc.setState(0x512b, 0xba65, 0xf100, 0xb3af, 0xe2e1, 0x9ac8, 0x0, 0x0);
        gbc.writeMem(0x512b, { 0xcb, 0xce });
        gbc.writeMem(0x9ac8, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xba65);
        EXPECT(gbc.pc(), 0x512d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ac8), 0x7b);
        // CB CE 0146
        gbc.setState(0xdb92, 0xe0bd, 0xbe0, 0x434c, 0xc3be, 0x6d53, 0x1, 0x0);
        gbc.writeMem(0x6d53, { 0xaa });
        gbc.writeMem(0xdb92, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xe0bd);
        EXPECT(gbc.pc(), 0xdb94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb92), 0xcb);
        EXPECT(gbc.readMem(0xdb93), 0xce);
        // CB CE 0147
        gbc.setState(0x6e54, 0x4fa, 0x3680, 0xe134, 0xdd87, 0xce32, 0x1, 0x1);
        gbc.writeMem(0x6e54, { 0xcb, 0xce });
        gbc.writeMem(0xce32, { 0xbf });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x4fa);
        EXPECT(gbc.pc(), 0x6e56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce32), 0xbf);
        // CB CE 0148
        gbc.setState(0x7dbf, 0x1be, 0x5560, 0xea2c, 0x1d5c, 0x2389, 0x0, 0x1);
        gbc.writeMem(0x2389, { 0xa2 });
        gbc.writeMem(0x7dbf, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1be);
        EXPECT(gbc.pc(), 0x7dc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0149
        gbc.setState(0xc4d3, 0xb1c6, 0xf510, 0xd161, 0x21f7, 0x47a6, 0x0, 0x0);
        gbc.writeMem(0x47a6, { 0x86 });
        gbc.writeMem(0xc4d3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb1c6);
        EXPECT(gbc.pc(), 0xc4d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4d3), 0xcb);
        EXPECT(gbc.readMem(0xc4d4), 0xce);
        // CB CE 014A
        gbc.setState(0x3b0f, 0x4744, 0x6d40, 0xe0f8, 0xb3a1, 0x327f, 0x0, 0x1);
        gbc.writeMem(0x327f, { 0x1b });
        gbc.writeMem(0x3b0f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x4744);
        EXPECT(gbc.pc(), 0x3b11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 014B
        gbc.setState(0x7c28, 0x4b0a, 0xc740, 0xc334, 0x9aac, 0xd6d, 0x0, 0x0);
        gbc.writeMem(0xd6d, { 0xe7 });
        gbc.writeMem(0x7c28, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4b0a);
        EXPECT(gbc.pc(), 0x7c2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 014D
        gbc.setState(0x737e, 0x1385, 0x3850, 0x4905, 0x9449, 0xdf0d, 0x1, 0x1);
        gbc.writeMem(0x737e, { 0xcb, 0xce });
        gbc.writeMem(0xdf0d, { 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1385);
        EXPECT(gbc.pc(), 0x7380);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf0d), 0xc3);
        // CB CE 0150
        gbc.setState(0xda88, 0x6b11, 0x3040, 0xb05f, 0x5ddd, 0xa587, 0x0, 0x1);
        gbc.writeMem(0xa587, { 0x43 });
        gbc.writeMem(0xda88, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6b11);
        EXPECT(gbc.pc(), 0xda8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa587), 0x43);
        EXPECT(gbc.readMem(0xda88), 0xcb);
        EXPECT(gbc.readMem(0xda89), 0xce);
        // CB CE 0151
        gbc.setState(0x38c5, 0x6ade, 0x55a0, 0xb40c, 0xa3c2, 0x7f8c, 0x1, 0x0);
        gbc.writeMem(0x38c5, { 0xcb, 0xce });
        gbc.writeMem(0x7f8c, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6ade);
        EXPECT(gbc.pc(), 0x38c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0157
        gbc.setState(0x6fe9, 0x212c, 0x8340, 0x59cd, 0x29c3, 0x3e0a, 0x1, 0x1);
        gbc.writeMem(0x3e0a, { 0xd7 });
        gbc.writeMem(0x6fe9, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x212c);
        EXPECT(gbc.pc(), 0x6feb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0158
        gbc.setState(0xd609, 0x3cc2, 0x6230, 0x1307, 0x19be, 0x9d5f, 0x1, 0x1);
        gbc.writeMem(0x9d5f, { 0x1f });
        gbc.writeMem(0xd609, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3cc2);
        EXPECT(gbc.pc(), 0xd60b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d5f), 0x1f);
        EXPECT(gbc.readMem(0xd609), 0xcb);
        EXPECT(gbc.readMem(0xd60a), 0xce);
        // CB CE 0159
        gbc.setState(0x882d, 0x13aa, 0x8b00, 0x5c5e, 0xd4c4, 0x55da, 0x1, 0x0);
        gbc.writeMem(0x55da, { 0xb2 });
        gbc.writeMem(0x882d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x13aa);
        EXPECT(gbc.pc(), 0x882f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882d), 0xcb);
        EXPECT(gbc.readMem(0x882e), 0xce);
        // CB CE 015A
        gbc.setState(0x40dd, 0x4d9, 0xc1b0, 0x8f66, 0xd8cb, 0xf2af, 0x0, 0x1);
        gbc.writeMem(0x40dd, { 0xcb, 0xce });
        gbc.writeMem(0xf2af, { 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x4d9);
        EXPECT(gbc.pc(), 0x40df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf2af), 0xfe);
        // CB CE 015B
        gbc.setState(0x879c, 0x516b, 0xf500, 0x9792, 0x18f7, 0x861d, 0x0, 0x0);
        gbc.writeMem(0x861d, { 0x1d });
        gbc.writeMem(0x879c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x516b);
        EXPECT(gbc.pc(), 0x879e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x861d), 0x1f);
        EXPECT(gbc.readMem(0x879c), 0xcb);
        EXPECT(gbc.readMem(0x879d), 0xce);
        // CB CE 015C
        gbc.setState(0x80c5, 0x4c63, 0x50f0, 0x2b60, 0xcd50, 0xb158, 0x0, 0x1);
        gbc.writeMem(0x80c5, { 0xcb, 0xce });
        gbc.writeMem(0xb158, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x4c63);
        EXPECT(gbc.pc(), 0x80c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c5), 0xcb);
        EXPECT(gbc.readMem(0x80c6), 0xce);
        EXPECT(gbc.readMem(0xb158), 0x3a);
        // CB CE 015E
        gbc.setState(0x2e7e, 0x7ce3, 0xdf50, 0xa309, 0x3400, 0x27f, 0x0, 0x1);
        gbc.writeMem(0x27f, { 0x22 });
        gbc.writeMem(0x2e7e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x7ce3);
        EXPECT(gbc.pc(), 0x2e80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 015F
        gbc.setState(0xc417, 0xb689, 0x1b70, 0x22e4, 0x4da8, 0x89a3, 0x0, 0x0);
        gbc.writeMem(0x89a3, { 0x8 });
        gbc.writeMem(0xc417, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb689);
        EXPECT(gbc.pc(), 0xc419);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89a3), 0xa);
        EXPECT(gbc.readMem(0xc417), 0xcb);
        EXPECT(gbc.readMem(0xc418), 0xce);
        // CB CE 0160
        gbc.setState(0xb60a, 0x11a7, 0xfc30, 0xbcc6, 0x1fce, 0xd134, 0x1, 0x0);
        gbc.writeMem(0xb60a, { 0xcb, 0xce });
        gbc.writeMem(0xd134, { 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x11a7);
        EXPECT(gbc.pc(), 0xb60c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb60a), 0xcb);
        EXPECT(gbc.readMem(0xb60b), 0xce);
        EXPECT(gbc.readMem(0xd134), 0x7e);
        // CB CE 0161
        gbc.setState(0x99a5, 0xd75e, 0xb3e0, 0x7579, 0xc1a1, 0xbaa9, 0x0, 0x0);
        gbc.writeMem(0x99a5, { 0xcb, 0xce });
        gbc.writeMem(0xbaa9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xd75e);
        EXPECT(gbc.pc(), 0x99a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a5), 0xcb);
        EXPECT(gbc.readMem(0x99a6), 0xce);
        EXPECT(gbc.readMem(0xbaa9), 0x2);
        // CB CE 0162
        gbc.setState(0xc99c, 0xa57a, 0x8730, 0x1025, 0xbecc, 0xb48d, 0x0, 0x0);
        gbc.writeMem(0xb48d, { 0xb8 });
        gbc.writeMem(0xc99c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa57a);
        EXPECT(gbc.pc(), 0xc99e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb48d), 0xba);
        EXPECT(gbc.readMem(0xc99c), 0xcb);
        EXPECT(gbc.readMem(0xc99d), 0xce);
        // CB CE 0163
        gbc.setState(0x4667, 0xcc1, 0x6ca0, 0x6f41, 0x6661, 0xbc69, 0x0, 0x0);
        gbc.writeMem(0x4667, { 0xcb, 0xce });
        gbc.writeMem(0xbc69, { 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xcc1);
        EXPECT(gbc.pc(), 0x4669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc69), 0x5b);
        // CB CE 0164
        gbc.setState(0xac9b, 0x4ccf, 0x5390, 0x3f7e, 0x486a, 0xcd55, 0x0, 0x1);
        gbc.writeMem(0xac9b, { 0xcb, 0xce });
        gbc.writeMem(0xcd55, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x4ccf);
        EXPECT(gbc.pc(), 0xac9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac9b), 0xcb);
        EXPECT(gbc.readMem(0xac9c), 0xce);
        EXPECT(gbc.readMem(0xcd55), 0x5f);
        // CB CE 0165
        gbc.setState(0xd455, 0xa3d8, 0xa80, 0x4b84, 0x5b14, 0x7c0, 0x0, 0x0);
        gbc.writeMem(0x7c0, { 0xf3 });
        gbc.writeMem(0xd455, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xa3d8);
        EXPECT(gbc.pc(), 0xd457);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd455), 0xcb);
        EXPECT(gbc.readMem(0xd456), 0xce);
        // CB CE 0166
        gbc.setState(0x3589, 0xf0ae, 0xbd70, 0xe8f6, 0x9cc5, 0xf211, 0x0, 0x0);
        gbc.writeMem(0x3589, { 0xcb, 0xce });
        gbc.writeMem(0xf211, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xf0ae);
        EXPECT(gbc.pc(), 0x358b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf211), 0xd3);
        // CB CE 0167
        gbc.setState(0x3299, 0xc1a2, 0x9390, 0xd88a, 0x3736, 0xc36d, 0x0, 0x0);
        gbc.writeMem(0x3299, { 0xcb, 0xce });
        gbc.writeMem(0xc36d, { 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc1a2);
        EXPECT(gbc.pc(), 0x329b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc36d), 0xf);
        // CB CE 0168
        gbc.setState(0xab81, 0xa354, 0x2d20, 0xa99a, 0x684a, 0xde96, 0x1, 0x1);
        gbc.writeMem(0xab81, { 0xcb, 0xce });
        gbc.writeMem(0xde96, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa354);
        EXPECT(gbc.pc(), 0xab83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab81), 0xcb);
        EXPECT(gbc.readMem(0xab82), 0xce);
        EXPECT(gbc.readMem(0xde96), 0xb6);
        // CB CE 0169
        gbc.setState(0xafb1, 0x3a9c, 0xf7b0, 0x329a, 0xb4d3, 0x3ef7, 0x1, 0x0);
        gbc.writeMem(0x3ef7, { 0x62 });
        gbc.writeMem(0xafb1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3a9c);
        EXPECT(gbc.pc(), 0xafb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xafb1), 0xcb);
        EXPECT(gbc.readMem(0xafb2), 0xce);
        // CB CE 016A
        gbc.setState(0x76b, 0x6c27, 0x3350, 0x475a, 0xb780, 0xb8f1, 0x0, 0x1);
        gbc.writeMem(0x76b, { 0xcb, 0xce });
        gbc.writeMem(0xb8f1, { 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6c27);
        EXPECT(gbc.pc(), 0x76d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8f1), 0xf3);
        // CB CE 016B
        gbc.setState(0x96db, 0x4bb4, 0x9a40, 0xe8d6, 0x7aff, 0x3ddc, 0x0, 0x1);
        gbc.writeMem(0x3ddc, { 0x37 });
        gbc.writeMem(0x96db, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4bb4);
        EXPECT(gbc.pc(), 0x96dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96db), 0xcb);
        EXPECT(gbc.readMem(0x96dc), 0xce);
        // CB CE 016C
        gbc.setState(0x82ae, 0xcd37, 0x1420, 0x4003, 0xa370, 0xb39b, 0x1, 0x0);
        gbc.writeMem(0x82ae, { 0xcb, 0xce });
        gbc.writeMem(0xb39b, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xcd37);
        EXPECT(gbc.pc(), 0x82b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82ae), 0xcb);
        EXPECT(gbc.readMem(0x82af), 0xce);
        EXPECT(gbc.readMem(0xb39b), 0x4e);
        // CB CE 016D
        gbc.setState(0x490f, 0x56d2, 0xc960, 0xba8a, 0xc48, 0xbe9b, 0x1, 0x0);
        gbc.writeMem(0x490f, { 0xcb, 0xce });
        gbc.writeMem(0xbe9b, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x56d2);
        EXPECT(gbc.pc(), 0x4911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe9b), 0xa7);
        // CB CE 016E
        gbc.setState(0xde9a, 0xf688, 0x6440, 0x2ee9, 0x59ba, 0x1b13, 0x1, 0x0);
        gbc.writeMem(0x1b13, { 0xdf });
        gbc.writeMem(0xde9a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf688);
        EXPECT(gbc.pc(), 0xde9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde9a), 0xcb);
        EXPECT(gbc.readMem(0xde9b), 0xce);
        // CB CE 016F
        gbc.setState(0x14f0, 0xc683, 0x7040, 0xb106, 0xeeb2, 0xf501, 0x1, 0x0);
        gbc.writeMem(0x14f0, { 0xcb, 0xce });
        gbc.writeMem(0xf501, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc683);
        EXPECT(gbc.pc(), 0x14f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf501), 0xcb);
        // CB CE 0170
        gbc.setState(0x9901, 0xe453, 0x6bb0, 0x4529, 0xca28, 0x6cc0, 0x0, 0x1);
        gbc.writeMem(0x6cc0, { 0x2f });
        gbc.writeMem(0x9901, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xe453);
        EXPECT(gbc.pc(), 0x9903);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9901), 0xcb);
        EXPECT(gbc.readMem(0x9902), 0xce);
        // CB CE 0172
        gbc.setState(0xd657, 0xdbed, 0x8260, 0x6f3b, 0xb177, 0xfa1a, 0x0, 0x0);
        gbc.writeMem(0xd657, { 0xcb, 0xce });
        gbc.writeMem(0xfa1a, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xdbed);
        EXPECT(gbc.pc(), 0xd659);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd657), 0xcb);
        EXPECT(gbc.readMem(0xd658), 0xce);
        EXPECT(gbc.readMem(0xfa1a), 0xcf);
        // CB CE 0174
        gbc.setState(0x449d, 0x6458, 0x27c0, 0xfd7d, 0xbdcd, 0x12da, 0x1, 0x0);
        gbc.writeMem(0x12da, { 0x53 });
        gbc.writeMem(0x449d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6458);
        EXPECT(gbc.pc(), 0x449f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0175
        gbc.setState(0x640c, 0x6b90, 0xd4f0, 0x4f53, 0xed85, 0xaa13, 0x1, 0x0);
        gbc.writeMem(0x640c, { 0xcb, 0xce });
        gbc.writeMem(0xaa13, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6b90);
        EXPECT(gbc.pc(), 0x640e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa13), 0xc3);
        // CB CE 0176
        gbc.setState(0x73fc, 0x3cd8, 0x4370, 0xee36, 0xbf15, 0xec62, 0x1, 0x1);
        gbc.writeMem(0x73fc, { 0xcb, 0xce });
        gbc.writeMem(0xec62, { 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3cd8);
        EXPECT(gbc.pc(), 0x73fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec62), 0x2a);
        // CB CE 0177
        gbc.setState(0xe58a, 0x9924, 0xef00, 0x5381, 0xfdb0, 0xb7c1, 0x0, 0x1);
        gbc.writeMem(0xb7c1, { 0xd0 });
        gbc.writeMem(0xe58a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9924);
        EXPECT(gbc.pc(), 0xe58c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7c1), 0xd2);
        EXPECT(gbc.readMem(0xe58a), 0xcb);
        EXPECT(gbc.readMem(0xe58b), 0xce);
        // CB CE 0179
        gbc.setState(0x9030, 0x9e51, 0xb200, 0xeb50, 0x2885, 0xfe67, 0x1, 0x1);
        gbc.writeMem(0x9030, { 0xcb, 0xce });
        gbc.writeMem(0xfe67, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x9e51);
        EXPECT(gbc.pc(), 0x9032);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9030), 0xcb);
        EXPECT(gbc.readMem(0x9031), 0xce);
        EXPECT(gbc.readMem(0xfe67), 0x3f);
        // CB CE 017A
        gbc.setState(0x7d, 0x536c, 0x9240, 0x79b3, 0x7823, 0x2db6, 0x1, 0x0);
        gbc.writeMem(0x7d, { 0xcb, 0xce });
        gbc.writeMem(0x2db6, { 0xcb });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x536c);
        EXPECT(gbc.pc(), 0x7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 017B
        gbc.setState(0x13b9, 0xadb2, 0x9ea0, 0xd9cd, 0x2fe2, 0xa0a8, 0x1, 0x1);
        gbc.writeMem(0x13b9, { 0xcb, 0xce });
        gbc.writeMem(0xa0a8, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xadb2);
        EXPECT(gbc.pc(), 0x13bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a8), 0x52);
        // CB CE 017E
        gbc.setState(0x37ed, 0xc881, 0x16f0, 0xd830, 0x935f, 0x2713, 0x1, 0x1);
        gbc.writeMem(0x2713, { 0xd3 });
        gbc.writeMem(0x37ed, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc881);
        EXPECT(gbc.pc(), 0x37ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 017F
        gbc.setState(0x3e2d, 0x2f07, 0xda50, 0xf3f6, 0xb53a, 0xed6c, 0x1, 0x1);
        gbc.writeMem(0x3e2d, { 0xcb, 0xce });
        gbc.writeMem(0xed6c, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2f07);
        EXPECT(gbc.pc(), 0x3e2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed6c), 0x3);
        // CB CE 0181
        gbc.setState(0xa646, 0xde38, 0x830, 0x35a2, 0x3ab7, 0xe0df, 0x0, 0x1);
        gbc.writeMem(0xa646, { 0xcb, 0xce });
        gbc.writeMem(0xe0df, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xde38);
        EXPECT(gbc.pc(), 0xa648);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa646), 0xcb);
        EXPECT(gbc.readMem(0xa647), 0xce);
        EXPECT(gbc.readMem(0xe0df), 0x4f);
        // CB CE 0184
        gbc.setState(0x6139, 0x4fe2, 0x74f0, 0x9a5d, 0x3a3, 0x85ba, 0x1, 0x0);
        gbc.writeMem(0x6139, { 0xcb, 0xce });
        gbc.writeMem(0x85ba, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4fe2);
        EXPECT(gbc.pc(), 0x613b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85ba), 0xe3);
        // CB CE 0186
        gbc.setState(0xdba2, 0x69ca, 0xe980, 0x940, 0xf28c, 0xff47, 0x1, 0x0);
        gbc.writeMem(0xdba2, { 0xcb, 0xce });
        gbc.writeMem(0xff47, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x69ca);
        EXPECT(gbc.pc(), 0xdba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdba2), 0xcb);
        EXPECT(gbc.readMem(0xdba3), 0xce);
        EXPECT(gbc.readMem(0xff47), 0x9a);
        // CB CE 0187
        gbc.setState(0x75b, 0xb771, 0x2140, 0x85b3, 0x8818, 0x8e9d, 0x1, 0x1);
        gbc.writeMem(0x75b, { 0xcb, 0xce });
        gbc.writeMem(0x8e9d, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb771);
        EXPECT(gbc.pc(), 0x75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e9d), 0xda);
        // CB CE 0188
        gbc.setState(0xe1ef, 0x482c, 0xc1f0, 0x2098, 0xfc0f, 0x9775, 0x0, 0x0);
        gbc.writeMem(0x9775, { 0xee });
        gbc.writeMem(0xe1ef, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x482c);
        EXPECT(gbc.pc(), 0xe1f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9775), 0xee);
        EXPECT(gbc.readMem(0xe1ef), 0xcb);
        EXPECT(gbc.readMem(0xe1f0), 0xce);
        // CB CE 0189
        gbc.setState(0x9fde, 0x1323, 0x2670, 0xa93a, 0x6148, 0xcdf8, 0x0, 0x0);
        gbc.writeMem(0x9fde, { 0xcb, 0xce });
        gbc.writeMem(0xcdf8, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x1323);
        EXPECT(gbc.pc(), 0x9fe0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fde), 0xcb);
        EXPECT(gbc.readMem(0x9fdf), 0xce);
        EXPECT(gbc.readMem(0xcdf8), 0x2f);
        // CB CE 018A
        gbc.setState(0xc1f2, 0xbf10, 0x53b0, 0x12ce, 0xff8a, 0x4601, 0x1, 0x1);
        gbc.writeMem(0x4601, { 0xd3 });
        gbc.writeMem(0xc1f2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xbf10);
        EXPECT(gbc.pc(), 0xc1f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1f2), 0xcb);
        EXPECT(gbc.readMem(0xc1f3), 0xce);
        // CB CE 018B
        gbc.setState(0xc5bc, 0x65fa, 0x82d0, 0xa014, 0x678d, 0xc665, 0x0, 0x0);
        gbc.writeMem(0xc5bc, { 0xcb, 0xce });
        gbc.writeMem(0xc665, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x65fa);
        EXPECT(gbc.pc(), 0xc5be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5bc), 0xcb);
        EXPECT(gbc.readMem(0xc5bd), 0xce);
        EXPECT(gbc.readMem(0xc665), 0x7b);
        // CB CE 018C
        gbc.setState(0xc1c5, 0x47f2, 0xa2e0, 0xad09, 0x7dee, 0xe152, 0x0, 0x1);
        gbc.writeMem(0xc1c5, { 0xcb, 0xce });
        gbc.writeMem(0xe152, { 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x47f2);
        EXPECT(gbc.pc(), 0xc1c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1c5), 0xcb);
        EXPECT(gbc.readMem(0xc1c6), 0xce);
        EXPECT(gbc.readMem(0xe152), 0xce);
        // CB CE 018D
        gbc.setState(0xb80f, 0x4a45, 0xc130, 0xaf02, 0xcee7, 0xfe9c, 0x0, 0x1);
        gbc.writeMem(0xb80f, { 0xcb, 0xce });
        gbc.writeMem(0xfe9c, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4a45);
        EXPECT(gbc.pc(), 0xb811);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb80f), 0xcb);
        EXPECT(gbc.readMem(0xb810), 0xce);
        EXPECT(gbc.readMem(0xfe9c), 0x92);
        // CB CE 018E
        gbc.setState(0xb879, 0x4995, 0xdac0, 0x7b17, 0xaba6, 0x936b, 0x1, 0x1);
        gbc.writeMem(0x936b, { 0xfd });
        gbc.writeMem(0xb879, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x4995);
        EXPECT(gbc.pc(), 0xb87b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x936b), 0xff);
        EXPECT(gbc.readMem(0xb879), 0xcb);
        EXPECT(gbc.readMem(0xb87a), 0xce);
        // CB CE 0190
        gbc.setState(0x1b90, 0xfb29, 0x5830, 0x534f, 0x3be0, 0xc0de, 0x1, 0x1);
        gbc.writeMem(0x1b90, { 0xcb, 0xce });
        gbc.writeMem(0xc0de, { 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xfb29);
        EXPECT(gbc.pc(), 0x1b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0de), 0x3);
        // CB CE 0191
        gbc.setState(0x3cc7, 0xc670, 0x3d70, 0x2207, 0x8a98, 0xeee6, 0x0, 0x1);
        gbc.writeMem(0x3cc7, { 0xcb, 0xce });
        gbc.writeMem(0xeee6, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xc670);
        EXPECT(gbc.pc(), 0x3cc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeee6), 0x2f);
        // CB CE 0192
        gbc.setState(0x44c6, 0xd181, 0xfa10, 0x3f58, 0xa29c, 0xa5c3, 0x0, 0x0);
        gbc.writeMem(0x44c6, { 0xcb, 0xce });
        gbc.writeMem(0xa5c3, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xd181);
        EXPECT(gbc.pc(), 0x44c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c3), 0x3f);
        // CB CE 0193
        gbc.setState(0xe48a, 0x109e, 0x2d30, 0x2a76, 0x5a94, 0x3117, 0x1, 0x1);
        gbc.writeMem(0x3117, { 0xe7 });
        gbc.writeMem(0xe48a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x109e);
        EXPECT(gbc.pc(), 0xe48c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe48a), 0xcb);
        EXPECT(gbc.readMem(0xe48b), 0xce);
        // CB CE 0194
        gbc.setState(0xeba7, 0xe2b4, 0x73c0, 0xcbc2, 0x6902, 0xe287, 0x0, 0x1);
        gbc.writeMem(0xe287, { 0x1 });
        gbc.writeMem(0xeba7, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe2b4);
        EXPECT(gbc.pc(), 0xeba9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe287), 0x3);
        EXPECT(gbc.readMem(0xeba7), 0xcb);
        EXPECT(gbc.readMem(0xeba8), 0xce);
        // CB CE 0195
        gbc.setState(0x8e7f, 0x2d97, 0xc090, 0xcf55, 0x9a5d, 0x10c8, 0x1, 0x1);
        gbc.writeMem(0x10c8, { 0xae });
        gbc.writeMem(0x8e7f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x2d97);
        EXPECT(gbc.pc(), 0x8e81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e7f), 0xcb);
        EXPECT(gbc.readMem(0x8e80), 0xce);
        // CB CE 0196
        gbc.setState(0x5ca6, 0x74fe, 0xda10, 0x114f, 0xf9c9, 0x8607, 0x0, 0x1);
        gbc.writeMem(0x5ca6, { 0xcb, 0xce });
        gbc.writeMem(0x8607, { 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x74fe);
        EXPECT(gbc.pc(), 0x5ca8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8607), 0x33);
        // CB CE 0197
        gbc.setState(0x90f7, 0xffac, 0xec30, 0x6261, 0xeb84, 0x5ffb, 0x0, 0x0);
        gbc.writeMem(0x5ffb, { 0x57 });
        gbc.writeMem(0x90f7, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xffac);
        EXPECT(gbc.pc(), 0x90f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f7), 0xcb);
        EXPECT(gbc.readMem(0x90f8), 0xce);
        // CB CE 0198
        gbc.setState(0xdb9e, 0x8565, 0x4720, 0xcb2a, 0xe13c, 0x92a5, 0x1, 0x1);
        gbc.writeMem(0x92a5, { 0x27 });
        gbc.writeMem(0xdb9e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x8565);
        EXPECT(gbc.pc(), 0xdba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a5), 0x27);
        EXPECT(gbc.readMem(0xdb9e), 0xcb);
        EXPECT(gbc.readMem(0xdb9f), 0xce);
        // CB CE 0199
        gbc.setState(0x7f9c, 0x33e9, 0xce0, 0xb566, 0x5ecd, 0x5ca7, 0x1, 0x0);
        gbc.writeMem(0x5ca7, { 0x46 });
        gbc.writeMem(0x7f9c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x33e9);
        EXPECT(gbc.pc(), 0x7f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 019A
        gbc.setState(0x4963, 0x9abf, 0x71f0, 0x6801, 0x2619, 0xcda2, 0x0, 0x1);
        gbc.writeMem(0x4963, { 0xcb, 0xce });
        gbc.writeMem(0xcda2, { 0xf0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9abf);
        EXPECT(gbc.pc(), 0x4965);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcda2), 0xf2);
        // CB CE 019B
        gbc.setState(0xa7ef, 0x6399, 0xe8a0, 0x60ec, 0xf074, 0x63e8, 0x0, 0x1);
        gbc.writeMem(0x63e8, { 0x17 });
        gbc.writeMem(0xa7ef, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6399);
        EXPECT(gbc.pc(), 0xa7f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ef), 0xcb);
        EXPECT(gbc.readMem(0xa7f0), 0xce);
        // CB CE 019C
        gbc.setState(0xa675, 0xdcf6, 0x3d80, 0xde6, 0xbe3b, 0x7943, 0x1, 0x1);
        gbc.writeMem(0x7943, { 0x12 });
        gbc.writeMem(0xa675, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xdcf6);
        EXPECT(gbc.pc(), 0xa677);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa675), 0xcb);
        EXPECT(gbc.readMem(0xa676), 0xce);
        // CB CE 019F
        gbc.setState(0x3879, 0xc43a, 0x1940, 0xd9d9, 0xda7b, 0xd58d, 0x1, 0x0);
        gbc.writeMem(0x3879, { 0xcb, 0xce });
        gbc.writeMem(0xd58d, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xc43a);
        EXPECT(gbc.pc(), 0x387b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd58d), 0xf6);
        // CB CE 01A0
        gbc.setState(0xd9f2, 0x1048, 0x1be0, 0xbfd4, 0xb611, 0x9b5e, 0x0, 0x1);
        gbc.writeMem(0x9b5e, { 0xbb });
        gbc.writeMem(0xd9f2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x1048);
        EXPECT(gbc.pc(), 0xd9f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b5e), 0xbb);
        EXPECT(gbc.readMem(0xd9f2), 0xcb);
        EXPECT(gbc.readMem(0xd9f3), 0xce);
        // CB CE 01A1
        gbc.setState(0xbaed, 0xd74b, 0x6830, 0xb286, 0x5f9e, 0xd10e, 0x0, 0x0);
        gbc.writeMem(0xbaed, { 0xcb, 0xce });
        gbc.writeMem(0xd10e, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xd74b);
        EXPECT(gbc.pc(), 0xbaef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaed), 0xcb);
        EXPECT(gbc.readMem(0xbaee), 0xce);
        EXPECT(gbc.readMem(0xd10e), 0xda);
        // CB CE 01A2
        gbc.setState(0x97bd, 0x8602, 0x8450, 0x6414, 0xd818, 0x542b, 0x1, 0x0);
        gbc.writeMem(0x542b, { 0xa });
        gbc.writeMem(0x97bd, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8602);
        EXPECT(gbc.pc(), 0x97bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97bd), 0xcb);
        EXPECT(gbc.readMem(0x97be), 0xce);
        // CB CE 01A5
        gbc.setState(0x8610, 0xb1dc, 0x4360, 0xc065, 0xe0d1, 0xb353, 0x0, 0x1);
        gbc.writeMem(0x8610, { 0xcb, 0xce });
        gbc.writeMem(0xb353, { 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xb1dc);
        EXPECT(gbc.pc(), 0x8612);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8610), 0xcb);
        EXPECT(gbc.readMem(0x8611), 0xce);
        EXPECT(gbc.readMem(0xb353), 0xb2);
        // CB CE 01A7
        gbc.setState(0xcd5a, 0x7c6a, 0x5780, 0x9188, 0x36b3, 0xbeef, 0x1, 0x0);
        gbc.writeMem(0xbeef, { 0x7c });
        gbc.writeMem(0xcd5a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7c6a);
        EXPECT(gbc.pc(), 0xcd5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbeef), 0x7e);
        EXPECT(gbc.readMem(0xcd5a), 0xcb);
        EXPECT(gbc.readMem(0xcd5b), 0xce);
        // CB CE 01A8
        gbc.setState(0x54e9, 0xfab8, 0x5810, 0xb9, 0x67bf, 0xf851, 0x1, 0x1);
        gbc.writeMem(0x54e9, { 0xcb, 0xce });
        gbc.writeMem(0xf851, { 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xfab8);
        EXPECT(gbc.pc(), 0x54eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf851), 0xc6);
        // CB CE 01A9
        gbc.setState(0x54f3, 0x458d, 0xc530, 0x671c, 0xb762, 0xe73d, 0x0, 0x1);
        gbc.writeMem(0x54f3, { 0xcb, 0xce });
        gbc.writeMem(0xe73d, { 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x458d);
        EXPECT(gbc.pc(), 0x54f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe73d), 0x36);
        // CB CE 01AB
        gbc.setState(0x747f, 0xbd28, 0x2bc0, 0x8df7, 0x17bd, 0x3a8b, 0x1, 0x0);
        gbc.writeMem(0x3a8b, { 0x3b });
        gbc.writeMem(0x747f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xbd28);
        EXPECT(gbc.pc(), 0x7481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 01AC
        gbc.setState(0xaf43, 0xdc46, 0xd6b0, 0x2ea0, 0x2695, 0xedc3, 0x1, 0x1);
        gbc.writeMem(0xaf43, { 0xcb, 0xce });
        gbc.writeMem(0xedc3, { 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdc46);
        EXPECT(gbc.pc(), 0xaf45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf43), 0xcb);
        EXPECT(gbc.readMem(0xaf44), 0xce);
        EXPECT(gbc.readMem(0xedc3), 0xa6);
        // CB CE 01AD
        gbc.setState(0xb49e, 0x8aa4, 0x5880, 0x57bc, 0xe8ca, 0xcbdc, 0x0, 0x1);
        gbc.writeMem(0xb49e, { 0xcb, 0xce });
        gbc.writeMem(0xcbdc, { 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x8aa4);
        EXPECT(gbc.pc(), 0xb4a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb49e), 0xcb);
        EXPECT(gbc.readMem(0xb49f), 0xce);
        EXPECT(gbc.readMem(0xcbdc), 0x6b);
        // CB CE 01AE
        gbc.setState(0x6284, 0xa32c, 0x7610, 0x3a7, 0xf61, 0x9a7, 0x0, 0x0);
        gbc.writeMem(0x9a7, { 0xce });
        gbc.writeMem(0x6284, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa32c);
        EXPECT(gbc.pc(), 0x6286);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 01AF
        gbc.setState(0x91da, 0x1422, 0x43b0, 0x2899, 0xca02, 0xa8dd, 0x1, 0x0);
        gbc.writeMem(0x91da, { 0xcb, 0xce });
        gbc.writeMem(0xa8dd, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1422);
        EXPECT(gbc.pc(), 0x91dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91da), 0xcb);
        EXPECT(gbc.readMem(0x91db), 0xce);
        EXPECT(gbc.readMem(0xa8dd), 0x4a);
        // CB CE 01B0
        gbc.setState(0x49c8, 0x34ae, 0x9470, 0xa557, 0x4172, 0xb606, 0x0, 0x0);
        gbc.writeMem(0x49c8, { 0xcb, 0xce });
        gbc.writeMem(0xb606, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x34ae);
        EXPECT(gbc.pc(), 0x49ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb606), 0x9f);
        // CB CE 01B1
        gbc.setState(0xa85b, 0x9051, 0x14b0, 0xc7a1, 0xb723, 0x798f, 0x1, 0x0);
        gbc.writeMem(0x798f, { 0xeb });
        gbc.writeMem(0xa85b, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9051);
        EXPECT(gbc.pc(), 0xa85d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa85b), 0xcb);
        EXPECT(gbc.readMem(0xa85c), 0xce);
        // CB CE 01B4
        gbc.setState(0x9299, 0x1598, 0x3400, 0x9534, 0x6455, 0xd9fe, 0x0, 0x1);
        gbc.writeMem(0x9299, { 0xcb, 0xce });
        gbc.writeMem(0xd9fe, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x1598);
        EXPECT(gbc.pc(), 0x929b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9299), 0xcb);
        EXPECT(gbc.readMem(0x929a), 0xce);
        EXPECT(gbc.readMem(0xd9fe), 0x8e);
        // CB CE 01B5
        gbc.setState(0x2493, 0x400a, 0xdc00, 0x147b, 0x3f5e, 0x3d2, 0x0, 0x0);
        gbc.writeMem(0x3d2, { 0x4a });
        gbc.writeMem(0x2493, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x400a);
        EXPECT(gbc.pc(), 0x2495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 01B6
        gbc.setState(0x6262, 0xc709, 0x5330, 0xda6a, 0x531c, 0x5230, 0x0, 0x1);
        gbc.writeMem(0x5230, { 0x77 });
        gbc.writeMem(0x6262, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc709);
        EXPECT(gbc.pc(), 0x6264);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 01B7
        gbc.setState(0xdefd, 0x8e6f, 0xc600, 0x2612, 0x3109, 0x8241, 0x0, 0x0);
        gbc.writeMem(0x8241, { 0x7a });
        gbc.writeMem(0xdefd, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x8e6f);
        EXPECT(gbc.pc(), 0xdeff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8241), 0x7a);
        EXPECT(gbc.readMem(0xdefd), 0xcb);
        EXPECT(gbc.readMem(0xdefe), 0xce);
        // CB CE 01B8
        gbc.setState(0xe9d6, 0x2d71, 0xc60, 0x313a, 0xffa6, 0xd89b, 0x0, 0x0);
        gbc.writeMem(0xd89b, { 0x66 });
        gbc.writeMem(0xe9d6, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2d71);
        EXPECT(gbc.pc(), 0xe9d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd89b), 0x66);
        EXPECT(gbc.readMem(0xe9d6), 0xcb);
        EXPECT(gbc.readMem(0xe9d7), 0xce);
        // CB CE 01B9
        gbc.setState(0xece3, 0x9cad, 0x66a0, 0x4af0, 0xcacb, 0xfc0a, 0x0, 0x1);
        gbc.writeMem(0xece3, { 0xcb, 0xce });
        gbc.writeMem(0xfc0a, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x9cad);
        EXPECT(gbc.pc(), 0xece5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xece3), 0xcb);
        EXPECT(gbc.readMem(0xece4), 0xce);
        EXPECT(gbc.readMem(0xfc0a), 0x2f);
        // CB CE 01BA
        gbc.setState(0x515b, 0x24a4, 0x8480, 0xe92f, 0x9a51, 0x5190, 0x1, 0x1);
        gbc.writeMem(0x515b, { 0xcb, 0xce });
        gbc.writeMem(0x5190, { 0xf6 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x24a4);
        EXPECT(gbc.pc(), 0x515d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 01BB
        gbc.setState(0xee0e, 0x84e8, 0x9620, 0x2e51, 0x4fbf, 0xdece, 0x0, 0x1);
        gbc.writeMem(0xdece, { 0x13 });
        gbc.writeMem(0xee0e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x84e8);
        EXPECT(gbc.pc(), 0xee10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdece), 0x13);
        EXPECT(gbc.readMem(0xee0e), 0xcb);
        EXPECT(gbc.readMem(0xee0f), 0xce);
        // CB CE 01BC
        gbc.setState(0xc296, 0xa08d, 0x2630, 0x802f, 0xcf1d, 0xf04b, 0x1, 0x1);
        gbc.writeMem(0xc296, { 0xcb, 0xce });
        gbc.writeMem(0xf04b, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa08d);
        EXPECT(gbc.pc(), 0xc298);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc296), 0xcb);
        EXPECT(gbc.readMem(0xc297), 0xce);
        EXPECT(gbc.readMem(0xf04b), 0x9a);
        // CB CE 01BD
        gbc.setState(0x4f99, 0x1c4c, 0xbf50, 0x85af, 0xc453, 0xc8f1, 0x1, 0x1);
        gbc.writeMem(0x4f99, { 0xcb, 0xce });
        gbc.writeMem(0xc8f1, { 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x1c4c);
        EXPECT(gbc.pc(), 0x4f9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8f1), 0xa2);
        // CB CE 01C0
        gbc.setState(0x218b, 0xd9dc, 0x350, 0xb545, 0x245b, 0xde25, 0x1, 0x1);
        gbc.writeMem(0x218b, { 0xcb, 0xce });
        gbc.writeMem(0xde25, { 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xd9dc);
        EXPECT(gbc.pc(), 0x218d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde25), 0xe3);
        // CB CE 01C1
        gbc.setState(0x56f3, 0x8751, 0xdaa0, 0xbe2f, 0xaeaf, 0x6860, 0x1, 0x1);
        gbc.writeMem(0x56f3, { 0xcb, 0xce });
        gbc.writeMem(0x6860, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8751);
        EXPECT(gbc.pc(), 0x56f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 01C2
        gbc.setState(0xa672, 0x3369, 0x4d70, 0xfb91, 0x2c29, 0xcd1, 0x1, 0x0);
        gbc.writeMem(0xcd1, { 0xb });
        gbc.writeMem(0xa672, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x3369);
        EXPECT(gbc.pc(), 0xa674);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa672), 0xcb);
        EXPECT(gbc.readMem(0xa673), 0xce);
        // CB CE 01C3
        gbc.setState(0x542e, 0x45b0, 0x4be0, 0x9b2c, 0x3e23, 0xbff6, 0x0, 0x0);
        gbc.writeMem(0x542e, { 0xcb, 0xce });
        gbc.writeMem(0xbff6, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x45b0);
        EXPECT(gbc.pc(), 0x5430);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff6), 0x62);
        // CB CE 01C4
        gbc.setState(0x918c, 0xb195, 0x7680, 0xadb7, 0x55b7, 0xf112, 0x1, 0x1);
        gbc.writeMem(0x918c, { 0xcb, 0xce });
        gbc.writeMem(0xf112, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xb195);
        EXPECT(gbc.pc(), 0x918e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x918c), 0xcb);
        EXPECT(gbc.readMem(0x918d), 0xce);
        EXPECT(gbc.readMem(0xf112), 0x1e);
        // CB CE 01C5
        gbc.setState(0x5ee1, 0x8372, 0x18a0, 0x6ed6, 0x6594, 0x76f9, 0x0, 0x1);
        gbc.writeMem(0x5ee1, { 0xcb, 0xce });
        gbc.writeMem(0x76f9, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8372);
        EXPECT(gbc.pc(), 0x5ee3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 01C6
        gbc.setState(0xcd6c, 0x2c37, 0x4450, 0x6b97, 0xb419, 0xb500, 0x0, 0x0);
        gbc.writeMem(0xb500, { 0x9 });
        gbc.writeMem(0xcd6c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2c37);
        EXPECT(gbc.pc(), 0xcd6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb500), 0xb);
        EXPECT(gbc.readMem(0xcd6c), 0xcb);
        EXPECT(gbc.readMem(0xcd6d), 0xce);
        // CB CE 01C8
        gbc.setState(0xd20, 0x945f, 0xd370, 0xeb31, 0xc7eb, 0x71f, 0x1, 0x0);
        gbc.writeMem(0x71f, { 0x8a });
        gbc.writeMem(0xd20, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x945f);
        EXPECT(gbc.pc(), 0xd22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 01CA
        gbc.setState(0x790b, 0xaca3, 0x6cf0, 0x837b, 0x87d2, 0xfe8c, 0x0, 0x0);
        gbc.writeMem(0x790b, { 0xcb, 0xce });
        gbc.writeMem(0xfe8c, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xaca3);
        EXPECT(gbc.pc(), 0x790d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe8c), 0x8f);
        // CB CE 01CB
        gbc.setState(0x2474, 0x5165, 0x67c0, 0xbe74, 0x5408, 0x89f3, 0x1, 0x1);
        gbc.writeMem(0x2474, { 0xcb, 0xce });
        gbc.writeMem(0x89f3, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5165);
        EXPECT(gbc.pc(), 0x2476);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f3), 0x5b);
        // CB CE 01CD
        gbc.setState(0x2b64, 0xeeb2, 0x8f80, 0x55d, 0xe197, 0xc23a, 0x0, 0x0);
        gbc.writeMem(0x2b64, { 0xcb, 0xce });
        gbc.writeMem(0xc23a, { 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xeeb2);
        EXPECT(gbc.pc(), 0x2b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc23a), 0x76);
        // CB CE 01CE
        gbc.setState(0x826e, 0xd59e, 0x17e0, 0xfaf0, 0x12c0, 0xa043, 0x1, 0x0);
        gbc.writeMem(0x826e, { 0xcb, 0xce });
        gbc.writeMem(0xa043, { 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd59e);
        EXPECT(gbc.pc(), 0x8270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x826e), 0xcb);
        EXPECT(gbc.readMem(0x826f), 0xce);
        EXPECT(gbc.readMem(0xa043), 0xaf);
        // CB CE 01CF
        gbc.setState(0x1804, 0xaea1, 0xaf50, 0xb969, 0xa1ec, 0xeea8, 0x0, 0x0);
        gbc.writeMem(0x1804, { 0xcb, 0xce });
        gbc.writeMem(0xeea8, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xaea1);
        EXPECT(gbc.pc(), 0x1806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeea8), 0x37);
        // CB CE 01D0
        gbc.setState(0xd41c, 0x4d7f, 0xff10, 0xd78, 0x7296, 0xb709, 0x0, 0x1);
        gbc.writeMem(0xb709, { 0xf7 });
        gbc.writeMem(0xd41c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4d7f);
        EXPECT(gbc.pc(), 0xd41e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb709), 0xf7);
        EXPECT(gbc.readMem(0xd41c), 0xcb);
        EXPECT(gbc.readMem(0xd41d), 0xce);
        // CB CE 01D1
        gbc.setState(0xa563, 0x88d1, 0xbf30, 0x1568, 0xe56f, 0xb881, 0x0, 0x0);
        gbc.writeMem(0xa563, { 0xcb, 0xce });
        gbc.writeMem(0xb881, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x88d1);
        EXPECT(gbc.pc(), 0xa565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa563), 0xcb);
        EXPECT(gbc.readMem(0xa564), 0xce);
        EXPECT(gbc.readMem(0xb881), 0x1e);
        // CB CE 01D2
        gbc.setState(0x8b57, 0x238b, 0xbdb0, 0x8adf, 0x9ead, 0xc0c7, 0x0, 0x1);
        gbc.writeMem(0x8b57, { 0xcb, 0xce });
        gbc.writeMem(0xc0c7, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x238b);
        EXPECT(gbc.pc(), 0x8b59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b57), 0xcb);
        EXPECT(gbc.readMem(0x8b58), 0xce);
        EXPECT(gbc.readMem(0xc0c7), 0xee);
        // CB CE 01D4
        gbc.setState(0xbc97, 0xd1d6, 0x4920, 0xccf9, 0x6a1f, 0x1f0, 0x0, 0x0);
        gbc.writeMem(0x1f0, { 0x7f });
        gbc.writeMem(0xbc97, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd1d6);
        EXPECT(gbc.pc(), 0xbc99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc97), 0xcb);
        EXPECT(gbc.readMem(0xbc98), 0xce);
        // CB CE 01D5
        gbc.setState(0xe344, 0xf803, 0x9750, 0x59b8, 0x71a2, 0xee48, 0x0, 0x1);
        gbc.writeMem(0xe344, { 0xcb, 0xce });
        gbc.writeMem(0xee48, { 0x41 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf803);
        EXPECT(gbc.pc(), 0xe346);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe344), 0xcb);
        EXPECT(gbc.readMem(0xe345), 0xce);
        EXPECT(gbc.readMem(0xee48), 0x43);
        // CB CE 01D7
        gbc.setState(0x7c57, 0x953e, 0xc740, 0x10b9, 0xb698, 0xe170, 0x1, 0x0);
        gbc.writeMem(0x7c57, { 0xcb, 0xce });
        gbc.writeMem(0xe170, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x953e);
        EXPECT(gbc.pc(), 0x7c59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe170), 0x52);
        // CB CE 01D8
        gbc.setState(0x929f, 0x7846, 0xc5d0, 0x6447, 0x6a91, 0xac87, 0x1, 0x0);
        gbc.writeMem(0x929f, { 0xcb, 0xce });
        gbc.writeMem(0xac87, { 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7846);
        EXPECT(gbc.pc(), 0x92a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x929f), 0xcb);
        EXPECT(gbc.readMem(0x92a0), 0xce);
        EXPECT(gbc.readMem(0xac87), 0x4e);
        // CB CE 01D9
        gbc.setState(0x62fe, 0xa1b2, 0x40b0, 0x14cf, 0xf828, 0x3497, 0x0, 0x0);
        gbc.writeMem(0x3497, { 0x5b });
        gbc.writeMem(0x62fe, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xa1b2);
        EXPECT(gbc.pc(), 0x6300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 01DB
        gbc.setState(0xa7d2, 0xe4b5, 0xae00, 0x1ba5, 0x911e, 0x98e9, 0x1, 0x0);
        gbc.writeMem(0x98e9, { 0xe });
        gbc.writeMem(0xa7d2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe4b5);
        EXPECT(gbc.pc(), 0xa7d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e9), 0xe);
        EXPECT(gbc.readMem(0xa7d2), 0xcb);
        EXPECT(gbc.readMem(0xa7d3), 0xce);
        // CB CE 01DC
        gbc.setState(0xd731, 0x11b2, 0x16e0, 0xb826, 0x78fc, 0xcb96, 0x0, 0x1);
        gbc.writeMem(0xcb96, { 0xc5 });
        gbc.writeMem(0xd731, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x11b2);
        EXPECT(gbc.pc(), 0xd733);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb96), 0xc7);
        EXPECT(gbc.readMem(0xd731), 0xcb);
        EXPECT(gbc.readMem(0xd732), 0xce);
        // CB CE 01DE
        gbc.setState(0xa3fb, 0xc748, 0xb7f0, 0xfab0, 0xc8d6, 0xe841, 0x0, 0x0);
        gbc.writeMem(0xa3fb, { 0xcb, 0xce });
        gbc.writeMem(0xe841, { 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc748);
        EXPECT(gbc.pc(), 0xa3fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3fb), 0xcb);
        EXPECT(gbc.readMem(0xa3fc), 0xce);
        EXPECT(gbc.readMem(0xe841), 0x93);
        // CB CE 01DF
        gbc.setState(0x4a5e, 0x5fa8, 0xd500, 0x2564, 0x8d84, 0xc91e, 0x1, 0x0);
        gbc.writeMem(0x4a5e, { 0xcb, 0xce });
        gbc.writeMem(0xc91e, { 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x5fa8);
        EXPECT(gbc.pc(), 0x4a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc91e), 0xdf);
        // CB CE 01E0
        gbc.setState(0xb371, 0x9c77, 0x39f0, 0x4b98, 0x77a6, 0x3758, 0x0, 0x1);
        gbc.writeMem(0x3758, { 0x53 });
        gbc.writeMem(0xb371, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9c77);
        EXPECT(gbc.pc(), 0xb373);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb371), 0xcb);
        EXPECT(gbc.readMem(0xb372), 0xce);
        // CB CE 01E1
        gbc.setState(0xd1f0, 0x3cc5, 0xb760, 0xa84b, 0xa6ea, 0xb6e8, 0x0, 0x0);
        gbc.writeMem(0xb6e8, { 0xe5 });
        gbc.writeMem(0xd1f0, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x3cc5);
        EXPECT(gbc.pc(), 0xd1f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6e8), 0xe7);
        EXPECT(gbc.readMem(0xd1f0), 0xcb);
        EXPECT(gbc.readMem(0xd1f1), 0xce);
        // CB CE 01E2
        gbc.setState(0xddbe, 0x572a, 0x83e0, 0x7b0f, 0x510f, 0xf22a, 0x0, 0x1);
        gbc.writeMem(0xddbe, { 0xcb, 0xce });
        gbc.writeMem(0xf22a, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x572a);
        EXPECT(gbc.pc(), 0xddc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddbe), 0xcb);
        EXPECT(gbc.readMem(0xddbf), 0xce);
        EXPECT(gbc.readMem(0xf22a), 0x16);
        // CB CE 01E3
        gbc.setState(0xeb25, 0xf6e5, 0x9050, 0xe82f, 0x3671, 0xd326, 0x0, 0x1);
        gbc.writeMem(0xd326, { 0xad });
        gbc.writeMem(0xeb25, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xf6e5);
        EXPECT(gbc.pc(), 0xeb27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd326), 0xaf);
        EXPECT(gbc.readMem(0xeb25), 0xcb);
        EXPECT(gbc.readMem(0xeb26), 0xce);
        // CB CE 01E4
        gbc.setState(0x54ab, 0xd3fd, 0xcae0, 0x6dc4, 0xaf86, 0x8f9, 0x1, 0x1);
        gbc.writeMem(0x8f9, { 0xef });
        gbc.writeMem(0x54ab, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd3fd);
        EXPECT(gbc.pc(), 0x54ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 01E5
        gbc.setState(0x6ff4, 0xc51c, 0x62a0, 0x7079, 0x366b, 0xede7, 0x0, 0x1);
        gbc.writeMem(0x6ff4, { 0xcb, 0xce });
        gbc.writeMem(0xede7, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xc51c);
        EXPECT(gbc.pc(), 0x6ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xede7), 0x7f);
        // CB CE 01E6
        gbc.setState(0x638d, 0x3ab3, 0x1d90, 0x4c17, 0x2113, 0xb0ec, 0x0, 0x1);
        gbc.writeMem(0x638d, { 0xcb, 0xce });
        gbc.writeMem(0xb0ec, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x3ab3);
        EXPECT(gbc.pc(), 0x638f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0ec), 0x1e);
        // CB CE 01E7
        gbc.setState(0xa38f, 0x59ab, 0x9440, 0xde83, 0x53ba, 0x8b61, 0x0, 0x1);
        gbc.writeMem(0x8b61, { 0x88 });
        gbc.writeMem(0xa38f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x59ab);
        EXPECT(gbc.pc(), 0xa391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b61), 0x8a);
        EXPECT(gbc.readMem(0xa38f), 0xcb);
        EXPECT(gbc.readMem(0xa390), 0xce);
        // CB CE 01E8
        gbc.setState(0xb38, 0x2b22, 0xf570, 0xa74b, 0x3d63, 0xd2ae, 0x0, 0x1);
        gbc.writeMem(0xb38, { 0xcb, 0xce });
        gbc.writeMem(0xd2ae, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2b22);
        EXPECT(gbc.pc(), 0xb3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ae), 0xcf);
        // CB CE 01E9
        gbc.setState(0x74fe, 0x86fe, 0xe7f0, 0xcd1d, 0x9b96, 0x5b9f, 0x1, 0x1);
        gbc.writeMem(0x5b9f, { 0xd2 });
        gbc.writeMem(0x74fe, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x86fe);
        EXPECT(gbc.pc(), 0x7500);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 01EA
        gbc.setState(0x3d1, 0xc968, 0xf0f0, 0x49c6, 0x2a21, 0x693c, 0x0, 0x0);
        gbc.writeMem(0x3d1, { 0xcb, 0xce });
        gbc.writeMem(0x693c, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xc968);
        EXPECT(gbc.pc(), 0x3d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 01EB
        gbc.setState(0xbcb8, 0x90c2, 0x6a70, 0xd3aa, 0xf8a3, 0x3cdf, 0x0, 0x1);
        gbc.writeMem(0x3cdf, { 0x87 });
        gbc.writeMem(0xbcb8, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x90c2);
        EXPECT(gbc.pc(), 0xbcba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcb8), 0xcb);
        EXPECT(gbc.readMem(0xbcb9), 0xce);
        // CB CE 01EC
        gbc.setState(0x883c, 0x1dcb, 0xda60, 0xb8cd, 0x3342, 0x8727, 0x1, 0x0);
        gbc.writeMem(0x8727, { 0x11 });
        gbc.writeMem(0x883c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x1dcb);
        EXPECT(gbc.pc(), 0x883e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8727), 0x13);
        EXPECT(gbc.readMem(0x883c), 0xcb);
        EXPECT(gbc.readMem(0x883d), 0xce);
        // CB CE 01ED
        gbc.setState(0x5d67, 0x46fc, 0x2ce0, 0xaaca, 0x94d5, 0xc9a3, 0x1, 0x1);
        gbc.writeMem(0x5d67, { 0xcb, 0xce });
        gbc.writeMem(0xc9a3, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x46fc);
        EXPECT(gbc.pc(), 0x5d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a3), 0x37);
        // CB CE 01EE
        gbc.setState(0x8c57, 0x650d, 0xf420, 0xfa4a, 0xd341, 0x4105, 0x0, 0x1);
        gbc.writeMem(0x4105, { 0xcb });
        gbc.writeMem(0x8c57, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x650d);
        EXPECT(gbc.pc(), 0x8c59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c57), 0xcb);
        EXPECT(gbc.readMem(0x8c58), 0xce);
        // CB CE 01EF
        gbc.setState(0xc328, 0x74e1, 0x9e40, 0xc1ae, 0x1fbc, 0x8e64, 0x0, 0x0);
        gbc.writeMem(0x8e64, { 0x12 });
        gbc.writeMem(0xc328, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x74e1);
        EXPECT(gbc.pc(), 0xc32a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e64), 0x12);
        EXPECT(gbc.readMem(0xc328), 0xcb);
        EXPECT(gbc.readMem(0xc329), 0xce);
        // CB CE 01F0
        gbc.setState(0x8d71, 0x9e66, 0xd640, 0x557c, 0x2322, 0xf731, 0x1, 0x0);
        gbc.writeMem(0x8d71, { 0xcb, 0xce });
        gbc.writeMem(0xf731, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9e66);
        EXPECT(gbc.pc(), 0x8d73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d71), 0xcb);
        EXPECT(gbc.readMem(0x8d72), 0xce);
        EXPECT(gbc.readMem(0xf731), 0xb3);
        // CB CE 01F1
        gbc.setState(0xa472, 0xb84a, 0xe670, 0xe414, 0xaabf, 0x2da1, 0x1, 0x0);
        gbc.writeMem(0x2da1, { 0xba });
        gbc.writeMem(0xa472, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xb84a);
        EXPECT(gbc.pc(), 0xa474);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa472), 0xcb);
        EXPECT(gbc.readMem(0xa473), 0xce);
        // CB CE 01F2
        gbc.setState(0x4acb, 0x5ae, 0x9a70, 0xe5, 0x6572, 0x79f3, 0x1, 0x0);
        gbc.writeMem(0x4acb, { 0xcb, 0xce });
        gbc.writeMem(0x79f3, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5ae);
        EXPECT(gbc.pc(), 0x4acd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 01F4
        gbc.setState(0x4272, 0xa911, 0x8940, 0xc6f8, 0xbdd2, 0xdea1, 0x0, 0x0);
        gbc.writeMem(0x4272, { 0xcb, 0xce });
        gbc.writeMem(0xdea1, { 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa911);
        EXPECT(gbc.pc(), 0x4274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdea1), 0x82);
        // CB CE 01F5
        gbc.setState(0xb482, 0xf29d, 0x2190, 0xfbc4, 0x186, 0x9623, 0x1, 0x1);
        gbc.writeMem(0x9623, { 0x78 });
        gbc.writeMem(0xb482, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xf29d);
        EXPECT(gbc.pc(), 0xb484);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9623), 0x7a);
        EXPECT(gbc.readMem(0xb482), 0xcb);
        EXPECT(gbc.readMem(0xb483), 0xce);
        // CB CE 01F6
        gbc.setState(0xddb3, 0xeb51, 0xeb90, 0x18c1, 0x44d7, 0x238c, 0x1, 0x0);
        gbc.writeMem(0x238c, { 0xff });
        gbc.writeMem(0xddb3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xeb51);
        EXPECT(gbc.pc(), 0xddb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xddb3), 0xcb);
        EXPECT(gbc.readMem(0xddb4), 0xce);
        // CB CE 01F8
        gbc.setState(0x300d, 0x66f3, 0xd470, 0x5634, 0x3668, 0x2c71, 0x0, 0x1);
        gbc.writeMem(0x2c71, { 0x1f });
        gbc.writeMem(0x300d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x66f3);
        EXPECT(gbc.pc(), 0x300f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 01F9
        gbc.setState(0xa658, 0xcc4e, 0xa2f0, 0x9870, 0xc5bc, 0xbfb7, 0x0, 0x1);
        gbc.writeMem(0xa658, { 0xcb, 0xce });
        gbc.writeMem(0xbfb7, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xcc4e);
        EXPECT(gbc.pc(), 0xa65a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa658), 0xcb);
        EXPECT(gbc.readMem(0xa659), 0xce);
        EXPECT(gbc.readMem(0xbfb7), 0xfa);
        // CB CE 01FB
        gbc.setState(0x18ce, 0x3249, 0x59f0, 0xaaca, 0x3913, 0xc5d9, 0x0, 0x1);
        gbc.writeMem(0x18ce, { 0xcb, 0xce });
        gbc.writeMem(0xc5d9, { 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x3249);
        EXPECT(gbc.pc(), 0x18d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5d9), 0xd3);
        // CB CE 01FD
        gbc.setState(0x4151, 0x44e5, 0x570, 0xd24a, 0xc329, 0x6cd0, 0x1, 0x0);
        gbc.writeMem(0x4151, { 0xcb, 0xce });
        gbc.writeMem(0x6cd0, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x44e5);
        EXPECT(gbc.pc(), 0x4153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 01FE
        gbc.setState(0x3213, 0xaf84, 0xf840, 0x893d, 0xd794, 0x3e47, 0x1, 0x1);
        gbc.writeMem(0x3213, { 0xcb, 0xce });
        gbc.writeMem(0x3e47, { 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xaf84);
        EXPECT(gbc.pc(), 0x3215);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 01FF
        gbc.setState(0x96fe, 0xa56, 0xf5f0, 0x37db, 0x203b, 0x781f, 0x1, 0x1);
        gbc.writeMem(0x781f, { 0x42 });
        gbc.writeMem(0x96fe, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa56);
        EXPECT(gbc.pc(), 0x9700);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96fe), 0xcb);
        EXPECT(gbc.readMem(0x96ff), 0xce);
        // CB CE 0201
        gbc.setState(0xf87, 0xe63b, 0x9990, 0x797f, 0x923f, 0xd669, 0x1, 0x0);
        gbc.writeMem(0xf87, { 0xcb, 0xce });
        gbc.writeMem(0xd669, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe63b);
        EXPECT(gbc.pc(), 0xf89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd669), 0x62);
        // CB CE 0202
        gbc.setState(0xc665, 0xa8a2, 0x4ec0, 0x1648, 0xf6d9, 0xb9c1, 0x0, 0x0);
        gbc.writeMem(0xb9c1, { 0xf9 });
        gbc.writeMem(0xc665, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa8a2);
        EXPECT(gbc.pc(), 0xc667);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9c1), 0xfb);
        EXPECT(gbc.readMem(0xc665), 0xcb);
        EXPECT(gbc.readMem(0xc666), 0xce);
        // CB CE 0203
        gbc.setState(0x1f7e, 0x4a20, 0x7860, 0xdb76, 0x5821, 0xb82f, 0x0, 0x1);
        gbc.writeMem(0x1f7e, { 0xcb, 0xce });
        gbc.writeMem(0xb82f, { 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4a20);
        EXPECT(gbc.pc(), 0x1f80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb82f), 0x2f);
        // CB CE 0204
        gbc.setState(0x4871, 0x4448, 0x2c40, 0xc7bc, 0x2164, 0x4cc3, 0x0, 0x1);
        gbc.writeMem(0x4871, { 0xcb, 0xce });
        gbc.writeMem(0x4cc3, { 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x4448);
        EXPECT(gbc.pc(), 0x4873);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0206
        gbc.setState(0xca5a, 0x6f30, 0xb5a0, 0x1269, 0x1966, 0x8521, 0x1, 0x1);
        gbc.writeMem(0x8521, { 0x41 });
        gbc.writeMem(0xca5a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6f30);
        EXPECT(gbc.pc(), 0xca5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8521), 0x43);
        EXPECT(gbc.readMem(0xca5a), 0xcb);
        EXPECT(gbc.readMem(0xca5b), 0xce);
        // CB CE 0207
        gbc.setState(0xbcee, 0xc3d0, 0x8680, 0x16df, 0x80b8, 0xf198, 0x1, 0x1);
        gbc.writeMem(0xbcee, { 0xcb, 0xce });
        gbc.writeMem(0xf198, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc3d0);
        EXPECT(gbc.pc(), 0xbcf0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcee), 0xcb);
        EXPECT(gbc.readMem(0xbcef), 0xce);
        EXPECT(gbc.readMem(0xf198), 0xbb);
        // CB CE 0209
        gbc.setState(0x511f, 0x7cdc, 0x590, 0xeefa, 0xa4f2, 0xfda3, 0x0, 0x1);
        gbc.writeMem(0x511f, { 0xcb, 0xce });
        gbc.writeMem(0xfda3, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x7cdc);
        EXPECT(gbc.pc(), 0x5121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfda3), 0x7b);
        // CB CE 020A
        gbc.setState(0x2869, 0x50ac, 0x8f60, 0x2d98, 0x3732, 0x7adf, 0x1, 0x1);
        gbc.writeMem(0x2869, { 0xcb, 0xce });
        gbc.writeMem(0x7adf, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x50ac);
        EXPECT(gbc.pc(), 0x286b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 020B
        gbc.setState(0x4d77, 0x47e5, 0xe2c0, 0x4c0f, 0x3f10, 0xe1bd, 0x1, 0x1);
        gbc.writeMem(0x4d77, { 0xcb, 0xce });
        gbc.writeMem(0xe1bd, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x47e5);
        EXPECT(gbc.pc(), 0x4d79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1bd), 0x83);
        // CB CE 020D
        gbc.setState(0x9b1c, 0x6584, 0x2870, 0x9bb1, 0x33cd, 0x6b18, 0x0, 0x1);
        gbc.writeMem(0x6b18, { 0x82 });
        gbc.writeMem(0x9b1c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x6584);
        EXPECT(gbc.pc(), 0x9b1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b1c), 0xcb);
        EXPECT(gbc.readMem(0x9b1d), 0xce);
        // CB CE 0210
        gbc.setState(0x8c1b, 0x6cd8, 0xa540, 0xf236, 0x4ab1, 0xdf16, 0x1, 0x0);
        gbc.writeMem(0x8c1b, { 0xcb, 0xce });
        gbc.writeMem(0xdf16, { 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6cd8);
        EXPECT(gbc.pc(), 0x8c1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c1b), 0xcb);
        EXPECT(gbc.readMem(0x8c1c), 0xce);
        EXPECT(gbc.readMem(0xdf16), 0x6e);
        // CB CE 0212
        gbc.setState(0xe314, 0x1eb7, 0xbe90, 0x375f, 0x54d1, 0xd6ff, 0x0, 0x0);
        gbc.writeMem(0xd6ff, { 0xd0 });
        gbc.writeMem(0xe314, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1eb7);
        EXPECT(gbc.pc(), 0xe316);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6ff), 0xd2);
        EXPECT(gbc.readMem(0xe314), 0xcb);
        EXPECT(gbc.readMem(0xe315), 0xce);
        // CB CE 0213
        gbc.setState(0x9325, 0x2518, 0xd7e0, 0x3d73, 0xb6ca, 0x37e2, 0x0, 0x0);
        gbc.writeMem(0x37e2, { 0x8e });
        gbc.writeMem(0x9325, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2518);
        EXPECT(gbc.pc(), 0x9327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9325), 0xcb);
        EXPECT(gbc.readMem(0x9326), 0xce);
        // CB CE 0214
        gbc.setState(0xcacc, 0x8ca9, 0x55f0, 0xeee7, 0xe251, 0x178c, 0x0, 0x1);
        gbc.writeMem(0x178c, { 0x83 });
        gbc.writeMem(0xcacc, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x8ca9);
        EXPECT(gbc.pc(), 0xcace);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcacc), 0xcb);
        EXPECT(gbc.readMem(0xcacd), 0xce);
        // CB CE 0215
        gbc.setState(0x685c, 0xcaa4, 0x4d00, 0x355, 0x1bba, 0x14f0, 0x0, 0x0);
        gbc.writeMem(0x14f0, { 0x33 });
        gbc.writeMem(0x685c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xcaa4);
        EXPECT(gbc.pc(), 0x685e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0216
        gbc.setState(0x8076, 0x11cc, 0x3770, 0x7982, 0x450, 0xc0f6, 0x0, 0x1);
        gbc.writeMem(0x8076, { 0xcb, 0xce });
        gbc.writeMem(0xc0f6, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x11cc);
        EXPECT(gbc.pc(), 0x8078);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8076), 0xcb);
        EXPECT(gbc.readMem(0x8077), 0xce);
        EXPECT(gbc.readMem(0xc0f6), 0xc3);
        // CB CE 0217
        gbc.setState(0xebee, 0xb723, 0x5840, 0x394c, 0xceeb, 0x50ac, 0x0, 0x1);
        gbc.writeMem(0x50ac, { 0x4a });
        gbc.writeMem(0xebee, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb723);
        EXPECT(gbc.pc(), 0xebf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebee), 0xcb);
        EXPECT(gbc.readMem(0xebef), 0xce);
        // CB CE 021A
        gbc.setState(0x5ac6, 0x6242, 0xd30, 0xbb39, 0xdbff, 0xc9a, 0x1, 0x1);
        gbc.writeMem(0xc9a, { 0x3 });
        gbc.writeMem(0x5ac6, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6242);
        EXPECT(gbc.pc(), 0x5ac8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 021B
        gbc.setState(0xdfa0, 0x5585, 0xb050, 0x85cc, 0xa0de, 0x9bb9, 0x1, 0x1);
        gbc.writeMem(0x9bb9, { 0xba });
        gbc.writeMem(0xdfa0, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5585);
        EXPECT(gbc.pc(), 0xdfa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb9), 0xba);
        EXPECT(gbc.readMem(0xdfa0), 0xcb);
        EXPECT(gbc.readMem(0xdfa1), 0xce);
        // CB CE 021C
        gbc.setState(0xc823, 0x47fb, 0x8250, 0xe559, 0x3f8b, 0xbf36, 0x0, 0x1);
        gbc.writeMem(0xbf36, { 0x1 });
        gbc.writeMem(0xc823, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x47fb);
        EXPECT(gbc.pc(), 0xc825);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf36), 0x3);
        EXPECT(gbc.readMem(0xc823), 0xcb);
        EXPECT(gbc.readMem(0xc824), 0xce);
        // CB CE 021E
        gbc.setState(0xc2d1, 0xef38, 0x2890, 0xc76d, 0x9af0, 0x9897, 0x0, 0x0);
        gbc.writeMem(0x9897, { 0xea });
        gbc.writeMem(0xc2d1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xef38);
        EXPECT(gbc.pc(), 0xc2d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9897), 0xea);
        EXPECT(gbc.readMem(0xc2d1), 0xcb);
        EXPECT(gbc.readMem(0xc2d2), 0xce);
        // CB CE 021F
        gbc.setState(0xe718, 0x2011, 0x4d40, 0xeda6, 0x9292, 0xc0e6, 0x0, 0x1);
        gbc.writeMem(0xc0e6, { 0x2f });
        gbc.writeMem(0xe718, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x2011);
        EXPECT(gbc.pc(), 0xe71a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0e6), 0x2f);
        EXPECT(gbc.readMem(0xe718), 0xcb);
        EXPECT(gbc.readMem(0xe719), 0xce);
        // CB CE 0220
        gbc.setState(0x177e, 0xfc6b, 0x320, 0x393c, 0x62b5, 0x96e5, 0x1, 0x1);
        gbc.writeMem(0x177e, { 0xcb, 0xce });
        gbc.writeMem(0x96e5, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xfc6b);
        EXPECT(gbc.pc(), 0x1780);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96e5), 0x56);
        // CB CE 0222
        gbc.setState(0x8ed0, 0x5c3b, 0x9010, 0x66de, 0xc0b1, 0xcee5, 0x0, 0x1);
        gbc.writeMem(0x8ed0, { 0xcb, 0xce });
        gbc.writeMem(0xcee5, { 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5c3b);
        EXPECT(gbc.pc(), 0x8ed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ed0), 0xcb);
        EXPECT(gbc.readMem(0x8ed1), 0xce);
        EXPECT(gbc.readMem(0xcee5), 0xb3);
        // CB CE 0224
        gbc.setState(0xcc64, 0xd56d, 0xa3e0, 0xd660, 0x3994, 0x66a3, 0x0, 0x0);
        gbc.writeMem(0x66a3, { 0xc7 });
        gbc.writeMem(0xcc64, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xd56d);
        EXPECT(gbc.pc(), 0xcc66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc64), 0xcb);
        EXPECT(gbc.readMem(0xcc65), 0xce);
        // CB CE 0225
        gbc.setState(0xdce2, 0x76f8, 0x7b30, 0x1790, 0xd3c, 0xa2f3, 0x1, 0x1);
        gbc.writeMem(0xa2f3, { 0xeb });
        gbc.writeMem(0xdce2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x76f8);
        EXPECT(gbc.pc(), 0xdce4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2f3), 0xeb);
        EXPECT(gbc.readMem(0xdce2), 0xcb);
        EXPECT(gbc.readMem(0xdce3), 0xce);
        // CB CE 0227
        gbc.setState(0x28bc, 0x1f7c, 0x8220, 0x6c09, 0x52c, 0xa820, 0x1, 0x0);
        gbc.writeMem(0x28bc, { 0xcb, 0xce });
        gbc.writeMem(0xa820, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x1f7c);
        EXPECT(gbc.pc(), 0x28be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa820), 0xa);
        // CB CE 0228
        gbc.setState(0x5e6b, 0xb295, 0x97b0, 0x2a66, 0x7e77, 0x8e44, 0x1, 0x1);
        gbc.writeMem(0x5e6b, { 0xcb, 0xce });
        gbc.writeMem(0x8e44, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xb295);
        EXPECT(gbc.pc(), 0x5e6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e44), 0xdf);
        // CB CE 0229
        gbc.setState(0x3981, 0xb10b, 0xf380, 0x920d, 0xafea, 0x40c, 0x0, 0x1);
        gbc.writeMem(0x40c, { 0xf });
        gbc.writeMem(0x3981, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb10b);
        EXPECT(gbc.pc(), 0x3983);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 022A
        gbc.setState(0xed18, 0xd29f, 0x1f70, 0x9656, 0xf45e, 0xd614, 0x0, 0x0);
        gbc.writeMem(0xd614, { 0x7e });
        gbc.writeMem(0xed18, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xd29f);
        EXPECT(gbc.pc(), 0xed1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd614), 0x7e);
        EXPECT(gbc.readMem(0xed18), 0xcb);
        EXPECT(gbc.readMem(0xed19), 0xce);
        // CB CE 022C
        gbc.setState(0x31b9, 0x63a, 0xd5e0, 0x6e98, 0x644d, 0xacf0, 0x1, 0x0);
        gbc.writeMem(0x31b9, { 0xcb, 0xce });
        gbc.writeMem(0xacf0, { 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x63a);
        EXPECT(gbc.pc(), 0x31bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf0), 0xd7);
        // CB CE 022D
        gbc.setState(0x74cd, 0xb177, 0x7a20, 0x5bc3, 0x7a6a, 0xa895, 0x0, 0x0);
        gbc.writeMem(0x74cd, { 0xcb, 0xce });
        gbc.writeMem(0xa895, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb177);
        EXPECT(gbc.pc(), 0x74cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa895), 0x52);
        // CB CE 022E
        gbc.setState(0x533f, 0x6899, 0x3ba0, 0x5ca2, 0x845b, 0xbced, 0x1, 0x0);
        gbc.writeMem(0x533f, { 0xcb, 0xce });
        gbc.writeMem(0xbced, { 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6899);
        EXPECT(gbc.pc(), 0x5341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbced), 0xbb);
        // CB CE 022F
        gbc.setState(0x1acf, 0x8869, 0xcf70, 0x5fb9, 0x2b17, 0xf152, 0x0, 0x0);
        gbc.writeMem(0x1acf, { 0xcb, 0xce });
        gbc.writeMem(0xf152, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8869);
        EXPECT(gbc.pc(), 0x1ad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf152), 0xc7);
        // CB CE 0230
        gbc.setState(0xa016, 0x6070, 0x7260, 0x4885, 0x7300, 0x8af5, 0x1, 0x0);
        gbc.writeMem(0x8af5, { 0xf7 });
        gbc.writeMem(0xa016, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6070);
        EXPECT(gbc.pc(), 0xa018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8af5), 0xf7);
        EXPECT(gbc.readMem(0xa016), 0xcb);
        EXPECT(gbc.readMem(0xa017), 0xce);
        // CB CE 0231
        gbc.setState(0x6e8d, 0x1b1e, 0xdd40, 0xf476, 0x4a3f, 0x20e1, 0x1, 0x0);
        gbc.writeMem(0x20e1, { 0xba });
        gbc.writeMem(0x6e8d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x1b1e);
        EXPECT(gbc.pc(), 0x6e8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0232
        gbc.setState(0x7e28, 0xcb16, 0x5460, 0x99c8, 0x6ca7, 0xa126, 0x1, 0x1);
        gbc.writeMem(0x7e28, { 0xcb, 0xce });
        gbc.writeMem(0xa126, { 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xcb16);
        EXPECT(gbc.pc(), 0x7e2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa126), 0x72);
        // CB CE 0234
        gbc.setState(0xaf54, 0xbffb, 0xa7c0, 0x7c9, 0x18af, 0xc964, 0x0, 0x0);
        gbc.writeMem(0xaf54, { 0xcb, 0xce });
        gbc.writeMem(0xc964, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xbffb);
        EXPECT(gbc.pc(), 0xaf56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf54), 0xcb);
        EXPECT(gbc.readMem(0xaf55), 0xce);
        EXPECT(gbc.readMem(0xc964), 0x17);
        // CB CE 0236
        gbc.setState(0xab4, 0x9af0, 0x8d20, 0x5a5f, 0x7f5e, 0xd6e0, 0x1, 0x1);
        gbc.writeMem(0xab4, { 0xcb, 0xce });
        gbc.writeMem(0xd6e0, { 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9af0);
        EXPECT(gbc.pc(), 0xab6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6e0), 0x62);
        // CB CE 0237
        gbc.setState(0xe893, 0x6e68, 0x3e60, 0x3e52, 0x48ae, 0xd8a8, 0x1, 0x1);
        gbc.writeMem(0xd8a8, { 0xa3 });
        gbc.writeMem(0xe893, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x6e68);
        EXPECT(gbc.pc(), 0xe895);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8a8), 0xa3);
        EXPECT(gbc.readMem(0xe893), 0xcb);
        EXPECT(gbc.readMem(0xe894), 0xce);
        // CB CE 023A
        gbc.setState(0x1876, 0xddf1, 0x9aa0, 0xfaeb, 0x3265, 0xfae3, 0x0, 0x1);
        gbc.writeMem(0x1876, { 0xcb, 0xce });
        gbc.writeMem(0xfae3, { 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xddf1);
        EXPECT(gbc.pc(), 0x1878);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfae3), 0x3f);
        // CB CE 023C
        gbc.setState(0x9a61, 0x2f95, 0x2fa0, 0x53b3, 0xe8ff, 0x2776, 0x0, 0x1);
        gbc.writeMem(0x2776, { 0x67 });
        gbc.writeMem(0x9a61, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x2f95);
        EXPECT(gbc.pc(), 0x9a63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a61), 0xcb);
        EXPECT(gbc.readMem(0x9a62), 0xce);
        // CB CE 023D
        gbc.setState(0x2441, 0x92f6, 0x1a10, 0xf90e, 0x7b78, 0x1e9, 0x0, 0x1);
        gbc.writeMem(0x1e9, { 0xdf });
        gbc.writeMem(0x2441, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x92f6);
        EXPECT(gbc.pc(), 0x2443);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 023F
        gbc.setState(0xea81, 0x51f2, 0x9360, 0xc850, 0x1cef, 0xa85b, 0x1, 0x0);
        gbc.writeMem(0xa85b, { 0x45 });
        gbc.writeMem(0xea81, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x51f2);
        EXPECT(gbc.pc(), 0xea83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa85b), 0x47);
        EXPECT(gbc.readMem(0xea81), 0xcb);
        EXPECT(gbc.readMem(0xea82), 0xce);
        // CB CE 0240
        gbc.setState(0x7b9, 0x9588, 0xc8e0, 0x14f8, 0x96ea, 0xbff6, 0x0, 0x1);
        gbc.writeMem(0x7b9, { 0xcb, 0xce });
        gbc.writeMem(0xbff6, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9588);
        EXPECT(gbc.pc(), 0x7bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff6), 0x62);
        // CB CE 0241
        gbc.setState(0x7cdd, 0x8016, 0x5770, 0x565a, 0x6573, 0xb1ba, 0x0, 0x1);
        gbc.writeMem(0x7cdd, { 0xcb, 0xce });
        gbc.writeMem(0xb1ba, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x8016);
        EXPECT(gbc.pc(), 0x7cdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1ba), 0xaf);
        // CB CE 0243
        gbc.setState(0x5fd4, 0x4350, 0x5d00, 0x9c8f, 0xf7ae, 0xec29, 0x0, 0x0);
        gbc.writeMem(0x5fd4, { 0xcb, 0xce });
        gbc.writeMem(0xec29, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4350);
        EXPECT(gbc.pc(), 0x5fd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec29), 0x66);
        // CB CE 0245
        gbc.setState(0x9110, 0xeb9, 0xb470, 0xcc41, 0xf00a, 0xf477, 0x0, 0x1);
        gbc.writeMem(0x9110, { 0xcb, 0xce });
        gbc.writeMem(0xf477, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xeb9);
        EXPECT(gbc.pc(), 0x9112);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9110), 0xcb);
        EXPECT(gbc.readMem(0x9111), 0xce);
        EXPECT(gbc.readMem(0xf477), 0x9e);
        // CB CE 0246
        gbc.setState(0x71ec, 0x8485, 0x1e0, 0xc97d, 0x62c, 0xb395, 0x0, 0x1);
        gbc.writeMem(0x71ec, { 0xcb, 0xce });
        gbc.writeMem(0xb395, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x8485);
        EXPECT(gbc.pc(), 0x71ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb395), 0x7f);
        // CB CE 0247
        gbc.setState(0xccd1, 0xd506, 0x5180, 0x5b00, 0x5fa3, 0xb9b7, 0x1, 0x1);
        gbc.writeMem(0xb9b7, { 0xa1 });
        gbc.writeMem(0xccd1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xd506);
        EXPECT(gbc.pc(), 0xccd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9b7), 0xa3);
        EXPECT(gbc.readMem(0xccd1), 0xcb);
        EXPECT(gbc.readMem(0xccd2), 0xce);
        // CB CE 0248
        gbc.setState(0x1858, 0x36b4, 0xdbe0, 0xe0e1, 0xcf4a, 0x606c, 0x0, 0x0);
        gbc.writeMem(0x1858, { 0xcb, 0xce });
        gbc.writeMem(0x606c, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x36b4);
        EXPECT(gbc.pc(), 0x185a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0249
        gbc.setState(0x1894, 0xbb29, 0xef40, 0xe500, 0x184b, 0x8405, 0x0, 0x0);
        gbc.writeMem(0x1894, { 0xcb, 0xce });
        gbc.writeMem(0x8405, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xbb29);
        EXPECT(gbc.pc(), 0x1896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8405), 0x8a);
        // CB CE 024A
        gbc.setState(0x7c8e, 0xacbe, 0x3f80, 0xd5a7, 0xc276, 0x9363, 0x0, 0x1);
        gbc.writeMem(0x7c8e, { 0xcb, 0xce });
        gbc.writeMem(0x9363, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xacbe);
        EXPECT(gbc.pc(), 0x7c90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9363), 0xab);
        // CB CE 024D
        gbc.setState(0x1cf2, 0xd288, 0x9b00, 0xeeb1, 0x8145, 0xa9e0, 0x0, 0x0);
        gbc.writeMem(0x1cf2, { 0xcb, 0xce });
        gbc.writeMem(0xa9e0, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xd288);
        EXPECT(gbc.pc(), 0x1cf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9e0), 0xab);
        // CB CE 024E
        gbc.setState(0x7068, 0x518f, 0xb30, 0x7720, 0x2d22, 0x9342, 0x1, 0x1);
        gbc.writeMem(0x7068, { 0xcb, 0xce });
        gbc.writeMem(0x9342, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x518f);
        EXPECT(gbc.pc(), 0x706a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9342), 0xaf);
        // CB CE 0250
        gbc.setState(0x8ffe, 0xbf4f, 0xb530, 0x7082, 0x5adc, 0xe966, 0x1, 0x1);
        gbc.writeMem(0x8ffe, { 0xcb, 0xce });
        gbc.writeMem(0xe966, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xbf4f);
        EXPECT(gbc.pc(), 0x9000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ffe), 0xcb);
        EXPECT(gbc.readMem(0x8fff), 0xce);
        EXPECT(gbc.readMem(0xe966), 0xeb);
        // CB CE 0251
        gbc.setState(0x675d, 0x384c, 0x1e40, 0xe60c, 0x3234, 0x968e, 0x0, 0x0);
        gbc.writeMem(0x675d, { 0xcb, 0xce });
        gbc.writeMem(0x968e, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x384c);
        EXPECT(gbc.pc(), 0x675f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x968e), 0x62);
        // CB CE 0252
        gbc.setState(0x5759, 0xebd7, 0x1ef0, 0x721d, 0xccf7, 0x3cc6, 0x0, 0x0);
        gbc.writeMem(0x3cc6, { 0x67 });
        gbc.writeMem(0x5759, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xebd7);
        EXPECT(gbc.pc(), 0x575b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0255
        gbc.setState(0x7071, 0xb3a2, 0x56e0, 0x683c, 0x8449, 0xb558, 0x0, 0x1);
        gbc.writeMem(0x7071, { 0xcb, 0xce });
        gbc.writeMem(0xb558, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb3a2);
        EXPECT(gbc.pc(), 0x7073);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb558), 0xde);
        // CB CE 0256
        gbc.setState(0x4ae, 0xf2fa, 0x35d0, 0xbb72, 0x2a1c, 0xfaf8, 0x1, 0x0);
        gbc.writeMem(0x4ae, { 0xcb, 0xce });
        gbc.writeMem(0xfaf8, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf2fa);
        EXPECT(gbc.pc(), 0x4b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfaf8), 0x37);
        // CB CE 0258
        gbc.setState(0xd0b1, 0x2bed, 0x2410, 0xcadc, 0x5078, 0xf1d8, 0x0, 0x1);
        gbc.writeMem(0xd0b1, { 0xcb, 0xce });
        gbc.writeMem(0xf1d8, { 0xa5 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x2bed);
        EXPECT(gbc.pc(), 0xd0b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0b1), 0xcb);
        EXPECT(gbc.readMem(0xd0b2), 0xce);
        EXPECT(gbc.readMem(0xf1d8), 0xa7);
        // CB CE 025A
        gbc.setState(0x5f80, 0xa754, 0x4620, 0x484e, 0xc8e1, 0xe406, 0x0, 0x1);
        gbc.writeMem(0x5f80, { 0xcb, 0xce });
        gbc.writeMem(0xe406, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xa754);
        EXPECT(gbc.pc(), 0x5f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe406), 0xfa);
        // CB CE 025D
        gbc.setState(0xf6d, 0xf969, 0x5e50, 0x895, 0xa41d, 0x9002, 0x0, 0x0);
        gbc.writeMem(0xf6d, { 0xcb, 0xce });
        gbc.writeMem(0x9002, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xf969);
        EXPECT(gbc.pc(), 0xf6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9002), 0xd2);
        // CB CE 025F
        gbc.setState(0x2735, 0x40b5, 0x6d70, 0x3903, 0xe685, 0x9b7f, 0x1, 0x0);
        gbc.writeMem(0x2735, { 0xcb, 0xce });
        gbc.writeMem(0x9b7f, { 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x40b5);
        EXPECT(gbc.pc(), 0x2737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b7f), 0xee);
        // CB CE 0261
        gbc.setState(0xb51e, 0xab82, 0x4cf0, 0xca51, 0xdfd1, 0xdc45, 0x1, 0x0);
        gbc.writeMem(0xb51e, { 0xcb, 0xce });
        gbc.writeMem(0xdc45, { 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xab82);
        EXPECT(gbc.pc(), 0xb520);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb51e), 0xcb);
        EXPECT(gbc.readMem(0xb51f), 0xce);
        EXPECT(gbc.readMem(0xdc45), 0x37);
        // CB CE 0262
        gbc.setState(0x8e49, 0x9911, 0x1760, 0x178d, 0xa4a2, 0x1c85, 0x1, 0x1);
        gbc.writeMem(0x1c85, { 0xcb });
        gbc.writeMem(0x8e49, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x9911);
        EXPECT(gbc.pc(), 0x8e4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e49), 0xcb);
        EXPECT(gbc.readMem(0x8e4a), 0xce);
        // CB CE 0264
        gbc.setState(0xcfe6, 0xf673, 0x64d0, 0x2da8, 0xdf23, 0xd304, 0x0, 0x1);
        gbc.writeMem(0xcfe6, { 0xcb, 0xce });
        gbc.writeMem(0xd304, { 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf673);
        EXPECT(gbc.pc(), 0xcfe8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfe6), 0xcb);
        EXPECT(gbc.readMem(0xcfe7), 0xce);
        EXPECT(gbc.readMem(0xd304), 0x97);
        // CB CE 0265
        gbc.setState(0x13a5, 0x8416, 0x7b20, 0xa3bc, 0x32b1, 0x910f, 0x0, 0x0);
        gbc.writeMem(0x13a5, { 0xcb, 0xce });
        gbc.writeMem(0x910f, { 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8416);
        EXPECT(gbc.pc(), 0x13a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x910f), 0x9b);
        // CB CE 0266
        gbc.setState(0xc526, 0x50f3, 0x1970, 0x486, 0xfa94, 0xb957, 0x1, 0x0);
        gbc.writeMem(0xb957, { 0x96 });
        gbc.writeMem(0xc526, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x50f3);
        EXPECT(gbc.pc(), 0xc528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb957), 0x96);
        EXPECT(gbc.readMem(0xc526), 0xcb);
        EXPECT(gbc.readMem(0xc527), 0xce);
        // CB CE 0267
        gbc.setState(0x1cd0, 0xeca4, 0xedf0, 0xa4c7, 0x9cbf, 0xe0a8, 0x1, 0x1);
        gbc.writeMem(0x1cd0, { 0xcb, 0xce });
        gbc.writeMem(0xe0a8, { 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xeca4);
        EXPECT(gbc.pc(), 0x1cd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0a8), 0xeb);
        // CB CE 0268
        gbc.setState(0x9948, 0x8e71, 0x1c80, 0x4ed9, 0xfdac, 0x9251, 0x0, 0x0);
        gbc.writeMem(0x9251, { 0x3f });
        gbc.writeMem(0x9948, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8e71);
        EXPECT(gbc.pc(), 0x994a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9251), 0x3f);
        EXPECT(gbc.readMem(0x9948), 0xcb);
        EXPECT(gbc.readMem(0x9949), 0xce);
        // CB CE 0269
        gbc.setState(0x69a1, 0x80dc, 0xd0d0, 0x9a53, 0xb5f2, 0xb71f, 0x1, 0x0);
        gbc.writeMem(0x69a1, { 0xcb, 0xce });
        gbc.writeMem(0xb71f, { 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x80dc);
        EXPECT(gbc.pc(), 0x69a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb71f), 0xaf);
        // CB CE 026A
        gbc.setState(0x1f87, 0x1744, 0xaff0, 0x8182, 0x7faf, 0x74db, 0x0, 0x1);
        gbc.writeMem(0x1f87, { 0xcb, 0xce });
        gbc.writeMem(0x74db, { 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1744);
        EXPECT(gbc.pc(), 0x1f89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 026B
        gbc.setState(0x5c70, 0x1cf, 0xce10, 0x8154, 0x9ad7, 0x843f, 0x0, 0x1);
        gbc.writeMem(0x5c70, { 0xcb, 0xce });
        gbc.writeMem(0x843f, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x1cf);
        EXPECT(gbc.pc(), 0x5c72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x843f), 0x53);
        // CB CE 026D
        gbc.setState(0x9260, 0x394, 0xdae0, 0x8308, 0x1fbf, 0x3be8, 0x1, 0x1);
        gbc.writeMem(0x3be8, { 0x2b });
        gbc.writeMem(0x9260, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x394);
        EXPECT(gbc.pc(), 0x9262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9260), 0xcb);
        EXPECT(gbc.readMem(0x9261), 0xce);
        // CB CE 026F
        gbc.setState(0x4041, 0xdc4c, 0x62d0, 0xadd8, 0x2d94, 0x98a4, 0x1, 0x0);
        gbc.writeMem(0x4041, { 0xcb, 0xce });
        gbc.writeMem(0x98a4, { 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xdc4c);
        EXPECT(gbc.pc(), 0x4043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98a4), 0x5b);
        // CB CE 0270
        gbc.setState(0x6ab5, 0xbc0d, 0x80d0, 0x3c4b, 0x3950, 0x551d, 0x0, 0x1);
        gbc.writeMem(0x551d, { 0xbf });
        gbc.writeMem(0x6ab5, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xbc0d);
        EXPECT(gbc.pc(), 0x6ab7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0271
        gbc.setState(0xe446, 0xe3f5, 0xd570, 0xf14b, 0x1d22, 0xf570, 0x0, 0x1);
        gbc.writeMem(0xe446, { 0xcb, 0xce });
        gbc.writeMem(0xf570, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe3f5);
        EXPECT(gbc.pc(), 0xe448);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe446), 0xcb);
        EXPECT(gbc.readMem(0xe447), 0xce);
        EXPECT(gbc.readMem(0xf570), 0xde);
        // CB CE 0272
        gbc.setState(0x32e0, 0x1f93, 0x57f0, 0x94f0, 0x6710, 0x84f4, 0x1, 0x1);
        gbc.writeMem(0x32e0, { 0xcb, 0xce });
        gbc.writeMem(0x84f4, { 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1f93);
        EXPECT(gbc.pc(), 0x32e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84f4), 0x1f);
        // CB CE 0273
        gbc.setState(0xd532, 0xfab1, 0x1570, 0x47a5, 0x33d0, 0xfd81, 0x1, 0x1);
        gbc.writeMem(0xd532, { 0xcb, 0xce });
        gbc.writeMem(0xfd81, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xfab1);
        EXPECT(gbc.pc(), 0xd534);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd532), 0xcb);
        EXPECT(gbc.readMem(0xd533), 0xce);
        EXPECT(gbc.readMem(0xfd81), 0xdf);
        // CB CE 0274
        gbc.setState(0x88d3, 0x9b5d, 0xab80, 0x9d32, 0x5a07, 0x9c84, 0x0, 0x0);
        gbc.writeMem(0x88d3, { 0xcb, 0xce });
        gbc.writeMem(0x9c84, { 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x9b5d);
        EXPECT(gbc.pc(), 0x88d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88d3), 0xcb);
        EXPECT(gbc.readMem(0x88d4), 0xce);
        EXPECT(gbc.readMem(0x9c84), 0x16);
        // CB CE 0278
        gbc.setState(0x88, 0xb5e0, 0x5e70, 0xc7e, 0x3c5d, 0x199f, 0x0, 0x1);
        gbc.writeMem(0x88, { 0xcb, 0xce });
        gbc.writeMem(0x199f, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb5e0);
        EXPECT(gbc.pc(), 0x8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0279
        gbc.setState(0x24a, 0xce16, 0xa9c0, 0xff36, 0x226, 0xfc8c, 0x1, 0x0);
        gbc.writeMem(0x24a, { 0xcb, 0xce });
        gbc.writeMem(0xfc8c, { 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xce16);
        EXPECT(gbc.pc(), 0x24c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc8c), 0xb6);
        // CB CE 027A
        gbc.setState(0xb11, 0xc8d8, 0x3820, 0x25d2, 0x4246, 0xb24b, 0x0, 0x1);
        gbc.writeMem(0xb11, { 0xcb, 0xce });
        gbc.writeMem(0xb24b, { 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc8d8);
        EXPECT(gbc.pc(), 0xb13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb24b), 0x96);
        // CB CE 027C
        gbc.setState(0x9bf0, 0x5159, 0x57b0, 0x438f, 0x9cca, 0x9707, 0x0, 0x1);
        gbc.writeMem(0x9707, { 0xe7 });
        gbc.writeMem(0x9bf0, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x5159);
        EXPECT(gbc.pc(), 0x9bf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9707), 0xe7);
        EXPECT(gbc.readMem(0x9bf0), 0xcb);
        EXPECT(gbc.readMem(0x9bf1), 0xce);
        // CB CE 027E
        gbc.setState(0x9c39, 0x624b, 0x4110, 0xe393, 0x275a, 0xa5d8, 0x0, 0x1);
        gbc.writeMem(0x9c39, { 0xcb, 0xce });
        gbc.writeMem(0xa5d8, { 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x624b);
        EXPECT(gbc.pc(), 0x9c3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c39), 0xcb);
        EXPECT(gbc.readMem(0x9c3a), 0xce);
        EXPECT(gbc.readMem(0xa5d8), 0x57);
        // CB CE 027F
        gbc.setState(0xe890, 0x117a, 0x60f0, 0x842a, 0x3bb2, 0xc45e, 0x0, 0x0);
        gbc.writeMem(0xc45e, { 0xb2 });
        gbc.writeMem(0xe890, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x117a);
        EXPECT(gbc.pc(), 0xe892);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc45e), 0xb2);
        EXPECT(gbc.readMem(0xe890), 0xcb);
        EXPECT(gbc.readMem(0xe891), 0xce);
        // CB CE 0281
        gbc.setState(0xa188, 0xfb2f, 0xeb40, 0xb1d4, 0x69c4, 0xe607, 0x0, 0x1);
        gbc.writeMem(0xa188, { 0xcb, 0xce });
        gbc.writeMem(0xe607, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xfb2f);
        EXPECT(gbc.pc(), 0xa18a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa188), 0xcb);
        EXPECT(gbc.readMem(0xa189), 0xce);
        EXPECT(gbc.readMem(0xe607), 0xfb);
        // CB CE 0282
        gbc.setState(0xd85d, 0x4edf, 0x7950, 0xf94b, 0x7f92, 0x283, 0x0, 0x0);
        gbc.writeMem(0x283, { 0x4a });
        gbc.writeMem(0xd85d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x4edf);
        EXPECT(gbc.pc(), 0xd85f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd85d), 0xcb);
        EXPECT(gbc.readMem(0xd85e), 0xce);
        // CB CE 0284
        gbc.setState(0xb6a5, 0x6de4, 0x2510, 0x652a, 0x2f7b, 0xc95, 0x1, 0x1);
        gbc.writeMem(0xc95, { 0x3b });
        gbc.writeMem(0xb6a5, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6de4);
        EXPECT(gbc.pc(), 0xb6a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a5), 0xcb);
        EXPECT(gbc.readMem(0xb6a6), 0xce);
        // CB CE 0285
        gbc.setState(0x5e7d, 0x9f58, 0xaf0, 0x38a4, 0xf776, 0x32fb, 0x0, 0x1);
        gbc.writeMem(0x32fb, { 0x77 });
        gbc.writeMem(0x5e7d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9f58);
        EXPECT(gbc.pc(), 0x5e7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0286
        gbc.setState(0x4a44, 0xb4ea, 0x6e30, 0x5124, 0xd1b2, 0xf33f, 0x0, 0x1);
        gbc.writeMem(0x4a44, { 0xcb, 0xce });
        gbc.writeMem(0xf33f, { 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xb4ea);
        EXPECT(gbc.pc(), 0x4a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf33f), 0x22);
        // CB CE 0287
        gbc.setState(0x831c, 0x92e3, 0xe910, 0x23d7, 0xa597, 0xe155, 0x0, 0x1);
        gbc.writeMem(0x831c, { 0xcb, 0xce });
        gbc.writeMem(0xe155, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x92e3);
        EXPECT(gbc.pc(), 0x831e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x831c), 0xcb);
        EXPECT(gbc.readMem(0x831d), 0xce);
        EXPECT(gbc.readMem(0xe155), 0xe2);
        // CB CE 0289
        gbc.setState(0x4c00, 0xd644, 0x4e00, 0x44bd, 0x2965, 0xcc17, 0x0, 0x0);
        gbc.writeMem(0x4c00, { 0xcb, 0xce });
        gbc.writeMem(0xcc17, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xd644);
        EXPECT(gbc.pc(), 0x4c02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc17), 0x4f);
        // CB CE 028A
        gbc.setState(0x754b, 0x9337, 0x86a0, 0x562b, 0x7252, 0xf848, 0x1, 0x1);
        gbc.writeMem(0x754b, { 0xcb, 0xce });
        gbc.writeMem(0xf848, { 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x9337);
        EXPECT(gbc.pc(), 0x754d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf848), 0x42);
        // CB CE 028B
        gbc.setState(0xc205, 0xc3bc, 0xe720, 0x9534, 0xfe23, 0xe4fa, 0x0, 0x1);
        gbc.writeMem(0xc205, { 0xcb, 0xce });
        gbc.writeMem(0xe4fa, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xc3bc);
        EXPECT(gbc.pc(), 0xc207);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc205), 0xcb);
        EXPECT(gbc.readMem(0xc206), 0xce);
        EXPECT(gbc.readMem(0xe4fa), 0xde);
        // CB CE 028C
        gbc.setState(0x59fd, 0x1c0d, 0x56b0, 0xf90, 0xef59, 0xffd5, 0x0, 0x0);
        gbc.writeMem(0x59fd, { 0xcb, 0xce });
        gbc.writeMem(0xffd5, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x1c0d);
        EXPECT(gbc.pc(), 0x59ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffd5), 0xe);
        // CB CE 028D
        gbc.setState(0x3dc8, 0x14f6, 0x5fe0, 0x89fa, 0x4dbb, 0x5fb3, 0x0, 0x1);
        gbc.writeMem(0x3dc8, { 0xcb, 0xce });
        gbc.writeMem(0x5fb3, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x14f6);
        EXPECT(gbc.pc(), 0x3dca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 028E
        gbc.setState(0x3529, 0xee5f, 0x6450, 0xf38d, 0x3e3a, 0xc22d, 0x1, 0x1);
        gbc.writeMem(0x3529, { 0xcb, 0xce });
        gbc.writeMem(0xc22d, { 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xee5f);
        EXPECT(gbc.pc(), 0x352b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc22d), 0xd6);
        // CB CE 028F
        gbc.setState(0xab63, 0x6f1e, 0xfab0, 0x4477, 0x5952, 0x84c3, 0x0, 0x0);
        gbc.writeMem(0x84c3, { 0xc7 });
        gbc.writeMem(0xab63, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6f1e);
        EXPECT(gbc.pc(), 0xab65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84c3), 0xc7);
        EXPECT(gbc.readMem(0xab63), 0xcb);
        EXPECT(gbc.readMem(0xab64), 0xce);
        // CB CE 0291
        gbc.setState(0xc570, 0xa9f1, 0xc260, 0x5f52, 0xd97a, 0xa68d, 0x0, 0x1);
        gbc.writeMem(0xa68d, { 0x41 });
        gbc.writeMem(0xc570, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa9f1);
        EXPECT(gbc.pc(), 0xc572);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa68d), 0x43);
        EXPECT(gbc.readMem(0xc570), 0xcb);
        EXPECT(gbc.readMem(0xc571), 0xce);
        // CB CE 0293
        gbc.setState(0xe210, 0x1ac, 0xae00, 0x123e, 0x2f88, 0x9ad7, 0x1, 0x0);
        gbc.writeMem(0x9ad7, { 0x13 });
        gbc.writeMem(0xe210, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1ac);
        EXPECT(gbc.pc(), 0xe212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ad7), 0x13);
        EXPECT(gbc.readMem(0xe210), 0xcb);
        EXPECT(gbc.readMem(0xe211), 0xce);
        // CB CE 0295
        gbc.setState(0x93b0, 0xd364, 0x5480, 0x5af7, 0xf032, 0x685c, 0x0, 0x1);
        gbc.writeMem(0x685c, { 0x3a });
        gbc.writeMem(0x93b0, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd364);
        EXPECT(gbc.pc(), 0x93b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b0), 0xcb);
        EXPECT(gbc.readMem(0x93b1), 0xce);
        // CB CE 0296
        gbc.setState(0x5b3, 0xeb90, 0x9640, 0xf6b0, 0xf8bf, 0x22b4, 0x0, 0x0);
        gbc.writeMem(0x5b3, { 0xcb, 0xce });
        gbc.writeMem(0x22b4, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xeb90);
        EXPECT(gbc.pc(), 0x5b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0299
        gbc.setState(0x8221, 0x3ecf, 0xda60, 0xa028, 0x33b1, 0xb17b, 0x1, 0x0);
        gbc.writeMem(0x8221, { 0xcb, 0xce });
        gbc.writeMem(0xb17b, { 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x3ecf);
        EXPECT(gbc.pc(), 0x8223);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8221), 0xcb);
        EXPECT(gbc.readMem(0x8222), 0xce);
        EXPECT(gbc.readMem(0xb17b), 0xd7);
        // CB CE 029A
        gbc.setState(0x2d23, 0xa783, 0xaed0, 0x870d, 0xc5f8, 0x1379, 0x0, 0x0);
        gbc.writeMem(0x1379, { 0x27 });
        gbc.writeMem(0x2d23, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa783);
        EXPECT(gbc.pc(), 0x2d25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 029C
        gbc.setState(0x344a, 0xa669, 0x92c0, 0xc2a9, 0xc61, 0x8ab6, 0x1, 0x1);
        gbc.writeMem(0x344a, { 0xcb, 0xce });
        gbc.writeMem(0x8ab6, { 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa669);
        EXPECT(gbc.pc(), 0x344c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ab6), 0xca);
        // CB CE 029D
        gbc.setState(0x9b9a, 0x473c, 0x1130, 0xf277, 0xf7f6, 0x9325, 0x0, 0x0);
        gbc.writeMem(0x9325, { 0x6c });
        gbc.writeMem(0x9b9a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x473c);
        EXPECT(gbc.pc(), 0x9b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9325), 0x6e);
        EXPECT(gbc.readMem(0x9b9a), 0xcb);
        EXPECT(gbc.readMem(0x9b9b), 0xce);
        // CB CE 029E
        gbc.setState(0x2239, 0xf328, 0xda60, 0x299c, 0xd264, 0x9d2a, 0x0, 0x0);
        gbc.writeMem(0x2239, { 0xcb, 0xce });
        gbc.writeMem(0x9d2a, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xf328);
        EXPECT(gbc.pc(), 0x223b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d2a), 0x9f);
        // CB CE 029F
        gbc.setState(0x3ba9, 0x3c43, 0x53e0, 0xa735, 0x9102, 0xfe36, 0x1, 0x0);
        gbc.writeMem(0x3ba9, { 0xcb, 0xce });
        gbc.writeMem(0xfe36, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x3c43);
        EXPECT(gbc.pc(), 0x3bab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe36), 0xa6);
        // CB CE 02A2
        gbc.setState(0x69d2, 0x6112, 0x1030, 0x7792, 0x2209, 0x9992, 0x0, 0x1);
        gbc.writeMem(0x69d2, { 0xcb, 0xce });
        gbc.writeMem(0x9992, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6112);
        EXPECT(gbc.pc(), 0x69d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9992), 0xc6);
        // CB CE 02A3
        gbc.setState(0x2769, 0xcd31, 0x8880, 0x13f8, 0x68ea, 0xcc4b, 0x0, 0x0);
        gbc.writeMem(0x2769, { 0xcb, 0xce });
        gbc.writeMem(0xcc4b, { 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xcd31);
        EXPECT(gbc.pc(), 0x276b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc4b), 0x1b);
        // CB CE 02A4
        gbc.setState(0xd309, 0x1827, 0xea30, 0x8844, 0xa38, 0x6702, 0x0, 0x0);
        gbc.writeMem(0x6702, { 0x57 });
        gbc.writeMem(0xd309, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1827);
        EXPECT(gbc.pc(), 0xd30b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd309), 0xcb);
        EXPECT(gbc.readMem(0xd30a), 0xce);
        // CB CE 02A5
        gbc.setState(0x507c, 0xb0f7, 0xb0b0, 0xc23d, 0xa996, 0x61bc, 0x0, 0x1);
        gbc.writeMem(0x507c, { 0xcb, 0xce });
        gbc.writeMem(0x61bc, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb0f7);
        EXPECT(gbc.pc(), 0x507e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 02A6
        gbc.setState(0x7fdf, 0xa8c7, 0x45f0, 0x9e16, 0x5a86, 0xe489, 0x1, 0x1);
        gbc.writeMem(0x7fdf, { 0xcb, 0xce });
        gbc.writeMem(0xe489, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa8c7);
        EXPECT(gbc.pc(), 0x7fe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe489), 0x92);
        // CB CE 02A8
        gbc.setState(0x697, 0x8ce2, 0xb430, 0x2e67, 0x5637, 0x498, 0x1, 0x0);
        gbc.writeMem(0x498, { 0x6b });
        gbc.writeMem(0x697, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8ce2);
        EXPECT(gbc.pc(), 0x699);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 02AA
        gbc.setState(0x7449, 0xd482, 0x8110, 0xdd02, 0x206a, 0x85b, 0x1, 0x0);
        gbc.writeMem(0x85b, { 0xa6 });
        gbc.writeMem(0x7449, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd482);
        EXPECT(gbc.pc(), 0x744b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 02AB
        gbc.setState(0x39e9, 0xff95, 0xe740, 0x9ab0, 0xb4e, 0x7f2a, 0x1, 0x1);
        gbc.writeMem(0x39e9, { 0xcb, 0xce });
        gbc.writeMem(0x7f2a, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xff95);
        EXPECT(gbc.pc(), 0x39eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 02AC
        gbc.setState(0x9508, 0x9343, 0xa4b0, 0xc885, 0xd28f, 0xc90e, 0x0, 0x1);
        gbc.writeMem(0x9508, { 0xcb, 0xce });
        gbc.writeMem(0xc90e, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x9343);
        EXPECT(gbc.pc(), 0x950a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9508), 0xcb);
        EXPECT(gbc.readMem(0x9509), 0xce);
        EXPECT(gbc.readMem(0xc90e), 0x13);
        // CB CE 02AD
        gbc.setState(0xaedd, 0xba12, 0x6ee0, 0x1102, 0x1699, 0xd65c, 0x1, 0x1);
        gbc.writeMem(0xaedd, { 0xcb, 0xce });
        gbc.writeMem(0xd65c, { 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xba12);
        EXPECT(gbc.pc(), 0xaedf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaedd), 0xcb);
        EXPECT(gbc.readMem(0xaede), 0xce);
        EXPECT(gbc.readMem(0xd65c), 0xe6);
        // CB CE 02AE
        gbc.setState(0xfcc, 0x338a, 0xb730, 0x5dc, 0xeda2, 0xc97b, 0x0, 0x1);
        gbc.writeMem(0xfcc, { 0xcb, 0xce });
        gbc.writeMem(0xc97b, { 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x338a);
        EXPECT(gbc.pc(), 0xfce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc97b), 0x62);
        // CB CE 02B0
        gbc.setState(0xb104, 0x527c, 0x5bb0, 0x4f73, 0x7b31, 0xd96b, 0x1, 0x0);
        gbc.writeMem(0xb104, { 0xcb, 0xce });
        gbc.writeMem(0xd96b, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x527c);
        EXPECT(gbc.pc(), 0xb106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb104), 0xcb);
        EXPECT(gbc.readMem(0xb105), 0xce);
        EXPECT(gbc.readMem(0xd96b), 0x7);
        // CB CE 02B2
        gbc.setState(0x9312, 0xdbba, 0xfed0, 0x1527, 0xdeca, 0xff62, 0x1, 0x1);
        gbc.writeMem(0x9312, { 0xcb, 0xce });
        gbc.writeMem(0xff62, { 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xdbba);
        EXPECT(gbc.pc(), 0x9314);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9312), 0xcb);
        EXPECT(gbc.readMem(0x9313), 0xce);
        EXPECT(gbc.readMem(0xff62), 0x1a);
        // CB CE 02B3
        gbc.setState(0x7eb8, 0x4192, 0xe430, 0xb668, 0xc273, 0x65ca, 0x1, 0x0);
        gbc.writeMem(0x65ca, { 0x27 });
        gbc.writeMem(0x7eb8, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4192);
        EXPECT(gbc.pc(), 0x7eba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 02B4
        gbc.setState(0x5ce, 0xbc63, 0x7aa0, 0xe96e, 0x430f, 0x5796, 0x0, 0x0);
        gbc.writeMem(0x5ce, { 0xcb, 0xce });
        gbc.writeMem(0x5796, { 0xcf });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xbc63);
        EXPECT(gbc.pc(), 0x5d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 02B5
        gbc.setState(0x67fa, 0x1859, 0xcd70, 0x2d3c, 0xcc9a, 0x4402, 0x0, 0x0);
        gbc.writeMem(0x4402, { 0xd6 });
        gbc.writeMem(0x67fa, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x1859);
        EXPECT(gbc.pc(), 0x67fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 02B6
        gbc.setState(0x2b35, 0x6b37, 0x7f10, 0x35fd, 0xd8ce, 0x883c, 0x1, 0x0);
        gbc.writeMem(0x2b35, { 0xcb, 0xce });
        gbc.writeMem(0x883c, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6b37);
        EXPECT(gbc.pc(), 0x2b37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x883c), 0x96);
        // CB CE 02B8
        gbc.setState(0xdaa1, 0x66c1, 0x7ba0, 0xf163, 0xbab8, 0x1ad3, 0x1, 0x1);
        gbc.writeMem(0x1ad3, { 0xb6 });
        gbc.writeMem(0xdaa1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x66c1);
        EXPECT(gbc.pc(), 0xdaa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaa1), 0xcb);
        EXPECT(gbc.readMem(0xdaa2), 0xce);
        // CB CE 02B9
        gbc.setState(0x660e, 0xc95, 0xf070, 0x48e9, 0x6fa8, 0xb373, 0x0, 0x0);
        gbc.writeMem(0x660e, { 0xcb, 0xce });
        gbc.writeMem(0xb373, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xc95);
        EXPECT(gbc.pc(), 0x6610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb373), 0xf2);
        // CB CE 02BA
        gbc.setState(0xa381, 0xd510, 0xb470, 0x37e2, 0xbb9c, 0x7d43, 0x0, 0x1);
        gbc.writeMem(0x7d43, { 0xf3 });
        gbc.writeMem(0xa381, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd510);
        EXPECT(gbc.pc(), 0xa383);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa381), 0xcb);
        EXPECT(gbc.readMem(0xa382), 0xce);
        // CB CE 02BB
        gbc.setState(0x2846, 0x2998, 0x2430, 0xe0be, 0xd6f0, 0xe4e4, 0x0, 0x1);
        gbc.writeMem(0x2846, { 0xcb, 0xce });
        gbc.writeMem(0xe4e4, { 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2998);
        EXPECT(gbc.pc(), 0x2848);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4e4), 0xa);
        // CB CE 02BC
        gbc.setState(0x5143, 0x5d82, 0xa8a0, 0x123b, 0xafb4, 0x8034, 0x0, 0x1);
        gbc.writeMem(0x5143, { 0xcb, 0xce });
        gbc.writeMem(0x8034, { 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x5d82);
        EXPECT(gbc.pc(), 0x5145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8034), 0x46);
        // CB CE 02BD
        gbc.setState(0x8a6b, 0x7b81, 0xa6a0, 0x44c7, 0xa40c, 0x6415, 0x1, 0x1);
        gbc.writeMem(0x6415, { 0xcf });
        gbc.writeMem(0x8a6b, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7b81);
        EXPECT(gbc.pc(), 0x8a6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a6b), 0xcb);
        EXPECT(gbc.readMem(0x8a6c), 0xce);
        // CB CE 02BE
        gbc.setState(0x9ca3, 0x6ec4, 0x6650, 0x8499, 0x59b6, 0xca6c, 0x1, 0x1);
        gbc.writeMem(0x9ca3, { 0xcb, 0xce });
        gbc.writeMem(0xca6c, { 0x7d });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6ec4);
        EXPECT(gbc.pc(), 0x9ca5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca3), 0xcb);
        EXPECT(gbc.readMem(0x9ca4), 0xce);
        EXPECT(gbc.readMem(0xca6c), 0x7f);
        // CB CE 02BF
        gbc.setState(0xeed2, 0x9826, 0x8bf0, 0xb3d9, 0xf3aa, 0x1536, 0x1, 0x0);
        gbc.writeMem(0x1536, { 0x6a });
        gbc.writeMem(0xeed2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9826);
        EXPECT(gbc.pc(), 0xeed4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeed2), 0xcb);
        EXPECT(gbc.readMem(0xeed3), 0xce);
        // CB CE 02C1
        gbc.setState(0x15e7, 0xaac1, 0xb700, 0x388, 0x33b, 0x98b1, 0x1, 0x1);
        gbc.writeMem(0x15e7, { 0xcb, 0xce });
        gbc.writeMem(0x98b1, { 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xaac1);
        EXPECT(gbc.pc(), 0x15e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b1), 0x83);
        // CB CE 02C2
        gbc.setState(0xc05b, 0x5492, 0x3960, 0xe36a, 0xd5ab, 0xc119, 0x0, 0x0);
        gbc.writeMem(0xc05b, { 0xcb, 0xce });
        gbc.writeMem(0xc119, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5492);
        EXPECT(gbc.pc(), 0xc05d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc05b), 0xcb);
        EXPECT(gbc.readMem(0xc05c), 0xce);
        EXPECT(gbc.readMem(0xc119), 0xc3);
        // CB CE 02C3
        gbc.setState(0xadb9, 0x8224, 0xeef0, 0x8e78, 0xd28e, 0xde20, 0x0, 0x0);
        gbc.writeMem(0xadb9, { 0xcb, 0xce });
        gbc.writeMem(0xde20, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8224);
        EXPECT(gbc.pc(), 0xadbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadb9), 0xcb);
        EXPECT(gbc.readMem(0xadba), 0xce);
        EXPECT(gbc.readMem(0xde20), 0xa6);
        // CB CE 02C5
        gbc.setState(0x8b76, 0x21da, 0xb230, 0xb8e4, 0xdaf6, 0x4c18, 0x1, 0x0);
        gbc.writeMem(0x4c18, { 0xea });
        gbc.writeMem(0x8b76, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x21da);
        EXPECT(gbc.pc(), 0x8b78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b76), 0xcb);
        EXPECT(gbc.readMem(0x8b77), 0xce);
        // CB CE 02C6
        gbc.setState(0x22ff, 0x81a4, 0x3630, 0xaab, 0x1f19, 0x4f15, 0x1, 0x1);
        gbc.writeMem(0x22ff, { 0xcb, 0xce });
        gbc.writeMem(0x4f15, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x81a4);
        EXPECT(gbc.pc(), 0x2301);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 02C7
        gbc.setState(0x395d, 0x5f60, 0xe560, 0x3cee, 0xfdf8, 0xca2f, 0x1, 0x1);
        gbc.writeMem(0x395d, { 0xcb, 0xce });
        gbc.writeMem(0xca2f, { 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x5f60);
        EXPECT(gbc.pc(), 0x395f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca2f), 0x8a);
        // CB CE 02C8
        gbc.setState(0xd8d3, 0xbb7b, 0x5fa0, 0xce3f, 0xe245, 0xf659, 0x0, 0x1);
        gbc.writeMem(0xd8d3, { 0xcb, 0xce });
        gbc.writeMem(0xf659, { 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xbb7b);
        EXPECT(gbc.pc(), 0xd8d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8d3), 0xcb);
        EXPECT(gbc.readMem(0xd8d4), 0xce);
        EXPECT(gbc.readMem(0xf659), 0x5e);
        // CB CE 02C9
        gbc.setState(0xdb7b, 0x8b6b, 0xd410, 0x68ad, 0xe29f, 0xed9c, 0x1, 0x0);
        gbc.writeMem(0xdb7b, { 0xcb, 0xce });
        gbc.writeMem(0xed9c, { 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x8b6b);
        EXPECT(gbc.pc(), 0xdb7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb7b), 0xcb);
        EXPECT(gbc.readMem(0xdb7c), 0xce);
        EXPECT(gbc.readMem(0xed9c), 0xa2);
        // CB CE 02CA
        gbc.setState(0x49e1, 0x7e4b, 0x3540, 0xe715, 0x18ca, 0x7fd4, 0x1, 0x1);
        gbc.writeMem(0x49e1, { 0xcb, 0xce });
        gbc.writeMem(0x7fd4, { 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7e4b);
        EXPECT(gbc.pc(), 0x49e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 02CB
        gbc.setState(0x45f4, 0xfaa5, 0x24f0, 0x26ae, 0xd97c, 0xc455, 0x1, 0x1);
        gbc.writeMem(0x45f4, { 0xcb, 0xce });
        gbc.writeMem(0xc455, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfaa5);
        EXPECT(gbc.pc(), 0x45f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc455), 0x6a);
        // CB CE 02CE
        gbc.setState(0x379b, 0x1cbe, 0x3f90, 0x4763, 0x1679, 0xfd7f, 0x0, 0x1);
        gbc.writeMem(0x379b, { 0xcb, 0xce });
        gbc.writeMem(0xfd7f, { 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x1cbe);
        EXPECT(gbc.pc(), 0x379d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfd7f), 0x12);
        // CB CE 02CF
        gbc.setState(0x5c7a, 0x52ba, 0x6f50, 0x5913, 0xd4bc, 0xfee3, 0x0, 0x1);
        gbc.writeMem(0x5c7a, { 0xcb, 0xce });
        gbc.writeMem(0xfee3, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x52ba);
        EXPECT(gbc.pc(), 0x5c7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfee3), 0xe2);
        // CB CE 02D0
        gbc.setState(0x828a, 0xda91, 0x3640, 0x93c6, 0xe05b, 0xf9e2, 0x1, 0x1);
        gbc.writeMem(0x828a, { 0xcb, 0xce });
        gbc.writeMem(0xf9e2, { 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xda91);
        EXPECT(gbc.pc(), 0x828c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x828a), 0xcb);
        EXPECT(gbc.readMem(0x828b), 0xce);
        EXPECT(gbc.readMem(0xf9e2), 0xf2);
        // CB CE 02D1
        gbc.setState(0x6a6, 0x2109, 0x3430, 0x8d94, 0xc1b0, 0x8b7a, 0x1, 0x0);
        gbc.writeMem(0x6a6, { 0xcb, 0xce });
        gbc.writeMem(0x8b7a, { 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2109);
        EXPECT(gbc.pc(), 0x6a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b7a), 0x66);
        // CB CE 02D2
        gbc.setState(0xc4a8, 0xb9a2, 0x300, 0xaf6b, 0xf3d0, 0xe1de, 0x1, 0x0);
        gbc.writeMem(0xc4a8, { 0xcb, 0xce });
        gbc.writeMem(0xe1de, { 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb9a2);
        EXPECT(gbc.pc(), 0xc4aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a8), 0xcb);
        EXPECT(gbc.readMem(0xc4a9), 0xce);
        EXPECT(gbc.readMem(0xe1de), 0x46);
        // CB CE 02D4
        gbc.setState(0x8dbf, 0x1a57, 0x1a80, 0x6f95, 0x4b1e, 0x1e74, 0x1, 0x0);
        gbc.writeMem(0x1e74, { 0x8b });
        gbc.writeMem(0x8dbf, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x1a57);
        EXPECT(gbc.pc(), 0x8dc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8dbf), 0xcb);
        EXPECT(gbc.readMem(0x8dc0), 0xce);
        // CB CE 02D5
        gbc.setState(0xb7d2, 0x309f, 0xd500, 0x1a33, 0x4cc8, 0x8715, 0x0, 0x1);
        gbc.writeMem(0x8715, { 0x60 });
        gbc.writeMem(0xb7d2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x309f);
        EXPECT(gbc.pc(), 0xb7d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8715), 0x62);
        EXPECT(gbc.readMem(0xb7d2), 0xcb);
        EXPECT(gbc.readMem(0xb7d3), 0xce);
        // CB CE 02D7
        gbc.setState(0xc2ee, 0x3caa, 0xdc80, 0xad0e, 0xc64d, 0x99ba, 0x0, 0x0);
        gbc.writeMem(0x99ba, { 0xf0 });
        gbc.writeMem(0xc2ee, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x3caa);
        EXPECT(gbc.pc(), 0xc2f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99ba), 0xf2);
        EXPECT(gbc.readMem(0xc2ee), 0xcb);
        EXPECT(gbc.readMem(0xc2ef), 0xce);
        // CB CE 02D9
        gbc.setState(0x8fd2, 0x7696, 0x4640, 0xf4fa, 0x2f47, 0xaf45, 0x1, 0x1);
        gbc.writeMem(0x8fd2, { 0xcb, 0xce });
        gbc.writeMem(0xaf45, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x7696);
        EXPECT(gbc.pc(), 0x8fd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd2), 0xcb);
        EXPECT(gbc.readMem(0x8fd3), 0xce);
        EXPECT(gbc.readMem(0xaf45), 0xdf);
        // CB CE 02DA
        gbc.setState(0x6dbe, 0x2c28, 0x4770, 0xaf51, 0xebee, 0x9bbf, 0x1, 0x0);
        gbc.writeMem(0x6dbe, { 0xcb, 0xce });
        gbc.writeMem(0x9bbf, { 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2c28);
        EXPECT(gbc.pc(), 0x6dc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bbf), 0x36);
        // CB CE 02DB
        gbc.setState(0x5544, 0x78c9, 0xb510, 0x8a08, 0xe1a3, 0x519e, 0x1, 0x0);
        gbc.writeMem(0x519e, { 0x23 });
        gbc.writeMem(0x5544, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x78c9);
        EXPECT(gbc.pc(), 0x5546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 02DC
        gbc.setState(0xcbb2, 0x9bef, 0xdb50, 0x5b96, 0xc095, 0x2b30, 0x1, 0x0);
        gbc.writeMem(0x2b30, { 0x7b });
        gbc.writeMem(0xcbb2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x9bef);
        EXPECT(gbc.pc(), 0xcbb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb2), 0xcb);
        EXPECT(gbc.readMem(0xcbb3), 0xce);
        // CB CE 02DD
        gbc.setState(0xa644, 0x6883, 0xb270, 0x26da, 0xc4a7, 0xf29c, 0x0, 0x0);
        gbc.writeMem(0xa644, { 0xcb, 0xce });
        gbc.writeMem(0xf29c, { 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6883);
        EXPECT(gbc.pc(), 0xa646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa644), 0xcb);
        EXPECT(gbc.readMem(0xa645), 0xce);
        EXPECT(gbc.readMem(0xf29c), 0x7b);
        // CB CE 02DE
        gbc.setState(0x726, 0xaac5, 0xd5b0, 0x116d, 0x582b, 0xf4d2, 0x0, 0x0);
        gbc.writeMem(0x726, { 0xcb, 0xce });
        gbc.writeMem(0xf4d2, { 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xaac5);
        EXPECT(gbc.pc(), 0x728);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf4d2), 0xe7);
        // CB CE 02DF
        gbc.setState(0x22a5, 0xf3c4, 0x89f0, 0xc0b0, 0xc3d4, 0xe9da, 0x0, 0x0);
        gbc.writeMem(0x22a5, { 0xcb, 0xce });
        gbc.writeMem(0xe9da, { 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xf3c4);
        EXPECT(gbc.pc(), 0x22a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9da), 0xb7);
        // CB CE 02E0
        gbc.setState(0x14af, 0x8f11, 0xcd0, 0xede4, 0x63cc, 0xb59, 0x1, 0x0);
        gbc.writeMem(0xb59, { 0x3 });
        gbc.writeMem(0x14af, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x8f11);
        EXPECT(gbc.pc(), 0x14b1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 02E2
        gbc.setState(0xea21, 0x3f6a, 0x8640, 0x7933, 0x4350, 0xbcb7, 0x1, 0x1);
        gbc.writeMem(0xbcb7, { 0x6a });
        gbc.writeMem(0xea21, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3f6a);
        EXPECT(gbc.pc(), 0xea23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbcb7), 0x6a);
        EXPECT(gbc.readMem(0xea21), 0xcb);
        EXPECT(gbc.readMem(0xea22), 0xce);
        // CB CE 02E3
        gbc.setState(0x55d1, 0xb97b, 0x9a30, 0x1120, 0xab8e, 0x430b, 0x1, 0x1);
        gbc.writeMem(0x430b, { 0xa7 });
        gbc.writeMem(0x55d1, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xb97b);
        EXPECT(gbc.pc(), 0x55d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 02E4
        gbc.setState(0xc493, 0x930a, 0x8c90, 0xdb8e, 0xed93, 0x8729, 0x0, 0x0);
        gbc.writeMem(0x8729, { 0x45 });
        gbc.writeMem(0xc493, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x930a);
        EXPECT(gbc.pc(), 0xc495);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8729), 0x47);
        EXPECT(gbc.readMem(0xc493), 0xcb);
        EXPECT(gbc.readMem(0xc494), 0xce);
        // CB CE 02E5
        gbc.setState(0xd8ad, 0x65ff, 0x9700, 0x830c, 0x4570, 0xb5b3, 0x0, 0x0);
        gbc.writeMem(0xb5b3, { 0x3d });
        gbc.writeMem(0xd8ad, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x65ff);
        EXPECT(gbc.pc(), 0xd8af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5b3), 0x3f);
        EXPECT(gbc.readMem(0xd8ad), 0xcb);
        EXPECT(gbc.readMem(0xd8ae), 0xce);
        // CB CE 02E8
        gbc.setState(0xa202, 0xe354, 0xdcc0, 0xfc5d, 0x8a2b, 0xc821, 0x1, 0x1);
        gbc.writeMem(0xa202, { 0xcb, 0xce });
        gbc.writeMem(0xc821, { 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe354);
        EXPECT(gbc.pc(), 0xa204);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa202), 0xcb);
        EXPECT(gbc.readMem(0xa203), 0xce);
        EXPECT(gbc.readMem(0xc821), 0xf6);
        // CB CE 02E9
        gbc.setState(0x4cff, 0x5c93, 0x2910, 0x9a85, 0xb4ca, 0xe388, 0x1, 0x1);
        gbc.writeMem(0x4cff, { 0xcb, 0xce });
        gbc.writeMem(0xe388, { 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5c93);
        EXPECT(gbc.pc(), 0x4d01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe388), 0x4b);
        // CB CE 02EA
        gbc.setState(0xe8dd, 0x94b6, 0x4e00, 0x2b6b, 0x32e1, 0xd67d, 0x1, 0x1);
        gbc.writeMem(0xd67d, { 0x61 });
        gbc.writeMem(0xe8dd, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x94b6);
        EXPECT(gbc.pc(), 0xe8df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd67d), 0x63);
        EXPECT(gbc.readMem(0xe8dd), 0xcb);
        EXPECT(gbc.readMem(0xe8de), 0xce);
        // CB CE 02EB
        gbc.setState(0x1692, 0xd2a4, 0x1f40, 0x4b3c, 0x34cd, 0x9a5e, 0x0, 0x1);
        gbc.writeMem(0x1692, { 0xcb, 0xce });
        gbc.writeMem(0x9a5e, { 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd2a4);
        EXPECT(gbc.pc(), 0x1694);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a5e), 0x9f);
        // CB CE 02EE
        gbc.setState(0xc041, 0x3170, 0x6d20, 0x9ead, 0x23c4, 0x38cf, 0x1, 0x1);
        gbc.writeMem(0x38cf, { 0xe6 });
        gbc.writeMem(0xc041, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3170);
        EXPECT(gbc.pc(), 0xc043);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc041), 0xcb);
        EXPECT(gbc.readMem(0xc042), 0xce);
        // CB CE 02EF
        gbc.setState(0x7257, 0x5aae, 0x7230, 0x2b7f, 0x39b6, 0x8edc, 0x0, 0x1);
        gbc.writeMem(0x7257, { 0xcb, 0xce });
        gbc.writeMem(0x8edc, { 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5aae);
        EXPECT(gbc.pc(), 0x7259);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8edc), 0xd3);
        // CB CE 02F1
        gbc.setState(0xb899, 0xaced, 0x7390, 0x59d4, 0x8292, 0xa290, 0x0, 0x1);
        gbc.writeMem(0xa290, { 0xf6 });
        gbc.writeMem(0xb899, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xaced);
        EXPECT(gbc.pc(), 0xb89b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa290), 0xf6);
        EXPECT(gbc.readMem(0xb899), 0xcb);
        EXPECT(gbc.readMem(0xb89a), 0xce);
        // CB CE 02F2
        gbc.setState(0x1375, 0x534a, 0x78a0, 0xe094, 0x5293, 0xa5b2, 0x0, 0x0);
        gbc.writeMem(0x1375, { 0xcb, 0xce });
        gbc.writeMem(0xa5b2, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x534a);
        EXPECT(gbc.pc(), 0x1377);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5b2), 0xce);
        // CB CE 02F3
        gbc.setState(0x9a1e, 0x2fce, 0x3ce0, 0x2231, 0x8960, 0xd8a3, 0x0, 0x1);
        gbc.writeMem(0x9a1e, { 0xcb, 0xce });
        gbc.writeMem(0xd8a3, { 0xc7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x2fce);
        EXPECT(gbc.pc(), 0x9a20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1e), 0xcb);
        EXPECT(gbc.readMem(0x9a1f), 0xce);
        EXPECT(gbc.readMem(0xd8a3), 0xc7);
        // CB CE 02F6
        gbc.setState(0xaa7c, 0x2ae7, 0xd710, 0xb8d4, 0x226d, 0x8e85, 0x1, 0x0);
        gbc.writeMem(0x8e85, { 0x9 });
        gbc.writeMem(0xaa7c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x2ae7);
        EXPECT(gbc.pc(), 0xaa7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e85), 0xb);
        EXPECT(gbc.readMem(0xaa7c), 0xcb);
        EXPECT(gbc.readMem(0xaa7d), 0xce);
        // CB CE 02F8
        gbc.setState(0x8c63, 0x1604, 0x8a80, 0xb1b, 0xfe95, 0x67cf, 0x1, 0x0);
        gbc.writeMem(0x67cf, { 0x1e });
        gbc.writeMem(0x8c63, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x1604);
        EXPECT(gbc.pc(), 0x8c65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c63), 0xcb);
        EXPECT(gbc.readMem(0x8c64), 0xce);
        // CB CE 02F9
        gbc.setState(0x5cd7, 0x44ee, 0x6ca0, 0x567f, 0xd5dd, 0xd137, 0x1, 0x0);
        gbc.writeMem(0x5cd7, { 0xcb, 0xce });
        gbc.writeMem(0xd137, { 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x44ee);
        EXPECT(gbc.pc(), 0x5cd9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd137), 0xcb);
        // CB CE 02FB
        gbc.setState(0x40c3, 0xd7c8, 0xb0d0, 0x3591, 0x1cb4, 0xbcd0, 0x0, 0x0);
        gbc.writeMem(0x40c3, { 0xcb, 0xce });
        gbc.writeMem(0xbcd0, { 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd7c8);
        EXPECT(gbc.pc(), 0x40c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd0), 0x17);
        // CB CE 02FC
        gbc.setState(0xcbd, 0xc849, 0x820, 0x8acf, 0xb6d2, 0x9b81, 0x1, 0x1);
        gbc.writeMem(0xcbd, { 0xcb, 0xce });
        gbc.writeMem(0x9b81, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc849);
        EXPECT(gbc.pc(), 0xcbf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b81), 0x96);
        // CB CE 02FF
        gbc.setState(0xd7bf, 0xcf43, 0xcc10, 0x9d22, 0x6b45, 0xae82, 0x0, 0x1);
        gbc.writeMem(0xae82, { 0x35 });
        gbc.writeMem(0xd7bf, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xcf43);
        EXPECT(gbc.pc(), 0xd7c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae82), 0x37);
        EXPECT(gbc.readMem(0xd7bf), 0xcb);
        EXPECT(gbc.readMem(0xd7c0), 0xce);
        // CB CE 0300
        gbc.setState(0x4618, 0xe91f, 0xcd70, 0xc150, 0x27c6, 0x653b, 0x1, 0x1);
        gbc.writeMem(0x4618, { 0xcb, 0xce });
        gbc.writeMem(0x653b, { 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xe91f);
        EXPECT(gbc.pc(), 0x461a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0301
        gbc.setState(0xb394, 0x8b91, 0x1330, 0x90a7, 0xbe34, 0xfb5a, 0x1, 0x0);
        gbc.writeMem(0xb394, { 0xcb, 0xce });
        gbc.writeMem(0xfb5a, { 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8b91);
        EXPECT(gbc.pc(), 0xb396);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb394), 0xcb);
        EXPECT(gbc.readMem(0xb395), 0xce);
        EXPECT(gbc.readMem(0xfb5a), 0x3e);
        // CB CE 0302
        gbc.setState(0x30c1, 0xbf38, 0xe100, 0x3b60, 0x5e46, 0xe186, 0x1, 0x1);
        gbc.writeMem(0x30c1, { 0xcb, 0xce });
        gbc.writeMem(0xe186, { 0xfd });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xbf38);
        EXPECT(gbc.pc(), 0x30c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe186), 0xff);
        // CB CE 0303
        gbc.setState(0x1da9, 0xaf29, 0xeb00, 0xf607, 0x555b, 0x553, 0x1, 0x1);
        gbc.writeMem(0x553, { 0xfb });
        gbc.writeMem(0x1da9, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xaf29);
        EXPECT(gbc.pc(), 0x1dab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0304
        gbc.setState(0x2528, 0x98a9, 0xfc80, 0x3f39, 0x5118, 0x80e8, 0x0, 0x0);
        gbc.writeMem(0x2528, { 0xcb, 0xce });
        gbc.writeMem(0x80e8, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x98a9);
        EXPECT(gbc.pc(), 0x252a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80e8), 0x47);
        // CB CE 0305
        gbc.setState(0x367a, 0x991c, 0x87a0, 0xd551, 0x2654, 0x3359, 0x0, 0x0);
        gbc.writeMem(0x3359, { 0xfb });
        gbc.writeMem(0x367a, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x991c);
        EXPECT(gbc.pc(), 0x367c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0306
        gbc.setState(0x1d8c, 0x5298, 0x5140, 0xa647, 0x5ee2, 0x2b50, 0x0, 0x1);
        gbc.writeMem(0x1d8c, { 0xcb, 0xce });
        gbc.writeMem(0x2b50, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5298);
        EXPECT(gbc.pc(), 0x1d8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0307
        gbc.setState(0xb96b, 0xa561, 0xca20, 0x3868, 0xce4a, 0xc51f, 0x0, 0x0);
        gbc.writeMem(0xb96b, { 0xcb, 0xce });
        gbc.writeMem(0xc51f, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xa561);
        EXPECT(gbc.pc(), 0xb96d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb96b), 0xcb);
        EXPECT(gbc.readMem(0xb96c), 0xce);
        EXPECT(gbc.readMem(0xc51f), 0x47);
        // CB CE 0309
        gbc.setState(0xece3, 0xf6f5, 0xf6c0, 0xe9b2, 0xbfa2, 0xb78a, 0x1, 0x1);
        gbc.writeMem(0xb78a, { 0x20 });
        gbc.writeMem(0xece3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xf6f5);
        EXPECT(gbc.pc(), 0xece5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb78a), 0x22);
        EXPECT(gbc.readMem(0xece3), 0xcb);
        EXPECT(gbc.readMem(0xece4), 0xce);
        // CB CE 030A
        gbc.setState(0x512d, 0xdbd3, 0xc670, 0xf7d1, 0x161c, 0x246d, 0x1, 0x0);
        gbc.writeMem(0x246d, { 0xab });
        gbc.writeMem(0x512d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xdbd3);
        EXPECT(gbc.pc(), 0x512f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 030B
        gbc.setState(0x9f9c, 0x4280, 0x5fc0, 0xae4, 0x41e2, 0x649a, 0x1, 0x1);
        gbc.writeMem(0x649a, { 0x66 });
        gbc.writeMem(0x9f9c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x4280);
        EXPECT(gbc.pc(), 0x9f9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f9c), 0xcb);
        EXPECT(gbc.readMem(0x9f9d), 0xce);
        // CB CE 030C
        gbc.setState(0x7863, 0x98ed, 0x8ca0, 0xaac7, 0xf617, 0x5ecf, 0x1, 0x1);
        gbc.writeMem(0x5ecf, { 0x7 });
        gbc.writeMem(0x7863, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x98ed);
        EXPECT(gbc.pc(), 0x7865);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 030E
        gbc.setState(0x1c0c, 0x438e, 0x6260, 0x264d, 0x604e, 0x37af, 0x1, 0x1);
        gbc.writeMem(0x1c0c, { 0xcb, 0xce });
        gbc.writeMem(0x37af, { 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x438e);
        EXPECT(gbc.pc(), 0x1c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 030F
        gbc.setState(0x9e34, 0x14c9, 0xea30, 0x5bba, 0xdaa, 0x91d7, 0x0, 0x1);
        gbc.writeMem(0x91d7, { 0xc5 });
        gbc.writeMem(0x9e34, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x14c9);
        EXPECT(gbc.pc(), 0x9e36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91d7), 0xc7);
        EXPECT(gbc.readMem(0x9e34), 0xcb);
        EXPECT(gbc.readMem(0x9e35), 0xce);
        // CB CE 0310
        gbc.setState(0x3d14, 0xe52, 0x14f0, 0x9584, 0xbdae, 0xe257, 0x1, 0x0);
        gbc.writeMem(0x3d14, { 0xcb, 0xce });
        gbc.writeMem(0xe257, { 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xe52);
        EXPECT(gbc.pc(), 0x3d16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe257), 0x7f);
        // CB CE 0314
        gbc.setState(0xa10c, 0xbf9f, 0x5b40, 0x378b, 0x2b04, 0xdd1f, 0x0, 0x0);
        gbc.writeMem(0xa10c, { 0xcb, 0xce });
        gbc.writeMem(0xdd1f, { 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xbf9f);
        EXPECT(gbc.pc(), 0xa10e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa10c), 0xcb);
        EXPECT(gbc.readMem(0xa10d), 0xce);
        EXPECT(gbc.readMem(0xdd1f), 0x5f);
        // CB CE 0315
        gbc.setState(0x3637, 0x5cad, 0x8340, 0xe90b, 0xb510, 0x9c32, 0x0, 0x0);
        gbc.writeMem(0x3637, { 0xcb, 0xce });
        gbc.writeMem(0x9c32, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5cad);
        EXPECT(gbc.pc(), 0x3639);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c32), 0x1a);
        // CB CE 0316
        gbc.setState(0xed92, 0xf7c, 0x7e60, 0x8026, 0x67e7, 0x9666, 0x1, 0x1);
        gbc.writeMem(0x9666, { 0x5b });
        gbc.writeMem(0xed92, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf7c);
        EXPECT(gbc.pc(), 0xed94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9666), 0x5b);
        EXPECT(gbc.readMem(0xed92), 0xcb);
        EXPECT(gbc.readMem(0xed93), 0xce);
        // CB CE 0317
        gbc.setState(0x7fdb, 0x896f, 0xf110, 0xda14, 0x2753, 0xc469, 0x1, 0x0);
        gbc.writeMem(0x7fdb, { 0xcb, 0xce });
        gbc.writeMem(0xc469, { 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x896f);
        EXPECT(gbc.pc(), 0x7fdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc469), 0xfa);
        // CB CE 031B
        gbc.setState(0x2587, 0x87ff, 0x7e80, 0xaba9, 0x9bd7, 0xa504, 0x0, 0x0);
        gbc.writeMem(0x2587, { 0xcb, 0xce });
        gbc.writeMem(0xa504, { 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x87ff);
        EXPECT(gbc.pc(), 0x2589);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa504), 0xda);
        // CB CE 031F
        gbc.setState(0x67d3, 0x4da, 0x56c0, 0x3a7d, 0xf9ac, 0xbd7c, 0x0, 0x1);
        gbc.writeMem(0x67d3, { 0xcb, 0xce });
        gbc.writeMem(0xbd7c, { 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x4da);
        EXPECT(gbc.pc(), 0x67d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd7c), 0x13);
        // CB CE 0320
        gbc.setState(0x906e, 0x60da, 0x6880, 0xa75a, 0x76c7, 0xd00, 0x0, 0x0);
        gbc.writeMem(0xd00, { 0x8e });
        gbc.writeMem(0x906e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x60da);
        EXPECT(gbc.pc(), 0x9070);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x906e), 0xcb);
        EXPECT(gbc.readMem(0x906f), 0xce);
        // CB CE 0321
        gbc.setState(0x86cb, 0xca2d, 0x4450, 0x3eef, 0x7bed, 0x44b, 0x1, 0x1);
        gbc.writeMem(0x44b, { 0x2a });
        gbc.writeMem(0x86cb, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xca2d);
        EXPECT(gbc.pc(), 0x86cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86cb), 0xcb);
        EXPECT(gbc.readMem(0x86cc), 0xce);
        // CB CE 0322
        gbc.setState(0x647d, 0x6181, 0x55a0, 0x8615, 0xb22c, 0x9d6f, 0x1, 0x1);
        gbc.writeMem(0x647d, { 0xcb, 0xce });
        gbc.writeMem(0x9d6f, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6181);
        EXPECT(gbc.pc(), 0x647f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d6f), 0x97);
        // CB CE 0323
        gbc.setState(0x98cd, 0x8925, 0xb4f0, 0x4f69, 0x34de, 0xafdb, 0x1, 0x0);
        gbc.writeMem(0x98cd, { 0xcb, 0xce });
        gbc.writeMem(0xafdb, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8925);
        EXPECT(gbc.pc(), 0x98cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98cd), 0xcb);
        EXPECT(gbc.readMem(0x98ce), 0xce);
        EXPECT(gbc.readMem(0xafdb), 0x52);
        // CB CE 0325
        gbc.setState(0x8728, 0x9405, 0xc5f0, 0x66d4, 0x726d, 0xdbf5, 0x1, 0x1);
        gbc.writeMem(0x8728, { 0xcb, 0xce });
        gbc.writeMem(0xdbf5, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9405);
        EXPECT(gbc.pc(), 0x872a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8728), 0xcb);
        EXPECT(gbc.readMem(0x8729), 0xce);
        EXPECT(gbc.readMem(0xdbf5), 0x52);
        // CB CE 0329
        gbc.setState(0x50f3, 0x6872, 0x75d0, 0x43ac, 0xb7fa, 0x6bb4, 0x1, 0x0);
        gbc.writeMem(0x50f3, { 0xcb, 0xce });
        gbc.writeMem(0x6bb4, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x6872);
        EXPECT(gbc.pc(), 0x50f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 032B
        gbc.setState(0xac5f, 0xf8ab, 0x11a0, 0xcfc8, 0x84a4, 0xc040, 0x0, 0x0);
        gbc.writeMem(0xac5f, { 0xcb, 0xce });
        gbc.writeMem(0xc040, { 0xb9 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf8ab);
        EXPECT(gbc.pc(), 0xac61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac5f), 0xcb);
        EXPECT(gbc.readMem(0xac60), 0xce);
        EXPECT(gbc.readMem(0xc040), 0xbb);
        // CB CE 032C
        gbc.setState(0x9fec, 0xf17f, 0xec60, 0xcac, 0x7cf, 0xaf16, 0x1, 0x0);
        gbc.writeMem(0x9fec, { 0xcb, 0xce });
        gbc.writeMem(0xaf16, { 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf17f);
        EXPECT(gbc.pc(), 0x9fee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fec), 0xcb);
        EXPECT(gbc.readMem(0x9fed), 0xce);
        EXPECT(gbc.readMem(0xaf16), 0x72);
        // CB CE 032F
        gbc.setState(0x3a23, 0xf09f, 0x110, 0x4e56, 0x61c9, 0xc800, 0x0, 0x1);
        gbc.writeMem(0x3a23, { 0xcb, 0xce });
        gbc.writeMem(0xc800, { 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf09f);
        EXPECT(gbc.pc(), 0x3a25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc800), 0x8e);
        // CB CE 0330
        gbc.setState(0x9df2, 0x5c3b, 0x2740, 0x246d, 0xf065, 0xf700, 0x1, 0x0);
        gbc.writeMem(0x9df2, { 0xcb, 0xce });
        gbc.writeMem(0xf700, { 0x61 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5c3b);
        EXPECT(gbc.pc(), 0x9df4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9df2), 0xcb);
        EXPECT(gbc.readMem(0x9df3), 0xce);
        EXPECT(gbc.readMem(0xf700), 0x63);
        // CB CE 0331
        gbc.setState(0x22ba, 0x3684, 0x5ee0, 0xc24b, 0xdbee, 0xe618, 0x0, 0x0);
        gbc.writeMem(0x22ba, { 0xcb, 0xce });
        gbc.writeMem(0xe618, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3684);
        EXPECT(gbc.pc(), 0x22bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe618), 0x4a);
        // CB CE 0332
        gbc.setState(0x7a7b, 0x6434, 0x9540, 0x46d7, 0xd565, 0xfe60, 0x0, 0x1);
        gbc.writeMem(0x7a7b, { 0xcb, 0xce });
        gbc.writeMem(0xfe60, { 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x6434);
        EXPECT(gbc.pc(), 0x7a7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe60), 0xfb);
        // CB CE 0334
        gbc.setState(0x4d3e, 0x77e1, 0x1920, 0xbafe, 0x94f5, 0x2724, 0x1, 0x0);
        gbc.writeMem(0x2724, { 0x87 });
        gbc.writeMem(0x4d3e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x77e1);
        EXPECT(gbc.pc(), 0x4d40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0335
        gbc.setState(0xc6ae, 0x9306, 0x5680, 0x1305, 0xcbdd, 0xf305, 0x1, 0x0);
        gbc.writeMem(0xc6ae, { 0xcb, 0xce });
        gbc.writeMem(0xf305, { 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x9306);
        EXPECT(gbc.pc(), 0xc6b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6ae), 0xcb);
        EXPECT(gbc.readMem(0xc6af), 0xce);
        EXPECT(gbc.readMem(0xf305), 0x6f);
        // CB CE 0338
        gbc.setState(0x69fa, 0x182, 0xd970, 0xdce5, 0xb2fc, 0xe53a, 0x1, 0x1);
        gbc.writeMem(0x69fa, { 0xcb, 0xce });
        gbc.writeMem(0xe53a, { 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x182);
        EXPECT(gbc.pc(), 0x69fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe53a), 0x27);
        // CB CE 0339
        gbc.setState(0x6011, 0x40fe, 0xbd80, 0xa825, 0x6138, 0x882f, 0x0, 0x0);
        gbc.writeMem(0x6011, { 0xcb, 0xce });
        gbc.writeMem(0x882f, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x40fe);
        EXPECT(gbc.pc(), 0x6013);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882f), 0x37);
        // CB CE 033B
        gbc.setState(0x74ed, 0x2dcc, 0x6b90, 0x73ef, 0xacf3, 0xa477, 0x1, 0x0);
        gbc.writeMem(0x74ed, { 0xcb, 0xce });
        gbc.writeMem(0xa477, { 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2dcc);
        EXPECT(gbc.pc(), 0x74ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa477), 0xde);
        // CB CE 033C
        gbc.setState(0xe3e3, 0x74a1, 0xc3d0, 0xb610, 0xcc9f, 0xf5c7, 0x0, 0x1);
        gbc.writeMem(0xe3e3, { 0xcb, 0xce });
        gbc.writeMem(0xf5c7, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x74a1);
        EXPECT(gbc.pc(), 0xe3e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e3), 0xcb);
        EXPECT(gbc.readMem(0xe3e4), 0xce);
        EXPECT(gbc.readMem(0xf5c7), 0xce);
        // CB CE 033D
        gbc.setState(0x31a8, 0x2b1b, 0x5c0, 0xd5f4, 0xc152, 0xf8e4, 0x0, 0x1);
        gbc.writeMem(0x31a8, { 0xcb, 0xce });
        gbc.writeMem(0xf8e4, { 0xa6 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x2b1b);
        EXPECT(gbc.pc(), 0x31aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8e4), 0xa6);
        // CB CE 033E
        gbc.setState(0x986d, 0x5fee, 0xdd0, 0x524d, 0xfc76, 0xcd0c, 0x0, 0x1);
        gbc.writeMem(0x986d, { 0xcb, 0xce });
        gbc.writeMem(0xcd0c, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5fee);
        EXPECT(gbc.pc(), 0x986f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x986d), 0xcb);
        EXPECT(gbc.readMem(0x986e), 0xce);
        EXPECT(gbc.readMem(0xcd0c), 0xef);
        // CB CE 033F
        gbc.setState(0xd112, 0xeab9, 0xdce0, 0x96eb, 0x2b2, 0x4ae3, 0x0, 0x1);
        gbc.writeMem(0x4ae3, { 0x6e });
        gbc.writeMem(0xd112, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xeab9);
        EXPECT(gbc.pc(), 0xd114);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd112), 0xcb);
        EXPECT(gbc.readMem(0xd113), 0xce);
        // CB CE 0340
        gbc.setState(0x5e1f, 0xa037, 0x9010, 0x8bf4, 0x538d, 0xfab1, 0x1, 0x0);
        gbc.writeMem(0x5e1f, { 0xcb, 0xce });
        gbc.writeMem(0xfab1, { 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xa037);
        EXPECT(gbc.pc(), 0x5e21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfab1), 0xc7);
        // CB CE 0341
        gbc.setState(0xcc04, 0xa4f3, 0x8b60, 0x5a3d, 0xea23, 0xded2, 0x0, 0x1);
        gbc.writeMem(0xcc04, { 0xcb, 0xce });
        gbc.writeMem(0xded2, { 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa4f3);
        EXPECT(gbc.pc(), 0xcc06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc04), 0xcb);
        EXPECT(gbc.readMem(0xcc05), 0xce);
        EXPECT(gbc.readMem(0xded2), 0xe);
        // CB CE 0342
        gbc.setState(0x6835, 0xa41b, 0x8900, 0xfa11, 0x70d1, 0x4f5d, 0x1, 0x0);
        gbc.writeMem(0x4f5d, { 0x4b });
        gbc.writeMem(0x6835, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa41b);
        EXPECT(gbc.pc(), 0x6837);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0345
        gbc.setState(0xaff0, 0xb337, 0xa2d0, 0xbbf2, 0xfad9, 0xb64c, 0x0, 0x1);
        gbc.writeMem(0xaff0, { 0xcb, 0xce });
        gbc.writeMem(0xb64c, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb337);
        EXPECT(gbc.pc(), 0xaff2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff0), 0xcb);
        EXPECT(gbc.readMem(0xaff1), 0xce);
        EXPECT(gbc.readMem(0xb64c), 0x13);
        // CB CE 0346
        gbc.setState(0x8e, 0x120d, 0x680, 0xcb50, 0x2b04, 0xddde, 0x1, 0x1);
        gbc.writeMem(0x8e, { 0xcb, 0xce });
        gbc.writeMem(0xddde, { 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x120d);
        EXPECT(gbc.pc(), 0x90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddde), 0xce);
        // CB CE 0347
        gbc.setState(0x761a, 0xda43, 0x3120, 0x7393, 0x3b92, 0xcbdb, 0x1, 0x0);
        gbc.writeMem(0x761a, { 0xcb, 0xce });
        gbc.writeMem(0xcbdb, { 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xda43);
        EXPECT(gbc.pc(), 0x761c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbdb), 0x9f);
        // CB CE 0349
        gbc.setState(0x801a, 0x4693, 0xf1c0, 0xccc0, 0xa67a, 0xc8b8, 0x1, 0x0);
        gbc.writeMem(0x801a, { 0xcb, 0xce });
        gbc.writeMem(0xc8b8, { 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4693);
        EXPECT(gbc.pc(), 0x801c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x801a), 0xcb);
        EXPECT(gbc.readMem(0x801b), 0xce);
        EXPECT(gbc.readMem(0xc8b8), 0x9a);
        // CB CE 034A
        gbc.setState(0x255d, 0x91f6, 0x8940, 0x5655, 0x66, 0xe163, 0x1, 0x0);
        gbc.writeMem(0x255d, { 0xcb, 0xce });
        gbc.writeMem(0xe163, { 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x91f6);
        EXPECT(gbc.pc(), 0x255f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe163), 0x23);
        // CB CE 034B
        gbc.setState(0xd721, 0xa326, 0xcf70, 0xf02b, 0xb2d, 0x4c37, 0x1, 0x1);
        gbc.writeMem(0x4c37, { 0xb6 });
        gbc.writeMem(0xd721, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xa326);
        EXPECT(gbc.pc(), 0xd723);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd721), 0xcb);
        EXPECT(gbc.readMem(0xd722), 0xce);
        // CB CE 034C
        gbc.setState(0x7015, 0x386e, 0x3ef0, 0xb7c9, 0x28a8, 0x77ac, 0x0, 0x1);
        gbc.writeMem(0x7015, { 0xcb, 0xce });
        gbc.writeMem(0x77ac, { 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x386e);
        EXPECT(gbc.pc(), 0x7017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0350
        gbc.setState(0xed92, 0x995e, 0x4b0, 0xe4b3, 0xb885, 0x1a7b, 0x0, 0x1);
        gbc.writeMem(0x1a7b, { 0x5e });
        gbc.writeMem(0xed92, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x995e);
        EXPECT(gbc.pc(), 0xed94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed92), 0xcb);
        EXPECT(gbc.readMem(0xed93), 0xce);
        // CB CE 0353
        gbc.setState(0x47e9, 0xaaca, 0x48a0, 0x2047, 0x50bd, 0x41e7, 0x0, 0x1);
        gbc.writeMem(0x41e7, { 0xa6 });
        gbc.writeMem(0x47e9, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xaaca);
        EXPECT(gbc.pc(), 0x47eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0357
        gbc.setState(0xed92, 0x2dbc, 0x7180, 0x524b, 0x7f23, 0x82c6, 0x1, 0x1);
        gbc.writeMem(0x82c6, { 0x84 });
        gbc.writeMem(0xed92, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2dbc);
        EXPECT(gbc.pc(), 0xed94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82c6), 0x86);
        EXPECT(gbc.readMem(0xed92), 0xcb);
        EXPECT(gbc.readMem(0xed93), 0xce);
        // CB CE 0358
        gbc.setState(0x11b1, 0xc53, 0x1710, 0xe92, 0x980a, 0xeb19, 0x1, 0x0);
        gbc.writeMem(0x11b1, { 0xcb, 0xce });
        gbc.writeMem(0xeb19, { 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xc53);
        EXPECT(gbc.pc(), 0x11b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb19), 0xb6);
        // CB CE 0359
        gbc.setState(0x9594, 0x7134, 0x9ad0, 0x1caf, 0x2521, 0x8a99, 0x1, 0x1);
        gbc.writeMem(0x8a99, { 0xf7 });
        gbc.writeMem(0x9594, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x7134);
        EXPECT(gbc.pc(), 0x9596);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a99), 0xf7);
        EXPECT(gbc.readMem(0x9594), 0xcb);
        EXPECT(gbc.readMem(0x9595), 0xce);
        // CB CE 035A
        gbc.setState(0x7a47, 0xad9d, 0x99d0, 0x3664, 0x7f8c, 0xdd22, 0x1, 0x0);
        gbc.writeMem(0x7a47, { 0xcb, 0xce });
        gbc.writeMem(0xdd22, { 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xad9d);
        EXPECT(gbc.pc(), 0x7a49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd22), 0x4f);
        // CB CE 035C
        gbc.setState(0x9fff, 0xb9d8, 0xbec0, 0xe46, 0x1e8f, 0xa32e, 0x1, 0x1);
        gbc.writeMem(0x9fff, { 0xcb, 0xce });
        gbc.writeMem(0xa32e, { 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb9d8);
        EXPECT(gbc.pc(), 0xa001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fff), 0xcb);
        EXPECT(gbc.readMem(0xa000), 0xce);
        EXPECT(gbc.readMem(0xa32e), 0xc6);
        // CB CE 035E
        gbc.setState(0x3d74, 0x783, 0x2e00, 0xfcc6, 0x49a8, 0x3f2a, 0x0, 0x1);
        gbc.writeMem(0x3d74, { 0xcb, 0xce });
        gbc.writeMem(0x3f2a, { 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x783);
        EXPECT(gbc.pc(), 0x3d76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 035F
        gbc.setState(0x565, 0x7701, 0x8370, 0x1268, 0xb863, 0xb14d, 0x1, 0x0);
        gbc.writeMem(0x565, { 0xcb, 0xce });
        gbc.writeMem(0xb14d, { 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x7701);
        EXPECT(gbc.pc(), 0x567);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb14d), 0x9e);
        // CB CE 0360
        gbc.setState(0xde61, 0x7d2c, 0xccb0, 0xe446, 0x45c9, 0x196b, 0x1, 0x1);
        gbc.writeMem(0x196b, { 0x4f });
        gbc.writeMem(0xde61, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x7d2c);
        EXPECT(gbc.pc(), 0xde63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde61), 0xcb);
        EXPECT(gbc.readMem(0xde62), 0xce);
        // CB CE 0361
        gbc.setState(0xac5e, 0x8752, 0x2100, 0xc61e, 0xbe76, 0xb5f7, 0x1, 0x1);
        gbc.writeMem(0xac5e, { 0xcb, 0xce });
        gbc.writeMem(0xb5f7, { 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8752);
        EXPECT(gbc.pc(), 0xac60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac5e), 0xcb);
        EXPECT(gbc.readMem(0xac5f), 0xce);
        EXPECT(gbc.readMem(0xb5f7), 0xd2);
        // CB CE 0362
        gbc.setState(0xa806, 0x8a8f, 0xc4d0, 0x5f35, 0xc831, 0x9fec, 0x1, 0x1);
        gbc.writeMem(0x9fec, { 0x68 });
        gbc.writeMem(0xa806, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x8a8f);
        EXPECT(gbc.pc(), 0xa808);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fec), 0x6a);
        EXPECT(gbc.readMem(0xa806), 0xcb);
        EXPECT(gbc.readMem(0xa807), 0xce);
        // CB CE 0363
        gbc.setState(0xef4e, 0x69b6, 0x96a0, 0x79f5, 0xfdde, 0xb8bd, 0x0, 0x0);
        gbc.writeMem(0xb8bd, { 0x38 });
        gbc.writeMem(0xef4e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x69b6);
        EXPECT(gbc.pc(), 0xef50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8bd), 0x3a);
        EXPECT(gbc.readMem(0xef4e), 0xcb);
        EXPECT(gbc.readMem(0xef4f), 0xce);
        // CB CE 0364
        gbc.setState(0xa2d4, 0xd6e5, 0x4c20, 0xa091, 0x53c6, 0xa2e3, 0x1, 0x1);
        gbc.writeMem(0xa2d4, { 0xcb, 0xce });
        gbc.writeMem(0xa2e3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd6e5);
        EXPECT(gbc.pc(), 0xa2d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d4), 0xcb);
        EXPECT(gbc.readMem(0xa2d5), 0xce);
        EXPECT(gbc.readMem(0xa2e3), 0x2);
        // CB CE 0365
        gbc.setState(0x6c92, 0x8027, 0xc160, 0xfd27, 0xf842, 0xf418, 0x0, 0x0);
        gbc.writeMem(0x6c92, { 0xcb, 0xce });
        gbc.writeMem(0xf418, { 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x8027);
        EXPECT(gbc.pc(), 0x6c94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf418), 0xde);
        // CB CE 0368
        gbc.setState(0xeeb, 0xb87e, 0x8c0, 0x14dd, 0xddbd, 0x6e19, 0x1, 0x0);
        gbc.writeMem(0xeeb, { 0xcb, 0xce });
        gbc.writeMem(0x6e19, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb87e);
        EXPECT(gbc.pc(), 0xeed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0369
        gbc.setState(0xbd6b, 0xfc26, 0x7c0, 0xa07c, 0x223d, 0xe4ce, 0x0, 0x0);
        gbc.writeMem(0xbd6b, { 0xcb, 0xce });
        gbc.writeMem(0xe4ce, { 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xfc26);
        EXPECT(gbc.pc(), 0xbd6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd6b), 0xcb);
        EXPECT(gbc.readMem(0xbd6c), 0xce);
        EXPECT(gbc.readMem(0xe4ce), 0x52);
        // CB CE 036A
        gbc.setState(0x2199, 0xfcc8, 0x4310, 0xb770, 0xaa9c, 0xa3cb, 0x1, 0x0);
        gbc.writeMem(0x2199, { 0xcb, 0xce });
        gbc.writeMem(0xa3cb, { 0x6b });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xfcc8);
        EXPECT(gbc.pc(), 0x219b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3cb), 0x6b);
        // CB CE 036B
        gbc.setState(0xa124, 0x6cbd, 0xa620, 0xc094, 0x70e2, 0xd657, 0x1, 0x0);
        gbc.writeMem(0xa124, { 0xcb, 0xce });
        gbc.writeMem(0xd657, { 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x6cbd);
        EXPECT(gbc.pc(), 0xa126);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa124), 0xcb);
        EXPECT(gbc.readMem(0xa125), 0xce);
        EXPECT(gbc.readMem(0xd657), 0x96);
        // CB CE 036C
        gbc.setState(0xc086, 0x88bf, 0x73b0, 0xd8ff, 0xe97d, 0xbb55, 0x1, 0x1);
        gbc.writeMem(0xbb55, { 0x2d });
        gbc.writeMem(0xc086, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x88bf);
        EXPECT(gbc.pc(), 0xc088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb55), 0x2f);
        EXPECT(gbc.readMem(0xc086), 0xcb);
        EXPECT(gbc.readMem(0xc087), 0xce);
        // CB CE 036D
        gbc.setState(0xd872, 0xd459, 0x11b0, 0xff20, 0x3435, 0x89fd, 0x0, 0x0);
        gbc.writeMem(0x89fd, { 0x8d });
        gbc.writeMem(0xd872, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd459);
        EXPECT(gbc.pc(), 0xd874);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89fd), 0x8f);
        EXPECT(gbc.readMem(0xd872), 0xcb);
        EXPECT(gbc.readMem(0xd873), 0xce);
        // CB CE 036E
        gbc.setState(0x3681, 0x933e, 0x4700, 0x1c9, 0xd0d7, 0xd055, 0x0, 0x1);
        gbc.writeMem(0x3681, { 0xcb, 0xce });
        gbc.writeMem(0xd055, { 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x933e);
        EXPECT(gbc.pc(), 0x3683);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd055), 0x97);
        // CB CE 036F
        gbc.setState(0x7ffb, 0x469c, 0xbcc0, 0x4522, 0xd3d0, 0xedef, 0x0, 0x0);
        gbc.writeMem(0x7ffb, { 0xcb, 0xce });
        gbc.writeMem(0xedef, { 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x469c);
        EXPECT(gbc.pc(), 0x7ffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedef), 0x3a);
        // CB CE 0370
        gbc.setState(0xebd2, 0xa1a4, 0xd020, 0xe4, 0x45f7, 0x75ab, 0x1, 0x0);
        gbc.writeMem(0x75ab, { 0xce });
        gbc.writeMem(0xebd2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa1a4);
        EXPECT(gbc.pc(), 0xebd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd2), 0xcb);
        EXPECT(gbc.readMem(0xebd3), 0xce);
        // CB CE 0371
        gbc.setState(0xdb26, 0xee74, 0x1a30, 0xd35c, 0xeaae, 0xd918, 0x1, 0x1);
        gbc.writeMem(0xd918, { 0x5e });
        gbc.writeMem(0xdb26, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xee74);
        EXPECT(gbc.pc(), 0xdb28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd918), 0x5e);
        EXPECT(gbc.readMem(0xdb26), 0xcb);
        EXPECT(gbc.readMem(0xdb27), 0xce);
        // CB CE 0372
        gbc.setState(0x92ba, 0xfe53, 0x9750, 0x2dc4, 0x2598, 0xde1, 0x0, 0x0);
        gbc.writeMem(0xde1, { 0x2 });
        gbc.writeMem(0x92ba, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xfe53);
        EXPECT(gbc.pc(), 0x92bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92ba), 0xcb);
        EXPECT(gbc.readMem(0x92bb), 0xce);
        // CB CE 0375
        gbc.setState(0x72f5, 0xfd30, 0x6fb0, 0x57d0, 0xb116, 0xf245, 0x0, 0x0);
        gbc.writeMem(0x72f5, { 0xcb, 0xce });
        gbc.writeMem(0xf245, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfd30);
        EXPECT(gbc.pc(), 0x72f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf245), 0xc2);
        // CB CE 0378
        gbc.setState(0x2a9e, 0xa16d, 0x91e0, 0xb085, 0x51fc, 0x1e53, 0x1, 0x0);
        gbc.writeMem(0x1e53, { 0xda });
        gbc.writeMem(0x2a9e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xa16d);
        EXPECT(gbc.pc(), 0x2aa0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0379
        gbc.setState(0x5b01, 0xd5e5, 0x4350, 0x8908, 0x319f, 0xc4ce, 0x0, 0x0);
        gbc.writeMem(0x5b01, { 0xcb, 0xce });
        gbc.writeMem(0xc4ce, { 0xed });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd5e5);
        EXPECT(gbc.pc(), 0x5b03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4ce), 0xef);
        // CB CE 037B
        gbc.setState(0x185, 0xeda5, 0x5d0, 0xa824, 0xc0a2, 0xa5d3, 0x0, 0x1);
        gbc.writeMem(0x185, { 0xcb, 0xce });
        gbc.writeMem(0xa5d3, { 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xeda5);
        EXPECT(gbc.pc(), 0x187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5d3), 0xda);
        // CB CE 037C
        gbc.setState(0x48d5, 0x926d, 0x7a30, 0x9be6, 0x21eb, 0x6179, 0x0, 0x0);
        gbc.writeMem(0x48d5, { 0xcb, 0xce });
        gbc.writeMem(0x6179, { 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x926d);
        EXPECT(gbc.pc(), 0x48d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 037E
        gbc.setState(0x3ddf, 0x216, 0xaad0, 0xb3bd, 0x906e, 0xc8c1, 0x0, 0x1);
        gbc.writeMem(0x3ddf, { 0xcb, 0xce });
        gbc.writeMem(0xc8c1, { 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x216);
        EXPECT(gbc.pc(), 0x3de1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8c1), 0x52);
        // CB CE 037F
        gbc.setState(0x8493, 0xec41, 0x35b0, 0x4b03, 0xaf76, 0xa892, 0x1, 0x0);
        gbc.writeMem(0x8493, { 0xcb, 0xce });
        gbc.writeMem(0xa892, { 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xec41);
        EXPECT(gbc.pc(), 0x8495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8493), 0xcb);
        EXPECT(gbc.readMem(0x8494), 0xce);
        EXPECT(gbc.readMem(0xa892), 0x7);
        // CB CE 0380
        gbc.setState(0x6ffc, 0xbf5e, 0xe270, 0xd0cd, 0x589b, 0x4c5e, 0x0, 0x1);
        gbc.writeMem(0x4c5e, { 0xff });
        gbc.writeMem(0x6ffc, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xbf5e);
        EXPECT(gbc.pc(), 0x6ffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0381
        gbc.setState(0x34b4, 0xed7, 0xf680, 0xee91, 0x719, 0xd2d4, 0x1, 0x1);
        gbc.writeMem(0x34b4, { 0xcb, 0xce });
        gbc.writeMem(0xd2d4, { 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xed7);
        EXPECT(gbc.pc(), 0x34b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d4), 0xdf);
        // CB CE 0382
        gbc.setState(0x6d6c, 0x1a6f, 0x3ca0, 0x8311, 0x54a6, 0xe5a1, 0x0, 0x1);
        gbc.writeMem(0x6d6c, { 0xcb, 0xce });
        gbc.writeMem(0xe5a1, { 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x1a6f);
        EXPECT(gbc.pc(), 0x6d6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5a1), 0x7a);
        // CB CE 0383
        gbc.setState(0x5129, 0x7af6, 0x7e90, 0x1f60, 0xcf1e, 0xdee4, 0x0, 0x1);
        gbc.writeMem(0x5129, { 0xcb, 0xce });
        gbc.writeMem(0xdee4, { 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7af6);
        EXPECT(gbc.pc(), 0x512b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdee4), 0x43);
        // CB CE 0384
        gbc.setState(0xc558, 0xecb3, 0xaeb0, 0x774f, 0x675d, 0xde72, 0x0, 0x0);
        gbc.writeMem(0xc558, { 0xcb, 0xce });
        gbc.writeMem(0xde72, { 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xecb3);
        EXPECT(gbc.pc(), 0xc55a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc558), 0xcb);
        EXPECT(gbc.readMem(0xc559), 0xce);
        EXPECT(gbc.readMem(0xde72), 0xc3);
        // CB CE 0385
        gbc.setState(0xa92e, 0x3595, 0xc7b0, 0x6395, 0xcd1f, 0xb599, 0x0, 0x0);
        gbc.writeMem(0xa92e, { 0xcb, 0xce });
        gbc.writeMem(0xb599, { 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3595);
        EXPECT(gbc.pc(), 0xa930);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa92e), 0xcb);
        EXPECT(gbc.readMem(0xa92f), 0xce);
        EXPECT(gbc.readMem(0xb599), 0xa3);
        // CB CE 0386
        gbc.setState(0x7fac, 0x5759, 0xbcd0, 0xf61c, 0xae18, 0x9bb5, 0x0, 0x1);
        gbc.writeMem(0x7fac, { 0xcb, 0xce });
        gbc.writeMem(0x9bb5, { 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5759);
        EXPECT(gbc.pc(), 0x7fae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb5), 0x8f);
        // CB CE 0387
        gbc.setState(0x69bb, 0xfa7c, 0xc8f0, 0xbc5, 0x32b, 0xcc7f, 0x1, 0x0);
        gbc.writeMem(0x69bb, { 0xcb, 0xce });
        gbc.writeMem(0xcc7f, { 0x18 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xfa7c);
        EXPECT(gbc.pc(), 0x69bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc7f), 0x1a);
        // CB CE 0388
        gbc.setState(0x8c2, 0xde20, 0x6590, 0x2d03, 0x428e, 0x469f, 0x1, 0x0);
        gbc.writeMem(0x8c2, { 0xcb, 0xce });
        gbc.writeMem(0x469f, { 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xde20);
        EXPECT(gbc.pc(), 0x8c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 0389
        gbc.setState(0x4e22, 0xa21b, 0x6590, 0x2884, 0xa12b, 0xd30e, 0x1, 0x0);
        gbc.writeMem(0x4e22, { 0xcb, 0xce });
        gbc.writeMem(0xd30e, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa21b);
        EXPECT(gbc.pc(), 0x4e24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd30e), 0x9e);
        // CB CE 038A
        gbc.setState(0x6d70, 0x7371, 0x9bb0, 0x4475, 0x95e5, 0x89c9, 0x0, 0x0);
        gbc.writeMem(0x6d70, { 0xcb, 0xce });
        gbc.writeMem(0x89c9, { 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7371);
        EXPECT(gbc.pc(), 0x6d72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89c9), 0x4a);
        // CB CE 038B
        gbc.setState(0xb2ed, 0x7e59, 0x85b0, 0xb430, 0x1e08, 0x59e5, 0x1, 0x1);
        gbc.writeMem(0x59e5, { 0x4e });
        gbc.writeMem(0xb2ed, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x7e59);
        EXPECT(gbc.pc(), 0xb2ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2ed), 0xcb);
        EXPECT(gbc.readMem(0xb2ee), 0xce);
        // CB CE 038C
        gbc.setState(0x5ba9, 0x77a8, 0x3820, 0x535, 0xd5cd, 0xae1b, 0x0, 0x1);
        gbc.writeMem(0x5ba9, { 0xcb, 0xce });
        gbc.writeMem(0xae1b, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x77a8);
        EXPECT(gbc.pc(), 0x5bab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae1b), 0xaa);
        // CB CE 038D
        gbc.setState(0xa822, 0x5fb5, 0x1000, 0x6108, 0xb4f5, 0xfb62, 0x0, 0x0);
        gbc.writeMem(0xa822, { 0xcb, 0xce });
        gbc.writeMem(0xfb62, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5fb5);
        EXPECT(gbc.pc(), 0xa824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa822), 0xcb);
        EXPECT(gbc.readMem(0xa823), 0xce);
        EXPECT(gbc.readMem(0xfb62), 0xa7);
        // CB CE 038F
        gbc.setState(0x77a5, 0x1d26, 0x75c0, 0x4479, 0x1bde, 0x4dd0, 0x1, 0x0);
        gbc.writeMem(0x4dd0, { 0xde });
        gbc.writeMem(0x77a5, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1d26);
        EXPECT(gbc.pc(), 0x77a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 0391
        gbc.setState(0x5edd, 0xf13a, 0xbcd0, 0xd1f3, 0x30c8, 0xc0e6, 0x1, 0x0);
        gbc.writeMem(0x5edd, { 0xcb, 0xce });
        gbc.writeMem(0xc0e6, { 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf13a);
        EXPECT(gbc.pc(), 0x5edf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0e6), 0x2f);
        // CB CE 0392
        gbc.setState(0x3ca7, 0x40f0, 0x2960, 0x8bb8, 0x77d1, 0xa406, 0x1, 0x1);
        gbc.writeMem(0x3ca7, { 0xcb, 0xce });
        gbc.writeMem(0xa406, { 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x40f0);
        EXPECT(gbc.pc(), 0x3ca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa406), 0xfa);
        // CB CE 0394
        gbc.setState(0x2cd2, 0x17ce, 0xd5f0, 0x4795, 0xd73f, 0xdaf5, 0x1, 0x0);
        gbc.writeMem(0x2cd2, { 0xcb, 0xce });
        gbc.writeMem(0xdaf5, { 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x17ce);
        EXPECT(gbc.pc(), 0x2cd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdaf5), 0xe2);
        // CB CE 0395
        gbc.setState(0x9515, 0x458b, 0x73c0, 0xe8dd, 0x3992, 0x5124, 0x1, 0x0);
        gbc.writeMem(0x5124, { 0xcf });
        gbc.writeMem(0x9515, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x458b);
        EXPECT(gbc.pc(), 0x9517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9515), 0xcb);
        EXPECT(gbc.readMem(0x9516), 0xce);
        // CB CE 0398
        gbc.setState(0xeb9c, 0x5e5e, 0xf9b0, 0x1225, 0x1654, 0x2f61, 0x0, 0x1);
        gbc.writeMem(0x2f61, { 0xe3 });
        gbc.writeMem(0xeb9c, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5e5e);
        EXPECT(gbc.pc(), 0xeb9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb9c), 0xcb);
        EXPECT(gbc.readMem(0xeb9d), 0xce);
        // CB CE 039A
        gbc.setState(0x3768, 0x318a, 0x80a0, 0xbc62, 0x66c7, 0xcc11, 0x1, 0x1);
        gbc.writeMem(0x3768, { 0xcb, 0xce });
        gbc.writeMem(0xcc11, { 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x318a);
        EXPECT(gbc.pc(), 0x376a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc11), 0xc2);
        // CB CE 039C
        gbc.setState(0xc887, 0x8dc0, 0xba80, 0xb4b9, 0x9fbb, 0xab2a, 0x1, 0x0);
        gbc.writeMem(0xab2a, { 0xce });
        gbc.writeMem(0xc887, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8dc0);
        EXPECT(gbc.pc(), 0xc889);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab2a), 0xce);
        EXPECT(gbc.readMem(0xc887), 0xcb);
        EXPECT(gbc.readMem(0xc888), 0xce);
        // CB CE 039D
        gbc.setState(0x4fc4, 0x1943, 0xd210, 0xd547, 0xb66e, 0x8277, 0x0, 0x1);
        gbc.writeMem(0x4fc4, { 0xcb, 0xce });
        gbc.writeMem(0x8277, { 0x37 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1943);
        EXPECT(gbc.pc(), 0x4fc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8277), 0x37);
        // CB CE 039E
        gbc.setState(0xd37f, 0x1f51, 0x5aa0, 0x89e8, 0x857a, 0xff50, 0x1, 0x0);
        gbc.writeMem(0xd37f, { 0xcb, 0xce });
        gbc.writeMem(0xff50, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x1f51);
        EXPECT(gbc.pc(), 0xd381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd37f), 0xcb);
        EXPECT(gbc.readMem(0xd380), 0xce);
        EXPECT(gbc.readMem(0xff50), 0x4a);
        // CB CE 039F
        gbc.setState(0xdc92, 0x69ea, 0xa110, 0x5faf, 0x998b, 0x683f, 0x0, 0x0);
        gbc.writeMem(0x683f, { 0x6e });
        gbc.writeMem(0xdc92, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x69ea);
        EXPECT(gbc.pc(), 0xdc94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc92), 0xcb);
        EXPECT(gbc.readMem(0xdc93), 0xce);
        // CB CE 03A1
        gbc.setState(0x3e83, 0xd620, 0x1510, 0x2c97, 0x2526, 0xc5bc, 0x1, 0x0);
        gbc.writeMem(0x3e83, { 0xcb, 0xce });
        gbc.writeMem(0xc5bc, { 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xd620);
        EXPECT(gbc.pc(), 0x3e85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5bc), 0xdb);
        // CB CE 03A2
        gbc.setState(0x2073, 0x5365, 0x4e10, 0x1d1, 0x4d9a, 0xbf54, 0x1, 0x1);
        gbc.writeMem(0x2073, { 0xcb, 0xce });
        gbc.writeMem(0xbf54, { 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x5365);
        EXPECT(gbc.pc(), 0x2075);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf54), 0x82);
        // CB CE 03A3
        gbc.setState(0x5fdc, 0x214a, 0x7270, 0xedd, 0x74a9, 0xd4cb, 0x0, 0x0);
        gbc.writeMem(0x5fdc, { 0xcb, 0xce });
        gbc.writeMem(0xd4cb, { 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x214a);
        EXPECT(gbc.pc(), 0x5fde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4cb), 0x3);
        // CB CE 03A5
        gbc.setState(0x2e64, 0x4cd5, 0xcd40, 0xf1fa, 0xa366, 0x2368, 0x1, 0x0);
        gbc.writeMem(0x2368, { 0xe3 });
        gbc.writeMem(0x2e64, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4cd5);
        EXPECT(gbc.pc(), 0x2e66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 03A6
        gbc.setState(0xc0a3, 0x53aa, 0xc660, 0xaef0, 0xdfc3, 0x3aeb, 0x1, 0x0);
        gbc.writeMem(0x3aeb, { 0xde });
        gbc.writeMem(0xc0a3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x53aa);
        EXPECT(gbc.pc(), 0xc0a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0a3), 0xcb);
        EXPECT(gbc.readMem(0xc0a4), 0xce);
        // CB CE 03A7
        gbc.setState(0x96f2, 0x7a83, 0x86f0, 0x6380, 0x4eef, 0xb33, 0x0, 0x0);
        gbc.writeMem(0xb33, { 0x4f });
        gbc.writeMem(0x96f2, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x7a83);
        EXPECT(gbc.pc(), 0x96f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96f2), 0xcb);
        EXPECT(gbc.readMem(0x96f3), 0xce);
        // CB CE 03A8
        gbc.setState(0xec2, 0x9bf1, 0x1f60, 0xb24, 0xec2b, 0x4761, 0x0, 0x1);
        gbc.writeMem(0xec2, { 0xcb, 0xce });
        gbc.writeMem(0x4761, { 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x9bf1);
        EXPECT(gbc.pc(), 0xec4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB CE 03A9
        gbc.setState(0x8a2a, 0x7996, 0xe650, 0xb0ba, 0xa1e0, 0xbfde, 0x1, 0x0);
        gbc.writeMem(0x8a2a, { 0xcb, 0xce });
        gbc.writeMem(0xbfde, { 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x7996);
        EXPECT(gbc.pc(), 0x8a2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a2a), 0xcb);
        EXPECT(gbc.readMem(0x8a2b), 0xce);
        EXPECT(gbc.readMem(0xbfde), 0xaa);
        // CB CE 03AB
        gbc.setState(0x9733, 0x5a9e, 0x4030, 0x7356, 0xa000, 0xd088, 0x1, 0x0);
        gbc.writeMem(0x9733, { 0xcb, 0xce });
        gbc.writeMem(0xd088, { 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5a9e);
        EXPECT(gbc.pc(), 0x9735);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9733), 0xcb);
        EXPECT(gbc.readMem(0x9734), 0xce);
        EXPECT(gbc.readMem(0xd088), 0x1e);
        // CB CE 03AC
        gbc.setState(0x6bf6, 0xc61c, 0xa8d0, 0xa801, 0x7547, 0xe0ba, 0x1, 0x1);
        gbc.writeMem(0x6bf6, { 0xcb, 0xce });
        gbc.writeMem(0xe0ba, { 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc61c);
        EXPECT(gbc.pc(), 0x6bf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0ba), 0xa3);
        // CB CE 03AF
        gbc.setState(0x990d, 0xb018, 0x9ab0, 0xd8be, 0x9b3a, 0x26d6, 0x1, 0x1);
        gbc.writeMem(0x26d6, { 0x2f });
        gbc.writeMem(0x990d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb018);
        EXPECT(gbc.pc(), 0x990f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x990d), 0xcb);
        EXPECT(gbc.readMem(0x990e), 0xce);
        // CB CE 03B4
        gbc.setState(0xb6bd, 0xd869, 0x41d0, 0xbbcf, 0xb50a, 0xf536, 0x0, 0x0);
        gbc.writeMem(0xb6bd, { 0xcb, 0xce });
        gbc.writeMem(0xf536, { 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xd869);
        EXPECT(gbc.pc(), 0xb6bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6bd), 0xcb);
        EXPECT(gbc.readMem(0xb6be), 0xce);
        EXPECT(gbc.readMem(0xf536), 0x8a);
        // CB CE 03B8
        gbc.setState(0xa424, 0xcbab, 0xe5a0, 0x3cef, 0x72ef, 0x6a8d, 0x1, 0x1);
        gbc.writeMem(0x6a8d, { 0xf6 });
        gbc.writeMem(0xa424, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xcbab);
        EXPECT(gbc.pc(), 0xa426);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa424), 0xcb);
        EXPECT(gbc.readMem(0xa425), 0xce);
        // CB CE 03B9
        gbc.setState(0xd3ed, 0x4f5f, 0x2e10, 0x98b1, 0xfe54, 0xccea, 0x0, 0x0);
        gbc.writeMem(0xccea, { 0x71 });
        gbc.writeMem(0xd3ed, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x4f5f);
        EXPECT(gbc.pc(), 0xd3ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccea), 0x73);
        EXPECT(gbc.readMem(0xd3ed), 0xcb);
        EXPECT(gbc.readMem(0xd3ee), 0xce);
        // CB CE 03BA
        gbc.setState(0x6c1f, 0x4411, 0xa570, 0xf155, 0xf802, 0x3b9f, 0x1, 0x1);
        gbc.writeMem(0x3b9f, { 0x42 });
        gbc.writeMem(0x6c1f, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x4411);
        EXPECT(gbc.pc(), 0x6c21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB CE 03BB
        gbc.setState(0x1a15, 0x1c88, 0xb250, 0x62b4, 0xcdbe, 0x5a45, 0x0, 0x1);
        gbc.writeMem(0x1a15, { 0xcb, 0xce });
        gbc.writeMem(0x5a45, { 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x1c88);
        EXPECT(gbc.pc(), 0x1a17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 03BE
        gbc.setState(0x2897, 0xfb11, 0x1dd0, 0xd349, 0xadfa, 0xc270, 0x1, 0x1);
        gbc.writeMem(0x2897, { 0xcb, 0xce });
        gbc.writeMem(0xc270, { 0xa7 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xfb11);
        EXPECT(gbc.pc(), 0x2899);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc270), 0xa7);
        // CB CE 03C1
        gbc.setState(0x61b0, 0x88fb, 0x4400, 0xe7cf, 0x57a0, 0xb302, 0x0, 0x1);
        gbc.writeMem(0x61b0, { 0xcb, 0xce });
        gbc.writeMem(0xb302, { 0x1c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x88fb);
        EXPECT(gbc.pc(), 0x61b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb302), 0x1e);
        // CB CE 03C2
        gbc.setState(0x53d8, 0x5984, 0xde00, 0x2d6b, 0x4fe1, 0xb631, 0x1, 0x0);
        gbc.writeMem(0x53d8, { 0xcb, 0xce });
        gbc.writeMem(0xb631, { 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x5984);
        EXPECT(gbc.pc(), 0x53da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb631), 0x4a);
        // CB CE 03C3
        gbc.setState(0x974c, 0x7211, 0xeb0, 0xa332, 0x32c3, 0xb238, 0x1, 0x1);
        gbc.writeMem(0x974c, { 0xcb, 0xce });
        gbc.writeMem(0xb238, { 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x7211);
        EXPECT(gbc.pc(), 0x974e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x974c), 0xcb);
        EXPECT(gbc.readMem(0x974d), 0xce);
        EXPECT(gbc.readMem(0xb238), 0x86);
        // CB CE 03C4
        gbc.setState(0xe2dd, 0x9ead, 0x43e0, 0x6eb9, 0xd88f, 0x9da1, 0x0, 0x0);
        gbc.writeMem(0x9da1, { 0x57 });
        gbc.writeMem(0xe2dd, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9ead);
        EXPECT(gbc.pc(), 0xe2df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9da1), 0x57);
        EXPECT(gbc.readMem(0xe2dd), 0xcb);
        EXPECT(gbc.readMem(0xe2de), 0xce);
        // CB CE 03C5
        gbc.setState(0x5531, 0x921c, 0xd280, 0x1668, 0xd732, 0x15cc, 0x1, 0x1);
        gbc.writeMem(0x15cc, { 0x97 });
        gbc.writeMem(0x5531, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x921c);
        EXPECT(gbc.pc(), 0x5533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB CE 03C6
        gbc.setState(0x2c3e, 0xa39d, 0xbdd0, 0x603c, 0x4e6, 0x28ea, 0x1, 0x1);
        gbc.writeMem(0x28ea, { 0x3a });
        gbc.writeMem(0x2c3e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xa39d);
        EXPECT(gbc.pc(), 0x2c40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 03C7
        gbc.setState(0xc595, 0x1259, 0x9e40, 0xa7df, 0x1f58, 0xcf81, 0x0, 0x0);
        gbc.writeMem(0xc595, { 0xcb, 0xce });
        gbc.writeMem(0xcf81, { 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1259);
        EXPECT(gbc.pc(), 0xc597);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc595), 0xcb);
        EXPECT(gbc.readMem(0xc596), 0xce);
        EXPECT(gbc.readMem(0xcf81), 0x83);
        // CB CE 03C9
        gbc.setState(0x9269, 0x3116, 0xa3a0, 0xb982, 0xab54, 0x8612, 0x1, 0x1);
        gbc.writeMem(0x8612, { 0xca });
        gbc.writeMem(0x9269, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3116);
        EXPECT(gbc.pc(), 0x926b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8612), 0xca);
        EXPECT(gbc.readMem(0x9269), 0xcb);
        EXPECT(gbc.readMem(0x926a), 0xce);
        // CB CE 03CA
        gbc.setState(0x6d06, 0xd1f9, 0x8c10, 0xe6e7, 0xee3a, 0x93a4, 0x1, 0x0);
        gbc.writeMem(0x6d06, { 0xcb, 0xce });
        gbc.writeMem(0x93a4, { 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xd1f9);
        EXPECT(gbc.pc(), 0x6d08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x93a4), 0xb3);
        // CB CE 03CB
        gbc.setState(0x90d3, 0xa12c, 0x25d0, 0xe617, 0x73e6, 0x8ef1, 0x0, 0x0);
        gbc.writeMem(0x8ef1, { 0x2c });
        gbc.writeMem(0x90d3, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xa12c);
        EXPECT(gbc.pc(), 0x90d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ef1), 0x2e);
        EXPECT(gbc.readMem(0x90d3), 0xcb);
        EXPECT(gbc.readMem(0x90d4), 0xce);
        // CB CE 03D0
        gbc.setState(0x1f58, 0x2407, 0x9c80, 0x2174, 0x4eb, 0xea42, 0x1, 0x0);
        gbc.writeMem(0x1f58, { 0xcb, 0xce });
        gbc.writeMem(0xea42, { 0xe3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2407);
        EXPECT(gbc.pc(), 0x1f5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea42), 0xe3);
        // CB CE 03D1
        gbc.setState(0x96c8, 0xd5f1, 0xf8c0, 0x49ee, 0xe9ce, 0xc51f, 0x0, 0x0);
        gbc.writeMem(0x96c8, { 0xcb, 0xce });
        gbc.writeMem(0xc51f, { 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xd5f1);
        EXPECT(gbc.pc(), 0x96ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96c8), 0xcb);
        EXPECT(gbc.readMem(0x96c9), 0xce);
        EXPECT(gbc.readMem(0xc51f), 0x47);
        // CB CE 03D2
        gbc.setState(0x2b9c, 0x26b7, 0x94c0, 0x2ad4, 0xa8d7, 0xa6d3, 0x1, 0x1);
        gbc.writeMem(0x2b9c, { 0xcb, 0xce });
        gbc.writeMem(0xa6d3, { 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x26b7);
        EXPECT(gbc.pc(), 0x2b9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6d3), 0xb7);
        // CB CE 03D3
        gbc.setState(0x4735, 0xfff0, 0xf070, 0xb5a9, 0xf496, 0xe6f7, 0x1, 0x1);
        gbc.writeMem(0x4735, { 0xcb, 0xce });
        gbc.writeMem(0xe6f7, { 0x9e });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xfff0);
        EXPECT(gbc.pc(), 0x4737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6f7), 0x9e);
        // CB CE 03D4
        gbc.setState(0x946e, 0x73d7, 0x9870, 0x5e57, 0x148e, 0x4862, 0x1, 0x0);
        gbc.writeMem(0x4862, { 0xbb });
        gbc.writeMem(0x946e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x73d7);
        EXPECT(gbc.pc(), 0x9470);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x946e), 0xcb);
        EXPECT(gbc.readMem(0x946f), 0xce);
        // CB CE 03D5
        gbc.setState(0x908e, 0xafa9, 0xbee0, 0x2085, 0xf179, 0x63a8, 0x1, 0x1);
        gbc.writeMem(0x63a8, { 0xf7 });
        gbc.writeMem(0x908e, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xafa9);
        EXPECT(gbc.pc(), 0x9090);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x908e), 0xcb);
        EXPECT(gbc.readMem(0x908f), 0xce);
        // CB CE 03D6
        gbc.setState(0x35a2, 0x1277, 0x4750, 0xa7b9, 0xdd58, 0xe396, 0x1, 0x0);
        gbc.writeMem(0x35a2, { 0xcb, 0xce });
        gbc.writeMem(0xe396, { 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x1277);
        EXPECT(gbc.pc(), 0x35a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe396), 0x6a);
        // CB CE 03D8
        gbc.setState(0x789d, 0xc176, 0x2450, 0x6bf8, 0x38bd, 0x8e00, 0x0, 0x1);
        gbc.writeMem(0x789d, { 0xcb, 0xce });
        gbc.writeMem(0x8e00, { 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc176);
        EXPECT(gbc.pc(), 0x789f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e00), 0xcf);
        // CB CE 03D9
        gbc.setState(0xce1, 0x1259, 0x7ed0, 0xc481, 0x2f32, 0x4372, 0x0, 0x0);
        gbc.writeMem(0xce1, { 0xcb, 0xce });
        gbc.writeMem(0x4372, { 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1259);
        EXPECT(gbc.pc(), 0xce3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 03DA
        gbc.setState(0xde90, 0x9ccb, 0x700, 0x6ad5, 0x50e8, 0x6c3b, 0x0, 0x1);
        gbc.writeMem(0x6c3b, { 0xb2 });
        gbc.writeMem(0xde90, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9ccb);
        EXPECT(gbc.pc(), 0xde92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde90), 0xcb);
        EXPECT(gbc.readMem(0xde91), 0xce);
        // CB CE 03DC
        gbc.setState(0xcae, 0xeb1c, 0x7ec0, 0x5179, 0xecc3, 0xd1ef, 0x1, 0x1);
        gbc.writeMem(0xcae, { 0xcb, 0xce });
        gbc.writeMem(0xd1ef, { 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xeb1c);
        EXPECT(gbc.pc(), 0xcb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1ef), 0x86);
        // CB CE 03E0
        gbc.setState(0xe02d, 0xc4ad, 0xec10, 0x2cd0, 0x40ff, 0x3e46, 0x1, 0x1);
        gbc.writeMem(0x3e46, { 0x2a });
        gbc.writeMem(0xe02d, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xc4ad);
        EXPECT(gbc.pc(), 0xe02f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe02d), 0xcb);
        EXPECT(gbc.readMem(0xe02e), 0xce);
        // CB CE 03E2
        gbc.setState(0x54ac, 0x476f, 0x7290, 0x5179, 0x1a1b, 0x31dc, 0x1, 0x1);
        gbc.writeMem(0x31dc, { 0x12 });
        gbc.writeMem(0x54ac, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x476f);
        EXPECT(gbc.pc(), 0x54ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB CE 03E4
        gbc.setState(0xdc1b, 0x2d4c, 0xf490, 0x5aa0, 0x2c57, 0xae4b, 0x1, 0x1);
        gbc.writeMem(0xae4b, { 0x46 });
        gbc.writeMem(0xdc1b, { 0xcb, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2d4c);
        EXPECT(gbc.pc(), 0xdc1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae4b), 0x46);
        EXPECT(gbc.readMem(0xdc1b), 0xcb);
        EXPECT(gbc.readMem(0xdc1c), 0xce);
        // CB CE 03E5
        gbc.setState(0xbf0c, 0x7afe, 0x94e0, 0xf4e1, 0x93bc, 0xe18a, 0x0, 0x0);
        gbc.writeMem(0xbf0c, { 0xcb, 0xce });
        gbc.writeMem(0xe18a, { 0x51 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7afe);
        EXPECT(gbc.pc(), 0xbf0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf0c), 0xcb);
        EXPECT(gbc.readMem(0xbf0d), 0xce);
        EXPECT(gbc.readMem(0xe18a), 0x53);
    }
}
#endif
