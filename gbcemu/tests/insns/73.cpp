#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_73)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_73) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 73 0000
        gbc.setState(0x8411, 0x4814, 0xb550, 0xa493, 0x99b9, 0xc774, 0x0, 0x1);
        gbc.writeMem(0x8411, { 0x73 });
        gbc.writeMem(0xc774, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4814);
        EXPECT(gbc.pc(), 0x8412);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8411), 0x73);
        EXPECT(gbc.readMem(0xc774), 0xb9);
        // 73 0002
        gbc.setState(0x6ea, 0xccb7, 0x9e20, 0xe198, 0x966b, 0x8ea5, 0x0, 0x1);
        gbc.writeMem(0x6ea, { 0x73 });
        gbc.writeMem(0x8ea5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xccb7);
        EXPECT(gbc.pc(), 0x6eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ea5), 0x6b);
        // 73 0006
        gbc.setState(0x481e, 0xea0a, 0x6970, 0xb6ef, 0xe8e8, 0xfc33, 0x1, 0x0);
        gbc.writeMem(0x481e, { 0x73 });
        gbc.writeMem(0xfc33, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xea0a);
        EXPECT(gbc.pc(), 0x481f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfc33), 0xe8);
        // 73 0007
        gbc.setState(0xd84e, 0xe5ce, 0x9980, 0x9d9f, 0x9287, 0xd86e, 0x0, 0x0);
        gbc.writeMem(0xd84e, { 0x73 });
        gbc.writeMem(0xd86e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xe5ce);
        EXPECT(gbc.pc(), 0xd84f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd84e), 0x73);
        EXPECT(gbc.readMem(0xd86e), 0x87);
        // 73 0008
        gbc.setState(0x8494, 0xfdb5, 0x8090, 0xa72d, 0xb01, 0x8524, 0x1, 0x0);
        gbc.writeMem(0x8494, { 0x73 });
        gbc.writeMem(0x8524, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xfdb5);
        EXPECT(gbc.pc(), 0x8495);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8494), 0x73);
        EXPECT(gbc.readMem(0x8524), 0x1);
        // 73 0009
        gbc.setState(0x81f7, 0x8e0c, 0xd530, 0xa2b, 0xc4de, 0xb951, 0x1, 0x0);
        gbc.writeMem(0x81f7, { 0x73 });
        gbc.writeMem(0xb951, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8e0c);
        EXPECT(gbc.pc(), 0x81f8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81f7), 0x73);
        EXPECT(gbc.readMem(0xb951), 0xde);
        // 73 000B
        gbc.setState(0x43cc, 0xb2e8, 0x1c90, 0x2de7, 0xe35c, 0x8d4c, 0x0, 0x1);
        gbc.writeMem(0x43cc, { 0x73 });
        gbc.writeMem(0x8d4c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xb2e8);
        EXPECT(gbc.pc(), 0x43cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d4c), 0x5c);
        // 73 0012
        gbc.setState(0x3365, 0x73a5, 0x6ca0, 0xc5f1, 0x9560, 0x96d0, 0x1, 0x1);
        gbc.writeMem(0x3365, { 0x73 });
        gbc.writeMem(0x96d0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x73a5);
        EXPECT(gbc.pc(), 0x3366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96d0), 0x60);
        // 73 0013
        gbc.setState(0xec20, 0xdc52, 0xc40, 0x2fe8, 0x61f5, 0xe72b, 0x1, 0x1);
        gbc.writeMem(0xe72b, { 0x0 });
        gbc.writeMem(0xec20, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xdc52);
        EXPECT(gbc.pc(), 0xec21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe72b), 0xf5);
        EXPECT(gbc.readMem(0xec20), 0x73);
        // 73 0015
        gbc.setState(0x8e3f, 0x9fe1, 0x1fe0, 0x1fc4, 0x1e9, 0x895e, 0x1, 0x1);
        gbc.writeMem(0x895e, { 0x0 });
        gbc.writeMem(0x8e3f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x9fe1);
        EXPECT(gbc.pc(), 0x8e40);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x895e), 0xe9);
        EXPECT(gbc.readMem(0x8e3f), 0x73);
        // 73 001A
        gbc.setState(0xe036, 0x2f42, 0x6250, 0xda7f, 0x6a72, 0xdb18, 0x1, 0x0);
        gbc.writeMem(0xdb18, { 0x0 });
        gbc.writeMem(0xe036, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x2f42);
        EXPECT(gbc.pc(), 0xe037);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb18), 0x72);
        EXPECT(gbc.readMem(0xe036), 0x73);
        // 73 001B
        gbc.setState(0x9692, 0xa61, 0xd910, 0xcb30, 0x63a8, 0xb983, 0x0, 0x0);
        gbc.writeMem(0x9692, { 0x73 });
        gbc.writeMem(0xb983, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xa61);
        EXPECT(gbc.pc(), 0x9693);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9692), 0x73);
        EXPECT(gbc.readMem(0xb983), 0xa8);
        // 73 001D
        gbc.setState(0x4bd6, 0x18b4, 0xe8e0, 0xd7bc, 0x4406, 0xe16d, 0x1, 0x1);
        gbc.writeMem(0x4bd6, { 0x73 });
        gbc.writeMem(0xe16d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x18b4);
        EXPECT(gbc.pc(), 0x4bd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe16d), 0x6);
        // 73 001E
        gbc.setState(0xa568, 0x57ec, 0x8590, 0x6406, 0xbe9d, 0xa740, 0x1, 0x0);
        gbc.writeMem(0xa568, { 0x73 });
        gbc.writeMem(0xa740, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x57ec);
        EXPECT(gbc.pc(), 0xa569);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa568), 0x73);
        EXPECT(gbc.readMem(0xa740), 0x9d);
        // 73 0021
        gbc.setState(0x1016, 0xef3, 0x1f30, 0xec7c, 0x6109, 0xd78e, 0x0, 0x1);
        gbc.writeMem(0x1016, { 0x73 });
        gbc.writeMem(0xd78e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xef3);
        EXPECT(gbc.pc(), 0x1017);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd78e), 0x9);
        // 73 0026
        gbc.setState(0x8811, 0x2a, 0x740, 0x109c, 0x178b, 0xaccf, 0x0, 0x0);
        gbc.writeMem(0x8811, { 0x73 });
        gbc.writeMem(0xaccf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2a);
        EXPECT(gbc.pc(), 0x8812);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8811), 0x73);
        EXPECT(gbc.readMem(0xaccf), 0x8b);
        // 73 0028
        gbc.setState(0xeb4a, 0xa535, 0x1770, 0x20a0, 0x8605, 0xa3ac, 0x0, 0x0);
        gbc.writeMem(0xa3ac, { 0x0 });
        gbc.writeMem(0xeb4a, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xa535);
        EXPECT(gbc.pc(), 0xeb4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3ac), 0x5);
        EXPECT(gbc.readMem(0xeb4a), 0x73);
        // 73 002A
        gbc.setState(0x7f66, 0x68a6, 0x370, 0xb8ef, 0xeda3, 0xda74, 0x0, 0x0);
        gbc.writeMem(0x7f66, { 0x73 });
        gbc.writeMem(0xda74, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x68a6);
        EXPECT(gbc.pc(), 0x7f67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda74), 0xa3);
        // 73 002C
        gbc.setState(0x30e9, 0xfe60, 0x3760, 0x85ab, 0xe72b, 0xcda4, 0x1, 0x1);
        gbc.writeMem(0x30e9, { 0x73 });
        gbc.writeMem(0xcda4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xfe60);
        EXPECT(gbc.pc(), 0x30ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcda4), 0x2b);
        // 73 002F
        gbc.setState(0x85f3, 0x20a, 0xa470, 0xa550, 0x8a20, 0xca42, 0x0, 0x1);
        gbc.writeMem(0x85f3, { 0x73 });
        gbc.writeMem(0xca42, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x20a);
        EXPECT(gbc.pc(), 0x85f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f3), 0x73);
        EXPECT(gbc.readMem(0xca42), 0x20);
        // 73 0032
        gbc.setState(0xd559, 0x6fe7, 0x63a0, 0x70cb, 0x42fd, 0xb9dc, 0x0, 0x1);
        gbc.writeMem(0xb9dc, { 0x0 });
        gbc.writeMem(0xd559, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x6fe7);
        EXPECT(gbc.pc(), 0xd55a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9dc), 0xfd);
        EXPECT(gbc.readMem(0xd559), 0x73);
        // 73 0034
        gbc.setState(0xec86, 0x73c0, 0x4aa0, 0x6dfa, 0x870a, 0xcb17, 0x1, 0x1);
        gbc.writeMem(0xcb17, { 0x0 });
        gbc.writeMem(0xec86, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x73c0);
        EXPECT(gbc.pc(), 0xec87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb17), 0xa);
        EXPECT(gbc.readMem(0xec86), 0x73);
        // 73 0035
        gbc.setState(0x4db2, 0xff58, 0x6060, 0x6163, 0x49d9, 0xfb6b, 0x1, 0x1);
        gbc.writeMem(0x4db2, { 0x73 });
        gbc.writeMem(0xfb6b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xff58);
        EXPECT(gbc.pc(), 0x4db3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb6b), 0xd9);
        // 73 0036
        gbc.setState(0x4312, 0x91a6, 0x9660, 0xce38, 0xbd63, 0xca8a, 0x0, 0x1);
        gbc.writeMem(0x4312, { 0x73 });
        gbc.writeMem(0xca8a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x91a6);
        EXPECT(gbc.pc(), 0x4313);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca8a), 0x63);
        // 73 003A
        gbc.setState(0x3cb5, 0xe51f, 0x5c80, 0x44ef, 0xe1bf, 0xd5f0, 0x1, 0x0);
        gbc.writeMem(0x3cb5, { 0x73 });
        gbc.writeMem(0xd5f0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xe51f);
        EXPECT(gbc.pc(), 0x3cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5f0), 0xbf);
        // 73 003C
        gbc.setState(0xcdd, 0xb0c4, 0xa300, 0x7f77, 0xaf45, 0xead3, 0x1, 0x0);
        gbc.writeMem(0xcdd, { 0x73 });
        gbc.writeMem(0xead3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb0c4);
        EXPECT(gbc.pc(), 0xcde);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xead3), 0x45);
        // 73 003D
        gbc.setState(0xb100, 0x464c, 0xf9e0, 0x81d4, 0x18c9, 0xdacf, 0x1, 0x1);
        gbc.writeMem(0xb100, { 0x73 });
        gbc.writeMem(0xdacf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x464c);
        EXPECT(gbc.pc(), 0xb101);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb100), 0x73);
        EXPECT(gbc.readMem(0xdacf), 0xc9);
        // 73 0040
        gbc.setState(0x566b, 0xd3a4, 0x6440, 0xb668, 0x3a97, 0x882c, 0x0, 0x0);
        gbc.writeMem(0x566b, { 0x73 });
        gbc.writeMem(0x882c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xd3a4);
        EXPECT(gbc.pc(), 0x566c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x882c), 0x97);
        // 73 0041
        gbc.setState(0xb4e7, 0x2e89, 0x7ea0, 0x8222, 0x579f, 0x8542, 0x0, 0x0);
        gbc.writeMem(0x8542, { 0x0 });
        gbc.writeMem(0xb4e7, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x2e89);
        EXPECT(gbc.pc(), 0xb4e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8542), 0x9f);
        EXPECT(gbc.readMem(0xb4e7), 0x73);
        // 73 0043
        gbc.setState(0x9080, 0xf6e1, 0x9290, 0xa28a, 0x9978, 0x8e62, 0x0, 0x0);
        gbc.writeMem(0x8e62, { 0x0 });
        gbc.writeMem(0x9080, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xf6e1);
        EXPECT(gbc.pc(), 0x9081);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e62), 0x78);
        EXPECT(gbc.readMem(0x9080), 0x73);
        // 73 0044
        gbc.setState(0xc29c, 0xd74f, 0x6b60, 0xb8c0, 0x709c, 0x83c8, 0x1, 0x0);
        gbc.writeMem(0x83c8, { 0x0 });
        gbc.writeMem(0xc29c, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd74f);
        EXPECT(gbc.pc(), 0xc29d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83c8), 0x9c);
        EXPECT(gbc.readMem(0xc29c), 0x73);
        // 73 0045
        gbc.setState(0x1cc1, 0x57b7, 0x7d00, 0x8272, 0xa67, 0xef5f, 0x1, 0x1);
        gbc.writeMem(0x1cc1, { 0x73 });
        gbc.writeMem(0xef5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x57b7);
        EXPECT(gbc.pc(), 0x1cc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef5f), 0x67);
        // 73 0047
        gbc.setState(0xaa2d, 0xe420, 0x700, 0xc0fd, 0xdbf8, 0x851c, 0x0, 0x0);
        gbc.writeMem(0x851c, { 0x0 });
        gbc.writeMem(0xaa2d, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xe420);
        EXPECT(gbc.pc(), 0xaa2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x851c), 0xf8);
        EXPECT(gbc.readMem(0xaa2d), 0x73);
        // 73 0048
        gbc.setState(0x3898, 0xe2f8, 0x1190, 0x908, 0xcb02, 0xc6c2, 0x0, 0x1);
        gbc.writeMem(0x3898, { 0x73 });
        gbc.writeMem(0xc6c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe2f8);
        EXPECT(gbc.pc(), 0x3899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c2), 0x2);
        // 73 004A
        gbc.setState(0x9a91, 0xd5f5, 0xe30, 0x402, 0x22bc, 0xdcde, 0x1, 0x1);
        gbc.writeMem(0x9a91, { 0x73 });
        gbc.writeMem(0xdcde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd5f5);
        EXPECT(gbc.pc(), 0x9a92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a91), 0x73);
        EXPECT(gbc.readMem(0xdcde), 0xbc);
        // 73 004D
        gbc.setState(0xd169, 0x75b0, 0x8960, 0x1cc5, 0xa446, 0xab24, 0x0, 0x1);
        gbc.writeMem(0xab24, { 0x0 });
        gbc.writeMem(0xd169, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x75b0);
        EXPECT(gbc.pc(), 0xd16a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab24), 0x46);
        EXPECT(gbc.readMem(0xd169), 0x73);
        // 73 004F
        gbc.setState(0xe083, 0x53a1, 0xb550, 0xfec5, 0x594c, 0xcf84, 0x1, 0x0);
        gbc.writeMem(0xcf84, { 0x0 });
        gbc.writeMem(0xe083, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x53a1);
        EXPECT(gbc.pc(), 0xe084);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf84), 0x4c);
        EXPECT(gbc.readMem(0xe083), 0x73);
        // 73 0057
        gbc.setState(0x7ac8, 0xd4bf, 0x7830, 0x7df0, 0x2e35, 0x9431, 0x0, 0x0);
        gbc.writeMem(0x7ac8, { 0x73 });
        gbc.writeMem(0x9431, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd4bf);
        EXPECT(gbc.pc(), 0x7ac9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9431), 0x35);
        // 73 0058
        gbc.setState(0x7b6f, 0xc637, 0x5c0, 0x44d8, 0x2db, 0xcdc5, 0x0, 0x1);
        gbc.writeMem(0x7b6f, { 0x73 });
        gbc.writeMem(0xcdc5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xc637);
        EXPECT(gbc.pc(), 0x7b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdc5), 0xdb);
        // 73 0059
        gbc.setState(0xa02f, 0x3e15, 0xa620, 0xceea, 0x45f1, 0xd0ed, 0x0, 0x0);
        gbc.writeMem(0xa02f, { 0x73 });
        gbc.writeMem(0xd0ed, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x3e15);
        EXPECT(gbc.pc(), 0xa030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa02f), 0x73);
        EXPECT(gbc.readMem(0xd0ed), 0xf1);
        // 73 005A
        gbc.setState(0x6e96, 0xce2b, 0x78e0, 0x8f8c, 0xfc8b, 0x841c, 0x1, 0x1);
        gbc.writeMem(0x6e96, { 0x73 });
        gbc.writeMem(0x841c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xce2b);
        EXPECT(gbc.pc(), 0x6e97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x841c), 0x8b);
        // 73 005D
        gbc.setState(0xa19e, 0x8c7a, 0x4d20, 0x8ae2, 0xa879, 0x9f65, 0x1, 0x1);
        gbc.writeMem(0x9f65, { 0x0 });
        gbc.writeMem(0xa19e, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x8c7a);
        EXPECT(gbc.pc(), 0xa19f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f65), 0x79);
        EXPECT(gbc.readMem(0xa19e), 0x73);
        // 73 0062
        gbc.setState(0x2cd1, 0x543, 0x80, 0x822c, 0x907a, 0xca26, 0x0, 0x1);
        gbc.writeMem(0x2cd1, { 0x73 });
        gbc.writeMem(0xca26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x543);
        EXPECT(gbc.pc(), 0x2cd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca26), 0x7a);
        // 73 0064
        gbc.setState(0xe895, 0x4862, 0xe820, 0xaa0f, 0x6beb, 0x9afb, 0x0, 0x0);
        gbc.writeMem(0x9afb, { 0x0 });
        gbc.writeMem(0xe895, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x4862);
        EXPECT(gbc.pc(), 0xe896);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9afb), 0xeb);
        EXPECT(gbc.readMem(0xe895), 0x73);
        // 73 0065
        gbc.setState(0x400f, 0xf813, 0x22d0, 0xbd, 0xd1c2, 0xc11f, 0x1, 0x0);
        gbc.writeMem(0x400f, { 0x73 });
        gbc.writeMem(0xc11f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xf813);
        EXPECT(gbc.pc(), 0x4010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc11f), 0xc2);
        // 73 0066
        gbc.setState(0x1878, 0xec8b, 0x8f10, 0xc5cd, 0x460, 0xd12c, 0x1, 0x1);
        gbc.writeMem(0x1878, { 0x73 });
        gbc.writeMem(0xd12c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xec8b);
        EXPECT(gbc.pc(), 0x1879);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd12c), 0x60);
        // 73 0067
        gbc.setState(0x615b, 0x42b, 0x9270, 0x140b, 0xee91, 0xb2e6, 0x0, 0x0);
        gbc.writeMem(0x615b, { 0x73 });
        gbc.writeMem(0xb2e6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x42b);
        EXPECT(gbc.pc(), 0x615c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2e6), 0x91);
        // 73 006A
        gbc.setState(0xa0f2, 0xe597, 0xbc10, 0xcd29, 0xa566, 0xd5c2, 0x1, 0x0);
        gbc.writeMem(0xa0f2, { 0x73 });
        gbc.writeMem(0xd5c2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe597);
        EXPECT(gbc.pc(), 0xa0f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0f2), 0x73);
        EXPECT(gbc.readMem(0xd5c2), 0x66);
        // 73 006C
        gbc.setState(0x3f93, 0x64ce, 0x9e80, 0xa4cc, 0xfac0, 0xba19, 0x0, 0x1);
        gbc.writeMem(0x3f93, { 0x73 });
        gbc.writeMem(0xba19, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x64ce);
        EXPECT(gbc.pc(), 0x3f94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba19), 0xc0);
        // 73 006D
        gbc.setState(0x96de, 0x203e, 0x1c20, 0x7e67, 0xa019, 0xb440, 0x0, 0x0);
        gbc.writeMem(0x96de, { 0x73 });
        gbc.writeMem(0xb440, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x203e);
        EXPECT(gbc.pc(), 0x96df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96de), 0x73);
        EXPECT(gbc.readMem(0xb440), 0x19);
        // 73 006E
        gbc.setState(0x4d8, 0xc7ac, 0xbb60, 0xa204, 0xb0d8, 0xb8ac, 0x0, 0x1);
        gbc.writeMem(0x4d8, { 0x73 });
        gbc.writeMem(0xb8ac, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xc7ac);
        EXPECT(gbc.pc(), 0x4d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ac), 0xd8);
        // 73 0070
        gbc.setState(0x42f, 0x7f5d, 0xf820, 0x31a9, 0xb81d, 0xbad5, 0x1, 0x1);
        gbc.writeMem(0x42f, { 0x73 });
        gbc.writeMem(0xbad5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x7f5d);
        EXPECT(gbc.pc(), 0x430);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbad5), 0x1d);
        // 73 0071
        gbc.setState(0xb160, 0xfa80, 0xc730, 0xfe2, 0xc4bd, 0xa3a9, 0x0, 0x0);
        gbc.writeMem(0xa3a9, { 0x0 });
        gbc.writeMem(0xb160, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xfa80);
        EXPECT(gbc.pc(), 0xb161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3a9), 0xbd);
        EXPECT(gbc.readMem(0xb160), 0x73);
        // 73 0072
        gbc.setState(0x40c0, 0xa760, 0x8d60, 0x2264, 0xd321, 0xfe4b, 0x1, 0x1);
        gbc.writeMem(0x40c0, { 0x73 });
        gbc.writeMem(0xfe4b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xa760);
        EXPECT(gbc.pc(), 0x40c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe4b), 0x21);
        // 73 0073
        gbc.setState(0xd433, 0x429b, 0x2700, 0x2b76, 0x5384, 0x8900, 0x0, 0x0);
        gbc.writeMem(0x8900, { 0x0 });
        gbc.writeMem(0xd433, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x429b);
        EXPECT(gbc.pc(), 0xd434);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8900), 0x84);
        EXPECT(gbc.readMem(0xd433), 0x73);
        // 73 0076
        gbc.setState(0x73f3, 0x7822, 0x2170, 0xf052, 0xb640, 0x9b10, 0x1, 0x1);
        gbc.writeMem(0x73f3, { 0x73 });
        gbc.writeMem(0x9b10, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x7822);
        EXPECT(gbc.pc(), 0x73f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b10), 0x40);
        // 73 007D
        gbc.setState(0x6df2, 0x7232, 0xcdb0, 0xf07e, 0x9a37, 0xfdd4, 0x1, 0x0);
        gbc.writeMem(0x6df2, { 0x73 });
        gbc.writeMem(0xfdd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x7232);
        EXPECT(gbc.pc(), 0x6df3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfdd4), 0x37);
        // 73 0082
        gbc.setState(0x10f, 0xbe2c, 0x2ee0, 0xc023, 0x2b9a, 0xe140, 0x0, 0x1);
        gbc.writeMem(0x10f, { 0x73 });
        gbc.writeMem(0xe140, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xbe2c);
        EXPECT(gbc.pc(), 0x110);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe140), 0x9a);
        // 73 0083
        gbc.setState(0xeb10, 0x5743, 0xbb50, 0xe889, 0xa8, 0xc708, 0x0, 0x1);
        gbc.writeMem(0xc708, { 0x0 });
        gbc.writeMem(0xeb10, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5743);
        EXPECT(gbc.pc(), 0xeb11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc708), 0xa8);
        EXPECT(gbc.readMem(0xeb10), 0x73);
        // 73 0084
        gbc.setState(0xba0b, 0x6bd9, 0x41f0, 0x1ba, 0x5b3b, 0x9788, 0x1, 0x1);
        gbc.writeMem(0x9788, { 0x0 });
        gbc.writeMem(0xba0b, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6bd9);
        EXPECT(gbc.pc(), 0xba0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9788), 0x3b);
        EXPECT(gbc.readMem(0xba0b), 0x73);
        // 73 0085
        gbc.setState(0x5144, 0x2a1f, 0xaa0, 0xebf9, 0xfcdb, 0xadb1, 0x0, 0x1);
        gbc.writeMem(0x5144, { 0x73 });
        gbc.writeMem(0xadb1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2a1f);
        EXPECT(gbc.pc(), 0x5145);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadb1), 0xdb);
        // 73 0087
        gbc.setState(0x5dad, 0x6d67, 0x4a50, 0xdd81, 0xa806, 0xb2eb, 0x0, 0x1);
        gbc.writeMem(0x5dad, { 0x73 });
        gbc.writeMem(0xb2eb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6d67);
        EXPECT(gbc.pc(), 0x5dae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2eb), 0x6);
        // 73 008A
        gbc.setState(0x8e90, 0xf236, 0xe5a0, 0xc464, 0xf84f, 0xfea5, 0x1, 0x1);
        gbc.writeMem(0x8e90, { 0x73 });
        gbc.writeMem(0xfea5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xf236);
        EXPECT(gbc.pc(), 0x8e91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e90), 0x73);
        EXPECT(gbc.readMem(0xfea5), 0x4f);
        // 73 008C
        gbc.setState(0xa718, 0xaf85, 0x7500, 0x1e4, 0xd44e, 0xa2a7, 0x0, 0x1);
        gbc.writeMem(0xa2a7, { 0x0 });
        gbc.writeMem(0xa718, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xaf85);
        EXPECT(gbc.pc(), 0xa719);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2a7), 0x4e);
        EXPECT(gbc.readMem(0xa718), 0x73);
        // 73 008D
        gbc.setState(0x51d9, 0x71e9, 0x90c0, 0xd282, 0x4d54, 0xacbe, 0x1, 0x1);
        gbc.writeMem(0x51d9, { 0x73 });
        gbc.writeMem(0xacbe, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x71e9);
        EXPECT(gbc.pc(), 0x51da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacbe), 0x54);
        // 73 0090
        gbc.setState(0xadbc, 0x646f, 0x9e00, 0x2974, 0x47f3, 0x8310, 0x0, 0x0);
        gbc.writeMem(0x8310, { 0x0 });
        gbc.writeMem(0xadbc, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x646f);
        EXPECT(gbc.pc(), 0xadbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8310), 0xf3);
        EXPECT(gbc.readMem(0xadbc), 0x73);
        // 73 0092
        gbc.setState(0x1a72, 0xd4dc, 0x5030, 0xd22d, 0xd1d7, 0xf398, 0x1, 0x1);
        gbc.writeMem(0x1a72, { 0x73 });
        gbc.writeMem(0xf398, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd4dc);
        EXPECT(gbc.pc(), 0x1a73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf398), 0xd7);
        // 73 0095
        gbc.setState(0xe411, 0x3693, 0xdbe0, 0xd3d3, 0x91a4, 0x98ca, 0x1, 0x0);
        gbc.writeMem(0x98ca, { 0x0 });
        gbc.writeMem(0xe411, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x3693);
        EXPECT(gbc.pc(), 0xe412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98ca), 0xa4);
        EXPECT(gbc.readMem(0xe411), 0x73);
        // 73 0096
        gbc.setState(0xe3e9, 0xcda8, 0x3d10, 0x931a, 0x6a73, 0x88d3, 0x0, 0x0);
        gbc.writeMem(0x88d3, { 0x0 });
        gbc.writeMem(0xe3e9, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xcda8);
        EXPECT(gbc.pc(), 0xe3ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88d3), 0x73);
        EXPECT(gbc.readMem(0xe3e9), 0x73);
        // 73 0097
        gbc.setState(0xaae3, 0xac64, 0x1170, 0x9abc, 0x4a1b, 0xd442, 0x1, 0x1);
        gbc.writeMem(0xaae3, { 0x73 });
        gbc.writeMem(0xd442, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xac64);
        EXPECT(gbc.pc(), 0xaae4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaae3), 0x73);
        EXPECT(gbc.readMem(0xd442), 0x1b);
        // 73 0098
        gbc.setState(0x975e, 0x9597, 0x9280, 0x52f7, 0xab58, 0xad5f, 0x1, 0x0);
        gbc.writeMem(0x975e, { 0x73 });
        gbc.writeMem(0xad5f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x9597);
        EXPECT(gbc.pc(), 0x975f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x975e), 0x73);
        EXPECT(gbc.readMem(0xad5f), 0x58);
        // 73 0099
        gbc.setState(0xc9a8, 0x8cf9, 0xd000, 0xf367, 0x35, 0xd3a8, 0x1, 0x1);
        gbc.writeMem(0xc9a8, { 0x73 });
        gbc.writeMem(0xd3a8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8cf9);
        EXPECT(gbc.pc(), 0xc9a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a8), 0x73);
        EXPECT(gbc.readMem(0xd3a8), 0x35);
        // 73 009A
        gbc.setState(0xca24, 0x1dd3, 0xfad0, 0x5f2c, 0x7215, 0xf51a, 0x1, 0x1);
        gbc.writeMem(0xca24, { 0x73 });
        gbc.writeMem(0xf51a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1dd3);
        EXPECT(gbc.pc(), 0xca25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca24), 0x73);
        EXPECT(gbc.readMem(0xf51a), 0x15);
        // 73 009B
        gbc.setState(0x67b8, 0x7403, 0x4a00, 0x5c33, 0xb908, 0xdd1f, 0x0, 0x0);
        gbc.writeMem(0x67b8, { 0x73 });
        gbc.writeMem(0xdd1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7403);
        EXPECT(gbc.pc(), 0x67b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd1f), 0x8);
        // 73 009C
        gbc.setState(0x439f, 0xb9cf, 0x14b0, 0x35a9, 0xfca1, 0xdcd4, 0x0, 0x0);
        gbc.writeMem(0x439f, { 0x73 });
        gbc.writeMem(0xdcd4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb9cf);
        EXPECT(gbc.pc(), 0x43a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcd4), 0xa1);
        // 73 009E
        gbc.setState(0x12c2, 0xf8ed, 0xcdc0, 0x80ce, 0x5bea, 0xe759, 0x1, 0x0);
        gbc.writeMem(0x12c2, { 0x73 });
        gbc.writeMem(0xe759, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xf8ed);
        EXPECT(gbc.pc(), 0x12c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe759), 0xea);
        // 73 009F
        gbc.setState(0x8f99, 0x8097, 0x3120, 0xfd67, 0xf16f, 0x9934, 0x1, 0x0);
        gbc.writeMem(0x8f99, { 0x73 });
        gbc.writeMem(0x9934, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x8097);
        EXPECT(gbc.pc(), 0x8f9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f99), 0x73);
        EXPECT(gbc.readMem(0x9934), 0x6f);
        // 73 00A0
        gbc.setState(0x97d5, 0x878d, 0x5f10, 0x216f, 0xec86, 0xf467, 0x1, 0x0);
        gbc.writeMem(0x97d5, { 0x73 });
        gbc.writeMem(0xf467, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x878d);
        EXPECT(gbc.pc(), 0x97d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97d5), 0x73);
        EXPECT(gbc.readMem(0xf467), 0x86);
        // 73 00A1
        gbc.setState(0x43d2, 0x255a, 0x6110, 0x5930, 0x80e0, 0xcef4, 0x0, 0x1);
        gbc.writeMem(0x43d2, { 0x73 });
        gbc.writeMem(0xcef4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x255a);
        EXPECT(gbc.pc(), 0x43d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcef4), 0xe0);
        // 73 00A3
        gbc.setState(0x60e4, 0x3a6b, 0xda0, 0xb03b, 0x123e, 0xc8a0, 0x0, 0x1);
        gbc.writeMem(0x60e4, { 0x73 });
        gbc.writeMem(0xc8a0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3a6b);
        EXPECT(gbc.pc(), 0x60e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8a0), 0x3e);
        // 73 00A4
        gbc.setState(0xa31f, 0x2623, 0xbae0, 0x60cd, 0xf835, 0x9526, 0x1, 0x0);
        gbc.writeMem(0x9526, { 0x0 });
        gbc.writeMem(0xa31f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x2623);
        EXPECT(gbc.pc(), 0xa320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9526), 0x35);
        EXPECT(gbc.readMem(0xa31f), 0x73);
        // 73 00A6
        gbc.setState(0x902, 0xbd03, 0x7980, 0xff93, 0x45f7, 0xbe5a, 0x1, 0x0);
        gbc.writeMem(0x902, { 0x73 });
        gbc.writeMem(0xbe5a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xbd03);
        EXPECT(gbc.pc(), 0x903);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe5a), 0xf7);
        // 73 00A8
        gbc.setState(0x5ad8, 0xf459, 0x67d0, 0x5967, 0x7c7f, 0xfe88, 0x0, 0x1);
        gbc.writeMem(0x5ad8, { 0x73 });
        gbc.writeMem(0xfe88, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xf459);
        EXPECT(gbc.pc(), 0x5ad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe88), 0x7f);
        // 73 00A9
        gbc.setState(0x6728, 0x8c08, 0xbe60, 0xe9c, 0x29e0, 0xf4b5, 0x1, 0x0);
        gbc.writeMem(0x6728, { 0x73 });
        gbc.writeMem(0xf4b5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8c08);
        EXPECT(gbc.pc(), 0x6729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf4b5), 0xe0);
        // 73 00AD
        gbc.setState(0x40c6, 0xda61, 0xf5a0, 0x4927, 0x9339, 0x9765, 0x0, 0x0);
        gbc.writeMem(0x40c6, { 0x73 });
        gbc.writeMem(0x9765, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xda61);
        EXPECT(gbc.pc(), 0x40c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9765), 0x39);
        // 73 00AE
        gbc.setState(0x108c, 0xafab, 0x2f60, 0x9492, 0x26c2, 0xc76d, 0x1, 0x0);
        gbc.writeMem(0x108c, { 0x73 });
        gbc.writeMem(0xc76d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xafab);
        EXPECT(gbc.pc(), 0x108d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc76d), 0xc2);
        // 73 00AF
        gbc.setState(0x31ae, 0x4534, 0xbd0, 0xc07b, 0x1ec7, 0xeb46, 0x0, 0x0);
        gbc.writeMem(0x31ae, { 0x73 });
        gbc.writeMem(0xeb46, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4534);
        EXPECT(gbc.pc(), 0x31af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb46), 0xc7);
        // 73 00B0
        gbc.setState(0x1d1, 0xff97, 0x2fd0, 0xec35, 0xa446, 0xf7f2, 0x1, 0x0);
        gbc.writeMem(0x1d1, { 0x73 });
        gbc.writeMem(0xf7f2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xff97);
        EXPECT(gbc.pc(), 0x1d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf7f2), 0x46);
        // 73 00B8
        gbc.setState(0x457a, 0x7fc2, 0xec70, 0xc131, 0x8541, 0xabe4, 0x1, 0x0);
        gbc.writeMem(0x457a, { 0x73 });
        gbc.writeMem(0xabe4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7fc2);
        EXPECT(gbc.pc(), 0x457b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabe4), 0x41);
        // 73 00B9
        gbc.setState(0x4ee7, 0x83dd, 0xb730, 0x746, 0x6d25, 0xcfb8, 0x1, 0x0);
        gbc.writeMem(0x4ee7, { 0x73 });
        gbc.writeMem(0xcfb8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x83dd);
        EXPECT(gbc.pc(), 0x4ee8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfb8), 0x25);
        // 73 00BA
        gbc.setState(0x3ed2, 0xbd73, 0x8940, 0xae9a, 0xaf28, 0xaa57, 0x1, 0x0);
        gbc.writeMem(0x3ed2, { 0x73 });
        gbc.writeMem(0xaa57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xbd73);
        EXPECT(gbc.pc(), 0x3ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa57), 0x28);
        // 73 00BB
        gbc.setState(0x1496, 0x81ff, 0x8690, 0xc1e1, 0xc20a, 0xe601, 0x0, 0x1);
        gbc.writeMem(0x1496, { 0x73 });
        gbc.writeMem(0xe601, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x81ff);
        EXPECT(gbc.pc(), 0x1497);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe601), 0xa);
        // 73 00BE
        gbc.setState(0x8508, 0x61f2, 0x6910, 0x4b31, 0xd380, 0xa31e, 0x1, 0x0);
        gbc.writeMem(0x8508, { 0x73 });
        gbc.writeMem(0xa31e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x61f2);
        EXPECT(gbc.pc(), 0x8509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8508), 0x73);
        EXPECT(gbc.readMem(0xa31e), 0x80);
        // 73 00BF
        gbc.setState(0x1da5, 0x742f, 0xdd70, 0x68f8, 0x5307, 0xcb44, 0x0, 0x1);
        gbc.writeMem(0x1da5, { 0x73 });
        gbc.writeMem(0xcb44, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x742f);
        EXPECT(gbc.pc(), 0x1da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb44), 0x7);
        // 73 00C1
        gbc.setState(0xd0c1, 0xdfba, 0xc810, 0xfc5d, 0x3551, 0x961f, 0x0, 0x1);
        gbc.writeMem(0x961f, { 0x0 });
        gbc.writeMem(0xd0c1, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xdfba);
        EXPECT(gbc.pc(), 0xd0c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x961f), 0x51);
        EXPECT(gbc.readMem(0xd0c1), 0x73);
        // 73 00C3
        gbc.setState(0xcaec, 0x4d73, 0x6a50, 0x4429, 0xdbe1, 0xf0a9, 0x1, 0x1);
        gbc.writeMem(0xcaec, { 0x73 });
        gbc.writeMem(0xf0a9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4d73);
        EXPECT(gbc.pc(), 0xcaed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcaec), 0x73);
        EXPECT(gbc.readMem(0xf0a9), 0xe1);
        // 73 00CA
        gbc.setState(0xd6de, 0xde1e, 0x6bb0, 0x5442, 0x5bbb, 0xe9ca, 0x1, 0x0);
        gbc.writeMem(0xd6de, { 0x73 });
        gbc.writeMem(0xe9ca, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xde1e);
        EXPECT(gbc.pc(), 0xd6df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6de), 0x73);
        EXPECT(gbc.readMem(0xe9ca), 0xbb);
        // 73 00CC
        gbc.setState(0xebf9, 0x6e0d, 0x98e0, 0x3660, 0x6b61, 0xbda4, 0x1, 0x0);
        gbc.writeMem(0xbda4, { 0x0 });
        gbc.writeMem(0xebf9, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6e0d);
        EXPECT(gbc.pc(), 0xebfa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbda4), 0x61);
        EXPECT(gbc.readMem(0xebf9), 0x73);
        // 73 00CE
        gbc.setState(0xb244, 0x1a7a, 0xfb80, 0xe806, 0x123, 0xf801, 0x1, 0x0);
        gbc.writeMem(0xb244, { 0x73 });
        gbc.writeMem(0xf801, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x1a7a);
        EXPECT(gbc.pc(), 0xb245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb244), 0x73);
        EXPECT(gbc.readMem(0xf801), 0x23);
        // 73 00D0
        gbc.setState(0xa413, 0xa025, 0xa10, 0x7ce2, 0xfa94, 0xbe43, 0x1, 0x1);
        gbc.writeMem(0xa413, { 0x73 });
        gbc.writeMem(0xbe43, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xa025);
        EXPECT(gbc.pc(), 0xa414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa413), 0x73);
        EXPECT(gbc.readMem(0xbe43), 0x94);
        // 73 00D1
        gbc.setState(0x2405, 0xeb4c, 0x65c0, 0x7f07, 0xb046, 0xb86d, 0x0, 0x1);
        gbc.writeMem(0x2405, { 0x73 });
        gbc.writeMem(0xb86d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xeb4c);
        EXPECT(gbc.pc(), 0x2406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb86d), 0x46);
        // 73 00D4
        gbc.setState(0xaffb, 0x6b3c, 0xae90, 0xf15c, 0xd9c6, 0xb2bb, 0x0, 0x0);
        gbc.writeMem(0xaffb, { 0x73 });
        gbc.writeMem(0xb2bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6b3c);
        EXPECT(gbc.pc(), 0xaffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaffb), 0x73);
        EXPECT(gbc.readMem(0xb2bb), 0xc6);
        // 73 00D5
        gbc.setState(0xc86d, 0xc48f, 0x2290, 0xefe8, 0xffb, 0x999a, 0x0, 0x1);
        gbc.writeMem(0x999a, { 0x0 });
        gbc.writeMem(0xc86d, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc48f);
        EXPECT(gbc.pc(), 0xc86e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x999a), 0xfb);
        EXPECT(gbc.readMem(0xc86d), 0x73);
        // 73 00D7
        gbc.setState(0xdde4, 0x2650, 0x5b80, 0xd2b1, 0x4a9, 0x83df, 0x1, 0x1);
        gbc.writeMem(0x83df, { 0x0 });
        gbc.writeMem(0xdde4, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2650);
        EXPECT(gbc.pc(), 0xdde5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83df), 0xa9);
        EXPECT(gbc.readMem(0xdde4), 0x73);
        // 73 00D9
        gbc.setState(0x85c2, 0xce44, 0x3c00, 0x3e16, 0x60f4, 0x88c8, 0x1, 0x1);
        gbc.writeMem(0x85c2, { 0x73 });
        gbc.writeMem(0x88c8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xce44);
        EXPECT(gbc.pc(), 0x85c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85c2), 0x73);
        EXPECT(gbc.readMem(0x88c8), 0xf4);
        // 73 00DA
        gbc.setState(0xa33f, 0x213, 0x1a30, 0x3a4c, 0xee70, 0x85f1, 0x1, 0x0);
        gbc.writeMem(0x85f1, { 0x0 });
        gbc.writeMem(0xa33f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x213);
        EXPECT(gbc.pc(), 0xa340);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85f1), 0x70);
        EXPECT(gbc.readMem(0xa33f), 0x73);
        // 73 00DD
        gbc.setState(0x22b1, 0xee5b, 0xc3d0, 0x875a, 0xc125, 0x996b, 0x0, 0x1);
        gbc.writeMem(0x22b1, { 0x73 });
        gbc.writeMem(0x996b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xee5b);
        EXPECT(gbc.pc(), 0x22b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x996b), 0x25);
        // 73 00DE
        gbc.setState(0x3d80, 0xc35e, 0xe1c0, 0x7e72, 0x33ec, 0xac33, 0x0, 0x1);
        gbc.writeMem(0x3d80, { 0x73 });
        gbc.writeMem(0xac33, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc35e);
        EXPECT(gbc.pc(), 0x3d81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac33), 0xec);
        // 73 00DF
        gbc.setState(0x3f14, 0xba17, 0xc130, 0x549b, 0x2dbb, 0xb980, 0x1, 0x1);
        gbc.writeMem(0x3f14, { 0x73 });
        gbc.writeMem(0xb980, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xba17);
        EXPECT(gbc.pc(), 0x3f15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb980), 0xbb);
        // 73 00E2
        gbc.setState(0xbad6, 0x7377, 0x87a0, 0x249, 0xa870, 0x8d50, 0x1, 0x0);
        gbc.writeMem(0x8d50, { 0x0 });
        gbc.writeMem(0xbad6, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7377);
        EXPECT(gbc.pc(), 0xbad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d50), 0x70);
        EXPECT(gbc.readMem(0xbad6), 0x73);
        // 73 00E5
        gbc.setState(0x61b9, 0xe, 0x5740, 0x5a4d, 0x8f7b, 0xbb2b, 0x0, 0x1);
        gbc.writeMem(0x61b9, { 0x73 });
        gbc.writeMem(0xbb2b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xe);
        EXPECT(gbc.pc(), 0x61ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb2b), 0x7b);
        // 73 00E7
        gbc.setState(0x6cf6, 0x8dab, 0xaa60, 0xe2c9, 0x63d4, 0xba82, 0x0, 0x1);
        gbc.writeMem(0x6cf6, { 0x73 });
        gbc.writeMem(0xba82, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x8dab);
        EXPECT(gbc.pc(), 0x6cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba82), 0xd4);
        // 73 00E8
        gbc.setState(0xa745, 0xae61, 0x9250, 0xcc97, 0x2fa4, 0x8ef3, 0x1, 0x1);
        gbc.writeMem(0x8ef3, { 0x0 });
        gbc.writeMem(0xa745, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xae61);
        EXPECT(gbc.pc(), 0xa746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ef3), 0xa4);
        EXPECT(gbc.readMem(0xa745), 0x73);
        // 73 00EC
        gbc.setState(0xb154, 0x925, 0xb40, 0x25ab, 0xf729, 0xbb36, 0x1, 0x1);
        gbc.writeMem(0xb154, { 0x73 });
        gbc.writeMem(0xbb36, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x925);
        EXPECT(gbc.pc(), 0xb155);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb154), 0x73);
        EXPECT(gbc.readMem(0xbb36), 0x29);
        // 73 00ED
        gbc.setState(0x79ee, 0xd712, 0xee20, 0x213d, 0x34e4, 0xa844, 0x1, 0x1);
        gbc.writeMem(0x79ee, { 0x73 });
        gbc.writeMem(0xa844, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xd712);
        EXPECT(gbc.pc(), 0x79ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa844), 0xe4);
        // 73 00EF
        gbc.setState(0x7ae8, 0x733d, 0xb790, 0x935e, 0x538d, 0x92e8, 0x1, 0x1);
        gbc.writeMem(0x7ae8, { 0x73 });
        gbc.writeMem(0x92e8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x733d);
        EXPECT(gbc.pc(), 0x7ae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92e8), 0x8d);
        // 73 00F4
        gbc.setState(0x3f87, 0x34bd, 0x44f0, 0x94a0, 0xb1dd, 0x938a, 0x1, 0x1);
        gbc.writeMem(0x3f87, { 0x73 });
        gbc.writeMem(0x938a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x34bd);
        EXPECT(gbc.pc(), 0x3f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x938a), 0xdd);
        // 73 00F6
        gbc.setState(0x9831, 0x7947, 0xe750, 0x3828, 0xa167, 0x9e0b, 0x0, 0x0);
        gbc.writeMem(0x9831, { 0x73 });
        gbc.writeMem(0x9e0b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7947);
        EXPECT(gbc.pc(), 0x9832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9831), 0x73);
        EXPECT(gbc.readMem(0x9e0b), 0x67);
        // 73 00F9
        gbc.setState(0x9ee1, 0x8337, 0xc1f0, 0xd8bb, 0x9ddf, 0xeaa1, 0x0, 0x0);
        gbc.writeMem(0x9ee1, { 0x73 });
        gbc.writeMem(0xeaa1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x8337);
        EXPECT(gbc.pc(), 0x9ee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ee1), 0x73);
        EXPECT(gbc.readMem(0xeaa1), 0xdf);
        // 73 00FC
        gbc.setState(0x8a20, 0xd444, 0x3010, 0xfc6c, 0xc302, 0xbf1c, 0x1, 0x1);
        gbc.writeMem(0x8a20, { 0x73 });
        gbc.writeMem(0xbf1c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd444);
        EXPECT(gbc.pc(), 0x8a21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a20), 0x73);
        EXPECT(gbc.readMem(0xbf1c), 0x2);
        // 73 00FD
        gbc.setState(0x8db6, 0xe6b4, 0x3a10, 0x1ee4, 0x74f, 0x8bf8, 0x0, 0x1);
        gbc.writeMem(0x8bf8, { 0x0 });
        gbc.writeMem(0x8db6, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xe6b4);
        EXPECT(gbc.pc(), 0x8db7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bf8), 0x4f);
        EXPECT(gbc.readMem(0x8db6), 0x73);
        // 73 00FE
        gbc.setState(0x1acf, 0x49ae, 0x8f70, 0x1ee9, 0xc170, 0x8d55, 0x1, 0x1);
        gbc.writeMem(0x1acf, { 0x73 });
        gbc.writeMem(0x8d55, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x49ae);
        EXPECT(gbc.pc(), 0x1ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d55), 0x70);
        // 73 00FF
        gbc.setState(0x62ce, 0x5e24, 0x8e10, 0x7701, 0xa2d8, 0xffea, 0x0, 0x1);
        gbc.writeMem(0x62ce, { 0x73 });
        gbc.writeMem(0xffea, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x5e24);
        EXPECT(gbc.pc(), 0x62cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xffea), 0xd8);
        // 73 0101
        gbc.setState(0xb97c, 0x550d, 0x3bf0, 0xf2e6, 0xb2b5, 0x90ae, 0x1, 0x0);
        gbc.writeMem(0x90ae, { 0x0 });
        gbc.writeMem(0xb97c, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x550d);
        EXPECT(gbc.pc(), 0xb97d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90ae), 0xb5);
        EXPECT(gbc.readMem(0xb97c), 0x73);
        // 73 0102
        gbc.setState(0xa37, 0xa06b, 0x8da0, 0x7619, 0xde87, 0xb68a, 0x1, 0x1);
        gbc.writeMem(0xa37, { 0x73 });
        gbc.writeMem(0xb68a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa06b);
        EXPECT(gbc.pc(), 0xa38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb68a), 0x87);
        // 73 0106
        gbc.setState(0xb47a, 0xef81, 0x550, 0xfa12, 0x1426, 0x998b, 0x1, 0x0);
        gbc.writeMem(0x998b, { 0x0 });
        gbc.writeMem(0xb47a, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xef81);
        EXPECT(gbc.pc(), 0xb47b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x998b), 0x26);
        EXPECT(gbc.readMem(0xb47a), 0x73);
        // 73 010A
        gbc.setState(0xd402, 0xa6ca, 0xe590, 0x1929, 0xf5c0, 0x80c3, 0x0, 0x0);
        gbc.writeMem(0x80c3, { 0x0 });
        gbc.writeMem(0xd402, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xa6ca);
        EXPECT(gbc.pc(), 0xd403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80c3), 0xc0);
        EXPECT(gbc.readMem(0xd402), 0x73);
        // 73 010B
        gbc.setState(0x4374, 0xdc72, 0x150, 0x8573, 0xe148, 0xd7b1, 0x0, 0x1);
        gbc.writeMem(0x4374, { 0x73 });
        gbc.writeMem(0xd7b1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xdc72);
        EXPECT(gbc.pc(), 0x4375);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7b1), 0x48);
        // 73 010C
        gbc.setState(0xd7dd, 0x5a23, 0x3e70, 0x9d96, 0xcb51, 0xece1, 0x0, 0x0);
        gbc.writeMem(0xd7dd, { 0x73 });
        gbc.writeMem(0xece1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x5a23);
        EXPECT(gbc.pc(), 0xd7de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7dd), 0x73);
        EXPECT(gbc.readMem(0xece1), 0x51);
        // 73 010F
        gbc.setState(0x4dfb, 0x7144, 0x9b40, 0xffe4, 0x635f, 0xb90f, 0x1, 0x0);
        gbc.writeMem(0x4dfb, { 0x73 });
        gbc.writeMem(0xb90f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x7144);
        EXPECT(gbc.pc(), 0x4dfc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb90f), 0x5f);
        // 73 0110
        gbc.setState(0xded6, 0xb5c3, 0x9340, 0xfd42, 0x4348, 0xff25, 0x0, 0x1);
        gbc.writeMem(0xded6, { 0x73 });
        gbc.writeMem(0xff25, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xb5c3);
        EXPECT(gbc.pc(), 0xded7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xded6), 0x73);
        EXPECT(gbc.readMem(0xff25), 0x48);
        // 73 0111
        gbc.setState(0x6caf, 0xb98, 0xb5b0, 0xd318, 0x579e, 0xe7dd, 0x1, 0x0);
        gbc.writeMem(0x6caf, { 0x73 });
        gbc.writeMem(0xe7dd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb98);
        EXPECT(gbc.pc(), 0x6cb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7dd), 0x9e);
        // 73 0113
        gbc.setState(0xe1be, 0x88ac, 0x6fc0, 0xbe1d, 0x5600, 0xd74a, 0x1, 0x0);
        gbc.writeMem(0xd74a, { 0x0 });
        gbc.writeMem(0xe1be, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x88ac);
        EXPECT(gbc.pc(), 0xe1bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd74a), 0x0);
        EXPECT(gbc.readMem(0xe1be), 0x73);
        // 73 0115
        gbc.setState(0xcf50, 0xbee0, 0x2ba0, 0x7fb, 0xa352, 0xb636, 0x0, 0x1);
        gbc.writeMem(0xb636, { 0x0 });
        gbc.writeMem(0xcf50, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xbee0);
        EXPECT(gbc.pc(), 0xcf51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb636), 0x52);
        EXPECT(gbc.readMem(0xcf50), 0x73);
        // 73 0119
        gbc.setState(0x54ce, 0x6b5b, 0x6b20, 0x2d4f, 0xd4f7, 0xbe62, 0x0, 0x0);
        gbc.writeMem(0x54ce, { 0x73 });
        gbc.writeMem(0xbe62, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x6b5b);
        EXPECT(gbc.pc(), 0x54cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe62), 0xf7);
        // 73 011A
        gbc.setState(0xc240, 0x8102, 0x5170, 0xafcd, 0x91f7, 0xf7e2, 0x1, 0x1);
        gbc.writeMem(0xc240, { 0x73 });
        gbc.writeMem(0xf7e2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8102);
        EXPECT(gbc.pc(), 0xc241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc240), 0x73);
        EXPECT(gbc.readMem(0xf7e2), 0xf7);
        // 73 011C
        gbc.setState(0x1055, 0x3ef8, 0xe8e0, 0x917f, 0xd6, 0xd291, 0x0, 0x1);
        gbc.writeMem(0x1055, { 0x73 });
        gbc.writeMem(0xd291, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3ef8);
        EXPECT(gbc.pc(), 0x1056);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd291), 0xd6);
        // 73 011E
        gbc.setState(0xb49e, 0xfbb, 0x1d50, 0x4e7b, 0x33e8, 0xa6ab, 0x0, 0x1);
        gbc.writeMem(0xa6ab, { 0x0 });
        gbc.writeMem(0xb49e, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xfbb);
        EXPECT(gbc.pc(), 0xb49f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6ab), 0xe8);
        EXPECT(gbc.readMem(0xb49e), 0x73);
        // 73 011F
        gbc.setState(0x1404, 0xf8f7, 0x5710, 0x5fe9, 0x8146, 0x87aa, 0x0, 0x1);
        gbc.writeMem(0x1404, { 0x73 });
        gbc.writeMem(0x87aa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf8f7);
        EXPECT(gbc.pc(), 0x1405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87aa), 0x46);
        // 73 0122
        gbc.setState(0x88e0, 0xd8cf, 0xdc20, 0x92e6, 0xf84a, 0xf52d, 0x1, 0x0);
        gbc.writeMem(0x88e0, { 0x73 });
        gbc.writeMem(0xf52d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xd8cf);
        EXPECT(gbc.pc(), 0x88e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88e0), 0x73);
        EXPECT(gbc.readMem(0xf52d), 0x4a);
        // 73 0123
        gbc.setState(0x2c55, 0xb93d, 0x2160, 0x6e77, 0x3d46, 0xa2aa, 0x0, 0x0);
        gbc.writeMem(0x2c55, { 0x73 });
        gbc.writeMem(0xa2aa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xb93d);
        EXPECT(gbc.pc(), 0x2c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2aa), 0x46);
        // 73 0127
        gbc.setState(0x54f3, 0x37fa, 0x9d00, 0x2501, 0x3e2f, 0x83b6, 0x1, 0x0);
        gbc.writeMem(0x54f3, { 0x73 });
        gbc.writeMem(0x83b6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x37fa);
        EXPECT(gbc.pc(), 0x54f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83b6), 0x2f);
        // 73 012A
        gbc.setState(0xe87e, 0xda1d, 0x3b50, 0xb2fb, 0x8cb8, 0xe5a2, 0x1, 0x0);
        gbc.writeMem(0xe5a2, { 0x0 });
        gbc.writeMem(0xe87e, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xda1d);
        EXPECT(gbc.pc(), 0xe87f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5a2), 0xb8);
        EXPECT(gbc.readMem(0xe87e), 0x73);
        // 73 012B
        gbc.setState(0xc760, 0x406d, 0xe440, 0x7e89, 0x6b0, 0xb42d, 0x1, 0x0);
        gbc.writeMem(0xb42d, { 0x0 });
        gbc.writeMem(0xc760, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x406d);
        EXPECT(gbc.pc(), 0xc761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb42d), 0xb0);
        EXPECT(gbc.readMem(0xc760), 0x73);
        // 73 012C
        gbc.setState(0xc991, 0xebf, 0xb90, 0xba1d, 0xc959, 0x8eba, 0x1, 0x0);
        gbc.writeMem(0x8eba, { 0x0 });
        gbc.writeMem(0xc991, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xebf);
        EXPECT(gbc.pc(), 0xc992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eba), 0x59);
        EXPECT(gbc.readMem(0xc991), 0x73);
        // 73 012E
        gbc.setState(0xe37a, 0x6712, 0x4840, 0xff84, 0xc829, 0xd2ee, 0x0, 0x0);
        gbc.writeMem(0xd2ee, { 0x0 });
        gbc.writeMem(0xe37a, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x6712);
        EXPECT(gbc.pc(), 0xe37b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ee), 0x29);
        EXPECT(gbc.readMem(0xe37a), 0x73);
        // 73 012F
        gbc.setState(0xeac8, 0xc3b7, 0x40f0, 0x3a78, 0x79ee, 0x9997, 0x1, 0x1);
        gbc.writeMem(0x9997, { 0x0 });
        gbc.writeMem(0xeac8, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc3b7);
        EXPECT(gbc.pc(), 0xeac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9997), 0xee);
        EXPECT(gbc.readMem(0xeac8), 0x73);
        // 73 0131
        gbc.setState(0x54fe, 0x6936, 0x9440, 0x7afc, 0xddeb, 0xd463, 0x1, 0x1);
        gbc.writeMem(0x54fe, { 0x73 });
        gbc.writeMem(0xd463, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6936);
        EXPECT(gbc.pc(), 0x54ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd463), 0xeb);
        // 73 0132
        gbc.setState(0xa9da, 0x7aa5, 0xfa20, 0x8bae, 0x12f3, 0xf554, 0x1, 0x1);
        gbc.writeMem(0xa9da, { 0x73 });
        gbc.writeMem(0xf554, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7aa5);
        EXPECT(gbc.pc(), 0xa9db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9da), 0x73);
        EXPECT(gbc.readMem(0xf554), 0xf3);
        // 73 0137
        gbc.setState(0xc96f, 0x2dc1, 0xbe40, 0xe52, 0xfd71, 0x9532, 0x1, 0x0);
        gbc.writeMem(0x9532, { 0x0 });
        gbc.writeMem(0xc96f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2dc1);
        EXPECT(gbc.pc(), 0xc970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9532), 0x71);
        EXPECT(gbc.readMem(0xc96f), 0x73);
        // 73 013A
        gbc.setState(0x5ee5, 0xe802, 0xc720, 0x5e37, 0xcd73, 0x9c84, 0x1, 0x0);
        gbc.writeMem(0x5ee5, { 0x73 });
        gbc.writeMem(0x9c84, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xe802);
        EXPECT(gbc.pc(), 0x5ee6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c84), 0x73);
        // 73 013D
        gbc.setState(0xa06b, 0x4218, 0x52e0, 0xf2ae, 0xc004, 0x9722, 0x1, 0x0);
        gbc.writeMem(0x9722, { 0x0 });
        gbc.writeMem(0xa06b, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4218);
        EXPECT(gbc.pc(), 0xa06c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9722), 0x4);
        EXPECT(gbc.readMem(0xa06b), 0x73);
        // 73 0141
        gbc.setState(0x92c7, 0x6d1c, 0x3f90, 0x5ea4, 0x1a25, 0x8317, 0x0, 0x0);
        gbc.writeMem(0x8317, { 0x0 });
        gbc.writeMem(0x92c7, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6d1c);
        EXPECT(gbc.pc(), 0x92c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8317), 0x25);
        EXPECT(gbc.readMem(0x92c7), 0x73);
        // 73 0142
        gbc.setState(0x60fe, 0xf79d, 0x5390, 0xa729, 0x3aab, 0x85cc, 0x0, 0x1);
        gbc.writeMem(0x60fe, { 0x73 });
        gbc.writeMem(0x85cc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xf79d);
        EXPECT(gbc.pc(), 0x60ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85cc), 0xab);
        // 73 0143
        gbc.setState(0x4649, 0xca46, 0x3310, 0xa4c3, 0xd88a, 0x8e2f, 0x1, 0x0);
        gbc.writeMem(0x4649, { 0x73 });
        gbc.writeMem(0x8e2f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xca46);
        EXPECT(gbc.pc(), 0x464a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e2f), 0x8a);
        // 73 0149
        gbc.setState(0x9859, 0x619c, 0x1350, 0xa315, 0x265d, 0x9c47, 0x0, 0x1);
        gbc.writeMem(0x9859, { 0x73 });
        gbc.writeMem(0x9c47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x619c);
        EXPECT(gbc.pc(), 0x985a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9859), 0x73);
        EXPECT(gbc.readMem(0x9c47), 0x5d);
        // 73 014B
        gbc.setState(0xfcd, 0x5843, 0x5ac0, 0xe454, 0x5a81, 0xdea5, 0x0, 0x1);
        gbc.writeMem(0xfcd, { 0x73 });
        gbc.writeMem(0xdea5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5843);
        EXPECT(gbc.pc(), 0xfce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdea5), 0x81);
        // 73 014C
        gbc.setState(0x4a, 0xdec, 0x690, 0x35c0, 0xa88d, 0xebb9, 0x0, 0x1);
        gbc.writeMem(0x4a, { 0x73 });
        gbc.writeMem(0xebb9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xdec);
        EXPECT(gbc.pc(), 0x4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebb9), 0x8d);
        // 73 014E
        gbc.setState(0xcbe5, 0xe52a, 0x3d20, 0x757e, 0x18af, 0x8e12, 0x1, 0x0);
        gbc.writeMem(0x8e12, { 0x0 });
        gbc.writeMem(0xcbe5, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xe52a);
        EXPECT(gbc.pc(), 0xcbe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e12), 0xaf);
        EXPECT(gbc.readMem(0xcbe5), 0x73);
        // 73 014F
        gbc.setState(0xc7df, 0x5ea3, 0x1400, 0xb73f, 0xd9ae, 0xf972, 0x1, 0x0);
        gbc.writeMem(0xc7df, { 0x73 });
        gbc.writeMem(0xf972, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5ea3);
        EXPECT(gbc.pc(), 0xc7e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7df), 0x73);
        EXPECT(gbc.readMem(0xf972), 0xae);
        // 73 0150
        gbc.setState(0x4a, 0xb7e0, 0xdac0, 0xa58d, 0xd555, 0xf793, 0x0, 0x1);
        gbc.writeMem(0x4a, { 0x73 });
        gbc.writeMem(0xf793, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb7e0);
        EXPECT(gbc.pc(), 0x4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf793), 0x55);
        // 73 0153
        gbc.setState(0x149a, 0x51e4, 0x8100, 0xeee0, 0xd9a9, 0xaf1d, 0x0, 0x1);
        gbc.writeMem(0x149a, { 0x73 });
        gbc.writeMem(0xaf1d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x51e4);
        EXPECT(gbc.pc(), 0x149b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf1d), 0xa9);
        // 73 0154
        gbc.setState(0xbec9, 0x6eec, 0x1000, 0x4fce, 0xf815, 0xf784, 0x1, 0x1);
        gbc.writeMem(0xbec9, { 0x73 });
        gbc.writeMem(0xf784, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6eec);
        EXPECT(gbc.pc(), 0xbeca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbec9), 0x73);
        EXPECT(gbc.readMem(0xf784), 0x15);
        // 73 0157
        gbc.setState(0x27b8, 0x2703, 0xdd80, 0x1f2a, 0xa72f, 0xe4c5, 0x0, 0x1);
        gbc.writeMem(0x27b8, { 0x73 });
        gbc.writeMem(0xe4c5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x2703);
        EXPECT(gbc.pc(), 0x27b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4c5), 0x2f);
        // 73 0158
        gbc.setState(0xc903, 0xdd51, 0x5d90, 0xcd3a, 0x6d3f, 0xbbae, 0x0, 0x0);
        gbc.writeMem(0xbbae, { 0x0 });
        gbc.writeMem(0xc903, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xdd51);
        EXPECT(gbc.pc(), 0xc904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbae), 0x3f);
        EXPECT(gbc.readMem(0xc903), 0x73);
        // 73 0159
        gbc.setState(0xa8c9, 0xb487, 0xeb90, 0xf222, 0x9e3d, 0xace1, 0x1, 0x1);
        gbc.writeMem(0xa8c9, { 0x73 });
        gbc.writeMem(0xace1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xb487);
        EXPECT(gbc.pc(), 0xa8ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8c9), 0x73);
        EXPECT(gbc.readMem(0xace1), 0x3d);
        // 73 015A
        gbc.setState(0xd79a, 0xe6db, 0x4a10, 0x155a, 0xdfbf, 0xf372, 0x0, 0x1);
        gbc.writeMem(0xd79a, { 0x73 });
        gbc.writeMem(0xf372, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe6db);
        EXPECT(gbc.pc(), 0xd79b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd79a), 0x73);
        EXPECT(gbc.readMem(0xf372), 0xbf);
        // 73 015B
        gbc.setState(0x7ba0, 0xb5c0, 0x29a0, 0xe1f, 0x2563, 0x8bd5, 0x0, 0x1);
        gbc.writeMem(0x7ba0, { 0x73 });
        gbc.writeMem(0x8bd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xb5c0);
        EXPECT(gbc.pc(), 0x7ba1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bd5), 0x63);
        // 73 015C
        gbc.setState(0x6d53, 0x889e, 0xb010, 0x409c, 0xf6d5, 0xd97a, 0x0, 0x1);
        gbc.writeMem(0x6d53, { 0x73 });
        gbc.writeMem(0xd97a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x889e);
        EXPECT(gbc.pc(), 0x6d54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd97a), 0xd5);
        // 73 015D
        gbc.setState(0xa8d0, 0xaed3, 0xd2a0, 0xc0e8, 0xb783, 0xf6f5, 0x1, 0x1);
        gbc.writeMem(0xa8d0, { 0x73 });
        gbc.writeMem(0xf6f5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xaed3);
        EXPECT(gbc.pc(), 0xa8d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8d0), 0x73);
        EXPECT(gbc.readMem(0xf6f5), 0x83);
        // 73 015F
        gbc.setState(0x45dd, 0xf5f, 0x6a70, 0x130c, 0xb3df, 0xcf37, 0x1, 0x1);
        gbc.writeMem(0x45dd, { 0x73 });
        gbc.writeMem(0xcf37, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf5f);
        EXPECT(gbc.pc(), 0x45de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf37), 0xdf);
        // 73 0161
        gbc.setState(0x157c, 0xd29d, 0xa2e0, 0x6071, 0xd387, 0x99a6, 0x1, 0x0);
        gbc.writeMem(0x157c, { 0x73 });
        gbc.writeMem(0x99a6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd29d);
        EXPECT(gbc.pc(), 0x157d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99a6), 0x87);
        // 73 0163
        gbc.setState(0x37c3, 0x9943, 0x2bc0, 0xaac3, 0x73a1, 0xac14, 0x0, 0x0);
        gbc.writeMem(0x37c3, { 0x73 });
        gbc.writeMem(0xac14, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9943);
        EXPECT(gbc.pc(), 0x37c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac14), 0xa1);
        // 73 0165
        gbc.setState(0x943a, 0xc435, 0x1580, 0xaf36, 0xc4b1, 0xc26b, 0x0, 0x1);
        gbc.writeMem(0x943a, { 0x73 });
        gbc.writeMem(0xc26b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xc435);
        EXPECT(gbc.pc(), 0x943b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x943a), 0x73);
        EXPECT(gbc.readMem(0xc26b), 0xb1);
        // 73 0166
        gbc.setState(0x76dd, 0x558b, 0x5b80, 0xf75d, 0x11ee, 0xd314, 0x1, 0x0);
        gbc.writeMem(0x76dd, { 0x73 });
        gbc.writeMem(0xd314, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x558b);
        EXPECT(gbc.pc(), 0x76de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd314), 0xee);
        // 73 0167
        gbc.setState(0x66be, 0xab98, 0x44a0, 0x7793, 0x6e75, 0xeced, 0x0, 0x0);
        gbc.writeMem(0x66be, { 0x73 });
        gbc.writeMem(0xeced, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xab98);
        EXPECT(gbc.pc(), 0x66bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeced), 0x75);
        // 73 0168
        gbc.setState(0x8207, 0xc280, 0x74c0, 0x9325, 0x78e0, 0xc2ba, 0x1, 0x1);
        gbc.writeMem(0x8207, { 0x73 });
        gbc.writeMem(0xc2ba, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc280);
        EXPECT(gbc.pc(), 0x8208);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8207), 0x73);
        EXPECT(gbc.readMem(0xc2ba), 0xe0);
        // 73 0169
        gbc.setState(0xdd2f, 0xe026, 0xc680, 0x86fc, 0x5d4, 0x89f1, 0x0, 0x1);
        gbc.writeMem(0x89f1, { 0x0 });
        gbc.writeMem(0xdd2f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xe026);
        EXPECT(gbc.pc(), 0xdd30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f1), 0xd4);
        EXPECT(gbc.readMem(0xdd2f), 0x73);
        // 73 016A
        gbc.setState(0x6e2, 0xa15d, 0xd990, 0xdce8, 0x54bc, 0xcf01, 0x1, 0x1);
        gbc.writeMem(0x6e2, { 0x73 });
        gbc.writeMem(0xcf01, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xa15d);
        EXPECT(gbc.pc(), 0x6e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf01), 0xbc);
        // 73 016B
        gbc.setState(0x5522, 0x7189, 0xb590, 0x670, 0x4b12, 0xd90b, 0x1, 0x1);
        gbc.writeMem(0x5522, { 0x73 });
        gbc.writeMem(0xd90b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x7189);
        EXPECT(gbc.pc(), 0x5523);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd90b), 0x12);
        // 73 016D
        gbc.setState(0xd4ee, 0x8730, 0xbcc0, 0x9562, 0x2f73, 0xd672, 0x0, 0x1);
        gbc.writeMem(0xd4ee, { 0x73 });
        gbc.writeMem(0xd672, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8730);
        EXPECT(gbc.pc(), 0xd4ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4ee), 0x73);
        EXPECT(gbc.readMem(0xd672), 0x73);
        // 73 016E
        gbc.setState(0x72f7, 0x9c2c, 0x4c40, 0xe75f, 0x66cf, 0xf0ce, 0x0, 0x0);
        gbc.writeMem(0x72f7, { 0x73 });
        gbc.writeMem(0xf0ce, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x9c2c);
        EXPECT(gbc.pc(), 0x72f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf0ce), 0xcf);
        // 73 0171
        gbc.setState(0x396b, 0x12de, 0x80d0, 0x2503, 0xad4a, 0x994e, 0x0, 0x0);
        gbc.writeMem(0x396b, { 0x73 });
        gbc.writeMem(0x994e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x12de);
        EXPECT(gbc.pc(), 0x396c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x994e), 0x4a);
        // 73 0172
        gbc.setState(0xa623, 0x404b, 0x7d70, 0xc327, 0x57c9, 0x83ff, 0x1, 0x0);
        gbc.writeMem(0x83ff, { 0x0 });
        gbc.writeMem(0xa623, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x404b);
        EXPECT(gbc.pc(), 0xa624);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ff), 0xc9);
        EXPECT(gbc.readMem(0xa623), 0x73);
        // 73 017B
        gbc.setState(0x3394, 0x2818, 0x49c0, 0x51f9, 0x360c, 0x95b9, 0x0, 0x0);
        gbc.writeMem(0x3394, { 0x73 });
        gbc.writeMem(0x95b9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2818);
        EXPECT(gbc.pc(), 0x3395);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95b9), 0xc);
        // 73 017C
        gbc.setState(0x6a5f, 0x2b6b, 0x9020, 0xa42e, 0x45b1, 0xf350, 0x0, 0x1);
        gbc.writeMem(0x6a5f, { 0x73 });
        gbc.writeMem(0xf350, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x2b6b);
        EXPECT(gbc.pc(), 0x6a60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf350), 0xb1);
        // 73 017F
        gbc.setState(0x3805, 0xd1d4, 0x26e0, 0xc638, 0x4a83, 0xbc43, 0x0, 0x1);
        gbc.writeMem(0x3805, { 0x73 });
        gbc.writeMem(0xbc43, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd1d4);
        EXPECT(gbc.pc(), 0x3806);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc43), 0x83);
        // 73 0181
        gbc.setState(0x279c, 0xba99, 0x89e0, 0x6b03, 0x9eae, 0xd1e7, 0x0, 0x0);
        gbc.writeMem(0x279c, { 0x73 });
        gbc.writeMem(0xd1e7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xba99);
        EXPECT(gbc.pc(), 0x279d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1e7), 0xae);
        // 73 0182
        gbc.setState(0x30cd, 0x8e20, 0x6db0, 0x41a5, 0xa355, 0xfbd8, 0x1, 0x1);
        gbc.writeMem(0x30cd, { 0x73 });
        gbc.writeMem(0xfbd8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x8e20);
        EXPECT(gbc.pc(), 0x30ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfbd8), 0x55);
        // 73 0183
        gbc.setState(0x5868, 0x4039, 0xd7e0, 0xf0b9, 0x3aac, 0xa947, 0x1, 0x1);
        gbc.writeMem(0x5868, { 0x73 });
        gbc.writeMem(0xa947, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4039);
        EXPECT(gbc.pc(), 0x5869);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa947), 0xac);
        // 73 0185
        gbc.setState(0x6939, 0xda05, 0x6790, 0xada8, 0x85c5, 0xd542, 0x1, 0x0);
        gbc.writeMem(0x6939, { 0x73 });
        gbc.writeMem(0xd542, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xda05);
        EXPECT(gbc.pc(), 0x693a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd542), 0xc5);
        // 73 0187
        gbc.setState(0x5faf, 0xa08a, 0x33a0, 0x9914, 0xea08, 0xe2e9, 0x1, 0x0);
        gbc.writeMem(0x5faf, { 0x73 });
        gbc.writeMem(0xe2e9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xa08a);
        EXPECT(gbc.pc(), 0x5fb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2e9), 0x8);
        // 73 0188
        gbc.setState(0x31a6, 0x6409, 0x4d00, 0x423e, 0xf4fe, 0xef01, 0x0, 0x1);
        gbc.writeMem(0x31a6, { 0x73 });
        gbc.writeMem(0xef01, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x6409);
        EXPECT(gbc.pc(), 0x31a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef01), 0xfe);
        // 73 018C
        gbc.setState(0xefe2, 0x6a93, 0x97b0, 0x8672, 0xff7c, 0x86a9, 0x1, 0x0);
        gbc.writeMem(0x86a9, { 0x0 });
        gbc.writeMem(0xefe2, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x6a93);
        EXPECT(gbc.pc(), 0xefe3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86a9), 0x7c);
        EXPECT(gbc.readMem(0xefe2), 0x73);
        // 73 018D
        gbc.setState(0x86d, 0x4cd1, 0x770, 0x92d1, 0x4e6b, 0x9120, 0x0, 0x1);
        gbc.writeMem(0x86d, { 0x73 });
        gbc.writeMem(0x9120, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4cd1);
        EXPECT(gbc.pc(), 0x86e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9120), 0x6b);
        // 73 018E
        gbc.setState(0xa018, 0x6e0a, 0x17c0, 0xc984, 0xdbea, 0x8fd1, 0x0, 0x0);
        gbc.writeMem(0x8fd1, { 0x0 });
        gbc.writeMem(0xa018, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6e0a);
        EXPECT(gbc.pc(), 0xa019);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fd1), 0xea);
        EXPECT(gbc.readMem(0xa018), 0x73);
        // 73 0191
        gbc.setState(0x501a, 0x6529, 0xb680, 0x26ad, 0xc1e0, 0x8b76, 0x1, 0x1);
        gbc.writeMem(0x501a, { 0x73 });
        gbc.writeMem(0x8b76, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x6529);
        EXPECT(gbc.pc(), 0x501b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b76), 0xe0);
        // 73 0192
        gbc.setState(0x267e, 0xfec3, 0x3370, 0xab6c, 0x8e1e, 0x9df4, 0x1, 0x0);
        gbc.writeMem(0x267e, { 0x73 });
        gbc.writeMem(0x9df4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfec3);
        EXPECT(gbc.pc(), 0x267f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9df4), 0x1e);
        // 73 0193
        gbc.setState(0x37a6, 0xefbd, 0xb310, 0x2d40, 0xeca9, 0xdd37, 0x1, 0x1);
        gbc.writeMem(0x37a6, { 0x73 });
        gbc.writeMem(0xdd37, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xefbd);
        EXPECT(gbc.pc(), 0x37a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd37), 0xa9);
        // 73 0194
        gbc.setState(0x861c, 0x1534, 0x3d20, 0x148, 0x84b, 0x8c86, 0x0, 0x1);
        gbc.writeMem(0x861c, { 0x73 });
        gbc.writeMem(0x8c86, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1534);
        EXPECT(gbc.pc(), 0x861d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x861c), 0x73);
        EXPECT(gbc.readMem(0x8c86), 0x4b);
        // 73 0197
        gbc.setState(0x3dc2, 0xc50, 0xfbc0, 0xf67e, 0xc12c, 0xa794, 0x1, 0x1);
        gbc.writeMem(0x3dc2, { 0x73 });
        gbc.writeMem(0xa794, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc50);
        EXPECT(gbc.pc(), 0x3dc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa794), 0x2c);
        // 73 0198
        gbc.setState(0x579, 0xe3cf, 0x46b0, 0x48cb, 0x5f91, 0x8d9c, 0x0, 0x1);
        gbc.writeMem(0x579, { 0x73 });
        gbc.writeMem(0x8d9c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xe3cf);
        EXPECT(gbc.pc(), 0x57a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d9c), 0x91);
        // 73 0199
        gbc.setState(0x9dbe, 0xdd45, 0x61c0, 0x17fa, 0xfe7, 0x96a9, 0x0, 0x1);
        gbc.writeMem(0x96a9, { 0x0 });
        gbc.writeMem(0x9dbe, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xdd45);
        EXPECT(gbc.pc(), 0x9dbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96a9), 0xe7);
        EXPECT(gbc.readMem(0x9dbe), 0x73);
        // 73 019B
        gbc.setState(0xdad, 0x80a7, 0xafc0, 0xb445, 0xaa06, 0xec79, 0x1, 0x1);
        gbc.writeMem(0xdad, { 0x73 });
        gbc.writeMem(0xec79, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x80a7);
        EXPECT(gbc.pc(), 0xdae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec79), 0x6);
        // 73 019E
        gbc.setState(0x2547, 0x40b6, 0xca40, 0x5978, 0x8c9a, 0xfae6, 0x0, 0x1);
        gbc.writeMem(0x2547, { 0x73 });
        gbc.writeMem(0xfae6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x40b6);
        EXPECT(gbc.pc(), 0x2548);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfae6), 0x9a);
        // 73 01A5
        gbc.setState(0xdfc5, 0x712f, 0xeb00, 0x3a14, 0xb929, 0xea9e, 0x1, 0x1);
        gbc.writeMem(0xdfc5, { 0x73 });
        gbc.writeMem(0xea9e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x712f);
        EXPECT(gbc.pc(), 0xdfc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfc5), 0x73);
        EXPECT(gbc.readMem(0xea9e), 0x29);
        // 73 01A6
        gbc.setState(0x1771, 0xc7a, 0x98f0, 0xd6ed, 0x562e, 0xe96d, 0x0, 0x1);
        gbc.writeMem(0x1771, { 0x73 });
        gbc.writeMem(0xe96d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xc7a);
        EXPECT(gbc.pc(), 0x1772);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe96d), 0x2e);
        // 73 01AA
        gbc.setState(0x2596, 0xf168, 0x7c90, 0x39dc, 0x9465, 0xe51c, 0x1, 0x1);
        gbc.writeMem(0x2596, { 0x73 });
        gbc.writeMem(0xe51c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf168);
        EXPECT(gbc.pc(), 0x2597);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe51c), 0x65);
        // 73 01AC
        gbc.setState(0x288c, 0x2f25, 0x17c0, 0x41de, 0x87b1, 0xcedb, 0x0, 0x1);
        gbc.writeMem(0x288c, { 0x73 });
        gbc.writeMem(0xcedb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x2f25);
        EXPECT(gbc.pc(), 0x288d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcedb), 0xb1);
        // 73 01AE
        gbc.setState(0xcede, 0xac3a, 0xdbd0, 0xc483, 0x3c35, 0xba54, 0x0, 0x1);
        gbc.writeMem(0xba54, { 0x0 });
        gbc.writeMem(0xcede, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xac3a);
        EXPECT(gbc.pc(), 0xcedf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba54), 0x35);
        EXPECT(gbc.readMem(0xcede), 0x73);
        // 73 01B1
        gbc.setState(0x3cd4, 0xfc91, 0x1d20, 0xb4cd, 0xa3e7, 0xef47, 0x1, 0x1);
        gbc.writeMem(0x3cd4, { 0x73 });
        gbc.writeMem(0xef47, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfc91);
        EXPECT(gbc.pc(), 0x3cd5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef47), 0xe7);
        // 73 01B2
        gbc.setState(0x17f1, 0xd2fc, 0xf8a0, 0x8f22, 0x9fee, 0xcfae, 0x1, 0x0);
        gbc.writeMem(0x17f1, { 0x73 });
        gbc.writeMem(0xcfae, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xd2fc);
        EXPECT(gbc.pc(), 0x17f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfae), 0xee);
        // 73 01B4
        gbc.setState(0x20d1, 0x14c5, 0x4770, 0xaf59, 0xc466, 0x92d4, 0x0, 0x0);
        gbc.writeMem(0x20d1, { 0x73 });
        gbc.writeMem(0x92d4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x14c5);
        EXPECT(gbc.pc(), 0x20d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92d4), 0x66);
        // 73 01B5
        gbc.setState(0x14c5, 0x4e25, 0x15a0, 0x9a5d, 0xdcf5, 0xe911, 0x1, 0x0);
        gbc.writeMem(0x14c5, { 0x73 });
        gbc.writeMem(0xe911, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4e25);
        EXPECT(gbc.pc(), 0x14c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe911), 0xf5);
        // 73 01B9
        gbc.setState(0x6474, 0x349c, 0x37e0, 0xd8a4, 0x135d, 0xe1f0, 0x1, 0x1);
        gbc.writeMem(0x6474, { 0x73 });
        gbc.writeMem(0xe1f0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x349c);
        EXPECT(gbc.pc(), 0x6475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1f0), 0x5d);
        // 73 01BA
        gbc.setState(0x9799, 0xebb1, 0x6c20, 0x9fda, 0x76ad, 0xf98d, 0x1, 0x1);
        gbc.writeMem(0x9799, { 0x73 });
        gbc.writeMem(0xf98d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xebb1);
        EXPECT(gbc.pc(), 0x979a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9799), 0x73);
        EXPECT(gbc.readMem(0xf98d), 0xad);
        // 73 01BB
        gbc.setState(0xc637, 0x6168, 0xc5e0, 0xb51b, 0x801d, 0xc215, 0x0, 0x0);
        gbc.writeMem(0xc215, { 0x0 });
        gbc.writeMem(0xc637, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x6168);
        EXPECT(gbc.pc(), 0xc638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc215), 0x1d);
        EXPECT(gbc.readMem(0xc637), 0x73);
        // 73 01BC
        gbc.setState(0x51d, 0x1409, 0xc300, 0x741b, 0x6de1, 0xbd3e, 0x0, 0x0);
        gbc.writeMem(0x51d, { 0x73 });
        gbc.writeMem(0xbd3e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x1409);
        EXPECT(gbc.pc(), 0x51e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd3e), 0xe1);
        // 73 01BE
        gbc.setState(0xc8, 0x6023, 0xf60, 0xc77a, 0x3588, 0xfe55, 0x0, 0x0);
        gbc.writeMem(0xc8, { 0x73 });
        gbc.writeMem(0xfe55, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6023);
        EXPECT(gbc.pc(), 0xc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfe55), 0x88);
        // 73 01BF
        gbc.setState(0x1f6d, 0x9165, 0x900, 0xd79d, 0xfd77, 0xca49, 0x0, 0x1);
        gbc.writeMem(0x1f6d, { 0x73 });
        gbc.writeMem(0xca49, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x9165);
        EXPECT(gbc.pc(), 0x1f6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca49), 0x77);
        // 73 01C0
        gbc.setState(0xe476, 0xef92, 0x45f0, 0xa8ee, 0xbc7e, 0x92a4, 0x1, 0x1);
        gbc.writeMem(0x92a4, { 0x0 });
        gbc.writeMem(0xe476, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xef92);
        EXPECT(gbc.pc(), 0xe477);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92a4), 0x7e);
        EXPECT(gbc.readMem(0xe476), 0x73);
        // 73 01C1
        gbc.setState(0x6212, 0xdbba, 0x6040, 0xf06a, 0x8fe0, 0xe699, 0x1, 0x1);
        gbc.writeMem(0x6212, { 0x73 });
        gbc.writeMem(0xe699, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xdbba);
        EXPECT(gbc.pc(), 0x6213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe699), 0xe0);
        // 73 01C3
        gbc.setState(0x16d8, 0x1a0d, 0xb480, 0xc848, 0xa70f, 0xcec4, 0x1, 0x1);
        gbc.writeMem(0x16d8, { 0x73 });
        gbc.writeMem(0xcec4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x1a0d);
        EXPECT(gbc.pc(), 0x16d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcec4), 0xf);
        // 73 01C5
        gbc.setState(0xca03, 0x98fb, 0x5840, 0xfd9, 0xc244, 0xfce1, 0x0, 0x1);
        gbc.writeMem(0xca03, { 0x73 });
        gbc.writeMem(0xfce1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x98fb);
        EXPECT(gbc.pc(), 0xca04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca03), 0x73);
        EXPECT(gbc.readMem(0xfce1), 0x44);
        // 73 01C6
        gbc.setState(0x78ba, 0x4e69, 0xbc50, 0x5630, 0x992a, 0x962d, 0x0, 0x0);
        gbc.writeMem(0x78ba, { 0x73 });
        gbc.writeMem(0x962d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4e69);
        EXPECT(gbc.pc(), 0x78bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x962d), 0x2a);
        // 73 01C7
        gbc.setState(0x56a0, 0xc75c, 0x6990, 0xd04c, 0x20b3, 0x9770, 0x1, 0x1);
        gbc.writeMem(0x56a0, { 0x73 });
        gbc.writeMem(0x9770, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xc75c);
        EXPECT(gbc.pc(), 0x56a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9770), 0xb3);
        // 73 01CA
        gbc.setState(0x3398, 0xe4bd, 0xd040, 0xdb6f, 0x870d, 0xab61, 0x0, 0x0);
        gbc.writeMem(0x3398, { 0x73 });
        gbc.writeMem(0xab61, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe4bd);
        EXPECT(gbc.pc(), 0x3399);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab61), 0xd);
        // 73 01CB
        gbc.setState(0xc950, 0x679, 0xbe40, 0x734a, 0xf3a, 0xf9dd, 0x1, 0x0);
        gbc.writeMem(0xc950, { 0x73 });
        gbc.writeMem(0xf9dd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x679);
        EXPECT(gbc.pc(), 0xc951);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc950), 0x73);
        EXPECT(gbc.readMem(0xf9dd), 0x3a);
        // 73 01CE
        gbc.setState(0x11ab, 0x89da, 0x88c0, 0x19b3, 0x14a8, 0xc838, 0x1, 0x1);
        gbc.writeMem(0x11ab, { 0x73 });
        gbc.writeMem(0xc838, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x89da);
        EXPECT(gbc.pc(), 0x11ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc838), 0xa8);
        // 73 01CF
        gbc.setState(0xb2e6, 0x2bc0, 0x60d0, 0x47f7, 0x68e8, 0xb76c, 0x0, 0x0);
        gbc.writeMem(0xb2e6, { 0x73 });
        gbc.writeMem(0xb76c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2bc0);
        EXPECT(gbc.pc(), 0xb2e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2e6), 0x73);
        EXPECT(gbc.readMem(0xb76c), 0xe8);
        // 73 01D0
        gbc.setState(0x3594, 0xeb04, 0x2c00, 0x36be, 0x87b5, 0xfc60, 0x0, 0x1);
        gbc.writeMem(0x3594, { 0x73 });
        gbc.writeMem(0xfc60, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xeb04);
        EXPECT(gbc.pc(), 0x3595);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc60), 0xb5);
        // 73 01D2
        gbc.setState(0x7d99, 0x9d98, 0xf7e0, 0x9e5b, 0x4f11, 0xd517, 0x0, 0x0);
        gbc.writeMem(0x7d99, { 0x73 });
        gbc.writeMem(0xd517, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9d98);
        EXPECT(gbc.pc(), 0x7d9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd517), 0x11);
        // 73 01D6
        gbc.setState(0x5160, 0xe50e, 0xdee0, 0x33ff, 0xb63b, 0xa0f2, 0x1, 0x1);
        gbc.writeMem(0x5160, { 0x73 });
        gbc.writeMem(0xa0f2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe50e);
        EXPECT(gbc.pc(), 0x5161);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f2), 0x3b);
        // 73 01D7
        gbc.setState(0xa7d, 0x5b09, 0xbe60, 0xc263, 0xb400, 0x67b3, 0x1, 0x0);
        gbc.writeMem(0xa7d, { 0x73 });
        gbc.writeMem(0x67b3, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x5b09);
        EXPECT(gbc.pc(), 0xa7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 73 01D9
        gbc.setState(0x4199, 0x3476, 0xce30, 0x7e87, 0x619b, 0xe6f9, 0x1, 0x0);
        gbc.writeMem(0x4199, { 0x73 });
        gbc.writeMem(0xe6f9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3476);
        EXPECT(gbc.pc(), 0x419a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6f9), 0x9b);
        // 73 01DC
        gbc.setState(0x87a9, 0x1ccc, 0xf9b0, 0xb106, 0x81fd, 0xfb48, 0x1, 0x1);
        gbc.writeMem(0x87a9, { 0x73 });
        gbc.writeMem(0xfb48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x1ccc);
        EXPECT(gbc.pc(), 0x87aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87a9), 0x73);
        EXPECT(gbc.readMem(0xfb48), 0xfd);
        // 73 01DD
        gbc.setState(0xc426, 0x5f28, 0xa210, 0xe34a, 0x2d9b, 0xa406, 0x1, 0x1);
        gbc.writeMem(0xa406, { 0x0 });
        gbc.writeMem(0xc426, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x5f28);
        EXPECT(gbc.pc(), 0xc427);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa406), 0x9b);
        EXPECT(gbc.readMem(0xc426), 0x73);
        // 73 01DE
        gbc.setState(0xe0e7, 0xc2ab, 0x2660, 0xcf19, 0x63a3, 0xfe9a, 0x0, 0x1);
        gbc.writeMem(0xe0e7, { 0x73 });
        gbc.writeMem(0xfe9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc2ab);
        EXPECT(gbc.pc(), 0xe0e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0e7), 0x73);
        EXPECT(gbc.readMem(0xfe9a), 0xa3);
        // 73 01E0
        gbc.setState(0xef7d, 0x85f9, 0x72b0, 0x7f29, 0x4390, 0xf01a, 0x0, 0x0);
        gbc.writeMem(0xef7d, { 0x73 });
        gbc.writeMem(0xf01a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x85f9);
        EXPECT(gbc.pc(), 0xef7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef7d), 0x73);
        EXPECT(gbc.readMem(0xf01a), 0x90);
        // 73 01E1
        gbc.setState(0xa268, 0x7c7c, 0xe490, 0x1e3a, 0x568c, 0xebdb, 0x1, 0x0);
        gbc.writeMem(0xa268, { 0x73 });
        gbc.writeMem(0xebdb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7c7c);
        EXPECT(gbc.pc(), 0xa269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa268), 0x73);
        EXPECT(gbc.readMem(0xebdb), 0x8c);
        // 73 01E2
        gbc.setState(0xe020, 0x96f5, 0x84b0, 0xaf22, 0x48fe, 0x95fe, 0x0, 0x0);
        gbc.writeMem(0x95fe, { 0x0 });
        gbc.writeMem(0xe020, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x96f5);
        EXPECT(gbc.pc(), 0xe021);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95fe), 0xfe);
        EXPECT(gbc.readMem(0xe020), 0x73);
        // 73 01E3
        gbc.setState(0x56b6, 0xa55c, 0x6c40, 0x49f5, 0x9db4, 0xf78a, 0x0, 0x0);
        gbc.writeMem(0x56b6, { 0x73 });
        gbc.writeMem(0xf78a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xa55c);
        EXPECT(gbc.pc(), 0x56b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf78a), 0xb4);
        // 73 01E4
        gbc.setState(0x92a, 0x8a6e, 0x30e0, 0x1a64, 0xd4b6, 0xb9f7, 0x1, 0x0);
        gbc.writeMem(0x92a, { 0x73 });
        gbc.writeMem(0xb9f7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8a6e);
        EXPECT(gbc.pc(), 0x92b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9f7), 0xb6);
        // 73 01E5
        gbc.setState(0x8b8e, 0x7a69, 0x4ae0, 0xf48a, 0xcea3, 0xa422, 0x1, 0x0);
        gbc.writeMem(0x8b8e, { 0x73 });
        gbc.writeMem(0xa422, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x7a69);
        EXPECT(gbc.pc(), 0x8b8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b8e), 0x73);
        EXPECT(gbc.readMem(0xa422), 0xa3);
        // 73 01E6
        gbc.setState(0xb627, 0x1a29, 0x5880, 0x1592, 0xbcae, 0x97ee, 0x0, 0x1);
        gbc.writeMem(0x97ee, { 0x0 });
        gbc.writeMem(0xb627, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x1a29);
        EXPECT(gbc.pc(), 0xb628);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97ee), 0xae);
        EXPECT(gbc.readMem(0xb627), 0x73);
        // 73 01E7
        gbc.setState(0x71d3, 0x37d5, 0x42b0, 0x6010, 0xfbb4, 0xaf7b, 0x1, 0x1);
        gbc.writeMem(0x71d3, { 0x73 });
        gbc.writeMem(0xaf7b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x37d5);
        EXPECT(gbc.pc(), 0x71d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf7b), 0xb4);
        // 73 01EB
        gbc.setState(0x4997, 0x484b, 0x22b0, 0xeaa6, 0x345b, 0xb280, 0x0, 0x0);
        gbc.writeMem(0x4997, { 0x73 });
        gbc.writeMem(0xb280, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x484b);
        EXPECT(gbc.pc(), 0x4998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb280), 0x5b);
        // 73 01EE
        gbc.setState(0x2ad, 0xea70, 0x92c0, 0x4175, 0xed2e, 0xf7f7, 0x1, 0x0);
        gbc.writeMem(0x2ad, { 0x73 });
        gbc.writeMem(0xf7f7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xea70);
        EXPECT(gbc.pc(), 0x2ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf7f7), 0x2e);
        // 73 01F2
        gbc.setState(0x4a9c, 0xf2a4, 0xef00, 0xa0d5, 0xa12d, 0x8253, 0x0, 0x0);
        gbc.writeMem(0x4a9c, { 0x73 });
        gbc.writeMem(0x8253, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf2a4);
        EXPECT(gbc.pc(), 0x4a9d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8253), 0x2d);
        // 73 01F3
        gbc.setState(0x728e, 0x3921, 0x6860, 0xab61, 0x3f84, 0xb01d, 0x1, 0x0);
        gbc.writeMem(0x728e, { 0x73 });
        gbc.writeMem(0xb01d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3921);
        EXPECT(gbc.pc(), 0x728f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb01d), 0x84);
        // 73 01F4
        gbc.setState(0x5591, 0x21ae, 0x8ca0, 0x5d53, 0xd40c, 0xfb26, 0x0, 0x1);
        gbc.writeMem(0x5591, { 0x73 });
        gbc.writeMem(0xfb26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x21ae);
        EXPECT(gbc.pc(), 0x5592);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfb26), 0xc);
        // 73 01F5
        gbc.setState(0xa7fc, 0x2729, 0xa670, 0x6f86, 0x3fa3, 0x82b0, 0x0, 0x1);
        gbc.writeMem(0x82b0, { 0x0 });
        gbc.writeMem(0xa7fc, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x2729);
        EXPECT(gbc.pc(), 0xa7fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82b0), 0xa3);
        EXPECT(gbc.readMem(0xa7fc), 0x73);
        // 73 01F6
        gbc.setState(0x5d65, 0x187b, 0x5a80, 0xeb56, 0xe32e, 0xef7f, 0x0, 0x0);
        gbc.writeMem(0x5d65, { 0x73 });
        gbc.writeMem(0xef7f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x187b);
        EXPECT(gbc.pc(), 0x5d66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef7f), 0x2e);
        // 73 01F7
        gbc.setState(0xa8c4, 0xa66e, 0x9040, 0xe06d, 0x3783, 0x9995, 0x0, 0x0);
        gbc.writeMem(0x9995, { 0x0 });
        gbc.writeMem(0xa8c4, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa66e);
        EXPECT(gbc.pc(), 0xa8c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9995), 0x83);
        EXPECT(gbc.readMem(0xa8c4), 0x73);
        // 73 01F8
        gbc.setState(0x7f4a, 0x9b6b, 0xa750, 0xb00a, 0x6f, 0xf14b, 0x0, 0x0);
        gbc.writeMem(0x7f4a, { 0x73 });
        gbc.writeMem(0xf14b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9b6b);
        EXPECT(gbc.pc(), 0x7f4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf14b), 0x6f);
        // 73 01F9
        gbc.setState(0xa1bd, 0x1d8d, 0xac50, 0x331a, 0x2f4a, 0xf506, 0x0, 0x1);
        gbc.writeMem(0xa1bd, { 0x73 });
        gbc.writeMem(0xf506, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1d8d);
        EXPECT(gbc.pc(), 0xa1be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1bd), 0x73);
        EXPECT(gbc.readMem(0xf506), 0x4a);
        // 73 01FA
        gbc.setState(0x35f0, 0xeb44, 0x6040, 0xa033, 0x31f2, 0xdfd7, 0x0, 0x1);
        gbc.writeMem(0x35f0, { 0x73 });
        gbc.writeMem(0xdfd7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xeb44);
        EXPECT(gbc.pc(), 0x35f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfd7), 0xf2);
        // 73 01FE
        gbc.setState(0x59c5, 0x3871, 0x3a90, 0xf188, 0xbfba, 0xe8b7, 0x1, 0x1);
        gbc.writeMem(0x59c5, { 0x73 });
        gbc.writeMem(0xe8b7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x3871);
        EXPECT(gbc.pc(), 0x59c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8b7), 0xba);
        // 73 0201
        gbc.setState(0x2f45, 0x8eb4, 0xdea0, 0x8f67, 0x1ebe, 0xb052, 0x1, 0x1);
        gbc.writeMem(0x2f45, { 0x73 });
        gbc.writeMem(0xb052, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8eb4);
        EXPECT(gbc.pc(), 0x2f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb052), 0xbe);
        // 73 0206
        gbc.setState(0xa83f, 0x1d9b, 0x1180, 0x1a5b, 0xfbee, 0x8898, 0x1, 0x1);
        gbc.writeMem(0x8898, { 0x0 });
        gbc.writeMem(0xa83f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1d9b);
        EXPECT(gbc.pc(), 0xa840);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8898), 0xee);
        EXPECT(gbc.readMem(0xa83f), 0x73);
        // 73 0208
        gbc.setState(0xd0b9, 0xfc76, 0x1320, 0x947e, 0x1df5, 0xe422, 0x1, 0x1);
        gbc.writeMem(0xd0b9, { 0x73 });
        gbc.writeMem(0xe422, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xfc76);
        EXPECT(gbc.pc(), 0xd0ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0b9), 0x73);
        EXPECT(gbc.readMem(0xe422), 0xf5);
        // 73 020A
        gbc.setState(0x711b, 0xc983, 0xf2a0, 0xa45, 0x728b, 0xd917, 0x1, 0x0);
        gbc.writeMem(0x711b, { 0x73 });
        gbc.writeMem(0xd917, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc983);
        EXPECT(gbc.pc(), 0x711c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd917), 0x8b);
        // 73 020B
        gbc.setState(0x698f, 0xac23, 0xab40, 0x5187, 0x4f49, 0xf76c, 0x0, 0x0);
        gbc.writeMem(0x698f, { 0x73 });
        gbc.writeMem(0xf76c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xac23);
        EXPECT(gbc.pc(), 0x6990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf76c), 0x49);
        // 73 020D
        gbc.setState(0x4f0a, 0xb62e, 0xe610, 0x126e, 0x4475, 0x9565, 0x1, 0x1);
        gbc.writeMem(0x4f0a, { 0x73 });
        gbc.writeMem(0x9565, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb62e);
        EXPECT(gbc.pc(), 0x4f0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9565), 0x75);
        // 73 020E
        gbc.setState(0xa75c, 0x431, 0xdef0, 0x6174, 0x9878, 0x9b7e, 0x1, 0x0);
        gbc.writeMem(0x9b7e, { 0x0 });
        gbc.writeMem(0xa75c, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x431);
        EXPECT(gbc.pc(), 0xa75d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b7e), 0x78);
        EXPECT(gbc.readMem(0xa75c), 0x73);
        // 73 020F
        gbc.setState(0xae2f, 0x783e, 0xb2a0, 0x978d, 0x6aa4, 0xabc5, 0x1, 0x0);
        gbc.writeMem(0xabc5, { 0x0 });
        gbc.writeMem(0xae2f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x783e);
        EXPECT(gbc.pc(), 0xae30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabc5), 0xa4);
        EXPECT(gbc.readMem(0xae2f), 0x73);
        // 73 0210
        gbc.setState(0xc5df, 0x7a69, 0x7310, 0x9f89, 0x3c65, 0xef39, 0x1, 0x1);
        gbc.writeMem(0xc5df, { 0x73 });
        gbc.writeMem(0xef39, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7a69);
        EXPECT(gbc.pc(), 0xc5e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5df), 0x73);
        EXPECT(gbc.readMem(0xef39), 0x65);
        // 73 0212
        gbc.setState(0xca1e, 0x987f, 0x3430, 0x88c2, 0x4879, 0xf3f1, 0x0, 0x0);
        gbc.writeMem(0xca1e, { 0x73 });
        gbc.writeMem(0xf3f1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x987f);
        EXPECT(gbc.pc(), 0xca1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca1e), 0x73);
        EXPECT(gbc.readMem(0xf3f1), 0x79);
        // 73 0213
        gbc.setState(0x201d, 0x56cc, 0x2330, 0x9ea9, 0x792e, 0xae0c, 0x0, 0x0);
        gbc.writeMem(0x201d, { 0x73 });
        gbc.writeMem(0xae0c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x56cc);
        EXPECT(gbc.pc(), 0x201e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae0c), 0x2e);
        // 73 0217
        gbc.setState(0xba49, 0x1eba, 0xf320, 0x402d, 0x6cf8, 0xc3c5, 0x0, 0x0);
        gbc.writeMem(0xba49, { 0x73 });
        gbc.writeMem(0xc3c5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1eba);
        EXPECT(gbc.pc(), 0xba4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba49), 0x73);
        EXPECT(gbc.readMem(0xc3c5), 0xf8);
        // 73 0219
        gbc.setState(0xdf72, 0x2920, 0xeaa0, 0x6bfc, 0xba53, 0x8a2a, 0x0, 0x1);
        gbc.writeMem(0x8a2a, { 0x0 });
        gbc.writeMem(0xdf72, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2920);
        EXPECT(gbc.pc(), 0xdf73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2a), 0x53);
        EXPECT(gbc.readMem(0xdf72), 0x73);
        // 73 021A
        gbc.setState(0xaf4f, 0x9b1e, 0xe590, 0xfd9d, 0x30d5, 0xcf62, 0x0, 0x1);
        gbc.writeMem(0xaf4f, { 0x73 });
        gbc.writeMem(0xcf62, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9b1e);
        EXPECT(gbc.pc(), 0xaf50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf4f), 0x73);
        EXPECT(gbc.readMem(0xcf62), 0xd5);
        // 73 0221
        gbc.setState(0xc2fa, 0xb143, 0x19b0, 0x72d7, 0x8452, 0xc788, 0x0, 0x0);
        gbc.writeMem(0xc2fa, { 0x73 });
        gbc.writeMem(0xc788, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xb143);
        EXPECT(gbc.pc(), 0xc2fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2fa), 0x73);
        EXPECT(gbc.readMem(0xc788), 0x52);
        // 73 0225
        gbc.setState(0x4e7, 0xe2bf, 0xab30, 0x9d97, 0x4aa3, 0xfbe2, 0x1, 0x0);
        gbc.writeMem(0x4e7, { 0x73 });
        gbc.writeMem(0xfbe2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe2bf);
        EXPECT(gbc.pc(), 0x4e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfbe2), 0xa3);
        // 73 0226
        gbc.setState(0x9514, 0x7c5a, 0x8c0, 0x45db, 0x19d3, 0xf6b9, 0x1, 0x0);
        gbc.writeMem(0x9514, { 0x73 });
        gbc.writeMem(0xf6b9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x7c5a);
        EXPECT(gbc.pc(), 0x9515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9514), 0x73);
        EXPECT(gbc.readMem(0xf6b9), 0xd3);
        // 73 0228
        gbc.setState(0x9316, 0x730, 0xf660, 0xd0e7, 0xed45, 0xf8fd, 0x1, 0x0);
        gbc.writeMem(0x9316, { 0x73 });
        gbc.writeMem(0xf8fd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x730);
        EXPECT(gbc.pc(), 0x9317);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9316), 0x73);
        EXPECT(gbc.readMem(0xf8fd), 0x45);
        // 73 022D
        gbc.setState(0xed3e, 0x486, 0x1be0, 0x3663, 0xdde5, 0x943c, 0x1, 0x0);
        gbc.writeMem(0x943c, { 0x0 });
        gbc.writeMem(0xed3e, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x486);
        EXPECT(gbc.pc(), 0xed3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x943c), 0xe5);
        EXPECT(gbc.readMem(0xed3e), 0x73);
        // 73 0230
        gbc.setState(0xb70c, 0x954c, 0xe550, 0x493, 0xa82d, 0xd05b, 0x1, 0x0);
        gbc.writeMem(0xb70c, { 0x73 });
        gbc.writeMem(0xd05b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x954c);
        EXPECT(gbc.pc(), 0xb70d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb70c), 0x73);
        EXPECT(gbc.readMem(0xd05b), 0x2d);
        // 73 0232
        gbc.setState(0x41c, 0xb94, 0x98d0, 0x6827, 0xe6a4, 0xf423, 0x1, 0x1);
        gbc.writeMem(0x41c, { 0x73 });
        gbc.writeMem(0xf423, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xb94);
        EXPECT(gbc.pc(), 0x41d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf423), 0xa4);
        // 73 0233
        gbc.setState(0x5684, 0x2df0, 0xabd0, 0x73ea, 0xbcd5, 0xee06, 0x0, 0x0);
        gbc.writeMem(0x5684, { 0x73 });
        gbc.writeMem(0xee06, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2df0);
        EXPECT(gbc.pc(), 0x5685);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee06), 0xd5);
        // 73 0234
        gbc.setState(0x18a2, 0x5e08, 0xb700, 0x8bed, 0xcf16, 0xed53, 0x1, 0x1);
        gbc.writeMem(0x18a2, { 0x73 });
        gbc.writeMem(0xed53, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x5e08);
        EXPECT(gbc.pc(), 0x18a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed53), 0x16);
        // 73 0235
        gbc.setState(0xe2e, 0x5612, 0x8220, 0x64fb, 0x2f7c, 0x8a1f, 0x0, 0x0);
        gbc.writeMem(0xe2e, { 0x73 });
        gbc.writeMem(0x8a1f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x5612);
        EXPECT(gbc.pc(), 0xe2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a1f), 0x7c);
        // 73 0236
        gbc.setState(0xcc6d, 0x4077, 0x1d40, 0xe52c, 0xc0b0, 0xe96d, 0x0, 0x0);
        gbc.writeMem(0xcc6d, { 0x73 });
        gbc.writeMem(0xe96d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x4077);
        EXPECT(gbc.pc(), 0xcc6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc6d), 0x73);
        EXPECT(gbc.readMem(0xe96d), 0xb0);
        // 73 0238
        gbc.setState(0xc328, 0xff59, 0x2cb0, 0xadf6, 0x31, 0xe85e, 0x0, 0x0);
        gbc.writeMem(0xc328, { 0x73 });
        gbc.writeMem(0xe85e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xff59);
        EXPECT(gbc.pc(), 0xc329);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc328), 0x73);
        EXPECT(gbc.readMem(0xe85e), 0x31);
        // 73 0239
        gbc.setState(0x817b, 0x1ab7, 0x22d0, 0x351b, 0x7728, 0xbc72, 0x1, 0x0);
        gbc.writeMem(0x817b, { 0x73 });
        gbc.writeMem(0xbc72, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x1ab7);
        EXPECT(gbc.pc(), 0x817c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x817b), 0x73);
        EXPECT(gbc.readMem(0xbc72), 0x28);
        // 73 023B
        gbc.setState(0xd45, 0xbaad, 0x3e10, 0x2d17, 0x61e4, 0x8a0a, 0x0, 0x0);
        gbc.writeMem(0xd45, { 0x73 });
        gbc.writeMem(0x8a0a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xbaad);
        EXPECT(gbc.pc(), 0xd46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a0a), 0xe4);
        // 73 023C
        gbc.setState(0x3e68, 0x8e9e, 0x3dd0, 0x6d5a, 0x357a, 0xd24c, 0x1, 0x1);
        gbc.writeMem(0x3e68, { 0x73 });
        gbc.writeMem(0xd24c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x8e9e);
        EXPECT(gbc.pc(), 0x3e69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd24c), 0x7a);
        // 73 023E
        gbc.setState(0xbf5d, 0x3afa, 0xc8e0, 0x5944, 0x67f0, 0xce2d, 0x0, 0x0);
        gbc.writeMem(0xbf5d, { 0x73 });
        gbc.writeMem(0xce2d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3afa);
        EXPECT(gbc.pc(), 0xbf5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf5d), 0x73);
        EXPECT(gbc.readMem(0xce2d), 0xf0);
        // 73 023F
        gbc.setState(0x7a20, 0x7b3a, 0xbc80, 0x5da4, 0x618c, 0x8e87, 0x1, 0x1);
        gbc.writeMem(0x7a20, { 0x73 });
        gbc.writeMem(0x8e87, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x7b3a);
        EXPECT(gbc.pc(), 0x7a21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e87), 0x8c);
        // 73 0240
        gbc.setState(0xe4ac, 0x82ca, 0x7920, 0x308d, 0xc957, 0xa9d6, 0x1, 0x0);
        gbc.writeMem(0xa9d6, { 0x0 });
        gbc.writeMem(0xe4ac, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x82ca);
        EXPECT(gbc.pc(), 0xe4ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9d6), 0x57);
        EXPECT(gbc.readMem(0xe4ac), 0x73);
        // 73 0241
        gbc.setState(0x2cfb, 0x27cb, 0xb0d0, 0x8811, 0x3c0a, 0xbadb, 0x0, 0x1);
        gbc.writeMem(0x2cfb, { 0x73 });
        gbc.writeMem(0xbadb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x27cb);
        EXPECT(gbc.pc(), 0x2cfc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbadb), 0xa);
        // 73 0242
        gbc.setState(0x22bf, 0x76a5, 0x3770, 0xd3f1, 0x23c8, 0xbdab, 0x1, 0x1);
        gbc.writeMem(0x22bf, { 0x73 });
        gbc.writeMem(0xbdab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x76a5);
        EXPECT(gbc.pc(), 0x22c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdab), 0xc8);
        // 73 0245
        gbc.setState(0x618c, 0x532c, 0x1970, 0xe374, 0x7a8f, 0xb054, 0x0, 0x1);
        gbc.writeMem(0x618c, { 0x73 });
        gbc.writeMem(0xb054, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x532c);
        EXPECT(gbc.pc(), 0x618d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb054), 0x8f);
        // 73 0246
        gbc.setState(0xb7a6, 0xf258, 0x4570, 0xc657, 0x620b, 0xe893, 0x1, 0x0);
        gbc.writeMem(0xb7a6, { 0x73 });
        gbc.writeMem(0xe893, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf258);
        EXPECT(gbc.pc(), 0xb7a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7a6), 0x73);
        EXPECT(gbc.readMem(0xe893), 0xb);
        // 73 0247
        gbc.setState(0x63d2, 0x7930, 0xe8f0, 0x9472, 0xd553, 0xd634, 0x1, 0x0);
        gbc.writeMem(0x63d2, { 0x73 });
        gbc.writeMem(0xd634, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7930);
        EXPECT(gbc.pc(), 0x63d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd634), 0x53);
        // 73 024B
        gbc.setState(0x866f, 0xd9d2, 0xd9b0, 0x5ba1, 0xbc57, 0xe65f, 0x1, 0x0);
        gbc.writeMem(0x866f, { 0x73 });
        gbc.writeMem(0xe65f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xd9d2);
        EXPECT(gbc.pc(), 0x8670);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x866f), 0x73);
        EXPECT(gbc.readMem(0xe65f), 0x57);
        // 73 024D
        gbc.setState(0x5929, 0x4e8a, 0x96a0, 0xe75d, 0x7371, 0x804c, 0x0, 0x1);
        gbc.writeMem(0x5929, { 0x73 });
        gbc.writeMem(0x804c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x4e8a);
        EXPECT(gbc.pc(), 0x592a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x804c), 0x71);
        // 73 024E
        gbc.setState(0xa1b2, 0xd1a3, 0x5cd0, 0xf598, 0x7903, 0xea69, 0x0, 0x1);
        gbc.writeMem(0xa1b2, { 0x73 });
        gbc.writeMem(0xea69, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd1a3);
        EXPECT(gbc.pc(), 0xa1b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1b2), 0x73);
        EXPECT(gbc.readMem(0xea69), 0x3);
        // 73 024F
        gbc.setState(0xa4eb, 0xf854, 0x7610, 0x5a9b, 0x50cb, 0xc978, 0x1, 0x0);
        gbc.writeMem(0xa4eb, { 0x73 });
        gbc.writeMem(0xc978, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf854);
        EXPECT(gbc.pc(), 0xa4ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4eb), 0x73);
        EXPECT(gbc.readMem(0xc978), 0xcb);
        // 73 0251
        gbc.setState(0x275b, 0x7ae6, 0xb4f0, 0x638a, 0x216a, 0xf31c, 0x0, 0x0);
        gbc.writeMem(0x275b, { 0x73 });
        gbc.writeMem(0xf31c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7ae6);
        EXPECT(gbc.pc(), 0x275c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf31c), 0x6a);
        // 73 0252
        gbc.setState(0x9745, 0xb0ab, 0x94b0, 0x3844, 0x1962, 0x8521, 0x0, 0x0);
        gbc.writeMem(0x8521, { 0x0 });
        gbc.writeMem(0x9745, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xb0ab);
        EXPECT(gbc.pc(), 0x9746);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8521), 0x62);
        EXPECT(gbc.readMem(0x9745), 0x73);
        // 73 0255
        gbc.setState(0xb699, 0xe6c5, 0xe560, 0x2fd4, 0x541, 0xbd4d, 0x1, 0x1);
        gbc.writeMem(0xb699, { 0x73 });
        gbc.writeMem(0xbd4d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe6c5);
        EXPECT(gbc.pc(), 0xb69a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb699), 0x73);
        EXPECT(gbc.readMem(0xbd4d), 0x41);
        // 73 025A
        gbc.setState(0xab90, 0xd2f8, 0x4ed0, 0x6224, 0x1e09, 0xb040, 0x1, 0x0);
        gbc.writeMem(0xab90, { 0x73 });
        gbc.writeMem(0xb040, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xd2f8);
        EXPECT(gbc.pc(), 0xab91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab90), 0x73);
        EXPECT(gbc.readMem(0xb040), 0x9);
        // 73 025C
        gbc.setState(0xc6e5, 0x9953, 0x2d90, 0x1f8a, 0x6a08, 0xeef0, 0x0, 0x0);
        gbc.writeMem(0xc6e5, { 0x73 });
        gbc.writeMem(0xeef0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x9953);
        EXPECT(gbc.pc(), 0xc6e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e5), 0x73);
        EXPECT(gbc.readMem(0xeef0), 0x8);
        // 73 025D
        gbc.setState(0x2fad, 0x119d, 0x4300, 0x6bb7, 0x5f39, 0xc6e4, 0x1, 0x0);
        gbc.writeMem(0x2fad, { 0x73 });
        gbc.writeMem(0xc6e4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x119d);
        EXPECT(gbc.pc(), 0x2fae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6e4), 0x39);
        // 73 0261
        gbc.setState(0x4011, 0x9641, 0x8fd0, 0x3564, 0xb19f, 0x9ce0, 0x1, 0x0);
        gbc.writeMem(0x4011, { 0x73 });
        gbc.writeMem(0x9ce0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9641);
        EXPECT(gbc.pc(), 0x4012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ce0), 0x9f);
        // 73 0263
        gbc.setState(0x59f4, 0x6195, 0xcb40, 0x439b, 0xd116, 0xc3c5, 0x1, 0x0);
        gbc.writeMem(0x59f4, { 0x73 });
        gbc.writeMem(0xc3c5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x6195);
        EXPECT(gbc.pc(), 0x59f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3c5), 0x16);
        // 73 0264
        gbc.setState(0xc167, 0x6e0d, 0xa640, 0xe172, 0x38c9, 0xaef2, 0x0, 0x1);
        gbc.writeMem(0xaef2, { 0x0 });
        gbc.writeMem(0xc167, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x6e0d);
        EXPECT(gbc.pc(), 0xc168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaef2), 0xc9);
        EXPECT(gbc.readMem(0xc167), 0x73);
        // 73 0269
        gbc.setState(0xa5cd, 0x8470, 0x7c10, 0x1616, 0xeb7f, 0xd8aa, 0x0, 0x0);
        gbc.writeMem(0xa5cd, { 0x73 });
        gbc.writeMem(0xd8aa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x8470);
        EXPECT(gbc.pc(), 0xa5ce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5cd), 0x73);
        EXPECT(gbc.readMem(0xd8aa), 0x7f);
        // 73 026B
        gbc.setState(0x220, 0xf88b, 0x61a0, 0x776c, 0xfec2, 0xdd4e, 0x0, 0x1);
        gbc.writeMem(0x220, { 0x73 });
        gbc.writeMem(0xdd4e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xf88b);
        EXPECT(gbc.pc(), 0x221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd4e), 0xc2);
        // 73 026D
        gbc.setState(0x7844, 0x6ee5, 0x4e0, 0x7b25, 0x5aa7, 0x8f50, 0x0, 0x0);
        gbc.writeMem(0x7844, { 0x73 });
        gbc.writeMem(0x8f50, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x6ee5);
        EXPECT(gbc.pc(), 0x7845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f50), 0xa7);
        // 73 026F
        gbc.setState(0x47b1, 0xc8a, 0x1360, 0xb6e9, 0xbb03, 0xfa06, 0x1, 0x0);
        gbc.writeMem(0x47b1, { 0x73 });
        gbc.writeMem(0xfa06, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xc8a);
        EXPECT(gbc.pc(), 0x47b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfa06), 0x3);
        // 73 0270
        gbc.setState(0xdd8d, 0x23fc, 0x87f0, 0x8f45, 0x53ca, 0xaa17, 0x1, 0x1);
        gbc.writeMem(0xaa17, { 0x0 });
        gbc.writeMem(0xdd8d, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x23fc);
        EXPECT(gbc.pc(), 0xdd8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa17), 0xca);
        EXPECT(gbc.readMem(0xdd8d), 0x73);
        // 73 0271
        gbc.setState(0x5ecb, 0x506b, 0x9a40, 0xff9, 0x5c03, 0x8c11, 0x1, 0x0);
        gbc.writeMem(0x5ecb, { 0x73 });
        gbc.writeMem(0x8c11, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x506b);
        EXPECT(gbc.pc(), 0x5ecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c11), 0x3);
        // 73 0272
        gbc.setState(0x667, 0x28f, 0xd480, 0xc69a, 0x6ee5, 0xadd6, 0x1, 0x0);
        gbc.writeMem(0x667, { 0x73 });
        gbc.writeMem(0xadd6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x28f);
        EXPECT(gbc.pc(), 0x668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadd6), 0xe5);
        // 73 0274
        gbc.setState(0x3159, 0xc924, 0x69c0, 0x44d6, 0xcf9b, 0xdad7, 0x0, 0x1);
        gbc.writeMem(0x3159, { 0x73 });
        gbc.writeMem(0xdad7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xc924);
        EXPECT(gbc.pc(), 0x315a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdad7), 0x9b);
        // 73 0276
        gbc.setState(0x899, 0x200b, 0xed70, 0x85ea, 0xada1, 0xfe9a, 0x1, 0x0);
        gbc.writeMem(0x899, { 0x73 });
        gbc.writeMem(0xfe9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x200b);
        EXPECT(gbc.pc(), 0x89a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe9a), 0xa1);
        // 73 0277
        gbc.setState(0x4339, 0x4d7a, 0x5b90, 0x7e62, 0x9f47, 0xec18, 0x0, 0x0);
        gbc.writeMem(0x4339, { 0x73 });
        gbc.writeMem(0xec18, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x4d7a);
        EXPECT(gbc.pc(), 0x433a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec18), 0x47);
        // 73 0279
        gbc.setState(0x8a73, 0x5c57, 0x70b0, 0xa543, 0x4b45, 0xb2f1, 0x1, 0x0);
        gbc.writeMem(0x8a73, { 0x73 });
        gbc.writeMem(0xb2f1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x5c57);
        EXPECT(gbc.pc(), 0x8a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a73), 0x73);
        EXPECT(gbc.readMem(0xb2f1), 0x45);
        // 73 027B
        gbc.setState(0x8125, 0x429d, 0x3bd0, 0xc45a, 0xac0c, 0xd036, 0x0, 0x0);
        gbc.writeMem(0x8125, { 0x73 });
        gbc.writeMem(0xd036, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x429d);
        EXPECT(gbc.pc(), 0x8126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8125), 0x73);
        EXPECT(gbc.readMem(0xd036), 0xc);
        // 73 027C
        gbc.setState(0x8861, 0xe2db, 0xd010, 0xdd72, 0x9993, 0xa4d1, 0x0, 0x0);
        gbc.writeMem(0x8861, { 0x73 });
        gbc.writeMem(0xa4d1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xe2db);
        EXPECT(gbc.pc(), 0x8862);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8861), 0x73);
        EXPECT(gbc.readMem(0xa4d1), 0x93);
        // 73 027F
        gbc.setState(0xbcb8, 0x70d8, 0x2520, 0x811c, 0x4af5, 0x976f, 0x1, 0x1);
        gbc.writeMem(0x976f, { 0x0 });
        gbc.writeMem(0xbcb8, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x70d8);
        EXPECT(gbc.pc(), 0xbcb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x976f), 0xf5);
        EXPECT(gbc.readMem(0xbcb8), 0x73);
        // 73 0280
        gbc.setState(0x9580, 0x5f6f, 0x250, 0xd7b1, 0x7694, 0xaf85, 0x1, 0x0);
        gbc.writeMem(0x9580, { 0x73 });
        gbc.writeMem(0xaf85, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5f6f);
        EXPECT(gbc.pc(), 0x9581);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9580), 0x73);
        EXPECT(gbc.readMem(0xaf85), 0x94);
        // 73 0282
        gbc.setState(0x2219, 0xf4cd, 0x2920, 0xf122, 0x440b, 0xc32b, 0x0, 0x0);
        gbc.writeMem(0x2219, { 0x73 });
        gbc.writeMem(0xc32b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xf4cd);
        EXPECT(gbc.pc(), 0x221a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc32b), 0xb);
        // 73 0283
        gbc.setState(0x9130, 0x162d, 0xa4d0, 0x9165, 0x9d7e, 0xb3f5, 0x1, 0x1);
        gbc.writeMem(0x9130, { 0x73 });
        gbc.writeMem(0xb3f5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x162d);
        EXPECT(gbc.pc(), 0x9131);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9130), 0x73);
        EXPECT(gbc.readMem(0xb3f5), 0x7e);
        // 73 0289
        gbc.setState(0xdcb8, 0xf438, 0x3cc0, 0xa48a, 0x49c0, 0xa5aa, 0x0, 0x0);
        gbc.writeMem(0xa5aa, { 0x0 });
        gbc.writeMem(0xdcb8, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf438);
        EXPECT(gbc.pc(), 0xdcb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5aa), 0xc0);
        EXPECT(gbc.readMem(0xdcb8), 0x73);
        // 73 028C
        gbc.setState(0xed56, 0x5796, 0x7ad0, 0x933a, 0xa9fe, 0xb0ac, 0x0, 0x0);
        gbc.writeMem(0xb0ac, { 0x0 });
        gbc.writeMem(0xed56, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x5796);
        EXPECT(gbc.pc(), 0xed57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0ac), 0xfe);
        EXPECT(gbc.readMem(0xed56), 0x73);
        // 73 028E
        gbc.setState(0x4100, 0xf25c, 0xec60, 0x6834, 0x9c76, 0xa160, 0x0, 0x1);
        gbc.writeMem(0x4100, { 0x73 });
        gbc.writeMem(0xa160, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xf25c);
        EXPECT(gbc.pc(), 0x4101);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa160), 0x76);
        // 73 0290
        gbc.setState(0x67c, 0x9b34, 0xac40, 0x2de1, 0x9c21, 0xe471, 0x0, 0x0);
        gbc.writeMem(0x67c, { 0x73 });
        gbc.writeMem(0xe471, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x9b34);
        EXPECT(gbc.pc(), 0x67d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe471), 0x21);
        // 73 0291
        gbc.setState(0x5603, 0x30b5, 0xb7d0, 0xb7cb, 0x5bdf, 0x8c9a, 0x0, 0x0);
        gbc.writeMem(0x5603, { 0x73 });
        gbc.writeMem(0x8c9a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x30b5);
        EXPECT(gbc.pc(), 0x5604);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c9a), 0xdf);
        // 73 0293
        gbc.setState(0xd2a7, 0x99f6, 0xe9e0, 0x27a9, 0x5d52, 0xc7b6, 0x0, 0x0);
        gbc.writeMem(0xc7b6, { 0x0 });
        gbc.writeMem(0xd2a7, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x99f6);
        EXPECT(gbc.pc(), 0xd2a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7b6), 0x52);
        EXPECT(gbc.readMem(0xd2a7), 0x73);
        // 73 0294
        gbc.setState(0x6d5c, 0xcedc, 0x7290, 0x5e8b, 0x8189, 0xe5ff, 0x0, 0x1);
        gbc.writeMem(0x6d5c, { 0x73 });
        gbc.writeMem(0xe5ff, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xcedc);
        EXPECT(gbc.pc(), 0x6d5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5ff), 0x89);
        // 73 0298
        gbc.setState(0xbc9, 0x98ca, 0x1a00, 0x16c8, 0x616e, 0xd30a, 0x1, 0x0);
        gbc.writeMem(0xbc9, { 0x73 });
        gbc.writeMem(0xd30a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x98ca);
        EXPECT(gbc.pc(), 0xbca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd30a), 0x6e);
        // 73 029B
        gbc.setState(0x567a, 0x46a6, 0x1060, 0xdbd9, 0x4c21, 0xf8fb, 0x1, 0x0);
        gbc.writeMem(0x567a, { 0x73 });
        gbc.writeMem(0xf8fb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x46a6);
        EXPECT(gbc.pc(), 0x567b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8fb), 0x21);
        // 73 029C
        gbc.setState(0x40e2, 0xb0fd, 0x2ab0, 0x1484, 0x20a, 0xbcbb, 0x0, 0x0);
        gbc.writeMem(0x40e2, { 0x73 });
        gbc.writeMem(0xbcbb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xb0fd);
        EXPECT(gbc.pc(), 0x40e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcbb), 0xa);
        // 73 029F
        gbc.setState(0xd209, 0xbea4, 0x9010, 0x75b6, 0xc8bd, 0xe918, 0x0, 0x0);
        gbc.writeMem(0xd209, { 0x73 });
        gbc.writeMem(0xe918, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xbea4);
        EXPECT(gbc.pc(), 0xd20a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd209), 0x73);
        EXPECT(gbc.readMem(0xe918), 0xbd);
        // 73 02A1
        gbc.setState(0x3edf, 0x24d, 0x8dd0, 0x1dc0, 0xd862, 0xed33, 0x1, 0x1);
        gbc.writeMem(0x3edf, { 0x73 });
        gbc.writeMem(0xed33, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x24d);
        EXPECT(gbc.pc(), 0x3ee0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed33), 0x62);
        // 73 02A5
        gbc.setState(0x564c, 0x2397, 0x91b0, 0xf2a0, 0xd851, 0xe291, 0x1, 0x0);
        gbc.writeMem(0x564c, { 0x73 });
        gbc.writeMem(0xe291, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2397);
        EXPECT(gbc.pc(), 0x564d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe291), 0x51);
        // 73 02A7
        gbc.setState(0x986f, 0xdcc, 0x2460, 0xdf80, 0x64e9, 0xf08e, 0x1, 0x0);
        gbc.writeMem(0x986f, { 0x73 });
        gbc.writeMem(0xf08e, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdcc);
        EXPECT(gbc.pc(), 0x9870);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x986f), 0x73);
        EXPECT(gbc.readMem(0xf08e), 0xe9);
        // 73 02A9
        gbc.setState(0x330, 0x61ec, 0xf80, 0x6a23, 0xc3b4, 0x939b, 0x1, 0x0);
        gbc.writeMem(0x330, { 0x73 });
        gbc.writeMem(0x939b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x61ec);
        EXPECT(gbc.pc(), 0x331);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x939b), 0xb4);
        // 73 02AB
        gbc.setState(0xcccf, 0xf9a7, 0xac0, 0x2376, 0xf83, 0xcf31, 0x1, 0x0);
        gbc.writeMem(0xcccf, { 0x73 });
        gbc.writeMem(0xcf31, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf9a7);
        EXPECT(gbc.pc(), 0xccd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcccf), 0x73);
        EXPECT(gbc.readMem(0xcf31), 0x83);
        // 73 02AC
        gbc.setState(0x1f2e, 0x793f, 0x50c0, 0x21b, 0xdcba, 0xa5f0, 0x0, 0x0);
        gbc.writeMem(0x1f2e, { 0x73 });
        gbc.writeMem(0xa5f0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x793f);
        EXPECT(gbc.pc(), 0x1f2f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5f0), 0xba);
        // 73 02AE
        gbc.setState(0x7367, 0x6d1d, 0xc020, 0xfc78, 0x3c8d, 0x9ade, 0x1, 0x1);
        gbc.writeMem(0x7367, { 0x73 });
        gbc.writeMem(0x9ade, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x6d1d);
        EXPECT(gbc.pc(), 0x7368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ade), 0x8d);
        // 73 02AF
        gbc.setState(0x7e40, 0x48a, 0x6610, 0x760e, 0xbfb3, 0xb4aa, 0x0, 0x1);
        gbc.writeMem(0x7e40, { 0x73 });
        gbc.writeMem(0xb4aa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x48a);
        EXPECT(gbc.pc(), 0x7e41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4aa), 0xb3);
        // 73 02B0
        gbc.setState(0x2f, 0x10ed, 0xae40, 0xff85, 0x454f, 0x80f5, 0x1, 0x1);
        gbc.writeMem(0x2f, { 0x73 });
        gbc.writeMem(0x80f5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x10ed);
        EXPECT(gbc.pc(), 0x30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80f5), 0x4f);
        // 73 02B2
        gbc.setState(0x48bc, 0xfa91, 0xef10, 0xd975, 0xaaaf, 0xa694, 0x0, 0x0);
        gbc.writeMem(0x48bc, { 0x73 });
        gbc.writeMem(0xa694, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfa91);
        EXPECT(gbc.pc(), 0x48bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa694), 0xaf);
        // 73 02B3
        gbc.setState(0x8a6d, 0x5058, 0x75a0, 0x211c, 0x56b4, 0x9a58, 0x0, 0x1);
        gbc.writeMem(0x8a6d, { 0x73 });
        gbc.writeMem(0x9a58, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5058);
        EXPECT(gbc.pc(), 0x8a6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a6d), 0x73);
        EXPECT(gbc.readMem(0x9a58), 0xb4);
        // 73 02B5
        gbc.setState(0xcd07, 0xe9f8, 0x3750, 0x2875, 0x7795, 0x8a8a, 0x1, 0x0);
        gbc.writeMem(0x8a8a, { 0x0 });
        gbc.writeMem(0xcd07, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe9f8);
        EXPECT(gbc.pc(), 0xcd08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a8a), 0x95);
        EXPECT(gbc.readMem(0xcd07), 0x73);
        // 73 02B7
        gbc.setState(0x2088, 0xad81, 0x7030, 0x7c8d, 0x505c, 0xd305, 0x1, 0x0);
        gbc.writeMem(0x2088, { 0x73 });
        gbc.writeMem(0xd305, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xad81);
        EXPECT(gbc.pc(), 0x2089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd305), 0x5c);
        // 73 02B8
        gbc.setState(0xaa40, 0x895, 0x150, 0x3fb6, 0x3743, 0xe9e8, 0x0, 0x0);
        gbc.writeMem(0xaa40, { 0x73 });
        gbc.writeMem(0xe9e8, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x895);
        EXPECT(gbc.pc(), 0xaa41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa40), 0x73);
        EXPECT(gbc.readMem(0xe9e8), 0x43);
        // 73 02BC
        gbc.setState(0xc50, 0x4fd6, 0xba60, 0x9da1, 0x4645, 0x83aa, 0x1, 0x1);
        gbc.writeMem(0xc50, { 0x73 });
        gbc.writeMem(0x83aa, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x4fd6);
        EXPECT(gbc.pc(), 0xc51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83aa), 0x45);
        // 73 02BE
        gbc.setState(0x48dc, 0xd67, 0x1580, 0xcf6c, 0xe2e, 0xae0c, 0x0, 0x0);
        gbc.writeMem(0x48dc, { 0x73 });
        gbc.writeMem(0xae0c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xd67);
        EXPECT(gbc.pc(), 0x48dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae0c), 0x2e);
        // 73 02C0
        gbc.setState(0x5e8b, 0xe7bf, 0xd9d0, 0x5ab9, 0xb042, 0x833d, 0x0, 0x0);
        gbc.writeMem(0x5e8b, { 0x73 });
        gbc.writeMem(0x833d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xe7bf);
        EXPECT(gbc.pc(), 0x5e8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x833d), 0x42);
        // 73 02C2
        gbc.setState(0xf9e, 0xcaac, 0xb330, 0x8588, 0x2ae2, 0xbcc1, 0x1, 0x1);
        gbc.writeMem(0xf9e, { 0x73 });
        gbc.writeMem(0xbcc1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xcaac);
        EXPECT(gbc.pc(), 0xf9f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc1), 0xe2);
        // 73 02C4
        gbc.setState(0xd32f, 0x698, 0xcdb0, 0x4442, 0xdc45, 0xc6c3, 0x1, 0x1);
        gbc.writeMem(0xc6c3, { 0x0 });
        gbc.writeMem(0xd32f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x698);
        EXPECT(gbc.pc(), 0xd330);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6c3), 0x45);
        EXPECT(gbc.readMem(0xd32f), 0x73);
        // 73 02CA
        gbc.setState(0xc998, 0x5249, 0xf0e0, 0x945c, 0x1219, 0x8d57, 0x1, 0x0);
        gbc.writeMem(0x8d57, { 0x0 });
        gbc.writeMem(0xc998, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x5249);
        EXPECT(gbc.pc(), 0xc999);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d57), 0x19);
        EXPECT(gbc.readMem(0xc998), 0x73);
        // 73 02CF
        gbc.setState(0x4652, 0xf83, 0xb560, 0x625b, 0x1512, 0xb366, 0x1, 0x0);
        gbc.writeMem(0x4652, { 0x73 });
        gbc.writeMem(0xb366, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xf83);
        EXPECT(gbc.pc(), 0x4653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb366), 0x12);
        // 73 02D4
        gbc.setState(0x180d, 0x525e, 0x3600, 0x3feb, 0x4662, 0xced9, 0x0, 0x1);
        gbc.writeMem(0x180d, { 0x73 });
        gbc.writeMem(0xced9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x525e);
        EXPECT(gbc.pc(), 0x180e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xced9), 0x62);
        // 73 02D6
        gbc.setState(0xb256, 0xa961, 0x3600, 0xbb47, 0x6b7d, 0xdb10, 0x0, 0x0);
        gbc.writeMem(0xb256, { 0x73 });
        gbc.writeMem(0xdb10, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa961);
        EXPECT(gbc.pc(), 0xb257);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb256), 0x73);
        EXPECT(gbc.readMem(0xdb10), 0x7d);
        // 73 02DD
        gbc.setState(0xd7b, 0x3845, 0xf450, 0xe250, 0xbeef, 0xe635, 0x0, 0x0);
        gbc.writeMem(0xd7b, { 0x73 });
        gbc.writeMem(0xe635, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3845);
        EXPECT(gbc.pc(), 0xd7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe635), 0xef);
        // 73 02E0
        gbc.setState(0x598f, 0x3ff1, 0x6020, 0x7c25, 0x2816, 0xb228, 0x1, 0x0);
        gbc.writeMem(0x598f, { 0x73 });
        gbc.writeMem(0xb228, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3ff1);
        EXPECT(gbc.pc(), 0x5990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb228), 0x16);
        // 73 02E1
        gbc.setState(0x6428, 0x58cf, 0x8c10, 0x57b6, 0x2f15, 0xdb77, 0x0, 0x1);
        gbc.writeMem(0x6428, { 0x73 });
        gbc.writeMem(0xdb77, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x58cf);
        EXPECT(gbc.pc(), 0x6429);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb77), 0x15);
        // 73 02E3
        gbc.setState(0xcdb3, 0x3cd4, 0x2fc0, 0x78d9, 0x85d0, 0x8219, 0x1, 0x0);
        gbc.writeMem(0x8219, { 0x0 });
        gbc.writeMem(0xcdb3, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x3cd4);
        EXPECT(gbc.pc(), 0xcdb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8219), 0xd0);
        EXPECT(gbc.readMem(0xcdb3), 0x73);
        // 73 02E6
        gbc.setState(0x4f37, 0xc3bd, 0x6670, 0xd2f7, 0xba2b, 0xd420, 0x1, 0x0);
        gbc.writeMem(0x4f37, { 0x73 });
        gbc.writeMem(0xd420, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xc3bd);
        EXPECT(gbc.pc(), 0x4f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd420), 0x2b);
        // 73 02E8
        gbc.setState(0xd0d0, 0xa66d, 0xf830, 0x4e84, 0x575d, 0xab1d, 0x0, 0x1);
        gbc.writeMem(0xab1d, { 0x0 });
        gbc.writeMem(0xd0d0, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xa66d);
        EXPECT(gbc.pc(), 0xd0d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1d), 0x5d);
        EXPECT(gbc.readMem(0xd0d0), 0x73);
        // 73 02E9
        gbc.setState(0x537d, 0x32a6, 0xfc40, 0xfb1a, 0xb11c, 0xb53c, 0x1, 0x1);
        gbc.writeMem(0x537d, { 0x73 });
        gbc.writeMem(0xb53c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x32a6);
        EXPECT(gbc.pc(), 0x537e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb53c), 0x1c);
        // 73 02EA
        gbc.setState(0xe0b, 0x6873, 0x7c10, 0xd636, 0x27a2, 0x8d1b, 0x0, 0x1);
        gbc.writeMem(0xe0b, { 0x73 });
        gbc.writeMem(0x8d1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x6873);
        EXPECT(gbc.pc(), 0xe0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d1b), 0xa2);
        // 73 02EB
        gbc.setState(0xea0b, 0xc7cc, 0x7f00, 0x5a73, 0x756b, 0xc359, 0x0, 0x1);
        gbc.writeMem(0xc359, { 0x0 });
        gbc.writeMem(0xea0b, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc7cc);
        EXPECT(gbc.pc(), 0xea0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc359), 0x6b);
        EXPECT(gbc.readMem(0xea0b), 0x73);
        // 73 02EE
        gbc.setState(0x3f24, 0xd986, 0xdef0, 0xdfdf, 0xa3cf, 0xd49d, 0x0, 0x0);
        gbc.writeMem(0x3f24, { 0x73 });
        gbc.writeMem(0xd49d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd986);
        EXPECT(gbc.pc(), 0x3f25);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd49d), 0xcf);
        // 73 02EF
        gbc.setState(0xea7d, 0xcaac, 0x96d0, 0xa8d1, 0x2d0c, 0xb2c9, 0x0, 0x0);
        gbc.writeMem(0xb2c9, { 0x0 });
        gbc.writeMem(0xea7d, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xcaac);
        EXPECT(gbc.pc(), 0xea7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2c9), 0xc);
        EXPECT(gbc.readMem(0xea7d), 0x73);
        // 73 02F2
        gbc.setState(0x948f, 0xd47b, 0xe060, 0xe5b0, 0xc8c1, 0xaa57, 0x1, 0x1);
        gbc.writeMem(0x948f, { 0x73 });
        gbc.writeMem(0xaa57, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd47b);
        EXPECT(gbc.pc(), 0x9490);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x948f), 0x73);
        EXPECT(gbc.readMem(0xaa57), 0xc1);
        // 73 02F5
        gbc.setState(0x398b, 0xe9f6, 0x71d0, 0x1a61, 0xa945, 0x9c9f, 0x1, 0x1);
        gbc.writeMem(0x398b, { 0x73 });
        gbc.writeMem(0x9c9f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xe9f6);
        EXPECT(gbc.pc(), 0x398c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9f), 0x45);
        // 73 02FA
        gbc.setState(0xe997, 0xd31, 0xf3f0, 0x5309, 0xb1dd, 0x9784, 0x0, 0x0);
        gbc.writeMem(0x9784, { 0x0 });
        gbc.writeMem(0xe997, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd31);
        EXPECT(gbc.pc(), 0xe998);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9784), 0xdd);
        EXPECT(gbc.readMem(0xe997), 0x73);
        // 73 02FD
        gbc.setState(0xc9ce, 0x97d6, 0x90c0, 0x3823, 0xe869, 0xa4cd, 0x1, 0x0);
        gbc.writeMem(0xa4cd, { 0x0 });
        gbc.writeMem(0xc9ce, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x97d6);
        EXPECT(gbc.pc(), 0xc9cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4cd), 0x69);
        EXPECT(gbc.readMem(0xc9ce), 0x73);
        // 73 02FF
        gbc.setState(0xb1db, 0xb08a, 0x29c0, 0x108c, 0xff39, 0xafde, 0x1, 0x0);
        gbc.writeMem(0xafde, { 0x0 });
        gbc.writeMem(0xb1db, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xb08a);
        EXPECT(gbc.pc(), 0xb1dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafde), 0x39);
        EXPECT(gbc.readMem(0xb1db), 0x73);
        // 73 0301
        gbc.setState(0x93a0, 0x4208, 0xdf00, 0x1b20, 0xc8c3, 0xad26, 0x0, 0x1);
        gbc.writeMem(0x93a0, { 0x73 });
        gbc.writeMem(0xad26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4208);
        EXPECT(gbc.pc(), 0x93a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93a0), 0x73);
        EXPECT(gbc.readMem(0xad26), 0xc3);
        // 73 0302
        gbc.setState(0xb7c3, 0x2631, 0xb390, 0x88c2, 0xf431, 0xc84b, 0x0, 0x1);
        gbc.writeMem(0xb7c3, { 0x73 });
        gbc.writeMem(0xc84b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x2631);
        EXPECT(gbc.pc(), 0xb7c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7c3), 0x73);
        EXPECT(gbc.readMem(0xc84b), 0x31);
        // 73 030A
        gbc.setState(0x5afe, 0xc6d3, 0x7f80, 0xfb1d, 0xaa83, 0xa2b9, 0x0, 0x1);
        gbc.writeMem(0x5afe, { 0x73 });
        gbc.writeMem(0xa2b9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc6d3);
        EXPECT(gbc.pc(), 0x5aff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2b9), 0x83);
        // 73 030F
        gbc.setState(0x3c2f, 0x69b1, 0xdf40, 0xb9e6, 0x5b9e, 0xb765, 0x0, 0x0);
        gbc.writeMem(0x3c2f, { 0x73 });
        gbc.writeMem(0xb765, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x69b1);
        EXPECT(gbc.pc(), 0x3c30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb765), 0x9e);
        // 73 0310
        gbc.setState(0xaee6, 0xc4fd, 0xcf00, 0xb5c0, 0x8fab, 0x888e, 0x0, 0x1);
        gbc.writeMem(0x888e, { 0x0 });
        gbc.writeMem(0xaee6, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc4fd);
        EXPECT(gbc.pc(), 0xaee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x888e), 0xab);
        EXPECT(gbc.readMem(0xaee6), 0x73);
        // 73 0313
        gbc.setState(0xaf08, 0x46c5, 0xf0d0, 0x74c3, 0xa820, 0xaa10, 0x1, 0x0);
        gbc.writeMem(0xaa10, { 0x0 });
        gbc.writeMem(0xaf08, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x46c5);
        EXPECT(gbc.pc(), 0xaf09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa10), 0x20);
        EXPECT(gbc.readMem(0xaf08), 0x73);
        // 73 0314
        gbc.setState(0x3728, 0x1dd8, 0x5650, 0xf403, 0x1d40, 0xe2ab, 0x0, 0x0);
        gbc.writeMem(0x3728, { 0x73 });
        gbc.writeMem(0xe2ab, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1dd8);
        EXPECT(gbc.pc(), 0x3729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2ab), 0x40);
        // 73 0316
        gbc.setState(0x91ad, 0xe7f0, 0x6f20, 0xb1cc, 0xf2ad, 0xfaa9, 0x0, 0x0);
        gbc.writeMem(0x91ad, { 0x73 });
        gbc.writeMem(0xfaa9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xe7f0);
        EXPECT(gbc.pc(), 0x91ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ad), 0x73);
        EXPECT(gbc.readMem(0xfaa9), 0xad);
        // 73 0317
        gbc.setState(0x3c1f, 0x475c, 0x2640, 0xd66e, 0x26c9, 0xb023, 0x0, 0x1);
        gbc.writeMem(0x3c1f, { 0x73 });
        gbc.writeMem(0xb023, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x475c);
        EXPECT(gbc.pc(), 0x3c20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb023), 0xc9);
        // 73 031A
        gbc.setState(0xcdc4, 0x3910, 0x98c0, 0x57e9, 0x8105, 0xf447, 0x0, 0x0);
        gbc.writeMem(0xcdc4, { 0x73 });
        gbc.writeMem(0xf447, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x3910);
        EXPECT(gbc.pc(), 0xcdc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdc4), 0x73);
        EXPECT(gbc.readMem(0xf447), 0x5);
        // 73 031B
        gbc.setState(0x7616, 0xbea8, 0xe70, 0x8386, 0x3a30, 0xfb48, 0x0, 0x0);
        gbc.writeMem(0x7616, { 0x73 });
        gbc.writeMem(0xfb48, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xbea8);
        EXPECT(gbc.pc(), 0x7617);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb48), 0x30);
        // 73 0322
        gbc.setState(0x1ee6, 0x88dd, 0x76b0, 0x2b1d, 0x9118, 0xdc58, 0x0, 0x0);
        gbc.writeMem(0x1ee6, { 0x73 });
        gbc.writeMem(0xdc58, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x88dd);
        EXPECT(gbc.pc(), 0x1ee7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc58), 0x18);
        // 73 0328
        gbc.setState(0xeb21, 0x226, 0x1170, 0xae92, 0xcdb7, 0x9ccc, 0x1, 0x0);
        gbc.writeMem(0x9ccc, { 0x0 });
        gbc.writeMem(0xeb21, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x226);
        EXPECT(gbc.pc(), 0xeb22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ccc), 0xb7);
        EXPECT(gbc.readMem(0xeb21), 0x73);
        // 73 0329
        gbc.setState(0xab03, 0x29ec, 0x2510, 0x1aed, 0xfc1f, 0xcf32, 0x0, 0x1);
        gbc.writeMem(0xab03, { 0x73 });
        gbc.writeMem(0xcf32, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x29ec);
        EXPECT(gbc.pc(), 0xab04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab03), 0x73);
        EXPECT(gbc.readMem(0xcf32), 0x1f);
        // 73 032B
        gbc.setState(0x6311, 0x3262, 0xc3d0, 0x467b, 0x5939, 0xbc0f, 0x1, 0x1);
        gbc.writeMem(0x6311, { 0x73 });
        gbc.writeMem(0xbc0f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x3262);
        EXPECT(gbc.pc(), 0x6312);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc0f), 0x39);
        // 73 032C
        gbc.setState(0xc7dd, 0xeba0, 0xe6f0, 0x4780, 0x165f, 0x9ca8, 0x0, 0x0);
        gbc.writeMem(0x9ca8, { 0x0 });
        gbc.writeMem(0xc7dd, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xeba0);
        EXPECT(gbc.pc(), 0xc7de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ca8), 0x5f);
        EXPECT(gbc.readMem(0xc7dd), 0x73);
        // 73 032E
        gbc.setState(0xd289, 0x519f, 0xd0f0, 0x6842, 0xdfb2, 0xe040, 0x1, 0x0);
        gbc.writeMem(0xd289, { 0x73 });
        gbc.writeMem(0xe040, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x519f);
        EXPECT(gbc.pc(), 0xd28a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd289), 0x73);
        EXPECT(gbc.readMem(0xe040), 0xb2);
        // 73 0333
        gbc.setState(0x770c, 0x5ed8, 0x45f0, 0xa308, 0x60c7, 0x9987, 0x1, 0x1);
        gbc.writeMem(0x770c, { 0x73 });
        gbc.writeMem(0x9987, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x5ed8);
        EXPECT(gbc.pc(), 0x770d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9987), 0xc7);
        // 73 0334
        gbc.setState(0x54df, 0xf188, 0x11a0, 0xbfac, 0x97, 0xef27, 0x1, 0x0);
        gbc.writeMem(0x54df, { 0x73 });
        gbc.writeMem(0xef27, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xf188);
        EXPECT(gbc.pc(), 0x54e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef27), 0x97);
        // 73 0336
        gbc.setState(0x1b7a, 0xbe54, 0x7ec0, 0x1c52, 0x5750, 0xc4fc, 0x0, 0x0);
        gbc.writeMem(0x1b7a, { 0x73 });
        gbc.writeMem(0xc4fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbe54);
        EXPECT(gbc.pc(), 0x1b7b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4fc), 0x50);
        // 73 0337
        gbc.setState(0xd83a, 0xfcec, 0xf8e0, 0x9c3a, 0x32f9, 0xba48, 0x1, 0x0);
        gbc.writeMem(0xba48, { 0x0 });
        gbc.writeMem(0xd83a, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfcec);
        EXPECT(gbc.pc(), 0xd83b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba48), 0xf9);
        EXPECT(gbc.readMem(0xd83a), 0x73);
        // 73 0338
        gbc.setState(0x5c37, 0xee67, 0x73a0, 0x3816, 0x5683, 0x9dde, 0x1, 0x0);
        gbc.writeMem(0x5c37, { 0x73 });
        gbc.writeMem(0x9dde, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xee67);
        EXPECT(gbc.pc(), 0x5c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dde), 0x83);
        // 73 033A
        gbc.setState(0xa1fd, 0xdc36, 0xb070, 0xb15d, 0x701a, 0xeaa9, 0x0, 0x0);
        gbc.writeMem(0xa1fd, { 0x73 });
        gbc.writeMem(0xeaa9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xdc36);
        EXPECT(gbc.pc(), 0xa1fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1fd), 0x73);
        EXPECT(gbc.readMem(0xeaa9), 0x1a);
        // 73 033D
        gbc.setState(0x239c, 0xfa58, 0x53b0, 0xa128, 0x1163, 0xe2c4, 0x0, 0x0);
        gbc.writeMem(0x239c, { 0x73 });
        gbc.writeMem(0xe2c4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xfa58);
        EXPECT(gbc.pc(), 0x239d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2c4), 0x63);
        // 73 033E
        gbc.setState(0x505c, 0x93fc, 0x6930, 0x75d9, 0x5351, 0xa2a9, 0x1, 0x1);
        gbc.writeMem(0x505c, { 0x73 });
        gbc.writeMem(0xa2a9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x93fc);
        EXPECT(gbc.pc(), 0x505d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2a9), 0x51);
        // 73 033F
        gbc.setState(0xcddc, 0xf67c, 0x3a00, 0xf356, 0x1e42, 0x9a8c, 0x0, 0x1);
        gbc.writeMem(0x9a8c, { 0x0 });
        gbc.writeMem(0xcddc, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf67c);
        EXPECT(gbc.pc(), 0xcddd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a8c), 0x42);
        EXPECT(gbc.readMem(0xcddc), 0x73);
        // 73 0340
        gbc.setState(0xd306, 0xd64, 0x4840, 0x8e90, 0xf287, 0xdacf, 0x0, 0x1);
        gbc.writeMem(0xd306, { 0x73 });
        gbc.writeMem(0xdacf, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xd64);
        EXPECT(gbc.pc(), 0xd307);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd306), 0x73);
        EXPECT(gbc.readMem(0xdacf), 0x87);
        // 73 0343
        gbc.setState(0x41f1, 0x20e1, 0x9480, 0xef6c, 0x6357, 0xcf6d, 0x0, 0x0);
        gbc.writeMem(0x41f1, { 0x73 });
        gbc.writeMem(0xcf6d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x20e1);
        EXPECT(gbc.pc(), 0x41f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf6d), 0x57);
        // 73 0344
        gbc.setState(0xcdde, 0x7996, 0xb5c0, 0x94aa, 0x2338, 0xd825, 0x1, 0x1);
        gbc.writeMem(0xcdde, { 0x73 });
        gbc.writeMem(0xd825, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x7996);
        EXPECT(gbc.pc(), 0xcddf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdde), 0x73);
        EXPECT(gbc.readMem(0xd825), 0x38);
        // 73 0349
        gbc.setState(0xef4f, 0xb847, 0xeff0, 0xf91a, 0xaab7, 0xded4, 0x1, 0x1);
        gbc.writeMem(0xded4, { 0x0 });
        gbc.writeMem(0xef4f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xb847);
        EXPECT(gbc.pc(), 0xef50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded4), 0xb7);
        EXPECT(gbc.readMem(0xef4f), 0x73);
        // 73 034B
        gbc.setState(0x796c, 0xaac3, 0x2ec0, 0xa85e, 0x92b, 0xa00d, 0x1, 0x0);
        gbc.writeMem(0x796c, { 0x73 });
        gbc.writeMem(0xa00d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xaac3);
        EXPECT(gbc.pc(), 0x796d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa00d), 0x2b);
        // 73 034D
        gbc.setState(0xc1fd, 0x8a1e, 0x2140, 0xf07d, 0x4b47, 0xb23d, 0x1, 0x0);
        gbc.writeMem(0xb23d, { 0x0 });
        gbc.writeMem(0xc1fd, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x8a1e);
        EXPECT(gbc.pc(), 0xc1fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb23d), 0x47);
        EXPECT(gbc.readMem(0xc1fd), 0x73);
        // 73 034E
        gbc.setState(0xb4e3, 0xb395, 0x5600, 0x82aa, 0xebed, 0xc574, 0x0, 0x0);
        gbc.writeMem(0xb4e3, { 0x73 });
        gbc.writeMem(0xc574, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xb395);
        EXPECT(gbc.pc(), 0xb4e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e3), 0x73);
        EXPECT(gbc.readMem(0xc574), 0xed);
        // 73 034F
        gbc.setState(0x3eb7, 0x6c9c, 0x140, 0xde51, 0x95b9, 0xf871, 0x1, 0x1);
        gbc.writeMem(0x3eb7, { 0x73 });
        gbc.writeMem(0xf871, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6c9c);
        EXPECT(gbc.pc(), 0x3eb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf871), 0xb9);
        // 73 0350
        gbc.setState(0xac9f, 0x4634, 0x1260, 0x4504, 0xe07c, 0xa321, 0x1, 0x0);
        gbc.writeMem(0xa321, { 0x0 });
        gbc.writeMem(0xac9f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4634);
        EXPECT(gbc.pc(), 0xaca0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa321), 0x7c);
        EXPECT(gbc.readMem(0xac9f), 0x73);
        // 73 0352
        gbc.setState(0x320f, 0x1179, 0xe4d0, 0x1977, 0x30a5, 0x92dd, 0x0, 0x0);
        gbc.writeMem(0x320f, { 0x73 });
        gbc.writeMem(0x92dd, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x1179);
        EXPECT(gbc.pc(), 0x3210);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92dd), 0xa5);
        // 73 0355
        gbc.setState(0xcd93, 0xe43, 0x8950, 0xf2c, 0xf318, 0x98ef, 0x1, 0x1);
        gbc.writeMem(0x98ef, { 0x0 });
        gbc.writeMem(0xcd93, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe43);
        EXPECT(gbc.pc(), 0xcd94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98ef), 0x18);
        EXPECT(gbc.readMem(0xcd93), 0x73);
        // 73 0357
        gbc.setState(0x6b15, 0x5075, 0x34d0, 0x5285, 0x378, 0x820a, 0x1, 0x0);
        gbc.writeMem(0x6b15, { 0x73 });
        gbc.writeMem(0x820a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x5075);
        EXPECT(gbc.pc(), 0x6b16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x820a), 0x78);
        // 73 0358
        gbc.setState(0x561b, 0x84f3, 0x5f80, 0x7633, 0xed2f, 0x8150, 0x0, 0x1);
        gbc.writeMem(0x561b, { 0x73 });
        gbc.writeMem(0x8150, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x84f3);
        EXPECT(gbc.pc(), 0x561c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8150), 0x2f);
        // 73 0361
        gbc.setState(0xb1aa, 0x9c87, 0xedb0, 0x4e8e, 0xf3c5, 0xdff9, 0x1, 0x1);
        gbc.writeMem(0xb1aa, { 0x73 });
        gbc.writeMem(0xdff9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x9c87);
        EXPECT(gbc.pc(), 0xb1ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1aa), 0x73);
        EXPECT(gbc.readMem(0xdff9), 0xc5);
        // 73 0363
        gbc.setState(0xc29f, 0x6307, 0x81a0, 0xaa66, 0xbfbd, 0x828d, 0x1, 0x1);
        gbc.writeMem(0x828d, { 0x0 });
        gbc.writeMem(0xc29f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x6307);
        EXPECT(gbc.pc(), 0xc2a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x828d), 0xbd);
        EXPECT(gbc.readMem(0xc29f), 0x73);
        // 73 0368
        gbc.setState(0x3252, 0x3e1b, 0xfd90, 0x11eb, 0xae77, 0xb3e1, 0x1, 0x1);
        gbc.writeMem(0x3252, { 0x73 });
        gbc.writeMem(0xb3e1, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3e1b);
        EXPECT(gbc.pc(), 0x3253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3e1), 0x77);
        // 73 0369
        gbc.setState(0xb4c3, 0xd57b, 0x5070, 0x9d3f, 0xcc2d, 0x8d67, 0x1, 0x0);
        gbc.writeMem(0x8d67, { 0x0 });
        gbc.writeMem(0xb4c3, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xd57b);
        EXPECT(gbc.pc(), 0xb4c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d67), 0x2d);
        EXPECT(gbc.readMem(0xb4c3), 0x73);
        // 73 036A
        gbc.setState(0x422c, 0x794e, 0xdcd0, 0x8156, 0xe113, 0xd0e0, 0x1, 0x0);
        gbc.writeMem(0x422c, { 0x73 });
        gbc.writeMem(0xd0e0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x794e);
        EXPECT(gbc.pc(), 0x422d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e0), 0x13);
        // 73 036E
        gbc.setState(0x969b, 0x4c21, 0xbfe0, 0xa664, 0x9116, 0xc011, 0x1, 0x0);
        gbc.writeMem(0x969b, { 0x73 });
        gbc.writeMem(0xc011, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x4c21);
        EXPECT(gbc.pc(), 0x969c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x969b), 0x73);
        EXPECT(gbc.readMem(0xc011), 0x16);
        // 73 0374
        gbc.setState(0x32a1, 0xeb1d, 0x8bf0, 0xef55, 0x1230, 0xfde0, 0x0, 0x0);
        gbc.writeMem(0x32a1, { 0x73 });
        gbc.writeMem(0xfde0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xeb1d);
        EXPECT(gbc.pc(), 0x32a2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfde0), 0x30);
        // 73 037A
        gbc.setState(0x3f2b, 0x7bf4, 0x4da0, 0x8946, 0x3267, 0xcef4, 0x0, 0x0);
        gbc.writeMem(0x3f2b, { 0x73 });
        gbc.writeMem(0xcef4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7bf4);
        EXPECT(gbc.pc(), 0x3f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcef4), 0x67);
        // 73 037C
        gbc.setState(0x111a, 0x69c4, 0x74f0, 0xb94a, 0xd54d, 0xcf1b, 0x1, 0x1);
        gbc.writeMem(0x111a, { 0x73 });
        gbc.writeMem(0xcf1b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x69c4);
        EXPECT(gbc.pc(), 0x111b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf1b), 0x4d);
        // 73 037D
        gbc.setState(0x1c60, 0x56e7, 0xa790, 0x5f58, 0x2f4c, 0x8b26, 0x1, 0x1);
        gbc.writeMem(0x1c60, { 0x73 });
        gbc.writeMem(0x8b26, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x56e7);
        EXPECT(gbc.pc(), 0x1c61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b26), 0x4c);
        // 73 037F
        gbc.setState(0x8f0f, 0xd595, 0x9a00, 0x37fb, 0x3866, 0x8b18, 0x1, 0x0);
        gbc.writeMem(0x8b18, { 0x0 });
        gbc.writeMem(0x8f0f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd595);
        EXPECT(gbc.pc(), 0x8f10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b18), 0x66);
        EXPECT(gbc.readMem(0x8f0f), 0x73);
        // 73 0381
        gbc.setState(0xa1ce, 0xbfbe, 0x7e90, 0x1214, 0x43e7, 0xffec, 0x0, 0x0);
        gbc.writeMem(0xa1ce, { 0x73 });
        gbc.writeMem(0xffec, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xbfbe);
        EXPECT(gbc.pc(), 0xa1cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ce), 0x73);
        EXPECT(gbc.readMem(0xffec), 0xe7);
        // 73 0382
        gbc.setState(0xd4b7, 0x7790, 0xe040, 0x723, 0x745a, 0xf7a5, 0x0, 0x1);
        gbc.writeMem(0xd4b7, { 0x73 });
        gbc.writeMem(0xf7a5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x7790);
        EXPECT(gbc.pc(), 0xd4b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b7), 0x73);
        EXPECT(gbc.readMem(0xf7a5), 0x5a);
        // 73 0385
        gbc.setState(0xe216, 0x2e08, 0xeeb0, 0x7837, 0x63, 0xbfbc, 0x0, 0x0);
        gbc.writeMem(0xbfbc, { 0x0 });
        gbc.writeMem(0xe216, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2e08);
        EXPECT(gbc.pc(), 0xe217);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfbc), 0x63);
        EXPECT(gbc.readMem(0xe216), 0x73);
        // 73 0386
        gbc.setState(0xb79e, 0x7909, 0x360, 0xea30, 0xb9c4, 0xeeef, 0x1, 0x0);
        gbc.writeMem(0xb79e, { 0x73 });
        gbc.writeMem(0xeeef, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x7909);
        EXPECT(gbc.pc(), 0xb79f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb79e), 0x73);
        EXPECT(gbc.readMem(0xeeef), 0xc4);
        // 73 0387
        gbc.setState(0x7220, 0x49ce, 0x5ca0, 0xd072, 0xfc3b, 0xd4fc, 0x0, 0x1);
        gbc.writeMem(0x7220, { 0x73 });
        gbc.writeMem(0xd4fc, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x49ce);
        EXPECT(gbc.pc(), 0x7221);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4fc), 0x3b);
        // 73 0388
        gbc.setState(0x5d76, 0xdab6, 0x20, 0x1420, 0x5843, 0xbe30, 0x1, 0x1);
        gbc.writeMem(0x5d76, { 0x73 });
        gbc.writeMem(0xbe30, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xdab6);
        EXPECT(gbc.pc(), 0x5d77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe30), 0x43);
        // 73 0389
        gbc.setState(0xecc0, 0xfbea, 0x6950, 0xd360, 0x5698, 0x8014, 0x1, 0x0);
        gbc.writeMem(0x8014, { 0x0 });
        gbc.writeMem(0xecc0, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xfbea);
        EXPECT(gbc.pc(), 0xecc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8014), 0x98);
        EXPECT(gbc.readMem(0xecc0), 0x73);
        // 73 038D
        gbc.setState(0x5fe, 0x1ec8, 0xca70, 0xeaf9, 0x8a4c, 0xeee7, 0x1, 0x1);
        gbc.writeMem(0x5fe, { 0x73 });
        gbc.writeMem(0xeee7, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x1ec8);
        EXPECT(gbc.pc(), 0x5ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeee7), 0x4c);
        // 73 038E
        gbc.setState(0xe481, 0x12c5, 0x8cd0, 0xe99a, 0xa6e, 0xc9f0, 0x1, 0x0);
        gbc.writeMem(0xc9f0, { 0x0 });
        gbc.writeMem(0xe481, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x12c5);
        EXPECT(gbc.pc(), 0xe482);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9f0), 0x6e);
        EXPECT(gbc.readMem(0xe481), 0x73);
        // 73 0390
        gbc.setState(0x9d0e, 0xe28c, 0x7120, 0x16f0, 0x85b0, 0x84b1, 0x0, 0x1);
        gbc.writeMem(0x84b1, { 0x0 });
        gbc.writeMem(0x9d0e, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe28c);
        EXPECT(gbc.pc(), 0x9d0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84b1), 0xb0);
        EXPECT(gbc.readMem(0x9d0e), 0x73);
        // 73 0391
        gbc.setState(0x5ed9, 0x105b, 0xbc80, 0xa403, 0x83fb, 0xbbd5, 0x0, 0x0);
        gbc.writeMem(0x5ed9, { 0x73 });
        gbc.writeMem(0xbbd5, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x105b);
        EXPECT(gbc.pc(), 0x5eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbd5), 0xfb);
        // 73 0392
        gbc.setState(0x395e, 0x3cf, 0xbd70, 0xa564, 0x9639, 0xa9f0, 0x0, 0x0);
        gbc.writeMem(0x395e, { 0x73 });
        gbc.writeMem(0xa9f0, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x3cf);
        EXPECT(gbc.pc(), 0x395f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9f0), 0x39);
        // 73 0395
        gbc.setState(0x7180, 0xbb78, 0x3a10, 0x2bdc, 0xa846, 0xc027, 0x0, 0x1);
        gbc.writeMem(0x7180, { 0x73 });
        gbc.writeMem(0xc027, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbb78);
        EXPECT(gbc.pc(), 0x7181);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc027), 0x46);
        // 73 0396
        gbc.setState(0xdea8, 0xe672, 0x170, 0xb6de, 0xa2eb, 0xaf7b, 0x0, 0x1);
        gbc.writeMem(0xaf7b, { 0x0 });
        gbc.writeMem(0xdea8, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe672);
        EXPECT(gbc.pc(), 0xdea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf7b), 0xeb);
        EXPECT(gbc.readMem(0xdea8), 0x73);
        // 73 0397
        gbc.setState(0x51e0, 0x4eb3, 0x4be0, 0x4600, 0xa092, 0xfdb6, 0x1, 0x0);
        gbc.writeMem(0x51e0, { 0x73 });
        gbc.writeMem(0xfdb6, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x4eb3);
        EXPECT(gbc.pc(), 0x51e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfdb6), 0x92);
        // 73 0398
        gbc.setState(0xe65b, 0x4623, 0xcd60, 0x6c31, 0xe79f, 0xa0ad, 0x1, 0x0);
        gbc.writeMem(0xa0ad, { 0x0 });
        gbc.writeMem(0xe65b, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x4623);
        EXPECT(gbc.pc(), 0xe65c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0ad), 0x9f);
        EXPECT(gbc.readMem(0xe65b), 0x73);
        // 73 039B
        gbc.setState(0x7f7c, 0xc724, 0xd6c0, 0xe5c3, 0x85ce, 0x986a, 0x1, 0x1);
        gbc.writeMem(0x7f7c, { 0x73 });
        gbc.writeMem(0x986a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc724);
        EXPECT(gbc.pc(), 0x7f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x986a), 0xce);
        // 73 039C
        gbc.setState(0xa693, 0x7699, 0xcfa0, 0x8f77, 0x4f93, 0xe734, 0x1, 0x0);
        gbc.writeMem(0xa693, { 0x73 });
        gbc.writeMem(0xe734, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x7699);
        EXPECT(gbc.pc(), 0xa694);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa693), 0x73);
        EXPECT(gbc.readMem(0xe734), 0x93);
        // 73 039D
        gbc.setState(0xe168, 0x448f, 0xd420, 0x26f9, 0xdee7, 0xa22f, 0x1, 0x1);
        gbc.writeMem(0xa22f, { 0x0 });
        gbc.writeMem(0xe168, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x448f);
        EXPECT(gbc.pc(), 0xe169);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa22f), 0xe7);
        EXPECT(gbc.readMem(0xe168), 0x73);
        // 73 039E
        gbc.setState(0x64a4, 0xd20d, 0x1380, 0x5448, 0xd846, 0xf97c, 0x1, 0x0);
        gbc.writeMem(0x64a4, { 0x73 });
        gbc.writeMem(0xf97c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd20d);
        EXPECT(gbc.pc(), 0x64a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf97c), 0x46);
        // 73 03A1
        gbc.setState(0xa76, 0x2dfd, 0x62a0, 0x4c84, 0xc983, 0xd4d2, 0x0, 0x1);
        gbc.writeMem(0xa76, { 0x73 });
        gbc.writeMem(0xd4d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x2dfd);
        EXPECT(gbc.pc(), 0xa77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d2), 0x83);
        // 73 03A2
        gbc.setState(0x3432, 0x16d7, 0x2b20, 0xf2ba, 0x5915, 0xe74a, 0x1, 0x0);
        gbc.writeMem(0x3432, { 0x73 });
        gbc.writeMem(0xe74a, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x16d7);
        EXPECT(gbc.pc(), 0x3433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe74a), 0x15);
        // 73 03A4
        gbc.setState(0x78c0, 0x6183, 0x31a0, 0x597, 0xa274, 0x9313, 0x1, 0x1);
        gbc.writeMem(0x78c0, { 0x73 });
        gbc.writeMem(0x9313, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6183);
        EXPECT(gbc.pc(), 0x78c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9313), 0x74);
        // 73 03A5
        gbc.setState(0x5af9, 0xbceb, 0x1ab0, 0xc567, 0xeecf, 0xd5d2, 0x0, 0x0);
        gbc.writeMem(0x5af9, { 0x73 });
        gbc.writeMem(0xd5d2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xbceb);
        EXPECT(gbc.pc(), 0x5afa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5d2), 0xcf);
        // 73 03A6
        gbc.setState(0x20dc, 0xc8ba, 0x8ee0, 0x9236, 0xe63b, 0xf932, 0x0, 0x1);
        gbc.writeMem(0x20dc, { 0x73 });
        gbc.writeMem(0xf932, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc8ba);
        EXPECT(gbc.pc(), 0x20dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf932), 0x3b);
        // 73 03A7
        gbc.setState(0xbc29, 0x435a, 0xf8b0, 0x98b9, 0xceaf, 0xc29f, 0x1, 0x0);
        gbc.writeMem(0xbc29, { 0x73 });
        gbc.writeMem(0xc29f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x435a);
        EXPECT(gbc.pc(), 0xbc2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc29), 0x73);
        EXPECT(gbc.readMem(0xc29f), 0xaf);
        // 73 03AC
        gbc.setState(0xcffa, 0x39b3, 0x26b0, 0x3409, 0xb847, 0xb291, 0x1, 0x0);
        gbc.writeMem(0xb291, { 0x0 });
        gbc.writeMem(0xcffa, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x39b3);
        EXPECT(gbc.pc(), 0xcffb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb291), 0x47);
        EXPECT(gbc.readMem(0xcffa), 0x73);
        // 73 03B3
        gbc.setState(0xa79f, 0xba8c, 0x3440, 0xbc1b, 0x4a5f, 0x811c, 0x0, 0x1);
        gbc.writeMem(0x811c, { 0x0 });
        gbc.writeMem(0xa79f, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xba8c);
        EXPECT(gbc.pc(), 0xa7a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811c), 0x5f);
        EXPECT(gbc.readMem(0xa79f), 0x73);
        // 73 03B5
        gbc.setState(0xca11, 0xa846, 0x6f10, 0x3192, 0x874c, 0x9178, 0x0, 0x0);
        gbc.writeMem(0x9178, { 0x0 });
        gbc.writeMem(0xca11, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa846);
        EXPECT(gbc.pc(), 0xca12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9178), 0x4c);
        EXPECT(gbc.readMem(0xca11), 0x73);
        // 73 03B6
        gbc.setState(0xce72, 0x2f61, 0x1a10, 0x669a, 0x99e6, 0x8b53, 0x0, 0x0);
        gbc.writeMem(0x8b53, { 0x0 });
        gbc.writeMem(0xce72, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2f61);
        EXPECT(gbc.pc(), 0xce73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b53), 0xe6);
        EXPECT(gbc.readMem(0xce72), 0x73);
        // 73 03BB
        gbc.setState(0x3f4d, 0x8d77, 0xe290, 0xc494, 0x539e, 0xc1bb, 0x0, 0x0);
        gbc.writeMem(0x3f4d, { 0x73 });
        gbc.writeMem(0xc1bb, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x8d77);
        EXPECT(gbc.pc(), 0x3f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1bb), 0x9e);
        // 73 03BC
        gbc.setState(0x343d, 0xc306, 0x1d80, 0x2b98, 0x653f, 0x9413, 0x0, 0x1);
        gbc.writeMem(0x343d, { 0x73 });
        gbc.writeMem(0x9413, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xc306);
        EXPECT(gbc.pc(), 0x343e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9413), 0x3f);
        // 73 03BE
        gbc.setState(0x883a, 0x81b, 0x8e50, 0x2ffd, 0xb055, 0xfe32, 0x0, 0x1);
        gbc.writeMem(0x883a, { 0x73 });
        gbc.writeMem(0xfe32, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x81b);
        EXPECT(gbc.pc(), 0x883b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x883a), 0x73);
        EXPECT(gbc.readMem(0xfe32), 0x55);
        // 73 03C1
        gbc.setState(0x1929, 0x8042, 0xf220, 0x6ab5, 0xa18a, 0xf8a4, 0x1, 0x0);
        gbc.writeMem(0x1929, { 0x73 });
        gbc.writeMem(0xf8a4, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x8042);
        EXPECT(gbc.pc(), 0x192a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf8a4), 0x8a);
        // 73 03C2
        gbc.setState(0xd8c8, 0x3f01, 0xe30, 0xc559, 0xdd95, 0xb0c8, 0x1, 0x0);
        gbc.writeMem(0xb0c8, { 0x0 });
        gbc.writeMem(0xd8c8, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x3f01);
        EXPECT(gbc.pc(), 0xd8c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0c8), 0x95);
        EXPECT(gbc.readMem(0xd8c8), 0x73);
        // 73 03C3
        gbc.setState(0xbef2, 0x3e1e, 0x35b0, 0x8642, 0x7d43, 0x9ade, 0x1, 0x0);
        gbc.writeMem(0x9ade, { 0x0 });
        gbc.writeMem(0xbef2, { 0x73 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3e1e);
        EXPECT(gbc.pc(), 0xbef3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ade), 0x43);
        EXPECT(gbc.readMem(0xbef2), 0x73);
        // 73 03C5
        gbc.setState(0x385, 0xf2a8, 0xdf00, 0xea89, 0x98aa, 0xd15d, 0x0, 0x0);
        gbc.writeMem(0x385, { 0x73 });
        gbc.writeMem(0xd15d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xf2a8);
        EXPECT(gbc.pc(), 0x386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd15d), 0xaa);
        // 73 03C9
        gbc.setState(0x6d39, 0x495c, 0x5cc0, 0x1e90, 0xaf1c, 0xc4b2, 0x0, 0x1);
        gbc.writeMem(0x6d39, { 0x73 });
        gbc.writeMem(0xc4b2, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x495c);
        EXPECT(gbc.pc(), 0x6d3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4b2), 0x1c);
        // 73 03CB
        gbc.setState(0x22f1, 0xee92, 0x7520, 0xe327, 0x8caf, 0xf170, 0x0, 0x1);
        gbc.writeMem(0x22f1, { 0x73 });
        gbc.writeMem(0xf170, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xee92);
        EXPECT(gbc.pc(), 0x22f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf170), 0xaf);
        // 73 03CC
        gbc.setState(0x6a53, 0x3e09, 0x4af0, 0xa85f, 0xe2ef, 0xc418, 0x1, 0x1);
        gbc.writeMem(0x6a53, { 0x73 });
        gbc.writeMem(0xc418, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3e09);
        EXPECT(gbc.pc(), 0x6a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc418), 0xef);
        // 73 03CD
        gbc.setState(0x50bb, 0x15f9, 0x880, 0xc060, 0xb86e, 0xfc5b, 0x0, 0x1);
        gbc.writeMem(0x50bb, { 0x73 });
        gbc.writeMem(0xfc5b, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x15f9);
        EXPECT(gbc.pc(), 0x50bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfc5b), 0x6e);
        // 73 03D0
        gbc.setState(0x18d1, 0xeb46, 0x5260, 0x6355, 0x22ed, 0x828d, 0x1, 0x1);
        gbc.writeMem(0x18d1, { 0x73 });
        gbc.writeMem(0x828d, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xeb46);
        EXPECT(gbc.pc(), 0x18d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x828d), 0xed);
        // 73 03D1
        gbc.setState(0x5b95, 0x8778, 0x2920, 0xf123, 0x3be2, 0xeb8f, 0x0, 0x0);
        gbc.writeMem(0x5b95, { 0x73 });
        gbc.writeMem(0xeb8f, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8778);
        EXPECT(gbc.pc(), 0x5b96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb8f), 0xe2);
        // 73 03D2
        gbc.setState(0x5a39, 0x4f75, 0x1ef0, 0x28e3, 0xbe69, 0xe905, 0x0, 0x1);
        gbc.writeMem(0x5a39, { 0x73 });
        gbc.writeMem(0xe905, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x4f75);
        EXPECT(gbc.pc(), 0x5a3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe905), 0x69);
        // 73 03D3
        gbc.setState(0x3f45, 0xdc21, 0xdc0, 0xd03d, 0xe87f, 0xfee9, 0x0, 0x1);
        gbc.writeMem(0x3f45, { 0x73 });
        gbc.writeMem(0xfee9, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdc21);
        EXPECT(gbc.pc(), 0x3f46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xfee9), 0x7f);
        // 73 03D4
        gbc.setState(0x3fd2, 0x4236, 0x2ae0, 0x61ad, 0x4f7c, 0x8f21, 0x0, 0x1);
        gbc.writeMem(0x3fd2, { 0x73 });
        gbc.writeMem(0x8f21, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x4236);
        EXPECT(gbc.pc(), 0x3fd3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f21), 0x7c);
        // 73 03D6
        gbc.setState(0x2699, 0x513a, 0xefe0, 0x296a, 0x3b7b, 0xe905, 0x1, 0x1);
        gbc.writeMem(0x2699, { 0x73 });
        gbc.writeMem(0xe905, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x513a);
        EXPECT(gbc.pc(), 0x269a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe905), 0x7b);
        // 73 03DC
        gbc.setState(0x2059, 0x847c, 0xfde0, 0x1f00, 0xf147, 0xf371, 0x0, 0x0);
        gbc.writeMem(0x2059, { 0x73 });
        gbc.writeMem(0xf371, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x847c);
        EXPECT(gbc.pc(), 0x205a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xf371), 0x47);
        // 73 03E2
        gbc.setState(0x5bbb, 0x1884, 0x2f20, 0x7469, 0xeda2, 0xa932, 0x1, 0x1);
        gbc.writeMem(0x5bbb, { 0x73 });
        gbc.writeMem(0xa932, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x1884);
        EXPECT(gbc.pc(), 0x5bbc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa932), 0xa2);
        // 73 03E4
        gbc.setState(0xd21, 0x6b18, 0x25c0, 0x693f, 0x3de7, 0xdb8c, 0x0, 0x1);
        gbc.writeMem(0xd21, { 0x73 });
        gbc.writeMem(0xdb8c, { 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x6b18);
        EXPECT(gbc.pc(), 0xd22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb8c), 0xe7);
    }
}
#endif
