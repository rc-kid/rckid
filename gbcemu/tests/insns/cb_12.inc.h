    TEST(gbcemu, opcode_cb_12) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 12 0000
        gbc.setState(0x854d, 0x1ab3, 0x5390, 0x1a6f, 0xcff3, 0xbd0a, 0x1, 0x1);
        gbc.writeMem(0x854d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1ab3, gbc.sp());
        EXPECT(0x854f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x854d));
        EXPECT(0x12, gbc.readMem(0x854e));
        // CB 12 0001
        gbc.setState(0xd6fa, 0x4956, 0x2060, 0x73e1, 0xe772, 0xb195, 0x0, 0x0);
        gbc.writeMem(0xd6fa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4956, gbc.sp());
        EXPECT(0xd6fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6fa));
        EXPECT(0x12, gbc.readMem(0xd6fb));
        // CB 12 0002
        gbc.setState(0xe403, 0x902f, 0x3900, 0x7549, 0x11dc, 0x362f, 0x0, 0x0);
        gbc.writeMem(0xe403, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x902f, gbc.sp());
        EXPECT(0xe405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe403));
        EXPECT(0x12, gbc.readMem(0xe404));
        // CB 12 0003
        gbc.setState(0x3309, 0x7ac0, 0xdb60, 0x1237, 0x261e, 0x1573, 0x0, 0x1);
        gbc.writeMem(0x3309, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7ac0, gbc.sp());
        EXPECT(0x330b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0004
        gbc.setState(0x48ed, 0x7a7, 0x7ad0, 0x12d8, 0xc8c, 0x35f1, 0x0, 0x0);
        gbc.writeMem(0x48ed, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x7a7, gbc.sp());
        EXPECT(0x48ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0005
        gbc.setState(0x88ed, 0xb025, 0x4b30, 0xb9d1, 0x4d20, 0x31d9, 0x0, 0x1);
        gbc.writeMem(0x88ed, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xb025, gbc.sp());
        EXPECT(0x88ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ed));
        EXPECT(0x12, gbc.readMem(0x88ee));
        // CB 12 0006
        gbc.setState(0xaba4, 0x8670, 0xa7e0, 0xa01c, 0xd766, 0xd5f4, 0x0, 0x0);
        gbc.writeMem(0xaba4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x8670, gbc.sp());
        EXPECT(0xaba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaba4));
        EXPECT(0x12, gbc.readMem(0xaba5));
        // CB 12 0007
        gbc.setState(0x89fd, 0xab7d, 0xf840, 0xa8d, 0xc56b, 0xfaf2, 0x1, 0x0);
        gbc.writeMem(0x89fd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xab7d, gbc.sp());
        EXPECT(0x89ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89fd));
        EXPECT(0x12, gbc.readMem(0x89fe));
        // CB 12 0008
        gbc.setState(0x6302, 0x6f56, 0x30b0, 0x47bb, 0xcec4, 0x4f7c, 0x0, 0x1);
        gbc.writeMem(0x6302, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6f56, gbc.sp());
        EXPECT(0x6304, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0009
        gbc.setState(0xb32c, 0x6494, 0xc070, 0xd5db, 0xf38a, 0x2ef7, 0x0, 0x0);
        gbc.writeMem(0xb32c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6494, gbc.sp());
        EXPECT(0xb32e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32c));
        EXPECT(0x12, gbc.readMem(0xb32d));
        // CB 12 000A
        gbc.setState(0xc2eb, 0xb468, 0x1950, 0x3874, 0xe5ee, 0x2d10, 0x1, 0x0);
        gbc.writeMem(0xc2eb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xb468, gbc.sp());
        EXPECT(0xc2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2eb));
        EXPECT(0x12, gbc.readMem(0xc2ec));
        // CB 12 000C
        gbc.setState(0xb979, 0x74b8, 0x5b50, 0xc0df, 0xc6db, 0xc4d9, 0x0, 0x0);
        gbc.writeMem(0xb979, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x74b8, gbc.sp());
        EXPECT(0xb97b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb979));
        EXPECT(0x12, gbc.readMem(0xb97a));
        // CB 12 000D
        gbc.setState(0x38b7, 0x814a, 0x9cc0, 0xb533, 0x113f, 0x41bf, 0x1, 0x1);
        gbc.writeMem(0x38b7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x814a, gbc.sp());
        EXPECT(0x38b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 000E
        gbc.setState(0xc750, 0x68d9, 0xa890, 0xeaf5, 0xf4d3, 0xe88c, 0x0, 0x0);
        gbc.writeMem(0xc750, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x68d9, gbc.sp());
        EXPECT(0xc752, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc750));
        EXPECT(0x12, gbc.readMem(0xc751));
        // CB 12 000F
        gbc.setState(0xd323, 0x8642, 0x420, 0xb2bd, 0xaf49, 0x3541, 0x1, 0x1);
        gbc.writeMem(0xd323, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8642, gbc.sp());
        EXPECT(0xd325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd323));
        EXPECT(0x12, gbc.readMem(0xd324));
        // CB 12 0010
        gbc.setState(0xa64f, 0xf765, 0x6ec0, 0x3386, 0x250f, 0x7dd1, 0x1, 0x1);
        gbc.writeMem(0xa64f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf765, gbc.sp());
        EXPECT(0xa651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa64f));
        EXPECT(0x12, gbc.readMem(0xa650));
        // CB 12 0011
        gbc.setState(0x6766, 0xe0d3, 0xf850, 0xe7f0, 0x73c8, 0xd6e, 0x0, 0x1);
        gbc.writeMem(0x6766, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe0d3, gbc.sp());
        EXPECT(0x6768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0012
        gbc.setState(0xa37c, 0x21b2, 0xfc50, 0x3515, 0x83aa, 0xacef, 0x0, 0x0);
        gbc.writeMem(0xa37c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x21b2, gbc.sp());
        EXPECT(0xa37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa37c));
        EXPECT(0x12, gbc.readMem(0xa37d));
        // CB 12 0013
        gbc.setState(0x1f2a, 0x3dff, 0x26b0, 0xd321, 0xce2d, 0xf10c, 0x1, 0x0);
        gbc.writeMem(0x1f2a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x3dff, gbc.sp());
        EXPECT(0x1f2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0014
        gbc.setState(0xb9e8, 0x581a, 0x3bd0, 0x3798, 0xfbb3, 0x9f92, 0x1, 0x0);
        gbc.writeMem(0xb9e8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x581a, gbc.sp());
        EXPECT(0xb9ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9e8));
        EXPECT(0x12, gbc.readMem(0xb9e9));
        // CB 12 0015
        gbc.setState(0x3006, 0x2864, 0x3530, 0xbb4e, 0x4555, 0x76c7, 0x0, 0x0);
        gbc.writeMem(0x3006, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x2864, gbc.sp());
        EXPECT(0x3008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0016
        gbc.setState(0xe1e4, 0xbe51, 0x8860, 0x483, 0x308c, 0xbce5, 0x0, 0x1);
        gbc.writeMem(0xe1e4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbe51, gbc.sp());
        EXPECT(0xe1e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e4));
        EXPECT(0x12, gbc.readMem(0xe1e5));
        // CB 12 0017
        gbc.setState(0x2af1, 0x4527, 0x4e00, 0x3843, 0x8474, 0x87e7, 0x1, 0x1);
        gbc.writeMem(0x2af1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4527, gbc.sp());
        EXPECT(0x2af3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0018
        gbc.setState(0x69f7, 0x83f3, 0x92d0, 0x6ea, 0xcbc3, 0xdc2d, 0x1, 0x1);
        gbc.writeMem(0x69f7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x83f3, gbc.sp());
        EXPECT(0x69f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 001A
        gbc.setState(0x8cc2, 0x2337, 0xc8e0, 0xdc26, 0x59f1, 0x3cfc, 0x1, 0x1);
        gbc.writeMem(0x8cc2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2337, gbc.sp());
        EXPECT(0x8cc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc2));
        EXPECT(0x12, gbc.readMem(0x8cc3));
        // CB 12 001B
        gbc.setState(0xde9c, 0x26ed, 0x6880, 0xe1ff, 0xae36, 0xab5, 0x1, 0x0);
        gbc.writeMem(0xde9c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x26ed, gbc.sp());
        EXPECT(0xde9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde9c));
        EXPECT(0x12, gbc.readMem(0xde9d));
        // CB 12 001D
        gbc.setState(0xee82, 0xe3d3, 0xe640, 0xdbde, 0xe84d, 0xedd, 0x1, 0x1);
        gbc.writeMem(0xee82, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe3d3, gbc.sp());
        EXPECT(0xee84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee82));
        EXPECT(0x12, gbc.readMem(0xee83));
        // CB 12 001E
        gbc.setState(0x56d8, 0x5e29, 0x1270, 0x839a, 0xdad0, 0x45b3, 0x0, 0x0);
        gbc.writeMem(0x56d8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x5e29, gbc.sp());
        EXPECT(0x56da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 001F
        gbc.setState(0xba49, 0xbe16, 0xbba0, 0x89cf, 0x9218, 0xae84, 0x0, 0x1);
        gbc.writeMem(0xba49, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xbe16, gbc.sp());
        EXPECT(0xba4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba49));
        EXPECT(0x12, gbc.readMem(0xba4a));
        // CB 12 0020
        gbc.setState(0x3d8e, 0x493c, 0x67d0, 0xfc8f, 0xd23d, 0x90f9, 0x0, 0x1);
        gbc.writeMem(0x3d8e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x493c, gbc.sp());
        EXPECT(0x3d90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0021
        gbc.setState(0x6add, 0xfe64, 0xb860, 0xfba8, 0x13ce, 0xd60f, 0x1, 0x1);
        gbc.writeMem(0x6add, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfe64, gbc.sp());
        EXPECT(0x6adf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0022
        gbc.setState(0xb0fa, 0xae6c, 0xc2b0, 0x1447, 0xeeff, 0xee17, 0x0, 0x0);
        gbc.writeMem(0xb0fa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xae6c, gbc.sp());
        EXPECT(0xb0fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0fa));
        EXPECT(0x12, gbc.readMem(0xb0fb));
        // CB 12 0023
        gbc.setState(0x6c03, 0x6ddb, 0x5bb0, 0xe278, 0xc1d6, 0x52f3, 0x1, 0x1);
        gbc.writeMem(0x6c03, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x6ddb, gbc.sp());
        EXPECT(0x6c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0024
        gbc.setState(0x991e, 0xe7f3, 0x1290, 0xbe3f, 0x81fb, 0xecb9, 0x1, 0x1);
        gbc.writeMem(0x991e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe7f3, gbc.sp());
        EXPECT(0x9920, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x991e));
        EXPECT(0x12, gbc.readMem(0x991f));
        // CB 12 0025
        gbc.setState(0x7d67, 0x251b, 0x21f0, 0xdaaa, 0xed13, 0xaf27, 0x0, 0x0);
        gbc.writeMem(0x7d67, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x251b, gbc.sp());
        EXPECT(0x7d69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0026
        gbc.setState(0x6a12, 0xe6e0, 0x7060, 0x5882, 0xb5ce, 0xc5a6, 0x0, 0x0);
        gbc.writeMem(0x6a12, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xe6e0, gbc.sp());
        EXPECT(0x6a14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0027
        gbc.setState(0x5717, 0x24d8, 0xd890, 0xe4b7, 0x925b, 0x79b8, 0x1, 0x0);
        gbc.writeMem(0x5717, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x24d8, gbc.sp());
        EXPECT(0x5719, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0028
        gbc.setState(0x502c, 0x842f, 0x1370, 0xd74f, 0xdc32, 0x7962, 0x1, 0x0);
        gbc.writeMem(0x502c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x842f, gbc.sp());
        EXPECT(0x502e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0029
        gbc.setState(0xb51f, 0x2aa6, 0x4690, 0x6ac2, 0x47f4, 0x6aac, 0x1, 0x1);
        gbc.writeMem(0xb51f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x2aa6, gbc.sp());
        EXPECT(0xb521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb51f));
        EXPECT(0x12, gbc.readMem(0xb520));
        // CB 12 002B
        gbc.setState(0xc10e, 0xbbc8, 0xe1c0, 0xf731, 0x536a, 0xd95, 0x1, 0x1);
        gbc.writeMem(0xc10e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbbc8, gbc.sp());
        EXPECT(0xc110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc10e));
        EXPECT(0x12, gbc.readMem(0xc10f));
        // CB 12 002C
        gbc.setState(0x33be, 0xcfc6, 0x61d0, 0x6109, 0xd1b7, 0x757a, 0x0, 0x1);
        gbc.writeMem(0x33be, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xcfc6, gbc.sp());
        EXPECT(0x33c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 002D
        gbc.setState(0x43ed, 0x42ad, 0x2c10, 0x5ca2, 0xf212, 0x3c86, 0x1, 0x1);
        gbc.writeMem(0x43ed, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x42ad, gbc.sp());
        EXPECT(0x43ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 002E
        gbc.setState(0x7380, 0x819d, 0xcde0, 0x6503, 0x1a74, 0xe436, 0x0, 0x0);
        gbc.writeMem(0x7380, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x819d, gbc.sp());
        EXPECT(0x7382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 002F
        gbc.setState(0xe63a, 0xc494, 0xae30, 0xa08e, 0x510a, 0xc968, 0x0, 0x0);
        gbc.writeMem(0xe63a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xc494, gbc.sp());
        EXPECT(0xe63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe63a));
        EXPECT(0x12, gbc.readMem(0xe63b));
        // CB 12 0030
        gbc.setState(0x816b, 0x2cc9, 0x5ec0, 0x526b, 0xa5d4, 0xb288, 0x0, 0x0);
        gbc.writeMem(0x816b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x2cc9, gbc.sp());
        EXPECT(0x816d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x816b));
        EXPECT(0x12, gbc.readMem(0x816c));
        // CB 12 0031
        gbc.setState(0xe5cb, 0x8a83, 0x59d0, 0x627b, 0xdcab, 0xbcac, 0x0, 0x0);
        gbc.writeMem(0xe5cb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8a83, gbc.sp());
        EXPECT(0xe5cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5cb));
        EXPECT(0x12, gbc.readMem(0xe5cc));
        // CB 12 0032
        gbc.setState(0x8799, 0x5a7c, 0xac30, 0xb38e, 0xd910, 0xe44, 0x0, 0x0);
        gbc.writeMem(0x8799, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5a7c, gbc.sp());
        EXPECT(0x879b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8799));
        EXPECT(0x12, gbc.readMem(0x879a));
        // CB 12 0033
        gbc.setState(0xa1ef, 0x45c1, 0xd110, 0x6ef1, 0xd04e, 0x2333, 0x1, 0x1);
        gbc.writeMem(0xa1ef, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x45c1, gbc.sp());
        EXPECT(0xa1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1ef));
        EXPECT(0x12, gbc.readMem(0xa1f0));
        // CB 12 0034
        gbc.setState(0xeb2f, 0x79f0, 0x2980, 0x62f7, 0x3372, 0xcdfe, 0x1, 0x0);
        gbc.writeMem(0xeb2f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x79f0, gbc.sp());
        EXPECT(0xeb31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb2f));
        EXPECT(0x12, gbc.readMem(0xeb30));
        // CB 12 0035
        gbc.setState(0x6420, 0xcf83, 0x6110, 0xf99c, 0x5b17, 0x6eee, 0x1, 0x0);
        gbc.writeMem(0x6420, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xcf83, gbc.sp());
        EXPECT(0x6422, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0036
        gbc.setState(0x47da, 0x5004, 0x8520, 0xf2b8, 0xce41, 0xc64c, 0x1, 0x0);
        gbc.writeMem(0x47da, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x5004, gbc.sp());
        EXPECT(0x47dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0038
        gbc.setState(0xdba0, 0x7491, 0x6c40, 0x9926, 0x1073, 0xe1f9, 0x1, 0x0);
        gbc.writeMem(0xdba0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7491, gbc.sp());
        EXPECT(0xdba2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdba0));
        EXPECT(0x12, gbc.readMem(0xdba1));
        // CB 12 0039
        gbc.setState(0xccd1, 0xbcfc, 0xd360, 0x5092, 0xe0ea, 0xe15d, 0x0, 0x0);
        gbc.writeMem(0xccd1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xbcfc, gbc.sp());
        EXPECT(0xccd3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccd1));
        EXPECT(0x12, gbc.readMem(0xccd2));
        // CB 12 003A
        gbc.setState(0x3faf, 0xe69d, 0x8050, 0xb477, 0xf831, 0xe22c, 0x0, 0x1);
        gbc.writeMem(0x3faf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xe69d, gbc.sp());
        EXPECT(0x3fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 003B
        gbc.setState(0xbe0f, 0xdeef, 0xaa0, 0x3659, 0x7668, 0x2713, 0x0, 0x1);
        gbc.writeMem(0xbe0f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xdeef, gbc.sp());
        EXPECT(0xbe11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe0f));
        EXPECT(0x12, gbc.readMem(0xbe10));
        // CB 12 003C
        gbc.setState(0xdf9f, 0xed1d, 0xd50, 0xb29e, 0x626c, 0x643e, 0x1, 0x0);
        gbc.writeMem(0xdf9f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xed1d, gbc.sp());
        EXPECT(0xdfa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf9f));
        EXPECT(0x12, gbc.readMem(0xdfa0));
        // CB 12 003D
        gbc.setState(0x1126, 0x23fd, 0x2b90, 0x4762, 0x711d, 0x954d, 0x0, 0x1);
        gbc.writeMem(0x1126, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x23fd, gbc.sp());
        EXPECT(0x1128, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 003E
        gbc.setState(0x5d7f, 0x8ae8, 0xe780, 0x2979, 0x6cf7, 0xb249, 0x1, 0x0);
        gbc.writeMem(0x5d7f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x8ae8, gbc.sp());
        EXPECT(0x5d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 003F
        gbc.setState(0x9007, 0xc75c, 0x89e0, 0xd255, 0x5065, 0x18a6, 0x1, 0x1);
        gbc.writeMem(0x9007, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc75c, gbc.sp());
        EXPECT(0x9009, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9007));
        EXPECT(0x12, gbc.readMem(0x9008));
        // CB 12 0041
        gbc.setState(0xc42, 0xc2c8, 0xfc30, 0xbb5a, 0xa7d8, 0x6aff, 0x0, 0x1);
        gbc.writeMem(0xc42, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc2c8, gbc.sp());
        EXPECT(0xc44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0042
        gbc.setState(0x4409, 0xb9f9, 0xa830, 0x73d3, 0x5d9a, 0x3297, 0x1, 0x1);
        gbc.writeMem(0x4409, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb9f9, gbc.sp());
        EXPECT(0x440b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0044
        gbc.setState(0x3a1d, 0x77a1, 0xbb60, 0xb2c6, 0x2898, 0xf8f8, 0x0, 0x0);
        gbc.writeMem(0x3a1d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x77a1, gbc.sp());
        EXPECT(0x3a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0045
        gbc.setState(0x8f9e, 0xa28e, 0x8290, 0x1349, 0x6f0f, 0xc269, 0x0, 0x0);
        gbc.writeMem(0x8f9e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xa28e, gbc.sp());
        EXPECT(0x8fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f9e));
        EXPECT(0x12, gbc.readMem(0x8f9f));
        // CB 12 0046
        gbc.setState(0xcdf3, 0x27c8, 0xb6a0, 0x3e05, 0x399a, 0xdaa0, 0x0, 0x1);
        gbc.writeMem(0xcdf3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x27c8, gbc.sp());
        EXPECT(0xcdf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdf3));
        EXPECT(0x12, gbc.readMem(0xcdf4));
        // CB 12 0047
        gbc.setState(0xdb9d, 0x9f7c, 0xd0f0, 0x917f, 0x416c, 0x7f92, 0x1, 0x1);
        gbc.writeMem(0xdb9d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9f7c, gbc.sp());
        EXPECT(0xdb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9d));
        EXPECT(0x12, gbc.readMem(0xdb9e));
        // CB 12 0048
        gbc.setState(0x8987, 0x13bb, 0x9c70, 0xb703, 0xc7d1, 0xb3d, 0x1, 0x0);
        gbc.writeMem(0x8987, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x13bb, gbc.sp());
        EXPECT(0x8989, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8987));
        EXPECT(0x12, gbc.readMem(0x8988));
        // CB 12 0049
        gbc.setState(0xba1f, 0x909, 0x3750, 0x6b98, 0x690f, 0xa593, 0x1, 0x0);
        gbc.writeMem(0xba1f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x909, gbc.sp());
        EXPECT(0xba21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba1f));
        EXPECT(0x12, gbc.readMem(0xba20));
        // CB 12 004A
        gbc.setState(0xbc20, 0x3d74, 0xbcc0, 0x6c69, 0x525f, 0x4536, 0x1, 0x0);
        gbc.writeMem(0xbc20, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x3d74, gbc.sp());
        EXPECT(0xbc22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc20));
        EXPECT(0x12, gbc.readMem(0xbc21));
        // CB 12 004B
        gbc.setState(0xc7f5, 0x7e7a, 0xea90, 0xac19, 0x2a2, 0x53b, 0x1, 0x1);
        gbc.writeMem(0xc7f5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x7e7a, gbc.sp());
        EXPECT(0xc7f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7f5));
        EXPECT(0x12, gbc.readMem(0xc7f6));
        // CB 12 004C
        gbc.setState(0x2ada, 0x186a, 0x2810, 0xc7c, 0xd1aa, 0xb703, 0x0, 0x1);
        gbc.writeMem(0x2ada, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x186a, gbc.sp());
        EXPECT(0x2adc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 004D
        gbc.setState(0x9467, 0x4f11, 0xc870, 0xdb1b, 0x1a9d, 0x5413, 0x1, 0x0);
        gbc.writeMem(0x9467, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4f11, gbc.sp());
        EXPECT(0x9469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9467));
        EXPECT(0x12, gbc.readMem(0x9468));
        // CB 12 004E
        gbc.setState(0xb96f, 0xa098, 0x5a0, 0x9bf8, 0xd1df, 0x44b0, 0x1, 0x1);
        gbc.writeMem(0xb96f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xa098, gbc.sp());
        EXPECT(0xb971, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb96f));
        EXPECT(0x12, gbc.readMem(0xb970));
        // CB 12 004F
        gbc.setState(0xc5b, 0xdba3, 0x56a0, 0x5571, 0xe7ab, 0x7907, 0x1, 0x0);
        gbc.writeMem(0xc5b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xdba3, gbc.sp());
        EXPECT(0xc5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0050
        gbc.setState(0xe17d, 0xf407, 0x3df0, 0x6e63, 0xaab1, 0xb83b, 0x0, 0x0);
        gbc.writeMem(0xe17d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf407, gbc.sp());
        EXPECT(0xe17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17d));
        EXPECT(0x12, gbc.readMem(0xe17e));
        // CB 12 0051
        gbc.setState(0x7d88, 0x70eb, 0x6050, 0x628d, 0x1986, 0x2e8f, 0x0, 0x1);
        gbc.writeMem(0x7d88, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x70eb, gbc.sp());
        EXPECT(0x7d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0052
        gbc.setState(0x3d2b, 0x7503, 0xa240, 0xa070, 0x65cb, 0xb5d6, 0x0, 0x1);
        gbc.writeMem(0x3d2b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7503, gbc.sp());
        EXPECT(0x3d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0053
        gbc.setState(0xe361, 0x43ed, 0x4ce0, 0xb28f, 0xa14b, 0xa097, 0x1, 0x1);
        gbc.writeMem(0xe361, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x43ed, gbc.sp());
        EXPECT(0xe363, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe361));
        EXPECT(0x12, gbc.readMem(0xe362));
        // CB 12 0054
        gbc.setState(0xd2d6, 0xd3a3, 0x1ac0, 0xc1d8, 0x4e76, 0x4448, 0x1, 0x0);
        gbc.writeMem(0xd2d6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xd3a3, gbc.sp());
        EXPECT(0xd2d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d6));
        EXPECT(0x12, gbc.readMem(0xd2d7));
        // CB 12 0055
        gbc.setState(0x87b7, 0xe22c, 0x18d0, 0x96ae, 0x3b8c, 0xac6, 0x0, 0x0);
        gbc.writeMem(0x87b7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe22c, gbc.sp());
        EXPECT(0x87b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87b7));
        EXPECT(0x12, gbc.readMem(0x87b8));
        // CB 12 0056
        gbc.setState(0x25db, 0x9e25, 0x3a30, 0x6844, 0x912c, 0x8535, 0x0, 0x1);
        gbc.writeMem(0x25db, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9e25, gbc.sp());
        EXPECT(0x25dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0057
        gbc.setState(0x6242, 0xcd50, 0x3c40, 0xae7b, 0xc793, 0x1303, 0x0, 0x0);
        gbc.writeMem(0x6242, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcd50, gbc.sp());
        EXPECT(0x6244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0058
        gbc.setState(0x5afe, 0x89a6, 0x8a30, 0xb73d, 0x60f1, 0x111, 0x0, 0x1);
        gbc.writeMem(0x5afe, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x89a6, gbc.sp());
        EXPECT(0x5b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0059
        gbc.setState(0xdfbd, 0x1adc, 0xb60, 0xf0e, 0xd551, 0x5289, 0x0, 0x1);
        gbc.writeMem(0xdfbd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1adc, gbc.sp());
        EXPECT(0xdfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfbd));
        EXPECT(0x12, gbc.readMem(0xdfbe));
        // CB 12 005A
        gbc.setState(0x6d8f, 0x135f, 0xeec0, 0x55b6, 0xa5a3, 0xff77, 0x0, 0x0);
        gbc.writeMem(0x6d8f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x135f, gbc.sp());
        EXPECT(0x6d91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 005B
        gbc.setState(0xc8c0, 0x16cf, 0xaf0, 0x61d8, 0x903, 0x75b5, 0x1, 0x1);
        gbc.writeMem(0xc8c0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x16cf, gbc.sp());
        EXPECT(0xc8c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c0));
        EXPECT(0x12, gbc.readMem(0xc8c1));
        // CB 12 005C
        gbc.setState(0xad90, 0xcaca, 0xb410, 0xc8df, 0x4038, 0xa388, 0x0, 0x0);
        gbc.writeMem(0xad90, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcaca, gbc.sp());
        EXPECT(0xad92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad90));
        EXPECT(0x12, gbc.readMem(0xad91));
        // CB 12 005D
        gbc.setState(0x2b4a, 0x6a79, 0x4e0, 0x60fc, 0xf1b2, 0xce32, 0x0, 0x1);
        gbc.writeMem(0x2b4a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x6a79, gbc.sp());
        EXPECT(0x2b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 005E
        gbc.setState(0x2772, 0x79d, 0x7470, 0xebcb, 0x66c1, 0xcfe8, 0x1, 0x1);
        gbc.writeMem(0x2772, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x79d, gbc.sp());
        EXPECT(0x2774, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0060
        gbc.setState(0xbfee, 0x3d5b, 0x6c80, 0x67b1, 0x674, 0x64fb, 0x0, 0x1);
        gbc.writeMem(0xbfee, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x3d5b, gbc.sp());
        EXPECT(0xbff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfee));
        EXPECT(0x12, gbc.readMem(0xbfef));
        // CB 12 0061
        gbc.setState(0xe850, 0x556e, 0x6c70, 0xcdea, 0xa4d7, 0x7ecb, 0x0, 0x0);
        gbc.writeMem(0xe850, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x556e, gbc.sp());
        EXPECT(0xe852, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe850));
        EXPECT(0x12, gbc.readMem(0xe851));
        // CB 12 0062
        gbc.setState(0x8378, 0x1b36, 0x5330, 0xbe1a, 0xb20, 0xe29e, 0x0, 0x1);
        gbc.writeMem(0x8378, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1b36, gbc.sp());
        EXPECT(0x837a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8378));
        EXPECT(0x12, gbc.readMem(0x8379));
        // CB 12 0063
        gbc.setState(0x1b30, 0x76cd, 0xb6d0, 0x822c, 0x7aed, 0xf966, 0x0, 0x0);
        gbc.writeMem(0x1b30, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x76cd, gbc.sp());
        EXPECT(0x1b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0064
        gbc.setState(0x5926, 0x9f85, 0x6850, 0x4c6d, 0x126e, 0x6b1d, 0x0, 0x0);
        gbc.writeMem(0x5926, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9f85, gbc.sp());
        EXPECT(0x5928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0065
        gbc.setState(0xa7eb, 0x69ec, 0x9420, 0xf35b, 0x9269, 0x8f4b, 0x1, 0x0);
        gbc.writeMem(0xa7eb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x69ec, gbc.sp());
        EXPECT(0xa7ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7eb));
        EXPECT(0x12, gbc.readMem(0xa7ec));
        // CB 12 0066
        gbc.setState(0xc81, 0xeab1, 0x2930, 0xeecd, 0x65fe, 0xe562, 0x1, 0x0);
        gbc.writeMem(0xc81, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xeab1, gbc.sp());
        EXPECT(0xc83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0067
        gbc.setState(0x9551, 0xb122, 0x34c0, 0x6355, 0x7537, 0xd26c, 0x0, 0x1);
        gbc.writeMem(0x9551, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb122, gbc.sp());
        EXPECT(0x9553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9551));
        EXPECT(0x12, gbc.readMem(0x9552));
        // CB 12 0068
        gbc.setState(0x36f3, 0xb9df, 0x5a70, 0x6543, 0x9038, 0x37d3, 0x1, 0x1);
        gbc.writeMem(0x36f3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xb9df, gbc.sp());
        EXPECT(0x36f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0069
        gbc.setState(0x7812, 0x6996, 0xf7c0, 0xb31e, 0xe5c1, 0x6425, 0x0, 0x1);
        gbc.writeMem(0x7812, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6996, gbc.sp());
        EXPECT(0x7814, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 006A
        gbc.setState(0x56, 0xc525, 0xc3d0, 0x665f, 0x434b, 0xafa9, 0x0, 0x0);
        gbc.writeMem(0x56, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc525, gbc.sp());
        EXPECT(0x58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 006B
        gbc.setState(0x14c3, 0xbf0f, 0x1540, 0xdad6, 0x2ef2, 0x107, 0x1, 0x0);
        gbc.writeMem(0x14c3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbf0f, gbc.sp());
        EXPECT(0x14c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 006E
        gbc.setState(0xe1b, 0x4343, 0xbb20, 0x4bea, 0x2333, 0x2bd7, 0x1, 0x1);
        gbc.writeMem(0xe1b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x4343, gbc.sp());
        EXPECT(0xe1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 006F
        gbc.setState(0x5854, 0x3ec6, 0xfaa0, 0xe53a, 0xe23c, 0xf52, 0x0, 0x0);
        gbc.writeMem(0x5854, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3ec6, gbc.sp());
        EXPECT(0x5856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0070
        gbc.setState(0x3d2b, 0xb20e, 0xb7c0, 0x966e, 0x6347, 0x8843, 0x0, 0x1);
        gbc.writeMem(0x3d2b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb20e, gbc.sp());
        EXPECT(0x3d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0072
        gbc.setState(0x1e83, 0x7e3b, 0xc090, 0x8fe7, 0x6776, 0x390f, 0x0, 0x1);
        gbc.writeMem(0x1e83, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7e3b, gbc.sp());
        EXPECT(0x1e85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0073
        gbc.setState(0xa038, 0x7dde, 0x170, 0xe701, 0x39b6, 0x6add, 0x0, 0x1);
        gbc.writeMem(0xa038, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7dde, gbc.sp());
        EXPECT(0xa03a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa038));
        EXPECT(0x12, gbc.readMem(0xa039));
        // CB 12 0074
        gbc.setState(0xdc03, 0x8efa, 0x5580, 0x1c0d, 0x1055, 0xb45f, 0x1, 0x1);
        gbc.writeMem(0xdc03, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x8efa, gbc.sp());
        EXPECT(0xdc05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc03));
        EXPECT(0x12, gbc.readMem(0xdc04));
        // CB 12 0075
        gbc.setState(0xe6d6, 0x834d, 0x4d60, 0x2571, 0x8dd8, 0xf4c6, 0x0, 0x0);
        gbc.writeMem(0xe6d6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x834d, gbc.sp());
        EXPECT(0xe6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6d6));
        EXPECT(0x12, gbc.readMem(0xe6d7));
        // CB 12 0076
        gbc.setState(0xd4bc, 0xbfd1, 0x7bf0, 0x5b1d, 0xf37a, 0xc222, 0x0, 0x1);
        gbc.writeMem(0xd4bc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbfd1, gbc.sp());
        EXPECT(0xd4be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4bc));
        EXPECT(0x12, gbc.readMem(0xd4bd));
        // CB 12 0077
        gbc.setState(0x12db, 0x4573, 0x5990, 0x25cd, 0xf705, 0xcc92, 0x0, 0x0);
        gbc.writeMem(0x12db, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4573, gbc.sp());
        EXPECT(0x12dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0078
        gbc.setState(0xa9c0, 0x51e5, 0x5740, 0x3d73, 0x8603, 0x1d8d, 0x0, 0x1);
        gbc.writeMem(0xa9c0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x51e5, gbc.sp());
        EXPECT(0xa9c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9c0));
        EXPECT(0x12, gbc.readMem(0xa9c1));
        // CB 12 0079
        gbc.setState(0x9659, 0x6e32, 0xce00, 0x73e3, 0x7ec3, 0xf554, 0x1, 0x0);
        gbc.writeMem(0x9659, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6e32, gbc.sp());
        EXPECT(0x965b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9659));
        EXPECT(0x12, gbc.readMem(0x965a));
        // CB 12 007A
        gbc.setState(0x6c53, 0x98e7, 0xaa20, 0x95af, 0x3306, 0x313b, 0x0, 0x1);
        gbc.writeMem(0x6c53, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x98e7, gbc.sp());
        EXPECT(0x6c55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 007B
        gbc.setState(0xd339, 0xae52, 0x83f0, 0x71d0, 0xddcb, 0x8fb3, 0x0, 0x0);
        gbc.writeMem(0xd339, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xae52, gbc.sp());
        EXPECT(0xd33b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd339));
        EXPECT(0x12, gbc.readMem(0xd33a));
        // CB 12 007C
        gbc.setState(0xd469, 0xf79, 0x7b70, 0xfd22, 0x7ea2, 0xe62, 0x0, 0x1);
        gbc.writeMem(0xd469, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xf79, gbc.sp());
        EXPECT(0xd46b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd469));
        EXPECT(0x12, gbc.readMem(0xd46a));
        // CB 12 007D
        gbc.setState(0xe287, 0x8dce, 0xf150, 0xc5f1, 0x36e6, 0xd0e1, 0x0, 0x1);
        gbc.writeMem(0xe287, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x8dce, gbc.sp());
        EXPECT(0xe289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe287));
        EXPECT(0x12, gbc.readMem(0xe288));
        // CB 12 007E
        gbc.setState(0x1aa9, 0x3484, 0x7700, 0x691a, 0x516e, 0xbdd9, 0x0, 0x0);
        gbc.writeMem(0x1aa9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3484, gbc.sp());
        EXPECT(0x1aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 007F
        gbc.setState(0x27a1, 0x60d3, 0x4c20, 0x235, 0x7019, 0xf241, 0x0, 0x1);
        gbc.writeMem(0x27a1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x60d3, gbc.sp());
        EXPECT(0x27a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0080
        gbc.setState(0x2583, 0x24c0, 0xcfd0, 0xffcc, 0xa7c0, 0x35af, 0x1, 0x1);
        gbc.writeMem(0x2583, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x24c0, gbc.sp());
        EXPECT(0x2585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0081
        gbc.setState(0x48fb, 0xed25, 0x26a0, 0x7f36, 0xe918, 0xd9cb, 0x0, 0x0);
        gbc.writeMem(0x48fb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xed25, gbc.sp());
        EXPECT(0x48fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0082
        gbc.setState(0xa60f, 0xcdf5, 0x9610, 0xc075, 0x4a84, 0xa1d1, 0x0, 0x0);
        gbc.writeMem(0xa60f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xcdf5, gbc.sp());
        EXPECT(0xa611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa60f));
        EXPECT(0x12, gbc.readMem(0xa610));
        // CB 12 0083
        gbc.setState(0xa452, 0x1c01, 0x4300, 0xd9b1, 0x5a04, 0x3d60, 0x1, 0x1);
        gbc.writeMem(0xa452, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x1c01, gbc.sp());
        EXPECT(0xa454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa452));
        EXPECT(0x12, gbc.readMem(0xa453));
        // CB 12 0084
        gbc.setState(0xc43f, 0x7728, 0xafb0, 0x9fcb, 0xa76d, 0x3aae, 0x1, 0x1);
        gbc.writeMem(0xc43f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7728, gbc.sp());
        EXPECT(0xc441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc43f));
        EXPECT(0x12, gbc.readMem(0xc440));
        // CB 12 0086
        gbc.setState(0x1f64, 0xd461, 0x6c20, 0x750f, 0xc18d, 0x65b3, 0x1, 0x0);
        gbc.writeMem(0x1f64, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd461, gbc.sp());
        EXPECT(0x1f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0088
        gbc.setState(0x9d14, 0x8066, 0xe330, 0xdfe4, 0x922f, 0x84a4, 0x1, 0x1);
        gbc.writeMem(0x9d14, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x8066, gbc.sp());
        EXPECT(0x9d16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d14));
        EXPECT(0x12, gbc.readMem(0x9d15));
        // CB 12 0089
        gbc.setState(0xe73a, 0xbc91, 0x5850, 0x788c, 0xcfef, 0x3f46, 0x1, 0x1);
        gbc.writeMem(0xe73a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xbc91, gbc.sp());
        EXPECT(0xe73c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe73a));
        EXPECT(0x12, gbc.readMem(0xe73b));
        // CB 12 008A
        gbc.setState(0x7b9a, 0x3342, 0xd540, 0x3c70, 0xc723, 0x7cc6, 0x1, 0x0);
        gbc.writeMem(0x7b9a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x3342, gbc.sp());
        EXPECT(0x7b9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 008B
        gbc.setState(0x91a7, 0x21a, 0xd8f0, 0xede8, 0x2870, 0xcb7c, 0x0, 0x0);
        gbc.writeMem(0x91a7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x21a, gbc.sp());
        EXPECT(0x91a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91a7));
        EXPECT(0x12, gbc.readMem(0x91a8));
        // CB 12 008C
        gbc.setState(0x476f, 0x900e, 0x8db0, 0xb2b5, 0x1fe7, 0xccc8, 0x1, 0x1);
        gbc.writeMem(0x476f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x900e, gbc.sp());
        EXPECT(0x4771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 008D
        gbc.setState(0xc69c, 0x105b, 0xd690, 0x30ef, 0x6ac7, 0x704a, 0x0, 0x1);
        gbc.writeMem(0xc69c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x105b, gbc.sp());
        EXPECT(0xc69e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc69c));
        EXPECT(0x12, gbc.readMem(0xc69d));
        // CB 12 008F
        gbc.setState(0x216e, 0x2d3e, 0xd580, 0xb718, 0xadc9, 0x6f9f, 0x0, 0x1);
        gbc.writeMem(0x216e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x2d3e, gbc.sp());
        EXPECT(0x2170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0090
        gbc.setState(0x1cf5, 0xe850, 0x6820, 0x351a, 0x95, 0x7895, 0x0, 0x0);
        gbc.writeMem(0x1cf5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xe850, gbc.sp());
        EXPECT(0x1cf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0091
        gbc.setState(0x6e0d, 0x3d00, 0x580, 0x6e61, 0x46c6, 0xf78e, 0x0, 0x0);
        gbc.writeMem(0x6e0d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3d00, gbc.sp());
        EXPECT(0x6e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0092
        gbc.setState(0x3dd1, 0x8de, 0xaeb0, 0x3664, 0xf813, 0x24bd, 0x1, 0x1);
        gbc.writeMem(0x3dd1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8de, gbc.sp());
        EXPECT(0x3dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0093
        gbc.setState(0xbc19, 0x8205, 0x8320, 0x3eaa, 0x5557, 0xaf3e, 0x0, 0x1);
        gbc.writeMem(0xbc19, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8205, gbc.sp());
        EXPECT(0xbc1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc19));
        EXPECT(0x12, gbc.readMem(0xbc1a));
        // CB 12 0094
        gbc.setState(0x7b42, 0xefc8, 0x76f0, 0xc899, 0x7ae2, 0xb9f1, 0x0, 0x1);
        gbc.writeMem(0x7b42, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xefc8, gbc.sp());
        EXPECT(0x7b44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0095
        gbc.setState(0x9ff8, 0x994f, 0x2a80, 0xc982, 0xa2de, 0xf8d6, 0x1, 0x0);
        gbc.writeMem(0x9ff8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x994f, gbc.sp());
        EXPECT(0x9ffa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ff8));
        EXPECT(0x12, gbc.readMem(0x9ff9));
        // CB 12 0096
        gbc.setState(0x616c, 0x7d8a, 0x6150, 0xfcf2, 0x95d5, 0xad62, 0x0, 0x0);
        gbc.writeMem(0x616c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7d8a, gbc.sp());
        EXPECT(0x616e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0097
        gbc.setState(0x7d41, 0xa78f, 0x9d60, 0x6783, 0x2e15, 0x2b44, 0x1, 0x0);
        gbc.writeMem(0x7d41, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa78f, gbc.sp());
        EXPECT(0x7d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0098
        gbc.setState(0x2297, 0xa430, 0xf140, 0x1475, 0xbc17, 0x587c, 0x0, 0x0);
        gbc.writeMem(0x2297, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa430, gbc.sp());
        EXPECT(0x2299, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0099
        gbc.setState(0x6e6c, 0x2010, 0x50e0, 0x3696, 0x93ff, 0xa041, 0x0, 0x0);
        gbc.writeMem(0x6e6c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2010, gbc.sp());
        EXPECT(0x6e6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 009A
        gbc.setState(0x2dd8, 0x7c72, 0x52e0, 0xdf87, 0xd359, 0x9ef6, 0x1, 0x1);
        gbc.writeMem(0x2dd8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x7c72, gbc.sp());
        EXPECT(0x2dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 009B
        gbc.setState(0xe18c, 0x4a0d, 0x5300, 0x7fbc, 0x69ed, 0xbdc7, 0x0, 0x1);
        gbc.writeMem(0xe18c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x4a0d, gbc.sp());
        EXPECT(0xe18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe18c));
        EXPECT(0x12, gbc.readMem(0xe18d));
        // CB 12 009D
        gbc.setState(0x62c, 0xe5fc, 0x1b10, 0xe0e4, 0x6074, 0x556a, 0x0, 0x0);
        gbc.writeMem(0x62c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe5fc, gbc.sp());
        EXPECT(0x62e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 009E
        gbc.setState(0x84fa, 0x19c2, 0xbff0, 0x3dbc, 0x3e66, 0x240a, 0x1, 0x1);
        gbc.writeMem(0x84fa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x19c2, gbc.sp());
        EXPECT(0x84fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84fa));
        EXPECT(0x12, gbc.readMem(0x84fb));
        // CB 12 009F
        gbc.setState(0xbb10, 0x55b0, 0x25a0, 0x86e3, 0xfc00, 0x58ca, 0x0, 0x0);
        gbc.writeMem(0xbb10, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x55b0, gbc.sp());
        EXPECT(0xbb12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb10));
        EXPECT(0x12, gbc.readMem(0xbb11));
        // CB 12 00A0
        gbc.setState(0x47b4, 0xda6f, 0x9cc0, 0xf2a2, 0x9fad, 0x1fa9, 0x0, 0x1);
        gbc.writeMem(0x47b4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xda6f, gbc.sp());
        EXPECT(0x47b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00A1
        gbc.setState(0x4339, 0xf1de, 0xc180, 0xcbb3, 0x537, 0xd4f1, 0x1, 0x1);
        gbc.writeMem(0x4339, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf1de, gbc.sp());
        EXPECT(0x433b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00A2
        gbc.setState(0x384f, 0x3342, 0xe0a0, 0x8a0e, 0x8c29, 0x6f79, 0x1, 0x0);
        gbc.writeMem(0x384f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3342, gbc.sp());
        EXPECT(0x3851, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00A3
        gbc.setState(0xde85, 0xb5ee, 0x55b0, 0x5f2c, 0x362c, 0xf86a, 0x1, 0x1);
        gbc.writeMem(0xde85, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb5ee, gbc.sp());
        EXPECT(0xde87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde85));
        EXPECT(0x12, gbc.readMem(0xde86));
        // CB 12 00A4
        gbc.setState(0xaa2c, 0xe43a, 0x9d90, 0x7787, 0xcb10, 0x302b, 0x0, 0x0);
        gbc.writeMem(0xaa2c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe43a, gbc.sp());
        EXPECT(0xaa2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa2c));
        EXPECT(0x12, gbc.readMem(0xaa2d));
        // CB 12 00A5
        gbc.setState(0xd709, 0x5537, 0x41a0, 0x6835, 0x84d3, 0x4ab4, 0x0, 0x1);
        gbc.writeMem(0xd709, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5537, gbc.sp());
        EXPECT(0xd70b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd709));
        EXPECT(0x12, gbc.readMem(0xd70a));
        // CB 12 00A6
        gbc.setState(0xa433, 0x2600, 0xd510, 0x9e81, 0x332f, 0xe4a9, 0x0, 0x0);
        gbc.writeMem(0xa433, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2600, gbc.sp());
        EXPECT(0xa435, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa433));
        EXPECT(0x12, gbc.readMem(0xa434));
        // CB 12 00A8
        gbc.setState(0x44, 0x5ab4, 0xf000, 0xd8e8, 0x2652, 0xbf42, 0x0, 0x1);
        gbc.writeMem(0x44, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5ab4, gbc.sp());
        EXPECT(0x46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00A9
        gbc.setState(0xe3c3, 0x1fda, 0x3590, 0xf477, 0x6edb, 0xaac2, 0x0, 0x0);
        gbc.writeMem(0xe3c3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1fda, gbc.sp());
        EXPECT(0xe3c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3c3));
        EXPECT(0x12, gbc.readMem(0xe3c4));
        // CB 12 00AA
        gbc.setState(0x908a, 0x45d4, 0x5b70, 0x89ae, 0x138, 0x282e, 0x1, 0x0);
        gbc.writeMem(0x908a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x45d4, gbc.sp());
        EXPECT(0x908c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x908a));
        EXPECT(0x12, gbc.readMem(0x908b));
        // CB 12 00AB
        gbc.setState(0xe798, 0xab44, 0x3da0, 0x318c, 0x2e2b, 0x6488, 0x0, 0x1);
        gbc.writeMem(0xe798, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xab44, gbc.sp());
        EXPECT(0xe79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe798));
        EXPECT(0x12, gbc.readMem(0xe799));
        // CB 12 00AC
        gbc.setState(0xdafb, 0x5794, 0x50f0, 0xc2de, 0x8da, 0xf02b, 0x0, 0x0);
        gbc.writeMem(0xdafb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5794, gbc.sp());
        EXPECT(0xdafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdafb));
        EXPECT(0x12, gbc.readMem(0xdafc));
        // CB 12 00AD
        gbc.setState(0x2a5e, 0xac0d, 0x27f0, 0xae3a, 0xd077, 0xf8c0, 0x1, 0x0);
        gbc.writeMem(0x2a5e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xac0d, gbc.sp());
        EXPECT(0x2a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00AE
        gbc.setState(0x2024, 0x15f3, 0x2f60, 0xfebd, 0x9f8b, 0x3400, 0x0, 0x0);
        gbc.writeMem(0x2024, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x15f3, gbc.sp());
        EXPECT(0x2026, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00AF
        gbc.setState(0x6594, 0x9ecf, 0xd920, 0x2450, 0xf730, 0x9834, 0x1, 0x1);
        gbc.writeMem(0x6594, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9ecf, gbc.sp());
        EXPECT(0x6596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00B0
        gbc.setState(0xcf8a, 0x51ec, 0xa430, 0x3f25, 0xa9c5, 0x1b73, 0x0, 0x1);
        gbc.writeMem(0xcf8a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x51ec, gbc.sp());
        EXPECT(0xcf8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf8a));
        EXPECT(0x12, gbc.readMem(0xcf8b));
        // CB 12 00B1
        gbc.setState(0x2497, 0x8068, 0x70c0, 0xf0a7, 0x8c8b, 0x3e03, 0x1, 0x0);
        gbc.writeMem(0x2497, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x8068, gbc.sp());
        EXPECT(0x2499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00B2
        gbc.setState(0xcb07, 0xb105, 0x2680, 0x4f2e, 0xceda, 0x5135, 0x0, 0x0);
        gbc.writeMem(0xcb07, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xb105, gbc.sp());
        EXPECT(0xcb09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb07));
        EXPECT(0x12, gbc.readMem(0xcb08));
        // CB 12 00B3
        gbc.setState(0x6403, 0x410a, 0x7800, 0xa854, 0xc9b8, 0x3fd, 0x0, 0x0);
        gbc.writeMem(0x6403, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x410a, gbc.sp());
        EXPECT(0x6405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00B4
        gbc.setState(0xea7e, 0x4ddb, 0xd8f0, 0x57ff, 0xcb22, 0xc8e8, 0x0, 0x0);
        gbc.writeMem(0xea7e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4ddb, gbc.sp());
        EXPECT(0xea80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea7e));
        EXPECT(0x12, gbc.readMem(0xea7f));
        // CB 12 00B5
        gbc.setState(0xcd3e, 0x8ae4, 0xe4d0, 0x106a, 0x1bd3, 0x67c, 0x1, 0x0);
        gbc.writeMem(0xcd3e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8ae4, gbc.sp());
        EXPECT(0xcd40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd3e));
        EXPECT(0x12, gbc.readMem(0xcd3f));
        // CB 12 00B6
        gbc.setState(0x974f, 0x1f20, 0xce80, 0xfb6, 0x4222, 0x749d, 0x0, 0x1);
        gbc.writeMem(0x974f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1f20, gbc.sp());
        EXPECT(0x9751, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x974f));
        EXPECT(0x12, gbc.readMem(0x9750));
        // CB 12 00B8
        gbc.setState(0x3891, 0x9f85, 0xf7b0, 0x98d1, 0x5c05, 0x757c, 0x0, 0x0);
        gbc.writeMem(0x3891, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9f85, gbc.sp());
        EXPECT(0x3893, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00BA
        gbc.setState(0x86, 0xe278, 0x5690, 0x24b, 0x2032, 0x9f99, 0x0, 0x0);
        gbc.writeMem(0x86, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xe278, gbc.sp());
        EXPECT(0x88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00BB
        gbc.setState(0x64fe, 0x21d3, 0xfa40, 0xd260, 0x2aa4, 0x21c1, 0x1, 0x0);
        gbc.writeMem(0x64fe, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x21d3, gbc.sp());
        EXPECT(0x6500, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00BC
        gbc.setState(0x90d1, 0xdb42, 0x3100, 0xf1fe, 0x9c51, 0xec02, 0x0, 0x1);
        gbc.writeMem(0x90d1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xdb42, gbc.sp());
        EXPECT(0x90d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d1));
        EXPECT(0x12, gbc.readMem(0x90d2));
        // CB 12 00BD
        gbc.setState(0x384d, 0x1429, 0x4b40, 0xa4e7, 0xd227, 0x494e, 0x1, 0x0);
        gbc.writeMem(0x384d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x1429, gbc.sp());
        EXPECT(0x384f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00BE
        gbc.setState(0x38d7, 0x44c8, 0xe490, 0x5eb8, 0xc5ce, 0x1706, 0x0, 0x0);
        gbc.writeMem(0x38d7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x44c8, gbc.sp());
        EXPECT(0x38d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00C0
        gbc.setState(0x8e2e, 0xdb56, 0x4d70, 0xaf58, 0x50b5, 0x84ac, 0x0, 0x1);
        gbc.writeMem(0x8e2e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xdb56, gbc.sp());
        EXPECT(0x8e30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e2e));
        EXPECT(0x12, gbc.readMem(0x8e2f));
        // CB 12 00C1
        gbc.setState(0x5b8f, 0x9907, 0x8b10, 0x9686, 0xa9d0, 0xea96, 0x1, 0x1);
        gbc.writeMem(0x5b8f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9907, gbc.sp());
        EXPECT(0x5b91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00C2
        gbc.setState(0xe8c7, 0x54e1, 0x18f0, 0xfaf6, 0x1ee8, 0x9613, 0x1, 0x0);
        gbc.writeMem(0xe8c7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x54e1, gbc.sp());
        EXPECT(0xe8c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8c7));
        EXPECT(0x12, gbc.readMem(0xe8c8));
        // CB 12 00C3
        gbc.setState(0xdeb6, 0x8cf8, 0xf2c0, 0xeda3, 0x62c7, 0x2e4c, 0x1, 0x0);
        gbc.writeMem(0xdeb6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x8cf8, gbc.sp());
        EXPECT(0xdeb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdeb6));
        EXPECT(0x12, gbc.readMem(0xdeb7));
        // CB 12 00C4
        gbc.setState(0x70f0, 0xdc, 0x1880, 0x3f69, 0x62d6, 0x9cc7, 0x1, 0x1);
        gbc.writeMem(0x70f0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xdc, gbc.sp());
        EXPECT(0x70f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00C5
        gbc.setState(0xc163, 0x1b4f, 0xe130, 0x4d86, 0xb590, 0x3e40, 0x1, 0x0);
        gbc.writeMem(0xc163, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1b4f, gbc.sp());
        EXPECT(0xc165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc163));
        EXPECT(0x12, gbc.readMem(0xc164));
        // CB 12 00C6
        gbc.setState(0xeeeb, 0xe6ba, 0xa980, 0x5362, 0x3df0, 0xc36a, 0x1, 0x0);
        gbc.writeMem(0xeeeb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe6ba, gbc.sp());
        EXPECT(0xeeed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeeb));
        EXPECT(0x12, gbc.readMem(0xeeec));
        // CB 12 00C7
        gbc.setState(0xb91b, 0x6e27, 0x1de0, 0x39ce, 0xb23d, 0xd90a, 0x1, 0x0);
        gbc.writeMem(0xb91b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6e27, gbc.sp());
        EXPECT(0xb91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb91b));
        EXPECT(0x12, gbc.readMem(0xb91c));
        // CB 12 00C9
        gbc.setState(0xdb5a, 0xe3cf, 0x1e50, 0x978, 0x75a2, 0xe223, 0x0, 0x1);
        gbc.writeMem(0xdb5a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe3cf, gbc.sp());
        EXPECT(0xdb5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb5a));
        EXPECT(0x12, gbc.readMem(0xdb5b));
        // CB 12 00CA
        gbc.setState(0x9e2b, 0xa07c, 0x8e90, 0xa3f0, 0xdec1, 0x5f08, 0x1, 0x1);
        gbc.writeMem(0x9e2b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa07c, gbc.sp());
        EXPECT(0x9e2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e2b));
        EXPECT(0x12, gbc.readMem(0x9e2c));
        // CB 12 00CB
        gbc.setState(0x3a42, 0x1582, 0x95e0, 0xa840, 0x4be0, 0xef77, 0x0, 0x1);
        gbc.writeMem(0x3a42, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1582, gbc.sp());
        EXPECT(0x3a44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00CC
        gbc.setState(0x8f18, 0xcaa, 0x8ac0, 0x6592, 0x69ef, 0x3ffc, 0x1, 0x1);
        gbc.writeMem(0x8f18, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xcaa, gbc.sp());
        EXPECT(0x8f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f18));
        EXPECT(0x12, gbc.readMem(0x8f19));
        // CB 12 00CD
        gbc.setState(0x2999, 0xaf14, 0x5fc0, 0xb7eb, 0xaae8, 0x2f51, 0x0, 0x1);
        gbc.writeMem(0x2999, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xaf14, gbc.sp());
        EXPECT(0x299b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00CE
        gbc.setState(0xb215, 0xe0d, 0x1740, 0xe808, 0x2e6a, 0xc03b, 0x0, 0x1);
        gbc.writeMem(0xb215, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xe0d, gbc.sp());
        EXPECT(0xb217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb215));
        EXPECT(0x12, gbc.readMem(0xb216));
        // CB 12 00CF
        gbc.setState(0x69a1, 0x9627, 0x9f50, 0xb017, 0xe485, 0x944d, 0x0, 0x1);
        gbc.writeMem(0x69a1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x9627, gbc.sp());
        EXPECT(0x69a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00D1
        gbc.setState(0x294d, 0x41e6, 0x9dc0, 0x19ee, 0x228, 0x5759, 0x0, 0x0);
        gbc.writeMem(0x294d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x41e6, gbc.sp());
        EXPECT(0x294f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00D2
        gbc.setState(0x4eb9, 0x99b, 0x74f0, 0xa3a2, 0xcd19, 0xe944, 0x1, 0x0);
        gbc.writeMem(0x4eb9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x99b, gbc.sp());
        EXPECT(0x4ebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00D3
        gbc.setState(0x5f01, 0x18d6, 0xfa00, 0xe77c, 0x88ae, 0x665, 0x1, 0x1);
        gbc.writeMem(0x5f01, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x18d6, gbc.sp());
        EXPECT(0x5f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00D4
        gbc.setState(0x363e, 0xfe71, 0xbf50, 0xa0c0, 0x5f29, 0x813b, 0x1, 0x1);
        gbc.writeMem(0x363e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xfe71, gbc.sp());
        EXPECT(0x3640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00D5
        gbc.setState(0x8b4a, 0x26c1, 0x8450, 0x969b, 0x3f4a, 0xce99, 0x1, 0x1);
        gbc.writeMem(0x8b4a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x26c1, gbc.sp());
        EXPECT(0x8b4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b4a));
        EXPECT(0x12, gbc.readMem(0x8b4b));
        // CB 12 00D6
        gbc.setState(0xddcc, 0xc6a2, 0x6c40, 0xac52, 0x22e, 0xae99, 0x0, 0x1);
        gbc.writeMem(0xddcc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc6a2, gbc.sp());
        EXPECT(0xddce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddcc));
        EXPECT(0x12, gbc.readMem(0xddcd));
        // CB 12 00D7
        gbc.setState(0x5767, 0x8a6b, 0xf6d0, 0x3c5a, 0x86a, 0xbb15, 0x1, 0x1);
        gbc.writeMem(0x5767, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8a6b, gbc.sp());
        EXPECT(0x5769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00D8
        gbc.setState(0xa570, 0xc2e6, 0x3810, 0x3989, 0x3fb7, 0x14b1, 0x0, 0x0);
        gbc.writeMem(0xa570, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc2e6, gbc.sp());
        EXPECT(0xa572, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa570));
        EXPECT(0x12, gbc.readMem(0xa571));
        // CB 12 00D9
        gbc.setState(0x92e, 0x71e1, 0x16b0, 0x194d, 0x9680, 0x6f29, 0x1, 0x1);
        gbc.writeMem(0x92e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x71e1, gbc.sp());
        EXPECT(0x930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00DA
        gbc.setState(0x14e4, 0xeec3, 0xa6b0, 0x44d3, 0xce7b, 0xe171, 0x1, 0x1);
        gbc.writeMem(0x14e4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xeec3, gbc.sp());
        EXPECT(0x14e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00DB
        gbc.setState(0xa0a6, 0xf2e7, 0xf9c0, 0x148d, 0xa744, 0x4dda, 0x1, 0x0);
        gbc.writeMem(0xa0a6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf2e7, gbc.sp());
        EXPECT(0xa0a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a6));
        EXPECT(0x12, gbc.readMem(0xa0a7));
        // CB 12 00DC
        gbc.setState(0x1713, 0x82a0, 0xd0c0, 0x9ecc, 0xccd5, 0x2654, 0x1, 0x1);
        gbc.writeMem(0x1713, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x82a0, gbc.sp());
        EXPECT(0x1715, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00DD
        gbc.setState(0xaf9c, 0x62d7, 0x84c0, 0xaa96, 0xea24, 0x1822, 0x1, 0x0);
        gbc.writeMem(0xaf9c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x62d7, gbc.sp());
        EXPECT(0xaf9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf9c));
        EXPECT(0x12, gbc.readMem(0xaf9d));
        // CB 12 00DE
        gbc.setState(0x8799, 0x21e5, 0x6a50, 0xe717, 0x6292, 0x3fb2, 0x1, 0x1);
        gbc.writeMem(0x8799, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x21e5, gbc.sp());
        EXPECT(0x879b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8799));
        EXPECT(0x12, gbc.readMem(0x879a));
        // CB 12 00DF
        gbc.setState(0x48cc, 0x2952, 0x76a0, 0x3fce, 0xb3c8, 0xbc9c, 0x0, 0x0);
        gbc.writeMem(0x48cc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2952, gbc.sp());
        EXPECT(0x48ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00E0
        gbc.setState(0xc180, 0xe1fe, 0xf4e0, 0x733b, 0xf69b, 0xaf9e, 0x1, 0x0);
        gbc.writeMem(0xc180, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xe1fe, gbc.sp());
        EXPECT(0xc182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc180));
        EXPECT(0x12, gbc.readMem(0xc181));
        // CB 12 00E1
        gbc.setState(0x4cf3, 0x127f, 0x10a0, 0x5d73, 0xc9f8, 0x2bb2, 0x1, 0x1);
        gbc.writeMem(0x4cf3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x127f, gbc.sp());
        EXPECT(0x4cf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00E2
        gbc.setState(0xcfd4, 0xad8c, 0xbed0, 0x937, 0x9eb4, 0x6131, 0x1, 0x0);
        gbc.writeMem(0xcfd4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xad8c, gbc.sp());
        EXPECT(0xcfd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfd4));
        EXPECT(0x12, gbc.readMem(0xcfd5));
        // CB 12 00E3
        gbc.setState(0xc040, 0x49e, 0xebe0, 0x6bed, 0xcdaf, 0xf3b4, 0x1, 0x1);
        gbc.writeMem(0xc040, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x49e, gbc.sp());
        EXPECT(0xc042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc040));
        EXPECT(0x12, gbc.readMem(0xc041));
        // CB 12 00E4
        gbc.setState(0xeefe, 0xc881, 0x4ac0, 0x2ee6, 0xf8ce, 0xf883, 0x1, 0x1);
        gbc.writeMem(0xeefe, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc881, gbc.sp());
        EXPECT(0xef00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeefe));
        EXPECT(0x12, gbc.readMem(0xeeff));
        // CB 12 00E5
        gbc.setState(0x733a, 0x49ed, 0x6870, 0x140e, 0x7aaa, 0xf2f4, 0x0, 0x1);
        gbc.writeMem(0x733a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x49ed, gbc.sp());
        EXPECT(0x733c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00E6
        gbc.setState(0xd19, 0x118c, 0xcd60, 0xccdd, 0x4ddc, 0x68e0, 0x1, 0x1);
        gbc.writeMem(0xd19, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x118c, gbc.sp());
        EXPECT(0xd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00E7
        gbc.setState(0x202d, 0x39e8, 0xc740, 0xa023, 0x8a9e, 0x905a, 0x0, 0x1);
        gbc.writeMem(0x202d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x39e8, gbc.sp());
        EXPECT(0x202f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00E8
        gbc.setState(0x7c06, 0x184e, 0x24b0, 0x1cc, 0x8ca5, 0xa243, 0x0, 0x1);
        gbc.writeMem(0x7c06, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x184e, gbc.sp());
        EXPECT(0x7c08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00E9
        gbc.setState(0x7db8, 0x8fec, 0x30e0, 0x27e0, 0x9d39, 0x31c5, 0x1, 0x0);
        gbc.writeMem(0x7db8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8fec, gbc.sp());
        EXPECT(0x7dba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00EA
        gbc.setState(0xb798, 0x1ee0, 0xae70, 0x3f0f, 0x7ad0, 0x6d76, 0x0, 0x0);
        gbc.writeMem(0xb798, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1ee0, gbc.sp());
        EXPECT(0xb79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb798));
        EXPECT(0x12, gbc.readMem(0xb799));
        // CB 12 00EB
        gbc.setState(0x4e2, 0xbfa1, 0x3740, 0x634, 0x9d23, 0xb69b, 0x1, 0x1);
        gbc.writeMem(0x4e2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbfa1, gbc.sp());
        EXPECT(0x4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00ED
        gbc.setState(0x2f79, 0x9c1, 0xcb40, 0xa1eb, 0xc088, 0xcce1, 0x0, 0x0);
        gbc.writeMem(0x2f79, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9c1, gbc.sp());
        EXPECT(0x2f7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00EE
        gbc.setState(0x4688, 0x2f24, 0x40b0, 0x7708, 0x522f, 0x5afe, 0x1, 0x0);
        gbc.writeMem(0x4688, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2f24, gbc.sp());
        EXPECT(0x468a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00EF
        gbc.setState(0x86fb, 0x283a, 0x5d80, 0xd4ef, 0xdb84, 0x27ba, 0x1, 0x0);
        gbc.writeMem(0x86fb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x283a, gbc.sp());
        EXPECT(0x86fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86fb));
        EXPECT(0x12, gbc.readMem(0x86fc));
        // CB 12 00F0
        gbc.setState(0x1603, 0xc3c9, 0xbf70, 0x40ee, 0x6f21, 0x66a0, 0x1, 0x1);
        gbc.writeMem(0x1603, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xc3c9, gbc.sp());
        EXPECT(0x1605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00F1
        gbc.setState(0xbfee, 0x6bc7, 0xc240, 0x5c95, 0x4ed5, 0x6efa, 0x1, 0x0);
        gbc.writeMem(0xbfee, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6bc7, gbc.sp());
        EXPECT(0xbff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfee));
        EXPECT(0x12, gbc.readMem(0xbfef));
        // CB 12 00F2
        gbc.setState(0x959e, 0x4efc, 0x7130, 0x1107, 0x4b3e, 0x351b, 0x0, 0x0);
        gbc.writeMem(0x959e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x4efc, gbc.sp());
        EXPECT(0x95a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x959e));
        EXPECT(0x12, gbc.readMem(0x959f));
        // CB 12 00F3
        gbc.setState(0xe9c2, 0x6778, 0xe050, 0xad22, 0x18c7, 0x53e4, 0x0, 0x1);
        gbc.writeMem(0xe9c2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6778, gbc.sp());
        EXPECT(0xe9c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9c2));
        EXPECT(0x12, gbc.readMem(0xe9c3));
        // CB 12 00F4
        gbc.setState(0x181a, 0x3c26, 0x2a50, 0x84f6, 0xe00, 0x5328, 0x0, 0x1);
        gbc.writeMem(0x181a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3c26, gbc.sp());
        EXPECT(0x181c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00F5
        gbc.setState(0x6110, 0x75f6, 0xc7a0, 0x179c, 0xc31d, 0xacfe, 0x0, 0x1);
        gbc.writeMem(0x6110, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x75f6, gbc.sp());
        EXPECT(0x6112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00F6
        gbc.setState(0xd0ac, 0xfa5b, 0x1440, 0xe24a, 0xa259, 0x5017, 0x1, 0x1);
        gbc.writeMem(0xd0ac, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfa5b, gbc.sp());
        EXPECT(0xd0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ac));
        EXPECT(0x12, gbc.readMem(0xd0ad));
        // CB 12 00F8
        gbc.setState(0x92dc, 0x68d7, 0x2cb0, 0x67c1, 0x179f, 0x15ea, 0x1, 0x0);
        gbc.writeMem(0x92dc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x68d7, gbc.sp());
        EXPECT(0x92de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92dc));
        EXPECT(0x12, gbc.readMem(0x92dd));
        // CB 12 00F9
        gbc.setState(0x2bef, 0x37d5, 0xc860, 0xf9c4, 0x82f9, 0x1989, 0x1, 0x0);
        gbc.writeMem(0x2bef, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x37d5, gbc.sp());
        EXPECT(0x2bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00FA
        gbc.setState(0x810a, 0xdfdc, 0xd720, 0x4b6f, 0x506b, 0x3ee7, 0x1, 0x0);
        gbc.writeMem(0x810a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xdfdc, gbc.sp());
        EXPECT(0x810c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x810a));
        EXPECT(0x12, gbc.readMem(0x810b));
        // CB 12 00FB
        gbc.setState(0x4f0a, 0xe0f, 0xc350, 0xf48f, 0x597c, 0x5885, 0x0, 0x1);
        gbc.writeMem(0x4f0a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe0f, gbc.sp());
        EXPECT(0x4f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00FC
        gbc.setState(0x9d30, 0xa7e1, 0x7a60, 0x3423, 0x5941, 0x57ad, 0x0, 0x0);
        gbc.writeMem(0x9d30, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa7e1, gbc.sp());
        EXPECT(0x9d32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d30));
        EXPECT(0x12, gbc.readMem(0x9d31));
        // CB 12 00FD
        gbc.setState(0x302c, 0x55be, 0xe770, 0xd1c6, 0x3045, 0xbe44, 0x1, 0x1);
        gbc.writeMem(0x302c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x55be, gbc.sp());
        EXPECT(0x302e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 00FE
        gbc.setState(0x69bf, 0x23e4, 0xa0f0, 0x2aa2, 0xc826, 0x57c9, 0x0, 0x1);
        gbc.writeMem(0x69bf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x23e4, gbc.sp());
        EXPECT(0x69c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 00FF
        gbc.setState(0xb89f, 0x5cf9, 0x50f0, 0x7df4, 0xd2a4, 0x79cb, 0x0, 0x1);
        gbc.writeMem(0xb89f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x5cf9, gbc.sp());
        EXPECT(0xb8a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb89f));
        EXPECT(0x12, gbc.readMem(0xb8a0));
        // CB 12 0100
        gbc.setState(0xcb1c, 0xf1c9, 0x9c70, 0xff34, 0x9bca, 0x5cb, 0x0, 0x1);
        gbc.writeMem(0xcb1c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf1c9, gbc.sp());
        EXPECT(0xcb1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb1c));
        EXPECT(0x12, gbc.readMem(0xcb1d));
        // CB 12 0101
        gbc.setState(0xb876, 0x7c14, 0xeba0, 0xb85e, 0x7288, 0xbda1, 0x0, 0x1);
        gbc.writeMem(0xb876, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x7c14, gbc.sp());
        EXPECT(0xb878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb876));
        EXPECT(0x12, gbc.readMem(0xb877));
        // CB 12 0102
        gbc.setState(0xe9f0, 0x2758, 0xaca0, 0x6231, 0x4936, 0xeea7, 0x1, 0x1);
        gbc.writeMem(0xe9f0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2758, gbc.sp());
        EXPECT(0xe9f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9f0));
        EXPECT(0x12, gbc.readMem(0xe9f1));
        // CB 12 0103
        gbc.setState(0x16e, 0x9232, 0xbf20, 0xeb8d, 0x108c, 0x3c28, 0x0, 0x1);
        gbc.writeMem(0x16e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9232, gbc.sp());
        EXPECT(0x170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0104
        gbc.setState(0x2a1b, 0xb752, 0xbcb0, 0x1383, 0x6f69, 0xffd0, 0x0, 0x0);
        gbc.writeMem(0x2a1b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb752, gbc.sp());
        EXPECT(0x2a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0105
        gbc.setState(0x8cc4, 0x1936, 0x8490, 0x9018, 0x77c8, 0x62ac, 0x1, 0x1);
        gbc.writeMem(0x8cc4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x1936, gbc.sp());
        EXPECT(0x8cc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cc4));
        EXPECT(0x12, gbc.readMem(0x8cc5));
        // CB 12 0106
        gbc.setState(0x7483, 0x5195, 0x7210, 0xe940, 0x9ae1, 0xd331, 0x1, 0x1);
        gbc.writeMem(0x7483, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x5195, gbc.sp());
        EXPECT(0x7485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0107
        gbc.setState(0x3881, 0x419f, 0x4560, 0x5935, 0xf2c3, 0x731b, 0x1, 0x0);
        gbc.writeMem(0x3881, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x419f, gbc.sp());
        EXPECT(0x3883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0108
        gbc.setState(0x8d6d, 0xf937, 0xc0c0, 0x6321, 0x47e7, 0xd6c6, 0x1, 0x1);
        gbc.writeMem(0x8d6d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xf937, gbc.sp());
        EXPECT(0x8d6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d6d));
        EXPECT(0x12, gbc.readMem(0x8d6e));
        // CB 12 0109
        gbc.setState(0xe638, 0x26e6, 0x63d0, 0xa602, 0xd44c, 0x6c1d, 0x1, 0x1);
        gbc.writeMem(0xe638, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x26e6, gbc.sp());
        EXPECT(0xe63a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe638));
        EXPECT(0x12, gbc.readMem(0xe639));
        // CB 12 010A
        gbc.setState(0x7c6b, 0x817e, 0xe9b0, 0x51a8, 0x85b6, 0x3a06, 0x1, 0x1);
        gbc.writeMem(0x7c6b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x817e, gbc.sp());
        EXPECT(0x7c6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 010C
        gbc.setState(0x98a5, 0x14c1, 0x8a30, 0x7bd9, 0xc5aa, 0x2ea1, 0x0, 0x0);
        gbc.writeMem(0x98a5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x14c1, gbc.sp());
        EXPECT(0x98a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a5));
        EXPECT(0x12, gbc.readMem(0x98a6));
        // CB 12 010D
        gbc.setState(0xaa95, 0xe186, 0x20a0, 0x2912, 0x6cbf, 0xda9, 0x0, 0x0);
        gbc.writeMem(0xaa95, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe186, gbc.sp());
        EXPECT(0xaa97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa95));
        EXPECT(0x12, gbc.readMem(0xaa96));
        // CB 12 010E
        gbc.setState(0x2265, 0x7fe2, 0x61b0, 0xced, 0x1126, 0xacf, 0x0, 0x1);
        gbc.writeMem(0x2265, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x7fe2, gbc.sp());
        EXPECT(0x2267, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 010F
        gbc.setState(0xaf5e, 0x39bf, 0xffc0, 0xedd6, 0x7d8f, 0x53d6, 0x0, 0x0);
        gbc.writeMem(0xaf5e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x39bf, gbc.sp());
        EXPECT(0xaf60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf5e));
        EXPECT(0x12, gbc.readMem(0xaf5f));
        // CB 12 0110
        gbc.setState(0x5ab0, 0xd7b4, 0xb920, 0x150, 0x58e2, 0x19f9, 0x1, 0x0);
        gbc.writeMem(0x5ab0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd7b4, gbc.sp());
        EXPECT(0x5ab2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0111
        gbc.setState(0x170f, 0x6e22, 0xd030, 0x636f, 0x92d7, 0xa553, 0x1, 0x1);
        gbc.writeMem(0x170f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6e22, gbc.sp());
        EXPECT(0x1711, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0112
        gbc.setState(0x72b9, 0x92ed, 0xc80, 0xa200, 0x172d, 0xf9f2, 0x1, 0x1);
        gbc.writeMem(0x72b9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x92ed, gbc.sp());
        EXPECT(0x72bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0113
        gbc.setState(0xc668, 0xffe1, 0x6340, 0x347d, 0xd48, 0xfd56, 0x1, 0x0);
        gbc.writeMem(0xc668, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xffe1, gbc.sp());
        EXPECT(0xc66a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc668));
        EXPECT(0x12, gbc.readMem(0xc669));
        // CB 12 0114
        gbc.setState(0x70aa, 0x7bdf, 0xba10, 0x2ffb, 0x5616, 0x21bf, 0x1, 0x1);
        gbc.writeMem(0x70aa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x7bdf, gbc.sp());
        EXPECT(0x70ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0115
        gbc.setState(0x824c, 0x343b, 0x25f0, 0x987b, 0x7768, 0x3e69, 0x1, 0x0);
        gbc.writeMem(0x824c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x343b, gbc.sp());
        EXPECT(0x824e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x824c));
        EXPECT(0x12, gbc.readMem(0x824d));
        // CB 12 0116
        gbc.setState(0x86a4, 0x9f2e, 0x56f0, 0x23f3, 0x714, 0x3b9c, 0x1, 0x0);
        gbc.writeMem(0x86a4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9f2e, gbc.sp());
        EXPECT(0x86a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86a4));
        EXPECT(0x12, gbc.readMem(0x86a5));
        // CB 12 0117
        gbc.setState(0xef0c, 0x8e8b, 0x1f0, 0x4192, 0xeac1, 0xbb7c, 0x0, 0x1);
        gbc.writeMem(0xef0c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x8e8b, gbc.sp());
        EXPECT(0xef0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef0c));
        EXPECT(0x12, gbc.readMem(0xef0d));
        // CB 12 0118
        gbc.setState(0xa477, 0x2ae, 0xbd30, 0x7e0b, 0x7867, 0x1600, 0x1, 0x0);
        gbc.writeMem(0xa477, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2ae, gbc.sp());
        EXPECT(0xa479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa477));
        EXPECT(0x12, gbc.readMem(0xa478));
        // CB 12 0119
        gbc.setState(0xb02d, 0x2f46, 0xee20, 0x529b, 0xf625, 0xedcf, 0x0, 0x0);
        gbc.writeMem(0xb02d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x2f46, gbc.sp());
        EXPECT(0xb02f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb02d));
        EXPECT(0x12, gbc.readMem(0xb02e));
        // CB 12 011A
        gbc.setState(0x527e, 0xf3c9, 0x2d70, 0xb8c9, 0xdaba, 0x13fd, 0x0, 0x0);
        gbc.writeMem(0x527e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf3c9, gbc.sp());
        EXPECT(0x5280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 011B
        gbc.setState(0x3d37, 0xed1e, 0x9330, 0xff62, 0x94da, 0xd4c7, 0x0, 0x0);
        gbc.writeMem(0x3d37, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xed1e, gbc.sp());
        EXPECT(0x3d39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 011C
        gbc.setState(0x8a3, 0x21e7, 0xb3a0, 0xcdf1, 0x98ee, 0xbfc4, 0x1, 0x1);
        gbc.writeMem(0x8a3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x21e7, gbc.sp());
        EXPECT(0x8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 011D
        gbc.setState(0x677b, 0x38c2, 0x4cd0, 0x2a8a, 0x335f, 0xc2da, 0x0, 0x0);
        gbc.writeMem(0x677b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x38c2, gbc.sp());
        EXPECT(0x677d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 011E
        gbc.setState(0x5f61, 0x4fd4, 0xb620, 0x1e2f, 0x8967, 0x2c36, 0x0, 0x1);
        gbc.writeMem(0x5f61, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x4fd4, gbc.sp());
        EXPECT(0x5f63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 011F
        gbc.setState(0x72e0, 0xef5f, 0xe340, 0xe9bb, 0x2fa3, 0x55a0, 0x0, 0x0);
        gbc.writeMem(0x72e0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xef5f, gbc.sp());
        EXPECT(0x72e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0120
        gbc.setState(0x9a52, 0x40b4, 0x3eb0, 0xb9bb, 0xd235, 0x917, 0x1, 0x1);
        gbc.writeMem(0x9a52, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x40b4, gbc.sp());
        EXPECT(0x9a54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a52));
        EXPECT(0x12, gbc.readMem(0x9a53));
        // CB 12 0121
        gbc.setState(0x45eb, 0x3128, 0x930, 0x51d4, 0x712d, 0xbfd3, 0x1, 0x1);
        gbc.writeMem(0x45eb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x3128, gbc.sp());
        EXPECT(0x45ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0122
        gbc.setState(0x66cc, 0xe777, 0xbc70, 0xccec, 0x6913, 0xc576, 0x1, 0x0);
        gbc.writeMem(0x66cc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe777, gbc.sp());
        EXPECT(0x66ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0123
        gbc.setState(0x9a43, 0xdef9, 0x2b10, 0xb1c4, 0xe1c, 0xb98, 0x1, 0x0);
        gbc.writeMem(0x9a43, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xdef9, gbc.sp());
        EXPECT(0x9a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a43));
        EXPECT(0x12, gbc.readMem(0x9a44));
        // CB 12 0124
        gbc.setState(0x8210, 0xfd90, 0xdb90, 0x25de, 0x2db, 0x14eb, 0x0, 0x0);
        gbc.writeMem(0x8210, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xfd90, gbc.sp());
        EXPECT(0x8212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8210));
        EXPECT(0x12, gbc.readMem(0x8211));
        // CB 12 0125
        gbc.setState(0x951d, 0x9038, 0xf9e0, 0xe4f6, 0x3eb0, 0x4e35, 0x0, 0x1);
        gbc.writeMem(0x951d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9038, gbc.sp());
        EXPECT(0x951f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x951d));
        EXPECT(0x12, gbc.readMem(0x951e));
        // CB 12 0126
        gbc.setState(0x7676, 0x3666, 0x72f0, 0x6a34, 0x999a, 0x1517, 0x1, 0x1);
        gbc.writeMem(0x7676, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3666, gbc.sp());
        EXPECT(0x7678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0127
        gbc.setState(0x272, 0xbb7e, 0xd8c0, 0x6d22, 0xd942, 0x8c2d, 0x0, 0x1);
        gbc.writeMem(0x272, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xbb7e, gbc.sp());
        EXPECT(0x274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0128
        gbc.setState(0x57d7, 0x6fe3, 0xc020, 0xc2a5, 0x2885, 0x3c05, 0x1, 0x1);
        gbc.writeMem(0x57d7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6fe3, gbc.sp());
        EXPECT(0x57d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0129
        gbc.setState(0xcd37, 0x753c, 0x9af0, 0x8024, 0xbfd8, 0x3d6d, 0x1, 0x0);
        gbc.writeMem(0xcd37, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x753c, gbc.sp());
        EXPECT(0xcd39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd37));
        EXPECT(0x12, gbc.readMem(0xcd38));
        // CB 12 012A
        gbc.setState(0x2a66, 0x27e4, 0xc0f0, 0xdc9b, 0x5406, 0x6ee6, 0x0, 0x0);
        gbc.writeMem(0x2a66, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x27e4, gbc.sp());
        EXPECT(0x2a68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 012D
        gbc.setState(0xb7ce, 0x7731, 0x1a60, 0x3cea, 0xfeb6, 0x99f7, 0x0, 0x1);
        gbc.writeMem(0xb7ce, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7731, gbc.sp());
        EXPECT(0xb7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7ce));
        EXPECT(0x12, gbc.readMem(0xb7cf));
        // CB 12 012E
        gbc.setState(0x2e16, 0xb1d3, 0x3fe0, 0xc3d7, 0x3aa, 0xe43a, 0x1, 0x0);
        gbc.writeMem(0x2e16, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb1d3, gbc.sp());
        EXPECT(0x2e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 012F
        gbc.setState(0xd70f, 0xd0c3, 0x9c50, 0x9bda, 0x9347, 0x4ca2, 0x0, 0x1);
        gbc.writeMem(0xd70f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd0c3, gbc.sp());
        EXPECT(0xd711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd70f));
        EXPECT(0x12, gbc.readMem(0xd710));
        // CB 12 0130
        gbc.setState(0x1c2b, 0xbc6c, 0x30f0, 0xac4b, 0x3da7, 0xf6c0, 0x0, 0x1);
        gbc.writeMem(0x1c2b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbc6c, gbc.sp());
        EXPECT(0x1c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0131
        gbc.setState(0x683, 0x825a, 0x98c0, 0xbf73, 0x112a, 0x979a, 0x0, 0x1);
        gbc.writeMem(0x683, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x825a, gbc.sp());
        EXPECT(0x685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0132
        gbc.setState(0x93da, 0x53c4, 0x8610, 0xbe79, 0xb032, 0x549, 0x0, 0x1);
        gbc.writeMem(0x93da, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x53c4, gbc.sp());
        EXPECT(0x93dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93da));
        EXPECT(0x12, gbc.readMem(0x93db));
        // CB 12 0133
        gbc.setState(0xed9b, 0xb3e3, 0x54c0, 0x2e48, 0x971f, 0x4dc, 0x0, 0x0);
        gbc.writeMem(0xed9b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb3e3, gbc.sp());
        EXPECT(0xed9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed9b));
        EXPECT(0x12, gbc.readMem(0xed9c));
        // CB 12 0134
        gbc.setState(0xe481, 0x9f24, 0x7ba0, 0xc847, 0x3384, 0xd37c, 0x1, 0x1);
        gbc.writeMem(0xe481, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x9f24, gbc.sp());
        EXPECT(0xe483, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe481));
        EXPECT(0x12, gbc.readMem(0xe482));
        // CB 12 0135
        gbc.setState(0x7b37, 0xe6bf, 0x8340, 0xc82c, 0x2943, 0x5973, 0x1, 0x1);
        gbc.writeMem(0x7b37, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe6bf, gbc.sp());
        EXPECT(0x7b39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0136
        gbc.setState(0x160e, 0x1a5, 0xbc90, 0x2418, 0x9eba, 0x609a, 0x1, 0x1);
        gbc.writeMem(0x160e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1a5, gbc.sp());
        EXPECT(0x1610, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0137
        gbc.setState(0x3f04, 0x724, 0xd690, 0xfa65, 0x8803, 0x4fa, 0x1, 0x1);
        gbc.writeMem(0x3f04, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x724, gbc.sp());
        EXPECT(0x3f06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0138
        gbc.setState(0x6eeb, 0x6045, 0x4060, 0x2bb2, 0x632a, 0x2912, 0x0, 0x0);
        gbc.writeMem(0x6eeb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6045, gbc.sp());
        EXPECT(0x6eed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0139
        gbc.setState(0xab3e, 0x73d2, 0x8270, 0xbc26, 0x4a6d, 0xc72b, 0x1, 0x0);
        gbc.writeMem(0xab3e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x73d2, gbc.sp());
        EXPECT(0xab40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab3e));
        EXPECT(0x12, gbc.readMem(0xab3f));
        // CB 12 013A
        gbc.setState(0x9b93, 0xab9b, 0xb2c0, 0xf002, 0x3cb4, 0x6468, 0x1, 0x0);
        gbc.writeMem(0x9b93, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xab9b, gbc.sp());
        EXPECT(0x9b95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b93));
        EXPECT(0x12, gbc.readMem(0x9b94));
        // CB 12 013B
        gbc.setState(0x977f, 0x49b3, 0xcbc0, 0xb096, 0xd89d, 0x5a3, 0x1, 0x1);
        gbc.writeMem(0x977f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x49b3, gbc.sp());
        EXPECT(0x9781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x977f));
        EXPECT(0x12, gbc.readMem(0x9780));
        // CB 12 013C
        gbc.setState(0x5537, 0x14de, 0x87f0, 0x730, 0xf489, 0x6e10, 0x1, 0x0);
        gbc.writeMem(0x5537, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x14de, gbc.sp());
        EXPECT(0x5539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 013D
        gbc.setState(0x1400, 0xb721, 0x3250, 0x2b5, 0xec3d, 0xba95, 0x1, 0x0);
        gbc.writeMem(0x1400, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb721, gbc.sp());
        EXPECT(0x1402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 013E
        gbc.setState(0x5a7a, 0x74aa, 0x7240, 0xbf7e, 0xa2ae, 0xeff5, 0x1, 0x0);
        gbc.writeMem(0x5a7a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x74aa, gbc.sp());
        EXPECT(0x5a7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 013F
        gbc.setState(0x76a5, 0xc294, 0x1eb0, 0xc37e, 0xc096, 0xffd9, 0x0, 0x0);
        gbc.writeMem(0x76a5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xc294, gbc.sp());
        EXPECT(0x76a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0140
        gbc.setState(0xd402, 0x4ba3, 0x3740, 0x6113, 0x1597, 0xf546, 0x1, 0x1);
        gbc.writeMem(0xd402, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4ba3, gbc.sp());
        EXPECT(0xd404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd402));
        EXPECT(0x12, gbc.readMem(0xd403));
        // CB 12 0141
        gbc.setState(0x12ba, 0x8bc6, 0x91b0, 0xff9a, 0xa7cd, 0x27d8, 0x1, 0x0);
        gbc.writeMem(0x12ba, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8bc6, gbc.sp());
        EXPECT(0x12bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0142
        gbc.setState(0x3201, 0x669f, 0x6c90, 0xe07a, 0x807b, 0x1cd2, 0x0, 0x0);
        gbc.writeMem(0x3201, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x669f, gbc.sp());
        EXPECT(0x3203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0143
        gbc.setState(0xe8e8, 0x6c8a, 0x7ef0, 0xfbe5, 0x188d, 0xd7c9, 0x1, 0x1);
        gbc.writeMem(0xe8e8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6c8a, gbc.sp());
        EXPECT(0xe8ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8e8));
        EXPECT(0x12, gbc.readMem(0xe8e9));
        // CB 12 0144
        gbc.setState(0x720b, 0xa6bf, 0xd430, 0x692c, 0x5efe, 0x5a85, 0x1, 0x1);
        gbc.writeMem(0x720b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa6bf, gbc.sp());
        EXPECT(0x720d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0145
        gbc.setState(0xa743, 0x66a0, 0xc150, 0x6dcd, 0xfc7d, 0x6fed, 0x1, 0x0);
        gbc.writeMem(0xa743, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x66a0, gbc.sp());
        EXPECT(0xa745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa743));
        EXPECT(0x12, gbc.readMem(0xa744));
        // CB 12 0146
        gbc.setState(0x7541, 0x84b0, 0xc2b0, 0xee25, 0x1800, 0xb31c, 0x1, 0x1);
        gbc.writeMem(0x7541, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x84b0, gbc.sp());
        EXPECT(0x7543, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0147
        gbc.setState(0xebc2, 0x5cdb, 0x2380, 0x6297, 0x4781, 0x7724, 0x1, 0x1);
        gbc.writeMem(0xebc2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5cdb, gbc.sp());
        EXPECT(0xebc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebc2));
        EXPECT(0x12, gbc.readMem(0xebc3));
        // CB 12 0148
        gbc.setState(0x9432, 0xcf66, 0x9a00, 0xeb4b, 0x5e57, 0x681e, 0x1, 0x0);
        gbc.writeMem(0x9432, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xcf66, gbc.sp());
        EXPECT(0x9434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9432));
        EXPECT(0x12, gbc.readMem(0x9433));
        // CB 12 0149
        gbc.setState(0x8b8, 0xcff4, 0x2740, 0xf617, 0xdbaa, 0x12f2, 0x0, 0x1);
        gbc.writeMem(0x8b8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xcff4, gbc.sp());
        EXPECT(0x8ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 014A
        gbc.setState(0x49ee, 0xddc4, 0xf790, 0xb846, 0xc495, 0x6dd8, 0x1, 0x1);
        gbc.writeMem(0x49ee, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xddc4, gbc.sp());
        EXPECT(0x49f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 014C
        gbc.setState(0xc205, 0xcdeb, 0xf110, 0xffe0, 0xb557, 0xa4ed, 0x1, 0x0);
        gbc.writeMem(0xc205, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xcdeb, gbc.sp());
        EXPECT(0xc207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc205));
        EXPECT(0x12, gbc.readMem(0xc206));
        // CB 12 014D
        gbc.setState(0x6fcb, 0xb706, 0x3ff0, 0x4be8, 0x2106, 0x4aab, 0x0, 0x0);
        gbc.writeMem(0x6fcb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb706, gbc.sp());
        EXPECT(0x6fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 014E
        gbc.setState(0xa8e2, 0x823f, 0x9910, 0x2583, 0x81e0, 0x8748, 0x0, 0x0);
        gbc.writeMem(0xa8e2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x823f, gbc.sp());
        EXPECT(0xa8e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8e2));
        EXPECT(0x12, gbc.readMem(0xa8e3));
        // CB 12 014F
        gbc.setState(0x7163, 0xc584, 0x2f20, 0x8b0e, 0x7cdc, 0x67f0, 0x1, 0x0);
        gbc.writeMem(0x7163, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc584, gbc.sp());
        EXPECT(0x7165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0150
        gbc.setState(0xc8f4, 0xb598, 0x9920, 0x4769, 0x5d67, 0x3f97, 0x0, 0x1);
        gbc.writeMem(0xc8f4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xb598, gbc.sp());
        EXPECT(0xc8f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8f4));
        EXPECT(0x12, gbc.readMem(0xc8f5));
        // CB 12 0151
        gbc.setState(0xba7f, 0x3eff, 0x2600, 0x6d, 0xb164, 0x3c35, 0x1, 0x0);
        gbc.writeMem(0xba7f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3eff, gbc.sp());
        EXPECT(0xba81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba7f));
        EXPECT(0x12, gbc.readMem(0xba80));
        // CB 12 0152
        gbc.setState(0x88bf, 0x92c3, 0x49f0, 0x3860, 0x58a4, 0x2a42, 0x1, 0x1);
        gbc.writeMem(0x88bf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x92c3, gbc.sp());
        EXPECT(0x88c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88bf));
        EXPECT(0x12, gbc.readMem(0x88c0));
        // CB 12 0153
        gbc.setState(0xc4af, 0x7724, 0x8800, 0x9e4c, 0x8299, 0x8e97, 0x0, 0x1);
        gbc.writeMem(0xc4af, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x7724, gbc.sp());
        EXPECT(0xc4b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4af));
        EXPECT(0x12, gbc.readMem(0xc4b0));
        // CB 12 0154
        gbc.setState(0x6ccf, 0x465c, 0x1f20, 0xbdf7, 0x25e8, 0xdb3, 0x0, 0x0);
        gbc.writeMem(0x6ccf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x465c, gbc.sp());
        EXPECT(0x6cd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0156
        gbc.setState(0xd872, 0xece2, 0x2140, 0xae0c, 0x8d3, 0x5ab4, 0x0, 0x0);
        gbc.writeMem(0xd872, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xece2, gbc.sp());
        EXPECT(0xd874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd872));
        EXPECT(0x12, gbc.readMem(0xd873));
        // CB 12 0157
        gbc.setState(0x5d61, 0x66de, 0xfdf0, 0x9cfd, 0xabe6, 0xd4f9, 0x0, 0x1);
        gbc.writeMem(0x5d61, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x66de, gbc.sp());
        EXPECT(0x5d63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0158
        gbc.setState(0x6dc, 0xf42b, 0x30f0, 0x88fb, 0xf6b6, 0xf9d4, 0x0, 0x0);
        gbc.writeMem(0x6dc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf42b, gbc.sp());
        EXPECT(0x6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0159
        gbc.setState(0x4bf9, 0xb8ce, 0xfa00, 0xadcf, 0x5703, 0xc503, 0x1, 0x0);
        gbc.writeMem(0x4bf9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb8ce, gbc.sp());
        EXPECT(0x4bfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 015A
        gbc.setState(0x7ff, 0x61e, 0x1460, 0xd756, 0xd480, 0xb8d0, 0x1, 0x1);
        gbc.writeMem(0x7ff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x61e, gbc.sp());
        EXPECT(0x801, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 015B
        gbc.setState(0x193c, 0x1596, 0x1f30, 0x5676, 0xd6bb, 0xbeb0, 0x0, 0x0);
        gbc.writeMem(0x193c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x1596, gbc.sp());
        EXPECT(0x193e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 015C
        gbc.setState(0x5976, 0x6134, 0xc740, 0x2c9f, 0x31f6, 0xe5d7, 0x0, 0x0);
        gbc.writeMem(0x5976, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x6134, gbc.sp());
        EXPECT(0x5978, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 015D
        gbc.setState(0x1620, 0x67db, 0xe850, 0x1052, 0x6493, 0x287, 0x1, 0x1);
        gbc.writeMem(0x1620, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x67db, gbc.sp());
        EXPECT(0x1622, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 015E
        gbc.setState(0x692, 0x3837, 0xc450, 0x545f, 0xb3ed, 0x88d0, 0x0, 0x0);
        gbc.writeMem(0x692, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x3837, gbc.sp());
        EXPECT(0x694, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 015F
        gbc.setState(0x19be, 0x52c8, 0xb4a0, 0x3b65, 0xbb, 0x849, 0x0, 0x1);
        gbc.writeMem(0x19be, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x52c8, gbc.sp());
        EXPECT(0x19c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0160
        gbc.setState(0xb408, 0x6602, 0x3700, 0x70fb, 0xb27b, 0x3ec9, 0x1, 0x0);
        gbc.writeMem(0xb408, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6602, gbc.sp());
        EXPECT(0xb40a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb408));
        EXPECT(0x12, gbc.readMem(0xb409));
        // CB 12 0161
        gbc.setState(0x348, 0xb81c, 0x50d0, 0x9e00, 0x65b3, 0x5d98, 0x0, 0x1);
        gbc.writeMem(0x348, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb81c, gbc.sp());
        EXPECT(0x34a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0162
        gbc.setState(0x5074, 0x2e2e, 0x3e00, 0x6fbf, 0x9d80, 0x73d3, 0x0, 0x1);
        gbc.writeMem(0x5074, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x2e2e, gbc.sp());
        EXPECT(0x5076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0163
        gbc.setState(0xd631, 0xe5c3, 0xcbf0, 0x358b, 0x15fc, 0x69fb, 0x0, 0x0);
        gbc.writeMem(0xd631, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe5c3, gbc.sp());
        EXPECT(0xd633, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd631));
        EXPECT(0x12, gbc.readMem(0xd632));
        // CB 12 0164
        gbc.setState(0x86df, 0x41c7, 0xbab0, 0x785e, 0x8476, 0x534e, 0x1, 0x0);
        gbc.writeMem(0x86df, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x41c7, gbc.sp());
        EXPECT(0x86e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86df));
        EXPECT(0x12, gbc.readMem(0x86e0));
        // CB 12 0165
        gbc.setState(0x905a, 0x270e, 0xb2c0, 0x7684, 0xd5e7, 0x2ee6, 0x0, 0x1);
        gbc.writeMem(0x905a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x270e, gbc.sp());
        EXPECT(0x905c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x905a));
        EXPECT(0x12, gbc.readMem(0x905b));
        // CB 12 0167
        gbc.setState(0xd7cd, 0xcaf, 0x9660, 0xad47, 0x18f0, 0x5787, 0x0, 0x1);
        gbc.writeMem(0xd7cd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xcaf, gbc.sp());
        EXPECT(0xd7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7cd));
        EXPECT(0x12, gbc.readMem(0xd7ce));
        // CB 12 0168
        gbc.setState(0x6b73, 0xd5a9, 0x78b0, 0xf83f, 0xeee3, 0x3789, 0x0, 0x0);
        gbc.writeMem(0x6b73, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd5a9, gbc.sp());
        EXPECT(0x6b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0169
        gbc.setState(0x31ca, 0x46d3, 0x7150, 0x35fe, 0xebe9, 0x3f5d, 0x1, 0x0);
        gbc.writeMem(0x31ca, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x46d3, gbc.sp());
        EXPECT(0x31cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 016A
        gbc.setState(0xc74d, 0xfaf5, 0x4e30, 0x5758, 0x4bc7, 0x2a7a, 0x0, 0x0);
        gbc.writeMem(0xc74d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfaf5, gbc.sp());
        EXPECT(0xc74f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc74d));
        EXPECT(0x12, gbc.readMem(0xc74e));
        // CB 12 016B
        gbc.setState(0x5a56, 0xc2f3, 0x1e80, 0x221e, 0xfb8d, 0x8bac, 0x0, 0x0);
        gbc.writeMem(0x5a56, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc2f3, gbc.sp());
        EXPECT(0x5a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 016C
        gbc.setState(0xd304, 0x7dac, 0xa0c0, 0x4f90, 0x6d92, 0x9d95, 0x1, 0x1);
        gbc.writeMem(0xd304, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x7dac, gbc.sp());
        EXPECT(0xd306, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd304));
        EXPECT(0x12, gbc.readMem(0xd305));
        // CB 12 016D
        gbc.setState(0x569e, 0x3295, 0x2be0, 0x9461, 0xada7, 0x783c, 0x0, 0x0);
        gbc.writeMem(0x569e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x3295, gbc.sp());
        EXPECT(0x56a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 016E
        gbc.setState(0xe7dd, 0x49b, 0x280, 0xa77c, 0xe2ae, 0xcd0f, 0x1, 0x0);
        gbc.writeMem(0xe7dd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x49b, gbc.sp());
        EXPECT(0xe7df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7dd));
        EXPECT(0x12, gbc.readMem(0xe7de));
        // CB 12 016F
        gbc.setState(0xe93, 0x2608, 0x7530, 0x7201, 0x8794, 0x8a3a, 0x1, 0x1);
        gbc.writeMem(0xe93, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2608, gbc.sp());
        EXPECT(0xe95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0170
        gbc.setState(0x601e, 0x2eba, 0xa430, 0x3d97, 0x6d55, 0x8ccb, 0x0, 0x0);
        gbc.writeMem(0x601e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x2eba, gbc.sp());
        EXPECT(0x6020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0171
        gbc.setState(0x246d, 0x9939, 0xc690, 0x409d, 0x76fe, 0x5f14, 0x0, 0x0);
        gbc.writeMem(0x246d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9939, gbc.sp());
        EXPECT(0x246f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0172
        gbc.setState(0x66a7, 0x4268, 0xb80, 0xdc2e, 0x4a8c, 0x8b99, 0x1, 0x0);
        gbc.writeMem(0x66a7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4268, gbc.sp());
        EXPECT(0x66a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0173
        gbc.setState(0xe4d2, 0x2a0, 0x1d70, 0x6087, 0x6bb0, 0xdd7e, 0x0, 0x0);
        gbc.writeMem(0xe4d2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2a0, gbc.sp());
        EXPECT(0xe4d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d2));
        EXPECT(0x12, gbc.readMem(0xe4d3));
        // CB 12 0174
        gbc.setState(0x68ad, 0xeacf, 0x7ad0, 0xe79e, 0xca3e, 0xbd2c, 0x0, 0x0);
        gbc.writeMem(0x68ad, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xeacf, gbc.sp());
        EXPECT(0x68af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0175
        gbc.setState(0x4a75, 0xb7e0, 0xd570, 0x240e, 0x5a25, 0x2400, 0x1, 0x1);
        gbc.writeMem(0x4a75, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb7e0, gbc.sp());
        EXPECT(0x4a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0176
        gbc.setState(0x367d, 0x6d7c, 0x7bb0, 0x7859, 0xb16e, 0xe9b0, 0x0, 0x1);
        gbc.writeMem(0x367d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6d7c, gbc.sp());
        EXPECT(0x367f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0177
        gbc.setState(0xc4bd, 0x6131, 0x4f60, 0x3243, 0x95ee, 0x72bd, 0x0, 0x1);
        gbc.writeMem(0xc4bd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6131, gbc.sp());
        EXPECT(0xc4bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4bd));
        EXPECT(0x12, gbc.readMem(0xc4be));
        // CB 12 0179
        gbc.setState(0x71eb, 0x9b45, 0xfe80, 0xf3cf, 0x6aaf, 0x2998, 0x0, 0x1);
        gbc.writeMem(0x71eb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x9b45, gbc.sp());
        EXPECT(0x71ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 017A
        gbc.setState(0x951, 0x9871, 0xe4f0, 0x5c4b, 0x28c5, 0x13ed, 0x1, 0x1);
        gbc.writeMem(0x951, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9871, gbc.sp());
        EXPECT(0x953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 017B
        gbc.setState(0x90a0, 0xb5d8, 0x4c40, 0x6f2f, 0x8ed0, 0x9f65, 0x0, 0x1);
        gbc.writeMem(0x90a0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb5d8, gbc.sp());
        EXPECT(0x90a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90a0));
        EXPECT(0x12, gbc.readMem(0x90a1));
        // CB 12 017C
        gbc.setState(0x42ff, 0xd72c, 0x6d60, 0xc771, 0xe4a9, 0x1cd0, 0x1, 0x1);
        gbc.writeMem(0x42ff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd72c, gbc.sp());
        EXPECT(0x4301, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 017D
        gbc.setState(0x2aa5, 0xa657, 0xcd50, 0xefb5, 0xa4cb, 0x172a, 0x1, 0x0);
        gbc.writeMem(0x2aa5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa657, gbc.sp());
        EXPECT(0x2aa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 017E
        gbc.setState(0x9e6c, 0xed9b, 0xe560, 0x7ccf, 0x2208, 0x4343, 0x1, 0x1);
        gbc.writeMem(0x9e6c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xed9b, gbc.sp());
        EXPECT(0x9e6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6c));
        EXPECT(0x12, gbc.readMem(0x9e6d));
        // CB 12 017F
        gbc.setState(0xe966, 0x1d06, 0xf260, 0xee40, 0x9255, 0x789d, 0x0, 0x1);
        gbc.writeMem(0xe966, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1d06, gbc.sp());
        EXPECT(0xe968, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe966));
        EXPECT(0x12, gbc.readMem(0xe967));
        // CB 12 0180
        gbc.setState(0xd009, 0x4cac, 0x7cb0, 0xc893, 0x831c, 0xc835, 0x1, 0x1);
        gbc.writeMem(0xd009, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4cac, gbc.sp());
        EXPECT(0xd00b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd009));
        EXPECT(0x12, gbc.readMem(0xd00a));
        // CB 12 0181
        gbc.setState(0x79b5, 0xdc08, 0x62a0, 0xadbc, 0xcdd9, 0xd49a, 0x1, 0x1);
        gbc.writeMem(0x79b5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xdc08, gbc.sp());
        EXPECT(0x79b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0182
        gbc.setState(0xcb68, 0xf839, 0x58b0, 0xcb76, 0x7fe9, 0x5e71, 0x1, 0x1);
        gbc.writeMem(0xcb68, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xf839, gbc.sp());
        EXPECT(0xcb6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb68));
        EXPECT(0x12, gbc.readMem(0xcb69));
        // CB 12 0183
        gbc.setState(0xe9cb, 0xf18d, 0x6dd0, 0x7230, 0x7d77, 0xb1fc, 0x0, 0x1);
        gbc.writeMem(0xe9cb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf18d, gbc.sp());
        EXPECT(0xe9cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9cb));
        EXPECT(0x12, gbc.readMem(0xe9cc));
        // CB 12 0184
        gbc.setState(0x9e77, 0x2ffe, 0x7550, 0xf421, 0x515b, 0xcc7f, 0x1, 0x1);
        gbc.writeMem(0x9e77, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2ffe, gbc.sp());
        EXPECT(0x9e79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e77));
        EXPECT(0x12, gbc.readMem(0x9e78));
        // CB 12 0185
        gbc.setState(0x9715, 0xf118, 0x7700, 0x92f7, 0x5738, 0x209c, 0x1, 0x0);
        gbc.writeMem(0x9715, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf118, gbc.sp());
        EXPECT(0x9717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9715));
        EXPECT(0x12, gbc.readMem(0x9716));
        // CB 12 0186
        gbc.setState(0x7282, 0x6e79, 0xf130, 0x7a93, 0xb631, 0x18dc, 0x1, 0x0);
        gbc.writeMem(0x7282, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6e79, gbc.sp());
        EXPECT(0x7284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0187
        gbc.setState(0x8c23, 0xb047, 0xce90, 0x15df, 0xc45c, 0xd78a, 0x0, 0x0);
        gbc.writeMem(0x8c23, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xb047, gbc.sp());
        EXPECT(0x8c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c23));
        EXPECT(0x12, gbc.readMem(0x8c24));
        // CB 12 0188
        gbc.setState(0xc84a, 0xfa7b, 0x4eb0, 0xa028, 0xb6b, 0xc94a, 0x1, 0x0);
        gbc.writeMem(0xc84a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xfa7b, gbc.sp());
        EXPECT(0xc84c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84a));
        EXPECT(0x12, gbc.readMem(0xc84b));
        // CB 12 0189
        gbc.setState(0x118b, 0x89b1, 0x34e0, 0x370c, 0x47bb, 0x9b71, 0x1, 0x1);
        gbc.writeMem(0x118b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x89b1, gbc.sp());
        EXPECT(0x118d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 018A
        gbc.setState(0x7b0, 0x5834, 0xe550, 0xd522, 0x1592, 0x6dd4, 0x1, 0x0);
        gbc.writeMem(0x7b0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x5834, gbc.sp());
        EXPECT(0x7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 018B
        gbc.setState(0xb655, 0x554a, 0x6ef0, 0xea72, 0xb9db, 0x6e92, 0x0, 0x1);
        gbc.writeMem(0xb655, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x554a, gbc.sp());
        EXPECT(0xb657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb655));
        EXPECT(0x12, gbc.readMem(0xb656));
        // CB 12 018C
        gbc.setState(0xd8f7, 0x3d7d, 0xa020, 0xed6c, 0x6e24, 0xe621, 0x1, 0x0);
        gbc.writeMem(0xd8f7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3d7d, gbc.sp());
        EXPECT(0xd8f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8f7));
        EXPECT(0x12, gbc.readMem(0xd8f8));
        // CB 12 018D
        gbc.setState(0xb9d6, 0xa88c, 0x98f0, 0x3f66, 0xa0e6, 0xfbd0, 0x0, 0x0);
        gbc.writeMem(0xb9d6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xa88c, gbc.sp());
        EXPECT(0xb9d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d6));
        EXPECT(0x12, gbc.readMem(0xb9d7));
        // CB 12 018E
        gbc.setState(0xdc00, 0x4920, 0x5790, 0xf92a, 0x3dee, 0x7276, 0x1, 0x0);
        gbc.writeMem(0xdc00, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4920, gbc.sp());
        EXPECT(0xdc02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc00));
        EXPECT(0x12, gbc.readMem(0xdc01));
        // CB 12 018F
        gbc.setState(0xe33a, 0x655b, 0x51a0, 0xc8c2, 0x8d27, 0xb614, 0x0, 0x1);
        gbc.writeMem(0xe33a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x655b, gbc.sp());
        EXPECT(0xe33c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe33a));
        EXPECT(0x12, gbc.readMem(0xe33b));
        // CB 12 0190
        gbc.setState(0xd808, 0xb52c, 0x4060, 0x331a, 0x7d7a, 0x4bc1, 0x1, 0x1);
        gbc.writeMem(0xd808, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb52c, gbc.sp());
        EXPECT(0xd80a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd808));
        EXPECT(0x12, gbc.readMem(0xd809));
        // CB 12 0191
        gbc.setState(0x53bc, 0x609d, 0x7e40, 0xfaef, 0x3b9f, 0xa4de, 0x1, 0x1);
        gbc.writeMem(0x53bc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x609d, gbc.sp());
        EXPECT(0x53be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0192
        gbc.setState(0x9981, 0xfa6e, 0xb6b0, 0x7eb3, 0x8e9b, 0xc99e, 0x0, 0x0);
        gbc.writeMem(0x9981, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xfa6e, gbc.sp());
        EXPECT(0x9983, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9981));
        EXPECT(0x12, gbc.readMem(0x9982));
        // CB 12 0193
        gbc.setState(0x8498, 0xe9b6, 0x6fc0, 0xf3e9, 0x2aa, 0x705f, 0x1, 0x0);
        gbc.writeMem(0x8498, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xe9b6, gbc.sp());
        EXPECT(0x849a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8498));
        EXPECT(0x12, gbc.readMem(0x8499));
        // CB 12 0194
        gbc.setState(0x665e, 0x72e1, 0x5360, 0xdb62, 0x5d23, 0xeb8a, 0x0, 0x0);
        gbc.writeMem(0x665e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x72e1, gbc.sp());
        EXPECT(0x6660, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0195
        gbc.setState(0x1560, 0x9563, 0x510, 0xf3f7, 0xf35c, 0x1a56, 0x0, 0x0);
        gbc.writeMem(0x1560, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x9563, gbc.sp());
        EXPECT(0x1562, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0196
        gbc.setState(0xaf08, 0x9ed5, 0x7cf0, 0x5e0b, 0x55f8, 0xccfe, 0x0, 0x0);
        gbc.writeMem(0xaf08, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9ed5, gbc.sp());
        EXPECT(0xaf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf08));
        EXPECT(0x12, gbc.readMem(0xaf09));
        // CB 12 0197
        gbc.setState(0x483a, 0x6c0, 0x8150, 0xb3b1, 0xcd3a, 0x6e50, 0x0, 0x1);
        gbc.writeMem(0x483a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6c0, gbc.sp());
        EXPECT(0x483c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0198
        gbc.setState(0xb0b9, 0x202b, 0x4680, 0xd81a, 0x8e36, 0x39de, 0x1, 0x0);
        gbc.writeMem(0xb0b9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x202b, gbc.sp());
        EXPECT(0xb0bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b9));
        EXPECT(0x12, gbc.readMem(0xb0ba));
        // CB 12 0199
        gbc.setState(0x3f72, 0x1ef7, 0x4900, 0x7890, 0x9431, 0x5d4d, 0x1, 0x1);
        gbc.writeMem(0x3f72, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x1ef7, gbc.sp());
        EXPECT(0x3f74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 019A
        gbc.setState(0x7b56, 0x54fc, 0xe690, 0x7592, 0xf75d, 0x56cd, 0x0, 0x1);
        gbc.writeMem(0x7b56, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x54fc, gbc.sp());
        EXPECT(0x7b58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 019B
        gbc.setState(0x1d1e, 0x80ee, 0x89a0, 0xb17b, 0x94fb, 0xd7d1, 0x1, 0x0);
        gbc.writeMem(0x1d1e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x80ee, gbc.sp());
        EXPECT(0x1d20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 019C
        gbc.setState(0x716f, 0x9341, 0x3a80, 0xfa3a, 0xe1df, 0xc350, 0x1, 0x1);
        gbc.writeMem(0x716f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9341, gbc.sp());
        EXPECT(0x7171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 019D
        gbc.setState(0xdb47, 0x7d6a, 0xc550, 0x14ed, 0x287e, 0x100a, 0x1, 0x1);
        gbc.writeMem(0xdb47, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x7d6a, gbc.sp());
        EXPECT(0xdb49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb47));
        EXPECT(0x12, gbc.readMem(0xdb48));
        // CB 12 019E
        gbc.setState(0x11c8, 0xc09d, 0x1300, 0x712c, 0x6973, 0x673f, 0x1, 0x0);
        gbc.writeMem(0x11c8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc09d, gbc.sp());
        EXPECT(0x11ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 019F
        gbc.setState(0x9ca6, 0x4be1, 0x5220, 0x4c1c, 0x8c51, 0x35d2, 0x0, 0x1);
        gbc.writeMem(0x9ca6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4be1, gbc.sp());
        EXPECT(0x9ca8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ca6));
        EXPECT(0x12, gbc.readMem(0x9ca7));
        // CB 12 01A0
        gbc.setState(0x7f6f, 0x1c74, 0x300, 0xf992, 0xa7ac, 0x72d4, 0x0, 0x1);
        gbc.writeMem(0x7f6f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1c74, gbc.sp());
        EXPECT(0x7f71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01A1
        gbc.setState(0x5e3b, 0xc5bc, 0x6930, 0x846f, 0x7f0d, 0xf9c3, 0x0, 0x1);
        gbc.writeMem(0x5e3b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xc5bc, gbc.sp());
        EXPECT(0x5e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01A2
        gbc.setState(0xe5af, 0x8890, 0xe5f0, 0xb2dd, 0x89de, 0x2ec6, 0x0, 0x1);
        gbc.writeMem(0xe5af, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8890, gbc.sp());
        EXPECT(0xe5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5af));
        EXPECT(0x12, gbc.readMem(0xe5b0));
        // CB 12 01A5
        gbc.setState(0x91e8, 0x8b58, 0xbf70, 0xa564, 0xd387, 0x9857, 0x1, 0x0);
        gbc.writeMem(0x91e8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8b58, gbc.sp());
        EXPECT(0x91ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e8));
        EXPECT(0x12, gbc.readMem(0x91e9));
        // CB 12 01A6
        gbc.setState(0xd0f5, 0xd18c, 0xe1d0, 0x4a3b, 0x2ae9, 0x238d, 0x1, 0x0);
        gbc.writeMem(0xd0f5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd18c, gbc.sp());
        EXPECT(0xd0f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f5));
        EXPECT(0x12, gbc.readMem(0xd0f6));
        // CB 12 01A7
        gbc.setState(0x4659, 0x8f96, 0xfd60, 0x6389, 0x1801, 0xb69e, 0x0, 0x0);
        gbc.writeMem(0x4659, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8f96, gbc.sp());
        EXPECT(0x465b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01A8
        gbc.setState(0x352c, 0x8788, 0x1260, 0xabe1, 0x3304, 0x378e, 0x0, 0x0);
        gbc.writeMem(0x352c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8788, gbc.sp());
        EXPECT(0x352e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01A9
        gbc.setState(0x36a7, 0x313f, 0x9410, 0x7206, 0x7307, 0x4988, 0x0, 0x0);
        gbc.writeMem(0x36a7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x313f, gbc.sp());
        EXPECT(0x36a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01AA
        gbc.setState(0xeaa0, 0x5d96, 0xcc40, 0xdc72, 0x92b, 0x8dbc, 0x0, 0x0);
        gbc.writeMem(0xeaa0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x5d96, gbc.sp());
        EXPECT(0xeaa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaa0));
        EXPECT(0x12, gbc.readMem(0xeaa1));
        // CB 12 01AB
        gbc.setState(0xbf83, 0x760d, 0xf000, 0x4c14, 0x9a9, 0xb7d6, 0x1, 0x1);
        gbc.writeMem(0xbf83, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x760d, gbc.sp());
        EXPECT(0xbf85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf83));
        EXPECT(0x12, gbc.readMem(0xbf84));
        // CB 12 01AC
        gbc.setState(0x869c, 0x4e4, 0xb3e0, 0xc19a, 0xf6c1, 0xc767, 0x0, 0x1);
        gbc.writeMem(0x869c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4e4, gbc.sp());
        EXPECT(0x869e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x869c));
        EXPECT(0x12, gbc.readMem(0x869d));
        // CB 12 01AD
        gbc.setState(0x5444, 0xb8e5, 0xf80, 0x1e00, 0xd2b8, 0x8121, 0x0, 0x1);
        gbc.writeMem(0x5444, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb8e5, gbc.sp());
        EXPECT(0x5446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01AE
        gbc.setState(0x3fdc, 0xbbe5, 0xabc0, 0xc882, 0x1893, 0x85c8, 0x0, 0x0);
        gbc.writeMem(0x3fdc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xbbe5, gbc.sp());
        EXPECT(0x3fde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01AF
        gbc.setState(0x90af, 0x7f28, 0xb990, 0x8129, 0xadbc, 0xf9c, 0x0, 0x0);
        gbc.writeMem(0x90af, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7f28, gbc.sp());
        EXPECT(0x90b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90af));
        EXPECT(0x12, gbc.readMem(0x90b0));
        // CB 12 01B0
        gbc.setState(0xb1a1, 0x8685, 0x2c40, 0x7e04, 0xd49c, 0xc10d, 0x0, 0x1);
        gbc.writeMem(0xb1a1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8685, gbc.sp());
        EXPECT(0xb1a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1a1));
        EXPECT(0x12, gbc.readMem(0xb1a2));
        // CB 12 01B1
        gbc.setState(0xab10, 0xf085, 0x6350, 0x630c, 0xe5db, 0x1461, 0x1, 0x0);
        gbc.writeMem(0xab10, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xf085, gbc.sp());
        EXPECT(0xab12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab10));
        EXPECT(0x12, gbc.readMem(0xab11));
        // CB 12 01B2
        gbc.setState(0x3ef4, 0x5c37, 0x5fc0, 0xa309, 0x524e, 0xc39c, 0x0, 0x0);
        gbc.writeMem(0x3ef4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5c37, gbc.sp());
        EXPECT(0x3ef6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01B4
        gbc.setState(0xce1e, 0x4eef, 0x4540, 0xff66, 0xe797, 0x9545, 0x1, 0x0);
        gbc.writeMem(0xce1e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4eef, gbc.sp());
        EXPECT(0xce20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce1e));
        EXPECT(0x12, gbc.readMem(0xce1f));
        // CB 12 01B5
        gbc.setState(0xd00c, 0xd160, 0x1990, 0x4d2b, 0x11b4, 0xc675, 0x1, 0x1);
        gbc.writeMem(0xd00c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd160, gbc.sp());
        EXPECT(0xd00e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00c));
        EXPECT(0x12, gbc.readMem(0xd00d));
        // CB 12 01B6
        gbc.setState(0x82af, 0xbb08, 0xcb40, 0x63ee, 0x9fcd, 0x9c34, 0x1, 0x1);
        gbc.writeMem(0x82af, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xbb08, gbc.sp());
        EXPECT(0x82b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82af));
        EXPECT(0x12, gbc.readMem(0x82b0));
        // CB 12 01B7
        gbc.setState(0xe7ea, 0xd7db, 0x3800, 0xd98a, 0x3f3d, 0xa35d, 0x0, 0x0);
        gbc.writeMem(0xe7ea, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xd7db, gbc.sp());
        EXPECT(0xe7ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7ea));
        EXPECT(0x12, gbc.readMem(0xe7eb));
        // CB 12 01B8
        gbc.setState(0x4282, 0xfdb9, 0x60c0, 0x523a, 0x94b6, 0xbe49, 0x1, 0x0);
        gbc.writeMem(0x4282, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xfdb9, gbc.sp());
        EXPECT(0x4284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01B9
        gbc.setState(0x53e3, 0x6f58, 0x9390, 0x7ba6, 0x8dc6, 0x8c94, 0x0, 0x1);
        gbc.writeMem(0x53e3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x6f58, gbc.sp());
        EXPECT(0x53e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01BA
        gbc.setState(0x3a88, 0x652c, 0x1ff0, 0xa80b, 0x7141, 0x918a, 0x0, 0x0);
        gbc.writeMem(0x3a88, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x652c, gbc.sp());
        EXPECT(0x3a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01BB
        gbc.setState(0x7a63, 0xb384, 0x8690, 0x4edb, 0xb79, 0x1086, 0x1, 0x1);
        gbc.writeMem(0x7a63, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb384, gbc.sp());
        EXPECT(0x7a65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01BC
        gbc.setState(0x862f, 0xd135, 0x91e0, 0x2aa4, 0x7405, 0x717e, 0x1, 0x1);
        gbc.writeMem(0x862f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd135, gbc.sp());
        EXPECT(0x8631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x862f));
        EXPECT(0x12, gbc.readMem(0x8630));
        // CB 12 01BD
        gbc.setState(0xdbdb, 0x9839, 0x440, 0x4bf3, 0x2a9a, 0xb4e3, 0x1, 0x1);
        gbc.writeMem(0xdbdb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9839, gbc.sp());
        EXPECT(0xdbdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbdb));
        EXPECT(0x12, gbc.readMem(0xdbdc));
        // CB 12 01BE
        gbc.setState(0x8c00, 0x21d1, 0x19d0, 0x5fe4, 0xea4c, 0xe4d, 0x1, 0x0);
        gbc.writeMem(0x8c00, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x21d1, gbc.sp());
        EXPECT(0x8c02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c00));
        EXPECT(0x12, gbc.readMem(0x8c01));
        // CB 12 01BF
        gbc.setState(0x6082, 0x8450, 0xdc00, 0x9532, 0x14f, 0xe087, 0x0, 0x0);
        gbc.writeMem(0x6082, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8450, gbc.sp());
        EXPECT(0x6084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01C0
        gbc.setState(0x5a6f, 0xbe0d, 0xdd40, 0x2c6f, 0x802e, 0xce99, 0x0, 0x1);
        gbc.writeMem(0x5a6f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xbe0d, gbc.sp());
        EXPECT(0x5a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01C1
        gbc.setState(0xe1, 0x26d1, 0xf270, 0x35c4, 0xf734, 0x60c0, 0x0, 0x0);
        gbc.writeMem(0xe1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x26d1, gbc.sp());
        EXPECT(0xe3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01C2
        gbc.setState(0x8ec9, 0x3b44, 0xf2d0, 0x5fec, 0x7fdf, 0xd301, 0x0, 0x0);
        gbc.writeMem(0x8ec9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x3b44, gbc.sp());
        EXPECT(0x8ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ec9));
        EXPECT(0x12, gbc.readMem(0x8eca));
        // CB 12 01C3
        gbc.setState(0x8d72, 0xe326, 0x9cf0, 0x9c7d, 0x91f5, 0xedc6, 0x0, 0x1);
        gbc.writeMem(0x8d72, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe326, gbc.sp());
        EXPECT(0x8d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d72));
        EXPECT(0x12, gbc.readMem(0x8d73));
        // CB 12 01C5
        gbc.setState(0xad90, 0x451d, 0x210, 0xed28, 0x27f8, 0x5d0f, 0x0, 0x1);
        gbc.writeMem(0xad90, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x451d, gbc.sp());
        EXPECT(0xad92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad90));
        EXPECT(0x12, gbc.readMem(0xad91));
        // CB 12 01C6
        gbc.setState(0xbc85, 0x77f9, 0xbb40, 0x8018, 0xf2ae, 0x29da, 0x1, 0x0);
        gbc.writeMem(0xbc85, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x77f9, gbc.sp());
        EXPECT(0xbc87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc85));
        EXPECT(0x12, gbc.readMem(0xbc86));
        // CB 12 01C7
        gbc.setState(0x60ab, 0x728b, 0x9b70, 0xbadd, 0xde51, 0x4c56, 0x0, 0x1);
        gbc.writeMem(0x60ab, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x728b, gbc.sp());
        EXPECT(0x60ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01C8
        gbc.setState(0x426c, 0xbd4f, 0x7c0, 0x6901, 0xca77, 0x9fb9, 0x1, 0x0);
        gbc.writeMem(0x426c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbd4f, gbc.sp());
        EXPECT(0x426e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01C9
        gbc.setState(0x970, 0x5faf, 0xb3c0, 0x82e0, 0x9ce7, 0x5d42, 0x1, 0x1);
        gbc.writeMem(0x970, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5faf, gbc.sp());
        EXPECT(0x972, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01CA
        gbc.setState(0x790c, 0x481b, 0xc330, 0x6278, 0xfbf8, 0x813b, 0x1, 0x0);
        gbc.writeMem(0x790c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x481b, gbc.sp());
        EXPECT(0x790e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01CB
        gbc.setState(0xece1, 0x9699, 0x7f50, 0x555b, 0xbf08, 0xfab8, 0x1, 0x0);
        gbc.writeMem(0xece1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x9699, gbc.sp());
        EXPECT(0xece3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xece1));
        EXPECT(0x12, gbc.readMem(0xece2));
        // CB 12 01CD
        gbc.setState(0x2cc0, 0xfcd, 0x1080, 0x8c96, 0xf04d, 0xdbbf, 0x0, 0x1);
        gbc.writeMem(0x2cc0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xfcd, gbc.sp());
        EXPECT(0x2cc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01CE
        gbc.setState(0xb9ff, 0xe74d, 0x12a0, 0x346d, 0x3fe, 0xc18f, 0x0, 0x1);
        gbc.writeMem(0xb9ff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xe74d, gbc.sp());
        EXPECT(0xba01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ff));
        EXPECT(0x12, gbc.readMem(0xba00));
        // CB 12 01CF
        gbc.setState(0x2d6b, 0x9f7f, 0x34b0, 0xc846, 0x4eef, 0x2efb, 0x1, 0x0);
        gbc.writeMem(0x2d6b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9f7f, gbc.sp());
        EXPECT(0x2d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01D0
        gbc.setState(0xf83, 0x22cc, 0xa360, 0x8204, 0xd3fc, 0x9db0, 0x0, 0x1);
        gbc.writeMem(0xf83, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x22cc, gbc.sp());
        EXPECT(0xf85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01D1
        gbc.setState(0xeeff, 0xa38a, 0x7c00, 0x5673, 0x47e1, 0x9931, 0x0, 0x1);
        gbc.writeMem(0xeeff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa38a, gbc.sp());
        EXPECT(0xef01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeeff));
        EXPECT(0x12, gbc.readMem(0xef00));
        // CB 12 01D2
        gbc.setState(0xc2b8, 0x7b98, 0x1510, 0xd49d, 0x45d6, 0xbfb6, 0x1, 0x1);
        gbc.writeMem(0xc2b8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x7b98, gbc.sp());
        EXPECT(0xc2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2b8));
        EXPECT(0x12, gbc.readMem(0xc2b9));
        // CB 12 01D3
        gbc.setState(0xc551, 0x484b, 0x4090, 0x3c89, 0xa5d3, 0xe0d9, 0x0, 0x0);
        gbc.writeMem(0xc551, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x484b, gbc.sp());
        EXPECT(0xc553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc551));
        EXPECT(0x12, gbc.readMem(0xc552));
        // CB 12 01D6
        gbc.setState(0x819, 0x7e50, 0x8ab0, 0x8100, 0x3689, 0x890c, 0x0, 0x0);
        gbc.writeMem(0x819, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7e50, gbc.sp());
        EXPECT(0x81b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01D7
        gbc.setState(0xfe6, 0xfe42, 0x7310, 0x5200, 0xddb7, 0xb750, 0x1, 0x0);
        gbc.writeMem(0xfe6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xfe42, gbc.sp());
        EXPECT(0xfe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01D8
        gbc.setState(0x8be6, 0xcdfa, 0xfac0, 0x8247, 0xf34c, 0x9e03, 0x0, 0x0);
        gbc.writeMem(0x8be6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xcdfa, gbc.sp());
        EXPECT(0x8be8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8be6));
        EXPECT(0x12, gbc.readMem(0x8be7));
        // CB 12 01DA
        gbc.setState(0xc93a, 0x542b, 0x2ce0, 0xe07f, 0xece6, 0xf63, 0x1, 0x0);
        gbc.writeMem(0xc93a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x542b, gbc.sp());
        EXPECT(0xc93c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc93a));
        EXPECT(0x12, gbc.readMem(0xc93b));
        // CB 12 01DB
        gbc.setState(0x4e7e, 0xe415, 0x35f0, 0x9745, 0x509a, 0x1155, 0x0, 0x1);
        gbc.writeMem(0x4e7e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xe415, gbc.sp());
        EXPECT(0x4e80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01DC
        gbc.setState(0x8bf, 0x9d25, 0x550, 0x680b, 0x31b7, 0xafd3, 0x0, 0x1);
        gbc.writeMem(0x8bf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9d25, gbc.sp());
        EXPECT(0x8c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01DD
        gbc.setState(0x12a, 0x93c7, 0x2710, 0x57c1, 0x33a9, 0xdefa, 0x0, 0x0);
        gbc.writeMem(0x12a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x93c7, gbc.sp());
        EXPECT(0x12c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01DE
        gbc.setState(0x6bdb, 0xd3ee, 0xbc90, 0x15e1, 0x6769, 0x15aa, 0x1, 0x1);
        gbc.writeMem(0x6bdb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd3ee, gbc.sp());
        EXPECT(0x6bdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01DF
        gbc.setState(0x4dd5, 0x952e, 0xace0, 0x94b6, 0xd2a, 0xf006, 0x0, 0x0);
        gbc.writeMem(0x4dd5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x952e, gbc.sp());
        EXPECT(0x4dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01E0
        gbc.setState(0xd12f, 0x1166, 0x27a0, 0x2595, 0xda70, 0xfb82, 0x0, 0x1);
        gbc.writeMem(0xd12f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1166, gbc.sp());
        EXPECT(0xd131, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd12f));
        EXPECT(0x12, gbc.readMem(0xd130));
        // CB 12 01E1
        gbc.setState(0xe76f, 0x82ac, 0x1910, 0x9d76, 0x5b67, 0x59bb, 0x1, 0x0);
        gbc.writeMem(0xe76f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x82ac, gbc.sp());
        EXPECT(0xe771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe76f));
        EXPECT(0x12, gbc.readMem(0xe770));
        // CB 12 01E2
        gbc.setState(0x24cc, 0xd052, 0xa120, 0x7521, 0xc795, 0xcee8, 0x0, 0x0);
        gbc.writeMem(0x24cc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd052, gbc.sp());
        EXPECT(0x24ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01E3
        gbc.setState(0x5000, 0xe85a, 0x8990, 0x8e40, 0x448f, 0xf5b9, 0x1, 0x0);
        gbc.writeMem(0x5000, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe85a, gbc.sp());
        EXPECT(0x5002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01E4
        gbc.setState(0xd64f, 0x9216, 0xb1a0, 0xdab, 0x34c, 0xf22f, 0x1, 0x0);
        gbc.writeMem(0xd64f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x9216, gbc.sp());
        EXPECT(0xd651, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd64f));
        EXPECT(0x12, gbc.readMem(0xd650));
        // CB 12 01E5
        gbc.setState(0xd9c8, 0xaa2, 0x4d10, 0x3ebd, 0x5843, 0x28bd, 0x0, 0x1);
        gbc.writeMem(0xd9c8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xaa2, gbc.sp());
        EXPECT(0xd9ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9c8));
        EXPECT(0x12, gbc.readMem(0xd9c9));
        // CB 12 01E6
        gbc.setState(0x4b58, 0x1b84, 0x4050, 0x1c31, 0xfaa0, 0x2e1e, 0x0, 0x0);
        gbc.writeMem(0x4b58, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1b84, gbc.sp());
        EXPECT(0x4b5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01E7
        gbc.setState(0xd55d, 0xc244, 0x34e0, 0xcd26, 0xd0d5, 0x1be9, 0x1, 0x0);
        gbc.writeMem(0xd55d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc244, gbc.sp());
        EXPECT(0xd55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd55d));
        EXPECT(0x12, gbc.readMem(0xd55e));
        // CB 12 01E8
        gbc.setState(0x1132, 0xb809, 0x79b0, 0x3795, 0x2783, 0x444a, 0x0, 0x0);
        gbc.writeMem(0x1132, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xb809, gbc.sp());
        EXPECT(0x1134, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01E9
        gbc.setState(0x93ae, 0xabd7, 0xe770, 0xaaef, 0xc67d, 0x251d, 0x1, 0x1);
        gbc.writeMem(0x93ae, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xabd7, gbc.sp());
        EXPECT(0x93b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ae));
        EXPECT(0x12, gbc.readMem(0x93af));
        // CB 12 01EA
        gbc.setState(0x1471, 0xeba4, 0x9740, 0xd7c, 0x6daf, 0x2e93, 0x1, 0x0);
        gbc.writeMem(0x1471, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xeba4, gbc.sp());
        EXPECT(0x1473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01EB
        gbc.setState(0xef9d, 0x10ef, 0x9f0, 0xf8b4, 0x6b1e, 0xb2b0, 0x0, 0x0);
        gbc.writeMem(0xef9d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x10ef, gbc.sp());
        EXPECT(0xef9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef9d));
        EXPECT(0x12, gbc.readMem(0xef9e));
        // CB 12 01EC
        gbc.setState(0x2980, 0x4381, 0x3590, 0x319a, 0xfdb2, 0x61a2, 0x1, 0x0);
        gbc.writeMem(0x2980, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x4381, gbc.sp());
        EXPECT(0x2982, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01ED
        gbc.setState(0xe1a6, 0x3ae8, 0x3f50, 0xb212, 0x16dd, 0x75f4, 0x1, 0x0);
        gbc.writeMem(0xe1a6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3ae8, gbc.sp());
        EXPECT(0xe1a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1a6));
        EXPECT(0x12, gbc.readMem(0xe1a7));
        // CB 12 01EE
        gbc.setState(0xe19f, 0x5620, 0x21d0, 0xba72, 0x8650, 0x34df, 0x0, 0x0);
        gbc.writeMem(0xe19f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5620, gbc.sp());
        EXPECT(0xe1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe19f));
        EXPECT(0x12, gbc.readMem(0xe1a0));
        // CB 12 01EF
        gbc.setState(0xead3, 0xeaf8, 0x6ff0, 0x1508, 0x7208, 0xa556, 0x1, 0x1);
        gbc.writeMem(0xead3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xeaf8, gbc.sp());
        EXPECT(0xead5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead3));
        EXPECT(0x12, gbc.readMem(0xead4));
        // CB 12 01F0
        gbc.setState(0x8724, 0xefcc, 0xf620, 0x2874, 0x2947, 0x5a7e, 0x0, 0x0);
        gbc.writeMem(0x8724, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xefcc, gbc.sp());
        EXPECT(0x8726, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8724));
        EXPECT(0x12, gbc.readMem(0x8725));
        // CB 12 01F1
        gbc.setState(0x1c03, 0xca87, 0x5d20, 0x2462, 0x7e5b, 0x3da0, 0x1, 0x1);
        gbc.writeMem(0x1c03, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xca87, gbc.sp());
        EXPECT(0x1c05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01F2
        gbc.setState(0x86c7, 0xd10, 0xf2b0, 0x469, 0xd5b7, 0x526b, 0x1, 0x1);
        gbc.writeMem(0x86c7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xd10, gbc.sp());
        EXPECT(0x86c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c7));
        EXPECT(0x12, gbc.readMem(0x86c8));
        // CB 12 01F3
        gbc.setState(0x7ef, 0xebea, 0x5c30, 0x4419, 0x39c3, 0x5d31, 0x0, 0x1);
        gbc.writeMem(0x7ef, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xebea, gbc.sp());
        EXPECT(0x7f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01F4
        gbc.setState(0x1d1, 0xf2eb, 0x2350, 0x6f64, 0xd2d, 0x6619, 0x0, 0x0);
        gbc.writeMem(0x1d1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf2eb, gbc.sp());
        EXPECT(0x1d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01F5
        gbc.setState(0xe865, 0xe631, 0xba80, 0x1e9e, 0x2c5b, 0x79b5, 0x1, 0x1);
        gbc.writeMem(0xe865, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xe631, gbc.sp());
        EXPECT(0xe867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe865));
        EXPECT(0x12, gbc.readMem(0xe866));
        // CB 12 01F7
        gbc.setState(0xab43, 0x32ee, 0xaeb0, 0x4159, 0x4e42, 0xf177, 0x1, 0x1);
        gbc.writeMem(0xab43, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x32ee, gbc.sp());
        EXPECT(0xab45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab43));
        EXPECT(0x12, gbc.readMem(0xab44));
        // CB 12 01F8
        gbc.setState(0x93a6, 0x6d41, 0x68c0, 0xfe53, 0xa3f2, 0xd79f, 0x1, 0x1);
        gbc.writeMem(0x93a6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x6d41, gbc.sp());
        EXPECT(0x93a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93a6));
        EXPECT(0x12, gbc.readMem(0x93a7));
        // CB 12 01F9
        gbc.setState(0x6b29, 0xa107, 0x89e0, 0xfaaf, 0x8771, 0xaf38, 0x1, 0x0);
        gbc.writeMem(0x6b29, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xa107, gbc.sp());
        EXPECT(0x6b2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 01FA
        gbc.setState(0x8bff, 0x81e5, 0x9f00, 0x63f4, 0xb3eb, 0xbf6d, 0x0, 0x0);
        gbc.writeMem(0x8bff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x81e5, gbc.sp());
        EXPECT(0x8c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bff));
        EXPECT(0x12, gbc.readMem(0x8c00));
        // CB 12 01FB
        gbc.setState(0xdee8, 0xbb8a, 0x21f0, 0x494, 0x441c, 0xeeb1, 0x1, 0x0);
        gbc.writeMem(0xdee8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbb8a, gbc.sp());
        EXPECT(0xdeea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdee8));
        EXPECT(0x12, gbc.readMem(0xdee9));
        // CB 12 01FC
        gbc.setState(0xb18a, 0xffdd, 0x6c80, 0x849f, 0xf1df, 0x5e82, 0x1, 0x1);
        gbc.writeMem(0xb18a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xffdd, gbc.sp());
        EXPECT(0xb18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18a));
        EXPECT(0x12, gbc.readMem(0xb18b));
        // CB 12 01FD
        gbc.setState(0xb0e2, 0x9fc8, 0x9de0, 0x129c, 0x8e96, 0xeb17, 0x0, 0x1);
        gbc.writeMem(0xb0e2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9fc8, gbc.sp());
        EXPECT(0xb0e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e2));
        EXPECT(0x12, gbc.readMem(0xb0e3));
        // CB 12 01FE
        gbc.setState(0x487c, 0xe2c7, 0x18c0, 0x2f5f, 0x32c8, 0xc66d, 0x1, 0x1);
        gbc.writeMem(0x487c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xe2c7, gbc.sp());
        EXPECT(0x487e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 01FF
        gbc.setState(0x4d06, 0x4fd3, 0xbd00, 0x358, 0x7ea8, 0xa72e, 0x0, 0x1);
        gbc.writeMem(0x4d06, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x4fd3, gbc.sp());
        EXPECT(0x4d08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0200
        gbc.setState(0xe957, 0xafab, 0xd520, 0xec54, 0xd93b, 0x59e5, 0x1, 0x1);
        gbc.writeMem(0xe957, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xafab, gbc.sp());
        EXPECT(0xe959, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe957));
        EXPECT(0x12, gbc.readMem(0xe958));
        // CB 12 0201
        gbc.setState(0x3f4a, 0xe5da, 0x3900, 0x2712, 0x2163, 0xbe87, 0x1, 0x1);
        gbc.writeMem(0x3f4a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe5da, gbc.sp());
        EXPECT(0x3f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0202
        gbc.setState(0x875d, 0x8eba, 0xe20, 0x2ae3, 0xe17c, 0x437, 0x0, 0x0);
        gbc.writeMem(0x875d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8eba, gbc.sp());
        EXPECT(0x875f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x875d));
        EXPECT(0x12, gbc.readMem(0x875e));
        // CB 12 0203
        gbc.setState(0x4a95, 0xb6de, 0xb300, 0x3ce, 0xf105, 0xe3a1, 0x0, 0x1);
        gbc.writeMem(0x4a95, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb6de, gbc.sp());
        EXPECT(0x4a97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0204
        gbc.setState(0xb2b2, 0x3bd, 0x7090, 0xef1a, 0xb5dc, 0x338, 0x1, 0x1);
        gbc.writeMem(0xb2b2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3bd, gbc.sp());
        EXPECT(0xb2b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b2));
        EXPECT(0x12, gbc.readMem(0xb2b3));
        // CB 12 0205
        gbc.setState(0x82a3, 0xfa64, 0x38b0, 0x2121, 0xe7fc, 0x55b4, 0x0, 0x1);
        gbc.writeMem(0x82a3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xfa64, gbc.sp());
        EXPECT(0x82a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82a3));
        EXPECT(0x12, gbc.readMem(0x82a4));
        // CB 12 0206
        gbc.setState(0x23ff, 0xcd22, 0xa1a0, 0x3485, 0xce16, 0x7b26, 0x1, 0x0);
        gbc.writeMem(0x23ff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcd22, gbc.sp());
        EXPECT(0x2401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0207
        gbc.setState(0xd548, 0x5218, 0x9af0, 0x3127, 0x2d3a, 0xad93, 0x0, 0x1);
        gbc.writeMem(0xd548, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5218, gbc.sp());
        EXPECT(0xd54a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd548));
        EXPECT(0x12, gbc.readMem(0xd549));
        // CB 12 0208
        gbc.setState(0xe8fa, 0x9273, 0xbc90, 0x3f97, 0x6dc3, 0xbe14, 0x0, 0x1);
        gbc.writeMem(0xe8fa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9273, gbc.sp());
        EXPECT(0xe8fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8fa));
        EXPECT(0x12, gbc.readMem(0xe8fb));
        // CB 12 0209
        gbc.setState(0x4760, 0x7f54, 0xbe40, 0x4693, 0xb8a0, 0xa868, 0x0, 0x0);
        gbc.writeMem(0x4760, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x7f54, gbc.sp());
        EXPECT(0x4762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 020A
        gbc.setState(0x7d6f, 0x17ba, 0x7160, 0x8277, 0xc33d, 0x486f, 0x0, 0x1);
        gbc.writeMem(0x7d6f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x17ba, gbc.sp());
        EXPECT(0x7d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 020B
        gbc.setState(0x704c, 0x19e2, 0x9ee0, 0xb389, 0xf03e, 0xb01, 0x0, 0x1);
        gbc.writeMem(0x704c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x19e2, gbc.sp());
        EXPECT(0x704e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 020C
        gbc.setState(0xd748, 0xdfb, 0x9180, 0x506e, 0x47, 0xa424, 0x0, 0x0);
        gbc.writeMem(0xd748, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdfb, gbc.sp());
        EXPECT(0xd74a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd748));
        EXPECT(0x12, gbc.readMem(0xd749));
        // CB 12 020E
        gbc.setState(0x17eb, 0x5fa, 0xd860, 0x9c9a, 0x2e06, 0xcb14, 0x1, 0x1);
        gbc.writeMem(0x17eb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5fa, gbc.sp());
        EXPECT(0x17ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 020F
        gbc.setState(0xcf70, 0x1bb9, 0xb550, 0x36a8, 0xd3c4, 0xcc2c, 0x1, 0x1);
        gbc.writeMem(0xcf70, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1bb9, gbc.sp());
        EXPECT(0xcf72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf70));
        EXPECT(0x12, gbc.readMem(0xcf71));
        // CB 12 0210
        gbc.setState(0x7f3, 0x2c55, 0x84f0, 0x212, 0x1d34, 0x78a9, 0x0, 0x1);
        gbc.writeMem(0x7f3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2c55, gbc.sp());
        EXPECT(0x7f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0211
        gbc.setState(0xc380, 0xd7f6, 0x8dd0, 0x7ec6, 0xbaf3, 0xe74c, 0x1, 0x1);
        gbc.writeMem(0xc380, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd7f6, gbc.sp());
        EXPECT(0xc382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc380));
        EXPECT(0x12, gbc.readMem(0xc381));
        // CB 12 0212
        gbc.setState(0x53cf, 0xbdd8, 0x5100, 0x8370, 0xe4b3, 0x330a, 0x0, 0x0);
        gbc.writeMem(0x53cf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xbdd8, gbc.sp());
        EXPECT(0x53d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0213
        gbc.setState(0x565, 0x3de4, 0xc980, 0x68ea, 0xca49, 0x12cd, 0x1, 0x0);
        gbc.writeMem(0x565, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3de4, gbc.sp());
        EXPECT(0x567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0214
        gbc.setState(0xaa52, 0x5fc0, 0x2370, 0xc0a1, 0x5f66, 0x6896, 0x0, 0x1);
        gbc.writeMem(0xaa52, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0xaa54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa52));
        EXPECT(0x12, gbc.readMem(0xaa53));
        // CB 12 0215
        gbc.setState(0x845f, 0x31bf, 0xf4a0, 0xb247, 0xd406, 0x4c66, 0x1, 0x1);
        gbc.writeMem(0x845f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x31bf, gbc.sp());
        EXPECT(0x8461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845f));
        EXPECT(0x12, gbc.readMem(0x8460));
        // CB 12 0216
        gbc.setState(0xef1a, 0xcb03, 0xdcc0, 0x7a45, 0x8a34, 0x79f1, 0x0, 0x0);
        gbc.writeMem(0xef1a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcb03, gbc.sp());
        EXPECT(0xef1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef1a));
        EXPECT(0x12, gbc.readMem(0xef1b));
        // CB 12 0217
        gbc.setState(0x1f82, 0x2151, 0x7ca0, 0xf64c, 0x4469, 0x6f8f, 0x0, 0x1);
        gbc.writeMem(0x1f82, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2151, gbc.sp());
        EXPECT(0x1f84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0219
        gbc.setState(0xc252, 0x678e, 0xaa10, 0xb80e, 0x7d9a, 0xfdd4, 0x1, 0x1);
        gbc.writeMem(0xc252, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x678e, gbc.sp());
        EXPECT(0xc254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc252));
        EXPECT(0x12, gbc.readMem(0xc253));
        // CB 12 021A
        gbc.setState(0x4ada, 0x6b46, 0x4240, 0xc314, 0x8595, 0xd895, 0x1, 0x0);
        gbc.writeMem(0x4ada, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x6b46, gbc.sp());
        EXPECT(0x4adc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 021B
        gbc.setState(0x126f, 0xd7d9, 0xb810, 0xb17a, 0xbd5b, 0x9aa, 0x1, 0x1);
        gbc.writeMem(0x126f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xd7d9, gbc.sp());
        EXPECT(0x1271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 021C
        gbc.setState(0x9a67, 0xcc24, 0x1120, 0xbe14, 0xa4b9, 0x8e63, 0x0, 0x1);
        gbc.writeMem(0x9a67, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xcc24, gbc.sp());
        EXPECT(0x9a69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a67));
        EXPECT(0x12, gbc.readMem(0x9a68));
        // CB 12 021D
        gbc.setState(0xaf60, 0x2991, 0x17d0, 0x5f70, 0x4f16, 0x8266, 0x1, 0x0);
        gbc.writeMem(0xaf60, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2991, gbc.sp());
        EXPECT(0xaf62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf60));
        EXPECT(0x12, gbc.readMem(0xaf61));
        // CB 12 021E
        gbc.setState(0x1f10, 0xb921, 0x3870, 0x5fa6, 0x28c4, 0x748b, 0x1, 0x1);
        gbc.writeMem(0x1f10, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb921, gbc.sp());
        EXPECT(0x1f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 021F
        gbc.setState(0x6389, 0x99b0, 0x3f30, 0x1851, 0xb9ba, 0xb1d9, 0x0, 0x0);
        gbc.writeMem(0x6389, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x99b0, gbc.sp());
        EXPECT(0x638b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0220
        gbc.setState(0xd1ff, 0x8580, 0x240, 0x8b3a, 0x22ef, 0xb9b2, 0x1, 0x0);
        gbc.writeMem(0xd1ff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8580, gbc.sp());
        EXPECT(0xd201, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1ff));
        EXPECT(0x12, gbc.readMem(0xd200));
        // CB 12 0221
        gbc.setState(0xa45c, 0x80a9, 0x6120, 0xfd54, 0xbd60, 0x69bf, 0x1, 0x0);
        gbc.writeMem(0xa45c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x80a9, gbc.sp());
        EXPECT(0xa45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa45c));
        EXPECT(0x12, gbc.readMem(0xa45d));
        // CB 12 0222
        gbc.setState(0x23fc, 0x8c9, 0x5d60, 0xda0e, 0x3434, 0x8220, 0x0, 0x1);
        gbc.writeMem(0x23fc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8c9, gbc.sp());
        EXPECT(0x23fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0223
        gbc.setState(0xc689, 0x4483, 0xa5b0, 0xb59e, 0x64c4, 0xb7a, 0x0, 0x1);
        gbc.writeMem(0xc689, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4483, gbc.sp());
        EXPECT(0xc68b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc689));
        EXPECT(0x12, gbc.readMem(0xc68a));
        // CB 12 0224
        gbc.setState(0x38f1, 0x7336, 0x9500, 0xd797, 0x6c1e, 0xbbf8, 0x1, 0x0);
        gbc.writeMem(0x38f1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7336, gbc.sp());
        EXPECT(0x38f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0225
        gbc.setState(0x83e3, 0x3c1, 0xf9d0, 0x8c76, 0xd647, 0x1834, 0x1, 0x0);
        gbc.writeMem(0x83e3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3c1, gbc.sp());
        EXPECT(0x83e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e3));
        EXPECT(0x12, gbc.readMem(0x83e4));
        // CB 12 0226
        gbc.setState(0x280c, 0x3621, 0x8160, 0xfe69, 0xc2fc, 0x1848, 0x1, 0x0);
        gbc.writeMem(0x280c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x3621, gbc.sp());
        EXPECT(0x280e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0227
        gbc.setState(0xabe7, 0x5fb3, 0xc30, 0x93c2, 0xeb11, 0x41b1, 0x1, 0x0);
        gbc.writeMem(0xabe7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x5fb3, gbc.sp());
        EXPECT(0xabe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabe7));
        EXPECT(0x12, gbc.readMem(0xabe8));
        // CB 12 0228
        gbc.setState(0x98d0, 0xdd91, 0x7e00, 0xa639, 0x508a, 0x98bd, 0x0, 0x1);
        gbc.writeMem(0x98d0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdd91, gbc.sp());
        EXPECT(0x98d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98d0));
        EXPECT(0x12, gbc.readMem(0x98d1));
        // CB 12 0229
        gbc.setState(0xa5aa, 0x409c, 0x8880, 0xd433, 0x31d9, 0x38f3, 0x0, 0x1);
        gbc.writeMem(0xa5aa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x409c, gbc.sp());
        EXPECT(0xa5ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa5aa));
        EXPECT(0x12, gbc.readMem(0xa5ab));
        // CB 12 022A
        gbc.setState(0x6d35, 0x5060, 0x7ad0, 0xa309, 0xbf6b, 0xac24, 0x0, 0x1);
        gbc.writeMem(0x6d35, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5060, gbc.sp());
        EXPECT(0x6d37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 022B
        gbc.setState(0xd9e7, 0x420d, 0xd7d0, 0x28b9, 0xbad5, 0x9f0c, 0x0, 0x0);
        gbc.writeMem(0xd9e7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x420d, gbc.sp());
        EXPECT(0xd9e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e7));
        EXPECT(0x12, gbc.readMem(0xd9e8));
        // CB 12 022C
        gbc.setState(0x2387, 0xf2e5, 0x7b10, 0x5f37, 0x50ad, 0x8e1a, 0x1, 0x0);
        gbc.writeMem(0x2387, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf2e5, gbc.sp());
        EXPECT(0x2389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 022D
        gbc.setState(0x3cd0, 0x7022, 0x29d0, 0xfa5a, 0x1ca9, 0x184f, 0x0, 0x1);
        gbc.writeMem(0x3cd0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7022, gbc.sp());
        EXPECT(0x3cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 022F
        gbc.setState(0xb737, 0xfc2d, 0xd5d0, 0x858a, 0x23d6, 0xc578, 0x0, 0x1);
        gbc.writeMem(0xb737, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfc2d, gbc.sp());
        EXPECT(0xb739, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb737));
        EXPECT(0x12, gbc.readMem(0xb738));
        // CB 12 0230
        gbc.setState(0xcbfa, 0x74dc, 0x6ae0, 0xdb27, 0x101a, 0x9542, 0x1, 0x1);
        gbc.writeMem(0xcbfa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x74dc, gbc.sp());
        EXPECT(0xcbfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbfa));
        EXPECT(0x12, gbc.readMem(0xcbfb));
        // CB 12 0231
        gbc.setState(0x8d94, 0x66db, 0x38b0, 0xbe5e, 0xcf92, 0xb466, 0x0, 0x0);
        gbc.writeMem(0x8d94, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x66db, gbc.sp());
        EXPECT(0x8d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d94));
        EXPECT(0x12, gbc.readMem(0x8d95));
        // CB 12 0232
        gbc.setState(0xa3e6, 0xce4f, 0xb540, 0xb538, 0x5e92, 0xb167, 0x0, 0x0);
        gbc.writeMem(0xa3e6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xce4f, gbc.sp());
        EXPECT(0xa3e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3e6));
        EXPECT(0x12, gbc.readMem(0xa3e7));
        // CB 12 0233
        gbc.setState(0xe10, 0xebe2, 0x3d30, 0x8675, 0xc5fb, 0x66b, 0x0, 0x0);
        gbc.writeMem(0xe10, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xebe2, gbc.sp());
        EXPECT(0xe12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0234
        gbc.setState(0x3f82, 0x75f1, 0xc490, 0x153f, 0x7e2d, 0xe860, 0x1, 0x1);
        gbc.writeMem(0x3f82, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x75f1, gbc.sp());
        EXPECT(0x3f84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0235
        gbc.setState(0x2ac5, 0x1759, 0xd8b0, 0xa5ae, 0xd908, 0xa9b, 0x0, 0x1);
        gbc.writeMem(0x2ac5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1759, gbc.sp());
        EXPECT(0x2ac7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0236
        gbc.setState(0x9055, 0xd644, 0x2b0, 0x22e3, 0x53ca, 0xb50e, 0x0, 0x0);
        gbc.writeMem(0x9055, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xd644, gbc.sp());
        EXPECT(0x9057, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9055));
        EXPECT(0x12, gbc.readMem(0x9056));
        // CB 12 0237
        gbc.setState(0x2273, 0x39b3, 0xbd0, 0x5cf5, 0xa80c, 0x5071, 0x0, 0x0);
        gbc.writeMem(0x2273, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x39b3, gbc.sp());
        EXPECT(0x2275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0239
        gbc.setState(0x1bda, 0xd537, 0xc2c0, 0xaeb3, 0xbd2a, 0xc75c, 0x0, 0x1);
        gbc.writeMem(0x1bda, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xd537, gbc.sp());
        EXPECT(0x1bdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 023A
        gbc.setState(0xe951, 0xb0ea, 0x3630, 0x2a18, 0x6740, 0x4a60, 0x0, 0x0);
        gbc.writeMem(0xe951, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb0ea, gbc.sp());
        EXPECT(0xe953, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe951));
        EXPECT(0x12, gbc.readMem(0xe952));
        // CB 12 023B
        gbc.setState(0x8439, 0x4b40, 0xd1b0, 0xf812, 0xd509, 0xe880, 0x1, 0x0);
        gbc.writeMem(0x8439, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4b40, gbc.sp());
        EXPECT(0x843b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8439));
        EXPECT(0x12, gbc.readMem(0x843a));
        // CB 12 023C
        gbc.setState(0x3e16, 0xc5b7, 0x4260, 0x8fc4, 0xbe11, 0x5284, 0x1, 0x1);
        gbc.writeMem(0x3e16, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc5b7, gbc.sp());
        EXPECT(0x3e18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 023D
        gbc.setState(0x366a, 0xca60, 0x5310, 0x2085, 0x874, 0xeecb, 0x1, 0x0);
        gbc.writeMem(0x366a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xca60, gbc.sp());
        EXPECT(0x366c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 023E
        gbc.setState(0xb098, 0x72d0, 0x5420, 0x7915, 0x7f94, 0x9d9e, 0x0, 0x0);
        gbc.writeMem(0xb098, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x72d0, gbc.sp());
        EXPECT(0xb09a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb098));
        EXPECT(0x12, gbc.readMem(0xb099));
        // CB 12 023F
        gbc.setState(0x3670, 0x70be, 0xa430, 0x2730, 0x357, 0x9cc9, 0x1, 0x0);
        gbc.writeMem(0x3670, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x70be, gbc.sp());
        EXPECT(0x3672, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0240
        gbc.setState(0x23f0, 0x1fc5, 0x72c0, 0xa22d, 0x4868, 0x1674, 0x0, 0x0);
        gbc.writeMem(0x23f0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x1fc5, gbc.sp());
        EXPECT(0x23f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0242
        gbc.setState(0x43de, 0x8760, 0x3660, 0x4985, 0xbfdf, 0x15d9, 0x1, 0x0);
        gbc.writeMem(0x43de, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8760, gbc.sp());
        EXPECT(0x43e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0243
        gbc.setState(0xdaaa, 0x108c, 0x3020, 0x3117, 0xbb35, 0x6878, 0x0, 0x0);
        gbc.writeMem(0xdaaa, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x108c, gbc.sp());
        EXPECT(0xdaac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaaa));
        EXPECT(0x12, gbc.readMem(0xdaab));
        // CB 12 0244
        gbc.setState(0xb1ef, 0xc8b2, 0xd040, 0xf063, 0xa23e, 0xdf52, 0x1, 0x1);
        gbc.writeMem(0xb1ef, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc8b2, gbc.sp());
        EXPECT(0xb1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ef));
        EXPECT(0x12, gbc.readMem(0xb1f0));
        // CB 12 0245
        gbc.setState(0x6e84, 0xb326, 0xa650, 0x2a25, 0x2c30, 0xe029, 0x0, 0x0);
        gbc.writeMem(0x6e84, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb326, gbc.sp());
        EXPECT(0x6e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0246
        gbc.setState(0x71cf, 0xaea3, 0x1d00, 0x1fbf, 0xbad0, 0xc946, 0x1, 0x1);
        gbc.writeMem(0x71cf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xaea3, gbc.sp());
        EXPECT(0x71d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0247
        gbc.setState(0x1172, 0x84ed, 0x1b00, 0x35a8, 0x20d1, 0x7e03, 0x1, 0x0);
        gbc.writeMem(0x1172, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x84ed, gbc.sp());
        EXPECT(0x1174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0248
        gbc.setState(0xb494, 0xded3, 0xd90, 0xa0c3, 0xc13a, 0x1a2b, 0x1, 0x0);
        gbc.writeMem(0xb494, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xded3, gbc.sp());
        EXPECT(0xb496, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb494));
        EXPECT(0x12, gbc.readMem(0xb495));
        // CB 12 024A
        gbc.setState(0xc5, 0xf571, 0xb7b0, 0x3591, 0x667f, 0xde44, 0x0, 0x1);
        gbc.writeMem(0xc5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf571, gbc.sp());
        EXPECT(0xc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 024B
        gbc.setState(0xab15, 0x9e, 0x5a60, 0x42a0, 0xc420, 0x7189, 0x1, 0x0);
        gbc.writeMem(0xab15, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9e, gbc.sp());
        EXPECT(0xab17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab15));
        EXPECT(0x12, gbc.readMem(0xab16));
        // CB 12 024C
        gbc.setState(0x50b0, 0x66cb, 0xee40, 0x8c5b, 0x59ef, 0x8c98, 0x1, 0x1);
        gbc.writeMem(0x50b0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x66cb, gbc.sp());
        EXPECT(0x50b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 024D
        gbc.setState(0x6419, 0x318d, 0xf210, 0x4c07, 0x166d, 0xc16d, 0x1, 0x1);
        gbc.writeMem(0x6419, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x318d, gbc.sp());
        EXPECT(0x641b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 024E
        gbc.setState(0x8ad5, 0x1ca5, 0x8a70, 0x9e48, 0x500d, 0x55a, 0x1, 0x0);
        gbc.writeMem(0x8ad5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x1ca5, gbc.sp());
        EXPECT(0x8ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad5));
        EXPECT(0x12, gbc.readMem(0x8ad6));
        // CB 12 024F
        gbc.setState(0xb740, 0x77f6, 0x8c50, 0x1aaf, 0xc1ba, 0x5a3f, 0x1, 0x1);
        gbc.writeMem(0xb740, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x77f6, gbc.sp());
        EXPECT(0xb742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb740));
        EXPECT(0x12, gbc.readMem(0xb741));
        // CB 12 0250
        gbc.setState(0x2955, 0xed8, 0x1e20, 0x972f, 0x5ad3, 0xf7dd, 0x1, 0x1);
        gbc.writeMem(0x2955, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xed8, gbc.sp());
        EXPECT(0x2957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0251
        gbc.setState(0xd335, 0xac45, 0x81c0, 0x110e, 0xb661, 0x83c4, 0x0, 0x1);
        gbc.writeMem(0xd335, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xac45, gbc.sp());
        EXPECT(0xd337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd335));
        EXPECT(0x12, gbc.readMem(0xd336));
        // CB 12 0252
        gbc.setState(0x81df, 0x1466, 0x9d60, 0x3254, 0x7bfc, 0x555b, 0x0, 0x0);
        gbc.writeMem(0x81df, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1466, gbc.sp());
        EXPECT(0x81e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81df));
        EXPECT(0x12, gbc.readMem(0x81e0));
        // CB 12 0253
        gbc.setState(0xd6c, 0x3246, 0x9f90, 0x7e5d, 0xb94c, 0x19bb, 0x0, 0x0);
        gbc.writeMem(0xd6c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x3246, gbc.sp());
        EXPECT(0xd6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0254
        gbc.setState(0x9477, 0xaa83, 0x4db0, 0xaa6e, 0xe757, 0x83cd, 0x0, 0x0);
        gbc.writeMem(0x9477, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xaa83, gbc.sp());
        EXPECT(0x9479, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9477));
        EXPECT(0x12, gbc.readMem(0x9478));
        // CB 12 0255
        gbc.setState(0x4114, 0xfa1e, 0xb4c0, 0xcb5c, 0x7fd8, 0x8f5b, 0x0, 0x1);
        gbc.writeMem(0x4114, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xfa1e, gbc.sp());
        EXPECT(0x4116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0256
        gbc.setState(0x4736, 0xaa41, 0xb430, 0xe468, 0x89a6, 0x3ce6, 0x0, 0x0);
        gbc.writeMem(0x4736, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xaa41, gbc.sp());
        EXPECT(0x4738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0257
        gbc.setState(0x46b6, 0x5901, 0x1980, 0xf906, 0x5281, 0xe1e2, 0x0, 0x0);
        gbc.writeMem(0x46b6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x5901, gbc.sp());
        EXPECT(0x46b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0258
        gbc.setState(0x9364, 0x92ba, 0xd0b0, 0x4f18, 0x12b2, 0xf7ad, 0x0, 0x0);
        gbc.writeMem(0x9364, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x92ba, gbc.sp());
        EXPECT(0x9366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9364));
        EXPECT(0x12, gbc.readMem(0x9365));
        // CB 12 0259
        gbc.setState(0xbbbe, 0xf1c7, 0x1fb0, 0x4f9c, 0x41c3, 0xf36d, 0x1, 0x0);
        gbc.writeMem(0xbbbe, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf1c7, gbc.sp());
        EXPECT(0xbbc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbbe));
        EXPECT(0x12, gbc.readMem(0xbbbf));
        // CB 12 025A
        gbc.setState(0xbc1d, 0x135b, 0x4d70, 0x3886, 0xb21e, 0xda4, 0x1, 0x1);
        gbc.writeMem(0xbc1d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x135b, gbc.sp());
        EXPECT(0xbc1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc1d));
        EXPECT(0x12, gbc.readMem(0xbc1e));
        // CB 12 025B
        gbc.setState(0x9190, 0xde96, 0x8330, 0xce11, 0x8a95, 0xe249, 0x0, 0x0);
        gbc.writeMem(0x9190, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xde96, gbc.sp());
        EXPECT(0x9192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9190));
        EXPECT(0x12, gbc.readMem(0x9191));
        // CB 12 025C
        gbc.setState(0x20ac, 0x2fcf, 0x9c10, 0x4f1c, 0x17a2, 0xcc9, 0x1, 0x0);
        gbc.writeMem(0x20ac, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2fcf, gbc.sp());
        EXPECT(0x20ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 025D
        gbc.setState(0xa9a3, 0xbd29, 0x4c90, 0x14b8, 0x5c81, 0xec01, 0x1, 0x0);
        gbc.writeMem(0xa9a3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbd29, gbc.sp());
        EXPECT(0xa9a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9a3));
        EXPECT(0x12, gbc.readMem(0xa9a4));
        // CB 12 025E
        gbc.setState(0xbe8b, 0xdc4f, 0x58c0, 0xa3d8, 0x266d, 0xa94f, 0x0, 0x1);
        gbc.writeMem(0xbe8b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdc4f, gbc.sp());
        EXPECT(0xbe8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe8b));
        EXPECT(0x12, gbc.readMem(0xbe8c));
        // CB 12 025F
        gbc.setState(0x6a86, 0x3b69, 0xf620, 0x589f, 0x70eb, 0xffb5, 0x1, 0x1);
        gbc.writeMem(0x6a86, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x3b69, gbc.sp());
        EXPECT(0x6a88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0260
        gbc.setState(0xc3d0, 0x2741, 0x9fa0, 0x2c01, 0x4f41, 0xee75, 0x0, 0x1);
        gbc.writeMem(0xc3d0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2741, gbc.sp());
        EXPECT(0xc3d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d0));
        EXPECT(0x12, gbc.readMem(0xc3d1));
        // CB 12 0261
        gbc.setState(0x7a98, 0x7a0d, 0xb8e0, 0x22bc, 0xac2b, 0xee5b, 0x0, 0x0);
        gbc.writeMem(0x7a98, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x7a0d, gbc.sp());
        EXPECT(0x7a9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0262
        gbc.setState(0x2781, 0x239c, 0x1450, 0x3717, 0xa4e2, 0xf2cb, 0x0, 0x1);
        gbc.writeMem(0x2781, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x239c, gbc.sp());
        EXPECT(0x2783, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0263
        gbc.setState(0x3fe2, 0xcfc, 0x3670, 0x466d, 0x7cb0, 0x2b44, 0x1, 0x0);
        gbc.writeMem(0x3fe2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcfc, gbc.sp());
        EXPECT(0x3fe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0264
        gbc.setState(0x4ac1, 0x2ca7, 0x2290, 0x973c, 0x859d, 0xe074, 0x0, 0x1);
        gbc.writeMem(0x4ac1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2ca7, gbc.sp());
        EXPECT(0x4ac3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0265
        gbc.setState(0x82ca, 0x378c, 0xfe90, 0x6bc5, 0xb41f, 0x4ca4, 0x1, 0x0);
        gbc.writeMem(0x82ca, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x378c, gbc.sp());
        EXPECT(0x82cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ca));
        EXPECT(0x12, gbc.readMem(0x82cb));
        // CB 12 0266
        gbc.setState(0x65fc, 0x1751, 0x7af0, 0x58f0, 0xed30, 0x8501, 0x0, 0x0);
        gbc.writeMem(0x65fc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x1751, gbc.sp());
        EXPECT(0x65fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0267
        gbc.setState(0x9337, 0x904e, 0x9720, 0x8ca6, 0xe008, 0x69e5, 0x0, 0x1);
        gbc.writeMem(0x9337, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x904e, gbc.sp());
        EXPECT(0x9339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9337));
        EXPECT(0x12, gbc.readMem(0x9338));
        // CB 12 0268
        gbc.setState(0x5878, 0x7343, 0xcb60, 0x8b1f, 0xfc9f, 0xe44a, 0x0, 0x1);
        gbc.writeMem(0x5878, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7343, gbc.sp());
        EXPECT(0x587a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0269
        gbc.setState(0x144b, 0x3dc8, 0xbbb0, 0xa11, 0xdff6, 0x4350, 0x0, 0x1);
        gbc.writeMem(0x144b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x3dc8, gbc.sp());
        EXPECT(0x144d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 026A
        gbc.setState(0x3ed, 0x1c15, 0xe00, 0x8636, 0xd327, 0x5558, 0x1, 0x1);
        gbc.writeMem(0x3ed, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1c15, gbc.sp());
        EXPECT(0x3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 026B
        gbc.setState(0x5f96, 0x3f08, 0x33a0, 0xfb82, 0x3292, 0xaf6c, 0x0, 0x1);
        gbc.writeMem(0x5f96, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x3f08, gbc.sp());
        EXPECT(0x5f98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 026C
        gbc.setState(0x3531, 0xb0ab, 0xaa10, 0xd82d, 0x953f, 0x2911, 0x1, 0x1);
        gbc.writeMem(0x3531, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xb0ab, gbc.sp());
        EXPECT(0x3533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 026D
        gbc.setState(0x75ad, 0x2610, 0x18c0, 0x74fe, 0x9d49, 0x4216, 0x0, 0x0);
        gbc.writeMem(0x75ad, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2610, gbc.sp());
        EXPECT(0x75af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 026E
        gbc.setState(0x1659, 0xb606, 0x4350, 0xad6c, 0xa3bb, 0x98a7, 0x0, 0x1);
        gbc.writeMem(0x1659, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xb606, gbc.sp());
        EXPECT(0x165b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 026F
        gbc.setState(0xedea, 0x8113, 0x2d10, 0x43e1, 0x6012, 0x368c, 0x1, 0x1);
        gbc.writeMem(0xedea, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8113, gbc.sp());
        EXPECT(0xedec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedea));
        EXPECT(0x12, gbc.readMem(0xedeb));
        // CB 12 0270
        gbc.setState(0x5b15, 0xfe7c, 0xccf0, 0x3177, 0xc83f, 0xd59b, 0x0, 0x0);
        gbc.writeMem(0x5b15, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfe7c, gbc.sp());
        EXPECT(0x5b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0271
        gbc.setState(0xeb55, 0x3e2b, 0x2e40, 0x96db, 0x2efa, 0x9a83, 0x0, 0x0);
        gbc.writeMem(0xeb55, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3e2b, gbc.sp());
        EXPECT(0xeb57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb55));
        EXPECT(0x12, gbc.readMem(0xeb56));
        // CB 12 0272
        gbc.setState(0xae84, 0x4632, 0xdea0, 0x9e29, 0x229c, 0x99bf, 0x1, 0x1);
        gbc.writeMem(0xae84, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4632, gbc.sp());
        EXPECT(0xae86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae84));
        EXPECT(0x12, gbc.readMem(0xae85));
        // CB 12 0273
        gbc.setState(0x4272, 0x5d4, 0xb210, 0xa7e8, 0xea9d, 0x3042, 0x1, 0x1);
        gbc.writeMem(0x4272, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x5d4, gbc.sp());
        EXPECT(0x4274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0274
        gbc.setState(0x3f11, 0xc5fa, 0x2280, 0x8be3, 0x910a, 0x7cbc, 0x0, 0x1);
        gbc.writeMem(0x3f11, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc5fa, gbc.sp());
        EXPECT(0x3f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0275
        gbc.setState(0x566a, 0x38f1, 0x2a20, 0x7f08, 0x7c61, 0xb69b, 0x1, 0x0);
        gbc.writeMem(0x566a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x38f1, gbc.sp());
        EXPECT(0x566c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0276
        gbc.setState(0xcd73, 0x16bc, 0xbf50, 0xc56c, 0x283e, 0xa11c, 0x0, 0x1);
        gbc.writeMem(0xcd73, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x16bc, gbc.sp());
        EXPECT(0xcd75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd73));
        EXPECT(0x12, gbc.readMem(0xcd74));
        // CB 12 0277
        gbc.setState(0x364b, 0x167c, 0xb090, 0x1c29, 0xc92, 0xd726, 0x0, 0x0);
        gbc.writeMem(0x364b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x167c, gbc.sp());
        EXPECT(0x364d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0278
        gbc.setState(0xec79, 0x987f, 0xd650, 0xc77b, 0x7471, 0xe29f, 0x0, 0x1);
        gbc.writeMem(0xec79, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x987f, gbc.sp());
        EXPECT(0xec7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec79));
        EXPECT(0x12, gbc.readMem(0xec7a));
        // CB 12 0279
        gbc.setState(0x1030, 0xe85a, 0x9410, 0x4e9b, 0x2d10, 0x240d, 0x1, 0x0);
        gbc.writeMem(0x1030, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe85a, gbc.sp());
        EXPECT(0x1032, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 027A
        gbc.setState(0x58bf, 0x2c9, 0x8f50, 0xd8cd, 0x1539, 0xfe5d, 0x0, 0x0);
        gbc.writeMem(0x58bf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2c9, gbc.sp());
        EXPECT(0x58c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 027B
        gbc.setState(0xc785, 0x28a0, 0x780, 0xc582, 0x8682, 0x3304, 0x0, 0x0);
        gbc.writeMem(0xc785, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x28a0, gbc.sp());
        EXPECT(0xc787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc785));
        EXPECT(0x12, gbc.readMem(0xc786));
        // CB 12 027C
        gbc.setState(0x2e66, 0x8ea2, 0x100, 0x56ef, 0x256d, 0xf64b, 0x1, 0x0);
        gbc.writeMem(0x2e66, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8ea2, gbc.sp());
        EXPECT(0x2e68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 027D
        gbc.setState(0x2ae3, 0xcc99, 0xbf80, 0x1308, 0x68be, 0xf030, 0x0, 0x1);
        gbc.writeMem(0x2ae3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xcc99, gbc.sp());
        EXPECT(0x2ae5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 027E
        gbc.setState(0x9ec1, 0x6716, 0x1120, 0x1944, 0x428b, 0xc6c2, 0x1, 0x1);
        gbc.writeMem(0x9ec1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x6716, gbc.sp());
        EXPECT(0x9ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec1));
        EXPECT(0x12, gbc.readMem(0x9ec2));
        // CB 12 027F
        gbc.setState(0xc3a7, 0xcbd7, 0xec30, 0x8273, 0x2964, 0x92b3, 0x1, 0x1);
        gbc.writeMem(0xc3a7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcbd7, gbc.sp());
        EXPECT(0xc3a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3a7));
        EXPECT(0x12, gbc.readMem(0xc3a8));
        // CB 12 0280
        gbc.setState(0x9abc, 0x5219, 0xf360, 0x364b, 0x5a7, 0x6ef4, 0x1, 0x1);
        gbc.writeMem(0x9abc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x5219, gbc.sp());
        EXPECT(0x9abe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9abc));
        EXPECT(0x12, gbc.readMem(0x9abd));
        // CB 12 0281
        gbc.setState(0xef16, 0x1ba4, 0xbc20, 0x1668, 0x922, 0x25f9, 0x1, 0x1);
        gbc.writeMem(0xef16, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1ba4, gbc.sp());
        EXPECT(0xef18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef16));
        EXPECT(0x12, gbc.readMem(0xef17));
        // CB 12 0282
        gbc.setState(0xa575, 0xcf96, 0x40b0, 0x4231, 0x1bc7, 0xb116, 0x0, 0x0);
        gbc.writeMem(0xa575, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcf96, gbc.sp());
        EXPECT(0xa577, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa575));
        EXPECT(0x12, gbc.readMem(0xa576));
        // CB 12 0283
        gbc.setState(0x4993, 0x5e9e, 0xc8f0, 0xe297, 0xcd1, 0x73ca, 0x0, 0x1);
        gbc.writeMem(0x4993, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5e9e, gbc.sp());
        EXPECT(0x4995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0284
        gbc.setState(0x9807, 0xd125, 0xa650, 0x1cde, 0x7229, 0xfa7a, 0x1, 0x1);
        gbc.writeMem(0x9807, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd125, gbc.sp());
        EXPECT(0x9809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9807));
        EXPECT(0x12, gbc.readMem(0x9808));
        // CB 12 0285
        gbc.setState(0xe4b5, 0x3804, 0x250, 0xe9bb, 0x7683, 0xe649, 0x0, 0x1);
        gbc.writeMem(0xe4b5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3804, gbc.sp());
        EXPECT(0xe4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b5));
        EXPECT(0x12, gbc.readMem(0xe4b6));
        // CB 12 0286
        gbc.setState(0x3485, 0xf684, 0x6790, 0x8580, 0xcc78, 0xe47, 0x0, 0x1);
        gbc.writeMem(0x3485, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf684, gbc.sp());
        EXPECT(0x3487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0287
        gbc.setState(0xc3, 0x39f3, 0x1f0, 0x5bd8, 0xf80a, 0x6884, 0x1, 0x0);
        gbc.writeMem(0xc3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x39f3, gbc.sp());
        EXPECT(0xc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0288
        gbc.setState(0xfb3, 0x7c19, 0xdbf0, 0x15c1, 0xebe, 0x9602, 0x0, 0x1);
        gbc.writeMem(0xfb3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x7c19, gbc.sp());
        EXPECT(0xfb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0289
        gbc.setState(0xe139, 0xf590, 0x1740, 0x2a44, 0x3eeb, 0xb94b, 0x1, 0x0);
        gbc.writeMem(0xe139, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf590, gbc.sp());
        EXPECT(0xe13b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe139));
        EXPECT(0x12, gbc.readMem(0xe13a));
        // CB 12 028A
        gbc.setState(0x37b6, 0xacc4, 0x4a70, 0x2634, 0xfcbf, 0xbec4, 0x0, 0x1);
        gbc.writeMem(0x37b6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xacc4, gbc.sp());
        EXPECT(0x37b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 028B
        gbc.setState(0xbb0f, 0x6dc2, 0x5620, 0xd6af, 0xbe64, 0x519c, 0x0, 0x0);
        gbc.writeMem(0xbb0f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x6dc2, gbc.sp());
        EXPECT(0xbb11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb0f));
        EXPECT(0x12, gbc.readMem(0xbb10));
        // CB 12 028C
        gbc.setState(0x8a4f, 0x76f4, 0xe710, 0xec15, 0x17a8, 0x4f0b, 0x0, 0x1);
        gbc.writeMem(0x8a4f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x76f4, gbc.sp());
        EXPECT(0x8a51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a4f));
        EXPECT(0x12, gbc.readMem(0x8a50));
        // CB 12 028D
        gbc.setState(0x754f, 0xaee6, 0xe980, 0xe05b, 0x96cd, 0xbf06, 0x1, 0x1);
        gbc.writeMem(0x754f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xaee6, gbc.sp());
        EXPECT(0x7551, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 028E
        gbc.setState(0x151a, 0x519e, 0x520, 0x5f12, 0xf125, 0x6ecf, 0x0, 0x0);
        gbc.writeMem(0x151a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x519e, gbc.sp());
        EXPECT(0x151c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 028F
        gbc.setState(0x9b95, 0x2b48, 0xe5b0, 0xdcb6, 0x4976, 0xd9de, 0x1, 0x0);
        gbc.writeMem(0x9b95, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2b48, gbc.sp());
        EXPECT(0x9b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b95));
        EXPECT(0x12, gbc.readMem(0x9b96));
        // CB 12 0290
        gbc.setState(0x1c8a, 0x4d7b, 0xda10, 0xab6f, 0x3ee5, 0xeb9c, 0x1, 0x0);
        gbc.writeMem(0x1c8a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4d7b, gbc.sp());
        EXPECT(0x1c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0291
        gbc.setState(0x92a7, 0x459, 0xf9f0, 0x26e0, 0x3009, 0x9d07, 0x1, 0x0);
        gbc.writeMem(0x92a7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x459, gbc.sp());
        EXPECT(0x92a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92a7));
        EXPECT(0x12, gbc.readMem(0x92a8));
        // CB 12 0292
        gbc.setState(0xd031, 0xc685, 0x7060, 0xfb50, 0xe636, 0xdde8, 0x1, 0x1);
        gbc.writeMem(0xd031, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc685, gbc.sp());
        EXPECT(0xd033, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd031));
        EXPECT(0x12, gbc.readMem(0xd032));
        // CB 12 0293
        gbc.setState(0x4fc5, 0xcc01, 0x2a0, 0x3448, 0xbac1, 0x5856, 0x0, 0x0);
        gbc.writeMem(0x4fc5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xcc01, gbc.sp());
        EXPECT(0x4fc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0294
        gbc.setState(0x8427, 0xa8e, 0xa180, 0x9b16, 0xa27c, 0x7317, 0x1, 0x0);
        gbc.writeMem(0x8427, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xa8e, gbc.sp());
        EXPECT(0x8429, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8427));
        EXPECT(0x12, gbc.readMem(0x8428));
        // CB 12 0295
        gbc.setState(0xd1a5, 0xd5c6, 0xf590, 0x4716, 0x5045, 0xc1a8, 0x0, 0x0);
        gbc.writeMem(0xd1a5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd5c6, gbc.sp());
        EXPECT(0xd1a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1a5));
        EXPECT(0x12, gbc.readMem(0xd1a6));
        // CB 12 0296
        gbc.setState(0xca21, 0x2053, 0x2f50, 0x1c6b, 0xbc3f, 0x9791, 0x0, 0x0);
        gbc.writeMem(0xca21, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x2053, gbc.sp());
        EXPECT(0xca23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca21));
        EXPECT(0x12, gbc.readMem(0xca22));
        // CB 12 0297
        gbc.setState(0x9a88, 0xf990, 0xbe70, 0xc047, 0xf5eb, 0xa8b2, 0x0, 0x0);
        gbc.writeMem(0x9a88, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xf990, gbc.sp());
        EXPECT(0x9a8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a88));
        EXPECT(0x12, gbc.readMem(0x9a89));
        // CB 12 0298
        gbc.setState(0xe3b5, 0xd2f7, 0x9650, 0xa1a4, 0xee08, 0x8f63, 0x1, 0x0);
        gbc.writeMem(0xe3b5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd2f7, gbc.sp());
        EXPECT(0xe3b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3b5));
        EXPECT(0x12, gbc.readMem(0xe3b6));
        // CB 12 0299
        gbc.setState(0x25ab, 0x66d2, 0xd340, 0xf3a3, 0x4c, 0x1522, 0x1, 0x0);
        gbc.writeMem(0x25ab, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x66d2, gbc.sp());
        EXPECT(0x25ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 029A
        gbc.setState(0x5dc, 0x288b, 0x1340, 0xb3fd, 0xa0c5, 0x982a, 0x1, 0x1);
        gbc.writeMem(0x5dc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x288b, gbc.sp());
        EXPECT(0x5de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 029B
        gbc.setState(0x5738, 0x3c9d, 0x7450, 0xb00c, 0x63f0, 0xb5de, 0x0, 0x1);
        gbc.writeMem(0x5738, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x3c9d, gbc.sp());
        EXPECT(0x573a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 029C
        gbc.setState(0xcbff, 0x6bfa, 0x8440, 0x7bd3, 0x50e0, 0x284d, 0x1, 0x1);
        gbc.writeMem(0xcbff, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6bfa, gbc.sp());
        EXPECT(0xcc01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbff));
        EXPECT(0x12, gbc.readMem(0xcc00));
        // CB 12 029D
        gbc.setState(0xd169, 0xa8be, 0x6d10, 0x9b70, 0x79b9, 0xfb84, 0x1, 0x1);
        gbc.writeMem(0xd169, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa8be, gbc.sp());
        EXPECT(0xd16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd169));
        EXPECT(0x12, gbc.readMem(0xd16a));
        // CB 12 029E
        gbc.setState(0x3640, 0x9803, 0xa180, 0x3e54, 0xd7fe, 0x1aa1, 0x0, 0x1);
        gbc.writeMem(0x3640, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9803, gbc.sp());
        EXPECT(0x3642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 029F
        gbc.setState(0xdb5c, 0x1965, 0x51e0, 0xead0, 0xafd4, 0x5f69, 0x0, 0x0);
        gbc.writeMem(0xdb5c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1965, gbc.sp());
        EXPECT(0xdb5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb5c));
        EXPECT(0x12, gbc.readMem(0xdb5d));
        // CB 12 02A0
        gbc.setState(0xcdee, 0x4a8a, 0xb280, 0xcdd2, 0x4741, 0x4421, 0x1, 0x0);
        gbc.writeMem(0xcdee, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4a8a, gbc.sp());
        EXPECT(0xcdf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdee));
        EXPECT(0x12, gbc.readMem(0xcdef));
        // CB 12 02A1
        gbc.setState(0x25bd, 0xd67d, 0x6c30, 0x24e2, 0xe0bc, 0xc5e1, 0x0, 0x0);
        gbc.writeMem(0x25bd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd67d, gbc.sp());
        EXPECT(0x25bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02A2
        gbc.setState(0x4de1, 0xad45, 0xc130, 0x4a0e, 0xa51b, 0x3b23, 0x0, 0x0);
        gbc.writeMem(0x4de1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xad45, gbc.sp());
        EXPECT(0x4de3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02A3
        gbc.setState(0xb500, 0xc7be, 0x97b0, 0x8ed0, 0x1efb, 0x3360, 0x0, 0x1);
        gbc.writeMem(0xb500, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc7be, gbc.sp());
        EXPECT(0xb502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb500));
        EXPECT(0x12, gbc.readMem(0xb501));
        // CB 12 02A4
        gbc.setState(0x6e1d, 0xa1f6, 0xbe30, 0xdaa1, 0x187f, 0xe75f, 0x0, 0x1);
        gbc.writeMem(0x6e1d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa1f6, gbc.sp());
        EXPECT(0x6e1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02A5
        gbc.setState(0xdfbc, 0xb0f3, 0x9280, 0xe4d5, 0xe9c0, 0x912a, 0x0, 0x0);
        gbc.writeMem(0xdfbc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xb0f3, gbc.sp());
        EXPECT(0xdfbe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfbc));
        EXPECT(0x12, gbc.readMem(0xdfbd));
        // CB 12 02A6
        gbc.setState(0x6eab, 0xa48d, 0x6810, 0x54c9, 0x7427, 0xcf5, 0x0, 0x1);
        gbc.writeMem(0x6eab, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa48d, gbc.sp());
        EXPECT(0x6ead, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02A7
        gbc.setState(0x20ac, 0xfbe7, 0xb510, 0x88e1, 0xadcd, 0xcd17, 0x1, 0x0);
        gbc.writeMem(0x20ac, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xfbe7, gbc.sp());
        EXPECT(0x20ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02A8
        gbc.setState(0xc571, 0xe5cd, 0x4990, 0xd309, 0xb7c8, 0x5c21, 0x1, 0x1);
        gbc.writeMem(0xc571, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe5cd, gbc.sp());
        EXPECT(0xc573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc571));
        EXPECT(0x12, gbc.readMem(0xc572));
        // CB 12 02A9
        gbc.setState(0x9e7f, 0x2075, 0x7280, 0xe66, 0xc648, 0x5139, 0x0, 0x1);
        gbc.writeMem(0x9e7f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2075, gbc.sp());
        EXPECT(0x9e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7f));
        EXPECT(0x12, gbc.readMem(0x9e80));
        // CB 12 02AA
        gbc.setState(0xc71c, 0x5376, 0x3b50, 0x52f3, 0x13e9, 0x8bf6, 0x0, 0x0);
        gbc.writeMem(0xc71c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5376, gbc.sp());
        EXPECT(0xc71e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc71c));
        EXPECT(0x12, gbc.readMem(0xc71d));
        // CB 12 02AB
        gbc.setState(0xe87b, 0x9945, 0x8090, 0xc981, 0x5718, 0xb1e7, 0x0, 0x0);
        gbc.writeMem(0xe87b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9945, gbc.sp());
        EXPECT(0xe87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe87b));
        EXPECT(0x12, gbc.readMem(0xe87c));
        // CB 12 02AC
        gbc.setState(0x3604, 0x9c2d, 0x58f0, 0x8825, 0x5e89, 0xad0b, 0x0, 0x1);
        gbc.writeMem(0x3604, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x9c2d, gbc.sp());
        EXPECT(0x3606, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02AD
        gbc.setState(0x4b48, 0xd272, 0xd2c0, 0x31ae, 0xa7ba, 0x3f85, 0x0, 0x1);
        gbc.writeMem(0x4b48, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd272, gbc.sp());
        EXPECT(0x4b4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02AE
        gbc.setState(0x808f, 0x543, 0x48b0, 0xe17a, 0x3ed2, 0x6fee, 0x1, 0x0);
        gbc.writeMem(0x808f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x543, gbc.sp());
        EXPECT(0x8091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x808f));
        EXPECT(0x12, gbc.readMem(0x8090));
        // CB 12 02AF
        gbc.setState(0xd23c, 0xb2a3, 0xc0, 0xc707, 0xe2b9, 0x6dc3, 0x1, 0x1);
        gbc.writeMem(0xd23c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xb2a3, gbc.sp());
        EXPECT(0xd23e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd23c));
        EXPECT(0x12, gbc.readMem(0xd23d));
        // CB 12 02B0
        gbc.setState(0x1169, 0xfc75, 0x8da0, 0x55e9, 0x2f4a, 0x328f, 0x1, 0x0);
        gbc.writeMem(0x1169, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xfc75, gbc.sp());
        EXPECT(0x116b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02B1
        gbc.setState(0x2ce1, 0xcc55, 0x7eb0, 0x888e, 0x622e, 0xbe40, 0x0, 0x0);
        gbc.writeMem(0x2ce1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xcc55, gbc.sp());
        EXPECT(0x2ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02B2
        gbc.setState(0x647b, 0x4a2a, 0x1300, 0xfb9b, 0xdaf5, 0x1ef0, 0x0, 0x1);
        gbc.writeMem(0x647b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x4a2a, gbc.sp());
        EXPECT(0x647d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02B3
        gbc.setState(0xe1e1, 0x977, 0xaeb0, 0xe256, 0x9ec7, 0x664c, 0x1, 0x0);
        gbc.writeMem(0xe1e1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x977, gbc.sp());
        EXPECT(0xe1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1e1));
        EXPECT(0x12, gbc.readMem(0xe1e2));
        // CB 12 02B4
        gbc.setState(0xb32f, 0xc6d6, 0x2c90, 0xb6fb, 0x405d, 0x58de, 0x1, 0x0);
        gbc.writeMem(0xb32f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc6d6, gbc.sp());
        EXPECT(0xb331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb32f));
        EXPECT(0x12, gbc.readMem(0xb330));
        // CB 12 02B5
        gbc.setState(0x96ab, 0x76f1, 0xae20, 0xd1ef, 0xebdd, 0xe708, 0x0, 0x1);
        gbc.writeMem(0x96ab, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x76f1, gbc.sp());
        EXPECT(0x96ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ab));
        EXPECT(0x12, gbc.readMem(0x96ac));
        // CB 12 02B6
        gbc.setState(0xbf50, 0x208d, 0x3020, 0x380c, 0xa89, 0x4a77, 0x1, 0x1);
        gbc.writeMem(0xbf50, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x208d, gbc.sp());
        EXPECT(0xbf52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf50));
        EXPECT(0x12, gbc.readMem(0xbf51));
        // CB 12 02B7
        gbc.setState(0x5b3d, 0xe63a, 0xc860, 0xc387, 0xf6fb, 0xf9c5, 0x1, 0x1);
        gbc.writeMem(0x5b3d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xe63a, gbc.sp());
        EXPECT(0x5b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02B8
        gbc.setState(0x3323, 0x2f4f, 0x6af0, 0xe1dd, 0xe777, 0xa65e, 0x1, 0x0);
        gbc.writeMem(0x3323, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2f4f, gbc.sp());
        EXPECT(0x3325, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02B9
        gbc.setState(0x524c, 0xd6da, 0xe410, 0xcc73, 0x25fe, 0xd184, 0x0, 0x1);
        gbc.writeMem(0x524c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xd6da, gbc.sp());
        EXPECT(0x524e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02BA
        gbc.setState(0x9dcf, 0xe8d4, 0x6770, 0xdf0f, 0x4057, 0x9035, 0x0, 0x0);
        gbc.writeMem(0x9dcf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe8d4, gbc.sp());
        EXPECT(0x9dd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dcf));
        EXPECT(0x12, gbc.readMem(0x9dd0));
        // CB 12 02BB
        gbc.setState(0x7f25, 0x8ad9, 0xc940, 0x7653, 0x113, 0xcabd, 0x1, 0x0);
        gbc.writeMem(0x7f25, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x8ad9, gbc.sp());
        EXPECT(0x7f27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02BC
        gbc.setState(0x2f, 0x1959, 0x9320, 0x5294, 0xf614, 0x25c, 0x0, 0x0);
        gbc.writeMem(0x2f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1959, gbc.sp());
        EXPECT(0x31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02BD
        gbc.setState(0x243a, 0xa879, 0x4d50, 0x7b07, 0x2c68, 0xa8e6, 0x1, 0x0);
        gbc.writeMem(0x243a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa879, gbc.sp());
        EXPECT(0x243c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02BE
        gbc.setState(0x273d, 0xaa59, 0xe430, 0x9e14, 0x1d7d, 0xbb1, 0x0, 0x1);
        gbc.writeMem(0x273d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xaa59, gbc.sp());
        EXPECT(0x273f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02BF
        gbc.setState(0xef79, 0xb46a, 0x97a0, 0x59ba, 0xfaef, 0x1ac, 0x1, 0x0);
        gbc.writeMem(0xef79, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xb46a, gbc.sp());
        EXPECT(0xef7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef79));
        EXPECT(0x12, gbc.readMem(0xef7a));
        // CB 12 02C0
        gbc.setState(0xe464, 0xab0c, 0x7470, 0xae0e, 0x7a85, 0x4146, 0x1, 0x1);
        gbc.writeMem(0xe464, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xab0c, gbc.sp());
        EXPECT(0xe466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe464));
        EXPECT(0x12, gbc.readMem(0xe465));
        // CB 12 02C1
        gbc.setState(0x88f1, 0x4f6a, 0x3650, 0xfa39, 0xb04, 0xba24, 0x1, 0x1);
        gbc.writeMem(0x88f1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x4f6a, gbc.sp());
        EXPECT(0x88f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88f1));
        EXPECT(0x12, gbc.readMem(0x88f2));
        // CB 12 02C2
        gbc.setState(0x4ce9, 0x6710, 0x6790, 0x933, 0x2767, 0xe904, 0x1, 0x0);
        gbc.writeMem(0x4ce9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x6710, gbc.sp());
        EXPECT(0x4ceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02C3
        gbc.setState(0x25e8, 0xd9d1, 0x7cc0, 0xff61, 0x66fa, 0xf, 0x1, 0x1);
        gbc.writeMem(0x25e8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xd9d1, gbc.sp());
        EXPECT(0x25ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02C4
        gbc.setState(0x287b, 0x9b7, 0xfa90, 0xafb2, 0x87b5, 0xb2f6, 0x1, 0x1);
        gbc.writeMem(0x287b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9b7, gbc.sp());
        EXPECT(0x287d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02C5
        gbc.setState(0xc52d, 0x34bd, 0xbd0, 0xb8b6, 0x1a16, 0x473b, 0x1, 0x0);
        gbc.writeMem(0xc52d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x34bd, gbc.sp());
        EXPECT(0xc52f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc52d));
        EXPECT(0x12, gbc.readMem(0xc52e));
        // CB 12 02C6
        gbc.setState(0x87d8, 0x2768, 0xf3d0, 0x5542, 0xe944, 0xfc1f, 0x1, 0x1);
        gbc.writeMem(0x87d8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2768, gbc.sp());
        EXPECT(0x87da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87d8));
        EXPECT(0x12, gbc.readMem(0x87d9));
        // CB 12 02C7
        gbc.setState(0x4015, 0x4a2a, 0x2380, 0x1b70, 0x74da, 0x6576, 0x0, 0x0);
        gbc.writeMem(0x4015, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4a2a, gbc.sp());
        EXPECT(0x4017, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02C8
        gbc.setState(0x3ec7, 0xb2af, 0x710, 0x6f3f, 0x4139, 0x71ce, 0x0, 0x0);
        gbc.writeMem(0x3ec7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb2af, gbc.sp());
        EXPECT(0x3ec9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02C9
        gbc.setState(0x108d, 0x687d, 0xde50, 0x5d8c, 0x1211, 0x3bd3, 0x0, 0x1);
        gbc.writeMem(0x108d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x687d, gbc.sp());
        EXPECT(0x108f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02CA
        gbc.setState(0x3943, 0x8a15, 0xa520, 0x3774, 0x7206, 0xc2c6, 0x1, 0x0);
        gbc.writeMem(0x3943, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x8a15, gbc.sp());
        EXPECT(0x3945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02CB
        gbc.setState(0x952f, 0x284c, 0x53f0, 0x20d3, 0x49fb, 0x4e30, 0x1, 0x0);
        gbc.writeMem(0x952f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x284c, gbc.sp());
        EXPECT(0x9531, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x952f));
        EXPECT(0x12, gbc.readMem(0x9530));
        // CB 12 02CC
        gbc.setState(0x86e3, 0xea83, 0x98e0, 0xf9db, 0x12f2, 0x1a0f, 0x0, 0x1);
        gbc.writeMem(0x86e3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xea83, gbc.sp());
        EXPECT(0x86e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86e3));
        EXPECT(0x12, gbc.readMem(0x86e4));
        // CB 12 02CD
        gbc.setState(0x267a, 0xd43c, 0xccf0, 0xc34a, 0x68ea, 0x242, 0x1, 0x1);
        gbc.writeMem(0x267a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd43c, gbc.sp());
        EXPECT(0x267c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02CE
        gbc.setState(0xca61, 0x8d74, 0x3cb0, 0x7d27, 0x5fd3, 0x8119, 0x0, 0x0);
        gbc.writeMem(0xca61, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x8d74, gbc.sp());
        EXPECT(0xca63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca61));
        EXPECT(0x12, gbc.readMem(0xca62));
        // CB 12 02CF
        gbc.setState(0xd296, 0xc52c, 0xd5c0, 0x7175, 0xee09, 0xa88, 0x0, 0x1);
        gbc.writeMem(0xd296, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc52c, gbc.sp());
        EXPECT(0xd298, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd296));
        EXPECT(0x12, gbc.readMem(0xd297));
        // CB 12 02D0
        gbc.setState(0x8699, 0xaa09, 0xcc70, 0x8a1a, 0xee07, 0xfbc, 0x1, 0x1);
        gbc.writeMem(0x8699, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaa09, gbc.sp());
        EXPECT(0x869b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8699));
        EXPECT(0x12, gbc.readMem(0x869a));
        // CB 12 02D1
        gbc.setState(0x6c60, 0x6066, 0x4880, 0x3bd, 0x1192, 0x6f29, 0x1, 0x1);
        gbc.writeMem(0x6c60, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6066, gbc.sp());
        EXPECT(0x6c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02D2
        gbc.setState(0xb924, 0x2129, 0x5bf0, 0xf8a4, 0xf35e, 0xee13, 0x1, 0x1);
        gbc.writeMem(0xb924, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2129, gbc.sp());
        EXPECT(0xb926, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb924));
        EXPECT(0x12, gbc.readMem(0xb925));
        // CB 12 02D3
        gbc.setState(0x4613, 0x5b50, 0x95f0, 0x7ff2, 0x5d25, 0xa969, 0x0, 0x1);
        gbc.writeMem(0x4613, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5b50, gbc.sp());
        EXPECT(0x4615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02D4
        gbc.setState(0xdd2, 0x6a, 0xc0b0, 0xdfed, 0xaec0, 0x19ef, 0x1, 0x1);
        gbc.writeMem(0xdd2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x6a, gbc.sp());
        EXPECT(0xdd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02D5
        gbc.setState(0x4612, 0x3357, 0x47b0, 0x41e5, 0xe134, 0x93fa, 0x1, 0x0);
        gbc.writeMem(0x4612, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3357, gbc.sp());
        EXPECT(0x4614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02D6
        gbc.setState(0x4d7b, 0xacde, 0x17a0, 0x9731, 0xd17, 0x3f7c, 0x0, 0x0);
        gbc.writeMem(0x4d7b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xacde, gbc.sp());
        EXPECT(0x4d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02D7
        gbc.setState(0xb2f7, 0x77c0, 0x3030, 0xb6a1, 0x32d8, 0xa522, 0x0, 0x1);
        gbc.writeMem(0xb2f7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x77c0, gbc.sp());
        EXPECT(0xb2f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2f7));
        EXPECT(0x12, gbc.readMem(0xb2f8));
        // CB 12 02D8
        gbc.setState(0x1038, 0xf3c7, 0xf720, 0x64ef, 0xce1b, 0x5a0c, 0x1, 0x0);
        gbc.writeMem(0x1038, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf3c7, gbc.sp());
        EXPECT(0x103a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02D9
        gbc.setState(0xc684, 0xcca0, 0x8c20, 0xde5, 0xbf68, 0xeda3, 0x0, 0x0);
        gbc.writeMem(0xc684, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xcca0, gbc.sp());
        EXPECT(0xc686, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc684));
        EXPECT(0x12, gbc.readMem(0xc685));
        // CB 12 02DB
        gbc.setState(0x1e72, 0x5d8c, 0x260, 0x9f1e, 0x63d4, 0x8c3d, 0x0, 0x0);
        gbc.writeMem(0x1e72, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x5d8c, gbc.sp());
        EXPECT(0x1e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02DC
        gbc.setState(0xecda, 0xbd5f, 0xa0a0, 0xf920, 0x77e0, 0x35d2, 0x1, 0x0);
        gbc.writeMem(0xecda, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbd5f, gbc.sp());
        EXPECT(0xecdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecda));
        EXPECT(0x12, gbc.readMem(0xecdb));
        // CB 12 02DD
        gbc.setState(0x1978, 0xbec3, 0x50b0, 0x6c67, 0x11f5, 0x9b8b, 0x1, 0x1);
        gbc.writeMem(0x1978, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xbec3, gbc.sp());
        EXPECT(0x197a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02DE
        gbc.setState(0xe0bd, 0x191d, 0xc880, 0xe329, 0x79b0, 0x4806, 0x1, 0x0);
        gbc.writeMem(0xe0bd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x191d, gbc.sp());
        EXPECT(0xe0bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0bd));
        EXPECT(0x12, gbc.readMem(0xe0be));
        // CB 12 02DF
        gbc.setState(0xe357, 0x7a3a, 0x790, 0x8582, 0xff6, 0xac3d, 0x0, 0x0);
        gbc.writeMem(0xe357, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x7a3a, gbc.sp());
        EXPECT(0xe359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe357));
        EXPECT(0x12, gbc.readMem(0xe358));
        // CB 12 02E0
        gbc.setState(0x5f6b, 0x8b63, 0x9720, 0x4c59, 0xf1be, 0xc7ac, 0x0, 0x0);
        gbc.writeMem(0x5f6b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8b63, gbc.sp());
        EXPECT(0x5f6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02E1
        gbc.setState(0x390e, 0x2dff, 0x1dc0, 0x8103, 0x952, 0xb413, 0x1, 0x0);
        gbc.writeMem(0x390e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2dff, gbc.sp());
        EXPECT(0x3910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02E2
        gbc.setState(0x177, 0x362e, 0x4ff0, 0x17a4, 0x4111, 0x33a3, 0x1, 0x0);
        gbc.writeMem(0x177, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x362e, gbc.sp());
        EXPECT(0x179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02E3
        gbc.setState(0x30e7, 0x89a7, 0x7580, 0x49bf, 0xc606, 0x7e6b, 0x1, 0x1);
        gbc.writeMem(0x30e7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x89a7, gbc.sp());
        EXPECT(0x30e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02E4
        gbc.setState(0xcdde, 0x8919, 0x8f70, 0x239, 0x3df, 0x5e6, 0x1, 0x0);
        gbc.writeMem(0xcdde, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x8919, gbc.sp());
        EXPECT(0xcde0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdde));
        EXPECT(0x12, gbc.readMem(0xcddf));
        // CB 12 02E5
        gbc.setState(0x2075, 0x6003, 0x90c0, 0x2b35, 0x1f7d, 0x1a07, 0x0, 0x0);
        gbc.writeMem(0x2075, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x6003, gbc.sp());
        EXPECT(0x2077, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02E6
        gbc.setState(0xd32e, 0xdb1e, 0xecc0, 0x1e02, 0xf757, 0xbdbf, 0x0, 0x0);
        gbc.writeMem(0xd32e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdb1e, gbc.sp());
        EXPECT(0xd330, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32e));
        EXPECT(0x12, gbc.readMem(0xd32f));
        // CB 12 02E7
        gbc.setState(0xa7fd, 0xbb4c, 0x6ec0, 0x238, 0x63ed, 0xee92, 0x0, 0x1);
        gbc.writeMem(0xa7fd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xbb4c, gbc.sp());
        EXPECT(0xa7ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7fd));
        EXPECT(0x12, gbc.readMem(0xa7fe));
        // CB 12 02E8
        gbc.setState(0x1a5e, 0xd817, 0xfc0, 0xd870, 0x709e, 0x49e1, 0x1, 0x0);
        gbc.writeMem(0x1a5e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xd817, gbc.sp());
        EXPECT(0x1a60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02E9
        gbc.setState(0x82c6, 0x481a, 0x37e0, 0xac5, 0x2aa7, 0x9aa5, 0x1, 0x1);
        gbc.writeMem(0x82c6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x481a, gbc.sp());
        EXPECT(0x82c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82c6));
        EXPECT(0x12, gbc.readMem(0x82c7));
        // CB 12 02EA
        gbc.setState(0xc549, 0x4322, 0x5790, 0x45dd, 0x6285, 0x6d59, 0x0, 0x1);
        gbc.writeMem(0xc549, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4322, gbc.sp());
        EXPECT(0xc54b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc549));
        EXPECT(0x12, gbc.readMem(0xc54a));
        // CB 12 02EB
        gbc.setState(0xdfca, 0x6380, 0x4370, 0x3487, 0x6209, 0x3c8, 0x0, 0x1);
        gbc.writeMem(0xdfca, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x6380, gbc.sp());
        EXPECT(0xdfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfca));
        EXPECT(0x12, gbc.readMem(0xdfcb));
        // CB 12 02EC
        gbc.setState(0x304c, 0x3d1c, 0xf220, 0xe4ff, 0x97b2, 0xb3ac, 0x1, 0x0);
        gbc.writeMem(0x304c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x3d1c, gbc.sp());
        EXPECT(0x304e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02ED
        gbc.setState(0x3ee7, 0x66ab, 0x36d0, 0x3a9e, 0x3f7b, 0x76ef, 0x0, 0x0);
        gbc.writeMem(0x3ee7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x66ab, gbc.sp());
        EXPECT(0x3ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02EE
        gbc.setState(0x622a, 0x7169, 0x6d0, 0x23c, 0x47e, 0x8e87, 0x1, 0x0);
        gbc.writeMem(0x622a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7169, gbc.sp());
        EXPECT(0x622c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02EF
        gbc.setState(0x45ca, 0xe900, 0x1b0, 0xf7fb, 0xbfbc, 0x66a, 0x0, 0x1);
        gbc.writeMem(0x45ca, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe900, gbc.sp());
        EXPECT(0x45cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02F0
        gbc.setState(0x510a, 0x5869, 0x2930, 0xa69b, 0x9d85, 0x88c5, 0x1, 0x0);
        gbc.writeMem(0x510a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x5869, gbc.sp());
        EXPECT(0x510c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02F1
        gbc.setState(0x3a5, 0x2204, 0x2830, 0xe1f9, 0xa5eb, 0x74a9, 0x1, 0x1);
        gbc.writeMem(0x3a5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x2204, gbc.sp());
        EXPECT(0x3a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02F2
        gbc.setState(0xa3bc, 0x1ade, 0x8150, 0x9be2, 0x3513, 0x6c6, 0x1, 0x1);
        gbc.writeMem(0xa3bc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1ade, gbc.sp());
        EXPECT(0xa3be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3bc));
        EXPECT(0x12, gbc.readMem(0xa3bd));
        // CB 12 02F3
        gbc.setState(0x605b, 0xefc1, 0xa220, 0x12d8, 0x4258, 0x9021, 0x1, 0x0);
        gbc.writeMem(0x605b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xefc1, gbc.sp());
        EXPECT(0x605d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02F4
        gbc.setState(0x3dce, 0x6aaa, 0x69f0, 0x913f, 0xf019, 0x5a50, 0x0, 0x1);
        gbc.writeMem(0x3dce, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6aaa, gbc.sp());
        EXPECT(0x3dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02F5
        gbc.setState(0xec5c, 0xfeea, 0x360, 0xfeb5, 0x56d1, 0x1b6b, 0x0, 0x0);
        gbc.writeMem(0xec5c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfeea, gbc.sp());
        EXPECT(0xec5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec5c));
        EXPECT(0x12, gbc.readMem(0xec5d));
        // CB 12 02F6
        gbc.setState(0x92bb, 0xa6fc, 0x9870, 0xbca6, 0x80ee, 0x4cf2, 0x0, 0x0);
        gbc.writeMem(0x92bb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa6fc, gbc.sp());
        EXPECT(0x92bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bb));
        EXPECT(0x12, gbc.readMem(0x92bc));
        // CB 12 02F7
        gbc.setState(0x95d9, 0x3b8b, 0x2800, 0x7786, 0x6ce8, 0x5e8c, 0x1, 0x1);
        gbc.writeMem(0x95d9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x3b8b, gbc.sp());
        EXPECT(0x95db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95d9));
        EXPECT(0x12, gbc.readMem(0x95da));
        // CB 12 02F8
        gbc.setState(0x64f9, 0xbc76, 0x7540, 0x3332, 0x3da7, 0x2607, 0x0, 0x1);
        gbc.writeMem(0x64f9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xbc76, gbc.sp());
        EXPECT(0x64fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02F9
        gbc.setState(0xb276, 0xf430, 0x9040, 0x60a3, 0x2156, 0xe8d3, 0x0, 0x0);
        gbc.writeMem(0xb276, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf430, gbc.sp());
        EXPECT(0xb278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb276));
        EXPECT(0x12, gbc.readMem(0xb277));
        // CB 12 02FA
        gbc.setState(0x365d, 0xab59, 0xd290, 0x3f92, 0xfdc9, 0xdff5, 0x0, 0x0);
        gbc.writeMem(0x365d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xab59, gbc.sp());
        EXPECT(0x365f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02FB
        gbc.setState(0x3711, 0x9c5f, 0x4a70, 0xd04d, 0x2ab5, 0x4d08, 0x0, 0x0);
        gbc.writeMem(0x3711, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9c5f, gbc.sp());
        EXPECT(0x3713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 02FC
        gbc.setState(0x5fc1, 0x571a, 0x8dd0, 0xf502, 0x84cc, 0x1657, 0x1, 0x1);
        gbc.writeMem(0x5fc1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x571a, gbc.sp());
        EXPECT(0x5fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02FD
        gbc.setState(0x6fa3, 0x28e2, 0x3410, 0x9041, 0x9d54, 0x95ab, 0x1, 0x1);
        gbc.writeMem(0x6fa3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x28e2, gbc.sp());
        EXPECT(0x6fa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 02FE
        gbc.setState(0x83ba, 0x23ee, 0x6eb0, 0x6269, 0xc798, 0xf4b4, 0x1, 0x1);
        gbc.writeMem(0x83ba, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x23ee, gbc.sp());
        EXPECT(0x83bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83ba));
        EXPECT(0x12, gbc.readMem(0x83bb));
        // CB 12 02FF
        gbc.setState(0x92f6, 0xcad2, 0x1350, 0xec52, 0x8c0d, 0x5a3a, 0x0, 0x0);
        gbc.writeMem(0x92f6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcad2, gbc.sp());
        EXPECT(0x92f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92f6));
        EXPECT(0x12, gbc.readMem(0x92f7));
        // CB 12 0300
        gbc.setState(0x6a72, 0x35d1, 0x4ee0, 0x52e0, 0xd25e, 0xf13b, 0x1, 0x1);
        gbc.writeMem(0x6a72, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x35d1, gbc.sp());
        EXPECT(0x6a74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0301
        gbc.setState(0x5444, 0xd1a9, 0x8a20, 0xae4, 0x723b, 0x6507, 0x1, 0x1);
        gbc.writeMem(0x5444, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd1a9, gbc.sp());
        EXPECT(0x5446, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0302
        gbc.setState(0x8b6c, 0x81f0, 0x74a0, 0xc0f6, 0x7222, 0xd4cf, 0x0, 0x1);
        gbc.writeMem(0x8b6c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x81f0, gbc.sp());
        EXPECT(0x8b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b6c));
        EXPECT(0x12, gbc.readMem(0x8b6d));
        // CB 12 0303
        gbc.setState(0xc8cb, 0x4fa5, 0x1e20, 0x2f90, 0xed6a, 0x8ac4, 0x0, 0x0);
        gbc.writeMem(0xc8cb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4fa5, gbc.sp());
        EXPECT(0xc8cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8cb));
        EXPECT(0x12, gbc.readMem(0xc8cc));
        // CB 12 0304
        gbc.setState(0xde15, 0x6f51, 0xf1f0, 0x26b8, 0x1b29, 0xb384, 0x0, 0x1);
        gbc.writeMem(0xde15, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x6f51, gbc.sp());
        EXPECT(0xde17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde15));
        EXPECT(0x12, gbc.readMem(0xde16));
        // CB 12 0305
        gbc.setState(0x3a81, 0xf65b, 0xd540, 0xe8e8, 0x97c, 0x23cb, 0x0, 0x0);
        gbc.writeMem(0x3a81, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xf65b, gbc.sp());
        EXPECT(0x3a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0306
        gbc.setState(0x46dc, 0xac81, 0x2c80, 0x92c, 0x455a, 0x363d, 0x1, 0x1);
        gbc.writeMem(0x46dc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xac81, gbc.sp());
        EXPECT(0x46de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0307
        gbc.setState(0x290a, 0x1014, 0x4b20, 0x74fd, 0x165c, 0xc99a, 0x1, 0x0);
        gbc.writeMem(0x290a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1014, gbc.sp());
        EXPECT(0x290c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0308
        gbc.setState(0xb3b0, 0x69f5, 0x4e00, 0xeec6, 0x4092, 0xf462, 0x0, 0x0);
        gbc.writeMem(0xb3b0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x69f5, gbc.sp());
        EXPECT(0xb3b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b0));
        EXPECT(0x12, gbc.readMem(0xb3b1));
        // CB 12 0309
        gbc.setState(0xaa86, 0xeb0, 0x7ee0, 0xbce0, 0x8cca, 0x9a22, 0x0, 0x1);
        gbc.writeMem(0xaa86, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xeb0, gbc.sp());
        EXPECT(0xaa88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa86));
        EXPECT(0x12, gbc.readMem(0xaa87));
        // CB 12 030A
        gbc.setState(0xd475, 0x5326, 0x8fa0, 0xb40f, 0xcb71, 0x91ba, 0x1, 0x1);
        gbc.writeMem(0xd475, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x5326, gbc.sp());
        EXPECT(0xd477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd475));
        EXPECT(0x12, gbc.readMem(0xd476));
        // CB 12 030B
        gbc.setState(0xe353, 0x7560, 0xcbb0, 0x791d, 0xfbe4, 0x9412, 0x0, 0x0);
        gbc.writeMem(0xe353, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7560, gbc.sp());
        EXPECT(0xe355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe353));
        EXPECT(0x12, gbc.readMem(0xe354));
        // CB 12 030C
        gbc.setState(0xd35e, 0x2317, 0x8d0, 0xfb06, 0xf478, 0xd748, 0x0, 0x1);
        gbc.writeMem(0xd35e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x2317, gbc.sp());
        EXPECT(0xd360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd35e));
        EXPECT(0x12, gbc.readMem(0xd35f));
        // CB 12 030D
        gbc.setState(0x1a4c, 0xc1a9, 0x6440, 0x721e, 0x30cb, 0x438c, 0x1, 0x0);
        gbc.writeMem(0x1a4c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xc1a9, gbc.sp());
        EXPECT(0x1a4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 030E
        gbc.setState(0x123, 0xeb37, 0xc350, 0xd3a9, 0xcd7e, 0xdca, 0x0, 0x0);
        gbc.writeMem(0x123, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xeb37, gbc.sp());
        EXPECT(0x125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 030F
        gbc.setState(0x430a, 0xb874, 0xbe50, 0xf14b, 0x6a5f, 0xa1c7, 0x1, 0x1);
        gbc.writeMem(0x430a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb874, gbc.sp());
        EXPECT(0x430c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0310
        gbc.setState(0xac0a, 0x35e7, 0x9e10, 0xa344, 0x3fbf, 0xf1b4, 0x1, 0x1);
        gbc.writeMem(0xac0a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x35e7, gbc.sp());
        EXPECT(0xac0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac0a));
        EXPECT(0x12, gbc.readMem(0xac0b));
        // CB 12 0311
        gbc.setState(0xbe8, 0xf623, 0x3eb0, 0x7cff, 0x55a5, 0x2663, 0x0, 0x1);
        gbc.writeMem(0xbe8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xf623, gbc.sp());
        EXPECT(0xbea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0312
        gbc.setState(0x30ef, 0x1150, 0xc750, 0xcc9d, 0x5ccc, 0xf721, 0x0, 0x0);
        gbc.writeMem(0x30ef, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x1150, gbc.sp());
        EXPECT(0x30f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0313
        gbc.setState(0x8423, 0x822a, 0xbb10, 0x46ee, 0x38e7, 0xcba3, 0x0, 0x1);
        gbc.writeMem(0x8423, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x822a, gbc.sp());
        EXPECT(0x8425, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8423));
        EXPECT(0x12, gbc.readMem(0x8424));
        // CB 12 0314
        gbc.setState(0x9f76, 0x6da5, 0x8650, 0xb964, 0x79df, 0x7ed1, 0x0, 0x1);
        gbc.writeMem(0x9f76, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6da5, gbc.sp());
        EXPECT(0x9f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f76));
        EXPECT(0x12, gbc.readMem(0x9f77));
        // CB 12 0315
        gbc.setState(0x9a6f, 0x1d7b, 0x2400, 0xa7e6, 0x12f3, 0xa3f4, 0x0, 0x0);
        gbc.writeMem(0x9a6f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1d7b, gbc.sp());
        EXPECT(0x9a71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a6f));
        EXPECT(0x12, gbc.readMem(0x9a70));
        // CB 12 0316
        gbc.setState(0x3ce0, 0xd01d, 0xa6b0, 0xb908, 0x3603, 0xed75, 0x1, 0x0);
        gbc.writeMem(0x3ce0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd01d, gbc.sp());
        EXPECT(0x3ce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0317
        gbc.setState(0x6d46, 0x6fd, 0x45e0, 0x6d9, 0x2f4e, 0x6a33, 0x1, 0x1);
        gbc.writeMem(0x6d46, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x6fd, gbc.sp());
        EXPECT(0x6d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0318
        gbc.setState(0xae46, 0x516f, 0x8440, 0x65e5, 0x7c15, 0x8307, 0x1, 0x1);
        gbc.writeMem(0xae46, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x516f, gbc.sp());
        EXPECT(0xae48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae46));
        EXPECT(0x12, gbc.readMem(0xae47));
        // CB 12 0319
        gbc.setState(0x31e1, 0xa5df, 0x8f20, 0x57c, 0x239d, 0x1461, 0x0, 0x1);
        gbc.writeMem(0x31e1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa5df, gbc.sp());
        EXPECT(0x31e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 031A
        gbc.setState(0xd277, 0xfafb, 0x4550, 0xc2c5, 0xd901, 0xe0b9, 0x1, 0x1);
        gbc.writeMem(0xd277, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfafb, gbc.sp());
        EXPECT(0xd279, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd277));
        EXPECT(0x12, gbc.readMem(0xd278));
        // CB 12 031B
        gbc.setState(0xd3be, 0x802b, 0xc840, 0xa927, 0xa169, 0x81d6, 0x0, 0x1);
        gbc.writeMem(0xd3be, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x802b, gbc.sp());
        EXPECT(0xd3c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3be));
        EXPECT(0x12, gbc.readMem(0xd3bf));
        // CB 12 031C
        gbc.setState(0xefd2, 0x3702, 0x6a50, 0x76ae, 0xe6ab, 0xf013, 0x1, 0x1);
        gbc.writeMem(0xefd2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3702, gbc.sp());
        EXPECT(0xefd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd2));
        EXPECT(0x12, gbc.readMem(0xefd3));
        // CB 12 031D
        gbc.setState(0x8f4d, 0x21ad, 0xb040, 0x76de, 0xbe0e, 0x5a81, 0x0, 0x0);
        gbc.writeMem(0x8f4d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x21ad, gbc.sp());
        EXPECT(0x8f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f4d));
        EXPECT(0x12, gbc.readMem(0x8f4e));
        // CB 12 031E
        gbc.setState(0x659d, 0xfc7c, 0x1170, 0x5bc4, 0xe58e, 0x4106, 0x1, 0x1);
        gbc.writeMem(0x659d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfc7c, gbc.sp());
        EXPECT(0x659f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 031F
        gbc.setState(0x2a46, 0xc7d1, 0x9240, 0xe14f, 0xbb17, 0x9a56, 0x1, 0x0);
        gbc.writeMem(0x2a46, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc7d1, gbc.sp());
        EXPECT(0x2a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0320
        gbc.setState(0x13dc, 0xedda, 0x210, 0x6108, 0xbbad, 0x5a32, 0x1, 0x1);
        gbc.writeMem(0x13dc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xedda, gbc.sp());
        EXPECT(0x13de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0321
        gbc.setState(0x2690, 0x82a9, 0x4650, 0x2b31, 0x1cfd, 0x889a, 0x1, 0x0);
        gbc.writeMem(0x2690, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x82a9, gbc.sp());
        EXPECT(0x2692, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0322
        gbc.setState(0xb070, 0xedac, 0xb950, 0x2abe, 0xa1ec, 0x413, 0x1, 0x0);
        gbc.writeMem(0xb070, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xedac, gbc.sp());
        EXPECT(0xb072, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb070));
        EXPECT(0x12, gbc.readMem(0xb071));
        // CB 12 0323
        gbc.setState(0xa1fb, 0x7c9d, 0x4f20, 0x9c9e, 0xdd65, 0x6faa, 0x1, 0x1);
        gbc.writeMem(0xa1fb, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7c9d, gbc.sp());
        EXPECT(0xa1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1fb));
        EXPECT(0x12, gbc.readMem(0xa1fc));
        // CB 12 0324
        gbc.setState(0xa545, 0xd398, 0xd470, 0x3ad6, 0x9484, 0x6f78, 0x1, 0x1);
        gbc.writeMem(0xa545, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd398, gbc.sp());
        EXPECT(0xa547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa545));
        EXPECT(0x12, gbc.readMem(0xa546));
        // CB 12 0325
        gbc.setState(0x79e0, 0xc6cf, 0x2450, 0x7a93, 0x325e, 0x2e5e, 0x0, 0x1);
        gbc.writeMem(0x79e0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xc6cf, gbc.sp());
        EXPECT(0x79e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0326
        gbc.setState(0xdb7d, 0x8244, 0x2910, 0x7341, 0x1459, 0x449f, 0x0, 0x1);
        gbc.writeMem(0xdb7d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8244, gbc.sp());
        EXPECT(0xdb7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb7d));
        EXPECT(0x12, gbc.readMem(0xdb7e));
        // CB 12 0327
        gbc.setState(0x4385, 0x9df9, 0xeea0, 0x311b, 0xd312, 0x9d4f, 0x1, 0x1);
        gbc.writeMem(0x4385, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x9df9, gbc.sp());
        EXPECT(0x4387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0328
        gbc.setState(0x690f, 0xd66c, 0xdbb0, 0x956f, 0x3a70, 0x16be, 0x0, 0x1);
        gbc.writeMem(0x690f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xd66c, gbc.sp());
        EXPECT(0x6911, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0329
        gbc.setState(0x4467, 0x7ed8, 0xac70, 0x1fa9, 0x36e5, 0x5cfe, 0x0, 0x0);
        gbc.writeMem(0x4467, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x7ed8, gbc.sp());
        EXPECT(0x4469, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 032B
        gbc.setState(0x4dde, 0x2e82, 0x3740, 0x7f13, 0x7218, 0x1b25, 0x1, 0x0);
        gbc.writeMem(0x4dde, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x2e82, gbc.sp());
        EXPECT(0x4de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 032C
        gbc.setState(0xc68e, 0xf134, 0x8c60, 0xfdb9, 0x4356, 0x16df, 0x1, 0x1);
        gbc.writeMem(0xc68e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf134, gbc.sp());
        EXPECT(0xc690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc68e));
        EXPECT(0x12, gbc.readMem(0xc68f));
        // CB 12 032D
        gbc.setState(0xa879, 0x9523, 0x4570, 0x6f3c, 0x3459, 0x7f11, 0x0, 0x0);
        gbc.writeMem(0xa879, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x9523, gbc.sp());
        EXPECT(0xa87b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa879));
        EXPECT(0x12, gbc.readMem(0xa87a));
        // CB 12 032E
        gbc.setState(0xc8b6, 0x535a, 0xce10, 0xf9f6, 0x65fc, 0x6d96, 0x1, 0x0);
        gbc.writeMem(0xc8b6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x535a, gbc.sp());
        EXPECT(0xc8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8b6));
        EXPECT(0x12, gbc.readMem(0xc8b7));
        // CB 12 032F
        gbc.setState(0x1719, 0x9a2f, 0x4360, 0x62bf, 0xa989, 0x1bc6, 0x1, 0x1);
        gbc.writeMem(0x1719, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9a2f, gbc.sp());
        EXPECT(0x171b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0332
        gbc.setState(0x749d, 0x4ce8, 0xde00, 0x737e, 0x8a87, 0x9015, 0x1, 0x1);
        gbc.writeMem(0x749d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4ce8, gbc.sp());
        EXPECT(0x749f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0333
        gbc.setState(0xc59, 0xc97, 0xcaf0, 0xe359, 0x4db5, 0x4104, 0x1, 0x1);
        gbc.writeMem(0xc59, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc97, gbc.sp());
        EXPECT(0xc5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0334
        gbc.setState(0xfca, 0x749, 0x4c50, 0xa48, 0x911b, 0x6bf7, 0x0, 0x1);
        gbc.writeMem(0xfca, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x749, gbc.sp());
        EXPECT(0xfcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0335
        gbc.setState(0x185b, 0x1648, 0x9560, 0xb8ed, 0x3b16, 0xf98, 0x1, 0x0);
        gbc.writeMem(0x185b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1648, gbc.sp());
        EXPECT(0x185d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0336
        gbc.setState(0x577f, 0x46a1, 0x3de0, 0x4780, 0x9a04, 0xd660, 0x0, 0x0);
        gbc.writeMem(0x577f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x46a1, gbc.sp());
        EXPECT(0x5781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0337
        gbc.setState(0x3378, 0x3121, 0x1660, 0x9e9c, 0x476d, 0xa5ff, 0x1, 0x1);
        gbc.writeMem(0x3378, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3121, gbc.sp());
        EXPECT(0x337a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0338
        gbc.setState(0xa353, 0xdfcc, 0x3490, 0xb1de, 0x229b, 0xbb14, 0x0, 0x1);
        gbc.writeMem(0xa353, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xdfcc, gbc.sp());
        EXPECT(0xa355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa353));
        EXPECT(0x12, gbc.readMem(0xa354));
        // CB 12 033A
        gbc.setState(0xd4c6, 0x9ad2, 0x1300, 0xab2c, 0x7dde, 0x2b01, 0x0, 0x1);
        gbc.writeMem(0xd4c6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x9ad2, gbc.sp());
        EXPECT(0xd4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4c6));
        EXPECT(0x12, gbc.readMem(0xd4c7));
        // CB 12 033B
        gbc.setState(0x73ac, 0xd78b, 0x3c60, 0xa723, 0x99b3, 0x2381, 0x0, 0x0);
        gbc.writeMem(0x73ac, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd78b, gbc.sp());
        EXPECT(0x73ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 033C
        gbc.setState(0x7d65, 0x16a3, 0x5b50, 0xdc00, 0x8a11, 0x833, 0x1, 0x0);
        gbc.writeMem(0x7d65, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x16a3, gbc.sp());
        EXPECT(0x7d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 033D
        gbc.setState(0xe79b, 0x3811, 0x940, 0x71fa, 0x9858, 0xfb81, 0x0, 0x1);
        gbc.writeMem(0xe79b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3811, gbc.sp());
        EXPECT(0xe79d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe79b));
        EXPECT(0x12, gbc.readMem(0xe79c));
        // CB 12 033E
        gbc.setState(0x261f, 0x2535, 0x4ca0, 0xe723, 0x193f, 0x18c9, 0x0, 0x0);
        gbc.writeMem(0x261f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x2535, gbc.sp());
        EXPECT(0x2621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 033F
        gbc.setState(0xc6b9, 0xaec, 0x39b0, 0x1cd4, 0xd4a5, 0xf297, 0x0, 0x0);
        gbc.writeMem(0xc6b9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xaec, gbc.sp());
        EXPECT(0xc6bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6b9));
        EXPECT(0x12, gbc.readMem(0xc6ba));
        // CB 12 0340
        gbc.setState(0x7d5e, 0x953f, 0xaed0, 0x909a, 0xefde, 0xa6fd, 0x1, 0x1);
        gbc.writeMem(0x7d5e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x953f, gbc.sp());
        EXPECT(0x7d60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0341
        gbc.setState(0xd20, 0x7eb4, 0x2440, 0x95bf, 0xa7d0, 0x1194, 0x0, 0x1);
        gbc.writeMem(0xd20, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7eb4, gbc.sp());
        EXPECT(0xd22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0342
        gbc.setState(0xc747, 0x86d0, 0x8060, 0x2d75, 0x4779, 0xd9c5, 0x1, 0x0);
        gbc.writeMem(0xc747, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x86d0, gbc.sp());
        EXPECT(0xc749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc747));
        EXPECT(0x12, gbc.readMem(0xc748));
        // CB 12 0343
        gbc.setState(0x4cb0, 0x8a8b, 0x4fc0, 0xcf05, 0x4a46, 0x96e2, 0x1, 0x1);
        gbc.writeMem(0x4cb0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8a8b, gbc.sp());
        EXPECT(0x4cb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0344
        gbc.setState(0x58bd, 0xd930, 0x6eb0, 0xea3f, 0xbbf3, 0x13cf, 0x0, 0x0);
        gbc.writeMem(0x58bd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd930, gbc.sp());
        EXPECT(0x58bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0345
        gbc.setState(0x2b8f, 0x87d5, 0x82f0, 0x76db, 0xe5d9, 0x224b, 0x0, 0x0);
        gbc.writeMem(0x2b8f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x87d5, gbc.sp());
        EXPECT(0x2b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0346
        gbc.setState(0xbb93, 0x58c9, 0xdce0, 0x436d, 0x8d6e, 0x751a, 0x1, 0x1);
        gbc.writeMem(0xbb93, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x58c9, gbc.sp());
        EXPECT(0xbb95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb93));
        EXPECT(0x12, gbc.readMem(0xbb94));
        // CB 12 0347
        gbc.setState(0xdc6b, 0x901d, 0xddb0, 0x54c7, 0xb235, 0xe48c, 0x0, 0x1);
        gbc.writeMem(0xdc6b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x901d, gbc.sp());
        EXPECT(0xdc6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc6b));
        EXPECT(0x12, gbc.readMem(0xdc6c));
        // CB 12 0348
        gbc.setState(0x4b26, 0x6238, 0x7900, 0xd8b7, 0x81b3, 0xaf82, 0x1, 0x1);
        gbc.writeMem(0x4b26, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x6238, gbc.sp());
        EXPECT(0x4b28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0349
        gbc.setState(0xe634, 0x69b8, 0x2e00, 0xaaf6, 0x296d, 0xda74, 0x1, 0x1);
        gbc.writeMem(0xe634, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x69b8, gbc.sp());
        EXPECT(0xe636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe634));
        EXPECT(0x12, gbc.readMem(0xe635));
        // CB 12 034A
        gbc.setState(0xd8a7, 0x1bd7, 0xc2a0, 0x1124, 0x8b9a, 0x72c4, 0x1, 0x0);
        gbc.writeMem(0xd8a7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1bd7, gbc.sp());
        EXPECT(0xd8a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a7));
        EXPECT(0x12, gbc.readMem(0xd8a8));
        // CB 12 034B
        gbc.setState(0xaad1, 0x29bc, 0x2c80, 0x7f32, 0xeb09, 0xcaca, 0x0, 0x0);
        gbc.writeMem(0xaad1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x29bc, gbc.sp());
        EXPECT(0xaad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaad1));
        EXPECT(0x12, gbc.readMem(0xaad2));
        // CB 12 034C
        gbc.setState(0x39bc, 0xd53a, 0x5c00, 0x9935, 0x2836, 0xd559, 0x1, 0x1);
        gbc.writeMem(0x39bc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xd53a, gbc.sp());
        EXPECT(0x39be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 034D
        gbc.setState(0x2e62, 0xf9a4, 0xeef0, 0x8ea5, 0xfb7f, 0xef37, 0x0, 0x0);
        gbc.writeMem(0x2e62, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf9a4, gbc.sp());
        EXPECT(0x2e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 034E
        gbc.setState(0xe5ac, 0x2acf, 0x2ae0, 0xc999, 0x28e3, 0x366d, 0x0, 0x0);
        gbc.writeMem(0xe5ac, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2acf, gbc.sp());
        EXPECT(0xe5ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5ac));
        EXPECT(0x12, gbc.readMem(0xe5ad));
        // CB 12 034F
        gbc.setState(0x901c, 0xe61f, 0xd280, 0x7d54, 0x579a, 0xccb4, 0x0, 0x0);
        gbc.writeMem(0x901c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe61f, gbc.sp());
        EXPECT(0x901e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x901c));
        EXPECT(0x12, gbc.readMem(0x901d));
        // CB 12 0350
        gbc.setState(0x5b7c, 0x3f6e, 0x6f0, 0xd7dc, 0x2529, 0x7a8f, 0x0, 0x1);
        gbc.writeMem(0x5b7c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x3f6e, gbc.sp());
        EXPECT(0x5b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0351
        gbc.setState(0xbda6, 0x15cc, 0xd60, 0xf2af, 0xc064, 0xabe9, 0x0, 0x1);
        gbc.writeMem(0xbda6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x15cc, gbc.sp());
        EXPECT(0xbda8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbda6));
        EXPECT(0x12, gbc.readMem(0xbda7));
        // CB 12 0352
        gbc.setState(0x6459, 0xa936, 0x5b70, 0x12dc, 0xc790, 0x2315, 0x1, 0x1);
        gbc.writeMem(0x6459, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xa936, gbc.sp());
        EXPECT(0x645b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0354
        gbc.setState(0xdaac, 0x6637, 0xac70, 0x9223, 0xd70f, 0xcf1a, 0x1, 0x0);
        gbc.writeMem(0xdaac, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x6637, gbc.sp());
        EXPECT(0xdaae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaac));
        EXPECT(0x12, gbc.readMem(0xdaad));
        // CB 12 0355
        gbc.setState(0xa57a, 0xa38f, 0xa5e0, 0x8288, 0xaf36, 0xe79e, 0x0, 0x0);
        gbc.writeMem(0xa57a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa38f, gbc.sp());
        EXPECT(0xa57c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa57a));
        EXPECT(0x12, gbc.readMem(0xa57b));
        // CB 12 0356
        gbc.setState(0xe3e6, 0xb4da, 0x47d0, 0xad79, 0x85ae, 0x3f59, 0x0, 0x0);
        gbc.writeMem(0xe3e6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb4da, gbc.sp());
        EXPECT(0xe3e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3e6));
        EXPECT(0x12, gbc.readMem(0xe3e7));
        // CB 12 0357
        gbc.setState(0xd682, 0xd432, 0x4ec0, 0xc8b9, 0xb60, 0x52e9, 0x0, 0x1);
        gbc.writeMem(0xd682, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd432, gbc.sp());
        EXPECT(0xd684, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd682));
        EXPECT(0x12, gbc.readMem(0xd683));
        // CB 12 0358
        gbc.setState(0x281d, 0x5a56, 0x8a90, 0xc0f1, 0x784f, 0x6507, 0x1, 0x1);
        gbc.writeMem(0x281d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5a56, gbc.sp());
        EXPECT(0x281f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0359
        gbc.setState(0xbf5d, 0x53d5, 0x3b50, 0xe2ed, 0xc91c, 0xd42b, 0x1, 0x0);
        gbc.writeMem(0xbf5d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x53d5, gbc.sp());
        EXPECT(0xbf5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf5d));
        EXPECT(0x12, gbc.readMem(0xbf5e));
        // CB 12 035A
        gbc.setState(0xdbe8, 0x330f, 0x1040, 0xb2bb, 0xa8ed, 0x9232, 0x1, 0x1);
        gbc.writeMem(0xdbe8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x330f, gbc.sp());
        EXPECT(0xdbea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbe8));
        EXPECT(0x12, gbc.readMem(0xdbe9));
        // CB 12 035B
        gbc.setState(0x21cc, 0x9b8, 0x19a0, 0xbfe1, 0xd036, 0x2b59, 0x0, 0x0);
        gbc.writeMem(0x21cc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9b8, gbc.sp());
        EXPECT(0x21ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 035C
        gbc.setState(0x54e, 0x2eb1, 0xb380, 0x214e, 0x5b62, 0xfec3, 0x1, 0x0);
        gbc.writeMem(0x54e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x2eb1, gbc.sp());
        EXPECT(0x550, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 035D
        gbc.setState(0x597, 0xf866, 0x8370, 0xd36b, 0x5834, 0xc8c0, 0x0, 0x1);
        gbc.writeMem(0x597, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf866, gbc.sp());
        EXPECT(0x599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 035E
        gbc.setState(0x4a00, 0x3299, 0xa2a0, 0x4b25, 0xecd1, 0xf387, 0x0, 0x1);
        gbc.writeMem(0x4a00, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x3299, gbc.sp());
        EXPECT(0x4a02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 035F
        gbc.setState(0xb65e, 0xf0bf, 0xa880, 0x7af0, 0x8aaa, 0xc39a, 0x1, 0x0);
        gbc.writeMem(0xb65e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf0bf, gbc.sp());
        EXPECT(0xb660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb65e));
        EXPECT(0x12, gbc.readMem(0xb65f));
        // CB 12 0360
        gbc.setState(0xce41, 0x9706, 0xac20, 0xa3e2, 0x5554, 0x9d37, 0x0, 0x1);
        gbc.writeMem(0xce41, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9706, gbc.sp());
        EXPECT(0xce43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce41));
        EXPECT(0x12, gbc.readMem(0xce42));
        // CB 12 0361
        gbc.setState(0xb08c, 0x3063, 0x7a00, 0x1d8e, 0x9de5, 0xda2e, 0x0, 0x1);
        gbc.writeMem(0xb08c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x3063, gbc.sp());
        EXPECT(0xb08e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb08c));
        EXPECT(0x12, gbc.readMem(0xb08d));
        // CB 12 0362
        gbc.setState(0x4d4f, 0xd12d, 0x7c0, 0x142b, 0x1799, 0xc21f, 0x1, 0x0);
        gbc.writeMem(0x4d4f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd12d, gbc.sp());
        EXPECT(0x4d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0363
        gbc.setState(0xddc9, 0xf029, 0xca40, 0xc390, 0x80a6, 0x87e5, 0x0, 0x1);
        gbc.writeMem(0xddc9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xf029, gbc.sp());
        EXPECT(0xddcb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc9));
        EXPECT(0x12, gbc.readMem(0xddca));
        // CB 12 0364
        gbc.setState(0xfbd, 0x15d5, 0x9490, 0x6a86, 0xced1, 0x871d, 0x1, 0x0);
        gbc.writeMem(0xfbd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x15d5, gbc.sp());
        EXPECT(0xfbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0365
        gbc.setState(0x1d67, 0x875d, 0x560, 0x63f3, 0xce42, 0xfdc9, 0x1, 0x1);
        gbc.writeMem(0x1d67, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x875d, gbc.sp());
        EXPECT(0x1d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0366
        gbc.setState(0xe62b, 0xec5a, 0x99c0, 0x52bb, 0xa16b, 0xe1f, 0x1, 0x1);
        gbc.writeMem(0xe62b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xec5a, gbc.sp());
        EXPECT(0xe62d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62b));
        EXPECT(0x12, gbc.readMem(0xe62c));
        // CB 12 0367
        gbc.setState(0xea57, 0x2d32, 0x2ca0, 0xba38, 0x34d, 0x693c, 0x1, 0x0);
        gbc.writeMem(0xea57, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x2d32, gbc.sp());
        EXPECT(0xea59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea57));
        EXPECT(0x12, gbc.readMem(0xea58));
        // CB 12 0368
        gbc.setState(0x2e12, 0x7533, 0x90, 0xacbe, 0x6bea, 0xa917, 0x0, 0x0);
        gbc.writeMem(0x2e12, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7533, gbc.sp());
        EXPECT(0x2e14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0369
        gbc.setState(0xb832, 0x9df9, 0x37d0, 0x17d4, 0xa944, 0x77fc, 0x1, 0x1);
        gbc.writeMem(0xb832, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9df9, gbc.sp());
        EXPECT(0xb834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb832));
        EXPECT(0x12, gbc.readMem(0xb833));
        // CB 12 036A
        gbc.setState(0x9527, 0x7610, 0xe810, 0xae7c, 0x5769, 0x9973, 0x0, 0x0);
        gbc.writeMem(0x9527, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7610, gbc.sp());
        EXPECT(0x9529, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9527));
        EXPECT(0x12, gbc.readMem(0x9528));
        // CB 12 036B
        gbc.setState(0x356a, 0x865a, 0xfba0, 0xcd8c, 0xb149, 0x71c5, 0x1, 0x1);
        gbc.writeMem(0x356a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x865a, gbc.sp());
        EXPECT(0x356c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 036C
        gbc.setState(0x9445, 0xa9c2, 0x7e00, 0x9062, 0x5a84, 0x9ce7, 0x0, 0x0);
        gbc.writeMem(0x9445, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa9c2, gbc.sp());
        EXPECT(0x9447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9445));
        EXPECT(0x12, gbc.readMem(0x9446));
        // CB 12 036D
        gbc.setState(0x366c, 0xc3a2, 0xc90, 0x2c3a, 0x4d5d, 0x61c6, 0x0, 0x1);
        gbc.writeMem(0x366c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc3a2, gbc.sp());
        EXPECT(0x366e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 036E
        gbc.setState(0x427c, 0xe6a2, 0xea50, 0xba4b, 0xdc7d, 0x602d, 0x1, 0x1);
        gbc.writeMem(0x427c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe6a2, gbc.sp());
        EXPECT(0x427e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 036F
        gbc.setState(0x54db, 0xb4bd, 0x1d20, 0xabb4, 0xd987, 0x618d, 0x0, 0x0);
        gbc.writeMem(0x54db, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb4bd, gbc.sp());
        EXPECT(0x54dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0370
        gbc.setState(0xa6b5, 0x37e1, 0xff80, 0xa5af, 0x5e5b, 0x7797, 0x0, 0x1);
        gbc.writeMem(0xa6b5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x37e1, gbc.sp());
        EXPECT(0xa6b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b5));
        EXPECT(0x12, gbc.readMem(0xa6b6));
        // CB 12 0372
        gbc.setState(0x152, 0x7315, 0xe660, 0xb859, 0x997d, 0xea28, 0x0, 0x0);
        gbc.writeMem(0x152, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7315, gbc.sp());
        EXPECT(0x154, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0373
        gbc.setState(0xcb92, 0x699b, 0x4120, 0xf370, 0x8528, 0x54d7, 0x0, 0x0);
        gbc.writeMem(0xcb92, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x699b, gbc.sp());
        EXPECT(0xcb94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb92));
        EXPECT(0x12, gbc.readMem(0xcb93));
        // CB 12 0374
        gbc.setState(0xadbe, 0xa759, 0x61a0, 0xe7f8, 0x69c, 0x671, 0x1, 0x1);
        gbc.writeMem(0xadbe, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa759, gbc.sp());
        EXPECT(0xadc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadbe));
        EXPECT(0x12, gbc.readMem(0xadbf));
        // CB 12 0375
        gbc.setState(0x6514, 0xb5fe, 0xa060, 0x43d5, 0x107e, 0x65b9, 0x1, 0x1);
        gbc.writeMem(0x6514, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xb5fe, gbc.sp());
        EXPECT(0x6516, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0376
        gbc.setState(0x86bc, 0xfef8, 0x4f90, 0x324c, 0x7d12, 0x5cd5, 0x0, 0x1);
        gbc.writeMem(0x86bc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xfef8, gbc.sp());
        EXPECT(0x86be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86bc));
        EXPECT(0x12, gbc.readMem(0x86bd));
        // CB 12 0377
        gbc.setState(0x9851, 0x16f4, 0x7f90, 0x589f, 0x23cf, 0xa108, 0x1, 0x0);
        gbc.writeMem(0x9851, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x16f4, gbc.sp());
        EXPECT(0x9853, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9851));
        EXPECT(0x12, gbc.readMem(0x9852));
        // CB 12 0379
        gbc.setState(0x51fc, 0x2753, 0x41d0, 0xef4a, 0x96fb, 0x6752, 0x1, 0x0);
        gbc.writeMem(0x51fc, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x2753, gbc.sp());
        EXPECT(0x51fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 037A
        gbc.setState(0x40fd, 0x9357, 0xc8e0, 0x6ffe, 0x5dec, 0x5d0f, 0x1, 0x0);
        gbc.writeMem(0x40fd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9357, gbc.sp());
        EXPECT(0x40ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 037B
        gbc.setState(0x4112, 0x7a68, 0x4a10, 0x450a, 0x8a55, 0x7dd0, 0x1, 0x0);
        gbc.writeMem(0x4112, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7a68, gbc.sp());
        EXPECT(0x4114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 037C
        gbc.setState(0x5890, 0x95bf, 0x7190, 0x6525, 0x92aa, 0x3ef5, 0x1, 0x1);
        gbc.writeMem(0x5890, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x95bf, gbc.sp());
        EXPECT(0x5892, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 037D
        gbc.setState(0xa158, 0x16a1, 0x99c0, 0x8769, 0x1ff9, 0x931, 0x1, 0x0);
        gbc.writeMem(0xa158, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x16a1, gbc.sp());
        EXPECT(0xa15a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa158));
        EXPECT(0x12, gbc.readMem(0xa159));
        // CB 12 037E
        gbc.setState(0x7f70, 0x1eac, 0x1c90, 0x9e19, 0x3bd1, 0x278d, 0x1, 0x0);
        gbc.writeMem(0x7f70, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1eac, gbc.sp());
        EXPECT(0x7f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 037F
        gbc.setState(0xd2d0, 0xdaff, 0x3e00, 0x6895, 0x3ed1, 0x2ecd, 0x1, 0x0);
        gbc.writeMem(0xd2d0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdaff, gbc.sp());
        EXPECT(0xd2d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2d0));
        EXPECT(0x12, gbc.readMem(0xd2d1));
        // CB 12 0380
        gbc.setState(0xc389, 0x1b00, 0x79d0, 0xc680, 0x78c, 0x4d1e, 0x0, 0x1);
        gbc.writeMem(0xc389, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1b00, gbc.sp());
        EXPECT(0xc38b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc389));
        EXPECT(0x12, gbc.readMem(0xc38a));
        // CB 12 0381
        gbc.setState(0x554a, 0x8b50, 0x150, 0xe3f6, 0x812a, 0xb7cf, 0x1, 0x1);
        gbc.writeMem(0x554a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x8b50, gbc.sp());
        EXPECT(0x554c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0382
        gbc.setState(0xafe3, 0xf30f, 0x1ac0, 0x78ef, 0x529d, 0x8193, 0x1, 0x0);
        gbc.writeMem(0xafe3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf30f, gbc.sp());
        EXPECT(0xafe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe3));
        EXPECT(0x12, gbc.readMem(0xafe4));
        // CB 12 0383
        gbc.setState(0x9416, 0x27ab, 0xcf90, 0xcb0a, 0x14d5, 0xbe0a, 0x0, 0x0);
        gbc.writeMem(0x9416, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x27ab, gbc.sp());
        EXPECT(0x9418, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9416));
        EXPECT(0x12, gbc.readMem(0x9417));
        // CB 12 0384
        gbc.setState(0x39ad, 0xe6ba, 0x49b0, 0xec75, 0x9cdb, 0xb8e, 0x0, 0x1);
        gbc.writeMem(0x39ad, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xe6ba, gbc.sp());
        EXPECT(0x39af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0385
        gbc.setState(0x5cd, 0xf24f, 0x10d0, 0x9df2, 0x79f6, 0xc688, 0x1, 0x1);
        gbc.writeMem(0x5cd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xf24f, gbc.sp());
        EXPECT(0x5cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0386
        gbc.setState(0x6153, 0x612d, 0x78b0, 0x7936, 0x819f, 0xf49e, 0x1, 0x1);
        gbc.writeMem(0x6153, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x612d, gbc.sp());
        EXPECT(0x6155, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0387
        gbc.setState(0xec4e, 0x1e2f, 0x34e0, 0x6ec6, 0x4a1c, 0x990e, 0x0, 0x0);
        gbc.writeMem(0xec4e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1e2f, gbc.sp());
        EXPECT(0xec50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec4e));
        EXPECT(0x12, gbc.readMem(0xec4f));
        // CB 12 0388
        gbc.setState(0xbba5, 0xd5f1, 0x1f20, 0xf9f, 0xad70, 0x6144, 0x0, 0x0);
        gbc.writeMem(0xbba5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd5f1, gbc.sp());
        EXPECT(0xbba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbba5));
        EXPECT(0x12, gbc.readMem(0xbba6));
        // CB 12 0389
        gbc.setState(0x71be, 0x3b91, 0x7ca0, 0xbcb6, 0x9d27, 0xba1f, 0x0, 0x1);
        gbc.writeMem(0x71be, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x3b91, gbc.sp());
        EXPECT(0x71c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 038A
        gbc.setState(0x74bf, 0x41b8, 0x19f0, 0xdb66, 0x6618, 0x52b5, 0x1, 0x1);
        gbc.writeMem(0x74bf, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x41b8, gbc.sp());
        EXPECT(0x74c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 038B
        gbc.setState(0x26de, 0x2256, 0xdb40, 0x2618, 0x1a6b, 0x3f6e, 0x1, 0x0);
        gbc.writeMem(0x26de, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x2256, gbc.sp());
        EXPECT(0x26e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 038C
        gbc.setState(0xaa4f, 0x9a35, 0x4cc0, 0xc251, 0xda9e, 0xabf, 0x0, 0x1);
        gbc.writeMem(0xaa4f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x9a35, gbc.sp());
        EXPECT(0xaa51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa4f));
        EXPECT(0x12, gbc.readMem(0xaa50));
        // CB 12 038D
        gbc.setState(0x9995, 0x9d7f, 0x4540, 0x6828, 0xe592, 0x266b, 0x0, 0x1);
        gbc.writeMem(0x9995, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x9d7f, gbc.sp());
        EXPECT(0x9997, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9995));
        EXPECT(0x12, gbc.readMem(0x9996));
        // CB 12 038E
        gbc.setState(0x9622, 0xcba, 0x9c60, 0x2d0, 0x3f98, 0x9252, 0x0, 0x1);
        gbc.writeMem(0x9622, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xcba, gbc.sp());
        EXPECT(0x9624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9622));
        EXPECT(0x12, gbc.readMem(0x9623));
        // CB 12 038F
        gbc.setState(0x1a6b, 0x4e03, 0x81a0, 0xd274, 0x9271, 0xd2f4, 0x0, 0x1);
        gbc.writeMem(0x1a6b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4e03, gbc.sp());
        EXPECT(0x1a6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0390
        gbc.setState(0xd228, 0x91b2, 0x6050, 0x240a, 0xfc4, 0x5a1d, 0x0, 0x0);
        gbc.writeMem(0xd228, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x91b2, gbc.sp());
        EXPECT(0xd22a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd228));
        EXPECT(0x12, gbc.readMem(0xd229));
        // CB 12 0391
        gbc.setState(0xcfc4, 0xaaf7, 0xb330, 0x484e, 0x4548, 0xdfe5, 0x1, 0x0);
        gbc.writeMem(0xcfc4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xaaf7, gbc.sp());
        EXPECT(0xcfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc4));
        EXPECT(0x12, gbc.readMem(0xcfc5));
        // CB 12 0392
        gbc.setState(0x5727, 0x342f, 0x8170, 0xe126, 0xa4b7, 0xda43, 0x0, 0x0);
        gbc.writeMem(0x5727, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x342f, gbc.sp());
        EXPECT(0x5729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 0393
        gbc.setState(0x963b, 0xb890, 0x1f80, 0xab77, 0xb375, 0xcea8, 0x1, 0x1);
        gbc.writeMem(0x963b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb890, gbc.sp());
        EXPECT(0x963d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x963b));
        EXPECT(0x12, gbc.readMem(0x963c));
        // CB 12 0394
        gbc.setState(0xb033, 0x79e2, 0x1610, 0x88d3, 0x7f5d, 0xe13b, 0x0, 0x1);
        gbc.writeMem(0xb033, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x79e2, gbc.sp());
        EXPECT(0xb035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb033));
        EXPECT(0x12, gbc.readMem(0xb034));
        // CB 12 0395
        gbc.setState(0x46b6, 0x6143, 0x1420, 0x697c, 0x5f41, 0x7a58, 0x1, 0x0);
        gbc.writeMem(0x46b6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6143, gbc.sp());
        EXPECT(0x46b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0396
        gbc.setState(0xde30, 0x745e, 0xf900, 0x7dcd, 0x4cd1, 0xfd4e, 0x0, 0x0);
        gbc.writeMem(0xde30, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x745e, gbc.sp());
        EXPECT(0xde32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde30));
        EXPECT(0x12, gbc.readMem(0xde31));
        // CB 12 0397
        gbc.setState(0x3939, 0x3d3f, 0x5060, 0x9c89, 0x33ea, 0xb24a, 0x1, 0x0);
        gbc.writeMem(0x3939, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x3d3f, gbc.sp());
        EXPECT(0x393b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 0398
        gbc.setState(0xc20c, 0xc0bd, 0x6e60, 0x31ee, 0x3dd1, 0xd008, 0x0, 0x0);
        gbc.writeMem(0xc20c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc0bd, gbc.sp());
        EXPECT(0xc20e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc20c));
        EXPECT(0x12, gbc.readMem(0xc20d));
        // CB 12 0399
        gbc.setState(0x103d, 0x94b2, 0x9290, 0x9846, 0x1787, 0x2ed3, 0x1, 0x1);
        gbc.writeMem(0x103d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x94b2, gbc.sp());
        EXPECT(0x103f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 039A
        gbc.setState(0x344d, 0xea95, 0x95d0, 0x8b54, 0xdc69, 0xc6, 0x0, 0x0);
        gbc.writeMem(0x344d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xea95, gbc.sp());
        EXPECT(0x344f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 039B
        gbc.setState(0x58cd, 0xa196, 0x2640, 0x61, 0xdbab, 0xd6f3, 0x0, 0x1);
        gbc.writeMem(0x58cd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa196, gbc.sp());
        EXPECT(0x58cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 039C
        gbc.setState(0xc04d, 0xa81c, 0x6fd0, 0x3ebf, 0x9b03, 0xaa1, 0x0, 0x1);
        gbc.writeMem(0xc04d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa81c, gbc.sp());
        EXPECT(0xc04f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc04d));
        EXPECT(0x12, gbc.readMem(0xc04e));
        // CB 12 039D
        gbc.setState(0x6d78, 0xf4ab, 0x9be0, 0x51d2, 0xcfd7, 0x11ae, 0x1, 0x0);
        gbc.writeMem(0x6d78, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf4ab, gbc.sp());
        EXPECT(0x6d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 039E
        gbc.setState(0xb089, 0x83ae, 0x5ea0, 0x24eb, 0xa3dc, 0x792c, 0x1, 0x1);
        gbc.writeMem(0xb089, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x83ae, gbc.sp());
        EXPECT(0xb08b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb089));
        EXPECT(0x12, gbc.readMem(0xb08a));
        // CB 12 039F
        gbc.setState(0x8988, 0x6e31, 0xb210, 0x85e9, 0x7766, 0x7770, 0x0, 0x0);
        gbc.writeMem(0x8988, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6e31, gbc.sp());
        EXPECT(0x898a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8988));
        EXPECT(0x12, gbc.readMem(0x8989));
        // CB 12 03A0
        gbc.setState(0xdf6a, 0x4e8a, 0x1d20, 0xba49, 0x5da3, 0x5679, 0x0, 0x1);
        gbc.writeMem(0xdf6a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x4e8a, gbc.sp());
        EXPECT(0xdf6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf6a));
        EXPECT(0x12, gbc.readMem(0xdf6b));
        // CB 12 03A1
        gbc.setState(0xceea, 0xf1a1, 0xa8c0, 0x6c55, 0xb411, 0x399c, 0x1, 0x1);
        gbc.writeMem(0xceea, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf1a1, gbc.sp());
        EXPECT(0xceec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xceea));
        EXPECT(0x12, gbc.readMem(0xceeb));
        // CB 12 03A2
        gbc.setState(0xcfad, 0x4e80, 0xf2b0, 0x90fc, 0x184e, 0xbf1a, 0x0, 0x0);
        gbc.writeMem(0xcfad, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x4e80, gbc.sp());
        EXPECT(0xcfaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfad));
        EXPECT(0x12, gbc.readMem(0xcfae));
        // CB 12 03A3
        gbc.setState(0xa7a5, 0x6ba7, 0xaf30, 0x850d, 0x1361, 0xcc15, 0x0, 0x0);
        gbc.writeMem(0xa7a5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6ba7, gbc.sp());
        EXPECT(0xa7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7a5));
        EXPECT(0x12, gbc.readMem(0xa7a6));
        // CB 12 03A4
        gbc.setState(0xe088, 0xf50d, 0xa6d0, 0x2596, 0xf51d, 0x2cf2, 0x0, 0x1);
        gbc.writeMem(0xe088, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf50d, gbc.sp());
        EXPECT(0xe08a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe088));
        EXPECT(0x12, gbc.readMem(0xe089));
        // CB 12 03A5
        gbc.setState(0x81ed, 0xb3a8, 0x2800, 0x962c, 0x151e, 0xa729, 0x0, 0x1);
        gbc.writeMem(0x81ed, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb3a8, gbc.sp());
        EXPECT(0x81ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ed));
        EXPECT(0x12, gbc.readMem(0x81ee));
        // CB 12 03A6
        gbc.setState(0x9cb5, 0x352b, 0xa810, 0x123d, 0x5a4a, 0x9db3, 0x1, 0x1);
        gbc.writeMem(0x9cb5, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x352b, gbc.sp());
        EXPECT(0x9cb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9cb5));
        EXPECT(0x12, gbc.readMem(0x9cb6));
        // CB 12 03A7
        gbc.setState(0x9fcd, 0xb625, 0x1ae0, 0x47e7, 0xb6c0, 0xbe18, 0x1, 0x1);
        gbc.writeMem(0x9fcd, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xb625, gbc.sp());
        EXPECT(0x9fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fcd));
        EXPECT(0x12, gbc.readMem(0x9fce));
        // CB 12 03A8
        gbc.setState(0x1956, 0x3f71, 0x7c20, 0xefd, 0x2fa0, 0x46b9, 0x1, 0x1);
        gbc.writeMem(0x1956, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x3f71, gbc.sp());
        EXPECT(0x1958, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03A9
        gbc.setState(0x10c1, 0xdaba, 0x9aa0, 0x21b3, 0xd5c2, 0xf1cb, 0x1, 0x1);
        gbc.writeMem(0x10c1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xdaba, gbc.sp());
        EXPECT(0x10c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03AA
        gbc.setState(0x6b22, 0x4b8d, 0xe1b0, 0xf498, 0xd413, 0x4933, 0x0, 0x1);
        gbc.writeMem(0x6b22, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4b8d, gbc.sp());
        EXPECT(0x6b24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03AC
        gbc.setState(0x3fc2, 0x1c3c, 0x18b0, 0x29b, 0xe239, 0x91f, 0x1, 0x1);
        gbc.writeMem(0x3fc2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1c3c, gbc.sp());
        EXPECT(0x3fc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03AD
        gbc.setState(0x50e9, 0x1252, 0xd500, 0x2487, 0x24cd, 0x546a, 0x0, 0x1);
        gbc.writeMem(0x50e9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x1252, gbc.sp());
        EXPECT(0x50eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03AE
        gbc.setState(0xae09, 0xda20, 0xa80, 0xaa9d, 0x9f99, 0xf519, 0x0, 0x1);
        gbc.writeMem(0xae09, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xda20, gbc.sp());
        EXPECT(0xae0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae09));
        EXPECT(0x12, gbc.readMem(0xae0a));
        // CB 12 03AF
        gbc.setState(0x12e, 0x82a0, 0xc250, 0x37, 0x2a3, 0x580b, 0x0, 0x1);
        gbc.writeMem(0x12e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x82a0, gbc.sp());
        EXPECT(0x130, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03B0
        gbc.setState(0xee97, 0xcc10, 0xd3d0, 0xabef, 0x8d5e, 0x189, 0x1, 0x0);
        gbc.writeMem(0xee97, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xcc10, gbc.sp());
        EXPECT(0xee99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee97));
        EXPECT(0x12, gbc.readMem(0xee98));
        // CB 12 03B1
        gbc.setState(0x91e7, 0x724c, 0x3010, 0xf214, 0x413c, 0x732, 0x0, 0x1);
        gbc.writeMem(0x91e7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x724c, gbc.sp());
        EXPECT(0x91e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91e7));
        EXPECT(0x12, gbc.readMem(0x91e8));
        // CB 12 03B2
        gbc.setState(0xb085, 0x779a, 0xb8d0, 0xaa29, 0x4520, 0x3243, 0x1, 0x0);
        gbc.writeMem(0xb085, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x779a, gbc.sp());
        EXPECT(0xb087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb085));
        EXPECT(0x12, gbc.readMem(0xb086));
        // CB 12 03B3
        gbc.setState(0x66f8, 0x3db1, 0x9340, 0xcf58, 0x96a7, 0x92f0, 0x0, 0x1);
        gbc.writeMem(0x66f8, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x3db1, gbc.sp());
        EXPECT(0x66fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03B4
        gbc.setState(0x42db, 0x45f2, 0x7ad0, 0x2e12, 0xa5a5, 0x7102, 0x0, 0x0);
        gbc.writeMem(0x42db, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x45f2, gbc.sp());
        EXPECT(0x42dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03B5
        gbc.setState(0xd60, 0x187e, 0x1a00, 0xaa51, 0x81f4, 0x4057, 0x0, 0x1);
        gbc.writeMem(0xd60, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x187e, gbc.sp());
        EXPECT(0xd62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03B6
        gbc.setState(0xa18f, 0x307e, 0x1630, 0x231a, 0xb272, 0xff29, 0x1, 0x0);
        gbc.writeMem(0xa18f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x307e, gbc.sp());
        EXPECT(0xa191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa18f));
        EXPECT(0x12, gbc.readMem(0xa190));
        // CB 12 03B7
        gbc.setState(0x5b61, 0x19c3, 0x7a0, 0x2f50, 0xf184, 0x19ca, 0x1, 0x1);
        gbc.writeMem(0x5b61, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x19c3, gbc.sp());
        EXPECT(0x5b63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03B8
        gbc.setState(0x74d, 0x3dfc, 0x8590, 0x983a, 0x6295, 0xff61, 0x0, 0x0);
        gbc.writeMem(0x74d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x3dfc, gbc.sp());
        EXPECT(0x74f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03B9
        gbc.setState(0x9043, 0x945a, 0xcef0, 0x3603, 0xf715, 0xd854, 0x0, 0x1);
        gbc.writeMem(0x9043, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x945a, gbc.sp());
        EXPECT(0x9045, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9043));
        EXPECT(0x12, gbc.readMem(0x9044));
        // CB 12 03BA
        gbc.setState(0x4d06, 0x22e4, 0xc8f0, 0x6226, 0x1837, 0x672a, 0x1, 0x1);
        gbc.writeMem(0x4d06, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x22e4, gbc.sp());
        EXPECT(0x4d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03BB
        gbc.setState(0x3168, 0xd39c, 0xe000, 0x13db, 0x54b, 0x24fc, 0x1, 0x1);
        gbc.writeMem(0x3168, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd39c, gbc.sp());
        EXPECT(0x316a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03BC
        gbc.setState(0x53d6, 0xd223, 0x9000, 0x3d5f, 0xc457, 0x7553, 0x0, 0x1);
        gbc.writeMem(0x53d6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd223, gbc.sp());
        EXPECT(0x53d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03BD
        gbc.setState(0x470c, 0x8388, 0x5f0, 0xfcc9, 0xef56, 0x4a0d, 0x1, 0x1);
        gbc.writeMem(0x470c, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x8388, gbc.sp());
        EXPECT(0x470e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03BE
        gbc.setState(0x1a2b, 0x609d, 0xfca0, 0x6f4f, 0x8c07, 0xafad, 0x0, 0x1);
        gbc.writeMem(0x1a2b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x609d, gbc.sp());
        EXPECT(0x1a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03BF
        gbc.setState(0x1af7, 0x3065, 0xe960, 0x2236, 0xc72e, 0x3105, 0x0, 0x1);
        gbc.writeMem(0x1af7, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3065, gbc.sp());
        EXPECT(0x1af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03C0
        gbc.setState(0x9035, 0x6823, 0x4480, 0x87cd, 0x9a23, 0x9668, 0x1, 0x0);
        gbc.writeMem(0x9035, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x6823, gbc.sp());
        EXPECT(0x9037, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9035));
        EXPECT(0x12, gbc.readMem(0x9036));
        // CB 12 03C1
        gbc.setState(0x46e6, 0x7f38, 0xb3e0, 0x1b7c, 0x7586, 0x8abb, 0x0, 0x0);
        gbc.writeMem(0x46e6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7f38, gbc.sp());
        EXPECT(0x46e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03C4
        gbc.setState(0x761, 0xfec8, 0x8dd0, 0xc526, 0xb7b0, 0xb3e0, 0x1, 0x1);
        gbc.writeMem(0x761, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfec8, gbc.sp());
        EXPECT(0x763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03C5
        gbc.setState(0x9df6, 0xc92e, 0x8b20, 0x7831, 0x445b, 0x86eb, 0x1, 0x0);
        gbc.writeMem(0x9df6, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc92e, gbc.sp());
        EXPECT(0x9df8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df6));
        EXPECT(0x12, gbc.readMem(0x9df7));
        // CB 12 03C6
        gbc.setState(0x4a6d, 0x406d, 0x8080, 0x6be2, 0x8983, 0x7e47, 0x0, 0x1);
        gbc.writeMem(0x4a6d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x406d, gbc.sp());
        EXPECT(0x4a6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03C7
        gbc.setState(0xb094, 0xb9df, 0x7700, 0x4fcf, 0x353f, 0x7b0c, 0x0, 0x1);
        gbc.writeMem(0xb094, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb9df, gbc.sp());
        EXPECT(0xb096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb094));
        EXPECT(0x12, gbc.readMem(0xb095));
        // CB 12 03C8
        gbc.setState(0x32c2, 0x9368, 0x1860, 0x7709, 0x9f8d, 0x3932, 0x0, 0x1);
        gbc.writeMem(0x32c2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9368, gbc.sp());
        EXPECT(0x32c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03C9
        gbc.setState(0xc25d, 0x67d, 0x1cb0, 0xcad, 0xa977, 0xf624, 0x1, 0x0);
        gbc.writeMem(0xc25d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x67d, gbc.sp());
        EXPECT(0xc25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc25d));
        EXPECT(0x12, gbc.readMem(0xc25e));
        // CB 12 03CA
        gbc.setState(0x4263, 0xf1bf, 0x5f90, 0x16a3, 0xed81, 0x73b5, 0x1, 0x0);
        gbc.writeMem(0x4263, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf1bf, gbc.sp());
        EXPECT(0x4265, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03CB
        gbc.setState(0x3ef1, 0x3cb1, 0xaf10, 0x44e5, 0x3c42, 0x43cd, 0x0, 0x0);
        gbc.writeMem(0x3ef1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x3cb1, gbc.sp());
        EXPECT(0x3ef3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03CC
        gbc.setState(0xda0d, 0x32a7, 0x6a80, 0xff47, 0xe7b8, 0x954c, 0x0, 0x0);
        gbc.writeMem(0xda0d, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x32a7, gbc.sp());
        EXPECT(0xda0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda0d));
        EXPECT(0x12, gbc.readMem(0xda0e));
        // CB 12 03CD
        gbc.setState(0x3ede, 0x5073, 0xd480, 0x4db, 0x44e8, 0xce05, 0x1, 0x1);
        gbc.writeMem(0x3ede, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x5073, gbc.sp());
        EXPECT(0x3ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03CE
        gbc.setState(0x5bd9, 0x7bb5, 0x1cf0, 0xab7c, 0xce07, 0xa867, 0x0, 0x0);
        gbc.writeMem(0x5bd9, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x7bb5, gbc.sp());
        EXPECT(0x5bdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03CF
        gbc.setState(0x61c0, 0x5baf, 0x9b60, 0xb24, 0xb53a, 0xb149, 0x0, 0x1);
        gbc.writeMem(0x61c0, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5baf, gbc.sp());
        EXPECT(0x61c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03D0
        gbc.setState(0xe1ec, 0x8671, 0x8440, 0x2aab, 0x51ba, 0xd307, 0x1, 0x1);
        gbc.writeMem(0xe1ec, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x8671, gbc.sp());
        EXPECT(0xe1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ec));
        EXPECT(0x12, gbc.readMem(0xe1ed));
        // CB 12 03D1
        gbc.setState(0x5741, 0x28a1, 0x58a0, 0x9301, 0x1d18, 0x76bf, 0x0, 0x0);
        gbc.writeMem(0x5741, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x28a1, gbc.sp());
        EXPECT(0x5743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03D2
        gbc.setState(0xa15f, 0x6584, 0x3e20, 0x5769, 0xe87d, 0x953a, 0x1, 0x0);
        gbc.writeMem(0xa15f, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x6584, gbc.sp());
        EXPECT(0xa161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15f));
        EXPECT(0x12, gbc.readMem(0xa160));
        // CB 12 03D3
        gbc.setState(0x3d11, 0x761b, 0x1940, 0x5339, 0xaa09, 0x8078, 0x0, 0x0);
        gbc.writeMem(0x3d11, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x761b, gbc.sp());
        EXPECT(0x3d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 12 03D4
        gbc.setState(0x59d3, 0xd20b, 0x8620, 0xa2fe, 0x8f7, 0x28ed, 0x1, 0x1);
        gbc.writeMem(0x59d3, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xd20b, gbc.sp());
        EXPECT(0x59d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03D5
        gbc.setState(0x6cf4, 0xbeec, 0xf3b0, 0xa049, 0x1e30, 0x9d91, 0x1, 0x0);
        gbc.writeMem(0x6cf4, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbeec, gbc.sp());
        EXPECT(0x6cf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03D6
        gbc.setState(0x4658, 0xd955, 0x4a50, 0xe6d4, 0x2dda, 0x79b7, 0x1, 0x1);
        gbc.writeMem(0x4658, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xd955, gbc.sp());
        EXPECT(0x465a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03D8
        gbc.setState(0x8c0b, 0x5c40, 0x95d0, 0x8fc7, 0x746a, 0xd553, 0x1, 0x1);
        gbc.writeMem(0x8c0b, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5c40, gbc.sp());
        EXPECT(0x8c0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c0b));
        EXPECT(0x12, gbc.readMem(0x8c0c));
        // CB 12 03D9
        gbc.setState(0x120a, 0x465a, 0xeb90, 0x3a67, 0x4c4e, 0xff15, 0x0, 0x1);
        gbc.writeMem(0x120a, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x465a, gbc.sp());
        EXPECT(0x120c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03DB
        gbc.setState(0xcc02, 0x67c9, 0x3ee0, 0x1c30, 0xf6f5, 0x51bf, 0x1, 0x0);
        gbc.writeMem(0xcc02, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x67c9, gbc.sp());
        EXPECT(0xcc04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc02));
        EXPECT(0x12, gbc.readMem(0xcc03));
        // CB 12 03DC
        gbc.setState(0x8b93, 0x2368, 0x7c50, 0xaf6d, 0xc82, 0x8253, 0x0, 0x1);
        gbc.writeMem(0x8b93, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x2368, gbc.sp());
        EXPECT(0x8b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b93));
        EXPECT(0x12, gbc.readMem(0x8b94));
        // CB 12 03DD
        gbc.setState(0x5500, 0xc7c7, 0x3360, 0x92f5, 0x5762, 0xeaa2, 0x0, 0x1);
        gbc.writeMem(0x5500, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc7c7, gbc.sp());
        EXPECT(0x5502, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03DE
        gbc.setState(0x97c1, 0x2758, 0x60f0, 0x4a1a, 0xa338, 0xca70, 0x1, 0x1);
        gbc.writeMem(0x97c1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x2758, gbc.sp());
        EXPECT(0x97c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97c1));
        EXPECT(0x12, gbc.readMem(0x97c2));
        // CB 12 03DF
        gbc.setState(0x8e97, 0xee0c, 0xa7b0, 0x91b5, 0xd014, 0x4b36, 0x0, 0x1);
        gbc.writeMem(0x8e97, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xee0c, gbc.sp());
        EXPECT(0x8e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e97));
        EXPECT(0x12, gbc.readMem(0x8e98));
        // CB 12 03E0
        gbc.setState(0xd7c1, 0xbc17, 0x25f0, 0xf571, 0xbf97, 0xb1b6, 0x1, 0x0);
        gbc.writeMem(0xd7c1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xbc17, gbc.sp());
        EXPECT(0xd7c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c1));
        EXPECT(0x12, gbc.readMem(0xd7c2));
        // CB 12 03E2
        gbc.setState(0xa815, 0xa1a6, 0xef40, 0x56f0, 0xbbf4, 0x89e3, 0x0, 0x1);
        gbc.writeMem(0xa815, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa1a6, gbc.sp());
        EXPECT(0xa817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa815));
        EXPECT(0x12, gbc.readMem(0xa816));
        // CB 12 03E3
        gbc.setState(0x7dc2, 0xf9a8, 0x9d40, 0xd94a, 0x1e4e, 0x6172, 0x0, 0x0);
        gbc.writeMem(0x7dc2, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf9a8, gbc.sp());
        EXPECT(0x7dc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03E4
        gbc.setState(0x698e, 0xbc28, 0x3de0, 0x4e3c, 0x696, 0x50dc, 0x0, 0x0);
        gbc.writeMem(0x698e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xbc28, gbc.sp());
        EXPECT(0x6990, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03E5
        gbc.setState(0x507e, 0xed84, 0x2510, 0xa4da, 0x3333, 0xc803, 0x0, 0x1);
        gbc.writeMem(0x507e, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xed84, gbc.sp());
        EXPECT(0x5080, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 12 03E6
        gbc.setState(0xb347, 0xdc51, 0x93c0, 0x7843, 0x36ad, 0xa552, 0x1, 0x1);
        gbc.writeMem(0xb347, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xdc51, gbc.sp());
        EXPECT(0xb349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb347));
        EXPECT(0x12, gbc.readMem(0xb348));
        // CB 12 03E7
        gbc.setState(0xb6d1, 0x9419, 0x7f00, 0x5aed, 0xb9f4, 0x181c, 0x0, 0x1);
        gbc.writeMem(0xb6d1, { 0xcb, 0x12 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x9419, gbc.sp());
        EXPECT(0xb6d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6d1));
        EXPECT(0x12, gbc.readMem(0xb6d2));
    }
