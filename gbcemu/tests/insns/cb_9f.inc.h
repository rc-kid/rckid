    TEST(gbcemu, opcode_cb_9f) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 9F 0000
        gbc.setState(0x30ad, 0xae3e, 0x2970, 0x561c, 0xd69d, 0xd301, 0x1, 0x1);
        gbc.writeMem(0x30ad, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xae3e, gbc.sp());
        EXPECT(0x30af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0001
        gbc.setState(0x290e, 0x8c3b, 0x6c90, 0x9684, 0x3b73, 0x74ca, 0x1, 0x0);
        gbc.writeMem(0x290e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x8c3b, gbc.sp());
        EXPECT(0x2910, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0002
        gbc.setState(0xbbac, 0xae0, 0xe4d0, 0x49b6, 0xc0d3, 0x65c4, 0x1, 0x0);
        gbc.writeMem(0xbbac, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xae0, gbc.sp());
        EXPECT(0xbbae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbac));
        EXPECT(0x9f, gbc.readMem(0xbbad));
        // CB 9F 0003
        gbc.setState(0x9f8, 0xd9cd, 0xa310, 0xc2c2, 0x8bb3, 0xe534, 0x0, 0x0);
        gbc.writeMem(0x9f8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd9cd, gbc.sp());
        EXPECT(0x9fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0005
        gbc.setState(0x2305, 0x5cfb, 0xc460, 0x759, 0xef98, 0xc3e5, 0x0, 0x1);
        gbc.writeMem(0x2305, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5cfb, gbc.sp());
        EXPECT(0x2307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0006
        gbc.setState(0x2103, 0x1765, 0x2f30, 0xd2c8, 0x3a8d, 0x7aba, 0x1, 0x1);
        gbc.writeMem(0x2103, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x1765, gbc.sp());
        EXPECT(0x2105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0007
        gbc.setState(0xd425, 0xa760, 0xe880, 0x4813, 0xb604, 0xb96a, 0x0, 0x1);
        gbc.writeMem(0xd425, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa760, gbc.sp());
        EXPECT(0xd427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd425));
        EXPECT(0x9f, gbc.readMem(0xd426));
        // CB 9F 0008
        gbc.setState(0x7673, 0xc7a4, 0x6a0, 0x9699, 0x787a, 0x1a4e, 0x1, 0x1);
        gbc.writeMem(0x7673, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xc7a4, gbc.sp());
        EXPECT(0x7675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0009
        gbc.setState(0xc392, 0x5d44, 0x4790, 0x6d7c, 0x3945, 0x7adc, 0x0, 0x0);
        gbc.writeMem(0xc392, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5d44, gbc.sp());
        EXPECT(0xc394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc392));
        EXPECT(0x9f, gbc.readMem(0xc393));
        // CB 9F 000A
        gbc.setState(0x5dab, 0x8187, 0xb7a0, 0x62c1, 0x29f2, 0xb7e8, 0x1, 0x0);
        gbc.writeMem(0x5dab, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8187, gbc.sp());
        EXPECT(0x5dad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 000C
        gbc.setState(0xaf45, 0x652b, 0x8da0, 0xe3d9, 0xa1ce, 0x3fae, 0x1, 0x0);
        gbc.writeMem(0xaf45, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x652b, gbc.sp());
        EXPECT(0xaf47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf45));
        EXPECT(0x9f, gbc.readMem(0xaf46));
        // CB 9F 000D
        gbc.setState(0x3faf, 0xcbff, 0xb280, 0x691, 0x4cf0, 0x555, 0x0, 0x1);
        gbc.writeMem(0x3faf, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xcbff, gbc.sp());
        EXPECT(0x3fb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 000E
        gbc.setState(0x7508, 0xe309, 0xee10, 0xe2c8, 0x7e4f, 0xda00, 0x1, 0x1);
        gbc.writeMem(0x7508, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe309, gbc.sp());
        EXPECT(0x750a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 000F
        gbc.setState(0x2e5c, 0x9618, 0x7d90, 0x1595, 0x3b47, 0xd135, 0x1, 0x1);
        gbc.writeMem(0x2e5c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9618, gbc.sp());
        EXPECT(0x2e5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0010
        gbc.setState(0x242c, 0xdcac, 0xc7c0, 0x2b4b, 0x377f, 0xd5df, 0x1, 0x1);
        gbc.writeMem(0x242c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xdcac, gbc.sp());
        EXPECT(0x242e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0011
        gbc.setState(0x572b, 0xfebb, 0x2f70, 0x6a0b, 0x9eb6, 0x47ae, 0x0, 0x1);
        gbc.writeMem(0x572b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xfebb, gbc.sp());
        EXPECT(0x572d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0012
        gbc.setState(0x78f7, 0x231e, 0xbd60, 0x4ea9, 0xe5e7, 0x7728, 0x0, 0x1);
        gbc.writeMem(0x78f7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x231e, gbc.sp());
        EXPECT(0x78f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0013
        gbc.setState(0x1509, 0x552d, 0xddb0, 0x2543, 0x7fe, 0x3ac0, 0x0, 0x1);
        gbc.writeMem(0x1509, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x552d, gbc.sp());
        EXPECT(0x150b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0014
        gbc.setState(0x4dd2, 0x19fc, 0x1f30, 0x1ba9, 0x81c9, 0x19a9, 0x0, 0x1);
        gbc.writeMem(0x4dd2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x19fc, gbc.sp());
        EXPECT(0x4dd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0015
        gbc.setState(0x56ea, 0x7902, 0xc680, 0x2602, 0x41b3, 0x33e2, 0x0, 0x1);
        gbc.writeMem(0x56ea, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7902, gbc.sp());
        EXPECT(0x56ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0016
        gbc.setState(0x455, 0x805a, 0x4650, 0x7859, 0xbb28, 0xc901, 0x0, 0x1);
        gbc.writeMem(0x455, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x805a, gbc.sp());
        EXPECT(0x457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0017
        gbc.setState(0xa47c, 0xcae4, 0x7eb0, 0x1eca, 0xfce, 0xf341, 0x1, 0x1);
        gbc.writeMem(0xa47c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcae4, gbc.sp());
        EXPECT(0xa47e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa47c));
        EXPECT(0x9f, gbc.readMem(0xa47d));
        // CB 9F 0018
        gbc.setState(0x7f57, 0x64f6, 0xa8f0, 0x1566, 0x350b, 0x4b9, 0x1, 0x0);
        gbc.writeMem(0x7f57, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x64f6, gbc.sp());
        EXPECT(0x7f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0019
        gbc.setState(0xc26, 0x698, 0x1c70, 0xedab, 0xbe, 0x3b8e, 0x0, 0x0);
        gbc.writeMem(0xc26, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x698, gbc.sp());
        EXPECT(0xc28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 001B
        gbc.setState(0xa20d, 0xe7b8, 0xa280, 0x1dc0, 0xc5eb, 0xedfb, 0x1, 0x1);
        gbc.writeMem(0xa20d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe7b8, gbc.sp());
        EXPECT(0xa20f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa20d));
        EXPECT(0x9f, gbc.readMem(0xa20e));
        // CB 9F 001C
        gbc.setState(0xb740, 0x433, 0x3eb0, 0xd0a8, 0x583, 0xa363, 0x1, 0x1);
        gbc.writeMem(0xb740, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x433, gbc.sp());
        EXPECT(0xb742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb740));
        EXPECT(0x9f, gbc.readMem(0xb741));
        // CB 9F 001D
        gbc.setState(0xb663, 0xe0f, 0x76a0, 0x43e7, 0xae4f, 0xc853, 0x0, 0x0);
        gbc.writeMem(0xb663, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe0f, gbc.sp());
        EXPECT(0xb665, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb663));
        EXPECT(0x9f, gbc.readMem(0xb664));
        // CB 9F 001E
        gbc.setState(0x3377, 0x7829, 0xaca0, 0xc5c4, 0xb6f7, 0x1d76, 0x0, 0x1);
        gbc.writeMem(0x3377, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x7829, gbc.sp());
        EXPECT(0x3379, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 001F
        gbc.setState(0x6d25, 0x73e1, 0xf800, 0xc1ef, 0x2a39, 0x9ad9, 0x0, 0x0);
        gbc.writeMem(0x6d25, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x73e1, gbc.sp());
        EXPECT(0x6d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0020
        gbc.setState(0xc9e3, 0x72ad, 0xa690, 0xca4a, 0x6b98, 0xd829, 0x0, 0x0);
        gbc.writeMem(0xc9e3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x72ad, gbc.sp());
        EXPECT(0xc9e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9e3));
        EXPECT(0x9f, gbc.readMem(0xc9e4));
        // CB 9F 0021
        gbc.setState(0x1612, 0x3c7d, 0xd00, 0x6401, 0xdea2, 0x41b7, 0x1, 0x1);
        gbc.writeMem(0x1612, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3c7d, gbc.sp());
        EXPECT(0x1614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0022
        gbc.setState(0x9c7a, 0x1b98, 0xc3e0, 0xde2b, 0xe384, 0x455, 0x1, 0x1);
        gbc.writeMem(0x9c7a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x1b98, gbc.sp());
        EXPECT(0x9c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7a));
        EXPECT(0x9f, gbc.readMem(0x9c7b));
        // CB 9F 0023
        gbc.setState(0xec14, 0xf486, 0x6ca0, 0xd2aa, 0x1f7c, 0x607f, 0x0, 0x1);
        gbc.writeMem(0xec14, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xf486, gbc.sp());
        EXPECT(0xec16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec14));
        EXPECT(0x9f, gbc.readMem(0xec15));
        // CB 9F 0024
        gbc.setState(0x4a16, 0xf085, 0x5da0, 0x952b, 0x92cc, 0x19e8, 0x0, 0x1);
        gbc.writeMem(0x4a16, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xf085, gbc.sp());
        EXPECT(0x4a18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0025
        gbc.setState(0x6dfe, 0x32b9, 0xe8c0, 0x72c9, 0xdeaf, 0x67ea, 0x0, 0x0);
        gbc.writeMem(0x6dfe, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x32b9, gbc.sp());
        EXPECT(0x6e00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0026
        gbc.setState(0xb3e9, 0xa279, 0x1470, 0x373c, 0x43de, 0x5840, 0x1, 0x0);
        gbc.writeMem(0xb3e9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa279, gbc.sp());
        EXPECT(0xb3eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e9));
        EXPECT(0x9f, gbc.readMem(0xb3ea));
        // CB 9F 0027
        gbc.setState(0x2409, 0x933, 0xab50, 0xdfd5, 0xc21c, 0xa199, 0x0, 0x1);
        gbc.writeMem(0x2409, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x933, gbc.sp());
        EXPECT(0x240b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0028
        gbc.setState(0x45b9, 0x8451, 0x68d0, 0xa7ff, 0xad9f, 0x84b6, 0x0, 0x0);
        gbc.writeMem(0x45b9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8451, gbc.sp());
        EXPECT(0x45bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0029
        gbc.setState(0x6f4, 0x50c8, 0x1870, 0x43d4, 0x50b7, 0xcb5, 0x0, 0x0);
        gbc.writeMem(0x6f4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x50c8, gbc.sp());
        EXPECT(0x6f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 002A
        gbc.setState(0x72b5, 0x3808, 0xdc70, 0x1738, 0xaf06, 0x400a, 0x0, 0x1);
        gbc.writeMem(0x72b5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3808, gbc.sp());
        EXPECT(0x72b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 002B
        gbc.setState(0x7fb2, 0x8f8f, 0xe730, 0x5f0e, 0x536f, 0x723d, 0x1, 0x1);
        gbc.writeMem(0x7fb2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8f8f, gbc.sp());
        EXPECT(0x7fb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 002C
        gbc.setState(0xa6a0, 0x82a8, 0xb980, 0x5693, 0x365a, 0x776a, 0x0, 0x1);
        gbc.writeMem(0xa6a0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x82a8, gbc.sp());
        EXPECT(0xa6a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6a0));
        EXPECT(0x9f, gbc.readMem(0xa6a1));
        // CB 9F 002D
        gbc.setState(0xd9e4, 0xad98, 0x4410, 0x7ecd, 0xe5ed, 0x591a, 0x0, 0x0);
        gbc.writeMem(0xd9e4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xad98, gbc.sp());
        EXPECT(0xd9e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9e4));
        EXPECT(0x9f, gbc.readMem(0xd9e5));
        // CB 9F 002E
        gbc.setState(0x1630, 0x8a1e, 0x1cd0, 0x7fd4, 0x3ac9, 0xa05a, 0x1, 0x0);
        gbc.writeMem(0x1630, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8a1e, gbc.sp());
        EXPECT(0x1632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 002F
        gbc.setState(0x9d85, 0x8bfd, 0x7400, 0xbe70, 0x14fb, 0x733c, 0x1, 0x1);
        gbc.writeMem(0x9d85, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8bfd, gbc.sp());
        EXPECT(0x9d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d85));
        EXPECT(0x9f, gbc.readMem(0x9d86));
        // CB 9F 0030
        gbc.setState(0x6373, 0x1805, 0x85e0, 0xe2f6, 0xc22f, 0x6b06, 0x1, 0x0);
        gbc.writeMem(0x6373, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1805, gbc.sp());
        EXPECT(0x6375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0031
        gbc.setState(0x1c06, 0x4a5f, 0x9f70, 0xedfc, 0x7122, 0x9744, 0x1, 0x1);
        gbc.writeMem(0x1c06, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4a5f, gbc.sp());
        EXPECT(0x1c08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0032
        gbc.setState(0xe15c, 0x318, 0x4a00, 0x76c0, 0x861b, 0x2915, 0x0, 0x0);
        gbc.writeMem(0xe15c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x318, gbc.sp());
        EXPECT(0xe15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe15c));
        EXPECT(0x9f, gbc.readMem(0xe15d));
        // CB 9F 0033
        gbc.setState(0x6e4d, 0x6844, 0x67f0, 0xae2a, 0x9221, 0xee89, 0x0, 0x0);
        gbc.writeMem(0x6e4d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6844, gbc.sp());
        EXPECT(0x6e4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0034
        gbc.setState(0x37b2, 0x1693, 0x4080, 0x80f4, 0x1442, 0x9907, 0x1, 0x1);
        gbc.writeMem(0x37b2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1693, gbc.sp());
        EXPECT(0x37b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0035
        gbc.setState(0x432f, 0xad4d, 0xdce0, 0x95b8, 0x5dde, 0xe610, 0x1, 0x0);
        gbc.writeMem(0x432f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xad4d, gbc.sp());
        EXPECT(0x4331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0036
        gbc.setState(0xe204, 0x3547, 0x740, 0x184d, 0xe348, 0xa1b7, 0x0, 0x1);
        gbc.writeMem(0xe204, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3547, gbc.sp());
        EXPECT(0xe206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe204));
        EXPECT(0x9f, gbc.readMem(0xe205));
        // CB 9F 0037
        gbc.setState(0x1f01, 0xc164, 0x1230, 0xcfc0, 0x2edf, 0xa32e, 0x0, 0x0);
        gbc.writeMem(0x1f01, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc164, gbc.sp());
        EXPECT(0x1f03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0038
        gbc.setState(0x8305, 0x2dd2, 0x7850, 0x3ba8, 0x30, 0xb756, 0x0, 0x1);
        gbc.writeMem(0x8305, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2dd2, gbc.sp());
        EXPECT(0x8307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8305));
        EXPECT(0x9f, gbc.readMem(0x8306));
        // CB 9F 0039
        gbc.setState(0x5434, 0xe603, 0xb9a0, 0xdd69, 0xef02, 0xf31a, 0x1, 0x0);
        gbc.writeMem(0x5434, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xe603, gbc.sp());
        EXPECT(0x5436, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 003A
        gbc.setState(0xb701, 0x928a, 0x2e30, 0x4070, 0xfbf7, 0x32b5, 0x0, 0x1);
        gbc.writeMem(0xb701, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x928a, gbc.sp());
        EXPECT(0xb703, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb701));
        EXPECT(0x9f, gbc.readMem(0xb702));
        // CB 9F 003B
        gbc.setState(0xc49b, 0x9441, 0x5d0, 0x7bdf, 0x5109, 0xddb7, 0x1, 0x1);
        gbc.writeMem(0xc49b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x9441, gbc.sp());
        EXPECT(0xc49d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc49b));
        EXPECT(0x9f, gbc.readMem(0xc49c));
        // CB 9F 003C
        gbc.setState(0x8283, 0xe650, 0x5c80, 0xc1de, 0x4d62, 0xfb38, 0x1, 0x1);
        gbc.writeMem(0x8283, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe650, gbc.sp());
        EXPECT(0x8285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8283));
        EXPECT(0x9f, gbc.readMem(0x8284));
        // CB 9F 003D
        gbc.setState(0x5c48, 0x735a, 0x6cd0, 0xd692, 0x3fa6, 0xa1e7, 0x1, 0x0);
        gbc.writeMem(0x5c48, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x735a, gbc.sp());
        EXPECT(0x5c4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 003E
        gbc.setState(0x4593, 0xed0, 0x9e80, 0xf7a1, 0xcffb, 0xa93c, 0x0, 0x0);
        gbc.writeMem(0x4593, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xed0, gbc.sp());
        EXPECT(0x4595, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 003F
        gbc.setState(0x202e, 0xe719, 0xbaa0, 0x9457, 0xe2f0, 0x6698, 0x0, 0x0);
        gbc.writeMem(0x202e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xe719, gbc.sp());
        EXPECT(0x2030, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0040
        gbc.setState(0xe970, 0xb500, 0x1f40, 0xffa2, 0x76c0, 0x6a15, 0x0, 0x0);
        gbc.writeMem(0xe970, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xb500, gbc.sp());
        EXPECT(0xe972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe970));
        EXPECT(0x9f, gbc.readMem(0xe971));
        // CB 9F 0041
        gbc.setState(0x2b58, 0x15c4, 0x7f30, 0xb82a, 0x4782, 0xa065, 0x1, 0x1);
        gbc.writeMem(0x2b58, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x15c4, gbc.sp());
        EXPECT(0x2b5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0042
        gbc.setState(0xcb63, 0x1c84, 0x8300, 0x3893, 0x5273, 0x792, 0x1, 0x1);
        gbc.writeMem(0xcb63, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x1c84, gbc.sp());
        EXPECT(0xcb65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb63));
        EXPECT(0x9f, gbc.readMem(0xcb64));
        // CB 9F 0043
        gbc.setState(0x2f1a, 0x90eb, 0x3d00, 0x5a7c, 0x6751, 0xed23, 0x0, 0x0);
        gbc.writeMem(0x2f1a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x90eb, gbc.sp());
        EXPECT(0x2f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0044
        gbc.setState(0x508d, 0xc4ba, 0x7100, 0x6110, 0x599a, 0xbaf9, 0x0, 0x1);
        gbc.writeMem(0x508d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xc4ba, gbc.sp());
        EXPECT(0x508f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0045
        gbc.setState(0xb8c2, 0x5e20, 0xd110, 0x5e69, 0xe79d, 0x181c, 0x0, 0x1);
        gbc.writeMem(0xb8c2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5e20, gbc.sp());
        EXPECT(0xb8c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8c2));
        EXPECT(0x9f, gbc.readMem(0xb8c3));
        // CB 9F 0046
        gbc.setState(0x29c9, 0xd9a0, 0x2ca0, 0x8806, 0x4622, 0x506d, 0x1, 0x0);
        gbc.writeMem(0x29c9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd9a0, gbc.sp());
        EXPECT(0x29cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0047
        gbc.setState(0x6f3c, 0x51d2, 0xa510, 0x1d93, 0x330b, 0x33e8, 0x0, 0x0);
        gbc.writeMem(0x6f3c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x51d2, gbc.sp());
        EXPECT(0x6f3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0048
        gbc.setState(0xb445, 0x3514, 0x4c60, 0xfa26, 0xd1cf, 0x4fdc, 0x0, 0x0);
        gbc.writeMem(0xb445, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x3514, gbc.sp());
        EXPECT(0xb447, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb445));
        EXPECT(0x9f, gbc.readMem(0xb446));
        // CB 9F 0049
        gbc.setState(0x2b88, 0x82ba, 0x85c0, 0x627, 0x2f2b, 0x6c71, 0x0, 0x0);
        gbc.writeMem(0x2b88, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x82ba, gbc.sp());
        EXPECT(0x2b8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 004A
        gbc.setState(0x1732, 0x73e5, 0xd510, 0xd1a, 0x42f0, 0x800f, 0x0, 0x0);
        gbc.writeMem(0x1732, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x73e5, gbc.sp());
        EXPECT(0x1734, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 004B
        gbc.setState(0x65b9, 0x8c62, 0x5250, 0x739a, 0xe0fd, 0xe26e, 0x0, 0x1);
        gbc.writeMem(0x65b9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8c62, gbc.sp());
        EXPECT(0x65bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 004C
        gbc.setState(0xbc37, 0xe45c, 0x3df0, 0xad4b, 0x3e08, 0x73e0, 0x1, 0x1);
        gbc.writeMem(0xbc37, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe45c, gbc.sp());
        EXPECT(0xbc39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc37));
        EXPECT(0x9f, gbc.readMem(0xbc38));
        // CB 9F 004D
        gbc.setState(0xdbc8, 0xf8d2, 0xed30, 0xf346, 0x841a, 0x7114, 0x0, 0x1);
        gbc.writeMem(0xdbc8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xf8d2, gbc.sp());
        EXPECT(0xdbca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbc8));
        EXPECT(0x9f, gbc.readMem(0xdbc9));
        // CB 9F 004E
        gbc.setState(0xef09, 0x4366, 0x1be0, 0xe735, 0xf9ca, 0xe98d, 0x1, 0x1);
        gbc.writeMem(0xef09, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4366, gbc.sp());
        EXPECT(0xef0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef09));
        EXPECT(0x9f, gbc.readMem(0xef0a));
        // CB 9F 004F
        gbc.setState(0x43aa, 0xab23, 0x7dc0, 0xbd8b, 0x971e, 0xc23e, 0x0, 0x0);
        gbc.writeMem(0x43aa, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xab23, gbc.sp());
        EXPECT(0x43ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0050
        gbc.setState(0x626, 0x260, 0x63c0, 0x3ab6, 0x6f9a, 0x75d6, 0x0, 0x1);
        gbc.writeMem(0x626, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x260, gbc.sp());
        EXPECT(0x628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0051
        gbc.setState(0x7f7f, 0xc770, 0xdf0, 0xf922, 0x419b, 0x8a85, 0x1, 0x0);
        gbc.writeMem(0x7f7f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc770, gbc.sp());
        EXPECT(0x7f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0052
        gbc.setState(0xb146, 0xf947, 0xf110, 0xed49, 0xa6af, 0x33f7, 0x1, 0x0);
        gbc.writeMem(0xb146, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf947, gbc.sp());
        EXPECT(0xb148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb146));
        EXPECT(0x9f, gbc.readMem(0xb147));
        // CB 9F 0053
        gbc.setState(0x264a, 0x3f44, 0x9570, 0x4d23, 0x5e0, 0x470d, 0x1, 0x0);
        gbc.writeMem(0x264a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3f44, gbc.sp());
        EXPECT(0x264c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0054
        gbc.setState(0x16c7, 0x12d3, 0xb4f0, 0x783e, 0x5b09, 0x38b3, 0x0, 0x1);
        gbc.writeMem(0x16c7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x12d3, gbc.sp());
        EXPECT(0x16c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0055
        gbc.setState(0xc5d0, 0xe68f, 0xcca0, 0xda13, 0xc622, 0x6d4f, 0x1, 0x1);
        gbc.writeMem(0xc5d0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xe68f, gbc.sp());
        EXPECT(0xc5d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d0));
        EXPECT(0x9f, gbc.readMem(0xc5d1));
        // CB 9F 0056
        gbc.setState(0x321, 0x979a, 0xb7d0, 0xa0d7, 0xc244, 0xdf82, 0x0, 0x0);
        gbc.writeMem(0x321, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x979a, gbc.sp());
        EXPECT(0x323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0057
        gbc.setState(0x93e4, 0xf15f, 0xc540, 0x2814, 0xaf26, 0x10fe, 0x0, 0x0);
        gbc.writeMem(0x93e4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf15f, gbc.sp());
        EXPECT(0x93e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93e4));
        EXPECT(0x9f, gbc.readMem(0x93e5));
        // CB 9F 0058
        gbc.setState(0x8408, 0xcfd, 0x39e0, 0xa689, 0xd8e2, 0xf1f5, 0x0, 0x1);
        gbc.writeMem(0x8408, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xcfd, gbc.sp());
        EXPECT(0x840a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8408));
        EXPECT(0x9f, gbc.readMem(0x8409));
        // CB 9F 0059
        gbc.setState(0x3030, 0xe097, 0xa8f0, 0xc03b, 0x17d1, 0xd6e0, 0x0, 0x1);
        gbc.writeMem(0x3030, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xe097, gbc.sp());
        EXPECT(0x3032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 005A
        gbc.setState(0x251f, 0x84b, 0x3900, 0xb95f, 0x9c95, 0x98d8, 0x1, 0x1);
        gbc.writeMem(0x251f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x84b, gbc.sp());
        EXPECT(0x2521, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 005B
        gbc.setState(0xcf8b, 0x8556, 0x3b80, 0x7e93, 0xdcef, 0x8eed, 0x1, 0x1);
        gbc.writeMem(0xcf8b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x8556, gbc.sp());
        EXPECT(0xcf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf8b));
        EXPECT(0x9f, gbc.readMem(0xcf8c));
        // CB 9F 005D
        gbc.setState(0xdb0a, 0x9b71, 0xfbc0, 0xff52, 0x6959, 0xb42a, 0x1, 0x1);
        gbc.writeMem(0xdb0a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9b71, gbc.sp());
        EXPECT(0xdb0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb0a));
        EXPECT(0x9f, gbc.readMem(0xdb0b));
        // CB 9F 005E
        gbc.setState(0x3dae, 0x91c6, 0x3460, 0xb472, 0x3af1, 0x138e, 0x0, 0x1);
        gbc.writeMem(0x3dae, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x91c6, gbc.sp());
        EXPECT(0x3db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 005F
        gbc.setState(0x83d9, 0x3001, 0x5ec0, 0x9c3b, 0x120c, 0xd225, 0x1, 0x1);
        gbc.writeMem(0x83d9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x3001, gbc.sp());
        EXPECT(0x83db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d9));
        EXPECT(0x9f, gbc.readMem(0x83da));
        // CB 9F 0060
        gbc.setState(0x1ee0, 0xc1e9, 0x1bd0, 0x5c54, 0xde39, 0xd062, 0x0, 0x0);
        gbc.writeMem(0x1ee0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xc1e9, gbc.sp());
        EXPECT(0x1ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0061
        gbc.setState(0x7ab, 0x2ae5, 0xf6e0, 0x5b3, 0x4e87, 0x6e4c, 0x0, 0x0);
        gbc.writeMem(0x7ab, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2ae5, gbc.sp());
        EXPECT(0x7ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0062
        gbc.setState(0x260e, 0x240e, 0x4830, 0xe770, 0xaa8f, 0xd884, 0x0, 0x0);
        gbc.writeMem(0x260e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x240e, gbc.sp());
        EXPECT(0x2610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0063
        gbc.setState(0x7e42, 0xe4f3, 0x97e0, 0x791e, 0xef3a, 0x4864, 0x0, 0x1);
        gbc.writeMem(0x7e42, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xe4f3, gbc.sp());
        EXPECT(0x7e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0064
        gbc.setState(0x699d, 0x8e17, 0xa650, 0x6aac, 0x7ec0, 0xa686, 0x0, 0x0);
        gbc.writeMem(0x699d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x8e17, gbc.sp());
        EXPECT(0x699f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0065
        gbc.setState(0x9fcd, 0xd634, 0x68f0, 0xbffd, 0x7c3b, 0x981e, 0x1, 0x0);
        gbc.writeMem(0x9fcd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd634, gbc.sp());
        EXPECT(0x9fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fcd));
        EXPECT(0x9f, gbc.readMem(0x9fce));
        // CB 9F 0066
        gbc.setState(0xa26b, 0x4b8c, 0x1450, 0xac09, 0xf9d, 0xb23a, 0x0, 0x1);
        gbc.writeMem(0xa26b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4b8c, gbc.sp());
        EXPECT(0xa26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa26b));
        EXPECT(0x9f, gbc.readMem(0xa26c));
        // CB 9F 0068
        gbc.setState(0xeec8, 0x8060, 0x8e40, 0xd9c1, 0xfc40, 0x8ce3, 0x0, 0x0);
        gbc.writeMem(0xeec8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x8060, gbc.sp());
        EXPECT(0xeeca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeec8));
        EXPECT(0x9f, gbc.readMem(0xeec9));
        // CB 9F 0069
        gbc.setState(0x10ce, 0x9070, 0x9240, 0xdbb6, 0xb905, 0x7eed, 0x1, 0x1);
        gbc.writeMem(0x10ce, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9070, gbc.sp());
        EXPECT(0x10d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 006A
        gbc.setState(0x3c13, 0x7a81, 0xac50, 0x1c8c, 0xd907, 0xeb2e, 0x1, 0x0);
        gbc.writeMem(0x3c13, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x7a81, gbc.sp());
        EXPECT(0x3c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 006C
        gbc.setState(0x5e32, 0x9d7, 0x9450, 0x4fc5, 0x38ce, 0x161d, 0x0, 0x1);
        gbc.writeMem(0x5e32, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9d7, gbc.sp());
        EXPECT(0x5e34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 006D
        gbc.setState(0x6055, 0xb5be, 0xb430, 0x9beb, 0xed0c, 0x8351, 0x1, 0x1);
        gbc.writeMem(0x6055, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb5be, gbc.sp());
        EXPECT(0x6057, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 006E
        gbc.setState(0x21f1, 0xe5a6, 0x57d0, 0x54d3, 0x6284, 0xca26, 0x1, 0x0);
        gbc.writeMem(0x21f1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe5a6, gbc.sp());
        EXPECT(0x21f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 006F
        gbc.setState(0x30f6, 0x9be0, 0x5610, 0x6bb1, 0x24b5, 0xb6bc, 0x0, 0x0);
        gbc.writeMem(0x30f6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9be0, gbc.sp());
        EXPECT(0x30f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0070
        gbc.setState(0x4a71, 0x2f5d, 0xee70, 0x1d16, 0x1d9, 0xdfb0, 0x0, 0x1);
        gbc.writeMem(0x4a71, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2f5d, gbc.sp());
        EXPECT(0x4a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0071
        gbc.setState(0xef36, 0x3246, 0x9f20, 0x5a91, 0x7802, 0x53b1, 0x0, 0x1);
        gbc.writeMem(0xef36, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3246, gbc.sp());
        EXPECT(0xef38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xef36));
        EXPECT(0x9f, gbc.readMem(0xef37));
        // CB 9F 0072
        gbc.setState(0xb058, 0x20d, 0xf120, 0x92ea, 0xd0e4, 0x45e, 0x1, 0x1);
        gbc.writeMem(0xb058, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x20d, gbc.sp());
        EXPECT(0xb05a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb058));
        EXPECT(0x9f, gbc.readMem(0xb059));
        // CB 9F 0073
        gbc.setState(0x4579, 0x1163, 0x3160, 0x6ca0, 0xd41b, 0xe7e5, 0x0, 0x0);
        gbc.writeMem(0x4579, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x1163, gbc.sp());
        EXPECT(0x457b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0074
        gbc.setState(0xc390, 0xb925, 0xdb60, 0x6c0f, 0x3732, 0xd35d, 0x0, 0x1);
        gbc.writeMem(0xc390, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xb925, gbc.sp());
        EXPECT(0xc392, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc390));
        EXPECT(0x9f, gbc.readMem(0xc391));
        // CB 9F 0076
        gbc.setState(0xbbfa, 0x8d4f, 0xde0, 0xffc6, 0x32b3, 0xcbb2, 0x1, 0x0);
        gbc.writeMem(0xbbfa, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x8d4f, gbc.sp());
        EXPECT(0xbbfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbfa));
        EXPECT(0x9f, gbc.readMem(0xbbfb));
        // CB 9F 0077
        gbc.setState(0x2397, 0x851b, 0x9380, 0x1670, 0xd6d3, 0x67e, 0x1, 0x0);
        gbc.writeMem(0x2397, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x851b, gbc.sp());
        EXPECT(0x2399, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0078
        gbc.setState(0x3879, 0x8b84, 0xaaf0, 0xb9fb, 0x5414, 0xc387, 0x1, 0x0);
        gbc.writeMem(0x3879, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8b84, gbc.sp());
        EXPECT(0x387b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0079
        gbc.setState(0x4744, 0xc148, 0x4c80, 0x8cf8, 0x902f, 0xdeaf, 0x1, 0x1);
        gbc.writeMem(0x4744, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xc148, gbc.sp());
        EXPECT(0x4746, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 007A
        gbc.setState(0xaec6, 0x452d, 0x1010, 0xd832, 0x53b1, 0x83f, 0x1, 0x0);
        gbc.writeMem(0xaec6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x452d, gbc.sp());
        EXPECT(0xaec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaec6));
        EXPECT(0x9f, gbc.readMem(0xaec7));
        // CB 9F 007B
        gbc.setState(0x6c76, 0x113d, 0xdb10, 0x2e15, 0x66b, 0xae43, 0x0, 0x0);
        gbc.writeMem(0x6c76, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x113d, gbc.sp());
        EXPECT(0x6c78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 007C
        gbc.setState(0xa03f, 0xc4e4, 0x9780, 0xcdff, 0x93eb, 0xa232, 0x0, 0x1);
        gbc.writeMem(0xa03f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc4e4, gbc.sp());
        EXPECT(0xa041, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03f));
        EXPECT(0x9f, gbc.readMem(0xa040));
        // CB 9F 007D
        gbc.setState(0x6526, 0xf393, 0xaf40, 0xa916, 0x96a9, 0xbbf5, 0x0, 0x1);
        gbc.writeMem(0x6526, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf393, gbc.sp());
        EXPECT(0x6528, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 007E
        gbc.setState(0xac98, 0x1342, 0x2ef0, 0xe623, 0xb405, 0x6a20, 0x1, 0x0);
        gbc.writeMem(0xac98, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1342, gbc.sp());
        EXPECT(0xac9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac98));
        EXPECT(0x9f, gbc.readMem(0xac99));
        // CB 9F 007F
        gbc.setState(0x95fb, 0xf741, 0xa5d0, 0xcdbc, 0x186, 0xf524, 0x0, 0x0);
        gbc.writeMem(0x95fb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf741, gbc.sp());
        EXPECT(0x95fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95fb));
        EXPECT(0x9f, gbc.readMem(0x95fc));
        // CB 9F 0081
        gbc.setState(0x2653, 0xf062, 0x9550, 0xced0, 0x5510, 0x1f22, 0x1, 0x1);
        gbc.writeMem(0x2653, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf062, gbc.sp());
        EXPECT(0x2655, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0082
        gbc.setState(0xd0ab, 0x9ba1, 0xaa80, 0x94ad, 0x571c, 0xa5d4, 0x1, 0x0);
        gbc.writeMem(0xd0ab, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9ba1, gbc.sp());
        EXPECT(0xd0ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ab));
        EXPECT(0x9f, gbc.readMem(0xd0ac));
        // CB 9F 0083
        gbc.setState(0xde7e, 0x4e6f, 0x9180, 0xbac, 0xe68e, 0xde07, 0x1, 0x0);
        gbc.writeMem(0xde7e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4e6f, gbc.sp());
        EXPECT(0xde80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7e));
        EXPECT(0x9f, gbc.readMem(0xde7f));
        // CB 9F 0084
        gbc.setState(0x8ea7, 0xa11d, 0xe5b0, 0xbab6, 0xfd7b, 0xa8b, 0x1, 0x0);
        gbc.writeMem(0x8ea7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xa11d, gbc.sp());
        EXPECT(0x8ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea7));
        EXPECT(0x9f, gbc.readMem(0x8ea8));
        // CB 9F 0085
        gbc.setState(0xd21a, 0xc9e3, 0x5f20, 0x6ca, 0x5044, 0xd74d, 0x0, 0x0);
        gbc.writeMem(0xd21a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc9e3, gbc.sp());
        EXPECT(0xd21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd21a));
        EXPECT(0x9f, gbc.readMem(0xd21b));
        // CB 9F 0086
        gbc.setState(0x829b, 0x6c44, 0x64f0, 0xa194, 0xc199, 0xbaf8, 0x0, 0x1);
        gbc.writeMem(0x829b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6c44, gbc.sp());
        EXPECT(0x829d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x829b));
        EXPECT(0x9f, gbc.readMem(0x829c));
        // CB 9F 0088
        gbc.setState(0x93ec, 0xb735, 0x4510, 0xaedb, 0xd5b6, 0x2ee1, 0x1, 0x1);
        gbc.writeMem(0x93ec, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb735, gbc.sp());
        EXPECT(0x93ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93ec));
        EXPECT(0x9f, gbc.readMem(0x93ed));
        // CB 9F 0089
        gbc.setState(0xf57, 0x5ff5, 0xd4f0, 0x4c11, 0x48be, 0x46d9, 0x0, 0x1);
        gbc.writeMem(0xf57, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5ff5, gbc.sp());
        EXPECT(0xf59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 008A
        gbc.setState(0xbace, 0x3a98, 0xe430, 0xfa6d, 0x6abe, 0xa398, 0x1, 0x1);
        gbc.writeMem(0xbace, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3a98, gbc.sp());
        EXPECT(0xbad0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbace));
        EXPECT(0x9f, gbc.readMem(0xbacf));
        // CB 9F 008B
        gbc.setState(0xebf4, 0xdf86, 0xd910, 0xe5b8, 0xc2d7, 0xd949, 0x1, 0x1);
        gbc.writeMem(0xebf4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdf86, gbc.sp());
        EXPECT(0xebf6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf4));
        EXPECT(0x9f, gbc.readMem(0xebf5));
        // CB 9F 008C
        gbc.setState(0xcd9a, 0xdb19, 0xecd0, 0xbb7b, 0x1670, 0x94f5, 0x0, 0x0);
        gbc.writeMem(0xcd9a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdb19, gbc.sp());
        EXPECT(0xcd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd9a));
        EXPECT(0x9f, gbc.readMem(0xcd9b));
        // CB 9F 008D
        gbc.setState(0x8d7b, 0x7cab, 0xb1a0, 0x8db4, 0x0, 0x564, 0x1, 0x0);
        gbc.writeMem(0x8d7b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7cab, gbc.sp());
        EXPECT(0x8d7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d7b));
        EXPECT(0x9f, gbc.readMem(0x8d7c));
        // CB 9F 008E
        gbc.setState(0xecf8, 0xcb05, 0x1690, 0xa4fd, 0x6f15, 0xbecd, 0x1, 0x1);
        gbc.writeMem(0xecf8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xcb05, gbc.sp());
        EXPECT(0xecfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecf8));
        EXPECT(0x9f, gbc.readMem(0xecf9));
        // CB 9F 008F
        gbc.setState(0xc35b, 0xd81c, 0xb0e0, 0xd7b2, 0x7bf9, 0xef08, 0x0, 0x1);
        gbc.writeMem(0xc35b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xd81c, gbc.sp());
        EXPECT(0xc35d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc35b));
        EXPECT(0x9f, gbc.readMem(0xc35c));
        // CB 9F 0090
        gbc.setState(0x53a7, 0xe05f, 0x32d0, 0x814c, 0x45e, 0x9593, 0x0, 0x0);
        gbc.writeMem(0x53a7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe05f, gbc.sp());
        EXPECT(0x53a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0091
        gbc.setState(0x76ac, 0xd9d8, 0xb890, 0x3623, 0xa782, 0x15f9, 0x0, 0x1);
        gbc.writeMem(0x76ac, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd9d8, gbc.sp());
        EXPECT(0x76ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0092
        gbc.setState(0xecb1, 0x161f, 0x6ce0, 0xdf3b, 0x71ed, 0xaa83, 0x0, 0x1);
        gbc.writeMem(0xecb1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x161f, gbc.sp());
        EXPECT(0xecb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecb1));
        EXPECT(0x9f, gbc.readMem(0xecb2));
        // CB 9F 0093
        gbc.setState(0xdc8, 0xa4b0, 0x2710, 0xaa60, 0xd8e3, 0x8c5, 0x1, 0x1);
        gbc.writeMem(0xdc8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa4b0, gbc.sp());
        EXPECT(0xdca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0094
        gbc.setState(0x7273, 0xc4c4, 0x1850, 0xdaca, 0x962e, 0x2c11, 0x0, 0x1);
        gbc.writeMem(0x7273, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc4c4, gbc.sp());
        EXPECT(0x7275, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0096
        gbc.setState(0xce6e, 0x8674, 0xa6a0, 0x1344, 0x582a, 0x87e4, 0x1, 0x0);
        gbc.writeMem(0xce6e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8674, gbc.sp());
        EXPECT(0xce70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce6e));
        EXPECT(0x9f, gbc.readMem(0xce6f));
        // CB 9F 0097
        gbc.setState(0x2202, 0xbffa, 0xed90, 0x601c, 0xfe35, 0x257f, 0x0, 0x0);
        gbc.writeMem(0x2202, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xbffa, gbc.sp());
        EXPECT(0x2204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0098
        gbc.setState(0x53b9, 0x6622, 0x36c0, 0xe6f9, 0xee61, 0xcfdf, 0x1, 0x0);
        gbc.writeMem(0x53b9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6622, gbc.sp());
        EXPECT(0x53bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0099
        gbc.setState(0xab51, 0x33b4, 0xcb10, 0xcedf, 0x66af, 0xcda1, 0x1, 0x0);
        gbc.writeMem(0xab51, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x33b4, gbc.sp());
        EXPECT(0xab53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab51));
        EXPECT(0x9f, gbc.readMem(0xab52));
        // CB 9F 009A
        gbc.setState(0x1e67, 0x7c57, 0x4460, 0x9c02, 0x929b, 0xeb5d, 0x0, 0x1);
        gbc.writeMem(0x1e67, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7c57, gbc.sp());
        EXPECT(0x1e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 009B
        gbc.setState(0x6656, 0xfad5, 0x5a50, 0xfd5e, 0x4c95, 0xdea6, 0x1, 0x1);
        gbc.writeMem(0x6656, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xfad5, gbc.sp());
        EXPECT(0x6658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 009C
        gbc.setState(0x6228, 0x13af, 0x710, 0x42c7, 0x5c8, 0x1bf1, 0x1, 0x1);
        gbc.writeMem(0x6228, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x13af, gbc.sp());
        EXPECT(0x622a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 009D
        gbc.setState(0x104a, 0x7abb, 0x90e0, 0x6200, 0x8a69, 0xdbbe, 0x0, 0x0);
        gbc.writeMem(0x104a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x7abb, gbc.sp());
        EXPECT(0x104c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 009E
        gbc.setState(0xdf8f, 0x3f64, 0x2fc0, 0x43fb, 0xfccd, 0x63f9, 0x1, 0x1);
        gbc.writeMem(0xdf8f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3f64, gbc.sp());
        EXPECT(0xdf91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf8f));
        EXPECT(0x9f, gbc.readMem(0xdf90));
        // CB 9F 009F
        gbc.setState(0xee9d, 0x4fa3, 0xc1c0, 0x9c9, 0x771a, 0xb43c, 0x0, 0x1);
        gbc.writeMem(0xee9d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4fa3, gbc.sp());
        EXPECT(0xee9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee9d));
        EXPECT(0x9f, gbc.readMem(0xee9e));
        // CB 9F 00A0
        gbc.setState(0x71b8, 0xf51f, 0xd9c0, 0x6bc8, 0x77ce, 0xb4d8, 0x0, 0x1);
        gbc.writeMem(0x71b8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf51f, gbc.sp());
        EXPECT(0x71ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00A1
        gbc.setState(0x5dd7, 0xb957, 0xcbb0, 0x5afd, 0xc32b, 0xd509, 0x0, 0x1);
        gbc.writeMem(0x5dd7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb957, gbc.sp());
        EXPECT(0x5dd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00A2
        gbc.setState(0xefa5, 0x247d, 0x61b0, 0x672e, 0x7aba, 0x7e20, 0x1, 0x1);
        gbc.writeMem(0xefa5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x247d, gbc.sp());
        EXPECT(0xefa7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa5));
        EXPECT(0x9f, gbc.readMem(0xefa6));
        // CB 9F 00A3
        gbc.setState(0x938f, 0x80a9, 0x1f0, 0x448b, 0x7319, 0xba59, 0x0, 0x0);
        gbc.writeMem(0x938f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x80a9, gbc.sp());
        EXPECT(0x9391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x938f));
        EXPECT(0x9f, gbc.readMem(0x9390));
        // CB 9F 00A4
        gbc.setState(0xed26, 0x4a27, 0x8480, 0x26c2, 0x2541, 0xfe3c, 0x0, 0x0);
        gbc.writeMem(0xed26, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4a27, gbc.sp());
        EXPECT(0xed28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed26));
        EXPECT(0x9f, gbc.readMem(0xed27));
        // CB 9F 00A5
        gbc.setState(0xd5eb, 0x592c, 0x3060, 0x6869, 0xa00b, 0x8805, 0x1, 0x1);
        gbc.writeMem(0xd5eb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x592c, gbc.sp());
        EXPECT(0xd5ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5eb));
        EXPECT(0x9f, gbc.readMem(0xd5ec));
        // CB 9F 00A6
        gbc.setState(0x2c7b, 0xe16f, 0x62b0, 0xc0e4, 0x7ef4, 0x267, 0x0, 0x0);
        gbc.writeMem(0x2c7b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe16f, gbc.sp());
        EXPECT(0x2c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00A7
        gbc.setState(0xa0f, 0xd9fe, 0x3a30, 0x9f52, 0xaaba, 0xc6d5, 0x0, 0x1);
        gbc.writeMem(0xa0f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd9fe, gbc.sp());
        EXPECT(0xa11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00A8
        gbc.setState(0x1329, 0x81d9, 0x6930, 0xf160, 0x2dde, 0xb7b4, 0x0, 0x0);
        gbc.writeMem(0x1329, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x81d9, gbc.sp());
        EXPECT(0x132b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00A9
        gbc.setState(0x2583, 0x4381, 0x37f0, 0xb9f7, 0x79ac, 0x1a7c, 0x1, 0x1);
        gbc.writeMem(0x2583, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x4381, gbc.sp());
        EXPECT(0x2585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00AA
        gbc.setState(0x9384, 0x2835, 0x85c0, 0x6d03, 0x5d39, 0xb74a, 0x1, 0x1);
        gbc.writeMem(0x9384, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x2835, gbc.sp());
        EXPECT(0x9386, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9384));
        EXPECT(0x9f, gbc.readMem(0x9385));
        // CB 9F 00AB
        gbc.setState(0xbfe8, 0x93a1, 0xd220, 0x6530, 0x3061, 0xb165, 0x1, 0x0);
        gbc.writeMem(0xbfe8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x93a1, gbc.sp());
        EXPECT(0xbfea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfe8));
        EXPECT(0x9f, gbc.readMem(0xbfe9));
        // CB 9F 00AC
        gbc.setState(0x88bc, 0x1f87, 0xdfd0, 0x2c46, 0x4dc9, 0xa53, 0x1, 0x0);
        gbc.writeMem(0x88bc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x1f87, gbc.sp());
        EXPECT(0x88be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88bc));
        EXPECT(0x9f, gbc.readMem(0x88bd));
        // CB 9F 00AE
        gbc.setState(0x70ac, 0xdd63, 0x80, 0x8923, 0x8928, 0xadbf, 0x0, 0x0);
        gbc.writeMem(0x70ac, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdd63, gbc.sp());
        EXPECT(0x70ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00AF
        gbc.setState(0xabf6, 0x576b, 0x560, 0x704c, 0xbd17, 0x967c, 0x1, 0x0);
        gbc.writeMem(0xabf6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x576b, gbc.sp());
        EXPECT(0xabf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabf6));
        EXPECT(0x9f, gbc.readMem(0xabf7));
        // CB 9F 00B0
        gbc.setState(0xc71, 0xf477, 0x6ee0, 0x10d0, 0x2b6b, 0xc8c7, 0x0, 0x1);
        gbc.writeMem(0xc71, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf477, gbc.sp());
        EXPECT(0xc73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00B1
        gbc.setState(0x49a9, 0x9d1, 0x6450, 0x968f, 0xa2d9, 0x4ce0, 0x0, 0x0);
        gbc.writeMem(0x49a9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9d1, gbc.sp());
        EXPECT(0x49ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00B2
        gbc.setState(0x2ef9, 0x2cc1, 0x54a0, 0xbeb0, 0xae81, 0x4c38, 0x1, 0x1);
        gbc.writeMem(0x2ef9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x2cc1, gbc.sp());
        EXPECT(0x2efb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00B3
        gbc.setState(0x21ad, 0x1b44, 0x4320, 0x6e83, 0xab53, 0x3a04, 0x1, 0x0);
        gbc.writeMem(0x21ad, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1b44, gbc.sp());
        EXPECT(0x21af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00B4
        gbc.setState(0x50bd, 0x6b84, 0xaba0, 0x45bc, 0xc2ac, 0x7fe8, 0x0, 0x1);
        gbc.writeMem(0x50bd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x6b84, gbc.sp());
        EXPECT(0x50bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00B5
        gbc.setState(0x31e, 0xd98a, 0x9720, 0x5d4e, 0xdabd, 0xc9e7, 0x0, 0x1);
        gbc.writeMem(0x31e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd98a, gbc.sp());
        EXPECT(0x320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00B6
        gbc.setState(0xecfa, 0xade4, 0x9c80, 0x7484, 0xe14a, 0x618a, 0x1, 0x0);
        gbc.writeMem(0xecfa, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xade4, gbc.sp());
        EXPECT(0xecfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xecfa));
        EXPECT(0x9f, gbc.readMem(0xecfb));
        // CB 9F 00B7
        gbc.setState(0xd9ef, 0x623, 0xc280, 0x5869, 0x6159, 0x3ede, 0x1, 0x1);
        gbc.writeMem(0xd9ef, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x623, gbc.sp());
        EXPECT(0xd9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ef));
        EXPECT(0x9f, gbc.readMem(0xd9f0));
        // CB 9F 00B8
        gbc.setState(0xe62e, 0x9a3e, 0x1450, 0xf1c0, 0x3218, 0xa37a, 0x1, 0x1);
        gbc.writeMem(0xe62e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9a3e, gbc.sp());
        EXPECT(0xe630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe62e));
        EXPECT(0x9f, gbc.readMem(0xe62f));
        // CB 9F 00B9
        gbc.setState(0x9e4f, 0x428d, 0xb420, 0x7c6c, 0xa149, 0xe4e7, 0x0, 0x0);
        gbc.writeMem(0x9e4f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x428d, gbc.sp());
        EXPECT(0x9e51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e4f));
        EXPECT(0x9f, gbc.readMem(0x9e50));
        // CB 9F 00BA
        gbc.setState(0x583c, 0x9914, 0xf850, 0xf5a5, 0x27f1, 0x5516, 0x1, 0x1);
        gbc.writeMem(0x583c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9914, gbc.sp());
        EXPECT(0x583e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00BB
        gbc.setState(0x3d93, 0x12e7, 0x2450, 0xece3, 0xdcd3, 0xa50, 0x0, 0x1);
        gbc.writeMem(0x3d93, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x12e7, gbc.sp());
        EXPECT(0x3d95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00BD
        gbc.setState(0x4e61, 0x8674, 0x8540, 0x4667, 0x1ca8, 0x3ca6, 0x0, 0x0);
        gbc.writeMem(0x4e61, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8674, gbc.sp());
        EXPECT(0x4e63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00BE
        gbc.setState(0xbce, 0x383, 0x3210, 0x96fb, 0xbe16, 0xb85e, 0x0, 0x1);
        gbc.writeMem(0xbce, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x383, gbc.sp());
        EXPECT(0xbd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00BF
        gbc.setState(0xd1c3, 0x64d7, 0xf9f0, 0x42a5, 0xec0b, 0xa826, 0x1, 0x1);
        gbc.writeMem(0xd1c3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x64d7, gbc.sp());
        EXPECT(0xd1c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1c3));
        EXPECT(0x9f, gbc.readMem(0xd1c4));
        // CB 9F 00C0
        gbc.setState(0x5659, 0xffaf, 0x2eb0, 0xd808, 0x1a48, 0x8451, 0x0, 0x0);
        gbc.writeMem(0x5659, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xffaf, gbc.sp());
        EXPECT(0x565b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00C1
        gbc.setState(0xadc5, 0xef2e, 0x9200, 0xf135, 0x674d, 0x7f00, 0x0, 0x0);
        gbc.writeMem(0xadc5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xef2e, gbc.sp());
        EXPECT(0xadc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadc5));
        EXPECT(0x9f, gbc.readMem(0xadc6));
        // CB 9F 00C3
        gbc.setState(0x7262, 0xea81, 0x4f0, 0xace0, 0xd4cf, 0xb1f8, 0x0, 0x1);
        gbc.writeMem(0x7262, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xea81, gbc.sp());
        EXPECT(0x7264, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00C4
        gbc.setState(0xbe72, 0xc04, 0x4180, 0x8a70, 0x6c4b, 0x8c16, 0x1, 0x1);
        gbc.writeMem(0xbe72, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xc04, gbc.sp());
        EXPECT(0xbe74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe72));
        EXPECT(0x9f, gbc.readMem(0xbe73));
        // CB 9F 00C5
        gbc.setState(0x417a, 0x8041, 0xf710, 0x42b9, 0x91ee, 0x5d0e, 0x1, 0x0);
        gbc.writeMem(0x417a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8041, gbc.sp());
        EXPECT(0x417c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00C6
        gbc.setState(0x9585, 0x4c61, 0x8810, 0xb8a7, 0x3930, 0x880b, 0x0, 0x1);
        gbc.writeMem(0x9585, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x4c61, gbc.sp());
        EXPECT(0x9587, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9585));
        EXPECT(0x9f, gbc.readMem(0x9586));
        // CB 9F 00C7
        gbc.setState(0xcd5, 0x85bb, 0x6d80, 0x508f, 0xaffd, 0x4151, 0x1, 0x0);
        gbc.writeMem(0xcd5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x85bb, gbc.sp());
        EXPECT(0xcd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00C8
        gbc.setState(0x492d, 0x3545, 0x5840, 0x2e84, 0x50d3, 0x1470, 0x1, 0x1);
        gbc.writeMem(0x492d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3545, gbc.sp());
        EXPECT(0x492f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00C9
        gbc.setState(0xc597, 0x4bd6, 0x6910, 0xd7f2, 0x7906, 0x28bc, 0x0, 0x0);
        gbc.writeMem(0xc597, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x4bd6, gbc.sp());
        EXPECT(0xc599, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc597));
        EXPECT(0x9f, gbc.readMem(0xc598));
        // CB 9F 00CA
        gbc.setState(0x486, 0x89b2, 0x3fe0, 0x3d23, 0x9a32, 0x2a61, 0x1, 0x0);
        gbc.writeMem(0x486, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x89b2, gbc.sp());
        EXPECT(0x488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00CB
        gbc.setState(0x3144, 0x92af, 0x6c40, 0x513c, 0x800f, 0x2413, 0x1, 0x1);
        gbc.writeMem(0x3144, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x92af, gbc.sp());
        EXPECT(0x3146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00CC
        gbc.setState(0x6b90, 0x7c4a, 0x5fc0, 0xe2, 0x290f, 0xb690, 0x0, 0x0);
        gbc.writeMem(0x6b90, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x7c4a, gbc.sp());
        EXPECT(0x6b92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00CD
        gbc.setState(0xd71, 0x1815, 0xc310, 0x43c9, 0xf915, 0x7bf1, 0x0, 0x1);
        gbc.writeMem(0xd71, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x1815, gbc.sp());
        EXPECT(0xd73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00CE
        gbc.setState(0x56b6, 0xbd40, 0x810, 0x6e99, 0xbddd, 0x84ef, 0x1, 0x0);
        gbc.writeMem(0x56b6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xbd40, gbc.sp());
        EXPECT(0x56b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00CF
        gbc.setState(0x766f, 0x67ff, 0xeb60, 0xe77, 0xca5a, 0x7bdb, 0x0, 0x0);
        gbc.writeMem(0x766f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x67ff, gbc.sp());
        EXPECT(0x7671, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00D0
        gbc.setState(0x88c6, 0x7811, 0x2f10, 0x8cb3, 0x66de, 0xb35a, 0x1, 0x1);
        gbc.writeMem(0x88c6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x7811, gbc.sp());
        EXPECT(0x88c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88c6));
        EXPECT(0x9f, gbc.readMem(0x88c7));
        // CB 9F 00D1
        gbc.setState(0x52f8, 0x54ab, 0x3480, 0x88b6, 0x3114, 0xdc6a, 0x1, 0x1);
        gbc.writeMem(0x52f8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x54ab, gbc.sp());
        EXPECT(0x52fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00D2
        gbc.setState(0x2ce, 0xd4fb, 0x3b20, 0xa28b, 0x2146, 0x6889, 0x0, 0x1);
        gbc.writeMem(0x2ce, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd4fb, gbc.sp());
        EXPECT(0x2d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00D3
        gbc.setState(0x2e96, 0xb806, 0xb970, 0xc71e, 0x9cdb, 0x82c1, 0x0, 0x0);
        gbc.writeMem(0x2e96, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb806, gbc.sp());
        EXPECT(0x2e98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00D4
        gbc.setState(0xc084, 0xa40d, 0x26a0, 0xb5f1, 0x3bb8, 0x2e4e, 0x0, 0x1);
        gbc.writeMem(0xc084, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa40d, gbc.sp());
        EXPECT(0xc086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc084));
        EXPECT(0x9f, gbc.readMem(0xc085));
        // CB 9F 00D5
        gbc.setState(0xc4a8, 0xc1fd, 0xfa20, 0xf180, 0xa02f, 0x9838, 0x0, 0x0);
        gbc.writeMem(0xc4a8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc1fd, gbc.sp());
        EXPECT(0xc4aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4a8));
        EXPECT(0x9f, gbc.readMem(0xc4a9));
        // CB 9F 00D6
        gbc.setState(0x8e57, 0x2a9d, 0x2ef0, 0xf190, 0xfd28, 0x474f, 0x0, 0x0);
        gbc.writeMem(0x8e57, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x2a9d, gbc.sp());
        EXPECT(0x8e59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e57));
        EXPECT(0x9f, gbc.readMem(0x8e58));
        // CB 9F 00D7
        gbc.setState(0xba29, 0xc27c, 0xc180, 0x2078, 0x6074, 0xa0ad, 0x0, 0x0);
        gbc.writeMem(0xba29, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc27c, gbc.sp());
        EXPECT(0xba2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba29));
        EXPECT(0x9f, gbc.readMem(0xba2a));
        // CB 9F 00D8
        gbc.setState(0x64d3, 0xd3f5, 0xce10, 0x4f09, 0x33b6, 0x2966, 0x1, 0x1);
        gbc.writeMem(0x64d3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xd3f5, gbc.sp());
        EXPECT(0x64d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00D9
        gbc.setState(0xc96a, 0x8ece, 0xd2f0, 0x529d, 0x6f61, 0x95f6, 0x0, 0x1);
        gbc.writeMem(0xc96a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8ece, gbc.sp());
        EXPECT(0xc96c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc96a));
        EXPECT(0x9f, gbc.readMem(0xc96b));
        // CB 9F 00DA
        gbc.setState(0xb828, 0x9620, 0x4720, 0x22d6, 0x52e3, 0x5c2a, 0x0, 0x1);
        gbc.writeMem(0xb828, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x9620, gbc.sp());
        EXPECT(0xb82a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb828));
        EXPECT(0x9f, gbc.readMem(0xb829));
        // CB 9F 00DB
        gbc.setState(0xeb0e, 0x882d, 0x3560, 0x5889, 0x64d8, 0x8078, 0x1, 0x0);
        gbc.writeMem(0xeb0e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x882d, gbc.sp());
        EXPECT(0xeb10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb0e));
        EXPECT(0x9f, gbc.readMem(0xeb0f));
        // CB 9F 00DC
        gbc.setState(0x4a51, 0x3ddc, 0x5470, 0x1efe, 0x12ef, 0x5905, 0x0, 0x0);
        gbc.writeMem(0x4a51, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3ddc, gbc.sp());
        EXPECT(0x4a53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00DD
        gbc.setState(0x7e75, 0x9f17, 0xe640, 0x6d7a, 0x6124, 0x42, 0x1, 0x1);
        gbc.writeMem(0x7e75, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9f17, gbc.sp());
        EXPECT(0x7e77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00DE
        gbc.setState(0x7910, 0xdebb, 0xbd80, 0x28d, 0x54eb, 0xc645, 0x1, 0x0);
        gbc.writeMem(0x7910, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xdebb, gbc.sp());
        EXPECT(0x7912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00DF
        gbc.setState(0x5d9f, 0x9d01, 0x18f0, 0x67ec, 0xe2d3, 0x5fa6, 0x1, 0x1);
        gbc.writeMem(0x5d9f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x9d01, gbc.sp());
        EXPECT(0x5da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00E0
        gbc.setState(0xd18d, 0x7d5a, 0xa950, 0x5332, 0x4e18, 0x2ca9, 0x0, 0x0);
        gbc.writeMem(0xd18d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7d5a, gbc.sp());
        EXPECT(0xd18f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd18d));
        EXPECT(0x9f, gbc.readMem(0xd18e));
        // CB 9F 00E1
        gbc.setState(0x601c, 0xc7c, 0xca0, 0x6990, 0x225e, 0x1c06, 0x1, 0x1);
        gbc.writeMem(0x601c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xc7c, gbc.sp());
        EXPECT(0x601e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00E2
        gbc.setState(0x9c56, 0x31f0, 0x5410, 0x9c6, 0xf079, 0x7168, 0x0, 0x1);
        gbc.writeMem(0x9c56, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x31f0, gbc.sp());
        EXPECT(0x9c58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c56));
        EXPECT(0x9f, gbc.readMem(0x9c57));
        // CB 9F 00E3
        gbc.setState(0x5b42, 0xa592, 0xfb10, 0xea51, 0x16b, 0x9b4c, 0x1, 0x0);
        gbc.writeMem(0x5b42, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xa592, gbc.sp());
        EXPECT(0x5b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00E4
        gbc.setState(0x2369, 0x3eae, 0x5d50, 0x7df1, 0xd53f, 0xf37b, 0x1, 0x0);
        gbc.writeMem(0x2369, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x3eae, gbc.sp());
        EXPECT(0x236b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00E5
        gbc.setState(0x6926, 0x764b, 0x90d0, 0x26b6, 0x5f4f, 0xf86b, 0x0, 0x0);
        gbc.writeMem(0x6926, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x764b, gbc.sp());
        EXPECT(0x6928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00E6
        gbc.setState(0x6662, 0x9e50, 0xb370, 0xa0ef, 0xad8c, 0xf03b, 0x1, 0x0);
        gbc.writeMem(0x6662, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9e50, gbc.sp());
        EXPECT(0x6664, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00E7
        gbc.setState(0x5afc, 0xafca, 0xda00, 0x97c2, 0x4754, 0x5eae, 0x0, 0x1);
        gbc.writeMem(0x5afc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xafca, gbc.sp());
        EXPECT(0x5afe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00E8
        gbc.setState(0x90ab, 0xaf94, 0xa6d0, 0x1040, 0xb7f0, 0x7523, 0x1, 0x0);
        gbc.writeMem(0x90ab, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xaf94, gbc.sp());
        EXPECT(0x90ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ab));
        EXPECT(0x9f, gbc.readMem(0x90ac));
        // CB 9F 00E9
        gbc.setState(0xd3eb, 0xc773, 0x1980, 0xfa72, 0xeb78, 0xbb9, 0x0, 0x0);
        gbc.writeMem(0xd3eb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xc773, gbc.sp());
        EXPECT(0xd3ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3eb));
        EXPECT(0x9f, gbc.readMem(0xd3ec));
        // CB 9F 00EA
        gbc.setState(0x9414, 0xe447, 0xead0, 0xf63e, 0x7bd9, 0xe570, 0x1, 0x0);
        gbc.writeMem(0x9414, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe447, gbc.sp());
        EXPECT(0x9416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9414));
        EXPECT(0x9f, gbc.readMem(0x9415));
        // CB 9F 00EB
        gbc.setState(0xd29f, 0x329c, 0x7140, 0x8901, 0x3798, 0x27d3, 0x1, 0x0);
        gbc.writeMem(0xd29f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x329c, gbc.sp());
        EXPECT(0xd2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd29f));
        EXPECT(0x9f, gbc.readMem(0xd2a0));
        // CB 9F 00EC
        gbc.setState(0x9062, 0x1985, 0x8d90, 0xd7fd, 0xaed4, 0xe6a5, 0x0, 0x1);
        gbc.writeMem(0x9062, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1985, gbc.sp());
        EXPECT(0x9064, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9062));
        EXPECT(0x9f, gbc.readMem(0x9063));
        // CB 9F 00ED
        gbc.setState(0x67d5, 0x3e5b, 0xcda0, 0xd650, 0x5f6d, 0x4153, 0x1, 0x0);
        gbc.writeMem(0x67d5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3e5b, gbc.sp());
        EXPECT(0x67d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00EE
        gbc.setState(0x9470, 0x2702, 0xf390, 0x40c9, 0xcdee, 0xdc0, 0x1, 0x1);
        gbc.writeMem(0x9470, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2702, gbc.sp());
        EXPECT(0x9472, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9470));
        EXPECT(0x9f, gbc.readMem(0x9471));
        // CB 9F 00EF
        gbc.setState(0x4760, 0x29b, 0xcaf0, 0x23da, 0x61df, 0xb943, 0x0, 0x1);
        gbc.writeMem(0x4760, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x29b, gbc.sp());
        EXPECT(0x4762, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00F0
        gbc.setState(0x5dae, 0xee60, 0xb010, 0xf519, 0xfa7, 0x26e7, 0x0, 0x0);
        gbc.writeMem(0x5dae, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xee60, gbc.sp());
        EXPECT(0x5db0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00F1
        gbc.setState(0x50d4, 0x1087, 0xb810, 0x2cc7, 0x2ae6, 0x9f1c, 0x0, 0x1);
        gbc.writeMem(0x50d4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x1087, gbc.sp());
        EXPECT(0x50d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00F2
        gbc.setState(0xeafa, 0xc46d, 0x6490, 0xb084, 0xcce1, 0x192e, 0x1, 0x1);
        gbc.writeMem(0xeafa, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc46d, gbc.sp());
        EXPECT(0xeafc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeafa));
        EXPECT(0x9f, gbc.readMem(0xeafb));
        // CB 9F 00F3
        gbc.setState(0x2834, 0x7bd9, 0x82e0, 0xbe6d, 0x484a, 0x48c1, 0x1, 0x1);
        gbc.writeMem(0x2834, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x7bd9, gbc.sp());
        EXPECT(0x2836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00F4
        gbc.setState(0xb11a, 0xe435, 0x3ba0, 0x93e4, 0x35f8, 0x4d1e, 0x0, 0x1);
        gbc.writeMem(0xb11a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe435, gbc.sp());
        EXPECT(0xb11c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb11a));
        EXPECT(0x9f, gbc.readMem(0xb11b));
        // CB 9F 00F5
        gbc.setState(0x74a7, 0x1a3f, 0x4400, 0x96df, 0x9375, 0x58da, 0x1, 0x1);
        gbc.writeMem(0x74a7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1a3f, gbc.sp());
        EXPECT(0x74a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00F6
        gbc.setState(0x9aeb, 0x7561, 0x4690, 0xe6a2, 0xd269, 0x5279, 0x1, 0x0);
        gbc.writeMem(0x9aeb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7561, gbc.sp());
        EXPECT(0x9aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9aeb));
        EXPECT(0x9f, gbc.readMem(0x9aec));
        // CB 9F 00F7
        gbc.setState(0x6107, 0xb797, 0x4120, 0x7bca, 0xeaee, 0xa8c8, 0x0, 0x1);
        gbc.writeMem(0x6107, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb797, gbc.sp());
        EXPECT(0x6109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00F8
        gbc.setState(0xbc74, 0x1120, 0x4ae0, 0x2c2e, 0x4afb, 0x3895, 0x1, 0x0);
        gbc.writeMem(0xbc74, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1120, gbc.sp());
        EXPECT(0xbc76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc74));
        EXPECT(0x9f, gbc.readMem(0xbc75));
        // CB 9F 00F9
        gbc.setState(0x2b52, 0xfb05, 0x7770, 0x85a9, 0xc1cd, 0x2430, 0x1, 0x1);
        gbc.writeMem(0x2b52, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xfb05, gbc.sp());
        EXPECT(0x2b54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00FA
        gbc.setState(0x4de5, 0xf5bd, 0xdb70, 0x2671, 0x5c9, 0x6027, 0x1, 0x1);
        gbc.writeMem(0x4de5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xf5bd, gbc.sp());
        EXPECT(0x4de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00FC
        gbc.setState(0x62d3, 0x2766, 0x35e0, 0x7a23, 0x6355, 0x7fc, 0x1, 0x0);
        gbc.writeMem(0x62d3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2766, gbc.sp());
        EXPECT(0x62d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00FD
        gbc.setState(0x4f98, 0x1394, 0x7850, 0xa57c, 0x4ec, 0x6c29, 0x0, 0x0);
        gbc.writeMem(0x4f98, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1394, gbc.sp());
        EXPECT(0x4f9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 00FE
        gbc.setState(0x3115, 0x6e34, 0x2140, 0x6b1f, 0x3775, 0xf33c, 0x1, 0x1);
        gbc.writeMem(0x3115, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6e34, gbc.sp());
        EXPECT(0x3117, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 00FF
        gbc.setState(0x4a2e, 0x541f, 0xcda0, 0x3150, 0x539, 0x1ffd, 0x1, 0x1);
        gbc.writeMem(0x4a2e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x541f, gbc.sp());
        EXPECT(0x4a30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0100
        gbc.setState(0xd370, 0x323, 0xa40, 0x65ad, 0x4a4f, 0xd995, 0x1, 0x0);
        gbc.writeMem(0xd370, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x323, gbc.sp());
        EXPECT(0xd372, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd370));
        EXPECT(0x9f, gbc.readMem(0xd371));
        // CB 9F 0101
        gbc.setState(0xc712, 0x9f89, 0x1620, 0xb7a7, 0xfc52, 0x2e19, 0x0, 0x0);
        gbc.writeMem(0xc712, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9f89, gbc.sp());
        EXPECT(0xc714, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc712));
        EXPECT(0x9f, gbc.readMem(0xc713));
        // CB 9F 0102
        gbc.setState(0xaa4c, 0x7e33, 0x8e20, 0xc5b5, 0x6a7d, 0x27f, 0x1, 0x0);
        gbc.writeMem(0xaa4c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7e33, gbc.sp());
        EXPECT(0xaa4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa4c));
        EXPECT(0x9f, gbc.readMem(0xaa4d));
        // CB 9F 0103
        gbc.setState(0xe1cf, 0x8155, 0xaf00, 0x8f3b, 0xe26d, 0x654e, 0x0, 0x0);
        gbc.writeMem(0xe1cf, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8155, gbc.sp());
        EXPECT(0xe1d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1cf));
        EXPECT(0x9f, gbc.readMem(0xe1d0));
        // CB 9F 0104
        gbc.setState(0xcc2c, 0xf594, 0xfb30, 0x7aa7, 0xc59, 0x1c66, 0x1, 0x1);
        gbc.writeMem(0xcc2c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xf594, gbc.sp());
        EXPECT(0xcc2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc2c));
        EXPECT(0x9f, gbc.readMem(0xcc2d));
        // CB 9F 0105
        gbc.setState(0x4ba9, 0x5762, 0x5a10, 0x35d4, 0x9e6d, 0x3c41, 0x1, 0x1);
        gbc.writeMem(0x4ba9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x5762, gbc.sp());
        EXPECT(0x4bab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0107
        gbc.setState(0xe121, 0x3c2a, 0xc460, 0x60e, 0x9a7a, 0x16ba, 0x0, 0x0);
        gbc.writeMem(0xe121, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x3c2a, gbc.sp());
        EXPECT(0xe123, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe121));
        EXPECT(0x9f, gbc.readMem(0xe122));
        // CB 9F 0108
        gbc.setState(0xb738, 0x92e0, 0x4ee0, 0xd34b, 0x3ddb, 0xbf91, 0x1, 0x0);
        gbc.writeMem(0xb738, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x92e0, gbc.sp());
        EXPECT(0xb73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb738));
        EXPECT(0x9f, gbc.readMem(0xb739));
        // CB 9F 010A
        gbc.setState(0x1706, 0x3e1c, 0xb320, 0xc0b2, 0x3399, 0x3ac0, 0x0, 0x1);
        gbc.writeMem(0x1706, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x3e1c, gbc.sp());
        EXPECT(0x1708, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 010B
        gbc.setState(0x4402, 0xfc2f, 0x9b60, 0x831e, 0x2e48, 0x49be, 0x0, 0x0);
        gbc.writeMem(0x4402, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfc2f, gbc.sp());
        EXPECT(0x4404, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 010C
        gbc.setState(0x50e5, 0x246e, 0xe510, 0xd0f2, 0x297e, 0x26dc, 0x0, 0x1);
        gbc.writeMem(0x50e5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x246e, gbc.sp());
        EXPECT(0x50e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 010D
        gbc.setState(0xbbd8, 0xc5df, 0x2400, 0x8b8a, 0x3e06, 0x4784, 0x1, 0x0);
        gbc.writeMem(0xbbd8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xc5df, gbc.sp());
        EXPECT(0xbbda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd8));
        EXPECT(0x9f, gbc.readMem(0xbbd9));
        // CB 9F 010E
        gbc.setState(0xe49c, 0x7ed8, 0x7890, 0x963a, 0xcd42, 0x252c, 0x0, 0x1);
        gbc.writeMem(0xe49c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7ed8, gbc.sp());
        EXPECT(0xe49e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49c));
        EXPECT(0x9f, gbc.readMem(0xe49d));
        // CB 9F 010F
        gbc.setState(0xaf38, 0xdf2f, 0x8e70, 0x3eb0, 0xf5d4, 0xcf4f, 0x1, 0x1);
        gbc.writeMem(0xaf38, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xdf2f, gbc.sp());
        EXPECT(0xaf3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf38));
        EXPECT(0x9f, gbc.readMem(0xaf39));
        // CB 9F 0110
        gbc.setState(0x262a, 0x4987, 0xec0, 0xa79f, 0x6f2e, 0x7035, 0x1, 0x0);
        gbc.writeMem(0x262a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4987, gbc.sp());
        EXPECT(0x262c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0111
        gbc.setState(0x70a3, 0xf8d0, 0xccf0, 0xa860, 0xde01, 0xa95a, 0x1, 0x0);
        gbc.writeMem(0x70a3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf8d0, gbc.sp());
        EXPECT(0x70a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0112
        gbc.setState(0x3aea, 0x39ea, 0x2f0, 0x1550, 0xf1da, 0xa825, 0x0, 0x1);
        gbc.writeMem(0x3aea, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x39ea, gbc.sp());
        EXPECT(0x3aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0113
        gbc.setState(0x4045, 0xc862, 0x68e0, 0x2a57, 0x3e1b, 0xc240, 0x0, 0x1);
        gbc.writeMem(0x4045, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc862, gbc.sp());
        EXPECT(0x4047, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0114
        gbc.setState(0x4d21, 0x54, 0x85e0, 0xacde, 0x932, 0xda9e, 0x0, 0x1);
        gbc.writeMem(0x4d21, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x54, gbc.sp());
        EXPECT(0x4d23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0115
        gbc.setState(0xaa64, 0x9a65, 0xc760, 0x9835, 0x625d, 0xd22c, 0x0, 0x0);
        gbc.writeMem(0xaa64, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x9a65, gbc.sp());
        EXPECT(0xaa66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa64));
        EXPECT(0x9f, gbc.readMem(0xaa65));
        // CB 9F 0117
        gbc.setState(0x4bc0, 0xafba, 0xe70, 0x87dc, 0x1e86, 0x8513, 0x0, 0x1);
        gbc.writeMem(0x4bc0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xafba, gbc.sp());
        EXPECT(0x4bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0118
        gbc.setState(0x66ab, 0x86fb, 0x8710, 0x20b6, 0x9fc3, 0xd573, 0x1, 0x1);
        gbc.writeMem(0x66ab, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x86fb, gbc.sp());
        EXPECT(0x66ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0119
        gbc.setState(0xd8aa, 0x1d42, 0xebf0, 0x5bac, 0x8c3d, 0xa4a5, 0x0, 0x1);
        gbc.writeMem(0xd8aa, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1d42, gbc.sp());
        EXPECT(0xd8ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8aa));
        EXPECT(0x9f, gbc.readMem(0xd8ab));
        // CB 9F 011A
        gbc.setState(0xd973, 0x53fe, 0xd190, 0x6487, 0xf81b, 0x31a9, 0x1, 0x1);
        gbc.writeMem(0xd973, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x53fe, gbc.sp());
        EXPECT(0xd975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd973));
        EXPECT(0x9f, gbc.readMem(0xd974));
        // CB 9F 011B
        gbc.setState(0x64a2, 0x8b63, 0xfbe0, 0x5c01, 0x6eaa, 0xb7b9, 0x0, 0x0);
        gbc.writeMem(0x64a2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8b63, gbc.sp());
        EXPECT(0x64a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 011C
        gbc.setState(0x2b15, 0xa292, 0x19f0, 0x4cae, 0x1de5, 0xc64a, 0x0, 0x1);
        gbc.writeMem(0x2b15, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xa292, gbc.sp());
        EXPECT(0x2b17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 011D
        gbc.setState(0xd22, 0x3d23, 0x5640, 0xdeec, 0x68fa, 0x331a, 0x0, 0x1);
        gbc.writeMem(0xd22, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3d23, gbc.sp());
        EXPECT(0xd24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 011E
        gbc.setState(0x9ec5, 0x302f, 0xce30, 0xfd93, 0x282b, 0xa2ba, 0x0, 0x0);
        gbc.writeMem(0x9ec5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x302f, gbc.sp());
        EXPECT(0x9ec7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ec5));
        EXPECT(0x9f, gbc.readMem(0x9ec6));
        // CB 9F 0120
        gbc.setState(0xec21, 0x63d0, 0xaa20, 0x2e91, 0xcd14, 0x7429, 0x0, 0x1);
        gbc.writeMem(0xec21, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x63d0, gbc.sp());
        EXPECT(0xec23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec21));
        EXPECT(0x9f, gbc.readMem(0xec22));
        // CB 9F 0121
        gbc.setState(0xcd52, 0xfe35, 0x5de0, 0x58d7, 0xa750, 0xc0e9, 0x0, 0x1);
        gbc.writeMem(0xcd52, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xfe35, gbc.sp());
        EXPECT(0xcd54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd52));
        EXPECT(0x9f, gbc.readMem(0xcd53));
        // CB 9F 0122
        gbc.setState(0x10de, 0x7388, 0x2650, 0x4f13, 0x6e04, 0xb4a6, 0x0, 0x0);
        gbc.writeMem(0x10de, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7388, gbc.sp());
        EXPECT(0x10e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0123
        gbc.setState(0x89d9, 0xcc32, 0x17e0, 0x3232, 0xec98, 0x5a51, 0x1, 0x1);
        gbc.writeMem(0x89d9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xcc32, gbc.sp());
        EXPECT(0x89db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d9));
        EXPECT(0x9f, gbc.readMem(0x89da));
        // CB 9F 0124
        gbc.setState(0xe9ff, 0x5109, 0xee70, 0x243b, 0x555d, 0xddf1, 0x1, 0x0);
        gbc.writeMem(0xe9ff, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5109, gbc.sp());
        EXPECT(0xea01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9ff));
        EXPECT(0x9f, gbc.readMem(0xea00));
        // CB 9F 0125
        gbc.setState(0xc639, 0x295e, 0x2e30, 0xbc93, 0xb7e3, 0x708d, 0x1, 0x1);
        gbc.writeMem(0xc639, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x295e, gbc.sp());
        EXPECT(0xc63b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc639));
        EXPECT(0x9f, gbc.readMem(0xc63a));
        // CB 9F 0126
        gbc.setState(0x96c5, 0x202b, 0xdfb0, 0x2c83, 0x62e0, 0x55f5, 0x0, 0x0);
        gbc.writeMem(0x96c5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x202b, gbc.sp());
        EXPECT(0x96c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96c5));
        EXPECT(0x9f, gbc.readMem(0x96c6));
        // CB 9F 0127
        gbc.setState(0x92ae, 0x773a, 0x4010, 0x3cb2, 0xe2f4, 0x2edb, 0x0, 0x0);
        gbc.writeMem(0x92ae, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x773a, gbc.sp());
        EXPECT(0x92b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92ae));
        EXPECT(0x9f, gbc.readMem(0x92af));
        // CB 9F 0128
        gbc.setState(0x2559, 0x504c, 0x2d20, 0x2692, 0x66bf, 0xadb6, 0x0, 0x1);
        gbc.writeMem(0x2559, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x504c, gbc.sp());
        EXPECT(0x255b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0129
        gbc.setState(0xe5b4, 0xa77b, 0x3fa0, 0x45dc, 0xae8d, 0x4c21, 0x1, 0x1);
        gbc.writeMem(0xe5b4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa77b, gbc.sp());
        EXPECT(0xe5b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5b4));
        EXPECT(0x9f, gbc.readMem(0xe5b5));
        // CB 9F 012A
        gbc.setState(0x2644, 0xec53, 0xa420, 0x98ef, 0x88f1, 0x6281, 0x0, 0x0);
        gbc.writeMem(0x2644, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xec53, gbc.sp());
        EXPECT(0x2646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 012B
        gbc.setState(0x146e, 0x5c68, 0x5750, 0x27a8, 0xb63e, 0xe4c9, 0x0, 0x1);
        gbc.writeMem(0x146e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5c68, gbc.sp());
        EXPECT(0x1470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 012C
        gbc.setState(0xfc4, 0xfa4d, 0x55e0, 0x55cd, 0xda17, 0x75a7, 0x1, 0x0);
        gbc.writeMem(0xfc4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfa4d, gbc.sp());
        EXPECT(0xfc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 012D
        gbc.setState(0x8c20, 0x82ef, 0xcc50, 0x11e6, 0x8bb1, 0x6b1, 0x1, 0x1);
        gbc.writeMem(0x8c20, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x82ef, gbc.sp());
        EXPECT(0x8c22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c20));
        EXPECT(0x9f, gbc.readMem(0x8c21));
        // CB 9F 012E
        gbc.setState(0x562e, 0x8e8b, 0xcc50, 0x4b4d, 0x4d78, 0x7a23, 0x0, 0x0);
        gbc.writeMem(0x562e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x8e8b, gbc.sp());
        EXPECT(0x5630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 012F
        gbc.setState(0x45ca, 0xa352, 0x9f10, 0x54cb, 0x2428, 0x1e02, 0x0, 0x0);
        gbc.writeMem(0x45ca, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa352, gbc.sp());
        EXPECT(0x45cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0130
        gbc.setState(0xdcf4, 0x261d, 0x7330, 0x6ccc, 0xe444, 0x2755, 0x0, 0x1);
        gbc.writeMem(0xdcf4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x261d, gbc.sp());
        EXPECT(0xdcf6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf4));
        EXPECT(0x9f, gbc.readMem(0xdcf5));
        // CB 9F 0131
        gbc.setState(0x847f, 0xe78b, 0x7c90, 0xf2f7, 0xc822, 0x9505, 0x1, 0x0);
        gbc.writeMem(0x847f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe78b, gbc.sp());
        EXPECT(0x8481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x847f));
        EXPECT(0x9f, gbc.readMem(0x8480));
        // CB 9F 0132
        gbc.setState(0x5888, 0xd834, 0x1ad0, 0x1b78, 0x6de6, 0x8b58, 0x1, 0x1);
        gbc.writeMem(0x5888, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xd834, gbc.sp());
        EXPECT(0x588a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0133
        gbc.setState(0x2117, 0xc038, 0x3e0, 0xb47f, 0x3d57, 0xd95b, 0x1, 0x1);
        gbc.writeMem(0x2117, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xc038, gbc.sp());
        EXPECT(0x2119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0134
        gbc.setState(0x4736, 0x6645, 0xb720, 0xd25e, 0x3af6, 0x99e5, 0x0, 0x0);
        gbc.writeMem(0x4736, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x6645, gbc.sp());
        EXPECT(0x4738, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0135
        gbc.setState(0x5ef1, 0x1d7f, 0xeb60, 0x89e8, 0x3684, 0xaf28, 0x1, 0x0);
        gbc.writeMem(0x5ef1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1d7f, gbc.sp());
        EXPECT(0x5ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0136
        gbc.setState(0xbad4, 0x8eb2, 0xf7f0, 0x7d12, 0xef40, 0xb805, 0x0, 0x0);
        gbc.writeMem(0xbad4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x8eb2, gbc.sp());
        EXPECT(0xbad6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad4));
        EXPECT(0x9f, gbc.readMem(0xbad5));
        // CB 9F 0138
        gbc.setState(0xcfe2, 0x140c, 0x95c0, 0x7a76, 0xe24a, 0xab51, 0x1, 0x0);
        gbc.writeMem(0xcfe2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x140c, gbc.sp());
        EXPECT(0xcfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfe2));
        EXPECT(0x9f, gbc.readMem(0xcfe3));
        // CB 9F 0139
        gbc.setState(0x3223, 0x7d6f, 0xbd90, 0x133b, 0xcb9f, 0x88fd, 0x0, 0x1);
        gbc.writeMem(0x3223, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x7d6f, gbc.sp());
        EXPECT(0x3225, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 013A
        gbc.setState(0x89e3, 0x867b, 0x3850, 0x8f31, 0x32b2, 0x27b2, 0x0, 0x0);
        gbc.writeMem(0x89e3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x867b, gbc.sp());
        EXPECT(0x89e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89e3));
        EXPECT(0x9f, gbc.readMem(0x89e4));
        // CB 9F 013B
        gbc.setState(0x9e62, 0xcac0, 0x68c0, 0xd910, 0xb228, 0x10ea, 0x0, 0x0);
        gbc.writeMem(0x9e62, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xcac0, gbc.sp());
        EXPECT(0x9e64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e62));
        EXPECT(0x9f, gbc.readMem(0x9e63));
        // CB 9F 013C
        gbc.setState(0x3db9, 0xf26e, 0x50c0, 0xc6ac, 0x54db, 0xc76f, 0x0, 0x1);
        gbc.writeMem(0x3db9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf26e, gbc.sp());
        EXPECT(0x3dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 013D
        gbc.setState(0xbbf9, 0x6241, 0xbfa0, 0xb523, 0x387e, 0x713c, 0x1, 0x0);
        gbc.writeMem(0xbbf9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x6241, gbc.sp());
        EXPECT(0xbbfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbf9));
        EXPECT(0x9f, gbc.readMem(0xbbfa));
        // CB 9F 013E
        gbc.setState(0x2089, 0x42ef, 0xa160, 0xb250, 0x32a1, 0xb7d1, 0x1, 0x1);
        gbc.writeMem(0x2089, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x42ef, gbc.sp());
        EXPECT(0x208b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 013F
        gbc.setState(0xbc2c, 0xa51b, 0x6100, 0x1863, 0x9292, 0x879e, 0x0, 0x0);
        gbc.writeMem(0xbc2c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa51b, gbc.sp());
        EXPECT(0xbc2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc2c));
        EXPECT(0x9f, gbc.readMem(0xbc2d));
        // CB 9F 0140
        gbc.setState(0xed98, 0x9a0, 0x4120, 0x30d0, 0xc951, 0xc60e, 0x1, 0x0);
        gbc.writeMem(0xed98, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9a0, gbc.sp());
        EXPECT(0xed9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed98));
        EXPECT(0x9f, gbc.readMem(0xed99));
        // CB 9F 0141
        gbc.setState(0x72ec, 0xe98, 0xa50, 0x3bea, 0x2e9c, 0x66c9, 0x1, 0x0);
        gbc.writeMem(0x72ec, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe98, gbc.sp());
        EXPECT(0x72ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0142
        gbc.setState(0x9440, 0xbce6, 0xa4c0, 0xe3c5, 0xe7e6, 0x52a1, 0x1, 0x1);
        gbc.writeMem(0x9440, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xbce6, gbc.sp());
        EXPECT(0x9442, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9440));
        EXPECT(0x9f, gbc.readMem(0x9441));
        // CB 9F 0143
        gbc.setState(0xbbd5, 0x4baa, 0x1450, 0x41c8, 0xd91c, 0xbc0c, 0x1, 0x1);
        gbc.writeMem(0xbbd5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4baa, gbc.sp());
        EXPECT(0xbbd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbd5));
        EXPECT(0x9f, gbc.readMem(0xbbd6));
        // CB 9F 0144
        gbc.setState(0x4da0, 0x87df, 0xff40, 0x1230, 0x94df, 0x62a6, 0x1, 0x0);
        gbc.writeMem(0x4da0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x87df, gbc.sp());
        EXPECT(0x4da2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0145
        gbc.setState(0xe562, 0x95e8, 0xa420, 0xec2c, 0xc4e7, 0x38cf, 0x0, 0x1);
        gbc.writeMem(0xe562, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x95e8, gbc.sp());
        EXPECT(0xe564, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe562));
        EXPECT(0x9f, gbc.readMem(0xe563));
        // CB 9F 0146
        gbc.setState(0xa7dc, 0xc5ef, 0xa1c0, 0x8c4e, 0x9d5, 0x7f63, 0x1, 0x1);
        gbc.writeMem(0xa7dc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xc5ef, gbc.sp());
        EXPECT(0xa7de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa7dc));
        EXPECT(0x9f, gbc.readMem(0xa7dd));
        // CB 9F 0147
        gbc.setState(0x7972, 0xcd9c, 0x61b0, 0x705f, 0xdcfa, 0x3af9, 0x1, 0x0);
        gbc.writeMem(0x7972, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xcd9c, gbc.sp());
        EXPECT(0x7974, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 014A
        gbc.setState(0x2c5a, 0xa452, 0x7840, 0xa7e0, 0xcb34, 0x4ee2, 0x0, 0x1);
        gbc.writeMem(0x2c5a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xa452, gbc.sp());
        EXPECT(0x2c5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 014B
        gbc.setState(0x4afe, 0x5b46, 0xc9c0, 0x903f, 0x57cb, 0x5dd1, 0x0, 0x0);
        gbc.writeMem(0x4afe, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5b46, gbc.sp());
        EXPECT(0x4b00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 014C
        gbc.setState(0x2c2b, 0xcb45, 0x34d0, 0x7fb1, 0xb8af, 0x39bf, 0x0, 0x0);
        gbc.writeMem(0x2c2b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xcb45, gbc.sp());
        EXPECT(0x2c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 014D
        gbc.setState(0xb037, 0xad48, 0x3f70, 0xb8da, 0xc7b9, 0xc453, 0x1, 0x1);
        gbc.writeMem(0xb037, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xad48, gbc.sp());
        EXPECT(0xb039, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb037));
        EXPECT(0x9f, gbc.readMem(0xb038));
        // CB 9F 014E
        gbc.setState(0xaeb0, 0xf52e, 0x64a0, 0x4dba, 0x1bb4, 0x8dbf, 0x1, 0x1);
        gbc.writeMem(0xaeb0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf52e, gbc.sp());
        EXPECT(0xaeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb0));
        EXPECT(0x9f, gbc.readMem(0xaeb1));
        // CB 9F 014F
        gbc.setState(0x3c66, 0x5638, 0xe780, 0x3ac6, 0x126, 0x9778, 0x1, 0x1);
        gbc.writeMem(0x3c66, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x5638, gbc.sp());
        EXPECT(0x3c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0150
        gbc.setState(0xe4b8, 0xc6fc, 0x160, 0xbbf5, 0xb645, 0x36e8, 0x0, 0x0);
        gbc.writeMem(0xe4b8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc6fc, gbc.sp());
        EXPECT(0xe4ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b8));
        EXPECT(0x9f, gbc.readMem(0xe4b9));
        // CB 9F 0151
        gbc.setState(0x9eb3, 0x6aca, 0x5ef0, 0x11a6, 0xbc94, 0xdcdd, 0x1, 0x1);
        gbc.writeMem(0x9eb3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6aca, gbc.sp());
        EXPECT(0x9eb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9eb3));
        EXPECT(0x9f, gbc.readMem(0x9eb4));
        // CB 9F 0152
        gbc.setState(0xdf0a, 0xf49d, 0x1510, 0x904f, 0xcb29, 0x324f, 0x0, 0x1);
        gbc.writeMem(0xdf0a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf49d, gbc.sp());
        EXPECT(0xdf0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf0a));
        EXPECT(0x9f, gbc.readMem(0xdf0b));
        // CB 9F 0153
        gbc.setState(0x32b7, 0x66cf, 0xa2a0, 0x1285, 0xe428, 0x318c, 0x0, 0x1);
        gbc.writeMem(0x32b7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x66cf, gbc.sp());
        EXPECT(0x32b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0154
        gbc.setState(0xa267, 0x58d2, 0x4240, 0x32c, 0x5a64, 0x419, 0x0, 0x0);
        gbc.writeMem(0xa267, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x58d2, gbc.sp());
        EXPECT(0xa269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa267));
        EXPECT(0x9f, gbc.readMem(0xa268));
        // CB 9F 0155
        gbc.setState(0x1e97, 0x3a1, 0x59d0, 0x7e54, 0x1cd0, 0xfe85, 0x1, 0x1);
        gbc.writeMem(0x1e97, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3a1, gbc.sp());
        EXPECT(0x1e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0156
        gbc.setState(0xb33d, 0xb424, 0xfd20, 0x2b63, 0xf8df, 0x706a, 0x0, 0x1);
        gbc.writeMem(0xb33d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb424, gbc.sp());
        EXPECT(0xb33f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb33d));
        EXPECT(0x9f, gbc.readMem(0xb33e));
        // CB 9F 0157
        gbc.setState(0x11db, 0x5e62, 0x6450, 0xcfb4, 0x8e2b, 0x163f, 0x0, 0x0);
        gbc.writeMem(0x11db, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5e62, gbc.sp());
        EXPECT(0x11dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0158
        gbc.setState(0xe515, 0x5ed4, 0x730, 0xced7, 0x1479, 0xa4a7, 0x0, 0x0);
        gbc.writeMem(0xe515, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5ed4, gbc.sp());
        EXPECT(0xe517, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe515));
        EXPECT(0x9f, gbc.readMem(0xe516));
        // CB 9F 0159
        gbc.setState(0x37a4, 0x575d, 0x940, 0x67ff, 0xfc46, 0x5421, 0x1, 0x0);
        gbc.writeMem(0x37a4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x575d, gbc.sp());
        EXPECT(0x37a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 015A
        gbc.setState(0x7c56, 0xce6e, 0xd880, 0x8a88, 0x7adf, 0xb126, 0x1, 0x1);
        gbc.writeMem(0x7c56, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xce6e, gbc.sp());
        EXPECT(0x7c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 015B
        gbc.setState(0xbc03, 0xc2a4, 0x8690, 0xeac0, 0xd79a, 0xc2ac, 0x0, 0x1);
        gbc.writeMem(0xbc03, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc2a4, gbc.sp());
        EXPECT(0xbc05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc03));
        EXPECT(0x9f, gbc.readMem(0xbc04));
        // CB 9F 015D
        gbc.setState(0x62cc, 0x127b, 0xd8a0, 0x2635, 0x5a23, 0xc6db, 0x0, 0x1);
        gbc.writeMem(0x62cc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x127b, gbc.sp());
        EXPECT(0x62ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 015E
        gbc.setState(0xf46, 0xfe5b, 0x3c20, 0x48f6, 0xbd44, 0x1548, 0x0, 0x0);
        gbc.writeMem(0xf46, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfe5b, gbc.sp());
        EXPECT(0xf48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 015F
        gbc.setState(0xb61a, 0xcca6, 0x18a0, 0xb600, 0x7b2f, 0xdd2f, 0x1, 0x1);
        gbc.writeMem(0xb61a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xcca6, gbc.sp());
        EXPECT(0xb61c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb61a));
        EXPECT(0x9f, gbc.readMem(0xb61b));
        // CB 9F 0160
        gbc.setState(0xca13, 0xb75, 0xb250, 0x19a6, 0xee6a, 0xcb8d, 0x1, 0x1);
        gbc.writeMem(0xca13, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb75, gbc.sp());
        EXPECT(0xca15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca13));
        EXPECT(0x9f, gbc.readMem(0xca14));
        // CB 9F 0161
        gbc.setState(0xbedd, 0x221a, 0xc800, 0x454f, 0x7365, 0x3aca, 0x0, 0x0);
        gbc.writeMem(0xbedd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x221a, gbc.sp());
        EXPECT(0xbedf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbedd));
        EXPECT(0x9f, gbc.readMem(0xbede));
        // CB 9F 0162
        gbc.setState(0x2c44, 0x7ea1, 0x2b90, 0x9e82, 0x9ba7, 0xc80d, 0x0, 0x0);
        gbc.writeMem(0x2c44, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x7ea1, gbc.sp());
        EXPECT(0x2c46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0163
        gbc.setState(0xe317, 0xee82, 0x1a90, 0x8e32, 0x2868, 0x6cc0, 0x0, 0x0);
        gbc.writeMem(0xe317, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xee82, gbc.sp());
        EXPECT(0xe319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe317));
        EXPECT(0x9f, gbc.readMem(0xe318));
        // CB 9F 0164
        gbc.setState(0x2b6d, 0x18d3, 0x9290, 0x7356, 0x759d, 0x2374, 0x0, 0x1);
        gbc.writeMem(0x2b6d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x18d3, gbc.sp());
        EXPECT(0x2b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0165
        gbc.setState(0x6b1, 0x8def, 0xa920, 0x571c, 0xe66f, 0x23a5, 0x0, 0x1);
        gbc.writeMem(0x6b1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x8def, gbc.sp());
        EXPECT(0x6b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0167
        gbc.setState(0x3d72, 0xf5fa, 0xb0b0, 0x1350, 0x4a1, 0x47da, 0x0, 0x0);
        gbc.writeMem(0x3d72, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf5fa, gbc.sp());
        EXPECT(0x3d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0168
        gbc.setState(0x1112, 0x511a, 0x57b0, 0x5691, 0x518b, 0x6810, 0x1, 0x1);
        gbc.writeMem(0x1112, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x511a, gbc.sp());
        EXPECT(0x1114, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0169
        gbc.setState(0xafe3, 0x455, 0x11f0, 0xbcb9, 0x3cf3, 0x7ad4, 0x1, 0x0);
        gbc.writeMem(0xafe3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x455, gbc.sp());
        EXPECT(0xafe5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafe3));
        EXPECT(0x9f, gbc.readMem(0xafe4));
        // CB 9F 016A
        gbc.setState(0x5361, 0x3fe6, 0xa8a0, 0x283e, 0x81a6, 0x657c, 0x0, 0x0);
        gbc.writeMem(0x5361, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3fe6, gbc.sp());
        EXPECT(0x5363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 016B
        gbc.setState(0x3472, 0xf107, 0xa250, 0x6902, 0xfe95, 0x7cdb, 0x0, 0x0);
        gbc.writeMem(0x3472, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf107, gbc.sp());
        EXPECT(0x3474, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 016C
        gbc.setState(0xaee6, 0xbd81, 0x3630, 0xa936, 0xb4bd, 0xe2e8, 0x0, 0x1);
        gbc.writeMem(0xaee6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xbd81, gbc.sp());
        EXPECT(0xaee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaee6));
        EXPECT(0x9f, gbc.readMem(0xaee7));
        // CB 9F 016D
        gbc.setState(0x68ea, 0x8737, 0xce20, 0x6640, 0xd2cd, 0x426, 0x0, 0x0);
        gbc.writeMem(0x68ea, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x8737, gbc.sp());
        EXPECT(0x68ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 016E
        gbc.setState(0xa034, 0xe62b, 0x5d20, 0xa68, 0x3374, 0xfac9, 0x0, 0x1);
        gbc.writeMem(0xa034, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe62b, gbc.sp());
        EXPECT(0xa036, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa034));
        EXPECT(0x9f, gbc.readMem(0xa035));
        // CB 9F 016F
        gbc.setState(0x89a1, 0xe5eb, 0xf200, 0x6002, 0x17de, 0xe2f8, 0x1, 0x1);
        gbc.writeMem(0x89a1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe5eb, gbc.sp());
        EXPECT(0x89a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89a1));
        EXPECT(0x9f, gbc.readMem(0x89a2));
        // CB 9F 0170
        gbc.setState(0x65b1, 0x9955, 0xc0a0, 0x3fa1, 0x4751, 0x11d7, 0x1, 0x1);
        gbc.writeMem(0x65b1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x9955, gbc.sp());
        EXPECT(0x65b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0171
        gbc.setState(0xcbd6, 0xd2f7, 0x7600, 0x86b4, 0x2ec8, 0xeae8, 0x1, 0x0);
        gbc.writeMem(0xcbd6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd2f7, gbc.sp());
        EXPECT(0xcbd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbd6));
        EXPECT(0x9f, gbc.readMem(0xcbd7));
        // CB 9F 0172
        gbc.setState(0xe875, 0xec68, 0xbbd0, 0x38ea, 0x9bdf, 0x60e0, 0x1, 0x0);
        gbc.writeMem(0xe875, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xec68, gbc.sp());
        EXPECT(0xe877, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe875));
        EXPECT(0x9f, gbc.readMem(0xe876));
        // CB 9F 0173
        gbc.setState(0xebcb, 0xf6cd, 0xeff0, 0x52b7, 0x67ed, 0x2bc1, 0x0, 0x0);
        gbc.writeMem(0xebcb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf6cd, gbc.sp());
        EXPECT(0xebcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcb));
        EXPECT(0x9f, gbc.readMem(0xebcc));
        // CB 9F 0175
        gbc.setState(0x8da5, 0x76db, 0x5b60, 0xe3d3, 0x5536, 0x288, 0x1, 0x0);
        gbc.writeMem(0x8da5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x76db, gbc.sp());
        EXPECT(0x8da7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8da5));
        EXPECT(0x9f, gbc.readMem(0x8da6));
        // CB 9F 0176
        gbc.setState(0xafa4, 0xe0ae, 0x5b80, 0x388e, 0x3128, 0xdf72, 0x1, 0x1);
        gbc.writeMem(0xafa4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe0ae, gbc.sp());
        EXPECT(0xafa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafa4));
        EXPECT(0x9f, gbc.readMem(0xafa5));
        // CB 9F 0177
        gbc.setState(0xb0cb, 0x4e4f, 0xaf10, 0xc1fd, 0x3532, 0xc37f, 0x1, 0x1);
        gbc.writeMem(0xb0cb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4e4f, gbc.sp());
        EXPECT(0xb0cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0cb));
        EXPECT(0x9f, gbc.readMem(0xb0cc));
        // CB 9F 0178
        gbc.setState(0xc561, 0xa16a, 0x7de0, 0xe4e6, 0xf97e, 0xfc16, 0x0, 0x0);
        gbc.writeMem(0xc561, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa16a, gbc.sp());
        EXPECT(0xc563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc561));
        EXPECT(0x9f, gbc.readMem(0xc562));
        // CB 9F 0179
        gbc.setState(0x75af, 0xcb5c, 0x9f70, 0x96e8, 0x56be, 0x5e45, 0x1, 0x1);
        gbc.writeMem(0x75af, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcb5c, gbc.sp());
        EXPECT(0x75b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 017A
        gbc.setState(0x1b71, 0xbeb5, 0x4d40, 0x37f6, 0xbb6d, 0x2589, 0x1, 0x0);
        gbc.writeMem(0x1b71, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xbeb5, gbc.sp());
        EXPECT(0x1b73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 017B
        gbc.setState(0xcabd, 0x9df6, 0xf750, 0xfae2, 0xe7d8, 0xce6c, 0x0, 0x0);
        gbc.writeMem(0xcabd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9df6, gbc.sp());
        EXPECT(0xcabf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcabd));
        EXPECT(0x9f, gbc.readMem(0xcabe));
        // CB 9F 017C
        gbc.setState(0x82e6, 0x447e, 0xea90, 0x384c, 0x1ce3, 0xf84e, 0x0, 0x0);
        gbc.writeMem(0x82e6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x447e, gbc.sp());
        EXPECT(0x82e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82e6));
        EXPECT(0x9f, gbc.readMem(0x82e7));
        // CB 9F 017D
        gbc.setState(0xaaaa, 0x65f7, 0x3ed0, 0xf5c7, 0x2edc, 0x25e6, 0x0, 0x1);
        gbc.writeMem(0xaaaa, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x65f7, gbc.sp());
        EXPECT(0xaaac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaaa));
        EXPECT(0x9f, gbc.readMem(0xaaab));
        // CB 9F 017E
        gbc.setState(0x73e9, 0x83d6, 0x3f0, 0x690a, 0xb991, 0xaa19, 0x1, 0x1);
        gbc.writeMem(0x73e9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x83d6, gbc.sp());
        EXPECT(0x73eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 017F
        gbc.setState(0x27ef, 0xdf1, 0xe8d0, 0xded0, 0xabd0, 0x386, 0x1, 0x0);
        gbc.writeMem(0x27ef, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xdf1, gbc.sp());
        EXPECT(0x27f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0180
        gbc.setState(0x5dc8, 0x28d2, 0x7770, 0x3da2, 0xc066, 0x61fd, 0x0, 0x1);
        gbc.writeMem(0x5dc8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x28d2, gbc.sp());
        EXPECT(0x5dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0181
        gbc.setState(0xee44, 0xb0fc, 0xe10, 0x4cdb, 0x6d9, 0x83c6, 0x1, 0x0);
        gbc.writeMem(0xee44, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb0fc, gbc.sp());
        EXPECT(0xee46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee44));
        EXPECT(0x9f, gbc.readMem(0xee45));
        // CB 9F 0184
        gbc.setState(0x4ab4, 0x364b, 0xaf20, 0xcb9a, 0xf524, 0x7d9f, 0x0, 0x1);
        gbc.writeMem(0x4ab4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x364b, gbc.sp());
        EXPECT(0x4ab6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0186
        gbc.setState(0x306c, 0x5308, 0x6620, 0xf6d4, 0x1565, 0xeebb, 0x0, 0x1);
        gbc.writeMem(0x306c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5308, gbc.sp());
        EXPECT(0x306e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0187
        gbc.setState(0x6c8b, 0x610e, 0x290, 0x9a6e, 0xa89a, 0x1c97, 0x0, 0x0);
        gbc.writeMem(0x6c8b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x610e, gbc.sp());
        EXPECT(0x6c8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0188
        gbc.setState(0x2374, 0x5932, 0x5500, 0x8469, 0xaf78, 0x7b3f, 0x0, 0x1);
        gbc.writeMem(0x2374, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x5932, gbc.sp());
        EXPECT(0x2376, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0189
        gbc.setState(0x52dc, 0x633c, 0x1940, 0x5cc5, 0xe2a4, 0x3403, 0x1, 0x0);
        gbc.writeMem(0x52dc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x633c, gbc.sp());
        EXPECT(0x52de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 018A
        gbc.setState(0x690a, 0x9640, 0xb8c0, 0xd31c, 0xd96a, 0x90a1, 0x0, 0x1);
        gbc.writeMem(0x690a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9640, gbc.sp());
        EXPECT(0x690c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 018B
        gbc.setState(0xded8, 0xbc6e, 0xfa20, 0x7b08, 0x2392, 0xbbe9, 0x1, 0x0);
        gbc.writeMem(0xded8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xbc6e, gbc.sp());
        EXPECT(0xdeda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xded8));
        EXPECT(0x9f, gbc.readMem(0xded9));
        // CB 9F 018C
        gbc.setState(0x5cf, 0x359, 0xccc0, 0x1e32, 0x4551, 0x8ae4, 0x0, 0x0);
        gbc.writeMem(0x5cf, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x359, gbc.sp());
        EXPECT(0x5d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 018D
        gbc.setState(0x870f, 0xf69c, 0x4840, 0xeb92, 0x76a0, 0x690f, 0x0, 0x0);
        gbc.writeMem(0x870f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf69c, gbc.sp());
        EXPECT(0x8711, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x870f));
        EXPECT(0x9f, gbc.readMem(0x8710));
        // CB 9F 018E
        gbc.setState(0xd124, 0xd5d5, 0xa150, 0x1317, 0x1407, 0xe95, 0x0, 0x0);
        gbc.writeMem(0xd124, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd5d5, gbc.sp());
        EXPECT(0xd126, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd124));
        EXPECT(0x9f, gbc.readMem(0xd125));
        // CB 9F 018F
        gbc.setState(0x5cf6, 0xfc8d, 0x8fd0, 0x5605, 0x23fc, 0x8f98, 0x1, 0x1);
        gbc.writeMem(0x5cf6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xfc8d, gbc.sp());
        EXPECT(0x5cf8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0190
        gbc.setState(0xc206, 0x3fc0, 0x7020, 0xc0ff, 0x1298, 0xe6d2, 0x1, 0x1);
        gbc.writeMem(0xc206, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x3fc0, gbc.sp());
        EXPECT(0xc208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc206));
        EXPECT(0x9f, gbc.readMem(0xc207));
        // CB 9F 0191
        gbc.setState(0xa9e1, 0xe858, 0x4530, 0x75a0, 0xfe60, 0x1392, 0x1, 0x0);
        gbc.writeMem(0xa9e1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xe858, gbc.sp());
        EXPECT(0xa9e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9e1));
        EXPECT(0x9f, gbc.readMem(0xa9e2));
        // CB 9F 0192
        gbc.setState(0x631e, 0x47a4, 0xbe90, 0x21a9, 0x82c4, 0x365e, 0x0, 0x0);
        gbc.writeMem(0x631e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x47a4, gbc.sp());
        EXPECT(0x6320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0193
        gbc.setState(0xa674, 0xf0a6, 0x92a0, 0xa545, 0x3457, 0xcec, 0x1, 0x0);
        gbc.writeMem(0xa674, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xf0a6, gbc.sp());
        EXPECT(0xa676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa674));
        EXPECT(0x9f, gbc.readMem(0xa675));
        // CB 9F 0194
        gbc.setState(0xc87, 0x157c, 0x1990, 0xcfe7, 0x71e0, 0xcc87, 0x0, 0x0);
        gbc.writeMem(0xc87, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x157c, gbc.sp());
        EXPECT(0xc89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0195
        gbc.setState(0xe26f, 0x9cf6, 0x5b60, 0x145a, 0x40af, 0x1efc, 0x1, 0x0);
        gbc.writeMem(0xe26f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9cf6, gbc.sp());
        EXPECT(0xe271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe26f));
        EXPECT(0x9f, gbc.readMem(0xe270));
        // CB 9F 0196
        gbc.setState(0xa544, 0x793d, 0x750, 0x28a8, 0xe5c4, 0x358c, 0x0, 0x0);
        gbc.writeMem(0xa544, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x793d, gbc.sp());
        EXPECT(0xa546, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa544));
        EXPECT(0x9f, gbc.readMem(0xa545));
        // CB 9F 0197
        gbc.setState(0xc8a9, 0x72c4, 0x8480, 0x1b3c, 0x155d, 0x674d, 0x0, 0x0);
        gbc.writeMem(0xc8a9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x72c4, gbc.sp());
        EXPECT(0xc8ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8a9));
        EXPECT(0x9f, gbc.readMem(0xc8aa));
        // CB 9F 0198
        gbc.setState(0xc7bf, 0x6d72, 0xbfb0, 0x3819, 0x2cb7, 0x724a, 0x1, 0x1);
        gbc.writeMem(0xc7bf, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x6d72, gbc.sp());
        EXPECT(0xc7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7bf));
        EXPECT(0x9f, gbc.readMem(0xc7c0));
        // CB 9F 0199
        gbc.setState(0xe90b, 0xdd5e, 0x16a0, 0xaf29, 0xd61d, 0xedf6, 0x0, 0x1);
        gbc.writeMem(0xe90b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xdd5e, gbc.sp());
        EXPECT(0xe90d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe90b));
        EXPECT(0x9f, gbc.readMem(0xe90c));
        // CB 9F 019A
        gbc.setState(0x64a, 0xa803, 0x3aa0, 0xa29d, 0x6b54, 0x1c55, 0x0, 0x0);
        gbc.writeMem(0x64a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa803, gbc.sp());
        EXPECT(0x64c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 019B
        gbc.setState(0x7486, 0xa3f4, 0x4ab0, 0xd4cd, 0xb6a4, 0xf091, 0x1, 0x0);
        gbc.writeMem(0x7486, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa3f4, gbc.sp());
        EXPECT(0x7488, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 019C
        gbc.setState(0x2b87, 0xcb44, 0x1350, 0xb87f, 0x2cf6, 0xf619, 0x1, 0x1);
        gbc.writeMem(0x2b87, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xcb44, gbc.sp());
        EXPECT(0x2b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 019D
        gbc.setState(0x7ba9, 0x9ab, 0x37f0, 0x4f53, 0x4664, 0x88f9, 0x0, 0x1);
        gbc.writeMem(0x7ba9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x9ab, gbc.sp());
        EXPECT(0x7bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 019E
        gbc.setState(0xcc1a, 0x72c0, 0xbc80, 0x7494, 0x379d, 0x618a, 0x1, 0x1);
        gbc.writeMem(0xcc1a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x72c0, gbc.sp());
        EXPECT(0xcc1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc1a));
        EXPECT(0x9f, gbc.readMem(0xcc1b));
        // CB 9F 019F
        gbc.setState(0x5bbd, 0x49f5, 0x8150, 0xf26b, 0x75b9, 0xd024, 0x0, 0x1);
        gbc.writeMem(0x5bbd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x49f5, gbc.sp());
        EXPECT(0x5bbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01A0
        gbc.setState(0xc74b, 0x766d, 0xbf30, 0x2729, 0xd8b4, 0x47f6, 0x1, 0x1);
        gbc.writeMem(0xc74b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x766d, gbc.sp());
        EXPECT(0xc74d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc74b));
        EXPECT(0x9f, gbc.readMem(0xc74c));
        // CB 9F 01A1
        gbc.setState(0xe48a, 0x7a92, 0x4410, 0x5ec2, 0xf465, 0x7258, 0x1, 0x0);
        gbc.writeMem(0xe48a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7a92, gbc.sp());
        EXPECT(0xe48c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe48a));
        EXPECT(0x9f, gbc.readMem(0xe48b));
        // CB 9F 01A2
        gbc.setState(0xab9d, 0x817f, 0x8bc0, 0xbb73, 0x617e, 0xc65b, 0x0, 0x1);
        gbc.writeMem(0xab9d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x817f, gbc.sp());
        EXPECT(0xab9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab9d));
        EXPECT(0x9f, gbc.readMem(0xab9e));
        // CB 9F 01A3
        gbc.setState(0x6784, 0x5ea8, 0x10f0, 0xb859, 0x83e7, 0xbb15, 0x0, 0x0);
        gbc.writeMem(0x6784, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5ea8, gbc.sp());
        EXPECT(0x6786, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01A4
        gbc.setState(0xd41e, 0x81c2, 0xf6f0, 0x752f, 0x921a, 0xf549, 0x0, 0x1);
        gbc.writeMem(0xd41e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x81c2, gbc.sp());
        EXPECT(0xd420, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41e));
        EXPECT(0x9f, gbc.readMem(0xd41f));
        // CB 9F 01A5
        gbc.setState(0x789b, 0x10ab, 0xd2e0, 0xb982, 0xb562, 0x7293, 0x1, 0x1);
        gbc.writeMem(0x789b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x10ab, gbc.sp());
        EXPECT(0x789d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01A6
        gbc.setState(0x5673, 0x75e8, 0x57a0, 0xdf8f, 0x93d1, 0x5ec3, 0x0, 0x1);
        gbc.writeMem(0x5673, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x75e8, gbc.sp());
        EXPECT(0x5675, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01A7
        gbc.setState(0x417b, 0x66dd, 0x4a0, 0xce14, 0x4ad, 0x356c, 0x1, 0x1);
        gbc.writeMem(0x417b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x66dd, gbc.sp());
        EXPECT(0x417d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01A8
        gbc.setState(0x8ef3, 0x547b, 0x53b0, 0xab01, 0x8023, 0x6f8a, 0x1, 0x1);
        gbc.writeMem(0x8ef3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x547b, gbc.sp());
        EXPECT(0x8ef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ef3));
        EXPECT(0x9f, gbc.readMem(0x8ef4));
        // CB 9F 01A9
        gbc.setState(0xa272, 0x13c0, 0x4c00, 0x8f8b, 0x6640, 0x5f65, 0x1, 0x1);
        gbc.writeMem(0xa272, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x13c0, gbc.sp());
        EXPECT(0xa274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa272));
        EXPECT(0x9f, gbc.readMem(0xa273));
        // CB 9F 01AA
        gbc.setState(0x3f3, 0x9352, 0x820, 0x853b, 0xd969, 0x634a, 0x1, 0x0);
        gbc.writeMem(0x3f3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9352, gbc.sp());
        EXPECT(0x3f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01AB
        gbc.setState(0xab53, 0x9af9, 0xfed0, 0xcf04, 0x19cf, 0x8f37, 0x0, 0x1);
        gbc.writeMem(0xab53, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9af9, gbc.sp());
        EXPECT(0xab55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab53));
        EXPECT(0x9f, gbc.readMem(0xab54));
        // CB 9F 01AC
        gbc.setState(0xaa56, 0x81f0, 0xcf20, 0x7bc1, 0xf77d, 0x2f4e, 0x1, 0x1);
        gbc.writeMem(0xaa56, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x81f0, gbc.sp());
        EXPECT(0xaa58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa56));
        EXPECT(0x9f, gbc.readMem(0xaa57));
        // CB 9F 01AD
        gbc.setState(0x6521, 0x610b, 0xede0, 0x2ea6, 0x3b3e, 0x216f, 0x0, 0x1);
        gbc.writeMem(0x6521, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x610b, gbc.sp());
        EXPECT(0x6523, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01AE
        gbc.setState(0xb396, 0xfcf1, 0x5bc0, 0xc042, 0x47ed, 0x8, 0x0, 0x1);
        gbc.writeMem(0xb396, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xfcf1, gbc.sp());
        EXPECT(0xb398, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb396));
        EXPECT(0x9f, gbc.readMem(0xb397));
        // CB 9F 01AF
        gbc.setState(0x1716, 0xda5e, 0x8b10, 0xcb4d, 0xe3c5, 0xb8b0, 0x1, 0x1);
        gbc.writeMem(0x1716, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xda5e, gbc.sp());
        EXPECT(0x1718, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01B0
        gbc.setState(0xe505, 0xea85, 0x81c0, 0xd0dd, 0x7076, 0xe587, 0x0, 0x0);
        gbc.writeMem(0xe505, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xea85, gbc.sp());
        EXPECT(0xe507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe505));
        EXPECT(0x9f, gbc.readMem(0xe506));
        // CB 9F 01B1
        gbc.setState(0x82ce, 0xc26b, 0xc170, 0x9f3, 0x4723, 0xdb09, 0x0, 0x1);
        gbc.writeMem(0x82ce, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xc26b, gbc.sp());
        EXPECT(0x82d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82ce));
        EXPECT(0x9f, gbc.readMem(0x82cf));
        // CB 9F 01B2
        gbc.setState(0xa52b, 0x9c2e, 0xac90, 0x461e, 0xcd24, 0x3994, 0x1, 0x1);
        gbc.writeMem(0xa52b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9c2e, gbc.sp());
        EXPECT(0xa52d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa52b));
        EXPECT(0x9f, gbc.readMem(0xa52c));
        // CB 9F 01B3
        gbc.setState(0xaf6d, 0xb72b, 0x4f40, 0x30c9, 0x7572, 0xd7a2, 0x1, 0x1);
        gbc.writeMem(0xaf6d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb72b, gbc.sp());
        EXPECT(0xaf6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf6d));
        EXPECT(0x9f, gbc.readMem(0xaf6e));
        // CB 9F 01B4
        gbc.setState(0x243f, 0xd14e, 0x9240, 0x5d29, 0x4180, 0xf749, 0x1, 0x1);
        gbc.writeMem(0x243f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xd14e, gbc.sp());
        EXPECT(0x2441, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01B5
        gbc.setState(0xcf29, 0x188, 0xac10, 0xe6bd, 0x3a36, 0x3934, 0x1, 0x0);
        gbc.writeMem(0xcf29, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x188, gbc.sp());
        EXPECT(0xcf2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf29));
        EXPECT(0x9f, gbc.readMem(0xcf2a));
        // CB 9F 01B6
        gbc.setState(0x1c1b, 0xacf4, 0x77a0, 0x1c9a, 0x151c, 0x2b82, 0x1, 0x1);
        gbc.writeMem(0x1c1b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xacf4, gbc.sp());
        EXPECT(0x1c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01B7
        gbc.setState(0xa15e, 0x8748, 0xf990, 0x5276, 0x79b0, 0xb2d1, 0x1, 0x1);
        gbc.writeMem(0xa15e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x8748, gbc.sp());
        EXPECT(0xa160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa15e));
        EXPECT(0x9f, gbc.readMem(0xa15f));
        // CB 9F 01B9
        gbc.setState(0xb3b6, 0x419f, 0xc2c0, 0xa9c4, 0x17a6, 0x339b, 0x1, 0x0);
        gbc.writeMem(0xb3b6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x419f, gbc.sp());
        EXPECT(0xb3b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3b6));
        EXPECT(0x9f, gbc.readMem(0xb3b7));
        // CB 9F 01BA
        gbc.setState(0x2b73, 0x4a8e, 0x7c90, 0xb973, 0x2bb5, 0x6751, 0x0, 0x0);
        gbc.writeMem(0x2b73, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x4a8e, gbc.sp());
        EXPECT(0x2b75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01BB
        gbc.setState(0xc463, 0x7759, 0xa590, 0xa226, 0xc807, 0xf9e6, 0x0, 0x0);
        gbc.writeMem(0xc463, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x7759, gbc.sp());
        EXPECT(0xc465, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc463));
        EXPECT(0x9f, gbc.readMem(0xc464));
        // CB 9F 01BC
        gbc.setState(0x74ed, 0xdd93, 0x8e0, 0xfa0e, 0xd448, 0x78a0, 0x1, 0x1);
        gbc.writeMem(0x74ed, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xdd93, gbc.sp());
        EXPECT(0x74ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01BD
        gbc.setState(0x6156, 0x92a4, 0x2bf0, 0x8471, 0xe7a9, 0x70b3, 0x0, 0x1);
        gbc.writeMem(0x6156, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x92a4, gbc.sp());
        EXPECT(0x6158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01BE
        gbc.setState(0x6038, 0x894a, 0xd7b0, 0x5c57, 0xe189, 0x42db, 0x0, 0x1);
        gbc.writeMem(0x6038, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x894a, gbc.sp());
        EXPECT(0x603a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01BF
        gbc.setState(0xb5af, 0x5f7f, 0x3870, 0x16ef, 0xade3, 0x4ed3, 0x0, 0x1);
        gbc.writeMem(0xb5af, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5f7f, gbc.sp());
        EXPECT(0xb5b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5af));
        EXPECT(0x9f, gbc.readMem(0xb5b0));
        // CB 9F 01C0
        gbc.setState(0xdb8b, 0x47d7, 0x94e0, 0x429c, 0xdd2, 0xcd59, 0x1, 0x1);
        gbc.writeMem(0xdb8b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x47d7, gbc.sp());
        EXPECT(0xdb8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb8b));
        EXPECT(0x9f, gbc.readMem(0xdb8c));
        // CB 9F 01C1
        gbc.setState(0xa29, 0x6a92, 0xd100, 0x33a1, 0x6d32, 0xdec6, 0x0, 0x1);
        gbc.writeMem(0xa29, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x6a92, gbc.sp());
        EXPECT(0xa2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01C2
        gbc.setState(0x73d1, 0x4c18, 0x950, 0x5bab, 0x3f7c, 0x8259, 0x0, 0x0);
        gbc.writeMem(0x73d1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4c18, gbc.sp());
        EXPECT(0x73d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01C3
        gbc.setState(0x54e0, 0x6def, 0x9ee0, 0xf7c1, 0xd23a, 0xb23e, 0x1, 0x0);
        gbc.writeMem(0x54e0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x6def, gbc.sp());
        EXPECT(0x54e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01C4
        gbc.setState(0xb353, 0x693a, 0x1cd0, 0x3394, 0xa46e, 0xeea6, 0x0, 0x1);
        gbc.writeMem(0xb353, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x693a, gbc.sp());
        EXPECT(0xb355, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb353));
        EXPECT(0x9f, gbc.readMem(0xb354));
        // CB 9F 01C5
        gbc.setState(0xeb, 0xfcc8, 0x56d0, 0x115d, 0x34db, 0xebdb, 0x1, 0x1);
        gbc.writeMem(0xeb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xfcc8, gbc.sp());
        EXPECT(0xed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01C6
        gbc.setState(0xc438, 0x1155, 0x7980, 0xf90e, 0x8984, 0x56de, 0x0, 0x0);
        gbc.writeMem(0xc438, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1155, gbc.sp());
        EXPECT(0xc43a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc438));
        EXPECT(0x9f, gbc.readMem(0xc439));
        // CB 9F 01C8
        gbc.setState(0x9e7d, 0x21ac, 0xfce0, 0x521c, 0xd975, 0xbe6b, 0x1, 0x1);
        gbc.writeMem(0x9e7d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x21ac, gbc.sp());
        EXPECT(0x9e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e7d));
        EXPECT(0x9f, gbc.readMem(0x9e7e));
        // CB 9F 01C9
        gbc.setState(0x6a9, 0x648e, 0x3ce0, 0x2a00, 0xeb62, 0xa0a2, 0x0, 0x1);
        gbc.writeMem(0x6a9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x648e, gbc.sp());
        EXPECT(0x6ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01CA
        gbc.setState(0x9de0, 0xe883, 0x6180, 0x8681, 0xf4f4, 0x2963, 0x1, 0x0);
        gbc.writeMem(0x9de0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe883, gbc.sp());
        EXPECT(0x9de2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9de0));
        EXPECT(0x9f, gbc.readMem(0x9de1));
        // CB 9F 01CB
        gbc.setState(0x813f, 0x977, 0x2370, 0x9ce3, 0x8891, 0x3355, 0x1, 0x0);
        gbc.writeMem(0x813f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x977, gbc.sp());
        EXPECT(0x8141, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813f));
        EXPECT(0x9f, gbc.readMem(0x8140));
        // CB 9F 01CC
        gbc.setState(0x9823, 0xe010, 0x2a00, 0x2788, 0x9c56, 0xb91b, 0x1, 0x1);
        gbc.writeMem(0x9823, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe010, gbc.sp());
        EXPECT(0x9825, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9823));
        EXPECT(0x9f, gbc.readMem(0x9824));
        // CB 9F 01CD
        gbc.setState(0x46cd, 0x57a8, 0xe510, 0x77bb, 0xf4f3, 0x75e4, 0x0, 0x1);
        gbc.writeMem(0x46cd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x57a8, gbc.sp());
        EXPECT(0x46cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01CE
        gbc.setState(0x9c2, 0xc9e2, 0x8200, 0xc6ed, 0x7af, 0x9de7, 0x1, 0x0);
        gbc.writeMem(0x9c2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xc9e2, gbc.sp());
        EXPECT(0x9c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01CF
        gbc.setState(0x992f, 0xc934, 0x3d20, 0x3d71, 0x5171, 0x6424, 0x1, 0x0);
        gbc.writeMem(0x992f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc934, gbc.sp());
        EXPECT(0x9931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x992f));
        EXPECT(0x9f, gbc.readMem(0x9930));
        // CB 9F 01D0
        gbc.setState(0xd404, 0x624, 0xd410, 0xf015, 0xfa49, 0x699d, 0x1, 0x1);
        gbc.writeMem(0xd404, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x624, gbc.sp());
        EXPECT(0xd406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd404));
        EXPECT(0x9f, gbc.readMem(0xd405));
        // CB 9F 01D1
        gbc.setState(0x1261, 0x726c, 0xd7d0, 0x7b0e, 0xd681, 0x2113, 0x1, 0x0);
        gbc.writeMem(0x1261, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x726c, gbc.sp());
        EXPECT(0x1263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01D2
        gbc.setState(0x3688, 0xf8d4, 0x3240, 0xdbfb, 0x273c, 0x70b5, 0x1, 0x0);
        gbc.writeMem(0x3688, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf8d4, gbc.sp());
        EXPECT(0x368a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01D3
        gbc.setState(0xb77f, 0x9cb3, 0x7230, 0xfabb, 0x2908, 0x2c99, 0x0, 0x1);
        gbc.writeMem(0xb77f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9cb3, gbc.sp());
        EXPECT(0xb781, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb77f));
        EXPECT(0x9f, gbc.readMem(0xb780));
        // CB 9F 01D4
        gbc.setState(0x1af6, 0xc4d7, 0xba10, 0x83eb, 0x71b2, 0x984c, 0x1, 0x0);
        gbc.writeMem(0x1af6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc4d7, gbc.sp());
        EXPECT(0x1af8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01D6
        gbc.setState(0x18c0, 0xc1ed, 0xcd60, 0x1474, 0x4e9a, 0xe4f1, 0x1, 0x0);
        gbc.writeMem(0x18c0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc1ed, gbc.sp());
        EXPECT(0x18c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01D7
        gbc.setState(0x8f16, 0xdc52, 0x80f0, 0x37e9, 0x74c2, 0x2b89, 0x0, 0x0);
        gbc.writeMem(0x8f16, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdc52, gbc.sp());
        EXPECT(0x8f18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f16));
        EXPECT(0x9f, gbc.readMem(0x8f17));
        // CB 9F 01D8
        gbc.setState(0x3ae7, 0x3d30, 0x8df0, 0x4ac3, 0x4af4, 0x69fc, 0x1, 0x0);
        gbc.writeMem(0x3ae7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3d30, gbc.sp());
        EXPECT(0x3ae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01D9
        gbc.setState(0x6e38, 0x5c0, 0x4d80, 0xcfe8, 0x3e98, 0xc158, 0x0, 0x1);
        gbc.writeMem(0x6e38, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5c0, gbc.sp());
        EXPECT(0x6e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01DA
        gbc.setState(0xaf19, 0x4d9f, 0x5e20, 0x1c2a, 0x3c88, 0xb438, 0x0, 0x1);
        gbc.writeMem(0xaf19, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x4d9f, gbc.sp());
        EXPECT(0xaf1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf19));
        EXPECT(0x9f, gbc.readMem(0xaf1a));
        // CB 9F 01DB
        gbc.setState(0x8c2b, 0xf3d1, 0x7e50, 0x2e1d, 0x5da, 0x2272, 0x0, 0x1);
        gbc.writeMem(0x8c2b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf3d1, gbc.sp());
        EXPECT(0x8c2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c2b));
        EXPECT(0x9f, gbc.readMem(0x8c2c));
        // CB 9F 01DC
        gbc.setState(0xa058, 0xb693, 0xa290, 0x9141, 0x16e6, 0x2e7f, 0x0, 0x0);
        gbc.writeMem(0xa058, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb693, gbc.sp());
        EXPECT(0xa05a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa058));
        EXPECT(0x9f, gbc.readMem(0xa059));
        // CB 9F 01DD
        gbc.setState(0xd2f6, 0xf26e, 0xe550, 0xca67, 0x7dc4, 0x9754, 0x1, 0x1);
        gbc.writeMem(0xd2f6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf26e, gbc.sp());
        EXPECT(0xd2f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2f6));
        EXPECT(0x9f, gbc.readMem(0xd2f7));
        // CB 9F 01DF
        gbc.setState(0x2e3b, 0x22f0, 0xfba0, 0xca36, 0x23f2, 0xd9e, 0x0, 0x1);
        gbc.writeMem(0x2e3b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x22f0, gbc.sp());
        EXPECT(0x2e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01E0
        gbc.setState(0xe2ab, 0x9503, 0x3020, 0xf9d5, 0xb382, 0x4a29, 0x0, 0x1);
        gbc.writeMem(0xe2ab, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9503, gbc.sp());
        EXPECT(0xe2ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2ab));
        EXPECT(0x9f, gbc.readMem(0xe2ac));
        // CB 9F 01E1
        gbc.setState(0x60a5, 0xc9dd, 0xba00, 0x512e, 0xba6a, 0x725d, 0x1, 0x0);
        gbc.writeMem(0x60a5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc9dd, gbc.sp());
        EXPECT(0x60a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01E2
        gbc.setState(0xadad, 0xea7e, 0x2780, 0x7cd7, 0xcc02, 0xade7, 0x0, 0x1);
        gbc.writeMem(0xadad, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xea7e, gbc.sp());
        EXPECT(0xadaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadad));
        EXPECT(0x9f, gbc.readMem(0xadae));
        // CB 9F 01E3
        gbc.setState(0x7954, 0xfa00, 0x8080, 0xca68, 0xe1ce, 0x80a7, 0x1, 0x0);
        gbc.writeMem(0x7954, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfa00, gbc.sp());
        EXPECT(0x7956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01E4
        gbc.setState(0xbbd, 0x7fea, 0x5b40, 0x6ad4, 0x8a7b, 0x4bb3, 0x1, 0x0);
        gbc.writeMem(0xbbd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x7fea, gbc.sp());
        EXPECT(0xbbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01E5
        gbc.setState(0x1795, 0xd0d1, 0x1310, 0xdb09, 0x7fc2, 0xc794, 0x1, 0x0);
        gbc.writeMem(0x1795, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xd0d1, gbc.sp());
        EXPECT(0x1797, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01E6
        gbc.setState(0x8868, 0xc1f9, 0x7920, 0x6473, 0xa1bf, 0xb092, 0x0, 0x0);
        gbc.writeMem(0x8868, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc1f9, gbc.sp());
        EXPECT(0x886a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8868));
        EXPECT(0x9f, gbc.readMem(0x8869));
        // CB 9F 01E7
        gbc.setState(0x62b2, 0xb0b, 0x2ad0, 0xd21b, 0x77bd, 0x7dcb, 0x0, 0x0);
        gbc.writeMem(0x62b2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb0b, gbc.sp());
        EXPECT(0x62b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01E8
        gbc.setState(0x62df, 0x97a1, 0x5130, 0x783e, 0xf26f, 0x5b57, 0x1, 0x0);
        gbc.writeMem(0x62df, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x97a1, gbc.sp());
        EXPECT(0x62e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01E9
        gbc.setState(0x36dd, 0x208d, 0x270, 0xb36f, 0x2153, 0x6a04, 0x1, 0x1);
        gbc.writeMem(0x36dd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x208d, gbc.sp());
        EXPECT(0x36df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01EA
        gbc.setState(0xb158, 0xd56a, 0x5020, 0x6d0a, 0xb082, 0xe238, 0x0, 0x1);
        gbc.writeMem(0xb158, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd56a, gbc.sp());
        EXPECT(0xb15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb158));
        EXPECT(0x9f, gbc.readMem(0xb159));
        // CB 9F 01EB
        gbc.setState(0xba62, 0xf631, 0xf670, 0x2206, 0x105, 0xebd0, 0x0, 0x0);
        gbc.writeMem(0xba62, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xf631, gbc.sp());
        EXPECT(0xba64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba62));
        EXPECT(0x9f, gbc.readMem(0xba63));
        // CB 9F 01EC
        gbc.setState(0x7cd, 0xcc86, 0x3d00, 0x8522, 0xb464, 0x832, 0x0, 0x1);
        gbc.writeMem(0x7cd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xcc86, gbc.sp());
        EXPECT(0x7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01ED
        gbc.setState(0x9d0e, 0x9eb2, 0xfa00, 0x2c0b, 0x7f4, 0x55cb, 0x0, 0x1);
        gbc.writeMem(0x9d0e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9eb2, gbc.sp());
        EXPECT(0x9d10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d0e));
        EXPECT(0x9f, gbc.readMem(0x9d0f));
        // CB 9F 01EE
        gbc.setState(0x61af, 0x8831, 0xa680, 0xe762, 0xc95a, 0xdb01, 0x0, 0x1);
        gbc.writeMem(0x61af, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x8831, gbc.sp());
        EXPECT(0x61b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01EF
        gbc.setState(0x2063, 0xe7fb, 0x22b0, 0xed20, 0xa791, 0xbf4c, 0x0, 0x1);
        gbc.writeMem(0x2063, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe7fb, gbc.sp());
        EXPECT(0x2065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01F0
        gbc.setState(0xc2e5, 0x56d1, 0x5a50, 0xfcd2, 0x73af, 0xc3c1, 0x0, 0x1);
        gbc.writeMem(0xc2e5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x56d1, gbc.sp());
        EXPECT(0xc2e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2e5));
        EXPECT(0x9f, gbc.readMem(0xc2e6));
        // CB 9F 01F1
        gbc.setState(0x38e7, 0xdb81, 0x1e10, 0x36b6, 0x3bfc, 0x8f4e, 0x0, 0x1);
        gbc.writeMem(0x38e7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xdb81, gbc.sp());
        EXPECT(0x38e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01F2
        gbc.setState(0xa0b4, 0x99b1, 0xb7d0, 0xe094, 0x7343, 0x7c07, 0x1, 0x0);
        gbc.writeMem(0xa0b4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x99b1, gbc.sp());
        EXPECT(0xa0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0b4));
        EXPECT(0x9f, gbc.readMem(0xa0b5));
        // CB 9F 01F3
        gbc.setState(0xa54c, 0xaa68, 0xc1d0, 0xdb5, 0xdee6, 0x6409, 0x1, 0x0);
        gbc.writeMem(0xa54c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xaa68, gbc.sp());
        EXPECT(0xa54e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa54c));
        EXPECT(0x9f, gbc.readMem(0xa54d));
        // CB 9F 01F4
        gbc.setState(0x8ae0, 0x8c16, 0x6ed0, 0x1f46, 0xa609, 0x206a, 0x0, 0x1);
        gbc.writeMem(0x8ae0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8c16, gbc.sp());
        EXPECT(0x8ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae0));
        EXPECT(0x9f, gbc.readMem(0x8ae1));
        // CB 9F 01F5
        gbc.setState(0xa8c1, 0x1319, 0xfbd0, 0x93d1, 0x14b5, 0x2cdb, 0x1, 0x1);
        gbc.writeMem(0xa8c1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1319, gbc.sp());
        EXPECT(0xa8c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c1));
        EXPECT(0x9f, gbc.readMem(0xa8c2));
        // CB 9F 01F6
        gbc.setState(0xebcb, 0xecae, 0xe30, 0x5906, 0x5c93, 0x99a4, 0x0, 0x0);
        gbc.writeMem(0xebcb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xecae, gbc.sp());
        EXPECT(0xebcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcb));
        EXPECT(0x9f, gbc.readMem(0xebcc));
        // CB 9F 01F7
        gbc.setState(0xaa1c, 0xe10a, 0x5230, 0x8dc7, 0x614b, 0x5c20, 0x0, 0x0);
        gbc.writeMem(0xaa1c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe10a, gbc.sp());
        EXPECT(0xaa1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa1c));
        EXPECT(0x9f, gbc.readMem(0xaa1d));
        // CB 9F 01F8
        gbc.setState(0xec6, 0xc2ae, 0x1a20, 0xb78c, 0xaa04, 0xd220, 0x0, 0x0);
        gbc.writeMem(0xec6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc2ae, gbc.sp());
        EXPECT(0xec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01F9
        gbc.setState(0x60f9, 0xee5d, 0xfac0, 0xd6fe, 0x39aa, 0x61f9, 0x1, 0x0);
        gbc.writeMem(0x60f9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xee5d, gbc.sp());
        EXPECT(0x60fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 01FA
        gbc.setState(0x733f, 0xda9e, 0x5170, 0xa448, 0x797d, 0x4525, 0x0, 0x0);
        gbc.writeMem(0x733f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xda9e, gbc.sp());
        EXPECT(0x7341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01FB
        gbc.setState(0x3360, 0xcdde, 0x8650, 0x38e1, 0xeb17, 0xff5b, 0x1, 0x0);
        gbc.writeMem(0x3360, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xcdde, gbc.sp());
        EXPECT(0x3362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 01FC
        gbc.setState(0xd171, 0xfc23, 0x89e0, 0x8c9c, 0xf44f, 0xa043, 0x0, 0x1);
        gbc.writeMem(0xd171, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xfc23, gbc.sp());
        EXPECT(0xd173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd171));
        EXPECT(0x9f, gbc.readMem(0xd172));
        // CB 9F 01FD
        gbc.setState(0x8ee0, 0x7875, 0x6270, 0x91ba, 0xebda, 0x6ac9, 0x0, 0x1);
        gbc.writeMem(0x8ee0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7875, gbc.sp());
        EXPECT(0x8ee2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ee0));
        EXPECT(0x9f, gbc.readMem(0x8ee1));
        // CB 9F 01FE
        gbc.setState(0xe156, 0x4fb2, 0x7db0, 0xef26, 0x93cf, 0x1ee4, 0x0, 0x1);
        gbc.writeMem(0xe156, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4fb2, gbc.sp());
        EXPECT(0xe158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe156));
        EXPECT(0x9f, gbc.readMem(0xe157));
        // CB 9F 01FF
        gbc.setState(0x4497, 0x72d5, 0xf6f0, 0x2d3d, 0xaced, 0xb016, 0x1, 0x0);
        gbc.writeMem(0x4497, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x72d5, gbc.sp());
        EXPECT(0x4499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0200
        gbc.setState(0xb294, 0xf4dc, 0x9190, 0x9c4c, 0x403d, 0xf8a5, 0x1, 0x0);
        gbc.writeMem(0xb294, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf4dc, gbc.sp());
        EXPECT(0xb296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb294));
        EXPECT(0x9f, gbc.readMem(0xb295));
        // CB 9F 0201
        gbc.setState(0x329f, 0x5003, 0x3f20, 0x2e5f, 0x331b, 0x7fb4, 0x0, 0x1);
        gbc.writeMem(0x329f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x5003, gbc.sp());
        EXPECT(0x32a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0203
        gbc.setState(0x671f, 0x7bef, 0xead0, 0xe47e, 0x4fb2, 0xa63, 0x1, 0x1);
        gbc.writeMem(0x671f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x7bef, gbc.sp());
        EXPECT(0x6721, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0204
        gbc.setState(0xe94a, 0xf725, 0xa500, 0x448d, 0xe765, 0xfce0, 0x0, 0x1);
        gbc.writeMem(0xe94a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xf725, gbc.sp());
        EXPECT(0xe94c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe94a));
        EXPECT(0x9f, gbc.readMem(0xe94b));
        // CB 9F 0205
        gbc.setState(0xdb9a, 0x909a, 0x65b0, 0x7c54, 0xb238, 0x4b63, 0x0, 0x1);
        gbc.writeMem(0xdb9a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x909a, gbc.sp());
        EXPECT(0xdb9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb9a));
        EXPECT(0x9f, gbc.readMem(0xdb9b));
        // CB 9F 0206
        gbc.setState(0x498a, 0x97be, 0xe660, 0x8960, 0xad6, 0xfca0, 0x0, 0x0);
        gbc.writeMem(0x498a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x97be, gbc.sp());
        EXPECT(0x498c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0207
        gbc.setState(0x27a9, 0x370a, 0x16d0, 0xbfb5, 0x64ca, 0x3656, 0x0, 0x0);
        gbc.writeMem(0x27a9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x370a, gbc.sp());
        EXPECT(0x27ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0208
        gbc.setState(0x16b, 0x722e, 0x3d60, 0x3a61, 0xda60, 0x6bb5, 0x0, 0x0);
        gbc.writeMem(0x16b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x722e, gbc.sp());
        EXPECT(0x16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0209
        gbc.setState(0xd72f, 0xbe5, 0x4650, 0x7448, 0xc7e4, 0xdbd4, 0x1, 0x0);
        gbc.writeMem(0xd72f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbe5, gbc.sp());
        EXPECT(0xd731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd72f));
        EXPECT(0x9f, gbc.readMem(0xd730));
        // CB 9F 020A
        gbc.setState(0x8402, 0xaae4, 0xa430, 0x31f2, 0xfac5, 0xf9c4, 0x1, 0x0);
        gbc.writeMem(0x8402, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xaae4, gbc.sp());
        EXPECT(0x8404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8402));
        EXPECT(0x9f, gbc.readMem(0x8403));
        // CB 9F 020C
        gbc.setState(0x6160, 0xf6e4, 0xb290, 0x9739, 0x3548, 0x7119, 0x0, 0x1);
        gbc.writeMem(0x6160, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xf6e4, gbc.sp());
        EXPECT(0x6162, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 020D
        gbc.setState(0x96ac, 0x7168, 0xed00, 0xe81, 0x8033, 0x8020, 0x1, 0x1);
        gbc.writeMem(0x96ac, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x7168, gbc.sp());
        EXPECT(0x96ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ac));
        EXPECT(0x9f, gbc.readMem(0x96ad));
        // CB 9F 020E
        gbc.setState(0x5155, 0x997a, 0x46c0, 0xf9e4, 0xc597, 0x5f04, 0x1, 0x0);
        gbc.writeMem(0x5155, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x997a, gbc.sp());
        EXPECT(0x5157, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 020F
        gbc.setState(0x80e3, 0xc7c3, 0xa0d0, 0xfc17, 0x1449, 0x7232, 0x0, 0x0);
        gbc.writeMem(0x80e3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xc7c3, gbc.sp());
        EXPECT(0x80e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e3));
        EXPECT(0x9f, gbc.readMem(0x80e4));
        // CB 9F 0212
        gbc.setState(0xa51b, 0x22c9, 0xd470, 0xa247, 0x3e24, 0x3dc0, 0x0, 0x1);
        gbc.writeMem(0xa51b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x22c9, gbc.sp());
        EXPECT(0xa51d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa51b));
        EXPECT(0x9f, gbc.readMem(0xa51c));
        // CB 9F 0213
        gbc.setState(0xb123, 0x6012, 0xb170, 0x9a98, 0x888c, 0xafae, 0x0, 0x1);
        gbc.writeMem(0xb123, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6012, gbc.sp());
        EXPECT(0xb125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb123));
        EXPECT(0x9f, gbc.readMem(0xb124));
        // CB 9F 0214
        gbc.setState(0x56d7, 0x8788, 0xec80, 0x4ae5, 0x718c, 0xd598, 0x0, 0x1);
        gbc.writeMem(0x56d7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x8788, gbc.sp());
        EXPECT(0x56d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0217
        gbc.setState(0xaf20, 0xe89c, 0xbcd0, 0x74e0, 0x5804, 0xb205, 0x0, 0x1);
        gbc.writeMem(0xaf20, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe89c, gbc.sp());
        EXPECT(0xaf22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf20));
        EXPECT(0x9f, gbc.readMem(0xaf21));
        // CB 9F 0218
        gbc.setState(0x77ba, 0xfc6f, 0xf490, 0x9a36, 0xc6e0, 0x2f58, 0x0, 0x1);
        gbc.writeMem(0x77ba, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfc6f, gbc.sp());
        EXPECT(0x77bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0219
        gbc.setState(0x1645, 0x871e, 0x88b0, 0xafe0, 0x56f2, 0xa51f, 0x0, 0x0);
        gbc.writeMem(0x1645, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x871e, gbc.sp());
        EXPECT(0x1647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 021A
        gbc.setState(0xaab2, 0x9fa4, 0x60a0, 0x5afd, 0x8876, 0x86d0, 0x0, 0x1);
        gbc.writeMem(0xaab2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9fa4, gbc.sp());
        EXPECT(0xaab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaab2));
        EXPECT(0x9f, gbc.readMem(0xaab3));
        // CB 9F 021B
        gbc.setState(0x367c, 0xeffe, 0x5990, 0x753b, 0x38ba, 0xf081, 0x0, 0x0);
        gbc.writeMem(0x367c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xeffe, gbc.sp());
        EXPECT(0x367e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 021C
        gbc.setState(0x5e4a, 0xd3c5, 0x3820, 0x12fa, 0x9945, 0xdcd4, 0x1, 0x1);
        gbc.writeMem(0x5e4a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd3c5, gbc.sp());
        EXPECT(0x5e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 021D
        gbc.setState(0x25b, 0x49b8, 0x94a0, 0x6b0e, 0x3c4e, 0xcbff, 0x1, 0x0);
        gbc.writeMem(0x25b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x49b8, gbc.sp());
        EXPECT(0x25d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 021E
        gbc.setState(0xb0b4, 0x63da, 0xd90, 0x4591, 0x2252, 0x298f, 0x0, 0x1);
        gbc.writeMem(0xb0b4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x63da, gbc.sp());
        EXPECT(0xb0b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0b4));
        EXPECT(0x9f, gbc.readMem(0xb0b5));
        // CB 9F 021F
        gbc.setState(0xd69a, 0x6f6c, 0xde0, 0x753a, 0xa15c, 0x76f7, 0x1, 0x0);
        gbc.writeMem(0xd69a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x6f6c, gbc.sp());
        EXPECT(0xd69c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69a));
        EXPECT(0x9f, gbc.readMem(0xd69b));
        // CB 9F 0221
        gbc.setState(0x570e, 0xdfaf, 0x80b0, 0x46e4, 0x5ba8, 0x162e, 0x0, 0x0);
        gbc.writeMem(0x570e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xdfaf, gbc.sp());
        EXPECT(0x5710, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0222
        gbc.setState(0x8ee, 0x5747, 0x3800, 0x4cc2, 0xfcd6, 0xc4cc, 0x1, 0x1);
        gbc.writeMem(0x8ee, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x5747, gbc.sp());
        EXPECT(0x8f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0223
        gbc.setState(0x56eb, 0xe8ec, 0x5760, 0x6ae6, 0x6f8, 0x9b61, 0x1, 0x1);
        gbc.writeMem(0x56eb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe8ec, gbc.sp());
        EXPECT(0x56ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0224
        gbc.setState(0x1099, 0x8222, 0x1630, 0xdf0b, 0xf9f2, 0x69d5, 0x1, 0x1);
        gbc.writeMem(0x1099, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8222, gbc.sp());
        EXPECT(0x109b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0225
        gbc.setState(0x4243, 0xcb83, 0x7850, 0x7a9f, 0x1dfe, 0x22f4, 0x0, 0x1);
        gbc.writeMem(0x4243, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xcb83, gbc.sp());
        EXPECT(0x4245, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0226
        gbc.setState(0xda0d, 0xcda9, 0xc8d0, 0x508d, 0x834e, 0xdc0d, 0x1, 0x1);
        gbc.writeMem(0xda0d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcda9, gbc.sp());
        EXPECT(0xda0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda0d));
        EXPECT(0x9f, gbc.readMem(0xda0e));
        // CB 9F 0227
        gbc.setState(0xa48c, 0xc8e9, 0xede0, 0x53d4, 0x4d6, 0x3eba, 0x0, 0x1);
        gbc.writeMem(0xa48c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc8e9, gbc.sp());
        EXPECT(0xa48e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa48c));
        EXPECT(0x9f, gbc.readMem(0xa48d));
        // CB 9F 0228
        gbc.setState(0x106, 0x4eb4, 0xb050, 0x1ed0, 0x4ebd, 0xc11d, 0x0, 0x0);
        gbc.writeMem(0x106, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4eb4, gbc.sp());
        EXPECT(0x108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0229
        gbc.setState(0xcd0, 0xab4, 0xcb10, 0xd6f3, 0xc3a, 0x3602, 0x0, 0x1);
        gbc.writeMem(0xcd0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xab4, gbc.sp());
        EXPECT(0xcd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 022A
        gbc.setState(0xccde, 0x137f, 0xbd50, 0x5c33, 0x7344, 0x6573, 0x1, 0x1);
        gbc.writeMem(0xccde, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x137f, gbc.sp());
        EXPECT(0xcce0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xccde));
        EXPECT(0x9f, gbc.readMem(0xccdf));
        // CB 9F 022B
        gbc.setState(0x4da2, 0x7f71, 0x3b80, 0xc165, 0xc39a, 0xba39, 0x0, 0x1);
        gbc.writeMem(0x4da2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x7f71, gbc.sp());
        EXPECT(0x4da4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 022C
        gbc.setState(0xd802, 0xdb43, 0xa360, 0xd226, 0x1fde, 0xa06c, 0x1, 0x1);
        gbc.writeMem(0xd802, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdb43, gbc.sp());
        EXPECT(0xd804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd802));
        EXPECT(0x9f, gbc.readMem(0xd803));
        // CB 9F 022D
        gbc.setState(0xe24a, 0x63e7, 0x6360, 0xb2df, 0x721b, 0x9389, 0x1, 0x1);
        gbc.writeMem(0xe24a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x63e7, gbc.sp());
        EXPECT(0xe24c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe24a));
        EXPECT(0x9f, gbc.readMem(0xe24b));
        // CB 9F 022E
        gbc.setState(0x6c8e, 0xcd51, 0x47d0, 0x6ab2, 0x5d20, 0xc72, 0x1, 0x0);
        gbc.writeMem(0x6c8e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xcd51, gbc.sp());
        EXPECT(0x6c90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 022F
        gbc.setState(0xd8b1, 0x5236, 0x96a0, 0xb991, 0xe947, 0x8084, 0x1, 0x1);
        gbc.writeMem(0xd8b1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x5236, gbc.sp());
        EXPECT(0xd8b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8b1));
        EXPECT(0x9f, gbc.readMem(0xd8b2));
        // CB 9F 0230
        gbc.setState(0x645, 0x8e2d, 0xd740, 0x252d, 0xff9f, 0x5d35, 0x1, 0x1);
        gbc.writeMem(0x645, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8e2d, gbc.sp());
        EXPECT(0x647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0231
        gbc.setState(0xdcc5, 0x6891, 0xaa70, 0x7147, 0xae97, 0xc27a, 0x1, 0x1);
        gbc.writeMem(0xdcc5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6891, gbc.sp());
        EXPECT(0xdcc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcc5));
        EXPECT(0x9f, gbc.readMem(0xdcc6));
        // CB 9F 0232
        gbc.setState(0xaa27, 0x1c9e, 0x18e0, 0xe33d, 0xbec9, 0x1161, 0x1, 0x0);
        gbc.writeMem(0xaa27, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x1c9e, gbc.sp());
        EXPECT(0xaa29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa27));
        EXPECT(0x9f, gbc.readMem(0xaa28));
        // CB 9F 0233
        gbc.setState(0x4182, 0x556e, 0x840, 0x4100, 0xa0b0, 0x1ace, 0x1, 0x1);
        gbc.writeMem(0x4182, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x556e, gbc.sp());
        EXPECT(0x4184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0235
        gbc.setState(0x98f1, 0x7b68, 0x7ff0, 0x99da, 0x497a, 0xc728, 0x1, 0x1);
        gbc.writeMem(0x98f1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7b68, gbc.sp());
        EXPECT(0x98f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f1));
        EXPECT(0x9f, gbc.readMem(0x98f2));
        // CB 9F 0236
        gbc.setState(0xaae7, 0x4624, 0xedc0, 0x6966, 0x2235, 0x7728, 0x0, 0x0);
        gbc.writeMem(0xaae7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4624, gbc.sp());
        EXPECT(0xaae9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaae7));
        EXPECT(0x9f, gbc.readMem(0xaae8));
        // CB 9F 0237
        gbc.setState(0x12f1, 0x2235, 0x1d80, 0xfcbf, 0xe505, 0x6d61, 0x1, 0x0);
        gbc.writeMem(0x12f1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2235, gbc.sp());
        EXPECT(0x12f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0238
        gbc.setState(0x96e2, 0x708b, 0xf840, 0x7a10, 0x328a, 0x9468, 0x0, 0x0);
        gbc.writeMem(0x96e2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x708b, gbc.sp());
        EXPECT(0x96e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96e2));
        EXPECT(0x9f, gbc.readMem(0x96e3));
        // CB 9F 0239
        gbc.setState(0x92dc, 0x3d21, 0x84d0, 0x9759, 0x75ea, 0x3d13, 0x1, 0x1);
        gbc.writeMem(0x92dc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3d21, gbc.sp());
        EXPECT(0x92de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92dc));
        EXPECT(0x9f, gbc.readMem(0x92dd));
        // CB 9F 023A
        gbc.setState(0x28b6, 0xd5d5, 0x3be0, 0xc368, 0x1e6f, 0x921c, 0x0, 0x1);
        gbc.writeMem(0x28b6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd5d5, gbc.sp());
        EXPECT(0x28b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 023B
        gbc.setState(0x61eb, 0x54cf, 0xb7c0, 0x4b1c, 0xf9e7, 0xac08, 0x1, 0x1);
        gbc.writeMem(0x61eb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x54cf, gbc.sp());
        EXPECT(0x61ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 023C
        gbc.setState(0x9b64, 0xdbda, 0xa2b0, 0xdcb1, 0x6578, 0x90ef, 0x1, 0x0);
        gbc.writeMem(0x9b64, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xdbda, gbc.sp());
        EXPECT(0x9b66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b64));
        EXPECT(0x9f, gbc.readMem(0x9b65));
        // CB 9F 023D
        gbc.setState(0x655b, 0xaa9e, 0xca80, 0x5522, 0x92f7, 0x1597, 0x0, 0x1);
        gbc.writeMem(0x655b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xaa9e, gbc.sp());
        EXPECT(0x655d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 023E
        gbc.setState(0x3261, 0x1786, 0xeec0, 0xdaac, 0x6604, 0x24b, 0x1, 0x1);
        gbc.writeMem(0x3261, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1786, gbc.sp());
        EXPECT(0x3263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 023F
        gbc.setState(0x703a, 0x225a, 0xfe70, 0x61e0, 0xc44a, 0x47b2, 0x0, 0x1);
        gbc.writeMem(0x703a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x225a, gbc.sp());
        EXPECT(0x703c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0240
        gbc.setState(0x10f3, 0x8677, 0x3860, 0x4366, 0xe1e4, 0x5d11, 0x0, 0x0);
        gbc.writeMem(0x10f3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8677, gbc.sp());
        EXPECT(0x10f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0241
        gbc.setState(0x65da, 0x16a8, 0xe890, 0x26a6, 0x4dc3, 0xc8b7, 0x0, 0x1);
        gbc.writeMem(0x65da, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x16a8, gbc.sp());
        EXPECT(0x65dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0242
        gbc.setState(0x4b6c, 0x4c1a, 0xe7e0, 0x7ad7, 0x5493, 0x466, 0x0, 0x0);
        gbc.writeMem(0x4b6c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x4c1a, gbc.sp());
        EXPECT(0x4b6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0243
        gbc.setState(0xc3d9, 0x3fcc, 0x2850, 0xc6c, 0x2a8e, 0x9a4b, 0x0, 0x0);
        gbc.writeMem(0xc3d9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3fcc, gbc.sp());
        EXPECT(0xc3db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3d9));
        EXPECT(0x9f, gbc.readMem(0xc3da));
        // CB 9F 0244
        gbc.setState(0xe414, 0x47c7, 0xe680, 0xedc2, 0xf43e, 0x3bbe, 0x1, 0x1);
        gbc.writeMem(0xe414, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x47c7, gbc.sp());
        EXPECT(0xe416, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe414));
        EXPECT(0x9f, gbc.readMem(0xe415));
        // CB 9F 0245
        gbc.setState(0x73f7, 0x141e, 0x4ee0, 0x96dc, 0xceaa, 0x158e, 0x1, 0x1);
        gbc.writeMem(0x73f7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x141e, gbc.sp());
        EXPECT(0x73f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0246
        gbc.setState(0xd3c9, 0xaf25, 0xd8d0, 0xd39a, 0x53af, 0xd4aa, 0x0, 0x1);
        gbc.writeMem(0xd3c9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xaf25, gbc.sp());
        EXPECT(0xd3cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c9));
        EXPECT(0x9f, gbc.readMem(0xd3ca));
        // CB 9F 0247
        gbc.setState(0xcd5c, 0x317d, 0x4730, 0x8f3d, 0x6d, 0x5286, 0x1, 0x0);
        gbc.writeMem(0xcd5c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x317d, gbc.sp());
        EXPECT(0xcd5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd5c));
        EXPECT(0x9f, gbc.readMem(0xcd5d));
        // CB 9F 0248
        gbc.setState(0x7e11, 0xf5e9, 0xc810, 0xdde6, 0xf96b, 0x6f1c, 0x0, 0x1);
        gbc.writeMem(0x7e11, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xf5e9, gbc.sp());
        EXPECT(0x7e13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0249
        gbc.setState(0x3b92, 0xe3cc, 0x3200, 0xc7af, 0x9b28, 0xe8b6, 0x0, 0x0);
        gbc.writeMem(0x3b92, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xe3cc, gbc.sp());
        EXPECT(0x3b94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 024A
        gbc.setState(0xedda, 0xf436, 0x7990, 0xe9e4, 0x9188, 0x3474, 0x1, 0x1);
        gbc.writeMem(0xedda, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf436, gbc.sp());
        EXPECT(0xeddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedda));
        EXPECT(0x9f, gbc.readMem(0xeddb));
        // CB 9F 024B
        gbc.setState(0xdaf1, 0x7c33, 0xe200, 0x43d7, 0xace6, 0x116a, 0x1, 0x1);
        gbc.writeMem(0xdaf1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7c33, gbc.sp());
        EXPECT(0xdaf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdaf1));
        EXPECT(0x9f, gbc.readMem(0xdaf2));
        // CB 9F 024C
        gbc.setState(0x23c7, 0x37f, 0x56d0, 0x9d89, 0x5fbd, 0xee04, 0x1, 0x0);
        gbc.writeMem(0x23c7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x37f, gbc.sp());
        EXPECT(0x23c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 024D
        gbc.setState(0x751c, 0x13bb, 0x4040, 0x6ffc, 0x7ef0, 0xe154, 0x0, 0x1);
        gbc.writeMem(0x751c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x13bb, gbc.sp());
        EXPECT(0x751e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 024E
        gbc.setState(0xe2d6, 0xfa36, 0xb3d0, 0x6869, 0xf5eb, 0x7ecd, 0x0, 0x0);
        gbc.writeMem(0xe2d6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xfa36, gbc.sp());
        EXPECT(0xe2d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe2d6));
        EXPECT(0x9f, gbc.readMem(0xe2d7));
        // CB 9F 024F
        gbc.setState(0x649c, 0x4227, 0xca30, 0xd082, 0x364f, 0x8739, 0x0, 0x0);
        gbc.writeMem(0x649c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x4227, gbc.sp());
        EXPECT(0x649e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0250
        gbc.setState(0xb40d, 0x8391, 0x1330, 0x870b, 0x4956, 0x368b, 0x0, 0x0);
        gbc.writeMem(0xb40d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x8391, gbc.sp());
        EXPECT(0xb40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb40d));
        EXPECT(0x9f, gbc.readMem(0xb40e));
        // CB 9F 0251
        gbc.setState(0xc855, 0x8f9f, 0x7e00, 0xbe37, 0x7dd7, 0xa2b1, 0x0, 0x1);
        gbc.writeMem(0xc855, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8f9f, gbc.sp());
        EXPECT(0xc857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc855));
        EXPECT(0x9f, gbc.readMem(0xc856));
        // CB 9F 0252
        gbc.setState(0x192e, 0xfe03, 0x1cc0, 0xd793, 0xadfa, 0x356b, 0x0, 0x1);
        gbc.writeMem(0x192e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xfe03, gbc.sp());
        EXPECT(0x1930, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0253
        gbc.setState(0xe16a, 0xebdb, 0xbf80, 0x25d2, 0x78db, 0x8688, 0x0, 0x0);
        gbc.writeMem(0xe16a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xebdb, gbc.sp());
        EXPECT(0xe16c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe16a));
        EXPECT(0x9f, gbc.readMem(0xe16b));
        // CB 9F 0255
        gbc.setState(0x5f1a, 0x3725, 0xf340, 0x6642, 0xe33f, 0x5859, 0x0, 0x0);
        gbc.writeMem(0x5f1a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x3725, gbc.sp());
        EXPECT(0x5f1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0256
        gbc.setState(0x3601, 0x193b, 0x26c0, 0x4bcc, 0x761e, 0xcad4, 0x0, 0x0);
        gbc.writeMem(0x3601, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x193b, gbc.sp());
        EXPECT(0x3603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0257
        gbc.setState(0x22a0, 0xd2c3, 0xbcf0, 0xdd27, 0xb70, 0xc7cd, 0x0, 0x0);
        gbc.writeMem(0x22a0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd2c3, gbc.sp());
        EXPECT(0x22a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0258
        gbc.setState(0x2971, 0xf079, 0x3ec0, 0xecd0, 0xe838, 0x3750, 0x0, 0x0);
        gbc.writeMem(0x2971, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf079, gbc.sp());
        EXPECT(0x2973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0259
        gbc.setState(0x450b, 0x5178, 0xcdb0, 0x8762, 0x9373, 0xeb07, 0x1, 0x1);
        gbc.writeMem(0x450b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5178, gbc.sp());
        EXPECT(0x450d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 025A
        gbc.setState(0x451d, 0x8394, 0x51f0, 0x5a56, 0x44ea, 0x9dd7, 0x0, 0x0);
        gbc.writeMem(0x451d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x8394, gbc.sp());
        EXPECT(0x451f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 025B
        gbc.setState(0x7238, 0x8009, 0x500, 0x8652, 0xd368, 0xa0d2, 0x1, 0x1);
        gbc.writeMem(0x7238, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x8009, gbc.sp());
        EXPECT(0x723a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 025C
        gbc.setState(0x6399, 0xea71, 0x1840, 0xdfd3, 0x4e9a, 0x3dd3, 0x0, 0x1);
        gbc.writeMem(0x6399, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xea71, gbc.sp());
        EXPECT(0x639b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 025E
        gbc.setState(0x6ba9, 0x2923, 0xb080, 0x7d7f, 0x2687, 0xc9bf, 0x0, 0x1);
        gbc.writeMem(0x6ba9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2923, gbc.sp());
        EXPECT(0x6bab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 025F
        gbc.setState(0xbbe0, 0x679f, 0x4ee0, 0x251b, 0x8f6a, 0x8d08, 0x1, 0x0);
        gbc.writeMem(0xbbe0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x679f, gbc.sp());
        EXPECT(0xbbe2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbbe0));
        EXPECT(0x9f, gbc.readMem(0xbbe1));
        // CB 9F 0260
        gbc.setState(0xda50, 0xaa4b, 0x9010, 0xa9bd, 0xdc43, 0x870e, 0x0, 0x0);
        gbc.writeMem(0xda50, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaa4b, gbc.sp());
        EXPECT(0xda52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda50));
        EXPECT(0x9f, gbc.readMem(0xda51));
        // CB 9F 0261
        gbc.setState(0xbea9, 0x212e, 0xa140, 0x758f, 0x8831, 0x7233, 0x1, 0x0);
        gbc.writeMem(0xbea9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x212e, gbc.sp());
        EXPECT(0xbeab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbea9));
        EXPECT(0x9f, gbc.readMem(0xbeaa));
        // CB 9F 0263
        gbc.setState(0x54a0, 0x2c14, 0x8a10, 0x1e54, 0x6a49, 0xeedb, 0x1, 0x0);
        gbc.writeMem(0x54a0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x2c14, gbc.sp());
        EXPECT(0x54a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0264
        gbc.setState(0x5879, 0x46b6, 0x4ba0, 0x6bd8, 0x1cb3, 0x2693, 0x0, 0x0);
        gbc.writeMem(0x5879, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x46b6, gbc.sp());
        EXPECT(0x587b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0265
        gbc.setState(0x18f, 0x1662, 0x3c60, 0x17ad, 0x5d56, 0x42d8, 0x0, 0x0);
        gbc.writeMem(0x18f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1662, gbc.sp());
        EXPECT(0x191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0266
        gbc.setState(0x2d9c, 0xdfc2, 0x1690, 0x1052, 0x8e39, 0x2eda, 0x0, 0x0);
        gbc.writeMem(0x2d9c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdfc2, gbc.sp());
        EXPECT(0x2d9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0267
        gbc.setState(0x3fea, 0x6e3d, 0x9d30, 0xe444, 0x5ef7, 0x520f, 0x1, 0x0);
        gbc.writeMem(0x3fea, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x6e3d, gbc.sp());
        EXPECT(0x3fec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0268
        gbc.setState(0x91c, 0x913, 0x33b0, 0xdb94, 0x1e65, 0x7ede, 0x0, 0x1);
        gbc.writeMem(0x91c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x913, gbc.sp());
        EXPECT(0x91e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0269
        gbc.setState(0x5c7e, 0x45b0, 0xc7b0, 0x3132, 0x9579, 0x7292, 0x0, 0x0);
        gbc.writeMem(0x5c7e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x45b0, gbc.sp());
        EXPECT(0x5c80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 026A
        gbc.setState(0xe375, 0xe7d9, 0x1bc0, 0x3af7, 0xfec6, 0x6d53, 0x0, 0x1);
        gbc.writeMem(0xe375, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe7d9, gbc.sp());
        EXPECT(0xe377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe375));
        EXPECT(0x9f, gbc.readMem(0xe376));
        // CB 9F 026B
        gbc.setState(0x32bc, 0xea82, 0xb5f0, 0x6f18, 0xd414, 0x38f7, 0x1, 0x0);
        gbc.writeMem(0x32bc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xea82, gbc.sp());
        EXPECT(0x32be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 026C
        gbc.setState(0xe4ae, 0xa95, 0xf540, 0x1867, 0x2d8d, 0xfba3, 0x1, 0x1);
        gbc.writeMem(0xe4ae, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa95, gbc.sp());
        EXPECT(0xe4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4ae));
        EXPECT(0x9f, gbc.readMem(0xe4af));
        // CB 9F 026D
        gbc.setState(0xde7e, 0x31c5, 0x4230, 0x9c81, 0xcb7b, 0x5159, 0x1, 0x0);
        gbc.writeMem(0xde7e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x31c5, gbc.sp());
        EXPECT(0xde80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde7e));
        EXPECT(0x9f, gbc.readMem(0xde7f));
        // CB 9F 026E
        gbc.setState(0xeb22, 0x403d, 0x59c0, 0x38d9, 0x76c7, 0x8b8d, 0x1, 0x1);
        gbc.writeMem(0xeb22, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x403d, gbc.sp());
        EXPECT(0xeb24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb22));
        EXPECT(0x9f, gbc.readMem(0xeb23));
        // CB 9F 026F
        gbc.setState(0x8dfb, 0x492e, 0xb8a0, 0x23e6, 0xdae5, 0xeee0, 0x1, 0x0);
        gbc.writeMem(0x8dfb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x492e, gbc.sp());
        EXPECT(0x8dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dfb));
        EXPECT(0x9f, gbc.readMem(0x8dfc));
        // CB 9F 0270
        gbc.setState(0x3b71, 0x6db9, 0x8b60, 0x1c4b, 0xd8c1, 0xa08c, 0x0, 0x0);
        gbc.writeMem(0x3b71, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6db9, gbc.sp());
        EXPECT(0x3b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0271
        gbc.setState(0xb646, 0x67c8, 0xc640, 0x23ec, 0x6c40, 0x11d0, 0x1, 0x1);
        gbc.writeMem(0xb646, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x67c8, gbc.sp());
        EXPECT(0xb648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb646));
        EXPECT(0x9f, gbc.readMem(0xb647));
        // CB 9F 0273
        gbc.setState(0x5a8e, 0x3a8a, 0xe130, 0x1558, 0x1bd8, 0xa4fe, 0x0, 0x0);
        gbc.writeMem(0x5a8e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x3a8a, gbc.sp());
        EXPECT(0x5a90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0274
        gbc.setState(0x546c, 0x200f, 0x7390, 0x41d0, 0x970e, 0x3b9e, 0x0, 0x1);
        gbc.writeMem(0x546c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x200f, gbc.sp());
        EXPECT(0x546e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0275
        gbc.setState(0x4cd3, 0x75ba, 0xae40, 0x994, 0x346b, 0xe16a, 0x0, 0x1);
        gbc.writeMem(0x4cd3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x75ba, gbc.sp());
        EXPECT(0x4cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0276
        gbc.setState(0x622, 0x2816, 0x3750, 0xe74c, 0x3b50, 0x7fad, 0x0, 0x0);
        gbc.writeMem(0x622, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x2816, gbc.sp());
        EXPECT(0x624, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0277
        gbc.setState(0xb28a, 0x3604, 0x8920, 0x3cdf, 0xadce, 0xb0a4, 0x1, 0x0);
        gbc.writeMem(0xb28a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x3604, gbc.sp());
        EXPECT(0xb28c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb28a));
        EXPECT(0x9f, gbc.readMem(0xb28b));
        // CB 9F 0278
        gbc.setState(0x156c, 0x9d85, 0xc0f0, 0xbfe8, 0x73ce, 0x82e5, 0x0, 0x1);
        gbc.writeMem(0x156c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9d85, gbc.sp());
        EXPECT(0x156e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0279
        gbc.setState(0x1fe1, 0xfe7, 0xf640, 0xc94b, 0x4653, 0xf736, 0x1, 0x0);
        gbc.writeMem(0x1fe1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xfe7, gbc.sp());
        EXPECT(0x1fe3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 027A
        gbc.setState(0x456a, 0xc326, 0x1c20, 0xeaee, 0xefb, 0x5a43, 0x0, 0x1);
        gbc.writeMem(0x456a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc326, gbc.sp());
        EXPECT(0x456c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 027B
        gbc.setState(0x6c39, 0x179e, 0xfbd0, 0x1d4f, 0x2768, 0x5cbb, 0x1, 0x0);
        gbc.writeMem(0x6c39, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x179e, gbc.sp());
        EXPECT(0x6c3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 027C
        gbc.setState(0xc56d, 0xe2b7, 0xc3f0, 0x5103, 0x650e, 0x3534, 0x0, 0x1);
        gbc.writeMem(0xc56d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xe2b7, gbc.sp());
        EXPECT(0xc56f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc56d));
        EXPECT(0x9f, gbc.readMem(0xc56e));
        // CB 9F 027D
        gbc.setState(0x9247, 0x39be, 0xe920, 0xbc33, 0xb67, 0x802f, 0x1, 0x1);
        gbc.writeMem(0x9247, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x39be, gbc.sp());
        EXPECT(0x9249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9247));
        EXPECT(0x9f, gbc.readMem(0x9248));
        // CB 9F 027E
        gbc.setState(0xc8c0, 0x42c5, 0xd950, 0x78ec, 0xd2f, 0xdacc, 0x1, 0x0);
        gbc.writeMem(0xc8c0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x42c5, gbc.sp());
        EXPECT(0xc8c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8c0));
        EXPECT(0x9f, gbc.readMem(0xc8c1));
        // CB 9F 027F
        gbc.setState(0x4145, 0x820f, 0xefd0, 0x1ef8, 0xf3ec, 0x87f5, 0x1, 0x1);
        gbc.writeMem(0x4145, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x820f, gbc.sp());
        EXPECT(0x4147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0280
        gbc.setState(0xb162, 0x5a06, 0x6230, 0x3fc3, 0xa359, 0x9ca1, 0x1, 0x0);
        gbc.writeMem(0xb162, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x5a06, gbc.sp());
        EXPECT(0xb164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb162));
        EXPECT(0x9f, gbc.readMem(0xb163));
        // CB 9F 0281
        gbc.setState(0x8948, 0x1fcf, 0x72d0, 0xfd8f, 0x68bf, 0x7e1f, 0x0, 0x0);
        gbc.writeMem(0x8948, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1fcf, gbc.sp());
        EXPECT(0x894a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8948));
        EXPECT(0x9f, gbc.readMem(0x8949));
        // CB 9F 0282
        gbc.setState(0x233b, 0x1fca, 0x59e0, 0xac3b, 0x8091, 0x2ac4, 0x1, 0x1);
        gbc.writeMem(0x233b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1fca, gbc.sp());
        EXPECT(0x233d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0283
        gbc.setState(0xad61, 0x205b, 0x62d0, 0xe18e, 0xf5fc, 0xe628, 0x0, 0x0);
        gbc.writeMem(0xad61, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x205b, gbc.sp());
        EXPECT(0xad63, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad61));
        EXPECT(0x9f, gbc.readMem(0xad62));
        // CB 9F 0284
        gbc.setState(0xc20b, 0x735d, 0xb0d0, 0xe374, 0x6b97, 0x54b6, 0x1, 0x1);
        gbc.writeMem(0xc20b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x735d, gbc.sp());
        EXPECT(0xc20d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc20b));
        EXPECT(0x9f, gbc.readMem(0xc20c));
        // CB 9F 0285
        gbc.setState(0xa3ea, 0x205c, 0xeba0, 0xe8f3, 0x241d, 0x201, 0x0, 0x1);
        gbc.writeMem(0xa3ea, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x205c, gbc.sp());
        EXPECT(0xa3ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ea));
        EXPECT(0x9f, gbc.readMem(0xa3eb));
        // CB 9F 0287
        gbc.setState(0x5e24, 0x6bc3, 0x6930, 0xd2e9, 0x811a, 0x1f39, 0x1, 0x1);
        gbc.writeMem(0x5e24, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x6bc3, gbc.sp());
        EXPECT(0x5e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0288
        gbc.setState(0x1f11, 0x4189, 0xff00, 0x220f, 0xd38b, 0x4c30, 0x0, 0x1);
        gbc.writeMem(0x1f11, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x4189, gbc.sp());
        EXPECT(0x1f13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0289
        gbc.setState(0x2e6d, 0xb351, 0xc700, 0xf953, 0xb934, 0x434e, 0x0, 0x0);
        gbc.writeMem(0x2e6d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xb351, gbc.sp());
        EXPECT(0x2e6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 028A
        gbc.setState(0x8bfe, 0xa420, 0xe3b0, 0x9aef, 0xb742, 0x15c0, 0x1, 0x0);
        gbc.writeMem(0x8bfe, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa420, gbc.sp());
        EXPECT(0x8c00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bfe));
        EXPECT(0x9f, gbc.readMem(0x8bff));
        // CB 9F 028C
        gbc.setState(0xe70c, 0xb673, 0x6600, 0x5c1a, 0x5b60, 0xf500, 0x0, 0x1);
        gbc.writeMem(0xe70c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xb673, gbc.sp());
        EXPECT(0xe70e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe70c));
        EXPECT(0x9f, gbc.readMem(0xe70d));
        // CB 9F 028D
        gbc.setState(0xd6bd, 0x319d, 0x3cf0, 0xa06a, 0x8605, 0x1c45, 0x1, 0x1);
        gbc.writeMem(0xd6bd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x319d, gbc.sp());
        EXPECT(0xd6bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd6bd));
        EXPECT(0x9f, gbc.readMem(0xd6be));
        // CB 9F 028F
        gbc.setState(0x4d5a, 0xfeab, 0x66a0, 0xd3f7, 0xcba1, 0x5940, 0x1, 0x1);
        gbc.writeMem(0x4d5a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xfeab, gbc.sp());
        EXPECT(0x4d5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0290
        gbc.setState(0x6015, 0x8c0, 0x1cc0, 0x93b2, 0x9658, 0x6782, 0x1, 0x1);
        gbc.writeMem(0x6015, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8c0, gbc.sp());
        EXPECT(0x6017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0291
        gbc.setState(0xddbf, 0x9ef, 0xe4f0, 0xeddb, 0x1e95, 0xf8ad, 0x0, 0x0);
        gbc.writeMem(0xddbf, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x9ef, gbc.sp());
        EXPECT(0xddc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddbf));
        EXPECT(0x9f, gbc.readMem(0xddc0));
        // CB 9F 0292
        gbc.setState(0xaa4e, 0xb8c4, 0xd040, 0x5488, 0x9a62, 0x568e, 0x0, 0x0);
        gbc.writeMem(0xaa4e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xb8c4, gbc.sp());
        EXPECT(0xaa50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa4e));
        EXPECT(0x9f, gbc.readMem(0xaa4f));
        // CB 9F 0293
        gbc.setState(0xf36, 0xc8d4, 0x3a0, 0x545d, 0x98a3, 0x854c, 0x0, 0x1);
        gbc.writeMem(0xf36, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc8d4, gbc.sp());
        EXPECT(0xf38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0294
        gbc.setState(0x4fbc, 0xd140, 0xa130, 0x7a35, 0xa4f1, 0x3071, 0x1, 0x1);
        gbc.writeMem(0x4fbc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd140, gbc.sp());
        EXPECT(0x4fbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0295
        gbc.setState(0x8436, 0x566d, 0xcc00, 0xd4fc, 0x6fda, 0x944c, 0x0, 0x0);
        gbc.writeMem(0x8436, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x566d, gbc.sp());
        EXPECT(0x8438, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8436));
        EXPECT(0x9f, gbc.readMem(0x8437));
        // CB 9F 0296
        gbc.setState(0x73b2, 0x642c, 0x4740, 0x730a, 0xfdf, 0xe8ac, 0x0, 0x0);
        gbc.writeMem(0x73b2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x642c, gbc.sp());
        EXPECT(0x73b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0297
        gbc.setState(0x510e, 0x4ded, 0xbc50, 0x84de, 0x162c, 0x9e4f, 0x0, 0x0);
        gbc.writeMem(0x510e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x4ded, gbc.sp());
        EXPECT(0x5110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0298
        gbc.setState(0xedca, 0x99e4, 0xf700, 0xdf2a, 0xc5b6, 0xf4b5, 0x0, 0x0);
        gbc.writeMem(0xedca, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x99e4, gbc.sp());
        EXPECT(0xedcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedca));
        EXPECT(0x9f, gbc.readMem(0xedcb));
        // CB 9F 0299
        gbc.setState(0x9734, 0x29ba, 0x2a0, 0xf9bc, 0x5994, 0x39fb, 0x0, 0x1);
        gbc.writeMem(0x9734, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x29ba, gbc.sp());
        EXPECT(0x9736, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9734));
        EXPECT(0x9f, gbc.readMem(0x9735));
        // CB 9F 029A
        gbc.setState(0xb040, 0x1c1f, 0xa1f0, 0x78fd, 0x8016, 0xac44, 0x1, 0x1);
        gbc.writeMem(0xb040, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x1c1f, gbc.sp());
        EXPECT(0xb042, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb040));
        EXPECT(0x9f, gbc.readMem(0xb041));
        // CB 9F 029B
        gbc.setState(0xcea5, 0x15af, 0x5fc0, 0x6324, 0xfdf3, 0x427f, 0x0, 0x1);
        gbc.writeMem(0xcea5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x15af, gbc.sp());
        EXPECT(0xcea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcea5));
        EXPECT(0x9f, gbc.readMem(0xcea6));
        // CB 9F 029C
        gbc.setState(0x9f4f, 0x5eff, 0x3250, 0x3731, 0xfbcd, 0x3af3, 0x1, 0x1);
        gbc.writeMem(0x9f4f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5eff, gbc.sp());
        EXPECT(0x9f51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4f));
        EXPECT(0x9f, gbc.readMem(0x9f50));
        // CB 9F 029F
        gbc.setState(0xb162, 0xa9e0, 0xfb00, 0x89cf, 0xf7f2, 0xa077, 0x1, 0x0);
        gbc.writeMem(0xb162, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa9e0, gbc.sp());
        EXPECT(0xb164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb162));
        EXPECT(0x9f, gbc.readMem(0xb163));
        // CB 9F 02A0
        gbc.setState(0xb5e7, 0xa41f, 0x180, 0x42b, 0xc50b, 0xe827, 0x1, 0x1);
        gbc.writeMem(0xb5e7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa41f, gbc.sp());
        EXPECT(0xb5e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5e7));
        EXPECT(0x9f, gbc.readMem(0xb5e8));
        // CB 9F 02A1
        gbc.setState(0x8693, 0x8c17, 0x9120, 0x16fe, 0xa45c, 0x8990, 0x1, 0x0);
        gbc.writeMem(0x8693, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x8c17, gbc.sp());
        EXPECT(0x8695, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8693));
        EXPECT(0x9f, gbc.readMem(0x8694));
        // CB 9F 02A2
        gbc.setState(0xc457, 0x5d02, 0xbbf0, 0x89a0, 0xe1f6, 0x3904, 0x1, 0x1);
        gbc.writeMem(0xc457, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5d02, gbc.sp());
        EXPECT(0xc459, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc457));
        EXPECT(0x9f, gbc.readMem(0xc458));
        // CB 9F 02A3
        gbc.setState(0x765c, 0x7511, 0x7940, 0xa895, 0x29eb, 0xc22b, 0x0, 0x0);
        gbc.writeMem(0x765c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7511, gbc.sp());
        EXPECT(0x765e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02A4
        gbc.setState(0x983f, 0x56d7, 0x6ad0, 0xa3c6, 0x621e, 0x1342, 0x0, 0x1);
        gbc.writeMem(0x983f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x56d7, gbc.sp());
        EXPECT(0x9841, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x983f));
        EXPECT(0x9f, gbc.readMem(0x9840));
        // CB 9F 02A5
        gbc.setState(0x17c0, 0x7030, 0xb060, 0xac0e, 0xfd5, 0xcf60, 0x1, 0x1);
        gbc.writeMem(0x17c0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7030, gbc.sp());
        EXPECT(0x17c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02A6
        gbc.setState(0x9f49, 0x323, 0x98b0, 0xb058, 0x869d, 0xfa70, 0x0, 0x1);
        gbc.writeMem(0x9f49, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x323, gbc.sp());
        EXPECT(0x9f4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f49));
        EXPECT(0x9f, gbc.readMem(0x9f4a));
        // CB 9F 02A7
        gbc.setState(0x50ca, 0xc734, 0x2410, 0x6931, 0x4e12, 0xbcd3, 0x0, 0x1);
        gbc.writeMem(0x50ca, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc734, gbc.sp());
        EXPECT(0x50cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02A8
        gbc.setState(0x7b75, 0x1085, 0x83a0, 0xdeeb, 0xee91, 0xde20, 0x0, 0x0);
        gbc.writeMem(0x7b75, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1085, gbc.sp());
        EXPECT(0x7b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02A9
        gbc.setState(0x75c, 0x6a16, 0xf680, 0xdad8, 0xfbaa, 0x5e01, 0x0, 0x1);
        gbc.writeMem(0x75c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x6a16, gbc.sp());
        EXPECT(0x75e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02AA
        gbc.setState(0x1725, 0x92e2, 0x8eb0, 0xea70, 0xc5f9, 0xf369, 0x0, 0x0);
        gbc.writeMem(0x1725, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x92e2, gbc.sp());
        EXPECT(0x1727, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02AB
        gbc.setState(0x9fcd, 0x3332, 0xd930, 0x7750, 0x21fe, 0x9d97, 0x1, 0x0);
        gbc.writeMem(0x9fcd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3332, gbc.sp());
        EXPECT(0x9fcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fcd));
        EXPECT(0x9f, gbc.readMem(0x9fce));
        // CB 9F 02AC
        gbc.setState(0xd69a, 0xd1d6, 0x40a0, 0x83f2, 0x1e73, 0xbeca, 0x0, 0x0);
        gbc.writeMem(0xd69a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xd1d6, gbc.sp());
        EXPECT(0xd69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd69a));
        EXPECT(0x9f, gbc.readMem(0xd69b));
        // CB 9F 02AD
        gbc.setState(0xe4d1, 0xd9e1, 0x1c30, 0xa35a, 0x2a24, 0x31fa, 0x0, 0x0);
        gbc.writeMem(0xe4d1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xd9e1, gbc.sp());
        EXPECT(0xe4d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4d1));
        EXPECT(0x9f, gbc.readMem(0xe4d2));
        // CB 9F 02AE
        gbc.setState(0x5d10, 0xa1a2, 0x4aa0, 0xff33, 0x1a05, 0x185b, 0x1, 0x0);
        gbc.writeMem(0x5d10, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa1a2, gbc.sp());
        EXPECT(0x5d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02B0
        gbc.setState(0x199c, 0xd915, 0x80, 0xfede, 0xe3dd, 0xe00c, 0x1, 0x0);
        gbc.writeMem(0x199c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd915, gbc.sp());
        EXPECT(0x199e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02B1
        gbc.setState(0x4103, 0x5e27, 0x3dc0, 0xe7f6, 0x592e, 0x17b0, 0x1, 0x1);
        gbc.writeMem(0x4103, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x5e27, gbc.sp());
        EXPECT(0x4105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02B2
        gbc.setState(0x2f6e, 0x1fb8, 0xd920, 0x66f2, 0x15a9, 0xf340, 0x1, 0x1);
        gbc.writeMem(0x2f6e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x1fb8, gbc.sp());
        EXPECT(0x2f70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02B3
        gbc.setState(0x7f53, 0xdabf, 0x8c50, 0xa94, 0x2ad7, 0x2100, 0x0, 0x1);
        gbc.writeMem(0x7f53, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xdabf, gbc.sp());
        EXPECT(0x7f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02B4
        gbc.setState(0x4e07, 0x1a33, 0x6fd0, 0xd907, 0xccf9, 0xac9e, 0x1, 0x0);
        gbc.writeMem(0x4e07, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x1a33, gbc.sp());
        EXPECT(0x4e09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02B5
        gbc.setState(0xc2a1, 0xc290, 0xb8e0, 0x3145, 0x7da7, 0x500b, 0x0, 0x1);
        gbc.writeMem(0xc2a1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc290, gbc.sp());
        EXPECT(0xc2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a1));
        EXPECT(0x9f, gbc.readMem(0xc2a2));
        // CB 9F 02B6
        gbc.setState(0x3754, 0xe06d, 0x8270, 0xdae2, 0x4e44, 0x3247, 0x0, 0x1);
        gbc.writeMem(0x3754, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe06d, gbc.sp());
        EXPECT(0x3756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02B7
        gbc.setState(0x7e51, 0xbf8, 0x5fa0, 0xaee7, 0xf054, 0x685, 0x1, 0x1);
        gbc.writeMem(0x7e51, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbf8, gbc.sp());
        EXPECT(0x7e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02B8
        gbc.setState(0x1e48, 0x3477, 0x840, 0x5cf, 0xd417, 0xffab, 0x1, 0x0);
        gbc.writeMem(0x1e48, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3477, gbc.sp());
        EXPECT(0x1e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02B9
        gbc.setState(0x813d, 0x6fe9, 0x54d0, 0x9c20, 0x4e11, 0xfac9, 0x1, 0x1);
        gbc.writeMem(0x813d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6fe9, gbc.sp());
        EXPECT(0x813f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x813d));
        EXPECT(0x9f, gbc.readMem(0x813e));
        // CB 9F 02BA
        gbc.setState(0xa76f, 0xfb42, 0x2900, 0x71b3, 0xddf1, 0xeda1, 0x1, 0x1);
        gbc.writeMem(0xa76f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xfb42, gbc.sp());
        EXPECT(0xa771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa76f));
        EXPECT(0x9f, gbc.readMem(0xa770));
        // CB 9F 02BB
        gbc.setState(0xda00, 0x60fa, 0xb7e0, 0xc00b, 0x6bc1, 0x2852, 0x0, 0x1);
        gbc.writeMem(0xda00, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x60fa, gbc.sp());
        EXPECT(0xda02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda00));
        EXPECT(0x9f, gbc.readMem(0xda01));
        // CB 9F 02BC
        gbc.setState(0x7347, 0x1771, 0x91b0, 0xfc87, 0x865, 0xfff6, 0x1, 0x0);
        gbc.writeMem(0x7347, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1771, gbc.sp());
        EXPECT(0x7349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02BD
        gbc.setState(0x2320, 0x507b, 0xe520, 0x7ce5, 0xf560, 0x8522, 0x0, 0x1);
        gbc.writeMem(0x2320, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x507b, gbc.sp());
        EXPECT(0x2322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02BE
        gbc.setState(0xa8f8, 0xf195, 0xf2b0, 0x4795, 0xbaea, 0x33c9, 0x0, 0x0);
        gbc.writeMem(0xa8f8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf195, gbc.sp());
        EXPECT(0xa8fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8f8));
        EXPECT(0x9f, gbc.readMem(0xa8f9));
        // CB 9F 02BF
        gbc.setState(0x3a96, 0xb888, 0xd580, 0xfdee, 0x9a27, 0x5688, 0x1, 0x1);
        gbc.writeMem(0x3a96, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb888, gbc.sp());
        EXPECT(0x3a98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02C0
        gbc.setState(0xeb56, 0x1c0f, 0xd3c0, 0x2fa6, 0xb2ce, 0xae3f, 0x1, 0x1);
        gbc.writeMem(0xeb56, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x1c0f, gbc.sp());
        EXPECT(0xeb58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb56));
        EXPECT(0x9f, gbc.readMem(0xeb57));
        // CB 9F 02C1
        gbc.setState(0xc0ae, 0x5f50, 0x9520, 0xf39, 0x1ed6, 0x37b8, 0x1, 0x0);
        gbc.writeMem(0xc0ae, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x5f50, gbc.sp());
        EXPECT(0xc0b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ae));
        EXPECT(0x9f, gbc.readMem(0xc0af));
        // CB 9F 02C2
        gbc.setState(0xcf86, 0xb18, 0x7f20, 0xd674, 0x305b, 0xe9bd, 0x1, 0x0);
        gbc.writeMem(0xcf86, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb18, gbc.sp());
        EXPECT(0xcf88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf86));
        EXPECT(0x9f, gbc.readMem(0xcf87));
        // CB 9F 02C3
        gbc.setState(0x9f77, 0xc60e, 0xf230, 0x2485, 0x195f, 0x1725, 0x1, 0x0);
        gbc.writeMem(0x9f77, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc60e, gbc.sp());
        EXPECT(0x9f79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f77));
        EXPECT(0x9f, gbc.readMem(0x9f78));
        // CB 9F 02C5
        gbc.setState(0xc66c, 0xf1aa, 0x6300, 0x3a37, 0x695d, 0x15c4, 0x1, 0x0);
        gbc.writeMem(0xc66c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xf1aa, gbc.sp());
        EXPECT(0xc66e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc66c));
        EXPECT(0x9f, gbc.readMem(0xc66d));
        // CB 9F 02C6
        gbc.setState(0x73ff, 0xd7d8, 0x4350, 0x1677, 0x91ed, 0x3792, 0x0, 0x0);
        gbc.writeMem(0x73ff, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd7d8, gbc.sp());
        EXPECT(0x7401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02C7
        gbc.setState(0xb2b3, 0xa555, 0xf410, 0xf4d2, 0x7590, 0x4935, 0x0, 0x0);
        gbc.writeMem(0xb2b3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa555, gbc.sp());
        EXPECT(0xb2b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2b3));
        EXPECT(0x9f, gbc.readMem(0xb2b4));
        // CB 9F 02C8
        gbc.setState(0x58e9, 0xeeba, 0x2740, 0xe2d8, 0x9694, 0x1eb7, 0x1, 0x1);
        gbc.writeMem(0x58e9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xeeba, gbc.sp());
        EXPECT(0x58eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02C9
        gbc.setState(0xe8cc, 0x1687, 0x91f0, 0xffd8, 0xb22f, 0xfd8e, 0x1, 0x0);
        gbc.writeMem(0xe8cc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x1687, gbc.sp());
        EXPECT(0xe8ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8cc));
        EXPECT(0x9f, gbc.readMem(0xe8cd));
        // CB 9F 02CA
        gbc.setState(0x5205, 0xd8e6, 0xf060, 0x97ba, 0xbc53, 0x9242, 0x1, 0x1);
        gbc.writeMem(0x5205, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd8e6, gbc.sp());
        EXPECT(0x5207, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02CB
        gbc.setState(0x74c2, 0x161d, 0xc780, 0x4fd2, 0xe4d5, 0xe5b6, 0x0, 0x0);
        gbc.writeMem(0x74c2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x161d, gbc.sp());
        EXPECT(0x74c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02CC
        gbc.setState(0xd573, 0x5a58, 0x1cd0, 0xcd56, 0x6dd8, 0x6c39, 0x1, 0x0);
        gbc.writeMem(0xd573, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5a58, gbc.sp());
        EXPECT(0xd575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd573));
        EXPECT(0x9f, gbc.readMem(0xd574));
        // CB 9F 02CD
        gbc.setState(0xa364, 0x487c, 0x4420, 0xb5e4, 0xa2dd, 0x3d20, 0x0, 0x0);
        gbc.writeMem(0xa364, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x487c, gbc.sp());
        EXPECT(0xa366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa364));
        EXPECT(0x9f, gbc.readMem(0xa365));
        // CB 9F 02CE
        gbc.setState(0x1650, 0x536e, 0x7580, 0x23c4, 0x57d, 0x62c2, 0x1, 0x0);
        gbc.writeMem(0x1650, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x536e, gbc.sp());
        EXPECT(0x1652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02CF
        gbc.setState(0xea04, 0x858d, 0x2b30, 0xc26, 0x4a97, 0x263a, 0x1, 0x1);
        gbc.writeMem(0xea04, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x858d, gbc.sp());
        EXPECT(0xea06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea04));
        EXPECT(0x9f, gbc.readMem(0xea05));
        // CB 9F 02D0
        gbc.setState(0x51ba, 0x58e2, 0x7de0, 0x7747, 0xb91, 0xdd7b, 0x0, 0x0);
        gbc.writeMem(0x51ba, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x58e2, gbc.sp());
        EXPECT(0x51bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02D1
        gbc.setState(0x5d0f, 0x1c49, 0x7d20, 0xeb55, 0xeb4b, 0xb408, 0x0, 0x0);
        gbc.writeMem(0x5d0f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x1c49, gbc.sp());
        EXPECT(0x5d11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02D2
        gbc.setState(0x942a, 0x5613, 0xe2e0, 0x324a, 0x3f15, 0xf63, 0x0, 0x1);
        gbc.writeMem(0x942a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5613, gbc.sp());
        EXPECT(0x942c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x942a));
        EXPECT(0x9f, gbc.readMem(0x942b));
        // CB 9F 02D3
        gbc.setState(0xc9cc, 0x8907, 0x5be0, 0x42ad, 0xf537, 0x94c5, 0x1, 0x1);
        gbc.writeMem(0xc9cc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x8907, gbc.sp());
        EXPECT(0xc9ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9cc));
        EXPECT(0x9f, gbc.readMem(0xc9cd));
        // CB 9F 02D4
        gbc.setState(0x936e, 0x9848, 0x6df0, 0xef2, 0xf9f5, 0xf864, 0x1, 0x0);
        gbc.writeMem(0x936e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x9848, gbc.sp());
        EXPECT(0x9370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x936e));
        EXPECT(0x9f, gbc.readMem(0x936f));
        // CB 9F 02D5
        gbc.setState(0x2a2d, 0x3887, 0x9c20, 0x64ef, 0x470e, 0xd3ee, 0x0, 0x0);
        gbc.writeMem(0x2a2d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3887, gbc.sp());
        EXPECT(0x2a2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02D6
        gbc.setState(0x45bf, 0x9b70, 0x38b0, 0x54ec, 0xe84a, 0xb9c9, 0x1, 0x1);
        gbc.writeMem(0x45bf, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9b70, gbc.sp());
        EXPECT(0x45c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02D7
        gbc.setState(0x8a85, 0x1abb, 0xeb40, 0x9e81, 0x6c53, 0x2050, 0x1, 0x1);
        gbc.writeMem(0x8a85, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1abb, gbc.sp());
        EXPECT(0x8a87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a85));
        EXPECT(0x9f, gbc.readMem(0x8a86));
        // CB 9F 02D8
        gbc.setState(0xefd6, 0xb654, 0x6590, 0x794f, 0x67dc, 0x8288, 0x1, 0x1);
        gbc.writeMem(0xefd6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xb654, gbc.sp());
        EXPECT(0xefd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefd6));
        EXPECT(0x9f, gbc.readMem(0xefd7));
        // CB 9F 02D9
        gbc.setState(0xc729, 0x114a, 0x4970, 0x125f, 0x2dc5, 0x91ca, 0x0, 0x1);
        gbc.writeMem(0xc729, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x114a, gbc.sp());
        EXPECT(0xc72b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc729));
        EXPECT(0x9f, gbc.readMem(0xc72a));
        // CB 9F 02DA
        gbc.setState(0x3675, 0xee53, 0x1ff0, 0x56c2, 0xa2f3, 0x4417, 0x1, 0x1);
        gbc.writeMem(0x3675, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xee53, gbc.sp());
        EXPECT(0x3677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02DB
        gbc.setState(0xb565, 0x43ab, 0x6be0, 0xa3ce, 0x6588, 0x8302, 0x1, 0x0);
        gbc.writeMem(0xb565, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x43ab, gbc.sp());
        EXPECT(0xb567, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb565));
        EXPECT(0x9f, gbc.readMem(0xb566));
        // CB 9F 02DC
        gbc.setState(0x8ecd, 0x35db, 0xeaf0, 0x4900, 0x1ae4, 0x18b3, 0x1, 0x0);
        gbc.writeMem(0x8ecd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x35db, gbc.sp());
        EXPECT(0x8ecf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ecd));
        EXPECT(0x9f, gbc.readMem(0x8ece));
        // CB 9F 02DD
        gbc.setState(0xe87e, 0x4446, 0xf260, 0x3cac, 0xcdf1, 0x52a7, 0x1, 0x1);
        gbc.writeMem(0xe87e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x4446, gbc.sp());
        EXPECT(0xe880, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe87e));
        EXPECT(0x9f, gbc.readMem(0xe87f));
        // CB 9F 02DE
        gbc.setState(0xb5de, 0xf67, 0xd440, 0xe2bc, 0x1a8e, 0xebc2, 0x0, 0x0);
        gbc.writeMem(0xb5de, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xf67, gbc.sp());
        EXPECT(0xb5e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5de));
        EXPECT(0x9f, gbc.readMem(0xb5df));
        // CB 9F 02DF
        gbc.setState(0xed8a, 0xea36, 0x4280, 0xfb9d, 0xf9a2, 0xecbd, 0x1, 0x1);
        gbc.writeMem(0xed8a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xea36, gbc.sp());
        EXPECT(0xed8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed8a));
        EXPECT(0x9f, gbc.readMem(0xed8b));
        // CB 9F 02E0
        gbc.setState(0x2b89, 0x4a21, 0xc510, 0x4c59, 0x7390, 0x7d1c, 0x1, 0x1);
        gbc.writeMem(0x2b89, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x4a21, gbc.sp());
        EXPECT(0x2b8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02E1
        gbc.setState(0x674, 0x4192, 0xe420, 0x5f23, 0x4fbc, 0x9434, 0x1, 0x0);
        gbc.writeMem(0x674, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4192, gbc.sp());
        EXPECT(0x676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02E2
        gbc.setState(0x3a30, 0xef7, 0x9a30, 0x936, 0xd7a4, 0x99ae, 0x0, 0x0);
        gbc.writeMem(0x3a30, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xef7, gbc.sp());
        EXPECT(0x3a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02E3
        gbc.setState(0xcc3d, 0xb426, 0xd8f0, 0x772b, 0x7c23, 0x2903, 0x0, 0x1);
        gbc.writeMem(0xcc3d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb426, gbc.sp());
        EXPECT(0xcc3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc3d));
        EXPECT(0x9f, gbc.readMem(0xcc3e));
        // CB 9F 02E4
        gbc.setState(0x36a7, 0x5832, 0x7080, 0x6e29, 0x3037, 0xe2dc, 0x0, 0x1);
        gbc.writeMem(0x36a7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x5832, gbc.sp());
        EXPECT(0x36a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02E5
        gbc.setState(0x1377, 0x96dc, 0x3b80, 0xf8eb, 0x15df, 0x10ef, 0x1, 0x0);
        gbc.writeMem(0x1377, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x96dc, gbc.sp());
        EXPECT(0x1379, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02E6
        gbc.setState(0x60de, 0x9d1a, 0xf440, 0x3d98, 0xf81c, 0xa3dc, 0x0, 0x1);
        gbc.writeMem(0x60de, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9d1a, gbc.sp());
        EXPECT(0x60e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02E7
        gbc.setState(0xc96, 0xdafd, 0xbfe0, 0xa607, 0x1f1a, 0xa2b0, 0x1, 0x1);
        gbc.writeMem(0xc96, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xdafd, gbc.sp());
        EXPECT(0xc98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02E8
        gbc.setState(0xc1, 0xe28a, 0xc580, 0x8d64, 0xdef9, 0x184a, 0x1, 0x0);
        gbc.writeMem(0xc1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe28a, gbc.sp());
        EXPECT(0xc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02E9
        gbc.setState(0x388f, 0x98d7, 0x9a50, 0x8775, 0x8f5a, 0xf910, 0x1, 0x1);
        gbc.writeMem(0x388f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x98d7, gbc.sp());
        EXPECT(0x3891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02EA
        gbc.setState(0x9e84, 0x6231, 0x6530, 0x2875, 0x796c, 0x3629, 0x1, 0x0);
        gbc.writeMem(0x9e84, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x6231, gbc.sp());
        EXPECT(0x9e86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e84));
        EXPECT(0x9f, gbc.readMem(0x9e85));
        // CB 9F 02EC
        gbc.setState(0xaeb4, 0x4d4f, 0x8840, 0x31dc, 0xcd, 0xbf5e, 0x1, 0x1);
        gbc.writeMem(0xaeb4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4d4f, gbc.sp());
        EXPECT(0xaeb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaeb4));
        EXPECT(0x9f, gbc.readMem(0xaeb5));
        // CB 9F 02ED
        gbc.setState(0x42d0, 0xa3f7, 0x14d0, 0x1dd3, 0xb6b2, 0x8185, 0x0, 0x1);
        gbc.writeMem(0x42d0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xa3f7, gbc.sp());
        EXPECT(0x42d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02EE
        gbc.setState(0xe4d, 0x3e12, 0xa0c0, 0x908b, 0xff38, 0xcb4d, 0x1, 0x0);
        gbc.writeMem(0xe4d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3e12, gbc.sp());
        EXPECT(0xe4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02EF
        gbc.setState(0xe7f7, 0x8f71, 0xb2b0, 0x1f83, 0xf332, 0xb465, 0x0, 0x1);
        gbc.writeMem(0xe7f7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8f71, gbc.sp());
        EXPECT(0xe7f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7f7));
        EXPECT(0x9f, gbc.readMem(0xe7f8));
        // CB 9F 02F0
        gbc.setState(0xe4c7, 0x967c, 0xcd00, 0xaeba, 0x9c62, 0xdf72, 0x1, 0x0);
        gbc.writeMem(0xe4c7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x967c, gbc.sp());
        EXPECT(0xe4c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4c7));
        EXPECT(0x9f, gbc.readMem(0xe4c8));
        // CB 9F 02F1
        gbc.setState(0xd043, 0xc866, 0xd250, 0xa0d5, 0xb411, 0xf746, 0x1, 0x0);
        gbc.writeMem(0xd043, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc866, gbc.sp());
        EXPECT(0xd045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd043));
        EXPECT(0x9f, gbc.readMem(0xd044));
        // CB 9F 02F2
        gbc.setState(0xcd67, 0xb73b, 0x5690, 0x6f67, 0xc542, 0x5a9a, 0x0, 0x0);
        gbc.writeMem(0xcd67, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xb73b, gbc.sp());
        EXPECT(0xcd69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd67));
        EXPECT(0x9f, gbc.readMem(0xcd68));
        // CB 9F 02F3
        gbc.setState(0x740e, 0x2cc0, 0xf5a0, 0x117e, 0xe1de, 0x18eb, 0x1, 0x0);
        gbc.writeMem(0x740e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x2cc0, gbc.sp());
        EXPECT(0x7410, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02F4
        gbc.setState(0x54a0, 0x25c4, 0x9e80, 0xdf56, 0xc66b, 0xa5af, 0x1, 0x1);
        gbc.writeMem(0x54a0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x25c4, gbc.sp());
        EXPECT(0x54a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02F5
        gbc.setState(0xc9bd, 0xb850, 0xdc60, 0x75c0, 0x4907, 0xd4a2, 0x0, 0x1);
        gbc.writeMem(0xc9bd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb850, gbc.sp());
        EXPECT(0xc9bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9bd));
        EXPECT(0x9f, gbc.readMem(0xc9be));
        // CB 9F 02F6
        gbc.setState(0x53ab, 0x314c, 0xf400, 0x3379, 0x65bc, 0x365c, 0x1, 0x0);
        gbc.writeMem(0x53ab, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x314c, gbc.sp());
        EXPECT(0x53ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02F7
        gbc.setState(0x613, 0xeaff, 0x3040, 0xf91f, 0x5751, 0x102a, 0x0, 0x0);
        gbc.writeMem(0x613, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xeaff, gbc.sp());
        EXPECT(0x615, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02F9
        gbc.setState(0x80c0, 0x3915, 0x1840, 0x6949, 0x9e78, 0xeae3, 0x0, 0x1);
        gbc.writeMem(0x80c0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x3915, gbc.sp());
        EXPECT(0x80c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80c0));
        EXPECT(0x9f, gbc.readMem(0x80c1));
        // CB 9F 02FA
        gbc.setState(0x72e6, 0x33b6, 0x4be0, 0x3aa5, 0x856d, 0x62e6, 0x1, 0x1);
        gbc.writeMem(0x72e6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x33b6, gbc.sp());
        EXPECT(0x72e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 02FB
        gbc.setState(0x25f7, 0x70fc, 0xad70, 0x24df, 0xa11e, 0x3f93, 0x0, 0x1);
        gbc.writeMem(0x25f7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x70fc, gbc.sp());
        EXPECT(0x25f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02FC
        gbc.setState(0xbed3, 0xd3f9, 0x4a80, 0x54ca, 0xfdbb, 0xf8f, 0x0, 0x1);
        gbc.writeMem(0xbed3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd3f9, gbc.sp());
        EXPECT(0xbed5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbed3));
        EXPECT(0x9f, gbc.readMem(0xbed4));
        // CB 9F 02FD
        gbc.setState(0xaaf3, 0xf4fa, 0x6eb0, 0x529c, 0x7fa3, 0x6aaf, 0x1, 0x0);
        gbc.writeMem(0xaaf3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf4fa, gbc.sp());
        EXPECT(0xaaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaf3));
        EXPECT(0x9f, gbc.readMem(0xaaf4));
        // CB 9F 02FE
        gbc.setState(0x75ee, 0x37de, 0xb590, 0x28ad, 0x846b, 0x4c74, 0x0, 0x0);
        gbc.writeMem(0x75ee, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x37de, gbc.sp());
        EXPECT(0x75f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 02FF
        gbc.setState(0xc9ff, 0x6095, 0x10c0, 0x1dcd, 0x5637, 0x6927, 0x0, 0x1);
        gbc.writeMem(0xc9ff, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x6095, gbc.sp());
        EXPECT(0xca01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ff));
        EXPECT(0x9f, gbc.readMem(0xca00));
        // CB 9F 0300
        gbc.setState(0x7aba, 0x935f, 0x5b80, 0xe633, 0x1290, 0xb544, 0x1, 0x1);
        gbc.writeMem(0x7aba, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x935f, gbc.sp());
        EXPECT(0x7abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0301
        gbc.setState(0x968a, 0x3285, 0xc000, 0x6a2d, 0x5a60, 0x48f4, 0x1, 0x1);
        gbc.writeMem(0x968a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3285, gbc.sp());
        EXPECT(0x968c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x968a));
        EXPECT(0x9f, gbc.readMem(0x968b));
        // CB 9F 0302
        gbc.setState(0xb862, 0xff90, 0x2cc0, 0x1af2, 0x246b, 0xf0b, 0x1, 0x0);
        gbc.writeMem(0xb862, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xff90, gbc.sp());
        EXPECT(0xb864, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb862));
        EXPECT(0x9f, gbc.readMem(0xb863));
        // CB 9F 0303
        gbc.setState(0x6eee, 0xc3fa, 0x6290, 0xc2f7, 0x8a11, 0x2b9e, 0x1, 0x1);
        gbc.writeMem(0x6eee, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc3fa, gbc.sp());
        EXPECT(0x6ef0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0304
        gbc.setState(0x8583, 0xd6a6, 0x4ba0, 0x2059, 0xb912, 0x5e17, 0x0, 0x1);
        gbc.writeMem(0x8583, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd6a6, gbc.sp());
        EXPECT(0x8585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8583));
        EXPECT(0x9f, gbc.readMem(0x8584));
        // CB 9F 0305
        gbc.setState(0xb6ca, 0x9c41, 0x3190, 0xe8ec, 0x3070, 0x6025, 0x1, 0x1);
        gbc.writeMem(0xb6ca, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9c41, gbc.sp());
        EXPECT(0xb6cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ca));
        EXPECT(0x9f, gbc.readMem(0xb6cb));
        // CB 9F 0306
        gbc.setState(0x7312, 0x9416, 0xbb70, 0xe26, 0xcb4d, 0xfe7, 0x0, 0x0);
        gbc.writeMem(0x7312, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9416, gbc.sp());
        EXPECT(0x7314, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0307
        gbc.setState(0x6716, 0xd2da, 0x8950, 0xf611, 0x2e0b, 0xe79e, 0x0, 0x1);
        gbc.writeMem(0x6716, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd2da, gbc.sp());
        EXPECT(0x6718, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0308
        gbc.setState(0xa847, 0x2c51, 0x49b0, 0xd208, 0x1133, 0x31da, 0x1, 0x1);
        gbc.writeMem(0xa847, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2c51, gbc.sp());
        EXPECT(0xa849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa847));
        EXPECT(0x9f, gbc.readMem(0xa848));
        // CB 9F 0309
        gbc.setState(0x55cf, 0xe8dc, 0x2df0, 0xe2a9, 0x2fc1, 0x8aef, 0x0, 0x0);
        gbc.writeMem(0x55cf, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe8dc, gbc.sp());
        EXPECT(0x55d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 030A
        gbc.setState(0x25a4, 0xd127, 0xf980, 0xbbd0, 0xba09, 0x1842, 0x1, 0x1);
        gbc.writeMem(0x25a4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd127, gbc.sp());
        EXPECT(0x25a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 030B
        gbc.setState(0x7ea9, 0xc0bb, 0xdf50, 0x7ba3, 0x1fe1, 0x498b, 0x0, 0x1);
        gbc.writeMem(0x7ea9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc0bb, gbc.sp());
        EXPECT(0x7eab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 030C
        gbc.setState(0x170b, 0xb3e0, 0xec50, 0xa10f, 0x4689, 0xfc51, 0x0, 0x0);
        gbc.writeMem(0x170b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb3e0, gbc.sp());
        EXPECT(0x170d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 030D
        gbc.setState(0xe216, 0x2687, 0x88b0, 0xedbc, 0x8055, 0xc9b2, 0x0, 0x1);
        gbc.writeMem(0xe216, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x2687, gbc.sp());
        EXPECT(0xe218, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe216));
        EXPECT(0x9f, gbc.readMem(0xe217));
        // CB 9F 030E
        gbc.setState(0x8093, 0x6df9, 0x6fe0, 0x6292, 0xe9cf, 0xd3e3, 0x1, 0x1);
        gbc.writeMem(0x8093, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6df9, gbc.sp());
        EXPECT(0x8095, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8093));
        EXPECT(0x9f, gbc.readMem(0x8094));
        // CB 9F 0310
        gbc.setState(0xd3cf, 0x68d3, 0x8210, 0xc768, 0x645e, 0x99aa, 0x0, 0x1);
        gbc.writeMem(0xd3cf, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x68d3, gbc.sp());
        EXPECT(0xd3d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3cf));
        EXPECT(0x9f, gbc.readMem(0xd3d0));
        // CB 9F 0311
        gbc.setState(0xac82, 0xac04, 0xf930, 0xd5a5, 0xdcfd, 0x8d70, 0x0, 0x1);
        gbc.writeMem(0xac82, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xac04, gbc.sp());
        EXPECT(0xac84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac82));
        EXPECT(0x9f, gbc.readMem(0xac83));
        // CB 9F 0312
        gbc.setState(0x1c11, 0xaedc, 0xd8d0, 0xbd97, 0x73ba, 0xfa96, 0x1, 0x1);
        gbc.writeMem(0x1c11, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xaedc, gbc.sp());
        EXPECT(0x1c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0313
        gbc.setState(0x7cd2, 0xa035, 0xc9f0, 0x1dcd, 0xf350, 0x58f5, 0x0, 0x0);
        gbc.writeMem(0x7cd2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa035, gbc.sp());
        EXPECT(0x7cd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0314
        gbc.setState(0x2ab7, 0x9919, 0xe790, 0xed21, 0x2a8d, 0xacf6, 0x0, 0x0);
        gbc.writeMem(0x2ab7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x9919, gbc.sp());
        EXPECT(0x2ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0315
        gbc.setState(0x77fb, 0x768b, 0x7950, 0x5a93, 0x5190, 0xe112, 0x1, 0x0);
        gbc.writeMem(0x77fb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x768b, gbc.sp());
        EXPECT(0x77fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0316
        gbc.setState(0x501b, 0xe164, 0xd0c0, 0x735, 0x98fe, 0xbeef, 0x1, 0x1);
        gbc.writeMem(0x501b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xe164, gbc.sp());
        EXPECT(0x501d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0317
        gbc.setState(0xe127, 0xa1b1, 0xd840, 0x7f01, 0x79b3, 0x192d, 0x0, 0x0);
        gbc.writeMem(0xe127, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa1b1, gbc.sp());
        EXPECT(0xe129, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe127));
        EXPECT(0x9f, gbc.readMem(0xe128));
        // CB 9F 0318
        gbc.setState(0xc9bc, 0x4e20, 0x5450, 0x1f69, 0xbb36, 0x8673, 0x0, 0x1);
        gbc.writeMem(0xc9bc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x4e20, gbc.sp());
        EXPECT(0xc9be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9bc));
        EXPECT(0x9f, gbc.readMem(0xc9bd));
        // CB 9F 0319
        gbc.setState(0x1fd6, 0x6fae, 0xe300, 0xc62f, 0xf104, 0x42da, 0x0, 0x1);
        gbc.writeMem(0x1fd6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x6fae, gbc.sp());
        EXPECT(0x1fd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 031A
        gbc.setState(0x84ea, 0x69e4, 0xe8c0, 0x1772, 0xa8ac, 0x6910, 0x0, 0x0);
        gbc.writeMem(0x84ea, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x69e4, gbc.sp());
        EXPECT(0x84ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84ea));
        EXPECT(0x9f, gbc.readMem(0x84eb));
        // CB 9F 031B
        gbc.setState(0x199f, 0x7842, 0xa5b0, 0xd926, 0xb312, 0x662a, 0x0, 0x0);
        gbc.writeMem(0x199f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x7842, gbc.sp());
        EXPECT(0x19a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 031C
        gbc.setState(0xbc7b, 0x4b19, 0xadb0, 0x4041, 0x1c34, 0xc559, 0x1, 0x0);
        gbc.writeMem(0xbc7b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4b19, gbc.sp());
        EXPECT(0xbc7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc7b));
        EXPECT(0x9f, gbc.readMem(0xbc7c));
        // CB 9F 031D
        gbc.setState(0xb3f, 0xaa, 0x1df0, 0x67b0, 0x26c2, 0x143c, 0x1, 0x0);
        gbc.writeMem(0xb3f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xaa, gbc.sp());
        EXPECT(0xb41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 031E
        gbc.setState(0x5916, 0xd7aa, 0x38c0, 0xf1cc, 0x28e0, 0xef19, 0x0, 0x1);
        gbc.writeMem(0x5916, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd7aa, gbc.sp());
        EXPECT(0x5918, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 031F
        gbc.setState(0xc6f8, 0xd89a, 0xfc20, 0xe2ee, 0xbecf, 0x5da, 0x1, 0x0);
        gbc.writeMem(0xc6f8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xd89a, gbc.sp());
        EXPECT(0xc6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6f8));
        EXPECT(0x9f, gbc.readMem(0xc6f9));
        // CB 9F 0320
        gbc.setState(0xb35, 0xd97d, 0xb130, 0x159, 0x6d7, 0x2f5f, 0x0, 0x1);
        gbc.writeMem(0xb35, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xd97d, gbc.sp());
        EXPECT(0xb37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0321
        gbc.setState(0x788, 0x880, 0x2980, 0x4328, 0xacf9, 0xffd2, 0x1, 0x0);
        gbc.writeMem(0x788, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x880, gbc.sp());
        EXPECT(0x78a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0322
        gbc.setState(0x5b63, 0x41fe, 0xdb90, 0x8f03, 0xa956, 0x7358, 0x0, 0x1);
        gbc.writeMem(0x5b63, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x41fe, gbc.sp());
        EXPECT(0x5b65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0324
        gbc.setState(0x6680, 0xa459, 0xca10, 0x92af, 0x691b, 0x4004, 0x1, 0x1);
        gbc.writeMem(0x6680, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xa459, gbc.sp());
        EXPECT(0x6682, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0325
        gbc.setState(0x4c81, 0x8ca6, 0xfa40, 0x4706, 0x60b7, 0x4f5a, 0x1, 0x1);
        gbc.writeMem(0x4c81, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x8ca6, gbc.sp());
        EXPECT(0x4c83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0326
        gbc.setState(0xe6c6, 0x24df, 0xd380, 0x65b4, 0x2c9e, 0xdfc4, 0x0, 0x1);
        gbc.writeMem(0xe6c6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x24df, gbc.sp());
        EXPECT(0xe6c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6c6));
        EXPECT(0x9f, gbc.readMem(0xe6c7));
        // CB 9F 0327
        gbc.setState(0xe538, 0xf183, 0x8d00, 0x3850, 0xd4c5, 0xf237, 0x1, 0x1);
        gbc.writeMem(0xe538, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf183, gbc.sp());
        EXPECT(0xe53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe538));
        EXPECT(0x9f, gbc.readMem(0xe539));
        // CB 9F 0328
        gbc.setState(0x95dc, 0xdd7, 0x2360, 0x460e, 0xb59b, 0x5519, 0x1, 0x0);
        gbc.writeMem(0x95dc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xdd7, gbc.sp());
        EXPECT(0x95de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95dc));
        EXPECT(0x9f, gbc.readMem(0x95dd));
        // CB 9F 0329
        gbc.setState(0x6483, 0xeef8, 0x5b60, 0x8645, 0xe58a, 0x3517, 0x0, 0x0);
        gbc.writeMem(0x6483, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xeef8, gbc.sp());
        EXPECT(0x6485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 032A
        gbc.setState(0xb316, 0x5a44, 0x5ed0, 0x6b6, 0x8cd6, 0x9403, 0x0, 0x1);
        gbc.writeMem(0xb316, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x5a44, gbc.sp());
        EXPECT(0xb318, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb316));
        EXPECT(0x9f, gbc.readMem(0xb317));
        // CB 9F 032B
        gbc.setState(0x6b6, 0x9499, 0x4010, 0xfb47, 0x3cb6, 0x4b80, 0x1, 0x0);
        gbc.writeMem(0x6b6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9499, gbc.sp());
        EXPECT(0x6b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 032C
        gbc.setState(0xbde2, 0xc40e, 0xf4b0, 0x8edb, 0x9493, 0xae34, 0x1, 0x1);
        gbc.writeMem(0xbde2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc40e, gbc.sp());
        EXPECT(0xbde4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbde2));
        EXPECT(0x9f, gbc.readMem(0xbde3));
        // CB 9F 032D
        gbc.setState(0xd1d8, 0xeb8e, 0xe220, 0x57c9, 0xefda, 0x4fe4, 0x1, 0x1);
        gbc.writeMem(0xd1d8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xeb8e, gbc.sp());
        EXPECT(0xd1da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1d8));
        EXPECT(0x9f, gbc.readMem(0xd1d9));
        // CB 9F 032E
        gbc.setState(0x7710, 0xbb44, 0xee70, 0x7cf2, 0xecc2, 0xb30c, 0x1, 0x0);
        gbc.writeMem(0x7710, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xbb44, gbc.sp());
        EXPECT(0x7712, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 032F
        gbc.setState(0xa478, 0x6ce6, 0xab70, 0x8c1b, 0x27d, 0x6190, 0x0, 0x1);
        gbc.writeMem(0xa478, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x6ce6, gbc.sp());
        EXPECT(0xa47a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa478));
        EXPECT(0x9f, gbc.readMem(0xa479));
        // CB 9F 0330
        gbc.setState(0xd3ff, 0xc0d3, 0x3f00, 0xb546, 0xaaa1, 0x2cde, 0x0, 0x1);
        gbc.writeMem(0xd3ff, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc0d3, gbc.sp());
        EXPECT(0xd401, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3ff));
        EXPECT(0x9f, gbc.readMem(0xd400));
        // CB 9F 0331
        gbc.setState(0x11f2, 0xe44c, 0x7870, 0x8005, 0xeae3, 0x9683, 0x1, 0x1);
        gbc.writeMem(0x11f2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe44c, gbc.sp());
        EXPECT(0x11f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0332
        gbc.setState(0xaef9, 0x73bb, 0x5780, 0xa0c4, 0x7c80, 0xea0c, 0x0, 0x1);
        gbc.writeMem(0xaef9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x73bb, gbc.sp());
        EXPECT(0xaefb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaef9));
        EXPECT(0x9f, gbc.readMem(0xaefa));
        // CB 9F 0334
        gbc.setState(0x8ca5, 0xc071, 0x28a0, 0xc386, 0x3456, 0x4eeb, 0x1, 0x0);
        gbc.writeMem(0x8ca5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc071, gbc.sp());
        EXPECT(0x8ca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ca5));
        EXPECT(0x9f, gbc.readMem(0x8ca6));
        // CB 9F 0336
        gbc.setState(0xafc4, 0x7933, 0x1ec0, 0xb30f, 0xe8fc, 0xcc80, 0x1, 0x0);
        gbc.writeMem(0xafc4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7933, gbc.sp());
        EXPECT(0xafc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xafc4));
        EXPECT(0x9f, gbc.readMem(0xafc5));
        // CB 9F 0337
        gbc.setState(0x5632, 0xe3d7, 0x6d00, 0x3a84, 0xe260, 0x387, 0x1, 0x0);
        gbc.writeMem(0x5632, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe3d7, gbc.sp());
        EXPECT(0x5634, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0338
        gbc.setState(0x5f5f, 0xb904, 0xca70, 0x3363, 0x1022, 0x6dd8, 0x1, 0x0);
        gbc.writeMem(0x5f5f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xb904, gbc.sp());
        EXPECT(0x5f61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0339
        gbc.setState(0x4ebf, 0x6beb, 0x5740, 0x484a, 0x183a, 0x97e3, 0x1, 0x1);
        gbc.writeMem(0x4ebf, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6beb, gbc.sp());
        EXPECT(0x4ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 033A
        gbc.setState(0x624b, 0x3292, 0x6260, 0x47c5, 0x3cc, 0xc226, 0x1, 0x0);
        gbc.writeMem(0x624b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3292, gbc.sp());
        EXPECT(0x624d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 033B
        gbc.setState(0x2fbf, 0x9067, 0x7c00, 0x1d54, 0xc172, 0xdee0, 0x1, 0x0);
        gbc.writeMem(0x2fbf, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9067, gbc.sp());
        EXPECT(0x2fc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 033C
        gbc.setState(0x6943, 0xbfa0, 0xe70, 0xd590, 0x5851, 0x6f37, 0x1, 0x1);
        gbc.writeMem(0x6943, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbfa0, gbc.sp());
        EXPECT(0x6945, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 033D
        gbc.setState(0xbfdb, 0xdcf6, 0xbe50, 0x52e0, 0x48cb, 0xf60a, 0x0, 0x0);
        gbc.writeMem(0xbfdb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdcf6, gbc.sp());
        EXPECT(0xbfdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfdb));
        EXPECT(0x9f, gbc.readMem(0xbfdc));
        // CB 9F 033E
        gbc.setState(0xa24a, 0x6452, 0xb50, 0xd328, 0x74a8, 0x1302, 0x0, 0x1);
        gbc.writeMem(0xa24a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x6452, gbc.sp());
        EXPECT(0xa24c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa24a));
        EXPECT(0x9f, gbc.readMem(0xa24b));
        // CB 9F 033F
        gbc.setState(0xedba, 0x134b, 0xcb20, 0x11e2, 0x40df, 0x8ddd, 0x1, 0x0);
        gbc.writeMem(0xedba, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x134b, gbc.sp());
        EXPECT(0xedbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xedba));
        EXPECT(0x9f, gbc.readMem(0xedbb));
        // CB 9F 0340
        gbc.setState(0x5b69, 0xa40f, 0x1690, 0xdd5a, 0xc6de, 0xc3e3, 0x1, 0x0);
        gbc.writeMem(0x5b69, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xa40f, gbc.sp());
        EXPECT(0x5b6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0341
        gbc.setState(0xbd50, 0x5724, 0x5cc0, 0x25dc, 0x6a5c, 0x4a2d, 0x1, 0x0);
        gbc.writeMem(0xbd50, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5724, gbc.sp());
        EXPECT(0xbd52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd50));
        EXPECT(0x9f, gbc.readMem(0xbd51));
        // CB 9F 0342
        gbc.setState(0x3ae0, 0xf5a0, 0xe340, 0x876c, 0x45b8, 0xc22b, 0x0, 0x0);
        gbc.writeMem(0x3ae0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf5a0, gbc.sp());
        EXPECT(0x3ae2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0343
        gbc.setState(0x906, 0xbf55, 0x54e0, 0x7224, 0xf2d2, 0xaf8c, 0x1, 0x0);
        gbc.writeMem(0x906, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xbf55, gbc.sp());
        EXPECT(0x908, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0344
        gbc.setState(0x6cac, 0xd089, 0x5a40, 0x2047, 0x5fc5, 0x16a9, 0x0, 0x0);
        gbc.writeMem(0x6cac, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd089, gbc.sp());
        EXPECT(0x6cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0345
        gbc.setState(0xb05c, 0x498d, 0x77f0, 0x74c6, 0xf700, 0x6fa4, 0x0, 0x0);
        gbc.writeMem(0xb05c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x498d, gbc.sp());
        EXPECT(0xb05e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb05c));
        EXPECT(0x9f, gbc.readMem(0xb05d));
        // CB 9F 0346
        gbc.setState(0xeea1, 0xbd0e, 0xf0e0, 0x780b, 0x583b, 0x76d0, 0x0, 0x1);
        gbc.writeMem(0xeea1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbd0e, gbc.sp());
        EXPECT(0xeea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea1));
        EXPECT(0x9f, gbc.readMem(0xeea2));
        // CB 9F 0347
        gbc.setState(0x4c27, 0xec78, 0xcb60, 0x6db3, 0x8559, 0xaab1, 0x0, 0x0);
        gbc.writeMem(0x4c27, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xec78, gbc.sp());
        EXPECT(0x4c29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0348
        gbc.setState(0x90c2, 0x8094, 0x5180, 0x80fc, 0x26c6, 0x4989, 0x1, 0x0);
        gbc.writeMem(0x90c2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8094, gbc.sp());
        EXPECT(0x90c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90c2));
        EXPECT(0x9f, gbc.readMem(0x90c3));
        // CB 9F 0349
        gbc.setState(0x975b, 0xe762, 0x9810, 0x8da2, 0x748, 0x406a, 0x0, 0x0);
        gbc.writeMem(0x975b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe762, gbc.sp());
        EXPECT(0x975d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x975b));
        EXPECT(0x9f, gbc.readMem(0x975c));
        // CB 9F 034A
        gbc.setState(0x7d45, 0x70d2, 0x3620, 0xaff5, 0x7b39, 0x9131, 0x1, 0x0);
        gbc.writeMem(0x7d45, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x70d2, gbc.sp());
        EXPECT(0x7d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 034B
        gbc.setState(0xcda6, 0xa36c, 0x1af0, 0x158e, 0xdbd8, 0xd910, 0x1, 0x0);
        gbc.writeMem(0xcda6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa36c, gbc.sp());
        EXPECT(0xcda8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcda6));
        EXPECT(0x9f, gbc.readMem(0xcda7));
        // CB 9F 034C
        gbc.setState(0xe49e, 0xfa54, 0x420, 0x961e, 0xb89, 0xd71a, 0x1, 0x0);
        gbc.writeMem(0xe49e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfa54, gbc.sp());
        EXPECT(0xe4a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe49e));
        EXPECT(0x9f, gbc.readMem(0xe49f));
        // CB 9F 034D
        gbc.setState(0x6e5d, 0xfce6, 0x6e20, 0x337d, 0x9b3f, 0xd006, 0x0, 0x1);
        gbc.writeMem(0x6e5d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xfce6, gbc.sp());
        EXPECT(0x6e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 034E
        gbc.setState(0xcb53, 0xeb6b, 0x1ec0, 0x3462, 0x350a, 0xdb51, 0x1, 0x1);
        gbc.writeMem(0xcb53, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xeb6b, gbc.sp());
        EXPECT(0xcb55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb53));
        EXPECT(0x9f, gbc.readMem(0xcb54));
        // CB 9F 034F
        gbc.setState(0x8315, 0x38f6, 0xe610, 0xbc3a, 0x5de4, 0xe1a2, 0x0, 0x0);
        gbc.writeMem(0x8315, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x38f6, gbc.sp());
        EXPECT(0x8317, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8315));
        EXPECT(0x9f, gbc.readMem(0x8316));
        // CB 9F 0350
        gbc.setState(0x6a3f, 0x5d13, 0xb8b0, 0x5fc0, 0x707d, 0x1bdf, 0x0, 0x1);
        gbc.writeMem(0x6a3f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x5d13, gbc.sp());
        EXPECT(0x6a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0351
        gbc.setState(0xd532, 0xc78, 0x5f50, 0xdbbc, 0x28c2, 0x96a7, 0x0, 0x1);
        gbc.writeMem(0xd532, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xc78, gbc.sp());
        EXPECT(0xd534, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd532));
        EXPECT(0x9f, gbc.readMem(0xd533));
        // CB 9F 0352
        gbc.setState(0xda3e, 0xcbfd, 0xc7f0, 0xa6a0, 0x4359, 0x2a7b, 0x1, 0x1);
        gbc.writeMem(0xda3e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xcbfd, gbc.sp());
        EXPECT(0xda40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3e));
        EXPECT(0x9f, gbc.readMem(0xda3f));
        // CB 9F 0353
        gbc.setState(0xeacc, 0xcb50, 0x54f0, 0xda32, 0xfb6c, 0x10a, 0x1, 0x0);
        gbc.writeMem(0xeacc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xcb50, gbc.sp());
        EXPECT(0xeace, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeacc));
        EXPECT(0x9f, gbc.readMem(0xeacd));
        // CB 9F 0354
        gbc.setState(0x5239, 0x1066, 0x1310, 0xdd8e, 0x4ba0, 0x51c6, 0x1, 0x1);
        gbc.writeMem(0x5239, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x1066, gbc.sp());
        EXPECT(0x523b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0355
        gbc.setState(0x465d, 0xf3ef, 0xca00, 0xbe22, 0x8534, 0x9e81, 0x0, 0x1);
        gbc.writeMem(0x465d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf3ef, gbc.sp());
        EXPECT(0x465f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0356
        gbc.setState(0x5310, 0xf8b9, 0x2310, 0xbb13, 0x5e5d, 0x1bc0, 0x1, 0x0);
        gbc.writeMem(0x5310, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xf8b9, gbc.sp());
        EXPECT(0x5312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0357
        gbc.setState(0xcd59, 0x68eb, 0x8cf0, 0x8d83, 0xb820, 0x66e5, 0x1, 0x0);
        gbc.writeMem(0xcd59, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x68eb, gbc.sp());
        EXPECT(0xcd5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd59));
        EXPECT(0x9f, gbc.readMem(0xcd5a));
        // CB 9F 0358
        gbc.setState(0x209, 0x133a, 0xdc40, 0xc109, 0x4121, 0xf5cc, 0x0, 0x1);
        gbc.writeMem(0x209, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x133a, gbc.sp());
        EXPECT(0x20b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0359
        gbc.setState(0xbf6f, 0x4de2, 0xa5b0, 0x606c, 0xce7a, 0x5123, 0x1, 0x1);
        gbc.writeMem(0xbf6f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4de2, gbc.sp());
        EXPECT(0xbf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf6f));
        EXPECT(0x9f, gbc.readMem(0xbf70));
        // CB 9F 035A
        gbc.setState(0x2254, 0xc4fe, 0x57d0, 0x5b59, 0x701f, 0xdaf2, 0x0, 0x0);
        gbc.writeMem(0x2254, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc4fe, gbc.sp());
        EXPECT(0x2256, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 035B
        gbc.setState(0x47bb, 0xe422, 0xc7a0, 0xc6ff, 0x1521, 0xfab7, 0x1, 0x0);
        gbc.writeMem(0x47bb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xe422, gbc.sp());
        EXPECT(0x47bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 035C
        gbc.setState(0x49e4, 0x2d15, 0x5c30, 0x31a, 0x95d3, 0x2be3, 0x1, 0x1);
        gbc.writeMem(0x49e4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2d15, gbc.sp());
        EXPECT(0x49e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 035D
        gbc.setState(0x9df3, 0x1888, 0xd530, 0x904d, 0x6266, 0x9133, 0x0, 0x1);
        gbc.writeMem(0x9df3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x1888, gbc.sp());
        EXPECT(0x9df5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9df3));
        EXPECT(0x9f, gbc.readMem(0x9df4));
        // CB 9F 035E
        gbc.setState(0x7643, 0xb29c, 0xd430, 0x3ec7, 0x2ec6, 0x3f65, 0x1, 0x0);
        gbc.writeMem(0x7643, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb29c, gbc.sp());
        EXPECT(0x7645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 035F
        gbc.setState(0x7975, 0x2bda, 0xd510, 0xdd8c, 0x395a, 0x1795, 0x1, 0x1);
        gbc.writeMem(0x7975, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x2bda, gbc.sp());
        EXPECT(0x7977, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0360
        gbc.setState(0xa063, 0xd535, 0x6160, 0x78aa, 0xb264, 0x4b4a, 0x0, 0x1);
        gbc.writeMem(0xa063, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd535, gbc.sp());
        EXPECT(0xa065, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa063));
        EXPECT(0x9f, gbc.readMem(0xa064));
        // CB 9F 0361
        gbc.setState(0x5b4c, 0x8d80, 0x8560, 0x88ed, 0x9ae, 0x9411, 0x0, 0x1);
        gbc.writeMem(0x5b4c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x8d80, gbc.sp());
        EXPECT(0x5b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0362
        gbc.setState(0x438d, 0x4f99, 0x58a0, 0xa9bc, 0xc765, 0x7b94, 0x0, 0x0);
        gbc.writeMem(0x438d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x4f99, gbc.sp());
        EXPECT(0x438f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0363
        gbc.setState(0x965b, 0x415b, 0xbcd0, 0xaccd, 0x2c4, 0x421e, 0x0, 0x0);
        gbc.writeMem(0x965b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x415b, gbc.sp());
        EXPECT(0x965d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x965b));
        EXPECT(0x9f, gbc.readMem(0x965c));
        // CB 9F 0364
        gbc.setState(0x283f, 0x2944, 0xd9f0, 0x43a3, 0xbe27, 0x82bb, 0x1, 0x1);
        gbc.writeMem(0x283f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2944, gbc.sp());
        EXPECT(0x2841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0365
        gbc.setState(0xc735, 0xe58e, 0xe5e0, 0x4af0, 0x62a8, 0x24d9, 0x1, 0x0);
        gbc.writeMem(0xc735, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe58e, gbc.sp());
        EXPECT(0xc737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc735));
        EXPECT(0x9f, gbc.readMem(0xc736));
        // CB 9F 0366
        gbc.setState(0x633, 0xe3cd, 0x8f80, 0x15cd, 0xc949, 0xe735, 0x0, 0x0);
        gbc.writeMem(0x633, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xe3cd, gbc.sp());
        EXPECT(0x635, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0367
        gbc.setState(0xf04, 0x5459, 0x8d50, 0x609d, 0x79d5, 0x6663, 0x0, 0x0);
        gbc.writeMem(0xf04, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5459, gbc.sp());
        EXPECT(0xf06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0368
        gbc.setState(0xbf24, 0xc848, 0x3be0, 0x14a8, 0x38d2, 0xbbb2, 0x1, 0x1);
        gbc.writeMem(0xbf24, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc848, gbc.sp());
        EXPECT(0xbf26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf24));
        EXPECT(0x9f, gbc.readMem(0xbf25));
        // CB 9F 0369
        gbc.setState(0xa3ad, 0x626d, 0xfcd0, 0x9614, 0xba5e, 0x94a4, 0x1, 0x0);
        gbc.writeMem(0xa3ad, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x626d, gbc.sp());
        EXPECT(0xa3af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa3ad));
        EXPECT(0x9f, gbc.readMem(0xa3ae));
        // CB 9F 036A
        gbc.setState(0xbae3, 0x67d1, 0xa1e0, 0x3346, 0x4433, 0x1e4, 0x1, 0x1);
        gbc.writeMem(0xbae3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x67d1, gbc.sp());
        EXPECT(0xbae5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbae3));
        EXPECT(0x9f, gbc.readMem(0xbae4));
        // CB 9F 036C
        gbc.setState(0xce8c, 0x5e69, 0xcd90, 0x73e2, 0x52de, 0x4d9e, 0x0, 0x1);
        gbc.writeMem(0xce8c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x5e69, gbc.sp());
        EXPECT(0xce8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce8c));
        EXPECT(0x9f, gbc.readMem(0xce8d));
        // CB 9F 036D
        gbc.setState(0xe9e0, 0xbbb8, 0x1fd0, 0x71af, 0x67a4, 0x164f, 0x1, 0x0);
        gbc.writeMem(0xe9e0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbbb8, gbc.sp());
        EXPECT(0xe9e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9e0));
        EXPECT(0x9f, gbc.readMem(0xe9e1));
        // CB 9F 036E
        gbc.setState(0x3749, 0x6632, 0x86e0, 0x1578, 0xb16b, 0x59a5, 0x1, 0x0);
        gbc.writeMem(0x3749, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x6632, gbc.sp());
        EXPECT(0x374b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 036F
        gbc.setState(0xb788, 0xa9ec, 0x23e0, 0x2b6f, 0x18e3, 0xcfcc, 0x0, 0x0);
        gbc.writeMem(0xb788, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xa9ec, gbc.sp());
        EXPECT(0xb78a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb788));
        EXPECT(0x9f, gbc.readMem(0xb789));
        // CB 9F 0370
        gbc.setState(0x7655, 0xd97a, 0x8200, 0x6294, 0xc62, 0x64a9, 0x1, 0x1);
        gbc.writeMem(0x7655, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd97a, gbc.sp());
        EXPECT(0x7657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0371
        gbc.setState(0xaffd, 0x8aac, 0x4e60, 0x2741, 0x2d6b, 0x9ed9, 0x1, 0x1);
        gbc.writeMem(0xaffd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8aac, gbc.sp());
        EXPECT(0xafff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaffd));
        EXPECT(0x9f, gbc.readMem(0xaffe));
        // CB 9F 0372
        gbc.setState(0xa23f, 0xfdaa, 0x50a0, 0xa121, 0xc787, 0xc20f, 0x1, 0x1);
        gbc.writeMem(0xa23f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xfdaa, gbc.sp());
        EXPECT(0xa241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa23f));
        EXPECT(0x9f, gbc.readMem(0xa240));
        // CB 9F 0374
        gbc.setState(0x96b9, 0xda49, 0x1310, 0x2fca, 0x1b23, 0x4f2d, 0x1, 0x0);
        gbc.writeMem(0x96b9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xda49, gbc.sp());
        EXPECT(0x96bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96b9));
        EXPECT(0x9f, gbc.readMem(0x96ba));
        // CB 9F 0375
        gbc.setState(0x90ba, 0xfd0f, 0x5a10, 0xc7ba, 0x954e, 0xb5e0, 0x0, 0x0);
        gbc.writeMem(0x90ba, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfd0f, gbc.sp());
        EXPECT(0x90bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90ba));
        EXPECT(0x9f, gbc.readMem(0x90bb));
        // CB 9F 0376
        gbc.setState(0x90bd, 0x1aea, 0x7870, 0x3257, 0x23ce, 0xa8cc, 0x1, 0x1);
        gbc.writeMem(0x90bd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1aea, gbc.sp());
        EXPECT(0x90bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90bd));
        EXPECT(0x9f, gbc.readMem(0x90be));
        // CB 9F 0377
        gbc.setState(0xa54, 0x1d56, 0x1930, 0x78c3, 0xfcc8, 0xcc69, 0x0, 0x1);
        gbc.writeMem(0xa54, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1d56, gbc.sp());
        EXPECT(0xa56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0378
        gbc.setState(0x2bdf, 0x494f, 0x2cc0, 0x4d39, 0x47ea, 0xf11f, 0x0, 0x0);
        gbc.writeMem(0x2bdf, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x494f, gbc.sp());
        EXPECT(0x2be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0379
        gbc.setState(0xaaee, 0x9987, 0xb890, 0x3e44, 0x167b, 0xea55, 0x1, 0x1);
        gbc.writeMem(0xaaee, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x9987, gbc.sp());
        EXPECT(0xaaf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaaee));
        EXPECT(0x9f, gbc.readMem(0xaaef));
        // CB 9F 037A
        gbc.setState(0xbdce, 0x81a6, 0x8bd0, 0x3f15, 0xfe68, 0x8e75, 0x0, 0x1);
        gbc.writeMem(0xbdce, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x81a6, gbc.sp());
        EXPECT(0xbdd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdce));
        EXPECT(0x9f, gbc.readMem(0xbdcf));
        // CB 9F 037C
        gbc.setState(0x9c24, 0x337a, 0xfae0, 0x80b8, 0xe84b, 0x21b5, 0x0, 0x1);
        gbc.writeMem(0x9c24, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x337a, gbc.sp());
        EXPECT(0x9c26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c24));
        EXPECT(0x9f, gbc.readMem(0x9c25));
        // CB 9F 037D
        gbc.setState(0x53d, 0x41af, 0x1fd0, 0xde30, 0xe833, 0x8a29, 0x0, 0x0);
        gbc.writeMem(0x53d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x41af, gbc.sp());
        EXPECT(0x53f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 037F
        gbc.setState(0x2d8b, 0x3a54, 0x6ad0, 0x9563, 0xb9f6, 0xf0cf, 0x0, 0x0);
        gbc.writeMem(0x2d8b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x3a54, gbc.sp());
        EXPECT(0x2d8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0380
        gbc.setState(0x28da, 0x3bf4, 0xc40, 0xa051, 0x63e7, 0x6bf1, 0x0, 0x1);
        gbc.writeMem(0x28da, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x3bf4, gbc.sp());
        EXPECT(0x28dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0381
        gbc.setState(0x50d3, 0x5445, 0x1920, 0x6dc8, 0x2276, 0x4fd7, 0x0, 0x0);
        gbc.writeMem(0x50d3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5445, gbc.sp());
        EXPECT(0x50d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0382
        gbc.setState(0x3bf3, 0xa47e, 0x7e00, 0x620c, 0x2b6e, 0x98b8, 0x1, 0x0);
        gbc.writeMem(0x3bf3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xa47e, gbc.sp());
        EXPECT(0x3bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0383
        gbc.setState(0x5a81, 0xe16e, 0x2900, 0x361d, 0x50d8, 0x9e15, 0x0, 0x0);
        gbc.writeMem(0x5a81, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe16e, gbc.sp());
        EXPECT(0x5a83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0384
        gbc.setState(0x13f9, 0x99cf, 0xf9a0, 0x7899, 0x802c, 0xb2b4, 0x1, 0x0);
        gbc.writeMem(0x13f9, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x99cf, gbc.sp());
        EXPECT(0x13fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0385
        gbc.setState(0x2916, 0xb4ae, 0x85e0, 0x522d, 0x6cb, 0x28e0, 0x1, 0x0);
        gbc.writeMem(0x2916, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb4ae, gbc.sp());
        EXPECT(0x2918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0387
        gbc.setState(0x4000, 0xe60, 0xd940, 0x3473, 0x5827, 0xf5d1, 0x1, 0x1);
        gbc.writeMem(0x4000, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xe60, gbc.sp());
        EXPECT(0x4002, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0388
        gbc.setState(0x111a, 0xd2eb, 0x1b0, 0x6ad4, 0xb9cd, 0xb020, 0x0, 0x1);
        gbc.writeMem(0x111a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd2eb, gbc.sp());
        EXPECT(0x111c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0389
        gbc.setState(0x805a, 0xbd35, 0x3d20, 0x298a, 0x1969, 0x7a8f, 0x0, 0x0);
        gbc.writeMem(0x805a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xbd35, gbc.sp());
        EXPECT(0x805c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x805a));
        EXPECT(0x9f, gbc.readMem(0x805b));
        // CB 9F 038A
        gbc.setState(0x8297, 0xaabb, 0x6410, 0xc1a4, 0x82a4, 0x4c1d, 0x1, 0x0);
        gbc.writeMem(0x8297, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xaabb, gbc.sp());
        EXPECT(0x8299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8297));
        EXPECT(0x9f, gbc.readMem(0x8298));
        // CB 9F 038B
        gbc.setState(0xbc5a, 0x3b83, 0xf4e0, 0x1d7f, 0x3b6c, 0x6f05, 0x1, 0x1);
        gbc.writeMem(0xbc5a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x3b83, gbc.sp());
        EXPECT(0xbc5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbc5a));
        EXPECT(0x9f, gbc.readMem(0xbc5b));
        // CB 9F 038C
        gbc.setState(0x4a4c, 0xba24, 0x3890, 0xe890, 0x6242, 0xf97f, 0x0, 0x1);
        gbc.writeMem(0x4a4c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xba24, gbc.sp());
        EXPECT(0x4a4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 038D
        gbc.setState(0xdabb, 0x285e, 0xa730, 0xd08e, 0xd122, 0x5a1, 0x0, 0x1);
        gbc.writeMem(0xdabb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x285e, gbc.sp());
        EXPECT(0xdabd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabb));
        EXPECT(0x9f, gbc.readMem(0xdabc));
        // CB 9F 038E
        gbc.setState(0x1854, 0x573b, 0xf7d0, 0x4d8a, 0xf216, 0xbf9e, 0x1, 0x1);
        gbc.writeMem(0x1854, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x573b, gbc.sp());
        EXPECT(0x1856, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0390
        gbc.setState(0xad70, 0xd020, 0x28a0, 0x4134, 0x6d99, 0x69e7, 0x1, 0x0);
        gbc.writeMem(0xad70, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd020, gbc.sp());
        EXPECT(0xad72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad70));
        EXPECT(0x9f, gbc.readMem(0xad71));
        // CB 9F 0391
        gbc.setState(0xa347, 0xdf07, 0xfe60, 0x2fbe, 0x9fcd, 0x65bb, 0x1, 0x1);
        gbc.writeMem(0xa347, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xdf07, gbc.sp());
        EXPECT(0xa349, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa347));
        EXPECT(0x9f, gbc.readMem(0xa348));
        // CB 9F 0392
        gbc.setState(0x4ffb, 0x2d5c, 0xf3a0, 0x684, 0x760b, 0x8a14, 0x0, 0x0);
        gbc.writeMem(0x4ffb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2d5c, gbc.sp());
        EXPECT(0x4ffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0394
        gbc.setState(0xefe4, 0x187, 0xb8b0, 0xc635, 0x7da7, 0xcf07, 0x1, 0x0);
        gbc.writeMem(0xefe4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x187, gbc.sp());
        EXPECT(0xefe6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe4));
        EXPECT(0x9f, gbc.readMem(0xefe5));
        // CB 9F 0395
        gbc.setState(0xc4cb, 0xde2a, 0x46c0, 0x34eb, 0xce3e, 0x423, 0x1, 0x0);
        gbc.writeMem(0xc4cb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xde2a, gbc.sp());
        EXPECT(0xc4cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4cb));
        EXPECT(0x9f, gbc.readMem(0xc4cc));
        // CB 9F 0396
        gbc.setState(0x2b71, 0x1f29, 0x5f90, 0xad9b, 0x4691, 0x8358, 0x0, 0x1);
        gbc.writeMem(0x2b71, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1f29, gbc.sp());
        EXPECT(0x2b73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0397
        gbc.setState(0x1e04, 0xc8d0, 0x8420, 0xa684, 0x3e64, 0x20d2, 0x0, 0x0);
        gbc.writeMem(0x1e04, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc8d0, gbc.sp());
        EXPECT(0x1e06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 0398
        gbc.setState(0x3cf2, 0xb191, 0x7f70, 0x624a, 0xf9c9, 0x1b1b, 0x0, 0x1);
        gbc.writeMem(0x3cf2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb191, gbc.sp());
        EXPECT(0x3cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 0399
        gbc.setState(0xcd66, 0x32db, 0xd130, 0x6586, 0xaca9, 0xbdf2, 0x1, 0x0);
        gbc.writeMem(0xcd66, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x32db, gbc.sp());
        EXPECT(0xcd68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd66));
        EXPECT(0x9f, gbc.readMem(0xcd67));
        // CB 9F 039A
        gbc.setState(0x8d4f, 0x72cb, 0xa700, 0x317c, 0x14b4, 0x5586, 0x1, 0x0);
        gbc.writeMem(0x8d4f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x72cb, gbc.sp());
        EXPECT(0x8d51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d4f));
        EXPECT(0x9f, gbc.readMem(0x8d50));
        // CB 9F 039B
        gbc.setState(0xbcc1, 0xbf, 0x3c20, 0x2ac9, 0x6ba7, 0x807e, 0x0, 0x1);
        gbc.writeMem(0xbcc1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbf, gbc.sp());
        EXPECT(0xbcc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcc1));
        EXPECT(0x9f, gbc.readMem(0xbcc2));
        // CB 9F 039C
        gbc.setState(0x8e40, 0x2305, 0xf5c0, 0xa267, 0x4117, 0xdc20, 0x1, 0x1);
        gbc.writeMem(0x8e40, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2305, gbc.sp());
        EXPECT(0x8e42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e40));
        EXPECT(0x9f, gbc.readMem(0x8e41));
        // CB 9F 039D
        gbc.setState(0x711d, 0xe878, 0x5530, 0x709, 0x1702, 0x556a, 0x0, 0x0);
        gbc.writeMem(0x711d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe878, gbc.sp());
        EXPECT(0x711f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 039F
        gbc.setState(0x6d2c, 0x987f, 0x9f20, 0xb33, 0x56b0, 0x2f3e, 0x0, 0x1);
        gbc.writeMem(0x6d2c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x987f, gbc.sp());
        EXPECT(0x6d2e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03A0
        gbc.setState(0x27dc, 0x4774, 0xf710, 0x2654, 0xd740, 0xedef, 0x1, 0x1);
        gbc.writeMem(0x27dc, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x4774, gbc.sp());
        EXPECT(0x27de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03A1
        gbc.setState(0x3077, 0xecdc, 0x8970, 0xb0a9, 0x70b, 0x533d, 0x1, 0x0);
        gbc.writeMem(0x3077, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xecdc, gbc.sp());
        EXPECT(0x3079, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03A2
        gbc.setState(0x79a0, 0x13ba, 0xc9d0, 0x3977, 0xc099, 0x7e0c, 0x1, 0x1);
        gbc.writeMem(0x79a0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x13ba, gbc.sp());
        EXPECT(0x79a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03A3
        gbc.setState(0xe1b4, 0x301e, 0x780, 0x9025, 0x88aa, 0x2b55, 0x0, 0x1);
        gbc.writeMem(0xe1b4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x301e, gbc.sp());
        EXPECT(0xe1b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1b4));
        EXPECT(0x9f, gbc.readMem(0xe1b5));
        // CB 9F 03A4
        gbc.setState(0xabfb, 0x8633, 0xc0e0, 0x949f, 0x132f, 0xa0b9, 0x0, 0x0);
        gbc.writeMem(0xabfb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x8633, gbc.sp());
        EXPECT(0xabfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabfb));
        EXPECT(0x9f, gbc.readMem(0xabfc));
        // CB 9F 03A5
        gbc.setState(0xefb, 0x296e, 0xb1f0, 0xdbbb, 0xbcb8, 0xb9ff, 0x0, 0x1);
        gbc.writeMem(0xefb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x296e, gbc.sp());
        EXPECT(0xefd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03A6
        gbc.setState(0x8c01, 0x8d10, 0xa940, 0xca06, 0x41df, 0x80f0, 0x0, 0x1);
        gbc.writeMem(0x8c01, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8d10, gbc.sp());
        EXPECT(0x8c03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c01));
        EXPECT(0x9f, gbc.readMem(0x8c02));
        // CB 9F 03A7
        gbc.setState(0x94d7, 0x4d57, 0xce60, 0xf471, 0xcbda, 0x495a, 0x0, 0x1);
        gbc.writeMem(0x94d7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4d57, gbc.sp());
        EXPECT(0x94d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94d7));
        EXPECT(0x9f, gbc.readMem(0x94d8));
        // CB 9F 03A8
        gbc.setState(0x80a3, 0x2f8f, 0x2f30, 0x773a, 0x90ec, 0xe98, 0x1, 0x1);
        gbc.writeMem(0x80a3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x2f8f, gbc.sp());
        EXPECT(0x80a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80a3));
        EXPECT(0x9f, gbc.readMem(0x80a4));
        // CB 9F 03A9
        gbc.setState(0xdc1a, 0x15a0, 0x2020, 0x9622, 0x1a7e, 0x481d, 0x0, 0x0);
        gbc.writeMem(0xdc1a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x15a0, gbc.sp());
        EXPECT(0xdc1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1a));
        EXPECT(0x9f, gbc.readMem(0xdc1b));
        // CB 9F 03AA
        gbc.setState(0xd403, 0x79ca, 0xf590, 0xa782, 0x2071, 0x4fc8, 0x0, 0x1);
        gbc.writeMem(0xd403, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x79ca, gbc.sp());
        EXPECT(0xd405, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd403));
        EXPECT(0x9f, gbc.readMem(0xd404));
        // CB 9F 03AB
        gbc.setState(0xb81b, 0x369f, 0x1d70, 0x2beb, 0x1403, 0x26cb, 0x1, 0x1);
        gbc.writeMem(0xb81b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x369f, gbc.sp());
        EXPECT(0xb81d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81b));
        EXPECT(0x9f, gbc.readMem(0xb81c));
        // CB 9F 03AC
        gbc.setState(0xdac5, 0xdd50, 0x79e0, 0x27e1, 0x1a2a, 0x5c21, 0x1, 0x1);
        gbc.writeMem(0xdac5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xdd50, gbc.sp());
        EXPECT(0xdac7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdac5));
        EXPECT(0x9f, gbc.readMem(0xdac6));
        // CB 9F 03AD
        gbc.setState(0xacd1, 0xca93, 0x3450, 0xd890, 0xadc8, 0xd62e, 0x1, 0x0);
        gbc.writeMem(0xacd1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xca93, gbc.sp());
        EXPECT(0xacd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacd1));
        EXPECT(0x9f, gbc.readMem(0xacd2));
        // CB 9F 03AE
        gbc.setState(0x3ce5, 0x3cd9, 0x1700, 0x27c1, 0x951f, 0xf7f2, 0x0, 0x1);
        gbc.writeMem(0x3ce5, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x3cd9, gbc.sp());
        EXPECT(0x3ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03AF
        gbc.setState(0x47b1, 0xa04c, 0x6500, 0x100f, 0x7a01, 0x47ac, 0x0, 0x0);
        gbc.writeMem(0x47b1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa04c, gbc.sp());
        EXPECT(0x47b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03B0
        gbc.setState(0x5acf, 0xf8ed, 0xf210, 0x2d48, 0xf995, 0xab03, 0x0, 0x1);
        gbc.writeMem(0x5acf, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf8ed, gbc.sp());
        EXPECT(0x5ad1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03B1
        gbc.setState(0xcff4, 0x2164, 0xcf20, 0x110f, 0xa02e, 0x9440, 0x1, 0x0);
        gbc.writeMem(0xcff4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2164, gbc.sp());
        EXPECT(0xcff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcff4));
        EXPECT(0x9f, gbc.readMem(0xcff5));
        // CB 9F 03B2
        gbc.setState(0x78a6, 0x688c, 0xdf90, 0x4244, 0x6203, 0xc664, 0x1, 0x1);
        gbc.writeMem(0x78a6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x688c, gbc.sp());
        EXPECT(0x78a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03B3
        gbc.setState(0x1582, 0x8b, 0xfd10, 0x9ade, 0xaf8e, 0xbe56, 0x0, 0x0);
        gbc.writeMem(0x1582, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8b, gbc.sp());
        EXPECT(0x1584, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03B4
        gbc.setState(0x1802, 0xcaed, 0x5930, 0x26ba, 0x655d, 0xb044, 0x1, 0x1);
        gbc.writeMem(0x1802, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xcaed, gbc.sp());
        EXPECT(0x1804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03B5
        gbc.setState(0x1762, 0x76df, 0x4fb0, 0xe12b, 0xb6d5, 0xfa50, 0x1, 0x0);
        gbc.writeMem(0x1762, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x76df, gbc.sp());
        EXPECT(0x1764, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03B6
        gbc.setState(0x4206, 0xcae0, 0x9f80, 0x8de7, 0x5fc, 0x8415, 0x1, 0x1);
        gbc.writeMem(0x4206, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xcae0, gbc.sp());
        EXPECT(0x4208, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03B7
        gbc.setState(0x39ab, 0x4c09, 0xf230, 0xe6b0, 0x72a2, 0x339f, 0x1, 0x0);
        gbc.writeMem(0x39ab, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4c09, gbc.sp());
        EXPECT(0x39ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03B8
        gbc.setState(0x375a, 0xc664, 0x80e0, 0xedc, 0xd7c4, 0x43c0, 0x0, 0x1);
        gbc.writeMem(0x375a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc664, gbc.sp());
        EXPECT(0x375c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03B9
        gbc.setState(0xb9a6, 0xcaa7, 0xbe00, 0xfa81, 0xc33f, 0x5764, 0x0, 0x1);
        gbc.writeMem(0xb9a6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcaa7, gbc.sp());
        EXPECT(0xb9a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9a6));
        EXPECT(0x9f, gbc.readMem(0xb9a7));
        // CB 9F 03BA
        gbc.setState(0x11b2, 0xa1d2, 0x11d0, 0xa0bf, 0x1d3b, 0xcd68, 0x0, 0x0);
        gbc.writeMem(0x11b2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xa1d2, gbc.sp());
        EXPECT(0x11b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03BB
        gbc.setState(0x95f2, 0xc807, 0xdf0, 0xa56a, 0x6fa3, 0xfb10, 0x1, 0x0);
        gbc.writeMem(0x95f2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc807, gbc.sp());
        EXPECT(0x95f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95f2));
        EXPECT(0x9f, gbc.readMem(0x95f3));
        // CB 9F 03BC
        gbc.setState(0xe0f, 0x391b, 0x5eb0, 0xf127, 0xf307, 0xf8b0, 0x0, 0x1);
        gbc.writeMem(0xe0f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x391b, gbc.sp());
        EXPECT(0xe11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03BD
        gbc.setState(0x5f1, 0xdcc7, 0xe320, 0x5185, 0x592d, 0x1ebd, 0x1, 0x1);
        gbc.writeMem(0x5f1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xdcc7, gbc.sp());
        EXPECT(0x5f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03BE
        gbc.setState(0x4efb, 0x5cfd, 0x3bc0, 0x6abf, 0x3e90, 0xea44, 0x1, 0x0);
        gbc.writeMem(0x4efb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5cfd, gbc.sp());
        EXPECT(0x4efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03BF
        gbc.setState(0x5022, 0xb678, 0xcb60, 0xb084, 0xac02, 0x9a91, 0x1, 0x0);
        gbc.writeMem(0x5022, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xb678, gbc.sp());
        EXPECT(0x5024, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03C0
        gbc.setState(0x136c, 0x81e6, 0xa720, 0x1a83, 0xf6ab, 0x2f53, 0x1, 0x0);
        gbc.writeMem(0x136c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x81e6, gbc.sp());
        EXPECT(0x136e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03C1
        gbc.setState(0xe747, 0x351f, 0xf880, 0xc579, 0x37c9, 0xcb45, 0x1, 0x1);
        gbc.writeMem(0xe747, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x351f, gbc.sp());
        EXPECT(0xe749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe747));
        EXPECT(0x9f, gbc.readMem(0xe748));
        // CB 9F 03C2
        gbc.setState(0x466f, 0xe392, 0x4e70, 0x9c6b, 0x589, 0x760, 0x1, 0x0);
        gbc.writeMem(0x466f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe392, gbc.sp());
        EXPECT(0x4671, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03C3
        gbc.setState(0x753c, 0xcd0a, 0x27f0, 0x6b46, 0xcbec, 0x861b, 0x1, 0x1);
        gbc.writeMem(0x753c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xcd0a, gbc.sp());
        EXPECT(0x753e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03C4
        gbc.setState(0x2968, 0xbda, 0x4b50, 0x6afc, 0x1b8b, 0xb910, 0x0, 0x0);
        gbc.writeMem(0x2968, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbda, gbc.sp());
        EXPECT(0x296a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03C5
        gbc.setState(0x493d, 0x79fa, 0x2f0, 0x7253, 0xc9cd, 0x64a2, 0x1, 0x0);
        gbc.writeMem(0x493d, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x79fa, gbc.sp());
        EXPECT(0x493f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03C6
        gbc.setState(0xd90e, 0xbeda, 0xaef0, 0x63ff, 0x9a1, 0x24fb, 0x0, 0x1);
        gbc.writeMem(0xd90e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xbeda, gbc.sp());
        EXPECT(0xd910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd90e));
        EXPECT(0x9f, gbc.readMem(0xd90f));
        // CB 9F 03C7
        gbc.setState(0xb76b, 0x397a, 0xbe90, 0x138a, 0xb2bc, 0x5c50, 0x1, 0x1);
        gbc.writeMem(0xb76b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x397a, gbc.sp());
        EXPECT(0xb76d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb76b));
        EXPECT(0x9f, gbc.readMem(0xb76c));
        // CB 9F 03C8
        gbc.setState(0x9c15, 0x19b2, 0xd300, 0x83a7, 0x20bf, 0x1636, 0x0, 0x1);
        gbc.writeMem(0x9c15, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x19b2, gbc.sp());
        EXPECT(0x9c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c15));
        EXPECT(0x9f, gbc.readMem(0x9c16));
        // CB 9F 03C9
        gbc.setState(0xb161, 0x1b77, 0x2f40, 0x929b, 0x63b8, 0x56, 0x1, 0x1);
        gbc.writeMem(0xb161, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x1b77, gbc.sp());
        EXPECT(0xb163, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb161));
        EXPECT(0x9f, gbc.readMem(0xb162));
        // CB 9F 03CA
        gbc.setState(0x3ae4, 0xcbc3, 0xcad0, 0xa30d, 0xd21, 0x8ec1, 0x1, 0x1);
        gbc.writeMem(0x3ae4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xcbc3, gbc.sp());
        EXPECT(0x3ae6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03CB
        gbc.setState(0xa0c, 0xd15b, 0x8f20, 0xc074, 0xab3f, 0xd789, 0x0, 0x1);
        gbc.writeMem(0xa0c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd15b, gbc.sp());
        EXPECT(0xa0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03CC
        gbc.setState(0x18dd, 0x72dc, 0xa530, 0xe818, 0xef3a, 0xbec0, 0x1, 0x0);
        gbc.writeMem(0x18dd, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x72dc, gbc.sp());
        EXPECT(0x18df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03CD
        gbc.setState(0x44c6, 0x95a7, 0x6350, 0x5fe8, 0x3e54, 0xa85c, 0x0, 0x1);
        gbc.writeMem(0x44c6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x95a7, gbc.sp());
        EXPECT(0x44c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03CE
        gbc.setState(0x92bb, 0x7aae, 0xc8b0, 0xfef, 0xdcf2, 0x69a5, 0x0, 0x0);
        gbc.writeMem(0x92bb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7aae, gbc.sp());
        EXPECT(0x92bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92bb));
        EXPECT(0x9f, gbc.readMem(0x92bc));
        // CB 9F 03CF
        gbc.setState(0x4334, 0x7535, 0x9960, 0xb336, 0x1039, 0x9f8, 0x1, 0x0);
        gbc.writeMem(0x4334, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7535, gbc.sp());
        EXPECT(0x4336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03D0
        gbc.setState(0xc0d1, 0x9c18, 0x62d0, 0x2de9, 0xcda2, 0xd154, 0x1, 0x0);
        gbc.writeMem(0xc0d1, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9c18, gbc.sp());
        EXPECT(0xc0d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d1));
        EXPECT(0x9f, gbc.readMem(0xc0d2));
        // CB 9F 03D1
        gbc.setState(0x459f, 0x168b, 0x6350, 0x42db, 0xfcfd, 0x8e57, 0x1, 0x0);
        gbc.writeMem(0x459f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x168b, gbc.sp());
        EXPECT(0x45a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03D2
        gbc.setState(0xd0e4, 0x99d4, 0xb630, 0xcb42, 0x4270, 0x52b9, 0x1, 0x0);
        gbc.writeMem(0xd0e4, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x99d4, gbc.sp());
        EXPECT(0xd0e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e4));
        EXPECT(0x9f, gbc.readMem(0xd0e5));
        // CB 9F 03D3
        gbc.setState(0xc902, 0x3d44, 0xb860, 0x7f92, 0x7a50, 0x3890, 0x1, 0x0);
        gbc.writeMem(0xc902, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x3d44, gbc.sp());
        EXPECT(0xc904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc902));
        EXPECT(0x9f, gbc.readMem(0xc903));
        // CB 9F 03D4
        gbc.setState(0xc7c0, 0xfe46, 0x5280, 0x92ac, 0xd6cd, 0x5978, 0x1, 0x0);
        gbc.writeMem(0xc7c0, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xfe46, gbc.sp());
        EXPECT(0xc7c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c0));
        EXPECT(0x9f, gbc.readMem(0xc7c1));
        // CB 9F 03D5
        gbc.setState(0xcf89, 0xf3db, 0x9a40, 0x2653, 0x4954, 0xf025, 0x0, 0x1);
        gbc.writeMem(0xcf89, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xf3db, gbc.sp());
        EXPECT(0xcf8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcf89));
        EXPECT(0x9f, gbc.readMem(0xcf8a));
        // CB 9F 03D7
        gbc.setState(0xe203, 0x1b5, 0xa300, 0xd102, 0x73e0, 0x3e3e, 0x0, 0x0);
        gbc.writeMem(0xe203, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1b5, gbc.sp());
        EXPECT(0xe205, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe203));
        EXPECT(0x9f, gbc.readMem(0xe204));
        // CB 9F 03D8
        gbc.setState(0x9acb, 0x2fb4, 0xf220, 0x6154, 0x509f, 0x7c33, 0x0, 0x1);
        gbc.writeMem(0x9acb, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x2fb4, gbc.sp());
        EXPECT(0x9acd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9acb));
        EXPECT(0x9f, gbc.readMem(0x9acc));
        // CB 9F 03D9
        gbc.setState(0x3c2f, 0x7741, 0xe000, 0x9f0, 0x251d, 0x1386, 0x1, 0x0);
        gbc.writeMem(0x3c2f, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x7741, gbc.sp());
        EXPECT(0x3c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03DA
        gbc.setState(0x9c3, 0x30ba, 0xf760, 0x7cea, 0xadbf, 0xeca0, 0x0, 0x1);
        gbc.writeMem(0x9c3, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x30ba, gbc.sp());
        EXPECT(0x9c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03DB
        gbc.setState(0x22ca, 0x6427, 0xeb50, 0x11be, 0x71f8, 0x282f, 0x0, 0x0);
        gbc.writeMem(0x22ca, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x6427, gbc.sp());
        EXPECT(0x22cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03DC
        gbc.setState(0x50c, 0xb90d, 0xae60, 0x5440, 0x2a4, 0x613e, 0x0, 0x1);
        gbc.writeMem(0x50c, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xb90d, gbc.sp());
        EXPECT(0x50e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03DD
        gbc.setState(0x7ca8, 0x3870, 0xf910, 0xb5a0, 0xe2e1, 0x53f6, 0x1, 0x0);
        gbc.writeMem(0x7ca8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3870, gbc.sp());
        EXPECT(0x7caa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9F 03DE
        gbc.setState(0x8bdf, 0xbbc0, 0xad70, 0x291b, 0xc703, 0xd24a, 0x0, 0x0);
        gbc.writeMem(0x8bdf, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbbc0, gbc.sp());
        EXPECT(0x8be1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bdf));
        EXPECT(0x9f, gbc.readMem(0x8be0));
        // CB 9F 03DF
        gbc.setState(0x99e8, 0xd552, 0xd750, 0xa9bf, 0xc5e8, 0x5517, 0x0, 0x0);
        gbc.writeMem(0x99e8, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd552, gbc.sp());
        EXPECT(0x99ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99e8));
        EXPECT(0x9f, gbc.readMem(0x99e9));
        // CB 9F 03E0
        gbc.setState(0x9c7a, 0x807a, 0x5210, 0x81d3, 0xd143, 0x5353, 0x1, 0x1);
        gbc.writeMem(0x9c7a, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x807a, gbc.sp());
        EXPECT(0x9c7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c7a));
        EXPECT(0x9f, gbc.readMem(0x9c7b));
        // CB 9F 03E1
        gbc.setState(0x6458, 0xaf0e, 0x3ba0, 0x3940, 0x5b93, 0xe60e, 0x0, 0x0);
        gbc.writeMem(0x6458, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xaf0e, gbc.sp());
        EXPECT(0x645a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03E2
        gbc.setState(0xc0f7, 0xfed8, 0x18c0, 0xc1d1, 0xf3ce, 0x7566, 0x1, 0x0);
        gbc.writeMem(0xc0f7, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfed8, gbc.sp());
        EXPECT(0xc0f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0f7));
        EXPECT(0x9f, gbc.readMem(0xc0f8));
        // CB 9F 03E3
        gbc.setState(0xb0a2, 0xb913, 0xee00, 0xf4a3, 0x416b, 0x2364, 0x1, 0x0);
        gbc.writeMem(0xb0a2, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb913, gbc.sp());
        EXPECT(0xb0a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0a2));
        EXPECT(0x9f, gbc.readMem(0xb0a3));
        // CB 9F 03E5
        gbc.setState(0x5e, 0x77a5, 0x2ec0, 0x579c, 0x554d, 0xe6a5, 0x1, 0x0);
        gbc.writeMem(0x5e, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x77a5, gbc.sp());
        EXPECT(0x60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9F 03E6
        gbc.setState(0xdfd6, 0x59b7, 0xb400, 0x5c6e, 0xc9e3, 0x15dc, 0x0, 0x1);
        gbc.writeMem(0xdfd6, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x59b7, gbc.sp());
        EXPECT(0xdfd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdfd6));
        EXPECT(0x9f, gbc.readMem(0xdfd7));
        // CB 9F 03E7
        gbc.setState(0x9a2b, 0x65a1, 0x8c40, 0x8ea9, 0xbba4, 0xf90b, 0x0, 0x0);
        gbc.writeMem(0x9a2b, { 0xcb, 0x9f });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x65a1, gbc.sp());
        EXPECT(0x9a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9a2b));
        EXPECT(0x9f, gbc.readMem(0x9a2c));
    }
