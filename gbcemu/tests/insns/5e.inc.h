    TEST(gbcemu, opcode_5e) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 5E 0000
        gbc.setState(0xdeef, 0x4d9, 0xf170, 0xd736, 0x6a47, 0xa181, 0x0, 0x0);
        gbc.writeMem(0xa181, { 0xa7 });
        gbc.writeMem(0xdeef, { 0x5e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x4d9, gbc.sp());
        EXPECT(0xdef0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa181));
        EXPECT(0x5e, gbc.readMem(0xdeef));
        // 5E 0001
        gbc.setState(0x2870, 0xd994, 0x2ea0, 0x3d7, 0xf330, 0x9a1e, 0x1, 0x0);
        gbc.writeMem(0x2870, { 0x5e });
        gbc.writeMem(0x9a1e, { 0xf8 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd994, gbc.sp());
        EXPECT(0x2871, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9a1e));
        // 5E 0002
        gbc.setState(0xcc20, 0x3860, 0x1500, 0xf0be, 0x4817, 0xb4e, 0x0, 0x1);
        gbc.writeMem(0xb4e, { 0x89 });
        gbc.writeMem(0xcc20, { 0x5e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3860, gbc.sp());
        EXPECT(0xcc21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcc20));
        // 5E 0003
        gbc.setState(0x915f, 0x239a, 0xddc0, 0xcf42, 0x1a79, 0x1673, 0x1, 0x1);
        gbc.writeMem(0x1673, { 0x93 });
        gbc.writeMem(0x915f, { 0x5e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x239a, gbc.sp());
        EXPECT(0x9160, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x915f));
        // 5E 0004
        gbc.setState(0xed5b, 0x9d56, 0x2060, 0xa0a7, 0x2ba8, 0xd2dc, 0x1, 0x1);
        gbc.writeMem(0xd2dc, { 0xbb });
        gbc.writeMem(0xed5b, { 0x5e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9d56, gbc.sp());
        EXPECT(0xed5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xd2dc));
        EXPECT(0x5e, gbc.readMem(0xed5b));
        // 5E 0005
        gbc.setState(0x1f49, 0x2970, 0x63c0, 0xd2b4, 0x7863, 0xf3e5, 0x0, 0x0);
        gbc.writeMem(0x1f49, { 0x5e });
        gbc.writeMem(0xf3e5, { 0x25 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x2970, gbc.sp());
        EXPECT(0x1f4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xf3e5));
        // 5E 0006
        gbc.setState(0x91ee, 0x80, 0xae90, 0xd6cb, 0x7f97, 0x8006, 0x1, 0x0);
        gbc.writeMem(0x8006, { 0xbd });
        gbc.writeMem(0x91ee, { 0x5e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x80, gbc.sp());
        EXPECT(0x91ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0x8006));
        EXPECT(0x5e, gbc.readMem(0x91ee));
        // 5E 0007
        gbc.setState(0x7b1b, 0xbb88, 0x65a0, 0xd6da, 0x6cdc, 0x2775, 0x0, 0x1);
        gbc.writeMem(0x2775, { 0xfb });
        gbc.writeMem(0x7b1b, { 0x5e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbb88, gbc.sp());
        EXPECT(0x7b1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0008
        gbc.setState(0xdffa, 0x5abe, 0x17c0, 0x661, 0x16e6, 0x151a, 0x1, 0x1);
        gbc.writeMem(0x151a, { 0xc8 });
        gbc.writeMem(0xdffa, { 0x5e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5abe, gbc.sp());
        EXPECT(0xdffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xdffa));
        // 5E 0009
        gbc.setState(0xc1b2, 0x88bb, 0x5d30, 0x7ca5, 0x3533, 0xdff1, 0x0, 0x0);
        gbc.writeMem(0xc1b2, { 0x5e });
        gbc.writeMem(0xdff1, { 0xd9 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x88bb, gbc.sp());
        EXPECT(0xc1b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc1b2));
        EXPECT(0xd9, gbc.readMem(0xdff1));
        // 5E 000A
        gbc.setState(0x769b, 0xb3ad, 0xae40, 0xb12, 0xbdad, 0xffc6, 0x0, 0x0);
        gbc.writeMem(0x769b, { 0x5e });
        gbc.writeMem(0xffc6, { 0x37 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb3ad, gbc.sp());
        EXPECT(0x769c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xffc6));
        // 5E 000D
        gbc.setState(0xa71b, 0xc73e, 0x14b0, 0xa972, 0x8bbc, 0x6ce2, 0x1, 0x1);
        gbc.writeMem(0x6ce2, { 0xa9 });
        gbc.writeMem(0xa71b, { 0x5e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xc73e, gbc.sp());
        EXPECT(0xa71c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa71b));
        // 5E 000E
        gbc.setState(0xbf1c, 0x36d3, 0xb5d0, 0xf219, 0xa7cf, 0x5ad4, 0x1, 0x1);
        gbc.writeMem(0x5ad4, { 0xee });
        gbc.writeMem(0xbf1c, { 0x5e });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x36d3, gbc.sp());
        EXPECT(0xbf1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbf1c));
        // 5E 000F
        gbc.setState(0x3420, 0xfb3, 0xa190, 0xc9e2, 0x3d01, 0x20c0, 0x0, 0x1);
        gbc.writeMem(0x20c0, { 0x11 });
        gbc.writeMem(0x3420, { 0x5e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfb3, gbc.sp());
        EXPECT(0x3421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0010
        gbc.setState(0xdf43, 0xd33e, 0x41e0, 0x8339, 0x181c, 0x3853, 0x1, 0x1);
        gbc.writeMem(0x3853, { 0x7 });
        gbc.writeMem(0xdf43, { 0x5e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd33e, gbc.sp());
        EXPECT(0xdf44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xdf43));
        // 5E 0011
        gbc.setState(0x9189, 0xd2b4, 0xe920, 0x3780, 0xfb2a, 0x4b6d, 0x1, 0x1);
        gbc.writeMem(0x4b6d, { 0x2d });
        gbc.writeMem(0x9189, { 0x5e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd2b4, gbc.sp());
        EXPECT(0x918a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9189));
        // 5E 0012
        gbc.setState(0x8401, 0xea4c, 0x28d0, 0x8ba2, 0xd4c7, 0x2aff, 0x0, 0x1);
        gbc.writeMem(0x2aff, { 0xfa });
        gbc.writeMem(0x8401, { 0x5e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xea4c, gbc.sp());
        EXPECT(0x8402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8401));
        // 5E 0013
        gbc.setState(0xc253, 0x5864, 0xcaa0, 0x5716, 0x9dbc, 0x9774, 0x1, 0x1);
        gbc.writeMem(0x9774, { 0x4a });
        gbc.writeMem(0xc253, { 0x5e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5864, gbc.sp());
        EXPECT(0xc254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0x9774));
        EXPECT(0x5e, gbc.readMem(0xc253));
        // 5E 0015
        gbc.setState(0x5a57, 0xda18, 0x7480, 0x1086, 0xe8fd, 0x584f, 0x0, 0x0);
        gbc.writeMem(0x584f, { 0xb5 });
        gbc.writeMem(0x5a57, { 0x5e });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xda18, gbc.sp());
        EXPECT(0x5a58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0016
        gbc.setState(0xa3d0, 0x2f81, 0xf0a0, 0x88d4, 0x300b, 0x2fbb, 0x1, 0x0);
        gbc.writeMem(0x2fbb, { 0x52 });
        gbc.writeMem(0xa3d0, { 0x5e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2f81, gbc.sp());
        EXPECT(0xa3d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa3d0));
        // 5E 0017
        gbc.setState(0xe15e, 0x32ce, 0x77f0, 0xe012, 0x7652, 0x7eb, 0x1, 0x1);
        gbc.writeMem(0x7eb, { 0xd1 });
        gbc.writeMem(0xe15e, { 0x5e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x32ce, gbc.sp());
        EXPECT(0xe15f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe15e));
        // 5E 0018
        gbc.setState(0xe1d1, 0x5da3, 0x4a30, 0xc34f, 0x6c99, 0x50d5, 0x0, 0x0);
        gbc.writeMem(0x50d5, { 0xa4 });
        gbc.writeMem(0xe1d1, { 0x5e });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5da3, gbc.sp());
        EXPECT(0xe1d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe1d1));
        // 5E 0019
        gbc.setState(0x980f, 0xa1ae, 0x7580, 0x9fa1, 0x3e16, 0x32cb, 0x1, 0x1);
        gbc.writeMem(0x32cb, { 0xed });
        gbc.writeMem(0x980f, { 0x5e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa1ae, gbc.sp());
        EXPECT(0x9810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x980f));
        // 5E 001B
        gbc.setState(0xa079, 0x2b52, 0x7d30, 0x22b, 0x456, 0xa275, 0x1, 0x1);
        gbc.writeMem(0xa079, { 0x5e });
        gbc.writeMem(0xa275, { 0xf9 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2b52, gbc.sp());
        EXPECT(0xa07a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa079));
        EXPECT(0xf9, gbc.readMem(0xa275));
        // 5E 001C
        gbc.setState(0x401a, 0xbe27, 0x6a0, 0xd593, 0xb0c6, 0xaaaf, 0x0, 0x1);
        gbc.writeMem(0x401a, { 0x5e });
        gbc.writeMem(0xaaaf, { 0x4b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xbe27, gbc.sp());
        EXPECT(0x401b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xaaaf));
        // 5E 001D
        gbc.setState(0xaca2, 0x6d98, 0x1370, 0x5479, 0xef09, 0xacc9, 0x0, 0x0);
        gbc.writeMem(0xaca2, { 0x5e });
        gbc.writeMem(0xacc9, { 0x2c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6d98, gbc.sp());
        EXPECT(0xaca3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xaca2));
        EXPECT(0x2c, gbc.readMem(0xacc9));
        // 5E 001E
        gbc.setState(0x405e, 0xc3e2, 0x2ba0, 0x61d, 0xffe6, 0xe7b2, 0x0, 0x0);
        gbc.writeMem(0x405e, { 0x5e });
        gbc.writeMem(0xe7b2, { 0x46 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xc3e2, gbc.sp());
        EXPECT(0x405f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xe7b2));
        // 5E 001F
        gbc.setState(0xc1a1, 0x6838, 0xe3d0, 0xa9eb, 0x6949, 0x2a9e, 0x0, 0x0);
        gbc.writeMem(0x2a9e, { 0x6b });
        gbc.writeMem(0xc1a1, { 0x5e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6838, gbc.sp());
        EXPECT(0xc1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc1a1));
        // 5E 0020
        gbc.setState(0x1fd3, 0x1e4b, 0xd0c0, 0x60f5, 0x8ab0, 0x25b9, 0x0, 0x1);
        gbc.writeMem(0x1fd3, { 0x5e });
        gbc.writeMem(0x25b9, { 0x6d });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x1e4b, gbc.sp());
        EXPECT(0x1fd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0021
        gbc.setState(0x4667, 0xa5a3, 0xa80, 0x6741, 0xb7dc, 0xa846, 0x1, 0x0);
        gbc.writeMem(0x4667, { 0x5e });
        gbc.writeMem(0xa846, { 0x97 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa5a3, gbc.sp());
        EXPECT(0x4668, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xa846));
        // 5E 0022
        gbc.setState(0xc2b8, 0xdefa, 0x8dd0, 0xca42, 0x4230, 0xeb59, 0x0, 0x0);
        gbc.writeMem(0xc2b8, { 0x5e });
        gbc.writeMem(0xeb59, { 0x51 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdefa, gbc.sp());
        EXPECT(0xc2b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc2b8));
        EXPECT(0x51, gbc.readMem(0xeb59));
        // 5E 0023
        gbc.setState(0x7b4c, 0xa4fd, 0xbc40, 0x81af, 0x7661, 0xc7dd, 0x0, 0x0);
        gbc.writeMem(0x7b4c, { 0x5e });
        gbc.writeMem(0xc7dd, { 0x85 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa4fd, gbc.sp());
        EXPECT(0x7b4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xc7dd));
        // 5E 0024
        gbc.setState(0x3868, 0x5445, 0x3130, 0xfdd8, 0x1ea5, 0x60e, 0x1, 0x1);
        gbc.writeMem(0x60e, { 0x2d });
        gbc.writeMem(0x3868, { 0x5e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x5445, gbc.sp());
        EXPECT(0x3869, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0025
        gbc.setState(0xb53a, 0x9f28, 0x2f10, 0x54a2, 0x390b, 0xb054, 0x1, 0x0);
        gbc.writeMem(0xb054, { 0xbf });
        gbc.writeMem(0xb53a, { 0x5e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9f28, gbc.sp());
        EXPECT(0xb53b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb054));
        EXPECT(0x5e, gbc.readMem(0xb53a));
        // 5E 0026
        gbc.setState(0x1799, 0x8115, 0x9c20, 0x3356, 0x648, 0xcddf, 0x0, 0x1);
        gbc.writeMem(0x1799, { 0x5e });
        gbc.writeMem(0xcddf, { 0x9e });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8115, gbc.sp());
        EXPECT(0x179a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xcddf));
        // 5E 0027
        gbc.setState(0x8483, 0x1ae4, 0x1610, 0xeafd, 0xc8a3, 0x28d4, 0x0, 0x1);
        gbc.writeMem(0x28d4, { 0xe1 });
        gbc.writeMem(0x8483, { 0x5e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1ae4, gbc.sp());
        EXPECT(0x8484, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8483));
        // 5E 0028
        gbc.setState(0xded2, 0x1af8, 0xa760, 0xddac, 0x9a88, 0xa8b, 0x1, 0x0);
        gbc.writeMem(0xa8b, { 0xfd });
        gbc.writeMem(0xded2, { 0x5e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x1af8, gbc.sp());
        EXPECT(0xded3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xded2));
        // 5E 0029
        gbc.setState(0x3c32, 0xdb50, 0x9bb0, 0xa057, 0x1888, 0x8a42, 0x1, 0x0);
        gbc.writeMem(0x3c32, { 0x5e });
        gbc.writeMem(0x8a42, { 0x7c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xdb50, gbc.sp());
        EXPECT(0x3c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x8a42));
        // 5E 002A
        gbc.setState(0xcd40, 0xe3e9, 0xe870, 0x6aea, 0x2ee8, 0xef58, 0x0, 0x0);
        gbc.writeMem(0xcd40, { 0x5e });
        gbc.writeMem(0xef58, { 0xe9 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xe3e9, gbc.sp());
        EXPECT(0xcd41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcd40));
        EXPECT(0xe9, gbc.readMem(0xef58));
        // 5E 002B
        gbc.setState(0x5943, 0xa74d, 0x46f0, 0x99a, 0x3737, 0xb800, 0x0, 0x1);
        gbc.writeMem(0x5943, { 0x5e });
        gbc.writeMem(0xb800, { 0xa2 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa74d, gbc.sp());
        EXPECT(0x5944, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xb800));
        // 5E 002C
        gbc.setState(0xdee4, 0xc439, 0xc7d0, 0xbcad, 0xdb, 0x3d76, 0x0, 0x1);
        gbc.writeMem(0x3d76, { 0x8c });
        gbc.writeMem(0xdee4, { 0x5e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xc439, gbc.sp());
        EXPECT(0xdee5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xdee4));
        // 5E 002D
        gbc.setState(0xe991, 0xf9cb, 0x32a0, 0x77b8, 0x8964, 0x6ce2, 0x1, 0x1);
        gbc.writeMem(0x6ce2, { 0xa9 });
        gbc.writeMem(0xe991, { 0x5e });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xf9cb, gbc.sp());
        EXPECT(0xe992, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe991));
        // 5E 002E
        gbc.setState(0x3463, 0xd34d, 0xe990, 0x10ff, 0x5c29, 0xf916, 0x0, 0x0);
        gbc.writeMem(0x3463, { 0x5e });
        gbc.writeMem(0xf916, { 0x48 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd34d, gbc.sp());
        EXPECT(0x3464, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xf916));
        // 5E 002F
        gbc.setState(0x3542, 0x8bf8, 0xbbb0, 0x7fdc, 0x958, 0x3076, 0x0, 0x1);
        gbc.writeMem(0x3076, { 0x1b });
        gbc.writeMem(0x3542, { 0x5e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8bf8, gbc.sp());
        EXPECT(0x3543, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0030
        gbc.setState(0xdaf4, 0xcf29, 0x4f70, 0x3eae, 0xec4f, 0xfdc8, 0x1, 0x0);
        gbc.writeMem(0xdaf4, { 0x5e });
        gbc.writeMem(0xfdc8, { 0x19 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xcf29, gbc.sp());
        EXPECT(0xdaf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xdaf4));
        EXPECT(0x19, gbc.readMem(0xfdc8));
        // 5E 0031
        gbc.setState(0x7f4b, 0xde69, 0x2320, 0xca7e, 0x980d, 0x1d4c, 0x1, 0x0);
        gbc.writeMem(0x1d4c, { 0x18 });
        gbc.writeMem(0x7f4b, { 0x5e });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xde69, gbc.sp());
        EXPECT(0x7f4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0032
        gbc.setState(0x6644, 0xb36b, 0xa490, 0xdc35, 0x5e5f, 0x6ff2, 0x1, 0x0);
        gbc.writeMem(0x6644, { 0x5e });
        gbc.writeMem(0x6ff2, { 0x1 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xb36b, gbc.sp());
        EXPECT(0x6645, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0033
        gbc.setState(0x86f7, 0x78cd, 0xece0, 0x805a, 0x6685, 0xaa06, 0x1, 0x0);
        gbc.writeMem(0x86f7, { 0x5e });
        gbc.writeMem(0xaa06, { 0x86 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x78cd, gbc.sp());
        EXPECT(0x86f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x86f7));
        EXPECT(0x86, gbc.readMem(0xaa06));
        // 5E 0034
        gbc.setState(0x7377, 0xdfd2, 0xf3b0, 0xb214, 0x90e7, 0x1f55, 0x1, 0x1);
        gbc.writeMem(0x1f55, { 0x6a });
        gbc.writeMem(0x7377, { 0x5e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xdfd2, gbc.sp());
        EXPECT(0x7378, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0036
        gbc.setState(0x5cbb, 0x19bb, 0xc660, 0x8b56, 0x7a32, 0xaadb, 0x0, 0x1);
        gbc.writeMem(0x5cbb, { 0x5e });
        gbc.writeMem(0xaadb, { 0xdf });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x19bb, gbc.sp());
        EXPECT(0x5cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xaadb));
        // 5E 0037
        gbc.setState(0x3211, 0x31b3, 0x81e0, 0x8720, 0xeff8, 0x1b3a, 0x1, 0x1);
        gbc.writeMem(0x1b3a, { 0xd5 });
        gbc.writeMem(0x3211, { 0x5e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x31b3, gbc.sp());
        EXPECT(0x3212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0039
        gbc.setState(0xb3c, 0x89eb, 0x62e0, 0x9438, 0xac6f, 0xbd5d, 0x1, 0x1);
        gbc.writeMem(0xb3c, { 0x5e });
        gbc.writeMem(0xbd5d, { 0x78 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x89eb, gbc.sp());
        EXPECT(0xb3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xbd5d));
        // 5E 003A
        gbc.setState(0x9391, 0xb2b6, 0xfff0, 0x58cf, 0xf065, 0x5bb8, 0x1, 0x1);
        gbc.writeMem(0x5bb8, { 0x7 });
        gbc.writeMem(0x9391, { 0x5e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb2b6, gbc.sp());
        EXPECT(0x9392, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9391));
        // 5E 003B
        gbc.setState(0x69b, 0x8fa5, 0xa6f0, 0xf3e8, 0x24b6, 0xef41, 0x0, 0x1);
        gbc.writeMem(0x69b, { 0x5e });
        gbc.writeMem(0xef41, { 0xbd });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8fa5, gbc.sp());
        EXPECT(0x69c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xef41));
        // 5E 003D
        gbc.setState(0x724, 0x2a2d, 0x2e30, 0xa2ec, 0x3972, 0xa11f, 0x0, 0x1);
        gbc.writeMem(0x724, { 0x5e });
        gbc.writeMem(0xa11f, { 0x33 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x2a2d, gbc.sp());
        EXPECT(0x725, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa11f));
        // 5E 003E
        gbc.setState(0xc323, 0xc1f4, 0xc5d0, 0x2401, 0xf41f, 0x9b90, 0x1, 0x0);
        gbc.writeMem(0x9b90, { 0xb8 });
        gbc.writeMem(0xc323, { 0x5e });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xc1f4, gbc.sp());
        EXPECT(0xc324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x9b90));
        EXPECT(0x5e, gbc.readMem(0xc323));
        // 5E 003F
        gbc.setState(0x3815, 0x7deb, 0xd8f0, 0xe762, 0x49e8, 0x1f4f, 0x0, 0x0);
        gbc.writeMem(0x1f4f, { 0xbd });
        gbc.writeMem(0x3815, { 0x5e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7deb, gbc.sp());
        EXPECT(0x3816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0040
        gbc.setState(0xe815, 0xf84e, 0xca0, 0xdb9e, 0x2806, 0x394, 0x0, 0x1);
        gbc.writeMem(0x394, { 0x6c });
        gbc.writeMem(0xe815, { 0x5e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xf84e, gbc.sp());
        EXPECT(0xe816, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe815));
        // 5E 0042
        gbc.setState(0x4c39, 0xa971, 0xf080, 0x6597, 0xe3d0, 0xe4ae, 0x1, 0x1);
        gbc.writeMem(0x4c39, { 0x5e });
        gbc.writeMem(0xe4ae, { 0x4c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xa971, gbc.sp());
        EXPECT(0x4c3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xe4ae));
        // 5E 0043
        gbc.setState(0xd913, 0x2ba2, 0xa7f0, 0xdf25, 0x76ad, 0xfdb3, 0x0, 0x1);
        gbc.writeMem(0xd913, { 0x5e });
        gbc.writeMem(0xfdb3, { 0x73 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x2ba2, gbc.sp());
        EXPECT(0xd914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd913));
        EXPECT(0x73, gbc.readMem(0xfdb3));
        // 5E 0044
        gbc.setState(0x3e4f, 0x8394, 0x5360, 0x3dab, 0x12a6, 0x61aa, 0x1, 0x0);
        gbc.writeMem(0x3e4f, { 0x5e });
        gbc.writeMem(0x61aa, { 0xd7 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8394, gbc.sp());
        EXPECT(0x3e50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0045
        gbc.setState(0xd568, 0x9c1, 0x4740, 0x9fb9, 0x3d6e, 0x2645, 0x1, 0x0);
        gbc.writeMem(0x2645, { 0x49 });
        gbc.writeMem(0xd568, { 0x5e });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9c1, gbc.sp());
        EXPECT(0xd569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd568));
        // 5E 0046
        gbc.setState(0x6fd7, 0x9748, 0xe9b0, 0x5767, 0x3565, 0x37e2, 0x1, 0x0);
        gbc.writeMem(0x37e2, { 0x8e });
        gbc.writeMem(0x6fd7, { 0x5e });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x9748, gbc.sp());
        EXPECT(0x6fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0047
        gbc.setState(0x11ec, 0xbecc, 0xd0b0, 0xd9ee, 0xb6f1, 0x6139, 0x1, 0x1);
        gbc.writeMem(0x11ec, { 0x5e });
        gbc.writeMem(0x6139, { 0x8e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xbecc, gbc.sp());
        EXPECT(0x11ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0048
        gbc.setState(0xdad3, 0xadd3, 0xe350, 0x6f38, 0x8171, 0x99d3, 0x1, 0x0);
        gbc.writeMem(0x99d3, { 0xb1 });
        gbc.writeMem(0xdad3, { 0x5e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xadd3, gbc.sp());
        EXPECT(0xdad4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x99d3));
        EXPECT(0x5e, gbc.readMem(0xdad3));
        // 5E 0049
        gbc.setState(0xd767, 0xc6a5, 0x1c90, 0x5be1, 0x7b94, 0x45c8, 0x0, 0x0);
        gbc.writeMem(0x45c8, { 0x9d });
        gbc.writeMem(0xd767, { 0x5e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xc6a5, gbc.sp());
        EXPECT(0xd768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd767));
        // 5E 004A
        gbc.setState(0x103a, 0x3a93, 0xd890, 0xcea3, 0x28c7, 0x7567, 0x0, 0x0);
        gbc.writeMem(0x103a, { 0x5e });
        gbc.writeMem(0x7567, { 0x6d });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3a93, gbc.sp());
        EXPECT(0x103b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 004B
        gbc.setState(0xeabd, 0x8308, 0xc1e0, 0xef9d, 0x108e, 0x12a9, 0x1, 0x0);
        gbc.writeMem(0x12a9, { 0xb2 });
        gbc.writeMem(0xeabd, { 0x5e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8308, gbc.sp());
        EXPECT(0xeabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xeabd));
        // 5E 004D
        gbc.setState(0x440c, 0xab39, 0x7580, 0x84d2, 0xb53c, 0xcf72, 0x0, 0x0);
        gbc.writeMem(0x440c, { 0x5e });
        gbc.writeMem(0xcf72, { 0x61 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xab39, gbc.sp());
        EXPECT(0x440d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xcf72));
        // 5E 004E
        gbc.setState(0x5577, 0xc8cb, 0x7bb0, 0x99d4, 0xbae9, 0xeaaa, 0x0, 0x0);
        gbc.writeMem(0x5577, { 0x5e });
        gbc.writeMem(0xeaaa, { 0x3f });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc8cb, gbc.sp());
        EXPECT(0x5578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xeaaa));
        // 5E 004F
        gbc.setState(0x15b0, 0x4015, 0xa90, 0xeb5d, 0x2b12, 0xc0aa, 0x1, 0x1);
        gbc.writeMem(0x15b0, { 0x5e });
        gbc.writeMem(0xc0aa, { 0x8b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x4015, gbc.sp());
        EXPECT(0x15b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xc0aa));
        // 5E 0050
        gbc.setState(0xc83, 0xd73, 0xdc10, 0x97d9, 0x44bf, 0xe219, 0x0, 0x1);
        gbc.writeMem(0xc83, { 0x5e });
        gbc.writeMem(0xe219, { 0x3f });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd73, gbc.sp());
        EXPECT(0xc84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe219));
        // 5E 0051
        gbc.setState(0x59c8, 0x51a7, 0xea80, 0x70e9, 0xf050, 0x6d62, 0x1, 0x1);
        gbc.writeMem(0x59c8, { 0x5e });
        gbc.writeMem(0x6d62, { 0x3e });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x51a7, gbc.sp());
        EXPECT(0x59c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0052
        gbc.setState(0x63f5, 0x1bdb, 0x2050, 0xe315, 0x706e, 0x7cdc, 0x1, 0x0);
        gbc.writeMem(0x63f5, { 0x5e });
        gbc.writeMem(0x7cdc, { 0x35 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1bdb, gbc.sp());
        EXPECT(0x63f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0053
        gbc.setState(0x1080, 0x4704, 0xbfb0, 0x59d, 0x67ec, 0xffb1, 0x1, 0x0);
        gbc.writeMem(0x1080, { 0x5e });
        gbc.writeMem(0xffb1, { 0x63 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4704, gbc.sp());
        EXPECT(0x1081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xffb1));
        // 5E 0054
        gbc.setState(0x82be, 0xfb11, 0xbc70, 0xb5fa, 0xcece, 0x86a9, 0x0, 0x0);
        gbc.writeMem(0x82be, { 0x5e });
        gbc.writeMem(0x86a9, { 0x84 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xfb11, gbc.sp());
        EXPECT(0x82bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x82be));
        EXPECT(0x84, gbc.readMem(0x86a9));
        // 5E 0055
        gbc.setState(0x82eb, 0xb7d1, 0x5e50, 0x6a10, 0xe631, 0x1d2f, 0x0, 0x1);
        gbc.writeMem(0x1d2f, { 0xce });
        gbc.writeMem(0x82eb, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb7d1, gbc.sp());
        EXPECT(0x82ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x82eb));
        // 5E 0056
        gbc.setState(0xe8ea, 0x8801, 0x3730, 0x7e24, 0x2fa0, 0x8ef9, 0x0, 0x0);
        gbc.writeMem(0x8ef9, { 0x92 });
        gbc.writeMem(0xe8ea, { 0x5e });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8801, gbc.sp());
        EXPECT(0xe8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x8ef9));
        EXPECT(0x5e, gbc.readMem(0xe8ea));
        // 5E 0057
        gbc.setState(0x3df5, 0x67f4, 0x7a30, 0x9f8e, 0x8c3, 0xbb99, 0x1, 0x1);
        gbc.writeMem(0x3df5, { 0x5e });
        gbc.writeMem(0xbb99, { 0x12 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x67f4, gbc.sp());
        EXPECT(0x3df6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xbb99));
        // 5E 0058
        gbc.setState(0x89f9, 0xadd0, 0x9210, 0xc752, 0xb834, 0x43b6, 0x1, 0x0);
        gbc.writeMem(0x43b6, { 0xb9 });
        gbc.writeMem(0x89f9, { 0x5e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xadd0, gbc.sp());
        EXPECT(0x89fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x89f9));
        // 5E 0059
        gbc.setState(0xc9de, 0x9139, 0xa4a0, 0x6fb9, 0x20ca, 0xa09f, 0x0, 0x1);
        gbc.writeMem(0xa09f, { 0xbd });
        gbc.writeMem(0xc9de, { 0x5e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9139, gbc.sp());
        EXPECT(0xc9df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xa09f));
        EXPECT(0x5e, gbc.readMem(0xc9de));
        // 5E 005A
        gbc.setState(0x3f85, 0x739b, 0x7aa0, 0xb51, 0x694, 0xb380, 0x1, 0x0);
        gbc.writeMem(0x3f85, { 0x5e });
        gbc.writeMem(0xb380, { 0xf1 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x739b, gbc.sp());
        EXPECT(0x3f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xb380));
        // 5E 005B
        gbc.setState(0x755d, 0xb9a3, 0xf00, 0xbeef, 0x8a8c, 0xac77, 0x0, 0x0);
        gbc.writeMem(0x755d, { 0x5e });
        gbc.writeMem(0xac77, { 0x5 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb9a3, gbc.sp());
        EXPECT(0x755e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xac77));
        // 5E 005C
        gbc.setState(0xd257, 0x2a27, 0xe280, 0x1b8f, 0x6683, 0x93ea, 0x0, 0x1);
        gbc.writeMem(0x93ea, { 0x4e });
        gbc.writeMem(0xd257, { 0x5e });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x2a27, gbc.sp());
        EXPECT(0xd258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0x93ea));
        EXPECT(0x5e, gbc.readMem(0xd257));
        // 5E 005D
        gbc.setState(0xec9f, 0xb60b, 0xe2b0, 0x5a9f, 0xbb02, 0xf93d, 0x1, 0x0);
        gbc.writeMem(0xec9f, { 0x5e });
        gbc.writeMem(0xf93d, { 0xc6 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb60b, gbc.sp());
        EXPECT(0xeca0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xec9f));
        EXPECT(0xc6, gbc.readMem(0xf93d));
        // 5E 005E
        gbc.setState(0x6e14, 0x66b3, 0x840, 0x409f, 0x7cac, 0xde70, 0x1, 0x0);
        gbc.writeMem(0x6e14, { 0x5e });
        gbc.writeMem(0xde70, { 0xbf });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x66b3, gbc.sp());
        EXPECT(0x6e15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xde70));
        // 5E 005F
        gbc.setState(0xd21c, 0xca3, 0xe380, 0xb099, 0xa0b6, 0x1de3, 0x1, 0x0);
        gbc.writeMem(0x1de3, { 0x9b });
        gbc.writeMem(0xd21c, { 0x5e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xca3, gbc.sp());
        EXPECT(0xd21d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd21c));
        // 5E 0060
        gbc.setState(0x83ce, 0x19ed, 0x1260, 0x646f, 0x659a, 0x96b9, 0x1, 0x0);
        gbc.writeMem(0x83ce, { 0x5e });
        gbc.writeMem(0x96b9, { 0x4f });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x19ed, gbc.sp());
        EXPECT(0x83cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x83ce));
        EXPECT(0x4f, gbc.readMem(0x96b9));
        // 5E 0061
        gbc.setState(0x8728, 0x6319, 0xf590, 0x5e02, 0xa8a7, 0x49f8, 0x0, 0x1);
        gbc.writeMem(0x49f8, { 0x5c });
        gbc.writeMem(0x8728, { 0x5e });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x6319, gbc.sp());
        EXPECT(0x8729, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8728));
        // 5E 0062
        gbc.setState(0xa4ac, 0xd4e8, 0xbff0, 0xb37c, 0xc528, 0x6a8e, 0x1, 0x1);
        gbc.writeMem(0x6a8e, { 0xe2 });
        gbc.writeMem(0xa4ac, { 0x5e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd4e8, gbc.sp());
        EXPECT(0xa4ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa4ac));
        // 5E 0063
        gbc.setState(0xc426, 0xed5f, 0xf290, 0xee6, 0xb655, 0x8780, 0x0, 0x0);
        gbc.writeMem(0x8780, { 0x95 });
        gbc.writeMem(0xc426, { 0x5e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xed5f, gbc.sp());
        EXPECT(0xc427, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8780));
        EXPECT(0x5e, gbc.readMem(0xc426));
        // 5E 0064
        gbc.setState(0xde8e, 0xe7bb, 0xbd70, 0x927a, 0xbc88, 0x700f, 0x1, 0x1);
        gbc.writeMem(0x700f, { 0x1 });
        gbc.writeMem(0xde8e, { 0x5e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe7bb, gbc.sp());
        EXPECT(0xde8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xde8e));
        // 5E 0065
        gbc.setState(0xc949, 0xc851, 0xa7d0, 0xc9fa, 0x39b9, 0xdd4, 0x1, 0x1);
        gbc.writeMem(0xdd4, { 0xd0 });
        gbc.writeMem(0xc949, { 0x5e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc851, gbc.sp());
        EXPECT(0xc94a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc949));
        // 5E 0066
        gbc.setState(0x7ec7, 0xdbc6, 0xefc0, 0xa66c, 0x13d3, 0x2f8a, 0x1, 0x1);
        gbc.writeMem(0x2f8a, { 0xae });
        gbc.writeMem(0x7ec7, { 0x5e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xdbc6, gbc.sp());
        EXPECT(0x7ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0067
        gbc.setState(0x49c8, 0xb60c, 0x82d0, 0x8fe2, 0x15a4, 0xcc2d, 0x0, 0x1);
        gbc.writeMem(0x49c8, { 0x5e });
        gbc.writeMem(0xcc2d, { 0xbc });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb60c, gbc.sp());
        EXPECT(0x49c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xcc2d));
        // 5E 0068
        gbc.setState(0x1a2c, 0xf3a7, 0x7fc0, 0x7aa2, 0x4d6b, 0x10ca, 0x1, 0x0);
        gbc.writeMem(0x10ca, { 0x1d });
        gbc.writeMem(0x1a2c, { 0x5e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf3a7, gbc.sp());
        EXPECT(0x1a2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0069
        gbc.setState(0x970b, 0x1313, 0x28e0, 0xbf83, 0x3b0f, 0x8275, 0x0, 0x1);
        gbc.writeMem(0x8275, { 0x95 });
        gbc.writeMem(0x970b, { 0x5e });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x1313, gbc.sp());
        EXPECT(0x970c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0x8275));
        EXPECT(0x5e, gbc.readMem(0x970b));
        // 5E 006A
        gbc.setState(0x774, 0x51bf, 0x22c0, 0x6b37, 0xfb9b, 0x9104, 0x1, 0x1);
        gbc.writeMem(0x774, { 0x5e });
        gbc.writeMem(0x9104, { 0x80 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x51bf, gbc.sp());
        EXPECT(0x775, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9104));
        // 5E 006B
        gbc.setState(0xd077, 0x9c25, 0xf300, 0x5ba, 0xbf92, 0xa114, 0x0, 0x0);
        gbc.writeMem(0xa114, { 0x82 });
        gbc.writeMem(0xd077, { 0x5e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x9c25, gbc.sp());
        EXPECT(0xd078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xa114));
        EXPECT(0x5e, gbc.readMem(0xd077));
        // 5E 006C
        gbc.setState(0xacab, 0x78b9, 0x2520, 0x8827, 0xadae, 0xa1e, 0x0, 0x1);
        gbc.writeMem(0xa1e, { 0xa8 });
        gbc.writeMem(0xacab, { 0x5e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x78b9, gbc.sp());
        EXPECT(0xacac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xacab));
        // 5E 006D
        gbc.setState(0x8fef, 0x2cae, 0x1ea0, 0x7972, 0x9c46, 0xd23d, 0x1, 0x0);
        gbc.writeMem(0x8fef, { 0x5e });
        gbc.writeMem(0xd23d, { 0x4 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x2cae, gbc.sp());
        EXPECT(0x8ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8fef));
        EXPECT(0x4, gbc.readMem(0xd23d));
        // 5E 006E
        gbc.setState(0x6b81, 0xd98e, 0x7990, 0x384e, 0x2cba, 0x1260, 0x1, 0x0);
        gbc.writeMem(0x1260, { 0x52 });
        gbc.writeMem(0x6b81, { 0x5e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd98e, gbc.sp());
        EXPECT(0x6b82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 006F
        gbc.setState(0x389a, 0x3523, 0x7120, 0x4cc4, 0x6606, 0xb55e, 0x0, 0x1);
        gbc.writeMem(0x389a, { 0x5e });
        gbc.writeMem(0xb55e, { 0xfc });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x3523, gbc.sp());
        EXPECT(0x389b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xb55e));
        // 5E 0070
        gbc.setState(0x3cd1, 0xc831, 0x5d60, 0xc22f, 0x9677, 0x3b77, 0x1, 0x1);
        gbc.writeMem(0x3b77, { 0x77 });
        gbc.writeMem(0x3cd1, { 0x5e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc831, gbc.sp());
        EXPECT(0x3cd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0071
        gbc.setState(0x2b25, 0xca1, 0x76f0, 0x97c7, 0x3e52, 0x1c39, 0x0, 0x1);
        gbc.writeMem(0x1c39, { 0xb0 });
        gbc.writeMem(0x2b25, { 0x5e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xca1, gbc.sp());
        EXPECT(0x2b26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0072
        gbc.setState(0xa7cd, 0xd44a, 0xf860, 0x9a9e, 0x1424, 0x3422, 0x1, 0x0);
        gbc.writeMem(0x3422, { 0x93 });
        gbc.writeMem(0xa7cd, { 0x5e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xd44a, gbc.sp());
        EXPECT(0xa7ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa7cd));
        // 5E 0073
        gbc.setState(0x2af8, 0xc0a2, 0x8510, 0x1995, 0xbc16, 0xb811, 0x0, 0x1);
        gbc.writeMem(0x2af8, { 0x5e });
        gbc.writeMem(0xb811, { 0x70 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc0a2, gbc.sp());
        EXPECT(0x2af9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0xb811));
        // 5E 0075
        gbc.setState(0xc3e5, 0x84de, 0x4620, 0x235c, 0x6299, 0x42ed, 0x0, 0x0);
        gbc.writeMem(0x42ed, { 0xa3 });
        gbc.writeMem(0xc3e5, { 0x5e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x84de, gbc.sp());
        EXPECT(0xc3e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc3e5));
        // 5E 0076
        gbc.setState(0xb003, 0x3e90, 0x8270, 0xf98f, 0xf89f, 0x7464, 0x1, 0x1);
        gbc.writeMem(0x7464, { 0x1c });
        gbc.writeMem(0xb003, { 0x5e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x3e90, gbc.sp());
        EXPECT(0xb004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb003));
        // 5E 0077
        gbc.setState(0x2ac1, 0x9a57, 0x4050, 0x3a8, 0x5212, 0x7c77, 0x1, 0x1);
        gbc.writeMem(0x2ac1, { 0x5e });
        gbc.writeMem(0x7c77, { 0xe5 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9a57, gbc.sp());
        EXPECT(0x2ac2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0078
        gbc.setState(0x4f21, 0xa89, 0x7990, 0xf6c5, 0x4584, 0xdcb, 0x0, 0x1);
        gbc.writeMem(0xdcb, { 0x6d });
        gbc.writeMem(0x4f21, { 0x5e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa89, gbc.sp());
        EXPECT(0x4f22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0079
        gbc.setState(0x33d7, 0x8099, 0x440, 0xffb9, 0xacb0, 0xa453, 0x0, 0x0);
        gbc.writeMem(0x33d7, { 0x5e });
        gbc.writeMem(0xa453, { 0x44 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8099, gbc.sp());
        EXPECT(0x33d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa453));
        // 5E 007B
        gbc.setState(0x2dfc, 0x57f8, 0xbff0, 0x17ac, 0xd410, 0xd3aa, 0x1, 0x1);
        gbc.writeMem(0x2dfc, { 0x5e });
        gbc.writeMem(0xd3aa, { 0x7f });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x57f8, gbc.sp());
        EXPECT(0x2dfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xd3aa));
        // 5E 007C
        gbc.setState(0x37, 0x91b2, 0x68a0, 0x416a, 0x785e, 0x7cbc, 0x1, 0x1);
        gbc.writeMem(0x37, { 0x5e });
        gbc.writeMem(0x7cbc, { 0x8d });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x91b2, gbc.sp());
        EXPECT(0x38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 007D
        gbc.setState(0x8114, 0xda87, 0x950, 0x1284, 0x37fb, 0xa47e, 0x0, 0x1);
        gbc.writeMem(0x8114, { 0x5e });
        gbc.writeMem(0xa47e, { 0x2d });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xda87, gbc.sp());
        EXPECT(0x8115, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8114));
        EXPECT(0x2d, gbc.readMem(0xa47e));
        // 5E 007E
        gbc.setState(0xe16c, 0xd4e8, 0x6a20, 0x134, 0x1c55, 0x1ce8, 0x0, 0x1);
        gbc.writeMem(0x1ce8, { 0x68 });
        gbc.writeMem(0xe16c, { 0x5e });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xd4e8, gbc.sp());
        EXPECT(0xe16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe16c));
        // 5E 007F
        gbc.setState(0x2af1, 0xb94, 0xa750, 0x2317, 0xcfca, 0x2d23, 0x0, 0x1);
        gbc.writeMem(0x2af1, { 0x5e });
        gbc.writeMem(0x2d23, { 0xfb });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xb94, gbc.sp());
        EXPECT(0x2af2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0080
        gbc.setState(0x4509, 0x7e85, 0x5390, 0x1b5e, 0xdff5, 0xbafa, 0x0, 0x0);
        gbc.writeMem(0x4509, { 0x5e });
        gbc.writeMem(0xbafa, { 0x6d });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7e85, gbc.sp());
        EXPECT(0x450a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xbafa));
        // 5E 0081
        gbc.setState(0x73ff, 0x831c, 0xd620, 0x39ab, 0x2924, 0x2f24, 0x0, 0x1);
        gbc.writeMem(0x2f24, { 0x33 });
        gbc.writeMem(0x73ff, { 0x5e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x831c, gbc.sp());
        EXPECT(0x7400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0082
        gbc.setState(0x4320, 0x8516, 0xd8e0, 0x121b, 0x1b59, 0xa80e, 0x0, 0x1);
        gbc.writeMem(0x4320, { 0x5e });
        gbc.writeMem(0xa80e, { 0xa2 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8516, gbc.sp());
        EXPECT(0x4321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xa80e));
        // 5E 0083
        gbc.setState(0x699e, 0xd13c, 0xf600, 0x7a1c, 0x6fbd, 0xfaba, 0x0, 0x0);
        gbc.writeMem(0x699e, { 0x5e });
        gbc.writeMem(0xfaba, { 0x13 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xd13c, gbc.sp());
        EXPECT(0x699f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xfaba));
        // 5E 0084
        gbc.setState(0x3ea5, 0x4d41, 0xe980, 0x16a3, 0xca55, 0x660f, 0x1, 0x0);
        gbc.writeMem(0x3ea5, { 0x5e });
        gbc.writeMem(0x660f, { 0x9 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x4d41, gbc.sp());
        EXPECT(0x3ea6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0085
        gbc.setState(0x4594, 0xe82b, 0x9bd0, 0xe01e, 0x288f, 0x5ee3, 0x1, 0x1);
        gbc.writeMem(0x4594, { 0x5e });
        gbc.writeMem(0x5ee3, { 0xcd });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe82b, gbc.sp());
        EXPECT(0x4595, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0086
        gbc.setState(0x5ad4, 0xed21, 0x90, 0xd2c8, 0xa798, 0xad37, 0x0, 0x1);
        gbc.writeMem(0x5ad4, { 0x5e });
        gbc.writeMem(0xad37, { 0x5b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xed21, gbc.sp());
        EXPECT(0x5ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xad37));
        // 5E 0087
        gbc.setState(0x339e, 0xd2ea, 0x58c0, 0x6817, 0x4cb2, 0x462d, 0x1, 0x0);
        gbc.writeMem(0x339e, { 0x5e });
        gbc.writeMem(0x462d, { 0x6b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd2ea, gbc.sp());
        EXPECT(0x339f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0088
        gbc.setState(0x2f47, 0x6fbd, 0x1010, 0xace, 0xb82d, 0x94b0, 0x0, 0x0);
        gbc.writeMem(0x2f47, { 0x5e });
        gbc.writeMem(0x94b0, { 0xb1 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x6fbd, gbc.sp());
        EXPECT(0x2f48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x94b0));
        // 5E 0089
        gbc.setState(0x3684, 0xc1da, 0xb510, 0xeda4, 0x706d, 0xa597, 0x0, 0x0);
        gbc.writeMem(0x3684, { 0x5e });
        gbc.writeMem(0xa597, { 0x1f });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc1da, gbc.sp());
        EXPECT(0x3685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xa597));
        // 5E 008A
        gbc.setState(0xb16e, 0xa52c, 0x4910, 0xc9cf, 0xda29, 0x9a72, 0x0, 0x0);
        gbc.writeMem(0x9a72, { 0x9e });
        gbc.writeMem(0xb16e, { 0x5e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xa52c, gbc.sp());
        EXPECT(0xb16f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9a72));
        EXPECT(0x5e, gbc.readMem(0xb16e));
        // 5E 008B
        gbc.setState(0x5edf, 0xf941, 0xef80, 0x430c, 0xd8b, 0xc1bc, 0x0, 0x1);
        gbc.writeMem(0x5edf, { 0x5e });
        gbc.writeMem(0xc1bc, { 0x24 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf941, gbc.sp());
        EXPECT(0x5ee0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xc1bc));
        // 5E 008C
        gbc.setState(0x1dbc, 0x4364, 0xdd60, 0xd0db, 0x7ae6, 0x8ff, 0x0, 0x1);
        gbc.writeMem(0x8ff, { 0x3f });
        gbc.writeMem(0x1dbc, { 0x5e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x4364, gbc.sp());
        EXPECT(0x1dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 008D
        gbc.setState(0x2ae0, 0x7348, 0x6210, 0x3e35, 0xdec5, 0x8da9, 0x0, 0x1);
        gbc.writeMem(0x2ae0, { 0x5e });
        gbc.writeMem(0x8da9, { 0xfd });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x7348, gbc.sp());
        EXPECT(0x2ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x8da9));
        // 5E 008E
        gbc.setState(0x8a79, 0xf331, 0x12f0, 0xb7b9, 0x4267, 0x38fd, 0x1, 0x0);
        gbc.writeMem(0x38fd, { 0x2e });
        gbc.writeMem(0x8a79, { 0x5e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xf331, gbc.sp());
        EXPECT(0x8a7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8a79));
        // 5E 008F
        gbc.setState(0x7c8b, 0x8937, 0x2b20, 0x2e39, 0x8df0, 0x14e7, 0x1, 0x1);
        gbc.writeMem(0x14e7, { 0x6c });
        gbc.writeMem(0x7c8b, { 0x5e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8937, gbc.sp());
        EXPECT(0x7c8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0090
        gbc.setState(0xa6c8, 0x6414, 0x40c0, 0x722d, 0x3b72, 0xd078, 0x1, 0x0);
        gbc.writeMem(0xa6c8, { 0x5e });
        gbc.writeMem(0xd078, { 0x6e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x6414, gbc.sp());
        EXPECT(0xa6c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa6c8));
        EXPECT(0x6e, gbc.readMem(0xd078));
        // 5E 0091
        gbc.setState(0xd675, 0xac51, 0x3680, 0xc58b, 0x2f46, 0xeff7, 0x0, 0x0);
        gbc.writeMem(0xd675, { 0x5e });
        gbc.writeMem(0xeff7, { 0x55 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xac51, gbc.sp());
        EXPECT(0xd676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd675));
        EXPECT(0x55, gbc.readMem(0xeff7));
        // 5E 0092
        gbc.setState(0x1800, 0xfc9c, 0x4bb0, 0xc1d4, 0x4d12, 0x2ab, 0x0, 0x0);
        gbc.writeMem(0x2ab, { 0x42 });
        gbc.writeMem(0x1800, { 0x5e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xfc9c, gbc.sp());
        EXPECT(0x1801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0093
        gbc.setState(0xc921, 0x2aaf, 0x1cf0, 0xa5ed, 0x9406, 0x7c6a, 0x0, 0x0);
        gbc.writeMem(0x7c6a, { 0x99 });
        gbc.writeMem(0xc921, { 0x5e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2aaf, gbc.sp());
        EXPECT(0xc922, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc921));
        // 5E 0094
        gbc.setState(0xe081, 0x3081, 0x39e0, 0xb5d6, 0x2cab, 0x8734, 0x0, 0x1);
        gbc.writeMem(0x8734, { 0x4b });
        gbc.writeMem(0xe081, { 0x5e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3081, gbc.sp());
        EXPECT(0xe082, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x8734));
        EXPECT(0x5e, gbc.readMem(0xe081));
        // 5E 0095
        gbc.setState(0x8c2a, 0x98b3, 0x1af0, 0xe2, 0xc8af, 0xa7ff, 0x1, 0x0);
        gbc.writeMem(0x8c2a, { 0x5e });
        gbc.writeMem(0xa7ff, { 0xb9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x98b3, gbc.sp());
        EXPECT(0x8c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8c2a));
        EXPECT(0xb9, gbc.readMem(0xa7ff));
        // 5E 0096
        gbc.setState(0x9321, 0x1be6, 0xff30, 0x33e2, 0xa8ff, 0x8578, 0x1, 0x0);
        gbc.writeMem(0x8578, { 0x91 });
        gbc.writeMem(0x9321, { 0x5e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1be6, gbc.sp());
        EXPECT(0x9322, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x8578));
        EXPECT(0x5e, gbc.readMem(0x9321));
        // 5E 0097
        gbc.setState(0x623c, 0x1736, 0xee60, 0xbe8e, 0x3a6e, 0xaf2c, 0x1, 0x0);
        gbc.writeMem(0x623c, { 0x5e });
        gbc.writeMem(0xaf2c, { 0xa5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1736, gbc.sp());
        EXPECT(0x623d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xaf2c));
        // 5E 0098
        gbc.setState(0x7ed5, 0xf720, 0x2020, 0xd513, 0x21f6, 0xbf41, 0x0, 0x0);
        gbc.writeMem(0x7ed5, { 0x5e });
        gbc.writeMem(0xbf41, { 0xa7 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf720, gbc.sp());
        EXPECT(0x7ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbf41));
        // 5E 0099
        gbc.setState(0x672a, 0x1a52, 0xea20, 0xa83f, 0x1f3c, 0xcd3a, 0x1, 0x1);
        gbc.writeMem(0x672a, { 0x5e });
        gbc.writeMem(0xcd3a, { 0xb7 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x1a52, gbc.sp());
        EXPECT(0x672b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xcd3a));
        // 5E 009A
        gbc.setState(0xb3ad, 0xcda7, 0x9110, 0xbbe4, 0x6d57, 0xda20, 0x1, 0x0);
        gbc.writeMem(0xb3ad, { 0x5e });
        gbc.writeMem(0xda20, { 0xbd });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xcda7, gbc.sp());
        EXPECT(0xb3ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb3ad));
        EXPECT(0xbd, gbc.readMem(0xda20));
        // 5E 009B
        gbc.setState(0x3063, 0x30d2, 0x8720, 0x7480, 0x9a69, 0x6855, 0x1, 0x0);
        gbc.writeMem(0x3063, { 0x5e });
        gbc.writeMem(0x6855, { 0xa });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x30d2, gbc.sp());
        EXPECT(0x3064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 009C
        gbc.setState(0x3ba3, 0xd9f7, 0xed40, 0x9b93, 0xda7b, 0x477c, 0x0, 0x1);
        gbc.writeMem(0x3ba3, { 0x5e });
        gbc.writeMem(0x477c, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xd9f7, gbc.sp());
        EXPECT(0x3ba4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 009D
        gbc.setState(0x2f5e, 0xd180, 0x8cd0, 0x90e4, 0x895e, 0x8fd3, 0x0, 0x1);
        gbc.writeMem(0x2f5e, { 0x5e });
        gbc.writeMem(0x8fd3, { 0x53 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd180, gbc.sp());
        EXPECT(0x2f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x8fd3));
        // 5E 009E
        gbc.setState(0xa472, 0xf72a, 0x200, 0x57a1, 0x3849, 0xbc6a, 0x0, 0x1);
        gbc.writeMem(0xa472, { 0x5e });
        gbc.writeMem(0xbc6a, { 0xa9 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf72a, gbc.sp());
        EXPECT(0xa473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa472));
        EXPECT(0xa9, gbc.readMem(0xbc6a));
        // 5E 009F
        gbc.setState(0x1579, 0x4da7, 0x2fa0, 0xc875, 0x822a, 0xa0b3, 0x1, 0x0);
        gbc.writeMem(0x1579, { 0x5e });
        gbc.writeMem(0xa0b3, { 0x56 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4da7, gbc.sp());
        EXPECT(0x157a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xa0b3));
        // 5E 00A0
        gbc.setState(0x2e58, 0x3181, 0xe050, 0x7403, 0x75cc, 0xb185, 0x1, 0x0);
        gbc.writeMem(0x2e58, { 0x5e });
        gbc.writeMem(0xb185, { 0x2b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x3181, gbc.sp());
        EXPECT(0x2e59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb185));
        // 5E 00A1
        gbc.setState(0xbc40, 0x5f58, 0xb020, 0x951f, 0x3890, 0x4e90, 0x1, 0x1);
        gbc.writeMem(0x4e90, { 0x70 });
        gbc.writeMem(0xbc40, { 0x5e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x5f58, gbc.sp());
        EXPECT(0xbc41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbc40));
        // 5E 00A2
        gbc.setState(0xa2fa, 0x473c, 0x87b0, 0x2613, 0x51db, 0xda6a, 0x1, 0x0);
        gbc.writeMem(0xa2fa, { 0x5e });
        gbc.writeMem(0xda6a, { 0x2 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x473c, gbc.sp());
        EXPECT(0xa2fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa2fa));
        EXPECT(0x2, gbc.readMem(0xda6a));
        // 5E 00A3
        gbc.setState(0xec6b, 0x6b33, 0x3e20, 0x4b8f, 0x5211, 0xcc12, 0x0, 0x1);
        gbc.writeMem(0xcc12, { 0xa2 });
        gbc.writeMem(0xec6b, { 0x5e });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x6b33, gbc.sp());
        EXPECT(0xec6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xcc12));
        EXPECT(0x5e, gbc.readMem(0xec6b));
        // 5E 00A4
        gbc.setState(0xebb6, 0x51fa, 0xf050, 0x56cc, 0xcab7, 0xf5cd, 0x1, 0x1);
        gbc.writeMem(0xebb6, { 0x5e });
        gbc.writeMem(0xf5cd, { 0xed });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x51fa, gbc.sp());
        EXPECT(0xebb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xebb6));
        EXPECT(0xed, gbc.readMem(0xf5cd));
        // 5E 00A5
        gbc.setState(0x36a8, 0xcedc, 0x8b40, 0x53d1, 0x1896, 0x80f1, 0x0, 0x1);
        gbc.writeMem(0x36a8, { 0x5e });
        gbc.writeMem(0x80f1, { 0xdb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcedc, gbc.sp());
        EXPECT(0x36a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x80f1));
        // 5E 00A6
        gbc.setState(0x6c75, 0x8c8d, 0xfb90, 0x66b3, 0x45ee, 0xdec1, 0x0, 0x0);
        gbc.writeMem(0x6c75, { 0x5e });
        gbc.writeMem(0xdec1, { 0xa6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8c8d, gbc.sp());
        EXPECT(0x6c76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xdec1));
        // 5E 00A7
        gbc.setState(0x9d3b, 0xf9b8, 0x9280, 0xe538, 0x5de7, 0x409e, 0x1, 0x0);
        gbc.writeMem(0x409e, { 0xc2 });
        gbc.writeMem(0x9d3b, { 0x5e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf9b8, gbc.sp());
        EXPECT(0x9d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9d3b));
        // 5E 00A8
        gbc.setState(0xeb95, 0x8ca0, 0xe50, 0x2261, 0x3bf7, 0xb21c, 0x0, 0x1);
        gbc.writeMem(0xb21c, { 0x43 });
        gbc.writeMem(0xeb95, { 0x5e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8ca0, gbc.sp());
        EXPECT(0xeb96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xb21c));
        EXPECT(0x5e, gbc.readMem(0xeb95));
        // 5E 00A9
        gbc.setState(0xb553, 0xb994, 0xce50, 0xe2d0, 0x988c, 0xfe1f, 0x0, 0x1);
        gbc.writeMem(0xb553, { 0x5e });
        gbc.writeMem(0xfe1f, { 0xb1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb994, gbc.sp());
        EXPECT(0xb554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb553));
        EXPECT(0xb1, gbc.readMem(0xfe1f));
        // 5E 00AA
        gbc.setState(0x18b0, 0xae83, 0x4d90, 0x2b8b, 0x5cf9, 0x8316, 0x1, 0x0);
        gbc.writeMem(0x18b0, { 0x5e });
        gbc.writeMem(0x8316, { 0xda });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xae83, gbc.sp());
        EXPECT(0x18b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8316));
        // 5E 00AB
        gbc.setState(0x14cc, 0xe0e8, 0x7f70, 0x280c, 0x6703, 0xd353, 0x1, 0x1);
        gbc.writeMem(0x14cc, { 0x5e });
        gbc.writeMem(0xd353, { 0x11 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe0e8, gbc.sp());
        EXPECT(0x14cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xd353));
        // 5E 00AC
        gbc.setState(0x57e0, 0xfa15, 0x3dd0, 0x12f3, 0x38eb, 0xff89, 0x0, 0x0);
        gbc.writeMem(0x57e0, { 0x5e });
        gbc.writeMem(0xff89, { 0xd });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xfa15, gbc.sp());
        EXPECT(0x57e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xff89));
        // 5E 00AD
        gbc.setState(0x1e99, 0xa0db, 0x5b30, 0xd478, 0xdd50, 0xcd9b, 0x1, 0x0);
        gbc.writeMem(0x1e99, { 0x5e });
        gbc.writeMem(0xcd9b, { 0xc6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa0db, gbc.sp());
        EXPECT(0x1e9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xcd9b));
        // 5E 00AE
        gbc.setState(0x584, 0xf3a6, 0xc300, 0x3ade, 0x5755, 0x3edb, 0x0, 0x1);
        gbc.writeMem(0x584, { 0x5e });
        gbc.writeMem(0x3edb, { 0x6d });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xf3a6, gbc.sp());
        EXPECT(0x585, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00AF
        gbc.setState(0x7019, 0xc7a8, 0x6e70, 0xb050, 0x4791, 0xbb35, 0x0, 0x1);
        gbc.writeMem(0x7019, { 0x5e });
        gbc.writeMem(0xbb35, { 0x81 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc7a8, gbc.sp());
        EXPECT(0x701a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xbb35));
        // 5E 00B1
        gbc.setState(0x5362, 0xde6c, 0x5100, 0x1338, 0x44ac, 0x4455, 0x0, 0x1);
        gbc.writeMem(0x4455, { 0xed });
        gbc.writeMem(0x5362, { 0x5e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xde6c, gbc.sp());
        EXPECT(0x5363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00B2
        gbc.setState(0xc6b6, 0x9cb5, 0x1620, 0xeca, 0x69e6, 0xdd74, 0x1, 0x0);
        gbc.writeMem(0xc6b6, { 0x5e });
        gbc.writeMem(0xdd74, { 0x20 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9cb5, gbc.sp());
        EXPECT(0xc6b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc6b6));
        EXPECT(0x20, gbc.readMem(0xdd74));
        // 5E 00B3
        gbc.setState(0x993, 0xc84b, 0xaa90, 0x1bf9, 0x9caf, 0xae26, 0x1, 0x0);
        gbc.writeMem(0x993, { 0x5e });
        gbc.writeMem(0xae26, { 0x13 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc84b, gbc.sp());
        EXPECT(0x994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xae26));
        // 5E 00B4
        gbc.setState(0xd5d2, 0xfdc4, 0x5820, 0x171e, 0xfae0, 0x4a73, 0x0, 0x0);
        gbc.writeMem(0x4a73, { 0x17 });
        gbc.writeMem(0xd5d2, { 0x5e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfdc4, gbc.sp());
        EXPECT(0xd5d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd5d2));
        // 5E 00B5
        gbc.setState(0x728f, 0xb802, 0xba80, 0x9880, 0xfd7e, 0x69ce, 0x1, 0x1);
        gbc.writeMem(0x69ce, { 0xed });
        gbc.writeMem(0x728f, { 0x5e });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb802, gbc.sp());
        EXPECT(0x7290, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00B6
        gbc.setState(0xd470, 0x9de3, 0x2c60, 0x9a9f, 0x64c5, 0x9fb0, 0x0, 0x1);
        gbc.writeMem(0x9fb0, { 0x15 });
        gbc.writeMem(0xd470, { 0x5e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9de3, gbc.sp());
        EXPECT(0xd471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9fb0));
        EXPECT(0x5e, gbc.readMem(0xd470));
        // 5E 00B7
        gbc.setState(0x15bb, 0x46a7, 0x43b0, 0xf66a, 0xa57d, 0xb306, 0x0, 0x0);
        gbc.writeMem(0x15bb, { 0x5e });
        gbc.writeMem(0xb306, { 0xad });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x46a7, gbc.sp());
        EXPECT(0x15bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xb306));
        // 5E 00B8
        gbc.setState(0x266d, 0xc4e3, 0xee50, 0x86ca, 0x6bdf, 0x77b4, 0x0, 0x0);
        gbc.writeMem(0x266d, { 0x5e });
        gbc.writeMem(0x77b4, { 0xee });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc4e3, gbc.sp());
        EXPECT(0x266e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 00B9
        gbc.setState(0x20a2, 0xa8ef, 0x95b0, 0xaa87, 0x7dc2, 0x5261, 0x1, 0x1);
        gbc.writeMem(0x20a2, { 0x5e });
        gbc.writeMem(0x5261, { 0xd8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xa8ef, gbc.sp());
        EXPECT(0x20a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 00BA
        gbc.setState(0x1306, 0xd6d8, 0x8500, 0x382c, 0xcb98, 0x2c40, 0x0, 0x1);
        gbc.writeMem(0x1306, { 0x5e });
        gbc.writeMem(0x2c40, { 0x7 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xd6d8, gbc.sp());
        EXPECT(0x1307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00BB
        gbc.setState(0xd890, 0xf105, 0x8aa0, 0xe8a3, 0x8c77, 0x606f, 0x1, 0x1);
        gbc.writeMem(0x606f, { 0x71 });
        gbc.writeMem(0xd890, { 0x5e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xf105, gbc.sp());
        EXPECT(0xd891, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd890));
        // 5E 00BC
        gbc.setState(0xe490, 0xc75a, 0x8ea0, 0xda95, 0x2681, 0x5d40, 0x1, 0x1);
        gbc.writeMem(0x5d40, { 0xa3 });
        gbc.writeMem(0xe490, { 0x5e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc75a, gbc.sp());
        EXPECT(0xe491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe490));
        // 5E 00BD
        gbc.setState(0x111e, 0xe583, 0xccd0, 0xf150, 0x1dea, 0x237d, 0x1, 0x1);
        gbc.writeMem(0x111e, { 0x5e });
        gbc.writeMem(0x237d, { 0x57 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe583, gbc.sp());
        EXPECT(0x111f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 00BE
        gbc.setState(0xe24d, 0x8dec, 0x3070, 0x7a6a, 0xbc40, 0x9308, 0x0, 0x0);
        gbc.writeMem(0x9308, { 0x97 });
        gbc.writeMem(0xe24d, { 0x5e });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x8dec, gbc.sp());
        EXPECT(0xe24e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x9308));
        EXPECT(0x5e, gbc.readMem(0xe24d));
        // 5E 00BF
        gbc.setState(0x9c6c, 0x155d, 0xff80, 0x3791, 0xd4bf, 0x6f8b, 0x0, 0x0);
        gbc.writeMem(0x6f8b, { 0x76 });
        gbc.writeMem(0x9c6c, { 0x5e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x155d, gbc.sp());
        EXPECT(0x9c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9c6c));
        // 5E 00C0
        gbc.setState(0x4514, 0x1aa7, 0x15b0, 0xf34c, 0x928b, 0xdba3, 0x0, 0x1);
        gbc.writeMem(0x4514, { 0x5e });
        gbc.writeMem(0xdba3, { 0xdf });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1aa7, gbc.sp());
        EXPECT(0x4515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xdba3));
        // 5E 00C1
        gbc.setState(0x4205, 0x30f2, 0x220, 0xffc9, 0x6a75, 0x2544, 0x0, 0x1);
        gbc.writeMem(0x2544, { 0xb8 });
        gbc.writeMem(0x4205, { 0x5e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x30f2, gbc.sp());
        EXPECT(0x4206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00C2
        gbc.setState(0x3e74, 0x9e78, 0xb6e0, 0xe6c2, 0x328b, 0x209d, 0x0, 0x1);
        gbc.writeMem(0x209d, { 0x79 });
        gbc.writeMem(0x3e74, { 0x5e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x9e78, gbc.sp());
        EXPECT(0x3e75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00C3
        gbc.setState(0xab8b, 0x1f21, 0x3620, 0x8981, 0xef19, 0xd89c, 0x1, 0x0);
        gbc.writeMem(0xab8b, { 0x5e });
        gbc.writeMem(0xd89c, { 0xdb });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x1f21, gbc.sp());
        EXPECT(0xab8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xab8b));
        EXPECT(0xdb, gbc.readMem(0xd89c));
        // 5E 00C4
        gbc.setState(0xe6d2, 0x70ff, 0x5a10, 0x1187, 0xc353, 0x740e, 0x0, 0x1);
        gbc.writeMem(0x740e, { 0x63 });
        gbc.writeMem(0xe6d2, { 0x5e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x70ff, gbc.sp());
        EXPECT(0xe6d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe6d2));
        // 5E 00C5
        gbc.setState(0x1c58, 0x6a4c, 0x16f0, 0x1c19, 0xace2, 0xb60b, 0x0, 0x1);
        gbc.writeMem(0x1c58, { 0x5e });
        gbc.writeMem(0xb60b, { 0x59 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6a4c, gbc.sp());
        EXPECT(0x1c59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xb60b));
        // 5E 00C6
        gbc.setState(0x6fda, 0xfe42, 0xa0e0, 0xc40e, 0x4c0f, 0x189c, 0x1, 0x1);
        gbc.writeMem(0x189c, { 0xb2 });
        gbc.writeMem(0x6fda, { 0x5e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xfe42, gbc.sp());
        EXPECT(0x6fdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00C7
        gbc.setState(0xeca3, 0xcae0, 0x9540, 0xa6c6, 0xff3f, 0x5380, 0x0, 0x1);
        gbc.writeMem(0x5380, { 0xc5 });
        gbc.writeMem(0xeca3, { 0x5e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xcae0, gbc.sp());
        EXPECT(0xeca4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xeca3));
        // 5E 00C8
        gbc.setState(0xa35a, 0x320, 0xfb0, 0x8226, 0xf67d, 0x347e, 0x0, 0x0);
        gbc.writeMem(0x347e, { 0xa1 });
        gbc.writeMem(0xa35a, { 0x5e });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x320, gbc.sp());
        EXPECT(0xa35b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa35a));
        // 5E 00C9
        gbc.setState(0x695a, 0x2810, 0x73d0, 0xd077, 0xd2a0, 0x2e85, 0x1, 0x0);
        gbc.writeMem(0x2e85, { 0xe1 });
        gbc.writeMem(0x695a, { 0x5e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x2810, gbc.sp());
        EXPECT(0x695b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 00CA
        gbc.setState(0x1809, 0xcc33, 0x6660, 0xe305, 0x17d9, 0x88a5, 0x1, 0x0);
        gbc.writeMem(0x1809, { 0x5e });
        gbc.writeMem(0x88a5, { 0x4 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xcc33, gbc.sp());
        EXPECT(0x180a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x88a5));
        // 5E 00CB
        gbc.setState(0x4045, 0x7013, 0x6240, 0x1ba5, 0xa797, 0x8ee4, 0x0, 0x1);
        gbc.writeMem(0x4045, { 0x5e });
        gbc.writeMem(0x8ee4, { 0x51 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7013, gbc.sp());
        EXPECT(0x4046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0x8ee4));
        // 5E 00CC
        gbc.setState(0x7a1e, 0x8a78, 0xded0, 0xae18, 0xf87, 0x7da8, 0x0, 0x1);
        gbc.writeMem(0x7a1e, { 0x5e });
        gbc.writeMem(0x7da8, { 0xf8 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8a78, gbc.sp());
        EXPECT(0x7a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 00CD
        gbc.setState(0xe33f, 0x6ab, 0xe1f0, 0xe59c, 0x8491, 0x20cf, 0x0, 0x0);
        gbc.writeMem(0x20cf, { 0xa });
        gbc.writeMem(0xe33f, { 0x5e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6ab, gbc.sp());
        EXPECT(0xe340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe33f));
        // 5E 00CE
        gbc.setState(0x68d5, 0x4828, 0xf320, 0xcfaa, 0xbe50, 0x7088, 0x1, 0x0);
        gbc.writeMem(0x68d5, { 0x5e });
        gbc.writeMem(0x7088, { 0x34 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4828, gbc.sp());
        EXPECT(0x68d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00CF
        gbc.setState(0x96a8, 0x64be, 0x2b20, 0xbe5f, 0x78b0, 0x1904, 0x1, 0x0);
        gbc.writeMem(0x1904, { 0x82 });
        gbc.writeMem(0x96a8, { 0x5e });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x64be, gbc.sp());
        EXPECT(0x96a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x96a8));
        // 5E 00D0
        gbc.setState(0xd71b, 0x7cc6, 0xdb0, 0x417, 0x2bdd, 0x1bee, 0x1, 0x1);
        gbc.writeMem(0x1bee, { 0xe5 });
        gbc.writeMem(0xd71b, { 0x5e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7cc6, gbc.sp());
        EXPECT(0xd71c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd71b));
        // 5E 00D1
        gbc.setState(0x9c02, 0xbdcb, 0xeda0, 0xf91d, 0x3061, 0xa0bb, 0x1, 0x0);
        gbc.writeMem(0x9c02, { 0x5e });
        gbc.writeMem(0xa0bb, { 0x49 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbdcb, gbc.sp());
        EXPECT(0x9c03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9c02));
        EXPECT(0x49, gbc.readMem(0xa0bb));
        // 5E 00D2
        gbc.setState(0x7455, 0x68bc, 0x5b60, 0xa570, 0x76f0, 0x7de, 0x0, 0x1);
        gbc.writeMem(0x7de, { 0x15 });
        gbc.writeMem(0x7455, { 0x5e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x68bc, gbc.sp());
        EXPECT(0x7456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00D3
        gbc.setState(0x737e, 0x9725, 0xdfb0, 0xc856, 0x6b, 0xc040, 0x1, 0x0);
        gbc.writeMem(0x737e, { 0x5e });
        gbc.writeMem(0xc040, { 0xb9 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9725, gbc.sp());
        EXPECT(0x737f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xc040));
        // 5E 00D4
        gbc.setState(0x1ee8, 0xe67, 0x3370, 0xe7ce, 0xfce8, 0x5e96, 0x0, 0x1);
        gbc.writeMem(0x1ee8, { 0x5e });
        gbc.writeMem(0x5e96, { 0xb1 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xe67, gbc.sp());
        EXPECT(0x1ee9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 00D5
        gbc.setState(0xc696, 0xad76, 0x1a50, 0x11a2, 0xd8dc, 0x6ef8, 0x1, 0x0);
        gbc.writeMem(0x6ef8, { 0x7e });
        gbc.writeMem(0xc696, { 0x5e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xad76, gbc.sp());
        EXPECT(0xc697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc696));
        // 5E 00D6
        gbc.setState(0xe5fd, 0xf0fb, 0xf1f0, 0x37b7, 0xf2cd, 0xbb2a, 0x0, 0x1);
        gbc.writeMem(0xbb2a, { 0x51 });
        gbc.writeMem(0xe5fd, { 0x5e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xf0fb, gbc.sp());
        EXPECT(0xe5fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xbb2a));
        EXPECT(0x5e, gbc.readMem(0xe5fd));
        // 5E 00D7
        gbc.setState(0xd2cd, 0x5551, 0x4060, 0xa9ea, 0x737, 0xa45c, 0x0, 0x1);
        gbc.writeMem(0xa45c, { 0xdf });
        gbc.writeMem(0xd2cd, { 0x5e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x5551, gbc.sp());
        EXPECT(0xd2ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xa45c));
        EXPECT(0x5e, gbc.readMem(0xd2cd));
        // 5E 00D9
        gbc.setState(0x2ecd, 0x640d, 0x33b0, 0x11f0, 0x3337, 0x279d, 0x0, 0x0);
        gbc.writeMem(0x279d, { 0xef });
        gbc.writeMem(0x2ecd, { 0x5e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x640d, gbc.sp());
        EXPECT(0x2ece, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 00DA
        gbc.setState(0x55d9, 0x4258, 0x4c60, 0xefde, 0xf1c6, 0x4ede, 0x0, 0x1);
        gbc.writeMem(0x4ede, { 0x73 });
        gbc.writeMem(0x55d9, { 0x5e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x4258, gbc.sp());
        EXPECT(0x55da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00DB
        gbc.setState(0x6907, 0x60f2, 0x2d00, 0x7137, 0xc5d, 0x577e, 0x0, 0x1);
        gbc.writeMem(0x577e, { 0x3c });
        gbc.writeMem(0x6907, { 0x5e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x60f2, gbc.sp());
        EXPECT(0x6908, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00DC
        gbc.setState(0xe721, 0x5fd, 0x8ba0, 0x3563, 0x4a45, 0x4dd0, 0x1, 0x0);
        gbc.writeMem(0x4dd0, { 0xde });
        gbc.writeMem(0xe721, { 0x5e });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x5fd, gbc.sp());
        EXPECT(0xe722, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe721));
        // 5E 00DD
        gbc.setState(0x81c5, 0x24ce, 0x1c0, 0x7e1, 0xc953, 0x4661, 0x1, 0x0);
        gbc.writeMem(0x4661, { 0x71 });
        gbc.writeMem(0x81c5, { 0x5e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x24ce, gbc.sp());
        EXPECT(0x81c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x81c5));
        // 5E 00DE
        gbc.setState(0x173c, 0xd0e9, 0xed80, 0xd1a3, 0xf79d, 0xd7e2, 0x1, 0x1);
        gbc.writeMem(0x173c, { 0x5e });
        gbc.writeMem(0xd7e2, { 0xe6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd0e9, gbc.sp());
        EXPECT(0x173d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xd7e2));
        // 5E 00DF
        gbc.setState(0x163d, 0xedc4, 0x8790, 0x5576, 0x5ddf, 0xc6a7, 0x0, 0x1);
        gbc.writeMem(0x163d, { 0x5e });
        gbc.writeMem(0xc6a7, { 0x3c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xedc4, gbc.sp());
        EXPECT(0x163e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xc6a7));
        // 5E 00E0
        gbc.setState(0x4dfb, 0x372e, 0xc8e0, 0x1423, 0x9d96, 0x13cc, 0x1, 0x0);
        gbc.writeMem(0x13cc, { 0x7b });
        gbc.writeMem(0x4dfb, { 0x5e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x372e, gbc.sp());
        EXPECT(0x4dfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00E1
        gbc.setState(0x20bb, 0x6b25, 0xf30, 0xd520, 0x8d74, 0xd354, 0x1, 0x0);
        gbc.writeMem(0x20bb, { 0x5e });
        gbc.writeMem(0xd354, { 0xb9 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6b25, gbc.sp());
        EXPECT(0x20bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xd354));
        // 5E 00E2
        gbc.setState(0xd4b7, 0x4b09, 0x1170, 0xaab0, 0x2b4a, 0x72b6, 0x1, 0x1);
        gbc.writeMem(0x72b6, { 0xef });
        gbc.writeMem(0xd4b7, { 0x5e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4b09, gbc.sp());
        EXPECT(0xd4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd4b7));
        // 5E 00E3
        gbc.setState(0x533f, 0x61b6, 0x7e20, 0x1d57, 0xdeb1, 0xe88c, 0x1, 0x0);
        gbc.writeMem(0x533f, { 0x5e });
        gbc.writeMem(0xe88c, { 0xa4 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x61b6, gbc.sp());
        EXPECT(0x5340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xe88c));
        // 5E 00E4
        gbc.setState(0x740c, 0x4263, 0x36d0, 0x7d87, 0x9cf2, 0x461f, 0x0, 0x1);
        gbc.writeMem(0x461f, { 0xd7 });
        gbc.writeMem(0x740c, { 0x5e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4263, gbc.sp());
        EXPECT(0x740d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 00E5
        gbc.setState(0x3f46, 0xd92f, 0xc510, 0xad9e, 0x15bc, 0xc7c9, 0x0, 0x1);
        gbc.writeMem(0x3f46, { 0x5e });
        gbc.writeMem(0xc7c9, { 0x55 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd92f, gbc.sp());
        EXPECT(0x3f47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc7c9));
        // 5E 00E6
        gbc.setState(0x59c7, 0xcd53, 0x2150, 0xd97a, 0x1df7, 0x4cfe, 0x1, 0x1);
        gbc.writeMem(0x4cfe, { 0xea });
        gbc.writeMem(0x59c7, { 0x5e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xcd53, gbc.sp());
        EXPECT(0x59c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 00E7
        gbc.setState(0x87ab, 0x3974, 0xd4c0, 0x2c85, 0x5f03, 0x8ba5, 0x1, 0x0);
        gbc.writeMem(0x87ab, { 0x5e });
        gbc.writeMem(0x8ba5, { 0xe5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x3974, gbc.sp());
        EXPECT(0x87ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x87ab));
        EXPECT(0xe5, gbc.readMem(0x8ba5));
        // 5E 00E8
        gbc.setState(0xa06c, 0xb34b, 0xd720, 0x1b04, 0xce90, 0xaf16, 0x0, 0x0);
        gbc.writeMem(0xa06c, { 0x5e });
        gbc.writeMem(0xaf16, { 0x72 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb34b, gbc.sp());
        EXPECT(0xa06d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa06c));
        EXPECT(0x72, gbc.readMem(0xaf16));
        // 5E 00EA
        gbc.setState(0xd37f, 0xbeb8, 0x3600, 0x64ba, 0x1b2, 0x5ad4, 0x1, 0x0);
        gbc.writeMem(0x5ad4, { 0xee });
        gbc.writeMem(0xd37f, { 0x5e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xbeb8, gbc.sp());
        EXPECT(0xd380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd37f));
        // 5E 00EB
        gbc.setState(0x6f71, 0xe063, 0x1480, 0x3b08, 0x1ae9, 0xc8cb, 0x0, 0x1);
        gbc.writeMem(0x6f71, { 0x5e });
        gbc.writeMem(0xc8cb, { 0x8d });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xe063, gbc.sp());
        EXPECT(0x6f72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc8cb));
        // 5E 00EC
        gbc.setState(0xc829, 0x9485, 0xceb0, 0x26a, 0x4bd6, 0x157, 0x1, 0x0);
        gbc.writeMem(0x157, { 0x8 });
        gbc.writeMem(0xc829, { 0x5e });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9485, gbc.sp());
        EXPECT(0xc82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc829));
        // 5E 00ED
        gbc.setState(0x2165, 0x26ca, 0xb1e0, 0xd110, 0xca03, 0x9492, 0x0, 0x0);
        gbc.writeMem(0x2165, { 0x5e });
        gbc.writeMem(0x9492, { 0xf5 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x26ca, gbc.sp());
        EXPECT(0x2166, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0x9492));
        // 5E 00EE
        gbc.setState(0x6b4d, 0x33ac, 0x6480, 0x24c0, 0x40f9, 0x33d, 0x0, 0x1);
        gbc.writeMem(0x33d, { 0x7b });
        gbc.writeMem(0x6b4d, { 0x5e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x33ac, gbc.sp());
        EXPECT(0x6b4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00EF
        gbc.setState(0xb68e, 0xda81, 0xf3b0, 0x8e44, 0xb87, 0xd816, 0x1, 0x1);
        gbc.writeMem(0xb68e, { 0x5e });
        gbc.writeMem(0xd816, { 0xf7 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xda81, gbc.sp());
        EXPECT(0xb68f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb68e));
        EXPECT(0xf7, gbc.readMem(0xd816));
        // 5E 00F0
        gbc.setState(0xced8, 0xff32, 0x4970, 0x20d8, 0x968f, 0x3927, 0x0, 0x0);
        gbc.writeMem(0x3927, { 0x92 });
        gbc.writeMem(0xced8, { 0x5e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xff32, gbc.sp());
        EXPECT(0xced9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xced8));
        // 5E 00F1
        gbc.setState(0xec3, 0x23a6, 0x8020, 0x87c4, 0xc38d, 0x7f6, 0x0, 0x1);
        gbc.writeMem(0x7f6, { 0x5f });
        gbc.writeMem(0xec3, { 0x5e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x23a6, gbc.sp());
        EXPECT(0xec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00F2
        gbc.setState(0x8081, 0x478f, 0xd9c0, 0x1cf4, 0xa888, 0x9fe4, 0x1, 0x1);
        gbc.writeMem(0x8081, { 0x5e });
        gbc.writeMem(0x9fe4, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x478f, gbc.sp());
        EXPECT(0x8082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8081));
        EXPECT(0x0, gbc.readMem(0x9fe4));
        // 5E 00F3
        gbc.setState(0xe683, 0x9dc1, 0xd740, 0xb746, 0x58a, 0x7fd0, 0x1, 0x1);
        gbc.writeMem(0x7fd0, { 0xfb });
        gbc.writeMem(0xe683, { 0x5e });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x9dc1, gbc.sp());
        EXPECT(0xe684, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe683));
        // 5E 00F4
        gbc.setState(0xb0d5, 0x207b, 0xe100, 0x626b, 0xbc17, 0x80f5, 0x0, 0x0);
        gbc.writeMem(0x80f5, { 0x3 });
        gbc.writeMem(0xb0d5, { 0x5e });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x207b, gbc.sp());
        EXPECT(0xb0d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x80f5));
        EXPECT(0x5e, gbc.readMem(0xb0d5));
        // 5E 00F5
        gbc.setState(0x8eee, 0x49cb, 0x6650, 0xee73, 0x2a3, 0x566b, 0x0, 0x1);
        gbc.writeMem(0x566b, { 0x7 });
        gbc.writeMem(0x8eee, { 0x5e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x49cb, gbc.sp());
        EXPECT(0x8eef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8eee));
        // 5E 00F6
        gbc.setState(0x8a8a, 0x65b2, 0x980, 0x2fb2, 0x5df3, 0xfba0, 0x1, 0x1);
        gbc.writeMem(0x8a8a, { 0x5e });
        gbc.writeMem(0xfba0, { 0x4a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x65b2, gbc.sp());
        EXPECT(0x8a8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8a8a));
        EXPECT(0x4a, gbc.readMem(0xfba0));
        // 5E 00F7
        gbc.setState(0xc3b5, 0x4b4e, 0xef30, 0xa87e, 0xf45f, 0x1027, 0x0, 0x1);
        gbc.writeMem(0x1027, { 0x58 });
        gbc.writeMem(0xc3b5, { 0x5e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4b4e, gbc.sp());
        EXPECT(0xc3b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc3b5));
        // 5E 00F9
        gbc.setState(0xd790, 0xe37b, 0x5970, 0x1a89, 0x867f, 0x9161, 0x0, 0x1);
        gbc.writeMem(0x9161, { 0xb9 });
        gbc.writeMem(0xd790, { 0x5e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe37b, gbc.sp());
        EXPECT(0xd791, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x9161));
        EXPECT(0x5e, gbc.readMem(0xd790));
        // 5E 00FA
        gbc.setState(0xcdf2, 0xa579, 0x3f50, 0x2a67, 0xe69, 0x9a1e, 0x0, 0x0);
        gbc.writeMem(0x9a1e, { 0xf8 });
        gbc.writeMem(0xcdf2, { 0x5e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa579, gbc.sp());
        EXPECT(0xcdf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x9a1e));
        EXPECT(0x5e, gbc.readMem(0xcdf2));
        // 5E 00FB
        gbc.setState(0x811c, 0xc8b5, 0xabd0, 0xe42c, 0x29df, 0xd39a, 0x0, 0x1);
        gbc.writeMem(0x811c, { 0x5e });
        gbc.writeMem(0xd39a, { 0xa7 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc8b5, gbc.sp());
        EXPECT(0x811d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x811c));
        EXPECT(0xa7, gbc.readMem(0xd39a));
        // 5E 00FC
        gbc.setState(0x736e, 0x52c2, 0xdbf0, 0xb54f, 0xd292, 0x8967, 0x0, 0x1);
        gbc.writeMem(0x736e, { 0x5e });
        gbc.writeMem(0x8967, { 0x93 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x52c2, gbc.sp());
        EXPECT(0x736f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8967));
        // 5E 00FD
        gbc.setState(0x7394, 0xc4d9, 0xd740, 0x9ff6, 0x135a, 0x18e4, 0x1, 0x0);
        gbc.writeMem(0x18e4, { 0x29 });
        gbc.writeMem(0x7394, { 0x5e });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc4d9, gbc.sp());
        EXPECT(0x7395, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 00FE
        gbc.setState(0xcd41, 0x1825, 0x1910, 0x2cc5, 0xcd3d, 0x78e2, 0x0, 0x0);
        gbc.writeMem(0x78e2, { 0xd2 });
        gbc.writeMem(0xcd41, { 0x5e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x1825, gbc.sp());
        EXPECT(0xcd42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcd41));
        // 5E 00FF
        gbc.setState(0xd793, 0x84, 0xee0, 0xb6e6, 0xfc76, 0xb1ac, 0x0, 0x0);
        gbc.writeMem(0xb1ac, { 0x88 });
        gbc.writeMem(0xd793, { 0x5e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x84, gbc.sp());
        EXPECT(0xd794, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb1ac));
        EXPECT(0x5e, gbc.readMem(0xd793));
        // 5E 0100
        gbc.setState(0xca1a, 0xfb63, 0x2ef0, 0xed12, 0x37fd, 0xbb61, 0x0, 0x1);
        gbc.writeMem(0xbb61, { 0x9e });
        gbc.writeMem(0xca1a, { 0x5e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfb63, gbc.sp());
        EXPECT(0xca1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xbb61));
        EXPECT(0x5e, gbc.readMem(0xca1a));
        // 5E 0101
        gbc.setState(0x1d46, 0x895d, 0x95d0, 0xb2b6, 0x1aa1, 0x82cc, 0x1, 0x1);
        gbc.writeMem(0x1d46, { 0x5e });
        gbc.writeMem(0x82cc, { 0x77 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x895d, gbc.sp());
        EXPECT(0x1d47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0x82cc));
        // 5E 0102
        gbc.setState(0xe1e7, 0xb3f0, 0xc2b0, 0x50f, 0x16b, 0xbb02, 0x1, 0x0);
        gbc.writeMem(0xbb02, { 0x1c });
        gbc.writeMem(0xe1e7, { 0x5e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xb3f0, gbc.sp());
        EXPECT(0xe1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0xbb02));
        EXPECT(0x5e, gbc.readMem(0xe1e7));
        // 5E 0103
        gbc.setState(0x26ea, 0x311c, 0x5f90, 0x11c3, 0x7e95, 0xd373, 0x0, 0x0);
        gbc.writeMem(0x26ea, { 0x5e });
        gbc.writeMem(0xd373, { 0xf4 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x311c, gbc.sp());
        EXPECT(0x26eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xd373));
        // 5E 0104
        gbc.setState(0x6209, 0xf7a8, 0x870, 0x4e8f, 0x3abf, 0xd283, 0x0, 0x1);
        gbc.writeMem(0x6209, { 0x5e });
        gbc.writeMem(0xd283, { 0xb8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xf7a8, gbc.sp());
        EXPECT(0x620a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0xd283));
        // 5E 0105
        gbc.setState(0x595c, 0x762, 0xb1a0, 0x3fa7, 0x7513, 0xdb87, 0x1, 0x1);
        gbc.writeMem(0x595c, { 0x5e });
        gbc.writeMem(0xdb87, { 0x3e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x762, gbc.sp());
        EXPECT(0x595d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xdb87));
        // 5E 0106
        gbc.setState(0xcb43, 0x1887, 0xbb70, 0xdae5, 0x82c9, 0x85a9, 0x0, 0x0);
        gbc.writeMem(0x85a9, { 0x93 });
        gbc.writeMem(0xcb43, { 0x5e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1887, gbc.sp());
        EXPECT(0xcb44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x85a9));
        EXPECT(0x5e, gbc.readMem(0xcb43));
        // 5E 0108
        gbc.setState(0x7e79, 0x54fd, 0x19b0, 0xe7f1, 0xbd4f, 0xe15e, 0x0, 0x1);
        gbc.writeMem(0x7e79, { 0x5e });
        gbc.writeMem(0xe15e, { 0xd4 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x54fd, gbc.sp());
        EXPECT(0x7e7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xe15e));
        // 5E 0109
        gbc.setState(0xe5e7, 0x2cab, 0xb4c0, 0xcd7e, 0x83cc, 0x48e1, 0x1, 0x0);
        gbc.writeMem(0x48e1, { 0x21 });
        gbc.writeMem(0xe5e7, { 0x5e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x2cab, gbc.sp());
        EXPECT(0xe5e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe5e7));
        // 5E 010A
        gbc.setState(0x4fd8, 0x4d1e, 0xa680, 0x16d5, 0x45a, 0xa48a, 0x1, 0x1);
        gbc.writeMem(0x4fd8, { 0x5e });
        gbc.writeMem(0xa48a, { 0x87 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x4d1e, gbc.sp());
        EXPECT(0x4fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa48a));
        // 5E 010C
        gbc.setState(0x94e4, 0xab05, 0xdec0, 0x8508, 0x6cda, 0xe6f0, 0x1, 0x0);
        gbc.writeMem(0x94e4, { 0x5e });
        gbc.writeMem(0xe6f0, { 0x23 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xab05, gbc.sp());
        EXPECT(0x94e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x94e4));
        EXPECT(0x23, gbc.readMem(0xe6f0));
        // 5E 010D
        gbc.setState(0x2c9a, 0x6af, 0xa4d0, 0xeefc, 0x2183, 0x3099, 0x1, 0x0);
        gbc.writeMem(0x2c9a, { 0x5e });
        gbc.writeMem(0x3099, { 0xa4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6af, gbc.sp());
        EXPECT(0x2c9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 010E
        gbc.setState(0x15af, 0x519e, 0x5730, 0x31f3, 0xa06, 0xd22a, 0x1, 0x1);
        gbc.writeMem(0x15af, { 0x5e });
        gbc.writeMem(0xd22a, { 0xa7 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x519e, gbc.sp());
        EXPECT(0x15b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xd22a));
        // 5E 010F
        gbc.setState(0x1b4b, 0xb16e, 0x220, 0x8cba, 0x4836, 0x5bbc, 0x0, 0x0);
        gbc.writeMem(0x1b4b, { 0x5e });
        gbc.writeMem(0x5bbc, { 0x9d });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb16e, gbc.sp());
        EXPECT(0x1b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0110
        gbc.setState(0xd77c, 0x730d, 0xac90, 0x61cf, 0xb0e3, 0x7ee2, 0x1, 0x0);
        gbc.writeMem(0x7ee2, { 0x6d });
        gbc.writeMem(0xd77c, { 0x5e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x730d, gbc.sp());
        EXPECT(0xd77d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd77c));
        // 5E 0111
        gbc.setState(0x6630, 0xf2cb, 0x1b00, 0xcf96, 0x5932, 0x512b, 0x0, 0x0);
        gbc.writeMem(0x512b, { 0x3e });
        gbc.writeMem(0x6630, { 0x5e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf2cb, gbc.sp());
        EXPECT(0x6631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0112
        gbc.setState(0x89ff, 0x93df, 0x98b0, 0xf0af, 0xee0d, 0x1b81, 0x0, 0x0);
        gbc.writeMem(0x1b81, { 0x53 });
        gbc.writeMem(0x89ff, { 0x5e });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x93df, gbc.sp());
        EXPECT(0x8a00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x89ff));
        // 5E 0113
        gbc.setState(0x1794, 0x3443, 0x1180, 0x31ef, 0x6e8d, 0x84a7, 0x0, 0x0);
        gbc.writeMem(0x1794, { 0x5e });
        gbc.writeMem(0x84a7, { 0x4d });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x3443, gbc.sp());
        EXPECT(0x1795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x84a7));
        // 5E 0114
        gbc.setState(0xaba6, 0x2aa2, 0x23d0, 0xb7ab, 0xeeb3, 0xdf13, 0x0, 0x1);
        gbc.writeMem(0xaba6, { 0x5e });
        gbc.writeMem(0xdf13, { 0xd4 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x2aa2, gbc.sp());
        EXPECT(0xaba7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xaba6));
        EXPECT(0xd4, gbc.readMem(0xdf13));
        // 5E 0115
        gbc.setState(0x4c32, 0x8135, 0x3400, 0x9b51, 0x338e, 0x52d6, 0x0, 0x1);
        gbc.writeMem(0x4c32, { 0x5e });
        gbc.writeMem(0x52d6, { 0x99 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8135, gbc.sp());
        EXPECT(0x4c33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0116
        gbc.setState(0xab82, 0xa817, 0x8010, 0x640a, 0xdf4, 0x9450, 0x1, 0x1);
        gbc.writeMem(0x9450, { 0xdd });
        gbc.writeMem(0xab82, { 0x5e });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa817, gbc.sp());
        EXPECT(0xab83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9450));
        EXPECT(0x5e, gbc.readMem(0xab82));
        // 5E 0117
        gbc.setState(0x5c37, 0x1985, 0xaba0, 0xaea0, 0xe56, 0xcd28, 0x0, 0x1);
        gbc.writeMem(0x5c37, { 0x5e });
        gbc.writeMem(0xcd28, { 0x4 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1985, gbc.sp());
        EXPECT(0x5c38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0xcd28));
        // 5E 0118
        gbc.setState(0xce54, 0x8252, 0xb040, 0x96a0, 0x710f, 0x999d, 0x0, 0x1);
        gbc.writeMem(0x999d, { 0x36 });
        gbc.writeMem(0xce54, { 0x5e });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x8252, gbc.sp());
        EXPECT(0xce55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0x999d));
        EXPECT(0x5e, gbc.readMem(0xce54));
        // 5E 0119
        gbc.setState(0x77c1, 0x25b6, 0xc350, 0xda45, 0x3651, 0xf944, 0x1, 0x0);
        gbc.writeMem(0x77c1, { 0x5e });
        gbc.writeMem(0xf944, { 0xb5 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x25b6, gbc.sp());
        EXPECT(0x77c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb5, gbc.readMem(0xf944));
        // 5E 011A
        gbc.setState(0x131d, 0xa0e2, 0x44a0, 0xf34c, 0xc137, 0xd79f, 0x1, 0x1);
        gbc.writeMem(0x131d, { 0x5e });
        gbc.writeMem(0xd79f, { 0xd9 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xa0e2, gbc.sp());
        EXPECT(0x131e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xd79f));
        // 5E 011B
        gbc.setState(0xd003, 0x5fbe, 0x5480, 0xfb6b, 0x6442, 0xcf17, 0x1, 0x0);
        gbc.writeMem(0xcf17, { 0xfb });
        gbc.writeMem(0xd003, { 0x5e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x5fbe, gbc.sp());
        EXPECT(0xd004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xcf17));
        EXPECT(0x5e, gbc.readMem(0xd003));
        // 5E 011C
        gbc.setState(0xed41, 0x261a, 0x6160, 0x1fe3, 0xaded, 0x76eb, 0x0, 0x1);
        gbc.writeMem(0x76eb, { 0xca });
        gbc.writeMem(0xed41, { 0x5e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x261a, gbc.sp());
        EXPECT(0xed42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xed41));
        // 5E 011D
        gbc.setState(0x3abb, 0xa073, 0xcae0, 0xf65d, 0xc433, 0x8a4, 0x1, 0x0);
        gbc.writeMem(0x8a4, { 0x1b });
        gbc.writeMem(0x3abb, { 0x5e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xa073, gbc.sp());
        EXPECT(0x3abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 011E
        gbc.setState(0xeaaa, 0xf707, 0x5fd0, 0x5f0d, 0x8c8, 0xf7c9, 0x0, 0x1);
        gbc.writeMem(0xeaaa, { 0x5e });
        gbc.writeMem(0xf7c9, { 0x6f });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xf707, gbc.sp());
        EXPECT(0xeaab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xeaaa));
        EXPECT(0x6f, gbc.readMem(0xf7c9));
        // 5E 011F
        gbc.setState(0xabf2, 0x9f79, 0x4860, 0xc8a8, 0xfafb, 0xa8c1, 0x1, 0x0);
        gbc.writeMem(0xa8c1, { 0x5e });
        gbc.writeMem(0xabf2, { 0x5e });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x9f79, gbc.sp());
        EXPECT(0xabf3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa8c1));
        EXPECT(0x5e, gbc.readMem(0xabf2));
        // 5E 0120
        gbc.setState(0x2752, 0x9c51, 0x2960, 0xbf2c, 0xfcfa, 0x628, 0x0, 0x1);
        gbc.writeMem(0x628, { 0xc6 });
        gbc.writeMem(0x2752, { 0x5e });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9c51, gbc.sp());
        EXPECT(0x2753, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0121
        gbc.setState(0x8945, 0x9e76, 0xac80, 0xc08b, 0xb811, 0x8e0a, 0x0, 0x1);
        gbc.writeMem(0x8945, { 0x5e });
        gbc.writeMem(0x8e0a, { 0x7c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9e76, gbc.sp());
        EXPECT(0x8946, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8945));
        EXPECT(0x7c, gbc.readMem(0x8e0a));
        // 5E 0122
        gbc.setState(0xc68d, 0xa001, 0xfab0, 0xfc03, 0xae04, 0xa0ad, 0x0, 0x0);
        gbc.writeMem(0xa0ad, { 0x19 });
        gbc.writeMem(0xc68d, { 0x5e });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa001, gbc.sp());
        EXPECT(0xc68e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa0ad));
        EXPECT(0x5e, gbc.readMem(0xc68d));
        // 5E 0123
        gbc.setState(0xdea8, 0x68ca, 0xc3a0, 0x45ff, 0xf095, 0x4310, 0x1, 0x0);
        gbc.writeMem(0x4310, { 0x79 });
        gbc.writeMem(0xdea8, { 0x5e });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x68ca, gbc.sp());
        EXPECT(0xdea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xdea8));
        // 5E 0124
        gbc.setState(0x9362, 0xf1d5, 0xdc40, 0x2a61, 0xce52, 0x361a, 0x0, 0x1);
        gbc.writeMem(0x361a, { 0x14 });
        gbc.writeMem(0x9362, { 0x5e });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf1d5, gbc.sp());
        EXPECT(0x9363, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9362));
        // 5E 0125
        gbc.setState(0x43e5, 0x4660, 0x6670, 0x169f, 0xae3d, 0x25ce, 0x1, 0x0);
        gbc.writeMem(0x25ce, { 0x65 });
        gbc.writeMem(0x43e5, { 0x5e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x4660, gbc.sp());
        EXPECT(0x43e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0126
        gbc.setState(0x684d, 0x3075, 0xbca0, 0x132d, 0xdfe3, 0x5c9e, 0x0, 0x1);
        gbc.writeMem(0x5c9e, { 0x82 });
        gbc.writeMem(0x684d, { 0x5e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3075, gbc.sp());
        EXPECT(0x684e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0127
        gbc.setState(0xe12e, 0xd684, 0xe390, 0x87e2, 0x7879, 0xb50c, 0x1, 0x1);
        gbc.writeMem(0xb50c, { 0xf8 });
        gbc.writeMem(0xe12e, { 0x5e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xd684, gbc.sp());
        EXPECT(0xe12f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xb50c));
        EXPECT(0x5e, gbc.readMem(0xe12e));
        // 5E 0129
        gbc.setState(0xc257, 0xcfa, 0xe5f0, 0x7d91, 0x7a51, 0xebfa, 0x1, 0x1);
        gbc.writeMem(0xc257, { 0x5e });
        gbc.writeMem(0xebfa, { 0x23 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xcfa, gbc.sp());
        EXPECT(0xc258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc257));
        EXPECT(0x23, gbc.readMem(0xebfa));
        // 5E 012A
        gbc.setState(0x433b, 0x8520, 0x9640, 0x3ae3, 0xd7d0, 0x438e, 0x0, 0x1);
        gbc.writeMem(0x433b, { 0x5e });
        gbc.writeMem(0x438e, { 0x28 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8520, gbc.sp());
        EXPECT(0x433c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 012B
        gbc.setState(0xd70a, 0x684b, 0xf6d0, 0x5230, 0xd2d5, 0x57cf, 0x1, 0x1);
        gbc.writeMem(0x57cf, { 0xc9 });
        gbc.writeMem(0xd70a, { 0x5e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x684b, gbc.sp());
        EXPECT(0xd70b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd70a));
        // 5E 012C
        gbc.setState(0xc797, 0x26db, 0xc110, 0xf762, 0xb166, 0x33bc, 0x0, 0x1);
        gbc.writeMem(0x33bc, { 0x4f });
        gbc.writeMem(0xc797, { 0x5e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x26db, gbc.sp());
        EXPECT(0xc798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc797));
        // 5E 012D
        gbc.setState(0x58c2, 0x244e, 0x27e0, 0x5b22, 0xc4ed, 0x4d9, 0x1, 0x1);
        gbc.writeMem(0x4d9, { 0x10 });
        gbc.writeMem(0x58c2, { 0x5e });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x244e, gbc.sp());
        EXPECT(0x58c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 012E
        gbc.setState(0xdd08, 0xe7bc, 0x8440, 0x3b50, 0x4eff, 0x8844, 0x0, 0x1);
        gbc.writeMem(0x8844, { 0x7e });
        gbc.writeMem(0xdd08, { 0x5e });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe7bc, gbc.sp());
        EXPECT(0xdd09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8844));
        EXPECT(0x5e, gbc.readMem(0xdd08));
        // 5E 012F
        gbc.setState(0x4975, 0x131a, 0xff00, 0x47a6, 0xd936, 0x58b6, 0x0, 0x1);
        gbc.writeMem(0x4975, { 0x5e });
        gbc.writeMem(0x58b6, { 0xd5 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x131a, gbc.sp());
        EXPECT(0x4976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0130
        gbc.setState(0x619e, 0x7630, 0xacc0, 0xc80b, 0xaaf9, 0x36ec, 0x1, 0x0);
        gbc.writeMem(0x36ec, { 0x72 });
        gbc.writeMem(0x619e, { 0x5e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7630, gbc.sp());
        EXPECT(0x619f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0131
        gbc.setState(0x7f2c, 0x7bc1, 0x58f0, 0xfe73, 0x4920, 0xcfba, 0x1, 0x1);
        gbc.writeMem(0x7f2c, { 0x5e });
        gbc.writeMem(0xcfba, { 0x51 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x7bc1, gbc.sp());
        EXPECT(0x7f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x51, gbc.readMem(0xcfba));
        // 5E 0132
        gbc.setState(0xb10c, 0xc83d, 0x88e0, 0x9b0b, 0xc8ad, 0x48c0, 0x0, 0x0);
        gbc.writeMem(0x48c0, { 0xe0 });
        gbc.writeMem(0xb10c, { 0x5e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc83d, gbc.sp());
        EXPECT(0xb10d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb10c));
        // 5E 0133
        gbc.setState(0x6877, 0xda2c, 0x19d0, 0x2519, 0xd2cf, 0xb866, 0x0, 0x0);
        gbc.writeMem(0x6877, { 0x5e });
        gbc.writeMem(0xb866, { 0x7d });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xda2c, gbc.sp());
        EXPECT(0x6878, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xb866));
        // 5E 0134
        gbc.setState(0x7938, 0x52b4, 0x4940, 0x97f9, 0x449e, 0xb2aa, 0x0, 0x1);
        gbc.writeMem(0x7938, { 0x5e });
        gbc.writeMem(0xb2aa, { 0x54 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x52b4, gbc.sp());
        EXPECT(0x7939, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x54, gbc.readMem(0xb2aa));
        // 5E 0135
        gbc.setState(0x519e, 0xf68a, 0x26f0, 0xfb87, 0x1b44, 0x21d2, 0x0, 0x1);
        gbc.writeMem(0x21d2, { 0xf1 });
        gbc.writeMem(0x519e, { 0x5e });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xf68a, gbc.sp());
        EXPECT(0x519f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0136
        gbc.setState(0x68b1, 0x7696, 0xe660, 0x8ee9, 0x5fb, 0x4153, 0x1, 0x0);
        gbc.writeMem(0x4153, { 0xe8 });
        gbc.writeMem(0x68b1, { 0x5e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7696, gbc.sp());
        EXPECT(0x68b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0137
        gbc.setState(0xbf17, 0x68d9, 0x5530, 0x749b, 0x4897, 0xa197, 0x1, 0x0);
        gbc.writeMem(0xa197, { 0xdd });
        gbc.writeMem(0xbf17, { 0x5e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x68d9, gbc.sp());
        EXPECT(0xbf18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xa197));
        EXPECT(0x5e, gbc.readMem(0xbf17));
        // 5E 0138
        gbc.setState(0xe4d5, 0xb7e1, 0xa940, 0xe30c, 0xc28, 0x2dbe, 0x0, 0x1);
        gbc.writeMem(0x2dbe, { 0x67 });
        gbc.writeMem(0xe4d5, { 0x5e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xb7e1, gbc.sp());
        EXPECT(0xe4d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe4d5));
        // 5E 0139
        gbc.setState(0xc583, 0xe705, 0x9740, 0xbb0a, 0xdbd7, 0xa040, 0x1, 0x1);
        gbc.writeMem(0xa040, { 0x44 });
        gbc.writeMem(0xc583, { 0x5e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe705, gbc.sp());
        EXPECT(0xc584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xa040));
        EXPECT(0x5e, gbc.readMem(0xc583));
        // 5E 013A
        gbc.setState(0xc37f, 0x3f87, 0x8540, 0x814a, 0x60ab, 0xdd5c, 0x0, 0x1);
        gbc.writeMem(0xc37f, { 0x5e });
        gbc.writeMem(0xdd5c, { 0xd5 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3f87, gbc.sp());
        EXPECT(0xc380, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc37f));
        EXPECT(0xd5, gbc.readMem(0xdd5c));
        // 5E 013B
        gbc.setState(0xd8f, 0x1d55, 0x7750, 0x5860, 0x35ad, 0x6745, 0x1, 0x0);
        gbc.writeMem(0xd8f, { 0x5e });
        gbc.writeMem(0x6745, { 0xd1 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x1d55, gbc.sp());
        EXPECT(0xd90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 013D
        gbc.setState(0x7f9f, 0x8c1d, 0xed00, 0xb6f9, 0x6769, 0x8100, 0x1, 0x1);
        gbc.writeMem(0x7f9f, { 0x5e });
        gbc.writeMem(0x8100, { 0xea });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x8c1d, gbc.sp());
        EXPECT(0x7fa0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x8100));
        // 5E 013E
        gbc.setState(0xd7ba, 0xe20d, 0x9280, 0x4953, 0x1873, 0x590e, 0x0, 0x0);
        gbc.writeMem(0x590e, { 0x66 });
        gbc.writeMem(0xd7ba, { 0x5e });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xe20d, gbc.sp());
        EXPECT(0xd7bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd7ba));
        // 5E 013F
        gbc.setState(0xcefe, 0xa858, 0x5060, 0x3ff0, 0x90c1, 0xedfa, 0x1, 0x0);
        gbc.writeMem(0xcefe, { 0x5e });
        gbc.writeMem(0xedfa, { 0x66 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa858, gbc.sp());
        EXPECT(0xceff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcefe));
        EXPECT(0x66, gbc.readMem(0xedfa));
        // 5E 0140
        gbc.setState(0xe8e7, 0x2247, 0x1ae0, 0x4c7e, 0xeab8, 0x224c, 0x0, 0x1);
        gbc.writeMem(0x224c, { 0x87 });
        gbc.writeMem(0xe8e7, { 0x5e });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2247, gbc.sp());
        EXPECT(0xe8e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe8e7));
        // 5E 0141
        gbc.setState(0x8700, 0xb6cd, 0x1510, 0xb14b, 0x532d, 0xb77, 0x0, 0x0);
        gbc.writeMem(0xb77, { 0x62 });
        gbc.writeMem(0x8700, { 0x5e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb6cd, gbc.sp());
        EXPECT(0x8701, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8700));
        // 5E 0142
        gbc.setState(0x6418, 0x41a3, 0xf00, 0xb354, 0x3d80, 0x911b, 0x1, 0x0);
        gbc.writeMem(0x6418, { 0x5e });
        gbc.writeMem(0x911b, { 0x53 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x41a3, gbc.sp());
        EXPECT(0x6419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x911b));
        // 5E 0143
        gbc.setState(0x89b4, 0x6a16, 0x1d0, 0x9c57, 0x38cd, 0xc926, 0x1, 0x0);
        gbc.writeMem(0x89b4, { 0x5e });
        gbc.writeMem(0xc926, { 0xa8 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6a16, gbc.sp());
        EXPECT(0x89b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x89b4));
        EXPECT(0xa8, gbc.readMem(0xc926));
        // 5E 0144
        gbc.setState(0x9780, 0xfdf9, 0xc7d0, 0xeef7, 0xafa6, 0x6248, 0x1, 0x0);
        gbc.writeMem(0x6248, { 0x3f });
        gbc.writeMem(0x9780, { 0x5e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfdf9, gbc.sp());
        EXPECT(0x9781, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9780));
        // 5E 0145
        gbc.setState(0x58da, 0x5763, 0x46c0, 0xf87a, 0x96a7, 0x2694, 0x1, 0x0);
        gbc.writeMem(0x2694, { 0xc });
        gbc.writeMem(0x58da, { 0x5e });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5763, gbc.sp());
        EXPECT(0x58db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0146
        gbc.setState(0xb5ba, 0xded4, 0x15d0, 0xa934, 0xfe0c, 0x54f5, 0x1, 0x0);
        gbc.writeMem(0x54f5, { 0x35 });
        gbc.writeMem(0xb5ba, { 0x5e });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xded4, gbc.sp());
        EXPECT(0xb5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb5ba));
        // 5E 0147
        gbc.setState(0x9f1c, 0x9ecc, 0x7790, 0xac02, 0xed73, 0x81f4, 0x1, 0x0);
        gbc.writeMem(0x81f4, { 0xf8 });
        gbc.writeMem(0x9f1c, { 0x5e });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9ecc, gbc.sp());
        EXPECT(0x9f1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x81f4));
        EXPECT(0x5e, gbc.readMem(0x9f1c));
        // 5E 0148
        gbc.setState(0x91c9, 0x10cc, 0xb6a0, 0x8691, 0x89e7, 0x1adc, 0x1, 0x0);
        gbc.writeMem(0x1adc, { 0xa9 });
        gbc.writeMem(0x91c9, { 0x5e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x10cc, gbc.sp());
        EXPECT(0x91ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x91c9));
        // 5E 0149
        gbc.setState(0x88fd, 0x18c3, 0x3dc0, 0x92a, 0x3cd9, 0x4ef5, 0x1, 0x0);
        gbc.writeMem(0x4ef5, { 0xfc });
        gbc.writeMem(0x88fd, { 0x5e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x18c3, gbc.sp());
        EXPECT(0x88fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x88fd));
        // 5E 014A
        gbc.setState(0x3aaa, 0x207e, 0x8890, 0xf7a8, 0x5fe7, 0xbcf3, 0x0, 0x0);
        gbc.writeMem(0x3aaa, { 0x5e });
        gbc.writeMem(0xbcf3, { 0x99 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x207e, gbc.sp());
        EXPECT(0x3aab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xbcf3));
        // 5E 014B
        gbc.setState(0x8ec8, 0x1a57, 0xf600, 0x5167, 0xa9b4, 0x7481, 0x1, 0x0);
        gbc.writeMem(0x7481, { 0xd9 });
        gbc.writeMem(0x8ec8, { 0x5e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1a57, gbc.sp());
        EXPECT(0x8ec9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8ec8));
        // 5E 014C
        gbc.setState(0xc86c, 0x603f, 0x5970, 0xc879, 0x27f8, 0x1e8e, 0x0, 0x1);
        gbc.writeMem(0x1e8e, { 0xe6 });
        gbc.writeMem(0xc86c, { 0x5e });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x603f, gbc.sp());
        EXPECT(0xc86d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc86c));
        // 5E 014D
        gbc.setState(0x1f68, 0xf6c2, 0xd490, 0xc9ee, 0xaa77, 0x1e18, 0x0, 0x0);
        gbc.writeMem(0x1e18, { 0x6e });
        gbc.writeMem(0x1f68, { 0x5e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xf6c2, gbc.sp());
        EXPECT(0x1f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 014E
        gbc.setState(0xd768, 0x9f8f, 0xa380, 0xbe08, 0xaab9, 0xad16, 0x1, 0x1);
        gbc.writeMem(0xad16, { 0x3f });
        gbc.writeMem(0xd768, { 0x5e });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9f8f, gbc.sp());
        EXPECT(0xd769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xad16));
        EXPECT(0x5e, gbc.readMem(0xd768));
        // 5E 014F
        gbc.setState(0x74ef, 0x1dee, 0x8d30, 0xa2c1, 0x62b1, 0xff1e, 0x1, 0x1);
        gbc.writeMem(0x74ef, { 0x5e });
        gbc.writeMem(0xff1e, { 0x73 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x1dee, gbc.sp());
        EXPECT(0x74f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xff1e));
        // 5E 0150
        gbc.setState(0xa248, 0x3063, 0x81a0, 0xe8d9, 0xbbd2, 0xe74d, 0x1, 0x1);
        gbc.writeMem(0xa248, { 0x5e });
        gbc.writeMem(0xe74d, { 0xe0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x3063, gbc.sp());
        EXPECT(0xa249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa248));
        EXPECT(0xe0, gbc.readMem(0xe74d));
        // 5E 0151
        gbc.setState(0xe560, 0x7c68, 0x4d50, 0xbe75, 0xd58c, 0x20a0, 0x1, 0x1);
        gbc.writeMem(0x20a0, { 0xd7 });
        gbc.writeMem(0xe560, { 0x5e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7c68, gbc.sp());
        EXPECT(0xe561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe560));
        // 5E 0152
        gbc.setState(0x134a, 0x7dd0, 0x8e10, 0x89ac, 0xca03, 0xf426, 0x1, 0x1);
        gbc.writeMem(0x134a, { 0x5e });
        gbc.writeMem(0xf426, { 0xe7 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x7dd0, gbc.sp());
        EXPECT(0x134b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xf426));
        // 5E 0153
        gbc.setState(0xbc23, 0xe438, 0x7c40, 0x6df4, 0xd626, 0x4447, 0x0, 0x0);
        gbc.writeMem(0x4447, { 0xae });
        gbc.writeMem(0xbc23, { 0x5e });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xe438, gbc.sp());
        EXPECT(0xbc24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbc23));
        // 5E 0155
        gbc.setState(0x1cf8, 0xfda2, 0x1510, 0x5bba, 0xcc26, 0xba91, 0x1, 0x0);
        gbc.writeMem(0x1cf8, { 0x5e });
        gbc.writeMem(0xba91, { 0x16 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xfda2, gbc.sp());
        EXPECT(0x1cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xba91));
        // 5E 0156
        gbc.setState(0xe28a, 0x8b85, 0x8660, 0x3cd, 0x9ea8, 0x263a, 0x0, 0x1);
        gbc.writeMem(0x263a, { 0x2e });
        gbc.writeMem(0xe28a, { 0x5e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8b85, gbc.sp());
        EXPECT(0xe28b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe28a));
        // 5E 0157
        gbc.setState(0xd7b3, 0xa009, 0x8e20, 0x6d2b, 0xf6e2, 0xa81e, 0x0, 0x0);
        gbc.writeMem(0xa81e, { 0x73 });
        gbc.writeMem(0xd7b3, { 0x5e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa009, gbc.sp());
        EXPECT(0xd7b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xa81e));
        EXPECT(0x5e, gbc.readMem(0xd7b3));
        // 5E 0158
        gbc.setState(0xc414, 0x732c, 0x43e0, 0x65d2, 0x68ff, 0x8561, 0x1, 0x1);
        gbc.writeMem(0x8561, { 0xe3 });
        gbc.writeMem(0xc414, { 0x5e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x732c, gbc.sp());
        EXPECT(0xc415, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x8561));
        EXPECT(0x5e, gbc.readMem(0xc414));
        // 5E 0159
        gbc.setState(0x720d, 0xa8c3, 0x94d0, 0xefde, 0xc054, 0x2288, 0x1, 0x1);
        gbc.writeMem(0x2288, { 0x4f });
        gbc.writeMem(0x720d, { 0x5e });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xa8c3, gbc.sp());
        EXPECT(0x720e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 015A
        gbc.setState(0x8d84, 0x2fc, 0x7a60, 0x343b, 0xd06f, 0x663a, 0x0, 0x0);
        gbc.writeMem(0x663a, { 0xe0 });
        gbc.writeMem(0x8d84, { 0x5e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x2fc, gbc.sp());
        EXPECT(0x8d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8d84));
        // 5E 015B
        gbc.setState(0x3519, 0xe671, 0xf8a0, 0x5d6b, 0x7859, 0x3f43, 0x0, 0x0);
        gbc.writeMem(0x3519, { 0x5e });
        gbc.writeMem(0x3f43, { 0xdf });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe671, gbc.sp());
        EXPECT(0x351a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 015C
        gbc.setState(0xe075, 0x1f94, 0xaaa0, 0xc21, 0x2102, 0x6a37, 0x1, 0x0);
        gbc.writeMem(0x6a37, { 0x8b });
        gbc.writeMem(0xe075, { 0x5e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1f94, gbc.sp());
        EXPECT(0xe076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe075));
        // 5E 015D
        gbc.setState(0xc340, 0xcbfa, 0xf3d0, 0xc140, 0x74ff, 0x4a01, 0x0, 0x1);
        gbc.writeMem(0x4a01, { 0x15 });
        gbc.writeMem(0xc340, { 0x5e });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcbfa, gbc.sp());
        EXPECT(0xc341, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc340));
        // 5E 015F
        gbc.setState(0xdcb6, 0xefcf, 0x3110, 0x9f82, 0x2e8b, 0x171b, 0x0, 0x0);
        gbc.writeMem(0x171b, { 0xcc });
        gbc.writeMem(0xdcb6, { 0x5e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xefcf, gbc.sp());
        EXPECT(0xdcb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xdcb6));
        // 5E 0160
        gbc.setState(0x90a7, 0xf629, 0x48c0, 0x3b76, 0xee27, 0xa507, 0x1, 0x0);
        gbc.writeMem(0x90a7, { 0x5e });
        gbc.writeMem(0xa507, { 0xfc });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xf629, gbc.sp());
        EXPECT(0x90a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x90a7));
        EXPECT(0xfc, gbc.readMem(0xa507));
        // 5E 0161
        gbc.setState(0xba40, 0x22ae, 0xcbe0, 0xfe40, 0x1279, 0x9ff4, 0x0, 0x0);
        gbc.writeMem(0x9ff4, { 0x1a });
        gbc.writeMem(0xba40, { 0x5e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x22ae, gbc.sp());
        EXPECT(0xba41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x9ff4));
        EXPECT(0x5e, gbc.readMem(0xba40));
        // 5E 0162
        gbc.setState(0xe5e6, 0x4ae, 0x550, 0x93, 0x9c97, 0x66cc, 0x0, 0x0);
        gbc.writeMem(0x66cc, { 0x39 });
        gbc.writeMem(0xe5e6, { 0x5e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4ae, gbc.sp());
        EXPECT(0xe5e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe5e6));
        // 5E 0163
        gbc.setState(0x31b6, 0x6dd7, 0x3540, 0x3741, 0x76cc, 0x8e5c, 0x0, 0x1);
        gbc.writeMem(0x31b6, { 0x5e });
        gbc.writeMem(0x8e5c, { 0x7 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6dd7, gbc.sp());
        EXPECT(0x31b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8e5c));
        // 5E 0164
        gbc.setState(0x7b6e, 0x52cf, 0x1d30, 0x4990, 0x5276, 0x7278, 0x0, 0x1);
        gbc.writeMem(0x7278, { 0x66 });
        gbc.writeMem(0x7b6e, { 0x5e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x52cf, gbc.sp());
        EXPECT(0x7b6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0165
        gbc.setState(0x6da7, 0xb3ef, 0xb6b0, 0x3b2b, 0xf3bf, 0xe46b, 0x1, 0x0);
        gbc.writeMem(0x6da7, { 0x5e });
        gbc.writeMem(0xe46b, { 0xa5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb3ef, gbc.sp());
        EXPECT(0x6da8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xe46b));
        // 5E 0166
        gbc.setState(0x1fc7, 0xa49c, 0x1390, 0x7541, 0xf268, 0xabd8, 0x1, 0x1);
        gbc.writeMem(0x1fc7, { 0x5e });
        gbc.writeMem(0xabd8, { 0xc6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa49c, gbc.sp());
        EXPECT(0x1fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xabd8));
        // 5E 0168
        gbc.setState(0xa344, 0xe791, 0x3660, 0xd9d6, 0xb493, 0x83ad, 0x1, 0x0);
        gbc.writeMem(0x83ad, { 0x18 });
        gbc.writeMem(0xa344, { 0x5e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe791, gbc.sp());
        EXPECT(0xa345, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0x83ad));
        EXPECT(0x5e, gbc.readMem(0xa344));
        // 5E 0169
        gbc.setState(0x660e, 0xd35f, 0xa890, 0x145f, 0xd91b, 0x1295, 0x1, 0x1);
        gbc.writeMem(0x1295, { 0xc5 });
        gbc.writeMem(0x660e, { 0x5e });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xd35f, gbc.sp());
        EXPECT(0x660f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 016A
        gbc.setState(0x3419, 0x35c0, 0xbd60, 0x5092, 0xb63e, 0xb4ed, 0x1, 0x1);
        gbc.writeMem(0x3419, { 0x5e });
        gbc.writeMem(0xb4ed, { 0x10 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x35c0, gbc.sp());
        EXPECT(0x341a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0xb4ed));
        // 5E 016B
        gbc.setState(0x5696, 0x18fe, 0x3cf0, 0xfe17, 0x4c41, 0x1761, 0x1, 0x1);
        gbc.writeMem(0x1761, { 0xc9 });
        gbc.writeMem(0x5696, { 0x5e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x18fe, gbc.sp());
        EXPECT(0x5697, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 016C
        gbc.setState(0x2b97, 0x1ac9, 0xc130, 0xd5d4, 0xaaff, 0x29ea, 0x0, 0x1);
        gbc.writeMem(0x29ea, { 0xf });
        gbc.writeMem(0x2b97, { 0x5e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x1ac9, gbc.sp());
        EXPECT(0x2b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 016D
        gbc.setState(0xdc63, 0x11da, 0x2ef0, 0x18a9, 0x2f28, 0x6cae, 0x1, 0x1);
        gbc.writeMem(0x6cae, { 0xb3 });
        gbc.writeMem(0xdc63, { 0x5e });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x11da, gbc.sp());
        EXPECT(0xdc64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xdc63));
        // 5E 016E
        gbc.setState(0x5192, 0x1b03, 0x5b50, 0xe174, 0xcb0f, 0x38de, 0x0, 0x1);
        gbc.writeMem(0x38de, { 0x1b });
        gbc.writeMem(0x5192, { 0x5e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x1b03, gbc.sp());
        EXPECT(0x5193, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 016F
        gbc.setState(0xbc2e, 0xc05f, 0xb500, 0x7150, 0xf753, 0xd1ad, 0x0, 0x0);
        gbc.writeMem(0xbc2e, { 0x5e });
        gbc.writeMem(0xd1ad, { 0x95 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xc05f, gbc.sp());
        EXPECT(0xbc2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbc2e));
        EXPECT(0x95, gbc.readMem(0xd1ad));
        // 5E 0170
        gbc.setState(0x7fc1, 0x8c4f, 0x8d60, 0x1551, 0x794c, 0xa18a, 0x1, 0x0);
        gbc.writeMem(0x7fc1, { 0x5e });
        gbc.writeMem(0xa18a, { 0x94 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8c4f, gbc.sp());
        EXPECT(0x7fc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xa18a));
        // 5E 0171
        gbc.setState(0x5a19, 0x84ba, 0x750, 0xb011, 0xae06, 0x2473, 0x1, 0x1);
        gbc.writeMem(0x2473, { 0x78 });
        gbc.writeMem(0x5a19, { 0x5e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x84ba, gbc.sp());
        EXPECT(0x5a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0172
        gbc.setState(0x7517, 0xbeeb, 0x110, 0x6985, 0x7ff1, 0xa83d, 0x0, 0x0);
        gbc.writeMem(0x7517, { 0x5e });
        gbc.writeMem(0xa83d, { 0xd9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xbeeb, gbc.sp());
        EXPECT(0x7518, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa83d));
        // 5E 0173
        gbc.setState(0x504b, 0x4209, 0x100, 0xce36, 0xd369, 0xf3b4, 0x0, 0x0);
        gbc.writeMem(0x504b, { 0x5e });
        gbc.writeMem(0xf3b4, { 0xd });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x4209, gbc.sp());
        EXPECT(0x504c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0xf3b4));
        // 5E 0174
        gbc.setState(0xbaba, 0xa2d5, 0x36f0, 0xc98, 0x9a92, 0x5625, 0x0, 0x0);
        gbc.writeMem(0x5625, { 0x53 });
        gbc.writeMem(0xbaba, { 0x5e });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xa2d5, gbc.sp());
        EXPECT(0xbabb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbaba));
        // 5E 0175
        gbc.setState(0x5321, 0x4e5a, 0xc460, 0xc2f7, 0xed78, 0x5964, 0x0, 0x1);
        gbc.writeMem(0x5321, { 0x5e });
        gbc.writeMem(0x5964, { 0xdb });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4e5a, gbc.sp());
        EXPECT(0x5322, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0176
        gbc.setState(0x1483, 0x5ffa, 0x4ab0, 0x9cd9, 0x990d, 0x26e5, 0x1, 0x0);
        gbc.writeMem(0x1483, { 0x5e });
        gbc.writeMem(0x26e5, { 0x6c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5ffa, gbc.sp());
        EXPECT(0x1484, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0177
        gbc.setState(0x5d33, 0x7e22, 0x9e50, 0x5b73, 0xf38d, 0x8c1c, 0x0, 0x1);
        gbc.writeMem(0x5d33, { 0x5e });
        gbc.writeMem(0x8c1c, { 0x6d });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7e22, gbc.sp());
        EXPECT(0x5d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8c1c));
        // 5E 0178
        gbc.setState(0xcda3, 0xbb43, 0x6bf0, 0xae4a, 0xea55, 0x344e, 0x1, 0x1);
        gbc.writeMem(0x344e, { 0x63 });
        gbc.writeMem(0xcda3, { 0x5e });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbb43, gbc.sp());
        EXPECT(0xcda4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcda3));
        // 5E 0179
        gbc.setState(0xbff4, 0xc89c, 0x81f0, 0x8827, 0xb539, 0x626, 0x1, 0x0);
        gbc.writeMem(0x626, { 0xc });
        gbc.writeMem(0xbff4, { 0x5e });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc89c, gbc.sp());
        EXPECT(0xbff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbff4));
        // 5E 017A
        gbc.setState(0xce8, 0xa352, 0xd1f0, 0xae16, 0x613d, 0x8cad, 0x0, 0x1);
        gbc.writeMem(0xce8, { 0x5e });
        gbc.writeMem(0x8cad, { 0x45 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa352, gbc.sp());
        EXPECT(0xce9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0x8cad));
        // 5E 017B
        gbc.setState(0xa923, 0x3187, 0x6b90, 0xde63, 0x7611, 0xecab, 0x0, 0x1);
        gbc.writeMem(0xa923, { 0x5e });
        gbc.writeMem(0xecab, { 0x99 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x3187, gbc.sp());
        EXPECT(0xa924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa923));
        EXPECT(0x99, gbc.readMem(0xecab));
        // 5E 017C
        gbc.setState(0x2b9f, 0x9aa9, 0x6220, 0x40aa, 0x1f29, 0xd4d1, 0x1, 0x0);
        gbc.writeMem(0x2b9f, { 0x5e });
        gbc.writeMem(0xd4d1, { 0x3f });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x9aa9, gbc.sp());
        EXPECT(0x2ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xd4d1));
        // 5E 017D
        gbc.setState(0xea0c, 0x211e, 0xd00, 0x253a, 0x17c0, 0x854, 0x0, 0x1);
        gbc.writeMem(0x854, { 0x58 });
        gbc.writeMem(0xea0c, { 0x5e });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x211e, gbc.sp());
        EXPECT(0xea0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xea0c));
        // 5E 017E
        gbc.setState(0x4db5, 0x6fc0, 0xd210, 0xe2fe, 0x396, 0x79d0, 0x0, 0x1);
        gbc.writeMem(0x4db5, { 0x5e });
        gbc.writeMem(0x79d0, { 0x5c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x6fc0, gbc.sp());
        EXPECT(0x4db6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 017F
        gbc.setState(0x3ceb, 0xf95b, 0xc160, 0xc028, 0xd237, 0xe581, 0x1, 0x0);
        gbc.writeMem(0x3ceb, { 0x5e });
        gbc.writeMem(0xe581, { 0x22 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xf95b, gbc.sp());
        EXPECT(0x3cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xe581));
        // 5E 0180
        gbc.setState(0x31d9, 0xc50f, 0x17d0, 0x3e08, 0x8272, 0x6691, 0x0, 0x1);
        gbc.writeMem(0x31d9, { 0x5e });
        gbc.writeMem(0x6691, { 0x5f });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc50f, gbc.sp());
        EXPECT(0x31da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0181
        gbc.setState(0xec07, 0x9350, 0x1390, 0xc5b7, 0x3b77, 0x2a45, 0x1, 0x1);
        gbc.writeMem(0x2a45, { 0x29 });
        gbc.writeMem(0xec07, { 0x5e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x9350, gbc.sp());
        EXPECT(0xec08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xec07));
        // 5E 0182
        gbc.setState(0xa77f, 0xfd92, 0x9600, 0x46f9, 0x978d, 0x6e4c, 0x1, 0x1);
        gbc.writeMem(0x6e4c, { 0xb5 });
        gbc.writeMem(0xa77f, { 0x5e });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xfd92, gbc.sp());
        EXPECT(0xa780, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa77f));
        // 5E 0183
        gbc.setState(0x29cf, 0x8c95, 0x8c10, 0x259b, 0xd8eb, 0x8d2a, 0x0, 0x1);
        gbc.writeMem(0x29cf, { 0x5e });
        gbc.writeMem(0x8d2a, { 0x58 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x8c95, gbc.sp());
        EXPECT(0x29d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0x8d2a));
        // 5E 0184
        gbc.setState(0xb6b1, 0x847, 0x100, 0xfda0, 0xbf80, 0xfb8a, 0x1, 0x0);
        gbc.writeMem(0xb6b1, { 0x5e });
        gbc.writeMem(0xfb8a, { 0xc5 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x847, gbc.sp());
        EXPECT(0xb6b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb6b1));
        EXPECT(0xc5, gbc.readMem(0xfb8a));
        // 5E 0185
        gbc.setState(0x27f5, 0x19d7, 0xe720, 0xe3b9, 0x57be, 0x2981, 0x0, 0x1);
        gbc.writeMem(0x27f5, { 0x5e });
        gbc.writeMem(0x2981, { 0xbd });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x19d7, gbc.sp());
        EXPECT(0x27f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0186
        gbc.setState(0xad63, 0x6e62, 0x3f50, 0xbd4c, 0xcaba, 0x65ee, 0x0, 0x0);
        gbc.writeMem(0x65ee, { 0x6f });
        gbc.writeMem(0xad63, { 0x5e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6e62, gbc.sp());
        EXPECT(0xad64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xad63));
        // 5E 0187
        gbc.setState(0xaf3, 0x4abb, 0x10f0, 0x11fd, 0xd2c6, 0xb75, 0x0, 0x1);
        gbc.writeMem(0xaf3, { 0x5e });
        gbc.writeMem(0xb75, { 0x1f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4abb, gbc.sp());
        EXPECT(0xaf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0188
        gbc.setState(0xe08f, 0x75, 0x2fa0, 0x41fc, 0x5b46, 0xaaa4, 0x1, 0x0);
        gbc.writeMem(0xaaa4, { 0x5a });
        gbc.writeMem(0xe08f, { 0x5e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x75, gbc.sp());
        EXPECT(0xe090, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0xaaa4));
        EXPECT(0x5e, gbc.readMem(0xe08f));
        // 5E 0189
        gbc.setState(0x5199, 0xd0d2, 0xd090, 0x7954, 0xb36e, 0x4678, 0x0, 0x1);
        gbc.writeMem(0x4678, { 0xc4 });
        gbc.writeMem(0x5199, { 0x5e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd0d2, gbc.sp());
        EXPECT(0x519a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 018A
        gbc.setState(0x77cd, 0x51b1, 0x21e0, 0xb817, 0x4882, 0xf822, 0x0, 0x0);
        gbc.writeMem(0x77cd, { 0x5e });
        gbc.writeMem(0xf822, { 0x86 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x51b1, gbc.sp());
        EXPECT(0x77ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xf822));
        // 5E 018B
        gbc.setState(0x208, 0xca05, 0x30b0, 0x697a, 0x7a32, 0xd8ce, 0x1, 0x1);
        gbc.writeMem(0x208, { 0x5e });
        gbc.writeMem(0xd8ce, { 0x36 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xca05, gbc.sp());
        EXPECT(0x209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd8ce));
        // 5E 018C
        gbc.setState(0x538e, 0xea3f, 0x4ae0, 0x58b8, 0x55da, 0xa986, 0x0, 0x0);
        gbc.writeMem(0x538e, { 0x5e });
        gbc.writeMem(0xa986, { 0xf0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xea3f, gbc.sp());
        EXPECT(0x538f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xa986));
        // 5E 018D
        gbc.setState(0xec46, 0xec4e, 0xba0, 0x538f, 0x43f1, 0x8fe2, 0x0, 0x1);
        gbc.writeMem(0x8fe2, { 0xb6 });
        gbc.writeMem(0xec46, { 0x5e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xec4e, gbc.sp());
        EXPECT(0xec47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x8fe2));
        EXPECT(0x5e, gbc.readMem(0xec46));
        // 5E 018E
        gbc.setState(0xa03b, 0x47c2, 0xd5b0, 0x89fe, 0x977d, 0x1ba7, 0x0, 0x1);
        gbc.writeMem(0x1ba7, { 0xd1 });
        gbc.writeMem(0xa03b, { 0x5e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x47c2, gbc.sp());
        EXPECT(0xa03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa03b));
        // 5E 018F
        gbc.setState(0x361d, 0x9b10, 0xbcc0, 0x8324, 0x22a8, 0x5d5d, 0x0, 0x1);
        gbc.writeMem(0x361d, { 0x5e });
        gbc.writeMem(0x5d5d, { 0xf6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9b10, gbc.sp());
        EXPECT(0x361e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0190
        gbc.setState(0xac6a, 0x5f9, 0x72c0, 0xf6a0, 0xd87f, 0x2022, 0x0, 0x0);
        gbc.writeMem(0x2022, { 0x6e });
        gbc.writeMem(0xac6a, { 0x5e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x5f9, gbc.sp());
        EXPECT(0xac6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xac6a));
        // 5E 0191
        gbc.setState(0xb519, 0x4d6, 0x7430, 0x6658, 0xe75b, 0xcc6c, 0x0, 0x1);
        gbc.writeMem(0xb519, { 0x5e });
        gbc.writeMem(0xcc6c, { 0xcb });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x4d6, gbc.sp());
        EXPECT(0xb51a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb519));
        EXPECT(0xcb, gbc.readMem(0xcc6c));
        // 5E 0192
        gbc.setState(0xa054, 0x9109, 0x7d70, 0x5cb0, 0x5d33, 0xefdb, 0x1, 0x0);
        gbc.writeMem(0xa054, { 0x5e });
        gbc.writeMem(0xefdb, { 0xf2 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9109, gbc.sp());
        EXPECT(0xa055, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa054));
        EXPECT(0xf2, gbc.readMem(0xefdb));
        // 5E 0194
        gbc.setState(0x5a4e, 0x3a41, 0xa2d0, 0xbffe, 0x6fb1, 0xf233, 0x0, 0x1);
        gbc.writeMem(0x5a4e, { 0x5e });
        gbc.writeMem(0xf233, { 0xb2 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3a41, gbc.sp());
        EXPECT(0x5a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xf233));
        // 5E 0195
        gbc.setState(0x6277, 0x558, 0x6170, 0x811f, 0x60d5, 0x1877, 0x1, 0x0);
        gbc.writeMem(0x1877, { 0x45 });
        gbc.writeMem(0x6277, { 0x5e });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x558, gbc.sp());
        EXPECT(0x6278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0196
        gbc.setState(0x324b, 0xf182, 0x4f70, 0x65ab, 0xa72e, 0xc220, 0x0, 0x1);
        gbc.writeMem(0x324b, { 0x5e });
        gbc.writeMem(0xc220, { 0x8a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf182, gbc.sp());
        EXPECT(0x324c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xc220));
        // 5E 0197
        gbc.setState(0x8cd8, 0x44b0, 0x2740, 0x6211, 0x1ba4, 0xcd74, 0x1, 0x1);
        gbc.writeMem(0x8cd8, { 0x5e });
        gbc.writeMem(0xcd74, { 0x4b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x44b0, gbc.sp());
        EXPECT(0x8cd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8cd8));
        EXPECT(0x4b, gbc.readMem(0xcd74));
        // 5E 0198
        gbc.setState(0x8e15, 0x1b7c, 0xb9a0, 0xc3bc, 0xdb4d, 0x10eb, 0x1, 0x1);
        gbc.writeMem(0x10eb, { 0x53 });
        gbc.writeMem(0x8e15, { 0x5e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x1b7c, gbc.sp());
        EXPECT(0x8e16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8e15));
        // 5E 0199
        gbc.setState(0xc91c, 0xcdc2, 0xbc70, 0x4db6, 0x6d20, 0x4a1d, 0x1, 0x0);
        gbc.writeMem(0x4a1d, { 0x4 });
        gbc.writeMem(0xc91c, { 0x5e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xcdc2, gbc.sp());
        EXPECT(0xc91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc91c));
        // 5E 019A
        gbc.setState(0x437e, 0xfc2d, 0x2120, 0x6a6a, 0x333b, 0xcb8e, 0x0, 0x1);
        gbc.writeMem(0x437e, { 0x5e });
        gbc.writeMem(0xcb8e, { 0xa9 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xfc2d, gbc.sp());
        EXPECT(0x437f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xcb8e));
        // 5E 019B
        gbc.setState(0x8878, 0xfa93, 0xcb80, 0x802e, 0xe792, 0x1e9f, 0x1, 0x0);
        gbc.writeMem(0x1e9f, { 0xa5 });
        gbc.writeMem(0x8878, { 0x5e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfa93, gbc.sp());
        EXPECT(0x8879, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8878));
        // 5E 019C
        gbc.setState(0x1451, 0x9f77, 0xb020, 0x2a41, 0x524d, 0xe936, 0x0, 0x0);
        gbc.writeMem(0x1451, { 0x5e });
        gbc.writeMem(0xe936, { 0x47 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9f77, gbc.sp());
        EXPECT(0x1452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe936));
        // 5E 019D
        gbc.setState(0x833b, 0x1625, 0x3a80, 0xcbf4, 0x9a82, 0xd1c7, 0x1, 0x1);
        gbc.writeMem(0x833b, { 0x5e });
        gbc.writeMem(0xd1c7, { 0xca });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1625, gbc.sp());
        EXPECT(0x833c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x833b));
        EXPECT(0xca, gbc.readMem(0xd1c7));
        // 5E 019E
        gbc.setState(0xe0f3, 0xc5f4, 0x7fc0, 0xbe8e, 0xfeba, 0x414, 0x0, 0x0);
        gbc.writeMem(0x414, { 0x55 });
        gbc.writeMem(0xe0f3, { 0x5e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc5f4, gbc.sp());
        EXPECT(0xe0f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe0f3));
        // 5E 019F
        gbc.setState(0x4446, 0xe91b, 0xe400, 0x6ce2, 0xd88, 0xa81d, 0x1, 0x1);
        gbc.writeMem(0x4446, { 0x5e });
        gbc.writeMem(0xa81d, { 0x6a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe91b, gbc.sp());
        EXPECT(0x4447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xa81d));
        // 5E 01A0
        gbc.setState(0x55ae, 0xd2d, 0x4450, 0x6564, 0x51e2, 0x18f9, 0x1, 0x0);
        gbc.writeMem(0x18f9, { 0x79 });
        gbc.writeMem(0x55ae, { 0x5e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd2d, gbc.sp());
        EXPECT(0x55af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 01A1
        gbc.setState(0xe1b4, 0xee46, 0xbdc0, 0x2627, 0x84eb, 0x9558, 0x1, 0x1);
        gbc.writeMem(0x9558, { 0x37 });
        gbc.writeMem(0xe1b4, { 0x5e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xee46, gbc.sp());
        EXPECT(0xe1b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x9558));
        EXPECT(0x5e, gbc.readMem(0xe1b4));
        // 5E 01A2
        gbc.setState(0xedb6, 0x6c18, 0xe450, 0x51da, 0x3997, 0x389d, 0x0, 0x0);
        gbc.writeMem(0x389d, { 0xe4 });
        gbc.writeMem(0xedb6, { 0x5e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x6c18, gbc.sp());
        EXPECT(0xedb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xedb6));
        // 5E 01A3
        gbc.setState(0x49fa, 0xe6eb, 0x41e0, 0xe5c7, 0x6c1d, 0x443f, 0x0, 0x0);
        gbc.writeMem(0x443f, { 0xec });
        gbc.writeMem(0x49fa, { 0x5e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe6eb, gbc.sp());
        EXPECT(0x49fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 01A4
        gbc.setState(0x4131, 0xdf94, 0xedd0, 0xa807, 0x3a4f, 0x2cd9, 0x0, 0x0);
        gbc.writeMem(0x2cd9, { 0x34 });
        gbc.writeMem(0x4131, { 0x5e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xdf94, gbc.sp());
        EXPECT(0x4132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 01A5
        gbc.setState(0x7682, 0x676, 0xe330, 0xead2, 0x4c89, 0x1956, 0x0, 0x1);
        gbc.writeMem(0x1956, { 0x10 });
        gbc.writeMem(0x7682, { 0x5e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x676, gbc.sp());
        EXPECT(0x7683, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 01A6
        gbc.setState(0x1c6e, 0x8318, 0xcac0, 0xd4f7, 0xb2f, 0x9341, 0x0, 0x1);
        gbc.writeMem(0x1c6e, { 0x5e });
        gbc.writeMem(0x9341, { 0x9b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x8318, gbc.sp());
        EXPECT(0x1c6f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x9341));
        // 5E 01A7
        gbc.setState(0x7898, 0xcc5e, 0x87d0, 0xeb35, 0x1e53, 0xf8bc, 0x1, 0x1);
        gbc.writeMem(0x7898, { 0x5e });
        gbc.writeMem(0xf8bc, { 0xce });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xcc5e, gbc.sp());
        EXPECT(0x7899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xf8bc));
        // 5E 01A8
        gbc.setState(0x501f, 0x3fde, 0xf360, 0xd456, 0x1373, 0x52bc, 0x0, 0x0);
        gbc.writeMem(0x501f, { 0x5e });
        gbc.writeMem(0x52bc, { 0xd0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x3fde, gbc.sp());
        EXPECT(0x5020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 01A9
        gbc.setState(0x96a, 0x857c, 0xbd00, 0xfd4e, 0xfd14, 0x16e, 0x1, 0x0);
        gbc.writeMem(0x16e, { 0xe1 });
        gbc.writeMem(0x96a, { 0x5e });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x857c, gbc.sp());
        EXPECT(0x96b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 01AA
        gbc.setState(0xb924, 0x3781, 0x4e10, 0xa1e2, 0xc451, 0x160d, 0x0, 0x1);
        gbc.writeMem(0x160d, { 0x9e });
        gbc.writeMem(0xb924, { 0x5e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x3781, gbc.sp());
        EXPECT(0xb925, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb924));
        // 5E 01AB
        gbc.setState(0x386b, 0xb98e, 0xc510, 0xa9ec, 0xf333, 0xc099, 0x1, 0x1);
        gbc.writeMem(0x386b, { 0x5e });
        gbc.writeMem(0xc099, { 0xae });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xb98e, gbc.sp());
        EXPECT(0x386c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xc099));
        // 5E 01AC
        gbc.setState(0xa2fd, 0x9311, 0x4f0, 0x23bb, 0xeebd, 0x1c57, 0x0, 0x0);
        gbc.writeMem(0x1c57, { 0x45 });
        gbc.writeMem(0xa2fd, { 0x5e });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x9311, gbc.sp());
        EXPECT(0xa2fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa2fd));
        // 5E 01AE
        gbc.setState(0x8e45, 0xc77c, 0xae10, 0x631a, 0x8e68, 0x3420, 0x0, 0x0);
        gbc.writeMem(0x3420, { 0x6 });
        gbc.writeMem(0x8e45, { 0x5e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc77c, gbc.sp());
        EXPECT(0x8e46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8e45));
        // 5E 01AF
        gbc.setState(0x454d, 0x31c9, 0xc570, 0xbe0f, 0x8fa9, 0x47a5, 0x1, 0x0);
        gbc.writeMem(0x454d, { 0x5e });
        gbc.writeMem(0x47a5, { 0xce });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x31c9, gbc.sp());
        EXPECT(0x454e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 01B0
        gbc.setState(0x99a7, 0xfcd6, 0x1d30, 0xc5fc, 0x2207, 0x1fca, 0x0, 0x0);
        gbc.writeMem(0x1fca, { 0x7d });
        gbc.writeMem(0x99a7, { 0x5e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfcd6, gbc.sp());
        EXPECT(0x99a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x99a7));
        // 5E 01B2
        gbc.setState(0x7d82, 0x7626, 0x5af0, 0x2f09, 0xe882, 0x747c, 0x0, 0x0);
        gbc.writeMem(0x747c, { 0x54 });
        gbc.writeMem(0x7d82, { 0x5e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7626, gbc.sp());
        EXPECT(0x7d83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 01B3
        gbc.setState(0xde5d, 0xb35a, 0xd630, 0x4a5a, 0x2c92, 0x4977, 0x0, 0x0);
        gbc.writeMem(0x4977, { 0x6d });
        gbc.writeMem(0xde5d, { 0x5e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xb35a, gbc.sp());
        EXPECT(0xde5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xde5d));
        // 5E 01B4
        gbc.setState(0xd962, 0x6277, 0x8ea0, 0xbd76, 0xea5b, 0x5522, 0x0, 0x1);
        gbc.writeMem(0x5522, { 0xea });
        gbc.writeMem(0xd962, { 0x5e });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6277, gbc.sp());
        EXPECT(0xd963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd962));
        // 5E 01B5
        gbc.setState(0xb020, 0x19c4, 0xbe80, 0xa10f, 0x772, 0x933c, 0x0, 0x1);
        gbc.writeMem(0x933c, { 0xa8 });
        gbc.writeMem(0xb020, { 0x5e });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x19c4, gbc.sp());
        EXPECT(0xb021, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0x933c));
        EXPECT(0x5e, gbc.readMem(0xb020));
        // 5E 01B6
        gbc.setState(0x64f7, 0x87c0, 0x1820, 0xd4cb, 0x29db, 0x266d, 0x1, 0x1);
        gbc.writeMem(0x266d, { 0xdb });
        gbc.writeMem(0x64f7, { 0x5e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x87c0, gbc.sp());
        EXPECT(0x64f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 01B7
        gbc.setState(0xa151, 0x3f0e, 0xa740, 0xbd8a, 0xe4d9, 0xa668, 0x1, 0x1);
        gbc.writeMem(0xa151, { 0x5e });
        gbc.writeMem(0xa668, { 0xb0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3f0e, gbc.sp());
        EXPECT(0xa152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa151));
        EXPECT(0xb0, gbc.readMem(0xa668));
        // 5E 01B8
        gbc.setState(0x90c6, 0xb206, 0xb300, 0xdf78, 0xab29, 0xed8d, 0x1, 0x0);
        gbc.writeMem(0x90c6, { 0x5e });
        gbc.writeMem(0xed8d, { 0x1 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xb206, gbc.sp());
        EXPECT(0x90c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x90c6));
        EXPECT(0x1, gbc.readMem(0xed8d));
        // 5E 01B9
        gbc.setState(0x2d72, 0x679c, 0x1d00, 0x13b3, 0x496c, 0x97f3, 0x0, 0x0);
        gbc.writeMem(0x2d72, { 0x5e });
        gbc.writeMem(0x97f3, { 0x8e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x679c, gbc.sp());
        EXPECT(0x2d73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0x97f3));
        // 5E 01BA
        gbc.setState(0x403e, 0x2b1d, 0xeea0, 0x7ebe, 0x4232, 0xb965, 0x1, 0x0);
        gbc.writeMem(0x403e, { 0x5e });
        gbc.writeMem(0xb965, { 0x5 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2b1d, gbc.sp());
        EXPECT(0x403f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xb965));
        // 5E 01BB
        gbc.setState(0x5797, 0x3b89, 0x5490, 0x4bea, 0xbc80, 0x3b5c, 0x1, 0x1);
        gbc.writeMem(0x3b5c, { 0xcc });
        gbc.writeMem(0x5797, { 0x5e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3b89, gbc.sp());
        EXPECT(0x5798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 01BC
        gbc.setState(0x1af4, 0xfacb, 0x2c30, 0xd19, 0x4184, 0x2711, 0x1, 0x1);
        gbc.writeMem(0x1af4, { 0x5e });
        gbc.writeMem(0x2711, { 0x91 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfacb, gbc.sp());
        EXPECT(0x1af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 01BD
        gbc.setState(0x7abe, 0xbda4, 0xb260, 0x7c4c, 0xc0d, 0x644a, 0x1, 0x0);
        gbc.writeMem(0x644a, { 0x9a });
        gbc.writeMem(0x7abe, { 0x5e });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xbda4, gbc.sp());
        EXPECT(0x7abf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 01BE
        gbc.setState(0x6a77, 0xd8df, 0xaae0, 0x91a5, 0xadbb, 0xdb2c, 0x1, 0x1);
        gbc.writeMem(0x6a77, { 0x5e });
        gbc.writeMem(0xdb2c, { 0x86 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xd8df, gbc.sp());
        EXPECT(0x6a78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xdb2c));
        // 5E 01BF
        gbc.setState(0x8381, 0x72f3, 0x7720, 0xccec, 0x1918, 0xf51e, 0x0, 0x0);
        gbc.writeMem(0x8381, { 0x5e });
        gbc.writeMem(0xf51e, { 0xaf });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x72f3, gbc.sp());
        EXPECT(0x8382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8381));
        EXPECT(0xaf, gbc.readMem(0xf51e));
        // 5E 01C0
        gbc.setState(0xe68b, 0x50c4, 0x2f50, 0x18a1, 0x6300, 0x8f92, 0x0, 0x0);
        gbc.writeMem(0x8f92, { 0x5f });
        gbc.writeMem(0xe68b, { 0x5e });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x50c4, gbc.sp());
        EXPECT(0xe68c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x8f92));
        EXPECT(0x5e, gbc.readMem(0xe68b));
        // 5E 01C1
        gbc.setState(0x6b94, 0xd5b1, 0xcb0, 0x7f6b, 0xbef0, 0x2d4b, 0x0, 0x1);
        gbc.writeMem(0x2d4b, { 0x93 });
        gbc.writeMem(0x6b94, { 0x5e });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xd5b1, gbc.sp());
        EXPECT(0x6b95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 01C2
        gbc.setState(0xe490, 0xf174, 0xf770, 0xfe1f, 0xa33d, 0xd64f, 0x1, 0x0);
        gbc.writeMem(0xd64f, { 0xfa });
        gbc.writeMem(0xe490, { 0x5e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf174, gbc.sp());
        EXPECT(0xe491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xd64f));
        EXPECT(0x5e, gbc.readMem(0xe490));
        // 5E 01C3
        gbc.setState(0x1383, 0xe095, 0xd620, 0x7c05, 0xdf15, 0xf197, 0x1, 0x0);
        gbc.writeMem(0x1383, { 0x5e });
        gbc.writeMem(0xf197, { 0xee });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe095, gbc.sp());
        EXPECT(0x1384, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xf197));
        // 5E 01C4
        gbc.setState(0xc633, 0xfc4f, 0x7840, 0x5d0c, 0x2760, 0xd362, 0x0, 0x0);
        gbc.writeMem(0xc633, { 0x5e });
        gbc.writeMem(0xd362, { 0x35 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xfc4f, gbc.sp());
        EXPECT(0xc634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc633));
        EXPECT(0x35, gbc.readMem(0xd362));
        // 5E 01C5
        gbc.setState(0xae2c, 0x53bd, 0xa480, 0x7dd4, 0x543d, 0x19c3, 0x1, 0x1);
        gbc.writeMem(0x19c3, { 0xde });
        gbc.writeMem(0xae2c, { 0x5e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x53bd, gbc.sp());
        EXPECT(0xae2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xae2c));
        // 5E 01C6
        gbc.setState(0xcd00, 0x534d, 0xb490, 0xf0c5, 0x42a6, 0x86dc, 0x1, 0x1);
        gbc.writeMem(0x86dc, { 0x1c });
        gbc.writeMem(0xcd00, { 0x5e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x534d, gbc.sp());
        EXPECT(0xcd01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x86dc));
        EXPECT(0x5e, gbc.readMem(0xcd00));
        // 5E 01C7
        gbc.setState(0x61d6, 0x186b, 0x4ad0, 0x3cbc, 0xe4dc, 0x8bfa, 0x0, 0x0);
        gbc.writeMem(0x61d6, { 0x5e });
        gbc.writeMem(0x8bfa, { 0x23 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x186b, gbc.sp());
        EXPECT(0x61d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0x8bfa));
        // 5E 01C8
        gbc.setState(0xc197, 0x8832, 0x5450, 0x397a, 0xf273, 0xac93, 0x0, 0x0);
        gbc.writeMem(0xac93, { 0x12 });
        gbc.writeMem(0xc197, { 0x5e });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8832, gbc.sp());
        EXPECT(0xc198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x12, gbc.readMem(0xac93));
        EXPECT(0x5e, gbc.readMem(0xc197));
        // 5E 01C9
        gbc.setState(0x5c3a, 0x9b25, 0x41e0, 0x5726, 0xa7f9, 0xd9e7, 0x0, 0x1);
        gbc.writeMem(0x5c3a, { 0x5e });
        gbc.writeMem(0xd9e7, { 0xd6 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9b25, gbc.sp());
        EXPECT(0x5c3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xd9e7));
        // 5E 01CA
        gbc.setState(0xbffc, 0xa5dd, 0x6520, 0x707, 0xa450, 0xc4d5, 0x1, 0x1);
        gbc.writeMem(0xbffc, { 0x5e });
        gbc.writeMem(0xc4d5, { 0x30 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa5dd, gbc.sp());
        EXPECT(0xbffd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbffc));
        EXPECT(0x30, gbc.readMem(0xc4d5));
        // 5E 01CB
        gbc.setState(0x61fa, 0x849, 0x1800, 0xd563, 0x29e3, 0x22b7, 0x1, 0x1);
        gbc.writeMem(0x22b7, { 0x31 });
        gbc.writeMem(0x61fa, { 0x5e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x849, gbc.sp());
        EXPECT(0x61fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 01CC
        gbc.setState(0x4a1d, 0x4cba, 0xaaf0, 0x1869, 0xea51, 0xc9cc, 0x1, 0x1);
        gbc.writeMem(0x4a1d, { 0x5e });
        gbc.writeMem(0xc9cc, { 0xce });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x4cba, gbc.sp());
        EXPECT(0x4a1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xce, gbc.readMem(0xc9cc));
        // 5E 01CD
        gbc.setState(0x8e11, 0x5da4, 0x250, 0xf682, 0x685c, 0x5bc8, 0x1, 0x1);
        gbc.writeMem(0x5bc8, { 0xfe });
        gbc.writeMem(0x8e11, { 0x5e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x5da4, gbc.sp());
        EXPECT(0x8e12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8e11));
        // 5E 01CE
        gbc.setState(0x9389, 0x4721, 0xf7c0, 0x5c7b, 0x66f7, 0x874d, 0x1, 0x0);
        gbc.writeMem(0x874d, { 0x7 });
        gbc.writeMem(0x9389, { 0x5e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x4721, gbc.sp());
        EXPECT(0x938a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x874d));
        EXPECT(0x5e, gbc.readMem(0x9389));
        // 5E 01CF
        gbc.setState(0x91eb, 0x450f, 0xc6d0, 0x3238, 0xe600, 0x1645, 0x1, 0x0);
        gbc.writeMem(0x1645, { 0x26 });
        gbc.writeMem(0x91eb, { 0x5e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x450f, gbc.sp());
        EXPECT(0x91ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x91eb));
        // 5E 01D0
        gbc.setState(0xe43b, 0x4cbb, 0x8680, 0x8b95, 0x8163, 0x558d, 0x1, 0x0);
        gbc.writeMem(0x558d, { 0x2c });
        gbc.writeMem(0xe43b, { 0x5e });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x4cbb, gbc.sp());
        EXPECT(0xe43c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe43b));
        // 5E 01D1
        gbc.setState(0x14a4, 0xe866, 0x3e00, 0x66fe, 0xe91c, 0x5fb8, 0x1, 0x0);
        gbc.writeMem(0x14a4, { 0x5e });
        gbc.writeMem(0x5fb8, { 0xac });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe866, gbc.sp());
        EXPECT(0x14a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 01D2
        gbc.setState(0x488e, 0xca9b, 0x45b0, 0xf4aa, 0x40e9, 0xa034, 0x1, 0x0);
        gbc.writeMem(0x488e, { 0x5e });
        gbc.writeMem(0xa034, { 0x87 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xca9b, gbc.sp());
        EXPECT(0x488f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa034));
        // 5E 01D4
        gbc.setState(0xc421, 0x16e5, 0x88d0, 0x63aa, 0x25d1, 0xb280, 0x0, 0x0);
        gbc.writeMem(0xb280, { 0x3c });
        gbc.writeMem(0xc421, { 0x5e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x16e5, gbc.sp());
        EXPECT(0xc422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xb280));
        EXPECT(0x5e, gbc.readMem(0xc421));
        // 5E 01D5
        gbc.setState(0x9183, 0xdd5d, 0xc620, 0x81f1, 0xfb06, 0x75c9, 0x1, 0x0);
        gbc.writeMem(0x75c9, { 0xa2 });
        gbc.writeMem(0x9183, { 0x5e });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xdd5d, gbc.sp());
        EXPECT(0x9184, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9183));
        // 5E 01D7
        gbc.setState(0x58ff, 0x2d7a, 0x5c00, 0x29a3, 0xff7b, 0xa56f, 0x1, 0x1);
        gbc.writeMem(0x58ff, { 0x5e });
        gbc.writeMem(0xa56f, { 0x1a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x2d7a, gbc.sp());
        EXPECT(0x5900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xa56f));
        // 5E 01D8
        gbc.setState(0x2ec7, 0xd3b1, 0x8fc0, 0x18c3, 0xfe01, 0x5d3b, 0x1, 0x0);
        gbc.writeMem(0x2ec7, { 0x5e });
        gbc.writeMem(0x5d3b, { 0x7 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd3b1, gbc.sp());
        EXPECT(0x2ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 01D9
        gbc.setState(0x57b5, 0xf02c, 0x7950, 0xb3c7, 0x636d, 0xbc97, 0x1, 0x0);
        gbc.writeMem(0x57b5, { 0x5e });
        gbc.writeMem(0xbc97, { 0xc5 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xf02c, gbc.sp());
        EXPECT(0x57b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbc97));
        // 5E 01DA
        gbc.setState(0x271a, 0x16a8, 0x8170, 0x81ad, 0x8b9b, 0x8f11, 0x0, 0x1);
        gbc.writeMem(0x271a, { 0x5e });
        gbc.writeMem(0x8f11, { 0x16 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x16a8, gbc.sp());
        EXPECT(0x271b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0x8f11));
        // 5E 01DB
        gbc.setState(0x98cc, 0x4140, 0x1020, 0xe0c0, 0x5616, 0xcf40, 0x1, 0x0);
        gbc.writeMem(0x98cc, { 0x5e });
        gbc.writeMem(0xcf40, { 0x6f });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4140, gbc.sp());
        EXPECT(0x98cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x98cc));
        EXPECT(0x6f, gbc.readMem(0xcf40));
        // 5E 01DC
        gbc.setState(0x2a64, 0xab48, 0x67b0, 0x391d, 0x54c3, 0x7205, 0x0, 0x0);
        gbc.writeMem(0x2a64, { 0x5e });
        gbc.writeMem(0x7205, { 0x25 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xab48, gbc.sp());
        EXPECT(0x2a65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 01DD
        gbc.setState(0xb799, 0x9179, 0xc0b0, 0x4a8d, 0xe381, 0xedc4, 0x0, 0x0);
        gbc.writeMem(0xb799, { 0x5e });
        gbc.writeMem(0xedc4, { 0x4c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9179, gbc.sp());
        EXPECT(0xb79a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb799));
        EXPECT(0x4c, gbc.readMem(0xedc4));
        // 5E 01DE
        gbc.setState(0x4ba5, 0xe24a, 0x7580, 0xdc3c, 0xb1d8, 0xfe03, 0x1, 0x0);
        gbc.writeMem(0x4ba5, { 0x5e });
        gbc.writeMem(0xfe03, { 0xca });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe24a, gbc.sp());
        EXPECT(0x4ba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xfe03));
        // 5E 01E0
        gbc.setState(0xaa76, 0x41af, 0x9780, 0xf291, 0xda4, 0x6411, 0x1, 0x0);
        gbc.writeMem(0x6411, { 0x78 });
        gbc.writeMem(0xaa76, { 0x5e });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x41af, gbc.sp());
        EXPECT(0xaa77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xaa76));
        // 5E 01E1
        gbc.setState(0x7ee2, 0xd51f, 0xa2e0, 0x7799, 0xff25, 0x7ede, 0x0, 0x0);
        gbc.writeMem(0x7ede, { 0x30 });
        gbc.writeMem(0x7ee2, { 0x5e });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd51f, gbc.sp());
        EXPECT(0x7ee3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 01E2
        gbc.setState(0x1ac8, 0x21e1, 0xcfc0, 0xcce5, 0x82c9, 0xbce9, 0x1, 0x1);
        gbc.writeMem(0x1ac8, { 0x5e });
        gbc.writeMem(0xbce9, { 0x2 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x21e1, gbc.sp());
        EXPECT(0x1ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xbce9));
        // 5E 01E3
        gbc.setState(0x97e4, 0xac44, 0x3530, 0x67f4, 0x6ceb, 0x1a84, 0x0, 0x1);
        gbc.writeMem(0x1a84, { 0x1d });
        gbc.writeMem(0x97e4, { 0x5e });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xac44, gbc.sp());
        EXPECT(0x97e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x97e4));
        // 5E 01E4
        gbc.setState(0x5fe, 0x4b09, 0x32d0, 0x7640, 0x5b56, 0xfc0a, 0x1, 0x0);
        gbc.writeMem(0x5fe, { 0x5e });
        gbc.writeMem(0xfc0a, { 0x2f });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4b09, gbc.sp());
        EXPECT(0x5ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xfc0a));
        // 5E 01E5
        gbc.setState(0x496b, 0xc021, 0x28b0, 0x496, 0x43dd, 0x7f66, 0x0, 0x0);
        gbc.writeMem(0x496b, { 0x5e });
        gbc.writeMem(0x7f66, { 0xe4 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc021, gbc.sp());
        EXPECT(0x496c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 01E6
        gbc.setState(0x93c6, 0xb9b3, 0x55f0, 0x3d4, 0x11ba, 0xe83, 0x1, 0x1);
        gbc.writeMem(0xe83, { 0x73 });
        gbc.writeMem(0x93c6, { 0x5e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb9b3, gbc.sp());
        EXPECT(0x93c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x93c6));
        // 5E 01E7
        gbc.setState(0x487f, 0x1e9, 0x8300, 0xc85d, 0xb993, 0x7a73, 0x0, 0x1);
        gbc.writeMem(0x487f, { 0x5e });
        gbc.writeMem(0x7a73, { 0x58 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1e9, gbc.sp());
        EXPECT(0x4880, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 01E8
        gbc.setState(0xd652, 0x35ef, 0xa40, 0xa03, 0xf0ad, 0x6a1c, 0x0, 0x1);
        gbc.writeMem(0x6a1c, { 0xd });
        gbc.writeMem(0xd652, { 0x5e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x35ef, gbc.sp());
        EXPECT(0xd653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd652));
        // 5E 01E9
        gbc.setState(0xe498, 0x50ef, 0xc220, 0xd4a1, 0x7e69, 0x1d5c, 0x1, 0x0);
        gbc.writeMem(0x1d5c, { 0xfb });
        gbc.writeMem(0xe498, { 0x5e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x50ef, gbc.sp());
        EXPECT(0xe499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe498));
        // 5E 01EA
        gbc.setState(0xbde, 0xa257, 0x3ec0, 0xabf, 0x37b9, 0xe33b, 0x0, 0x1);
        gbc.writeMem(0xbde, { 0x5e });
        gbc.writeMem(0xe33b, { 0xe1 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa257, gbc.sp());
        EXPECT(0xbdf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xe33b));
        // 5E 01EB
        gbc.setState(0xdf99, 0x6c07, 0x4d90, 0xc681, 0xa956, 0x57fb, 0x0, 0x0);
        gbc.writeMem(0x57fb, { 0xde });
        gbc.writeMem(0xdf99, { 0x5e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6c07, gbc.sp());
        EXPECT(0xdf9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xdf99));
        // 5E 01EC
        gbc.setState(0x1b37, 0x8f5b, 0x6280, 0x17b, 0x10d8, 0x2ea2, 0x0, 0x1);
        gbc.writeMem(0x1b37, { 0x5e });
        gbc.writeMem(0x2ea2, { 0xad });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8f5b, gbc.sp());
        EXPECT(0x1b38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 01ED
        gbc.setState(0xc539, 0x4b71, 0xbf70, 0x65b4, 0xc331, 0x490c, 0x1, 0x0);
        gbc.writeMem(0x490c, { 0x55 });
        gbc.writeMem(0xc539, { 0x5e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4b71, gbc.sp());
        EXPECT(0xc53a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc539));
        // 5E 01EE
        gbc.setState(0x36dc, 0x7cb8, 0x9ca0, 0xb709, 0x6859, 0xf78f, 0x0, 0x1);
        gbc.writeMem(0x36dc, { 0x5e });
        gbc.writeMem(0xf78f, { 0xc5 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7cb8, gbc.sp());
        EXPECT(0x36dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xf78f));
        // 5E 01EF
        gbc.setState(0x8e2c, 0x444e, 0xa4d0, 0x3776, 0x44c2, 0x39b3, 0x1, 0x1);
        gbc.writeMem(0x39b3, { 0xaa });
        gbc.writeMem(0x8e2c, { 0x5e });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x444e, gbc.sp());
        EXPECT(0x8e2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8e2c));
        // 5E 01F0
        gbc.setState(0x6c65, 0x3bd3, 0x2bb0, 0x1740, 0xc85, 0xdbd5, 0x1, 0x0);
        gbc.writeMem(0x6c65, { 0x5e });
        gbc.writeMem(0xdbd5, { 0x19 });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3bd3, gbc.sp());
        EXPECT(0x6c66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xdbd5));
        // 5E 01F1
        gbc.setState(0x47fa, 0xda46, 0x3190, 0x10c4, 0x94c1, 0x2ddd, 0x0, 0x0);
        gbc.writeMem(0x2ddd, { 0x57 });
        gbc.writeMem(0x47fa, { 0x5e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xda46, gbc.sp());
        EXPECT(0x47fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 01F2
        gbc.setState(0x4521, 0x25ef, 0x5870, 0x5990, 0x4ab9, 0x2c60, 0x0, 0x0);
        gbc.writeMem(0x2c60, { 0x3e });
        gbc.writeMem(0x4521, { 0x5e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x25ef, gbc.sp());
        EXPECT(0x4522, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 01F3
        gbc.setState(0x6f64, 0x24f1, 0x3a60, 0xb159, 0xf7a7, 0x159c, 0x0, 0x0);
        gbc.writeMem(0x159c, { 0x90 });
        gbc.writeMem(0x6f64, { 0x5e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x24f1, gbc.sp());
        EXPECT(0x6f65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 01F4
        gbc.setState(0x998d, 0x5d04, 0x4160, 0xd305, 0xb905, 0x5d7, 0x1, 0x0);
        gbc.writeMem(0x5d7, { 0xfe });
        gbc.writeMem(0x998d, { 0x5e });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5d04, gbc.sp());
        EXPECT(0x998e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x998d));
        // 5E 01F5
        gbc.setState(0xed93, 0x1f6e, 0x9380, 0x38b1, 0x85b3, 0xa837, 0x1, 0x1);
        gbc.writeMem(0xa837, { 0x78 });
        gbc.writeMem(0xed93, { 0x5e });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1f6e, gbc.sp());
        EXPECT(0xed94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x78, gbc.readMem(0xa837));
        EXPECT(0x5e, gbc.readMem(0xed93));
        // 5E 01F6
        gbc.setState(0xdb9e, 0x2f33, 0x6460, 0x83d7, 0x1e0e, 0xac29, 0x1, 0x1);
        gbc.writeMem(0xac29, { 0x55 });
        gbc.writeMem(0xdb9e, { 0x5e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2f33, gbc.sp());
        EXPECT(0xdb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xac29));
        EXPECT(0x5e, gbc.readMem(0xdb9e));
        // 5E 01F7
        gbc.setState(0x204d, 0x8221, 0x3a50, 0x372a, 0x7b03, 0xcd8, 0x1, 0x0);
        gbc.writeMem(0xcd8, { 0x30 });
        gbc.writeMem(0x204d, { 0x5e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8221, gbc.sp());
        EXPECT(0x204e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 01F8
        gbc.setState(0xd3f2, 0x6bb7, 0xb4f0, 0x2f91, 0x4697, 0x5b65, 0x0, 0x0);
        gbc.writeMem(0x5b65, { 0xcb });
        gbc.writeMem(0xd3f2, { 0x5e });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x6bb7, gbc.sp());
        EXPECT(0xd3f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd3f2));
        // 5E 01F9
        gbc.setState(0x2318, 0x9b81, 0xdcc0, 0x8a2e, 0x4548, 0xcb08, 0x1, 0x1);
        gbc.writeMem(0x2318, { 0x5e });
        gbc.writeMem(0xcb08, { 0xe7 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x9b81, gbc.sp());
        EXPECT(0x2319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xcb08));
        // 5E 01FA
        gbc.setState(0x703d, 0x19b6, 0x5b30, 0xc840, 0xaca4, 0xfa04, 0x0, 0x0);
        gbc.writeMem(0x703d, { 0x5e });
        gbc.writeMem(0xfa04, { 0x4f });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x19b6, gbc.sp());
        EXPECT(0x703e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xfa04));
        // 5E 01FB
        gbc.setState(0x669d, 0xc27f, 0x450, 0x56c7, 0x77fa, 0xedd8, 0x0, 0x1);
        gbc.writeMem(0x669d, { 0x5e });
        gbc.writeMem(0xedd8, { 0x7c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc27f, gbc.sp());
        EXPECT(0x669e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xedd8));
        // 5E 01FC
        gbc.setState(0xe047, 0x3976, 0x2560, 0x1e5c, 0x8ffc, 0x6c35, 0x0, 0x1);
        gbc.writeMem(0x6c35, { 0x6 });
        gbc.writeMem(0xe047, { 0x5e });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3976, gbc.sp());
        EXPECT(0xe048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe047));
        // 5E 01FD
        gbc.setState(0x1adf, 0xcb0b, 0xf7e0, 0x6462, 0x873a, 0x60dd, 0x1, 0x1);
        gbc.writeMem(0x1adf, { 0x5e });
        gbc.writeMem(0x60dd, { 0xac });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xcb0b, gbc.sp());
        EXPECT(0x1ae0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 01FE
        gbc.setState(0x6c93, 0x41a8, 0xa9d0, 0xd3e0, 0x73be, 0x1eb6, 0x1, 0x0);
        gbc.writeMem(0x1eb6, { 0x8c });
        gbc.writeMem(0x6c93, { 0x5e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x41a8, gbc.sp());
        EXPECT(0x6c94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0200
        gbc.setState(0xc08b, 0x4340, 0x4470, 0x77b7, 0xaa02, 0x2b83, 0x1, 0x0);
        gbc.writeMem(0x2b83, { 0xe7 });
        gbc.writeMem(0xc08b, { 0x5e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x4340, gbc.sp());
        EXPECT(0xc08c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc08b));
        // 5E 0201
        gbc.setState(0xcbb3, 0xf55, 0x7d80, 0x52d5, 0xd05b, 0x229e, 0x0, 0x0);
        gbc.writeMem(0x229e, { 0xdd });
        gbc.writeMem(0xcbb3, { 0x5e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf55, gbc.sp());
        EXPECT(0xcbb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcbb3));
        // 5E 0202
        gbc.setState(0x420e, 0x685, 0x19b0, 0x362, 0x2c1d, 0xe4f6, 0x1, 0x1);
        gbc.writeMem(0x420e, { 0x5e });
        gbc.writeMem(0xe4f6, { 0xe2 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x685, gbc.sp());
        EXPECT(0x420f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe2, gbc.readMem(0xe4f6));
        // 5E 0203
        gbc.setState(0xac1f, 0x4888, 0xda40, 0xad45, 0x55c3, 0x7c27, 0x1, 0x1);
        gbc.writeMem(0x7c27, { 0x6c });
        gbc.writeMem(0xac1f, { 0x5e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x4888, gbc.sp());
        EXPECT(0xac20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xac1f));
        // 5E 0204
        gbc.setState(0x9577, 0xcc4b, 0x1df0, 0x69d5, 0x3846, 0x4c3e, 0x1, 0x0);
        gbc.writeMem(0x4c3e, { 0xcf });
        gbc.writeMem(0x9577, { 0x5e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcc4b, gbc.sp());
        EXPECT(0x9578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9577));
        // 5E 0205
        gbc.setState(0x52e5, 0x288a, 0x2e70, 0x842b, 0x3cc3, 0xac89, 0x0, 0x0);
        gbc.writeMem(0x52e5, { 0x5e });
        gbc.writeMem(0xac89, { 0xcb });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x288a, gbc.sp());
        EXPECT(0x52e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac89));
        // 5E 0206
        gbc.setState(0xbdca, 0x7ac1, 0xe840, 0xe8ab, 0xeec0, 0x19c9, 0x1, 0x0);
        gbc.writeMem(0x19c9, { 0xa2 });
        gbc.writeMem(0xbdca, { 0x5e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7ac1, gbc.sp());
        EXPECT(0xbdcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbdca));
        // 5E 0207
        gbc.setState(0x49c7, 0x58c9, 0xa9e0, 0xf012, 0xb8bc, 0xfab7, 0x1, 0x1);
        gbc.writeMem(0x49c7, { 0x5e });
        gbc.writeMem(0xfab7, { 0x4e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x58c9, gbc.sp());
        EXPECT(0x49c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xfab7));
        // 5E 0208
        gbc.setState(0x1333, 0x4273, 0x90b0, 0x2460, 0x1583, 0x9d12, 0x0, 0x1);
        gbc.writeMem(0x1333, { 0x5e });
        gbc.writeMem(0x9d12, { 0xa2 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x4273, gbc.sp());
        EXPECT(0x1334, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0x9d12));
        // 5E 0209
        gbc.setState(0x61c1, 0xa1b7, 0x5c60, 0x4a3a, 0xe65d, 0x5789, 0x0, 0x0);
        gbc.writeMem(0x5789, { 0x11 });
        gbc.writeMem(0x61c1, { 0x5e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa1b7, gbc.sp());
        EXPECT(0x61c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 020A
        gbc.setState(0x383c, 0x2e59, 0xfd70, 0x46f5, 0xbfeb, 0xe247, 0x1, 0x0);
        gbc.writeMem(0x383c, { 0x5e });
        gbc.writeMem(0xe247, { 0x56 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x2e59, gbc.sp());
        EXPECT(0x383d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0xe247));
        // 5E 020B
        gbc.setState(0x18aa, 0xf1ec, 0x61e0, 0x700c, 0xded9, 0x44f7, 0x1, 0x1);
        gbc.writeMem(0x18aa, { 0x5e });
        gbc.writeMem(0x44f7, { 0x4c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf1ec, gbc.sp());
        EXPECT(0x18ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 020C
        gbc.setState(0x961b, 0xccac, 0x5ec0, 0x14c0, 0x71d1, 0x2fc9, 0x0, 0x0);
        gbc.writeMem(0x2fc9, { 0x78 });
        gbc.writeMem(0x961b, { 0x5e });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xccac, gbc.sp());
        EXPECT(0x961c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x961b));
        // 5E 020D
        gbc.setState(0x7651, 0xe6a4, 0x13a0, 0x5342, 0x15ec, 0x2414, 0x1, 0x0);
        gbc.writeMem(0x2414, { 0xe1 });
        gbc.writeMem(0x7651, { 0x5e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xe6a4, gbc.sp());
        EXPECT(0x7652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 020E
        gbc.setState(0x6240, 0x42cc, 0xae70, 0x8270, 0x8795, 0x10b6, 0x1, 0x1);
        gbc.writeMem(0x10b6, { 0xa7 });
        gbc.writeMem(0x6240, { 0x5e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x42cc, gbc.sp());
        EXPECT(0x6241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0210
        gbc.setState(0xe03e, 0x6e4, 0x920, 0xe4b5, 0x189d, 0xa570, 0x0, 0x1);
        gbc.writeMem(0xa570, { 0xa0 });
        gbc.writeMem(0xe03e, { 0x5e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x6e4, gbc.sp());
        EXPECT(0xe03f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xa570));
        EXPECT(0x5e, gbc.readMem(0xe03e));
        // 5E 0211
        gbc.setState(0x8899, 0xd6dd, 0x91b0, 0x8beb, 0x3fe0, 0x4898, 0x1, 0x0);
        gbc.writeMem(0x4898, { 0xa9 });
        gbc.writeMem(0x8899, { 0x5e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd6dd, gbc.sp());
        EXPECT(0x889a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8899));
        // 5E 0212
        gbc.setState(0xb013, 0xb6c3, 0x5510, 0xc55a, 0xa834, 0x7587, 0x0, 0x0);
        gbc.writeMem(0x7587, { 0xb9 });
        gbc.writeMem(0xb013, { 0x5e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xb6c3, gbc.sp());
        EXPECT(0xb014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb013));
        // 5E 0213
        gbc.setState(0x7fb1, 0x9809, 0xb610, 0x73fb, 0xe35a, 0xdbfe, 0x1, 0x1);
        gbc.writeMem(0x7fb1, { 0x5e });
        gbc.writeMem(0xdbfe, { 0xff });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x9809, gbc.sp());
        EXPECT(0x7fb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xdbfe));
        // 5E 0214
        gbc.setState(0xc3d3, 0x9786, 0xb730, 0xe3fc, 0xe19, 0xfd36, 0x1, 0x0);
        gbc.writeMem(0xc3d3, { 0x5e });
        gbc.writeMem(0xfd36, { 0xce });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9786, gbc.sp());
        EXPECT(0xc3d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc3d3));
        EXPECT(0xce, gbc.readMem(0xfd36));
        // 5E 0215
        gbc.setState(0xe823, 0xc2a0, 0xe580, 0x46e8, 0x3a0f, 0xa4e0, 0x0, 0x1);
        gbc.writeMem(0xa4e0, { 0xa9 });
        gbc.writeMem(0xe823, { 0x5e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xc2a0, gbc.sp());
        EXPECT(0xe824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xa4e0));
        EXPECT(0x5e, gbc.readMem(0xe823));
        // 5E 0216
        gbc.setState(0xced9, 0x1fd2, 0xd4e0, 0x9e56, 0x2b68, 0x7eb2, 0x0, 0x0);
        gbc.writeMem(0x7eb2, { 0xae });
        gbc.writeMem(0xced9, { 0x5e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x1fd2, gbc.sp());
        EXPECT(0xceda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xced9));
        // 5E 0217
        gbc.setState(0xe4f8, 0xf797, 0xe770, 0x9b12, 0xa9c5, 0x4545, 0x0, 0x0);
        gbc.writeMem(0x4545, { 0x59 });
        gbc.writeMem(0xe4f8, { 0x5e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf797, gbc.sp());
        EXPECT(0xe4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe4f8));
        // 5E 0218
        gbc.setState(0xc94a, 0x53ca, 0x10f0, 0x262c, 0xcc98, 0xe28d, 0x0, 0x1);
        gbc.writeMem(0xc94a, { 0x5e });
        gbc.writeMem(0xe28d, { 0x6e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x53ca, gbc.sp());
        EXPECT(0xc94b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc94a));
        EXPECT(0x6e, gbc.readMem(0xe28d));
        // 5E 0219
        gbc.setState(0x5dc3, 0x6885, 0x5c30, 0xe18, 0xe554, 0x959b, 0x1, 0x0);
        gbc.writeMem(0x5dc3, { 0x5e });
        gbc.writeMem(0x959b, { 0x1 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x6885, gbc.sp());
        EXPECT(0x5dc4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x959b));
        // 5E 021A
        gbc.setState(0xd200, 0xf3f0, 0x1880, 0x633e, 0x20e7, 0xb1bc, 0x0, 0x1);
        gbc.writeMem(0xb1bc, { 0x2c });
        gbc.writeMem(0xd200, { 0x5e });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf3f0, gbc.sp());
        EXPECT(0xd201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2c, gbc.readMem(0xb1bc));
        EXPECT(0x5e, gbc.readMem(0xd200));
        // 5E 021B
        gbc.setState(0x769, 0xc656, 0x3b0, 0xe878, 0x1ec6, 0xf3ec, 0x1, 0x0);
        gbc.writeMem(0x769, { 0x5e });
        gbc.writeMem(0xf3ec, { 0xc5 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc656, gbc.sp());
        EXPECT(0x76a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xf3ec));
        // 5E 021C
        gbc.setState(0xd736, 0xbbf5, 0x66a0, 0x355a, 0xdd3c, 0xa38, 0x0, 0x1);
        gbc.writeMem(0xa38, { 0xd0 });
        gbc.writeMem(0xd736, { 0x5e });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xbbf5, gbc.sp());
        EXPECT(0xd737, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd736));
        // 5E 021D
        gbc.setState(0x6c2e, 0xb248, 0x8e50, 0xda2b, 0x439, 0x83de, 0x1, 0x1);
        gbc.writeMem(0x6c2e, { 0x5e });
        gbc.writeMem(0x83de, { 0xb2 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb248, gbc.sp());
        EXPECT(0x6c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0x83de));
        // 5E 021E
        gbc.setState(0xe526, 0x8007, 0x5c10, 0x1c02, 0x386c, 0x7048, 0x0, 0x1);
        gbc.writeMem(0x7048, { 0x1 });
        gbc.writeMem(0xe526, { 0x5e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x8007, gbc.sp());
        EXPECT(0xe527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe526));
        // 5E 0220
        gbc.setState(0x1896, 0xb458, 0x4ac0, 0xda7b, 0x2abf, 0xf2c8, 0x1, 0x1);
        gbc.writeMem(0x1896, { 0x5e });
        gbc.writeMem(0xf2c8, { 0xdc });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb458, gbc.sp());
        EXPECT(0x1897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0xf2c8));
        // 5E 0222
        gbc.setState(0xc5f, 0xd911, 0xaa00, 0xeb1a, 0x2551, 0x687, 0x1, 0x1);
        gbc.writeMem(0x687, { 0xdb });
        gbc.writeMem(0xc5f, { 0x5e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd911, gbc.sp());
        EXPECT(0xc60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0223
        gbc.setState(0x3263, 0x97a6, 0xbc50, 0x7418, 0x5f12, 0x26bb, 0x1, 0x0);
        gbc.writeMem(0x26bb, { 0x1c });
        gbc.writeMem(0x3263, { 0x5e });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x97a6, gbc.sp());
        EXPECT(0x3264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0225
        gbc.setState(0x699b, 0x61a0, 0x9550, 0x3df2, 0x818f, 0x8a11, 0x0, 0x1);
        gbc.writeMem(0x699b, { 0x5e });
        gbc.writeMem(0x8a11, { 0x5d });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x61a0, gbc.sp());
        EXPECT(0x699c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x8a11));
        // 5E 0226
        gbc.setState(0x90a7, 0xf5db, 0xe820, 0x7e2d, 0x8263, 0xded7, 0x0, 0x0);
        gbc.writeMem(0x90a7, { 0x5e });
        gbc.writeMem(0xded7, { 0x4e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf5db, gbc.sp());
        EXPECT(0x90a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x90a7));
        EXPECT(0x4e, gbc.readMem(0xded7));
        // 5E 0227
        gbc.setState(0x5f5f, 0x5f08, 0xcbe0, 0x6c6b, 0xa129, 0x5da6, 0x0, 0x1);
        gbc.writeMem(0x5da6, { 0x24 });
        gbc.writeMem(0x5f5f, { 0x5e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5f08, gbc.sp());
        EXPECT(0x5f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0228
        gbc.setState(0x640, 0x960b, 0x8560, 0x72f, 0x1dd8, 0xcb4e, 0x0, 0x0);
        gbc.writeMem(0x640, { 0x5e });
        gbc.writeMem(0xcb4e, { 0x43 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x960b, gbc.sp());
        EXPECT(0x641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xcb4e));
        // 5E 0229
        gbc.setState(0x1201, 0xb3f7, 0x9280, 0x6551, 0xa8b0, 0x24ea, 0x0, 0x1);
        gbc.writeMem(0x1201, { 0x5e });
        gbc.writeMem(0x24ea, { 0x4d });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xb3f7, gbc.sp());
        EXPECT(0x1202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 022A
        gbc.setState(0x6110, 0x5cb1, 0x3180, 0xeaad, 0x3f48, 0xfc3a, 0x1, 0x0);
        gbc.writeMem(0x6110, { 0x5e });
        gbc.writeMem(0xfc3a, { 0x42 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x5cb1, gbc.sp());
        EXPECT(0x6111, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xfc3a));
        // 5E 022B
        gbc.setState(0x2ef1, 0x354e, 0xb9a0, 0x1779, 0x39f4, 0x5b0b, 0x1, 0x1);
        gbc.writeMem(0x2ef1, { 0x5e });
        gbc.writeMem(0x5b0b, { 0x3 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x354e, gbc.sp());
        EXPECT(0x2ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 022C
        gbc.setState(0x749d, 0x2429, 0xe870, 0x7df, 0xbd52, 0x344c, 0x1, 0x1);
        gbc.writeMem(0x344c, { 0xc });
        gbc.writeMem(0x749d, { 0x5e });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x2429, gbc.sp());
        EXPECT(0x749e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 022D
        gbc.setState(0x4962, 0x3f1f, 0x5090, 0xfd1f, 0x5f76, 0x5f78, 0x0, 0x0);
        gbc.writeMem(0x4962, { 0x5e });
        gbc.writeMem(0x5f78, { 0x56 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x3f1f, gbc.sp());
        EXPECT(0x4963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 022E
        gbc.setState(0xe2ff, 0xdfc2, 0x7550, 0x957b, 0x15cf, 0x765f, 0x1, 0x1);
        gbc.writeMem(0x765f, { 0x14 });
        gbc.writeMem(0xe2ff, { 0x5e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xdfc2, gbc.sp());
        EXPECT(0xe300, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe2ff));
        // 5E 022F
        gbc.setState(0x5c1f, 0x77b, 0xf890, 0x4e0b, 0xc740, 0x5843, 0x0, 0x0);
        gbc.writeMem(0x5843, { 0xe6 });
        gbc.writeMem(0x5c1f, { 0x5e });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x77b, gbc.sp());
        EXPECT(0x5c20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0230
        gbc.setState(0x98d2, 0xf8da, 0xe410, 0xa82, 0x5744, 0x78fe, 0x1, 0x1);
        gbc.writeMem(0x78fe, { 0xe6 });
        gbc.writeMem(0x98d2, { 0x5e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xf8da, gbc.sp());
        EXPECT(0x98d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x98d2));
        // 5E 0231
        gbc.setState(0x623c, 0x38f4, 0x2950, 0x13b6, 0xe3c9, 0xc9c8, 0x0, 0x0);
        gbc.writeMem(0x623c, { 0x5e });
        gbc.writeMem(0xc9c8, { 0x37 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x38f4, gbc.sp());
        EXPECT(0x623d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xc9c8));
        // 5E 0232
        gbc.setState(0x7c39, 0x17c5, 0x92b0, 0x47dd, 0x1d08, 0x8671, 0x0, 0x1);
        gbc.writeMem(0x7c39, { 0x5e });
        gbc.writeMem(0x8671, { 0x76 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x17c5, gbc.sp());
        EXPECT(0x7c3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x8671));
        // 5E 0233
        gbc.setState(0xe052, 0x446e, 0xac00, 0x16fb, 0xcbca, 0x46af, 0x0, 0x1);
        gbc.writeMem(0x46af, { 0x52 });
        gbc.writeMem(0xe052, { 0x5e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x446e, gbc.sp());
        EXPECT(0xe053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe052));
        // 5E 0234
        gbc.setState(0x28cf, 0x7650, 0xc680, 0xc96d, 0xd9d7, 0x309e, 0x1, 0x0);
        gbc.writeMem(0x28cf, { 0x5e });
        gbc.writeMem(0x309e, { 0x59 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7650, gbc.sp());
        EXPECT(0x28d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0235
        gbc.setState(0x675b, 0x29a3, 0x7190, 0xdf0, 0x1af4, 0xcbb7, 0x1, 0x1);
        gbc.writeMem(0x675b, { 0x5e });
        gbc.writeMem(0xcbb7, { 0x79 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x29a3, gbc.sp());
        EXPECT(0x675c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xcbb7));
        // 5E 0236
        gbc.setState(0x1c99, 0x731f, 0x3ec0, 0xbc11, 0xffee, 0x2e5c, 0x1, 0x0);
        gbc.writeMem(0x1c99, { 0x5e });
        gbc.writeMem(0x2e5c, { 0x78 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x731f, gbc.sp());
        EXPECT(0x1c9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0237
        gbc.setState(0xe1bb, 0x3bcc, 0x4f80, 0xe405, 0x1557, 0x76ec, 0x0, 0x1);
        gbc.writeMem(0x76ec, { 0xcc });
        gbc.writeMem(0xe1bb, { 0x5e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x3bcc, gbc.sp());
        EXPECT(0xe1bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe1bb));
        // 5E 0238
        gbc.setState(0x8859, 0x1d5d, 0x91a0, 0x24e0, 0xe963, 0x5ccf, 0x1, 0x0);
        gbc.writeMem(0x5ccf, { 0x6e });
        gbc.writeMem(0x8859, { 0x5e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1d5d, gbc.sp());
        EXPECT(0x885a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8859));
        // 5E 0239
        gbc.setState(0x2ec2, 0x4ecd, 0x3b00, 0x11e3, 0x1075, 0x7795, 0x0, 0x0);
        gbc.writeMem(0x2ec2, { 0x5e });
        gbc.writeMem(0x7795, { 0x65 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4ecd, gbc.sp());
        EXPECT(0x2ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 023A
        gbc.setState(0x7024, 0x6795, 0x7cd0, 0x1c7d, 0x5389, 0xeb1e, 0x1, 0x1);
        gbc.writeMem(0x7024, { 0x5e });
        gbc.writeMem(0xeb1e, { 0x17 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6795, gbc.sp());
        EXPECT(0x7025, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xeb1e));
        // 5E 023B
        gbc.setState(0xe7ec, 0x80bc, 0x1350, 0xeb0f, 0x7e62, 0x903a, 0x0, 0x0);
        gbc.writeMem(0x903a, { 0x25 });
        gbc.writeMem(0xe7ec, { 0x5e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x80bc, gbc.sp());
        EXPECT(0xe7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x903a));
        EXPECT(0x5e, gbc.readMem(0xe7ec));
        // 5E 023C
        gbc.setState(0x6c15, 0x1fc7, 0xc8c0, 0x6ac6, 0x2313, 0xe107, 0x0, 0x0);
        gbc.writeMem(0x6c15, { 0x5e });
        gbc.writeMem(0xe107, { 0xe5 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1fc7, gbc.sp());
        EXPECT(0x6c16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xe107));
        // 5E 023D
        gbc.setState(0x3cd3, 0x27d7, 0x36a0, 0xbb10, 0x264, 0x4014, 0x1, 0x0);
        gbc.writeMem(0x3cd3, { 0x5e });
        gbc.writeMem(0x4014, { 0x76 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x27d7, gbc.sp());
        EXPECT(0x3cd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 023F
        gbc.setState(0x7de6, 0xb959, 0xf810, 0x50db, 0x1481, 0xe8d0, 0x1, 0x1);
        gbc.writeMem(0x7de6, { 0x5e });
        gbc.writeMem(0xe8d0, { 0xc8 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xb959, gbc.sp());
        EXPECT(0x7de7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe8d0));
        // 5E 0240
        gbc.setState(0xb107, 0x670a, 0xf160, 0x4eb5, 0x5692, 0x4d21, 0x0, 0x1);
        gbc.writeMem(0x4d21, { 0x4 });
        gbc.writeMem(0xb107, { 0x5e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x670a, gbc.sp());
        EXPECT(0xb108, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb107));
        // 5E 0241
        gbc.setState(0x72f6, 0x2347, 0x60b0, 0x6557, 0x6e61, 0x3c5a, 0x0, 0x1);
        gbc.writeMem(0x3c5a, { 0x42 });
        gbc.writeMem(0x72f6, { 0x5e });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x2347, gbc.sp());
        EXPECT(0x72f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0242
        gbc.setState(0x2d4e, 0x244d, 0x840, 0x229e, 0x8f01, 0x253e, 0x1, 0x1);
        gbc.writeMem(0x253e, { 0xa });
        gbc.writeMem(0x2d4e, { 0x5e });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x244d, gbc.sp());
        EXPECT(0x2d4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0243
        gbc.setState(0x1a7b, 0xfb75, 0x5500, 0xe607, 0xb8b9, 0x8ce5, 0x0, 0x0);
        gbc.writeMem(0x1a7b, { 0x5e });
        gbc.writeMem(0x8ce5, { 0x24 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfb75, gbc.sp());
        EXPECT(0x1a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x8ce5));
        // 5E 0244
        gbc.setState(0x305a, 0x3e11, 0x5dc0, 0x858c, 0xbd6f, 0x714c, 0x1, 0x1);
        gbc.writeMem(0x305a, { 0x5e });
        gbc.writeMem(0x714c, { 0xe2 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x3e11, gbc.sp());
        EXPECT(0x305b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0246
        gbc.setState(0xb96a, 0x3ee4, 0x3f40, 0x1238, 0x1231, 0x81e1, 0x0, 0x1);
        gbc.writeMem(0x81e1, { 0x7c });
        gbc.writeMem(0xb96a, { 0x5e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3ee4, gbc.sp());
        EXPECT(0xb96b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0x81e1));
        EXPECT(0x5e, gbc.readMem(0xb96a));
        // 5E 0247
        gbc.setState(0x454a, 0x6922, 0x5960, 0xd0c2, 0x57e1, 0xa56a, 0x0, 0x0);
        gbc.writeMem(0x454a, { 0x5e });
        gbc.writeMem(0xa56a, { 0x98 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6922, gbc.sp());
        EXPECT(0x454b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa56a));
        // 5E 0248
        gbc.setState(0x6dd7, 0x515c, 0x3fa0, 0xed91, 0x9607, 0xc68a, 0x0, 0x0);
        gbc.writeMem(0x6dd7, { 0x5e });
        gbc.writeMem(0xc68a, { 0x55 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x515c, gbc.sp());
        EXPECT(0x6dd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc68a));
        // 5E 0249
        gbc.setState(0xbc4b, 0xbfe0, 0xa970, 0x466a, 0xd423, 0x104f, 0x1, 0x1);
        gbc.writeMem(0x104f, { 0xeb });
        gbc.writeMem(0xbc4b, { 0x5e });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbfe0, gbc.sp());
        EXPECT(0xbc4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbc4b));
        // 5E 024A
        gbc.setState(0x9d03, 0xd75b, 0x330, 0x2b3b, 0x29a9, 0xff05, 0x1, 0x1);
        gbc.writeMem(0x9d03, { 0x5e });
        gbc.writeMem(0xff05, { 0x83 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd75b, gbc.sp());
        EXPECT(0x9d04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9d03));
        EXPECT(0x83, gbc.readMem(0xff05));
        // 5E 024B
        gbc.setState(0x478d, 0xc0df, 0x9e50, 0x13ef, 0xc162, 0x7a81, 0x0, 0x1);
        gbc.writeMem(0x478d, { 0x5e });
        gbc.writeMem(0x7a81, { 0x2e });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc0df, gbc.sp());
        EXPECT(0x478e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 024C
        gbc.setState(0x404, 0x9985, 0xba10, 0x4ef5, 0xd609, 0xe8b1, 0x1, 0x0);
        gbc.writeMem(0x404, { 0x5e });
        gbc.writeMem(0xe8b1, { 0xd1 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9985, gbc.sp());
        EXPECT(0x405, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xe8b1));
        // 5E 024D
        gbc.setState(0xaf63, 0x7048, 0xde30, 0x9d8, 0xaa7f, 0x4666, 0x0, 0x0);
        gbc.writeMem(0x4666, { 0x1 });
        gbc.writeMem(0xaf63, { 0x5e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x7048, gbc.sp());
        EXPECT(0xaf64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xaf63));
        // 5E 024E
        gbc.setState(0x11e7, 0x8e83, 0x6060, 0x832e, 0x72ad, 0x6a7e, 0x1, 0x0);
        gbc.writeMem(0x11e7, { 0x5e });
        gbc.writeMem(0x6a7e, { 0xf8 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x8e83, gbc.sp());
        EXPECT(0x11e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 024F
        gbc.setState(0xbecc, 0xe6f8, 0x69f0, 0x2a3b, 0x52db, 0xcb86, 0x0, 0x1);
        gbc.writeMem(0xbecc, { 0x5e });
        gbc.writeMem(0xcb86, { 0x59 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xe6f8, gbc.sp());
        EXPECT(0xbecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbecc));
        EXPECT(0x59, gbc.readMem(0xcb86));
        // 5E 0251
        gbc.setState(0x3170, 0xc6dc, 0xa320, 0x76c4, 0x4bc1, 0x4a57, 0x1, 0x1);
        gbc.writeMem(0x3170, { 0x5e });
        gbc.writeMem(0x4a57, { 0xab });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xc6dc, gbc.sp());
        EXPECT(0x3171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0252
        gbc.setState(0x3d30, 0xbf86, 0xe3f0, 0x8e82, 0x2a14, 0x896, 0x0, 0x0);
        gbc.writeMem(0x896, { 0xdb });
        gbc.writeMem(0x3d30, { 0x5e });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xbf86, gbc.sp());
        EXPECT(0x3d31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0253
        gbc.setState(0x1012, 0x2024, 0x72c0, 0x5667, 0xc256, 0xa2f2, 0x1, 0x1);
        gbc.writeMem(0x1012, { 0x5e });
        gbc.writeMem(0xa2f2, { 0x42 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x2024, gbc.sp());
        EXPECT(0x1013, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xa2f2));
        // 5E 0254
        gbc.setState(0xe866, 0x7efa, 0x72b0, 0x3498, 0x9c63, 0x62dc, 0x1, 0x1);
        gbc.writeMem(0x62dc, { 0xa7 });
        gbc.writeMem(0xe866, { 0x5e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7efa, gbc.sp());
        EXPECT(0xe867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe866));
        // 5E 0255
        gbc.setState(0x831c, 0xdfab, 0x2af0, 0x2a5f, 0xcc0, 0x55a7, 0x1, 0x1);
        gbc.writeMem(0x55a7, { 0x42 });
        gbc.writeMem(0x831c, { 0x5e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xdfab, gbc.sp());
        EXPECT(0x831d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x831c));
        // 5E 0256
        gbc.setState(0x7042, 0x3a90, 0x7d10, 0xc233, 0x88c1, 0x1f7, 0x1, 0x0);
        gbc.writeMem(0x1f7, { 0x72 });
        gbc.writeMem(0x7042, { 0x5e });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x3a90, gbc.sp());
        EXPECT(0x7043, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0257
        gbc.setState(0x1a69, 0x47c9, 0xba30, 0xf170, 0x9f4, 0xa6e6, 0x0, 0x0);
        gbc.writeMem(0x1a69, { 0x5e });
        gbc.writeMem(0xa6e6, { 0x98 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x47c9, gbc.sp());
        EXPECT(0x1a6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xa6e6));
        // 5E 0258
        gbc.setState(0x7c3c, 0xb892, 0xa910, 0xd242, 0xbc49, 0xef27, 0x1, 0x1);
        gbc.writeMem(0x7c3c, { 0x5e });
        gbc.writeMem(0xef27, { 0x94 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xb892, gbc.sp());
        EXPECT(0x7c3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xef27));
        // 5E 0259
        gbc.setState(0x41d1, 0xc05a, 0xae80, 0xb0ba, 0x2557, 0x945a, 0x1, 0x1);
        gbc.writeMem(0x41d1, { 0x5e });
        gbc.writeMem(0x945a, { 0x24 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc05a, gbc.sp());
        EXPECT(0x41d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0x945a));
        // 5E 025A
        gbc.setState(0x8e8c, 0x61ed, 0x7e50, 0x38b4, 0x509f, 0x6df3, 0x1, 0x1);
        gbc.writeMem(0x6df3, { 0x13 });
        gbc.writeMem(0x8e8c, { 0x5e });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x61ed, gbc.sp());
        EXPECT(0x8e8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8e8c));
        // 5E 025B
        gbc.setState(0x2f4f, 0x324, 0xfde0, 0x5b1d, 0xdfa9, 0xf7d4, 0x1, 0x0);
        gbc.writeMem(0x2f4f, { 0x5e });
        gbc.writeMem(0xf7d4, { 0x8 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x324, gbc.sp());
        EXPECT(0x2f50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xf7d4));
        // 5E 025C
        gbc.setState(0x150a, 0x5168, 0x8ca0, 0x1dd2, 0xed4, 0xa8bd, 0x0, 0x0);
        gbc.writeMem(0x150a, { 0x5e });
        gbc.writeMem(0xa8bd, { 0x2f });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x5168, gbc.sp());
        EXPECT(0x150b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0xa8bd));
        // 5E 025D
        gbc.setState(0x50ec, 0x9c69, 0x14c0, 0x98c0, 0xcb0c, 0xe23c, 0x0, 0x0);
        gbc.writeMem(0x50ec, { 0x5e });
        gbc.writeMem(0xe23c, { 0x84 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x9c69, gbc.sp());
        EXPECT(0x50ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xe23c));
        // 5E 025E
        gbc.setState(0x47b, 0xccb1, 0x31e0, 0xcf00, 0x13ec, 0x507e, 0x1, 0x1);
        gbc.writeMem(0x47b, { 0x5e });
        gbc.writeMem(0x507e, { 0xa1 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xccb1, gbc.sp());
        EXPECT(0x47c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 025F
        gbc.setState(0x7b1, 0xf51d, 0x6fd0, 0x77c1, 0x6092, 0xbddc, 0x0, 0x0);
        gbc.writeMem(0x7b1, { 0x5e });
        gbc.writeMem(0xbddc, { 0x2 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf51d, gbc.sp());
        EXPECT(0x7b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xbddc));
        // 5E 0261
        gbc.setState(0x378d, 0x2879, 0x8500, 0x4128, 0xf228, 0x4c63, 0x1, 0x0);
        gbc.writeMem(0x378d, { 0x5e });
        gbc.writeMem(0x4c63, { 0x93 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2879, gbc.sp());
        EXPECT(0x378e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0262
        gbc.setState(0xda97, 0x34dd, 0x7920, 0x4649, 0x8a3d, 0x43cd, 0x0, 0x1);
        gbc.writeMem(0x43cd, { 0xbf });
        gbc.writeMem(0xda97, { 0x5e });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x34dd, gbc.sp());
        EXPECT(0xda98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xda97));
        // 5E 0263
        gbc.setState(0x17fe, 0x9c59, 0xddf0, 0x6ec6, 0x6468, 0x3594, 0x0, 0x1);
        gbc.writeMem(0x17fe, { 0x5e });
        gbc.writeMem(0x3594, { 0x2b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9c59, gbc.sp());
        EXPECT(0x17ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0265
        gbc.setState(0x381e, 0xe298, 0xc770, 0xdfdf, 0xb1cb, 0x26a5, 0x0, 0x0);
        gbc.writeMem(0x26a5, { 0x3b });
        gbc.writeMem(0x381e, { 0x5e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe298, gbc.sp());
        EXPECT(0x381f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0266
        gbc.setState(0x86b7, 0xce40, 0xb7c0, 0x9cbd, 0xbad7, 0x76c2, 0x0, 0x1);
        gbc.writeMem(0x76c2, { 0x91 });
        gbc.writeMem(0x86b7, { 0x5e });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xce40, gbc.sp());
        EXPECT(0x86b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x86b7));
        // 5E 0267
        gbc.setState(0xaed2, 0xee25, 0xfee0, 0xccf4, 0xbafa, 0xe45, 0x1, 0x0);
        gbc.writeMem(0xe45, { 0x88 });
        gbc.writeMem(0xaed2, { 0x5e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xee25, gbc.sp());
        EXPECT(0xaed3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xaed2));
        // 5E 0268
        gbc.setState(0x76d9, 0x595, 0x7110, 0xe781, 0x25fa, 0x960, 0x0, 0x0);
        gbc.writeMem(0x960, { 0x5f });
        gbc.writeMem(0x76d9, { 0x5e });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x595, gbc.sp());
        EXPECT(0x76da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0269
        gbc.setState(0xe253, 0x63c9, 0x7fa0, 0x0, 0x9474, 0x4f0f, 0x1, 0x1);
        gbc.writeMem(0x4f0f, { 0x44 });
        gbc.writeMem(0xe253, { 0x5e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x63c9, gbc.sp());
        EXPECT(0xe254, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe253));
        // 5E 026A
        gbc.setState(0x1991, 0xbb89, 0xba0, 0x9b9b, 0xed73, 0x8a08, 0x0, 0x1);
        gbc.writeMem(0x1991, { 0x5e });
        gbc.writeMem(0x8a08, { 0xf8 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xbb89, gbc.sp());
        EXPECT(0x1992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8a08));
        // 5E 026B
        gbc.setState(0xaed, 0xcec1, 0x1710, 0x25b2, 0x99a4, 0xba9a, 0x1, 0x1);
        gbc.writeMem(0xaed, { 0x5e });
        gbc.writeMem(0xba9a, { 0x59 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xcec1, gbc.sp());
        EXPECT(0xaee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xba9a));
        // 5E 026C
        gbc.setState(0x9f41, 0xcde, 0x1be0, 0xd40d, 0xc689, 0xe58, 0x0, 0x1);
        gbc.writeMem(0xe58, { 0xd5 });
        gbc.writeMem(0x9f41, { 0x5e });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xcde, gbc.sp());
        EXPECT(0x9f42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9f41));
        // 5E 026D
        gbc.setState(0x7c, 0xcaea, 0xd8e0, 0x69, 0xc728, 0x2110, 0x0, 0x0);
        gbc.writeMem(0x7c, { 0x5e });
        gbc.writeMem(0x2110, { 0x88 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcaea, gbc.sp());
        EXPECT(0x7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 026E
        gbc.setState(0x74e9, 0xaf91, 0x71e0, 0x1570, 0x77cb, 0xfa3e, 0x0, 0x0);
        gbc.writeMem(0x74e9, { 0x5e });
        gbc.writeMem(0xfa3e, { 0x6f });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xaf91, gbc.sp());
        EXPECT(0x74ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xfa3e));
        // 5E 026F
        gbc.setState(0x950d, 0x196a, 0xd3b0, 0xa2a1, 0x22a, 0xda8f, 0x1, 0x1);
        gbc.writeMem(0x950d, { 0x5e });
        gbc.writeMem(0xda8f, { 0x2 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x196a, gbc.sp());
        EXPECT(0x950e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x950d));
        EXPECT(0x2, gbc.readMem(0xda8f));
        // 5E 0270
        gbc.setState(0xbba8, 0x1dcb, 0xb3f0, 0xaf16, 0xf2cc, 0x3be6, 0x0, 0x0);
        gbc.writeMem(0x3be6, { 0x5a });
        gbc.writeMem(0xbba8, { 0x5e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x1dcb, gbc.sp());
        EXPECT(0xbba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbba8));
        // 5E 0271
        gbc.setState(0xa7e5, 0x4ce, 0x7ad0, 0x3773, 0xd325, 0x16f3, 0x1, 0x1);
        gbc.writeMem(0x16f3, { 0x22 });
        gbc.writeMem(0xa7e5, { 0x5e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x4ce, gbc.sp());
        EXPECT(0xa7e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa7e5));
        // 5E 0272
        gbc.setState(0x7448, 0x1509, 0xadd0, 0xe573, 0xf7c5, 0xc606, 0x1, 0x1);
        gbc.writeMem(0x7448, { 0x5e });
        gbc.writeMem(0xc606, { 0x92 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1509, gbc.sp());
        EXPECT(0x7449, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xc606));
        // 5E 0273
        gbc.setState(0x7add, 0x8180, 0xbe0, 0x4147, 0xfe5e, 0xee73, 0x0, 0x0);
        gbc.writeMem(0x7add, { 0x5e });
        gbc.writeMem(0xee73, { 0x92 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8180, gbc.sp());
        EXPECT(0x7ade, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xee73));
        // 5E 0274
        gbc.setState(0x2042, 0xae2a, 0x3150, 0x52d3, 0x9f79, 0x324a, 0x0, 0x1);
        gbc.writeMem(0x2042, { 0x5e });
        gbc.writeMem(0x324a, { 0x3e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xae2a, gbc.sp());
        EXPECT(0x2043, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0275
        gbc.setState(0xddae, 0x1c90, 0x40f0, 0x5f47, 0x2839, 0x362a, 0x0, 0x0);
        gbc.writeMem(0x362a, { 0xbd });
        gbc.writeMem(0xddae, { 0x5e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1c90, gbc.sp());
        EXPECT(0xddaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xddae));
        // 5E 0276
        gbc.setState(0x5d41, 0xc26, 0x19a0, 0xa598, 0x3f0f, 0xcfbb, 0x0, 0x0);
        gbc.writeMem(0x5d41, { 0x5e });
        gbc.writeMem(0xcfbb, { 0x8b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc26, gbc.sp());
        EXPECT(0x5d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xcfbb));
        // 5E 0277
        gbc.setState(0xc53a, 0x5273, 0x3820, 0x5a18, 0x582, 0x730c, 0x1, 0x0);
        gbc.writeMem(0x730c, { 0x62 });
        gbc.writeMem(0xc53a, { 0x5e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5273, gbc.sp());
        EXPECT(0xc53b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc53a));
        // 5E 0278
        gbc.setState(0x2942, 0xd122, 0x1310, 0x849e, 0x5c96, 0x14f9, 0x1, 0x0);
        gbc.writeMem(0x14f9, { 0xa0 });
        gbc.writeMem(0x2942, { 0x5e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd122, gbc.sp());
        EXPECT(0x2943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0279
        gbc.setState(0xb34c, 0xaabc, 0x7250, 0xd4ec, 0xc5c4, 0xaa83, 0x1, 0x1);
        gbc.writeMem(0xaa83, { 0x7b });
        gbc.writeMem(0xb34c, { 0x5e });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xaabc, gbc.sp());
        EXPECT(0xb34d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xaa83));
        EXPECT(0x5e, gbc.readMem(0xb34c));
        // 5E 027A
        gbc.setState(0x2729, 0x8672, 0xf250, 0xe82, 0x55c8, 0x407b, 0x1, 0x1);
        gbc.writeMem(0x2729, { 0x5e });
        gbc.writeMem(0x407b, { 0x7d });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8672, gbc.sp());
        EXPECT(0x272a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 027B
        gbc.setState(0xecb6, 0x4172, 0x2d70, 0x5f17, 0xa328, 0xb53b, 0x0, 0x0);
        gbc.writeMem(0xb53b, { 0x4a });
        gbc.writeMem(0xecb6, { 0x5e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x4172, gbc.sp());
        EXPECT(0xecb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xb53b));
        EXPECT(0x5e, gbc.readMem(0xecb6));
        // 5E 027C
        gbc.setState(0x2989, 0x7ebd, 0xfba0, 0xde30, 0xa10e, 0x14db, 0x1, 0x0);
        gbc.writeMem(0x14db, { 0x80 });
        gbc.writeMem(0x2989, { 0x5e });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x7ebd, gbc.sp());
        EXPECT(0x298a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 027D
        gbc.setState(0x2b5b, 0x4fdb, 0xbbf0, 0x47ce, 0x58f1, 0x7a92, 0x0, 0x1);
        gbc.writeMem(0x2b5b, { 0x5e });
        gbc.writeMem(0x7a92, { 0xf1 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4fdb, gbc.sp());
        EXPECT(0x2b5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 027E
        gbc.setState(0xc18c, 0x738f, 0x6430, 0xab5e, 0x54f5, 0xb181, 0x1, 0x0);
        gbc.writeMem(0xb181, { 0xee });
        gbc.writeMem(0xc18c, { 0x5e });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x738f, gbc.sp());
        EXPECT(0xc18d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xb181));
        EXPECT(0x5e, gbc.readMem(0xc18c));
        // 5E 027F
        gbc.setState(0xe1f5, 0x2d58, 0xdd20, 0x674b, 0x1625, 0xdfe2, 0x1, 0x1);
        gbc.writeMem(0xdfe2, { 0xfa });
        gbc.writeMem(0xe1f5, { 0x5e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2d58, gbc.sp());
        EXPECT(0xe1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0xdfe2));
        EXPECT(0x5e, gbc.readMem(0xe1f5));
        // 5E 0280
        gbc.setState(0xbe20, 0xf9d5, 0x9170, 0x2cff, 0x8d89, 0xb732, 0x1, 0x1);
        gbc.writeMem(0xb732, { 0x8e });
        gbc.writeMem(0xbe20, { 0x5e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xf9d5, gbc.sp());
        EXPECT(0xbe21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8e, gbc.readMem(0xb732));
        EXPECT(0x5e, gbc.readMem(0xbe20));
        // 5E 0282
        gbc.setState(0x2fb, 0xcd35, 0xd8c0, 0x4fc6, 0xece7, 0x479f, 0x1, 0x0);
        gbc.writeMem(0x2fb, { 0x5e });
        gbc.writeMem(0x479f, { 0xcc });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xcd35, gbc.sp());
        EXPECT(0x2fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0283
        gbc.setState(0xe3ad, 0xfcce, 0x2070, 0x5a3f, 0x86c3, 0x9203, 0x0, 0x1);
        gbc.writeMem(0x9203, { 0x34 });
        gbc.writeMem(0xe3ad, { 0x5e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xfcce, gbc.sp());
        EXPECT(0xe3ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x9203));
        EXPECT(0x5e, gbc.readMem(0xe3ad));
        // 5E 0284
        gbc.setState(0xbfa1, 0x245e, 0x3f90, 0x90eb, 0x3c67, 0x1b6b, 0x1, 0x0);
        gbc.writeMem(0x1b6b, { 0x61 });
        gbc.writeMem(0xbfa1, { 0x5e });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x245e, gbc.sp());
        EXPECT(0xbfa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbfa1));
        // 5E 0285
        gbc.setState(0x8518, 0xe153, 0xd680, 0x2209, 0x138d, 0x6421, 0x1, 0x1);
        gbc.writeMem(0x6421, { 0x14 });
        gbc.writeMem(0x8518, { 0x5e });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe153, gbc.sp());
        EXPECT(0x8519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8518));
        // 5E 0286
        gbc.setState(0x3720, 0x4465, 0xc530, 0x406e, 0xb525, 0xd39b, 0x0, 0x1);
        gbc.writeMem(0x3720, { 0x5e });
        gbc.writeMem(0xd39b, { 0x6d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4465, gbc.sp());
        EXPECT(0x3721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xd39b));
        // 5E 0287
        gbc.setState(0x2e43, 0x1dd, 0xc4f0, 0xe313, 0x6b80, 0x4eef, 0x0, 0x0);
        gbc.writeMem(0x2e43, { 0x5e });
        gbc.writeMem(0x4eef, { 0x19 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1dd, gbc.sp());
        EXPECT(0x2e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0288
        gbc.setState(0xab14, 0xf3fc, 0x1410, 0xa136, 0xf00e, 0x133a, 0x0, 0x0);
        gbc.writeMem(0x133a, { 0x41 });
        gbc.writeMem(0xab14, { 0x5e });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xf3fc, gbc.sp());
        EXPECT(0xab15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xab14));
        // 5E 0289
        gbc.setState(0x38a7, 0xc2b7, 0xd9c0, 0xd843, 0x7aa8, 0x410b, 0x0, 0x0);
        gbc.writeMem(0x38a7, { 0x5e });
        gbc.writeMem(0x410b, { 0x3c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc2b7, gbc.sp());
        EXPECT(0x38a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 028A
        gbc.setState(0x3dc8, 0x2f27, 0xbf60, 0xdaf3, 0x216, 0xf529, 0x0, 0x0);
        gbc.writeMem(0x3dc8, { 0x5e });
        gbc.writeMem(0xf529, { 0x41 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x2f27, gbc.sp());
        EXPECT(0x3dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xf529));
        // 5E 028B
        gbc.setState(0x21da, 0x15d1, 0xe350, 0x9283, 0xaf1e, 0xb53f, 0x1, 0x1);
        gbc.writeMem(0x21da, { 0x5e });
        gbc.writeMem(0xb53f, { 0x33 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x15d1, gbc.sp());
        EXPECT(0x21db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xb53f));
        // 5E 028D
        gbc.setState(0xa6f1, 0x1c6c, 0x91b0, 0x1b9b, 0x231c, 0x6473, 0x0, 0x1);
        gbc.writeMem(0x6473, { 0x42 });
        gbc.writeMem(0xa6f1, { 0x5e });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1c6c, gbc.sp());
        EXPECT(0xa6f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa6f1));
        // 5E 028E
        gbc.setState(0x8601, 0x31e9, 0x9f80, 0x4483, 0x5cce, 0x9a65, 0x0, 0x1);
        gbc.writeMem(0x8601, { 0x5e });
        gbc.writeMem(0x9a65, { 0xca });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x31e9, gbc.sp());
        EXPECT(0x8602, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8601));
        EXPECT(0xca, gbc.readMem(0x9a65));
        // 5E 028F
        gbc.setState(0x3d66, 0xbd36, 0x63b0, 0x78f8, 0x16d9, 0x2e25, 0x1, 0x1);
        gbc.writeMem(0x2e25, { 0xce });
        gbc.writeMem(0x3d66, { 0x5e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xbd36, gbc.sp());
        EXPECT(0x3d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0290
        gbc.setState(0xc03d, 0x4120, 0xe3b0, 0x8e1c, 0x3780, 0xfad5, 0x1, 0x1);
        gbc.writeMem(0xc03d, { 0x5e });
        gbc.writeMem(0xfad5, { 0x65 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4120, gbc.sp());
        EXPECT(0xc03e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc03d));
        EXPECT(0x65, gbc.readMem(0xfad5));
        // 5E 0291
        gbc.setState(0xd44a, 0xa842, 0x9520, 0xb5a0, 0x28bc, 0x6996, 0x1, 0x1);
        gbc.writeMem(0x6996, { 0x99 });
        gbc.writeMem(0xd44a, { 0x5e });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xa842, gbc.sp());
        EXPECT(0xd44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd44a));
        // 5E 0292
        gbc.setState(0xfb5, 0xae, 0x44a0, 0x3cdf, 0xaaa, 0xe60, 0x0, 0x1);
        gbc.writeMem(0xe60, { 0x93 });
        gbc.writeMem(0xfb5, { 0x5e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xae, gbc.sp());
        EXPECT(0xfb6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0293
        gbc.setState(0x44f6, 0x3ce, 0x42b0, 0x51ad, 0x1a59, 0xe93f, 0x1, 0x0);
        gbc.writeMem(0x44f6, { 0x5e });
        gbc.writeMem(0xe93f, { 0xec });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x3ce, gbc.sp());
        EXPECT(0x44f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xe93f));
        // 5E 0294
        gbc.setState(0x5ae0, 0x9b85, 0x5580, 0x7bba, 0xcc68, 0xe802, 0x0, 0x1);
        gbc.writeMem(0x5ae0, { 0x5e });
        gbc.writeMem(0xe802, { 0xc8 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9b85, gbc.sp());
        EXPECT(0x5ae1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xe802));
        // 5E 0295
        gbc.setState(0x1c5d, 0xb013, 0xd680, 0x6e6d, 0x738b, 0x9ac7, 0x0, 0x1);
        gbc.writeMem(0x1c5d, { 0x5e });
        gbc.writeMem(0x9ac7, { 0xb8 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xb013, gbc.sp());
        EXPECT(0x1c5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb8, gbc.readMem(0x9ac7));
        // 5E 0296
        gbc.setState(0x965, 0x1c0b, 0x31e0, 0xdc52, 0x209b, 0xd550, 0x1, 0x0);
        gbc.writeMem(0x965, { 0x5e });
        gbc.writeMem(0xd550, { 0x8a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x1c0b, gbc.sp());
        EXPECT(0x966, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0xd550));
        // 5E 0297
        gbc.setState(0xcf9f, 0x8595, 0xb630, 0x5135, 0x3b1c, 0xd60a, 0x0, 0x1);
        gbc.writeMem(0xcf9f, { 0x5e });
        gbc.writeMem(0xd60a, { 0x7d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x8595, gbc.sp());
        EXPECT(0xcfa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcf9f));
        EXPECT(0x7d, gbc.readMem(0xd60a));
        // 5E 0298
        gbc.setState(0x4de2, 0xe917, 0xfcf0, 0x80c, 0x1f45, 0x2fe7, 0x1, 0x1);
        gbc.writeMem(0x2fe7, { 0x85 });
        gbc.writeMem(0x4de2, { 0x5e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe917, gbc.sp());
        EXPECT(0x4de3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0299
        gbc.setState(0x610a, 0x5c85, 0x8fc0, 0x4cdf, 0xde9, 0xc3c9, 0x1, 0x0);
        gbc.writeMem(0x610a, { 0x5e });
        gbc.writeMem(0xc3c9, { 0xf8 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x5c85, gbc.sp());
        EXPECT(0x610b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0xc3c9));
        // 5E 029A
        gbc.setState(0x63ea, 0xb8d, 0x3170, 0x8deb, 0xe080, 0x7a34, 0x1, 0x0);
        gbc.writeMem(0x63ea, { 0x5e });
        gbc.writeMem(0x7a34, { 0xc6 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xb8d, gbc.sp());
        EXPECT(0x63eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 029B
        gbc.setState(0x79c9, 0x6d52, 0x5a80, 0x9610, 0x7bd4, 0x60bd, 0x0, 0x1);
        gbc.writeMem(0x60bd, { 0xe });
        gbc.writeMem(0x79c9, { 0x5e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x6d52, gbc.sp());
        EXPECT(0x79ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 029C
        gbc.setState(0xa53d, 0x78ba, 0xf290, 0x2f51, 0xc284, 0x9a97, 0x1, 0x1);
        gbc.writeMem(0x9a97, { 0xba });
        gbc.writeMem(0xa53d, { 0x5e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x78ba, gbc.sp());
        EXPECT(0xa53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0x9a97));
        EXPECT(0x5e, gbc.readMem(0xa53d));
        // 5E 029D
        gbc.setState(0xb768, 0x2cf6, 0x63a0, 0x31b5, 0x7c17, 0x4d36, 0x1, 0x1);
        gbc.writeMem(0x4d36, { 0x6c });
        gbc.writeMem(0xb768, { 0x5e });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2cf6, gbc.sp());
        EXPECT(0xb769, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb768));
        // 5E 029E
        gbc.setState(0x722a, 0xae7, 0x2760, 0x73bc, 0x6b8d, 0x86ce, 0x1, 0x1);
        gbc.writeMem(0x722a, { 0x5e });
        gbc.writeMem(0x86ce, { 0xc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xae7, gbc.sp());
        EXPECT(0x722b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0x86ce));
        // 5E 029F
        gbc.setState(0xa7b2, 0xfe39, 0xf0c0, 0x6bed, 0x38d6, 0x5e12, 0x1, 0x0);
        gbc.writeMem(0x5e12, { 0xba });
        gbc.writeMem(0xa7b2, { 0x5e });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfe39, gbc.sp());
        EXPECT(0xa7b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa7b2));
        // 5E 02A0
        gbc.setState(0x4d98, 0x20cf, 0x57b0, 0x470e, 0xd585, 0xb091, 0x1, 0x1);
        gbc.writeMem(0x4d98, { 0x5e });
        gbc.writeMem(0xb091, { 0x80 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x20cf, gbc.sp());
        EXPECT(0x4d99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xb091));
        // 5E 02A1
        gbc.setState(0x55e6, 0xf46, 0x2c50, 0x99a1, 0x4831, 0x68, 0x0, 0x0);
        gbc.writeMem(0x68, { 0x99 });
        gbc.writeMem(0x55e6, { 0x5e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xf46, gbc.sp());
        EXPECT(0x55e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 02A2
        gbc.setState(0xac3d, 0x7aa6, 0x69b0, 0xa69f, 0x5268, 0xee2b, 0x0, 0x1);
        gbc.writeMem(0xac3d, { 0x5e });
        gbc.writeMem(0xee2b, { 0x5d });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x7aa6, gbc.sp());
        EXPECT(0xac3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xac3d));
        EXPECT(0x5d, gbc.readMem(0xee2b));
        // 5E 02A3
        gbc.setState(0xa9d4, 0x82ed, 0x6d10, 0xd266, 0x71d, 0xbf1c, 0x0, 0x1);
        gbc.writeMem(0xa9d4, { 0x5e });
        gbc.writeMem(0xbf1c, { 0xa2 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x82ed, gbc.sp());
        EXPECT(0xa9d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa9d4));
        EXPECT(0xa2, gbc.readMem(0xbf1c));
        // 5E 02A4
        gbc.setState(0x9bce, 0x446a, 0x1580, 0x3fa1, 0x1514, 0xed7f, 0x1, 0x0);
        gbc.writeMem(0x9bce, { 0x5e });
        gbc.writeMem(0xed7f, { 0x38 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x446a, gbc.sp());
        EXPECT(0x9bcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9bce));
        EXPECT(0x38, gbc.readMem(0xed7f));
        // 5E 02A5
        gbc.setState(0x7f81, 0xb2c4, 0x3d50, 0x8566, 0x475a, 0x97fc, 0x0, 0x1);
        gbc.writeMem(0x7f81, { 0x5e });
        gbc.writeMem(0x97fc, { 0xae });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xb2c4, gbc.sp());
        EXPECT(0x7f82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x97fc));
        // 5E 02A6
        gbc.setState(0x1e0b, 0x6238, 0x51c0, 0xa948, 0x7b19, 0x6f72, 0x1, 0x1);
        gbc.writeMem(0x1e0b, { 0x5e });
        gbc.writeMem(0x6f72, { 0x94 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6238, gbc.sp());
        EXPECT(0x1e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02A7
        gbc.setState(0x1d1f, 0xedaa, 0x5120, 0x2777, 0xd012, 0x3871, 0x0, 0x0);
        gbc.writeMem(0x1d1f, { 0x5e });
        gbc.writeMem(0x3871, { 0x73 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xedaa, gbc.sp());
        EXPECT(0x1d20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02A8
        gbc.setState(0x54b2, 0x5d9a, 0xa90, 0x80d, 0xa169, 0x48a3, 0x1, 0x0);
        gbc.writeMem(0x48a3, { 0x6f });
        gbc.writeMem(0x54b2, { 0x5e });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x5d9a, gbc.sp());
        EXPECT(0x54b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 02A9
        gbc.setState(0x7fa, 0x4c78, 0xf70, 0xe41e, 0x3d5f, 0xc693, 0x0, 0x0);
        gbc.writeMem(0x7fa, { 0x5e });
        gbc.writeMem(0xc693, { 0xfb });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4c78, gbc.sp());
        EXPECT(0x7fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xc693));
        // 5E 02AA
        gbc.setState(0x636, 0x2023, 0x6d50, 0xd45a, 0xc0a5, 0x8063, 0x0, 0x1);
        gbc.writeMem(0x636, { 0x5e });
        gbc.writeMem(0x8063, { 0x5a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2023, gbc.sp());
        EXPECT(0x637, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5a, gbc.readMem(0x8063));
        // 5E 02AB
        gbc.setState(0x3424, 0x29bf, 0xec0, 0x9e4e, 0x928b, 0x7105, 0x1, 0x1);
        gbc.writeMem(0x3424, { 0x5e });
        gbc.writeMem(0x7105, { 0x5e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x29bf, gbc.sp());
        EXPECT(0x3425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02AC
        gbc.setState(0x20da, 0x80ba, 0x2dc0, 0x30ff, 0xd9e2, 0x3dc3, 0x0, 0x0);
        gbc.writeMem(0x20da, { 0x5e });
        gbc.writeMem(0x3dc3, { 0xd5 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x80ba, gbc.sp());
        EXPECT(0x20db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02AD
        gbc.setState(0x99c8, 0xc8ee, 0x1d00, 0x5699, 0x7258, 0x624b, 0x1, 0x0);
        gbc.writeMem(0x624b, { 0xa7 });
        gbc.writeMem(0x99c8, { 0x5e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc8ee, gbc.sp());
        EXPECT(0x99c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x99c8));
        // 5E 02AE
        gbc.setState(0x6f08, 0x2e2b, 0x5d40, 0xd0bc, 0x9ddb, 0x1bf1, 0x1, 0x1);
        gbc.writeMem(0x1bf1, { 0xb8 });
        gbc.writeMem(0x6f08, { 0x5e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x2e2b, gbc.sp());
        EXPECT(0x6f09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02AF
        gbc.setState(0x9a50, 0x1166, 0xe530, 0x9e54, 0xbdce, 0x4e10, 0x1, 0x1);
        gbc.writeMem(0x4e10, { 0xee });
        gbc.writeMem(0x9a50, { 0x5e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1166, gbc.sp());
        EXPECT(0x9a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9a50));
        // 5E 02B0
        gbc.setState(0x9b5b, 0xd3ad, 0xe6e0, 0x98a2, 0x83ff, 0x29d4, 0x1, 0x0);
        gbc.writeMem(0x29d4, { 0x19 });
        gbc.writeMem(0x9b5b, { 0x5e });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xd3ad, gbc.sp());
        EXPECT(0x9b5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9b5b));
        // 5E 02B1
        gbc.setState(0x3b85, 0x45f1, 0x1b0, 0xe877, 0x84df, 0x952a, 0x1, 0x0);
        gbc.writeMem(0x3b85, { 0x5e });
        gbc.writeMem(0x952a, { 0x3a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x45f1, gbc.sp());
        EXPECT(0x3b86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x952a));
        // 5E 02B2
        gbc.setState(0x2b0d, 0xa31b, 0x42a0, 0x7bc0, 0x12f0, 0xbf53, 0x1, 0x1);
        gbc.writeMem(0x2b0d, { 0x5e });
        gbc.writeMem(0xbf53, { 0x6b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xa31b, gbc.sp());
        EXPECT(0x2b0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xbf53));
        // 5E 02B3
        gbc.setState(0x87ad, 0x953, 0x2d50, 0xc2a0, 0xff3a, 0x6326, 0x1, 0x0);
        gbc.writeMem(0x6326, { 0xe4 });
        gbc.writeMem(0x87ad, { 0x5e });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x953, gbc.sp());
        EXPECT(0x87ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x87ad));
        // 5E 02B4
        gbc.setState(0xcb6, 0x4117, 0xa0e0, 0xe17e, 0x8baa, 0x5d5, 0x1, 0x0);
        gbc.writeMem(0x5d5, { 0x4f });
        gbc.writeMem(0xcb6, { 0x5e });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4117, gbc.sp());
        EXPECT(0xcb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02B5
        gbc.setState(0x79d1, 0x4d78, 0x4b0, 0xcdd1, 0xbd3b, 0x8c25, 0x0, 0x1);
        gbc.writeMem(0x79d1, { 0x5e });
        gbc.writeMem(0x8c25, { 0xa3 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x4d78, gbc.sp());
        EXPECT(0x79d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x8c25));
        // 5E 02B7
        gbc.setState(0x32e8, 0xd678, 0x1680, 0x42eb, 0x37d8, 0x144d, 0x1, 0x1);
        gbc.writeMem(0x144d, { 0x3 });
        gbc.writeMem(0x32e8, { 0x5e });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd678, gbc.sp());
        EXPECT(0x32e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02B8
        gbc.setState(0xbd72, 0x4049, 0xcde0, 0xe188, 0xe159, 0x425a, 0x0, 0x0);
        gbc.writeMem(0x425a, { 0x8a });
        gbc.writeMem(0xbd72, { 0x5e });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x4049, gbc.sp());
        EXPECT(0xbd73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbd72));
        // 5E 02B9
        gbc.setState(0xe8e2, 0xa8a6, 0xa1c0, 0xcb27, 0x8efd, 0x4c26, 0x0, 0x1);
        gbc.writeMem(0x4c26, { 0x31 });
        gbc.writeMem(0xe8e2, { 0x5e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa8a6, gbc.sp());
        EXPECT(0xe8e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe8e2));
        // 5E 02BA
        gbc.setState(0x1cdb, 0x2c51, 0x9a10, 0xd8eb, 0xe202, 0x9f12, 0x1, 0x0);
        gbc.writeMem(0x1cdb, { 0x5e });
        gbc.writeMem(0x9f12, { 0x60 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x2c51, gbc.sp());
        EXPECT(0x1cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x9f12));
        // 5E 02BB
        gbc.setState(0x5336, 0xa012, 0xb0, 0xfcc, 0xe48e, 0xe49b, 0x1, 0x1);
        gbc.writeMem(0x5336, { 0x5e });
        gbc.writeMem(0xe49b, { 0x72 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa012, gbc.sp());
        EXPECT(0x5337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xe49b));
        // 5E 02BC
        gbc.setState(0xa8f3, 0x1138, 0xd4d0, 0x504e, 0xccb6, 0x9ab4, 0x1, 0x1);
        gbc.writeMem(0x9ab4, { 0x80 });
        gbc.writeMem(0xa8f3, { 0x5e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1138, gbc.sp());
        EXPECT(0xa8f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0x9ab4));
        EXPECT(0x5e, gbc.readMem(0xa8f3));
        // 5E 02BD
        gbc.setState(0x5889, 0xde77, 0xb840, 0x639a, 0xdc17, 0x6ae4, 0x0, 0x0);
        gbc.writeMem(0x5889, { 0x5e });
        gbc.writeMem(0x6ae4, { 0x2f });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xde77, gbc.sp());
        EXPECT(0x588a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02BF
        gbc.setState(0x24e1, 0x50a3, 0xcb80, 0xb067, 0x1ffc, 0xb95, 0x1, 0x0);
        gbc.writeMem(0xb95, { 0x90 });
        gbc.writeMem(0x24e1, { 0x5e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x50a3, gbc.sp());
        EXPECT(0x24e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02C0
        gbc.setState(0x2d89, 0xe194, 0xd1d0, 0x73a0, 0x2ef9, 0x8ef0, 0x0, 0x0);
        gbc.writeMem(0x2d89, { 0x5e });
        gbc.writeMem(0x8ef0, { 0xb9 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe194, gbc.sp());
        EXPECT(0x2d8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0x8ef0));
        // 5E 02C1
        gbc.setState(0x5ff3, 0x4ddc, 0x3860, 0x614e, 0xbb8f, 0xe63a, 0x0, 0x0);
        gbc.writeMem(0x5ff3, { 0x5e });
        gbc.writeMem(0xe63a, { 0x46 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x4ddc, gbc.sp());
        EXPECT(0x5ff4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xe63a));
        // 5E 02C2
        gbc.setState(0x6eca, 0x66c4, 0xeb0, 0xca39, 0x9561, 0x36ea, 0x0, 0x1);
        gbc.writeMem(0x36ea, { 0x64 });
        gbc.writeMem(0x6eca, { 0x5e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x66c4, gbc.sp());
        EXPECT(0x6ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 02C3
        gbc.setState(0xd46, 0xcc67, 0xa610, 0xc827, 0x158, 0xa8d4, 0x0, 0x0);
        gbc.writeMem(0xd46, { 0x5e });
        gbc.writeMem(0xa8d4, { 0x4a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xcc67, gbc.sp());
        EXPECT(0xd47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xa8d4));
        // 5E 02C4
        gbc.setState(0x80b7, 0x4cd6, 0x2240, 0xda20, 0x8094, 0x625f, 0x0, 0x1);
        gbc.writeMem(0x625f, { 0x47 });
        gbc.writeMem(0x80b7, { 0x5e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4cd6, gbc.sp());
        EXPECT(0x80b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x80b7));
        // 5E 02C5
        gbc.setState(0x475, 0xcbf2, 0x3ee0, 0x741c, 0xfadb, 0x570d, 0x0, 0x0);
        gbc.writeMem(0x475, { 0x5e });
        gbc.writeMem(0x570d, { 0x21 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xcbf2, gbc.sp());
        EXPECT(0x476, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02C6
        gbc.setState(0x1b0f, 0x50ea, 0x4da0, 0x272e, 0x52c7, 0xa64f, 0x1, 0x1);
        gbc.writeMem(0x1b0f, { 0x5e });
        gbc.writeMem(0xa64f, { 0xef });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x50ea, gbc.sp());
        EXPECT(0x1b10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xa64f));
        // 5E 02C7
        gbc.setState(0xc0ee, 0xe470, 0x5a00, 0x2748, 0x22e9, 0x48b9, 0x1, 0x0);
        gbc.writeMem(0x48b9, { 0x66 });
        gbc.writeMem(0xc0ee, { 0x5e });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xe470, gbc.sp());
        EXPECT(0xc0ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc0ee));
        // 5E 02C8
        gbc.setState(0xe2d6, 0x2a08, 0x96b0, 0x1ef4, 0xe8c2, 0xfda4, 0x1, 0x1);
        gbc.writeMem(0xe2d6, { 0x5e });
        gbc.writeMem(0xfda4, { 0x36 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2a08, gbc.sp());
        EXPECT(0xe2d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe2d6));
        EXPECT(0x36, gbc.readMem(0xfda4));
        // 5E 02C9
        gbc.setState(0xe14a, 0x33cc, 0xdaa0, 0xd154, 0xd8a, 0x91e1, 0x1, 0x0);
        gbc.writeMem(0x91e1, { 0xae });
        gbc.writeMem(0xe14a, { 0x5e });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x33cc, gbc.sp());
        EXPECT(0xe14b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0x91e1));
        EXPECT(0x5e, gbc.readMem(0xe14a));
        // 5E 02CB
        gbc.setState(0xe459, 0xb30e, 0x3ac0, 0xabba, 0xeb89, 0x2055, 0x1, 0x1);
        gbc.writeMem(0x2055, { 0xac });
        gbc.writeMem(0xe459, { 0x5e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xb30e, gbc.sp());
        EXPECT(0xe45a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe459));
        // 5E 02CC
        gbc.setState(0xe250, 0x9fdf, 0xa1e0, 0x9bcc, 0xce46, 0xd8f2, 0x1, 0x0);
        gbc.writeMem(0xd8f2, { 0x97 });
        gbc.writeMem(0xe250, { 0x5e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9fdf, gbc.sp());
        EXPECT(0xe251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xd8f2));
        EXPECT(0x5e, gbc.readMem(0xe250));
        // 5E 02CD
        gbc.setState(0xb751, 0x5e68, 0x9340, 0x1d5d, 0xf0a3, 0xdc74, 0x1, 0x0);
        gbc.writeMem(0xb751, { 0x5e });
        gbc.writeMem(0xdc74, { 0x6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5e68, gbc.sp());
        EXPECT(0xb752, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb751));
        EXPECT(0x6, gbc.readMem(0xdc74));
        // 5E 02CE
        gbc.setState(0xf56, 0x933c, 0x37a0, 0x2917, 0xb78f, 0x32ba, 0x1, 0x0);
        gbc.writeMem(0xf56, { 0x5e });
        gbc.writeMem(0x32ba, { 0xf9 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x933c, gbc.sp());
        EXPECT(0xf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02CF
        gbc.setState(0x9fbf, 0xf297, 0x8ab0, 0xb6b9, 0x7f62, 0xb78b, 0x0, 0x1);
        gbc.writeMem(0x9fbf, { 0x5e });
        gbc.writeMem(0xb78b, { 0x39 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf297, gbc.sp());
        EXPECT(0x9fc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9fbf));
        EXPECT(0x39, gbc.readMem(0xb78b));
        // 5E 02D0
        gbc.setState(0x5a5f, 0x4f69, 0xe310, 0x693f, 0x4b8b, 0xdc13, 0x0, 0x0);
        gbc.writeMem(0x5a5f, { 0x5e });
        gbc.writeMem(0xdc13, { 0x5f });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x4f69, gbc.sp());
        EXPECT(0x5a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xdc13));
        // 5E 02D1
        gbc.setState(0xd38a, 0x5eb, 0x4660, 0x3794, 0x5908, 0xfae1, 0x0, 0x0);
        gbc.writeMem(0xd38a, { 0x5e });
        gbc.writeMem(0xfae1, { 0x80 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5eb, gbc.sp());
        EXPECT(0xd38b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd38a));
        EXPECT(0x80, gbc.readMem(0xfae1));
        // 5E 02D3
        gbc.setState(0xeea0, 0xc03a, 0x1980, 0xbbb7, 0x2618, 0xac85, 0x1, 0x1);
        gbc.writeMem(0xac85, { 0xe });
        gbc.writeMem(0xeea0, { 0x5e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc03a, gbc.sp());
        EXPECT(0xeea1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xac85));
        EXPECT(0x5e, gbc.readMem(0xeea0));
        // 5E 02D4
        gbc.setState(0xedc2, 0x8b9c, 0xd940, 0xe13f, 0x247a, 0xa099, 0x0, 0x1);
        gbc.writeMem(0xa099, { 0x6 });
        gbc.writeMem(0xedc2, { 0x5e });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8b9c, gbc.sp());
        EXPECT(0xedc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xa099));
        EXPECT(0x5e, gbc.readMem(0xedc2));
        // 5E 02D5
        gbc.setState(0xab7c, 0x49d9, 0x3c00, 0x247e, 0xd65b, 0xffa0, 0x1, 0x0);
        gbc.writeMem(0xab7c, { 0x5e });
        gbc.writeMem(0xffa0, { 0x33 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x49d9, gbc.sp());
        EXPECT(0xab7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xab7c));
        EXPECT(0x33, gbc.readMem(0xffa0));
        // 5E 02D6
        gbc.setState(0xbb6d, 0xb62c, 0x55e0, 0x1c84, 0x92d7, 0x56b2, 0x0, 0x1);
        gbc.writeMem(0x56b2, { 0xa4 });
        gbc.writeMem(0xbb6d, { 0x5e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xb62c, gbc.sp());
        EXPECT(0xbb6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbb6d));
        // 5E 02D7
        gbc.setState(0x50d2, 0x332f, 0x2a00, 0x4190, 0x14a6, 0x1def, 0x1, 0x0);
        gbc.writeMem(0x1def, { 0xea });
        gbc.writeMem(0x50d2, { 0x5e });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x332f, gbc.sp());
        EXPECT(0x50d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02D8
        gbc.setState(0xfb1, 0x6ce2, 0xbf80, 0x70e, 0x50bb, 0x415, 0x0, 0x1);
        gbc.writeMem(0x415, { 0x7c });
        gbc.writeMem(0xfb1, { 0x5e });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6ce2, gbc.sp());
        EXPECT(0xfb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02D9
        gbc.setState(0xbf73, 0x6cdd, 0xd1d0, 0x9232, 0x481d, 0xd4cf, 0x1, 0x0);
        gbc.writeMem(0xbf73, { 0x5e });
        gbc.writeMem(0xd4cf, { 0xc0 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6cdd, gbc.sp());
        EXPECT(0xbf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbf73));
        EXPECT(0xc0, gbc.readMem(0xd4cf));
        // 5E 02DA
        gbc.setState(0x3c52, 0x29c0, 0x1a00, 0xe6e0, 0xa4fb, 0x5aee, 0x0, 0x0);
        gbc.writeMem(0x3c52, { 0x5e });
        gbc.writeMem(0x5aee, { 0x19 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x29c0, gbc.sp());
        EXPECT(0x3c53, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02DB
        gbc.setState(0x9725, 0x6673, 0x9a30, 0xec29, 0xcb50, 0x6edc, 0x1, 0x1);
        gbc.writeMem(0x6edc, { 0xe8 });
        gbc.writeMem(0x9725, { 0x5e });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x6673, gbc.sp());
        EXPECT(0x9726, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9725));
        // 5E 02DC
        gbc.setState(0x6c5f, 0xcec, 0x42a0, 0x9f, 0xfb1b, 0xf470, 0x1, 0x0);
        gbc.writeMem(0x6c5f, { 0x5e });
        gbc.writeMem(0xf470, { 0xa5 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xcec, gbc.sp());
        EXPECT(0x6c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xf470));
        // 5E 02DD
        gbc.setState(0x924a, 0x45c8, 0x2490, 0xc478, 0x3625, 0x2e8c, 0x0, 0x0);
        gbc.writeMem(0x2e8c, { 0xde });
        gbc.writeMem(0x924a, { 0x5e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x45c8, gbc.sp());
        EXPECT(0x924b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x924a));
        // 5E 02DE
        gbc.setState(0x5fee, 0xa53e, 0x7590, 0xeb80, 0x2422, 0x9ba0, 0x0, 0x1);
        gbc.writeMem(0x5fee, { 0x5e });
        gbc.writeMem(0x9ba0, { 0x10 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa53e, gbc.sp());
        EXPECT(0x5fef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x10, gbc.readMem(0x9ba0));
        // 5E 02DF
        gbc.setState(0x8dc1, 0x136b, 0xac30, 0xe9b4, 0x13a9, 0x4b66, 0x1, 0x1);
        gbc.writeMem(0x4b66, { 0x53 });
        gbc.writeMem(0x8dc1, { 0x5e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x136b, gbc.sp());
        EXPECT(0x8dc2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8dc1));
        // 5E 02E0
        gbc.setState(0xd1b1, 0xf32, 0xe770, 0xb298, 0x39ea, 0xda93, 0x1, 0x1);
        gbc.writeMem(0xd1b1, { 0x5e });
        gbc.writeMem(0xda93, { 0x16 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xf32, gbc.sp());
        EXPECT(0xd1b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd1b1));
        EXPECT(0x16, gbc.readMem(0xda93));
        // 5E 02E1
        gbc.setState(0x4ace, 0x2d33, 0xcfb0, 0xae1c, 0x19ff, 0xc2f7, 0x0, 0x0);
        gbc.writeMem(0x4ace, { 0x5e });
        gbc.writeMem(0xc2f7, { 0x83 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2d33, gbc.sp());
        EXPECT(0x4acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xc2f7));
        // 5E 02E2
        gbc.setState(0x7f56, 0xea11, 0xb380, 0xf07e, 0xe4d1, 0x35fd, 0x1, 0x0);
        gbc.writeMem(0x35fd, { 0x1f });
        gbc.writeMem(0x7f56, { 0x5e });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xea11, gbc.sp());
        EXPECT(0x7f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02E3
        gbc.setState(0xb94a, 0x2df0, 0xc2d0, 0xb312, 0xb49a, 0xe492, 0x1, 0x1);
        gbc.writeMem(0xb94a, { 0x5e });
        gbc.writeMem(0xe492, { 0x99 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x2df0, gbc.sp());
        EXPECT(0xb94b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb94a));
        EXPECT(0x99, gbc.readMem(0xe492));
        // 5E 02E4
        gbc.setState(0xaaa9, 0xe9cc, 0x7540, 0x15e0, 0xb653, 0x1016, 0x1, 0x0);
        gbc.writeMem(0x1016, { 0x2d });
        gbc.writeMem(0xaaa9, { 0x5e });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe9cc, gbc.sp());
        EXPECT(0xaaaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xaaa9));
        // 5E 02E5
        gbc.setState(0xcb33, 0x4722, 0x2c0, 0x5634, 0xb0be, 0x6122, 0x1, 0x1);
        gbc.writeMem(0x6122, { 0x49 });
        gbc.writeMem(0xcb33, { 0x5e });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4722, gbc.sp());
        EXPECT(0xcb34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcb33));
        // 5E 02E6
        gbc.setState(0x644e, 0x75b4, 0xc140, 0x1ea4, 0xbd4b, 0x7631, 0x1, 0x0);
        gbc.writeMem(0x644e, { 0x5e });
        gbc.writeMem(0x7631, { 0x7a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x75b4, gbc.sp());
        EXPECT(0x644f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02E7
        gbc.setState(0xdf05, 0x312a, 0xdeb0, 0x920e, 0x8164, 0x12b9, 0x0, 0x1);
        gbc.writeMem(0x12b9, { 0x76 });
        gbc.writeMem(0xdf05, { 0x5e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x312a, gbc.sp());
        EXPECT(0xdf06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xdf05));
        // 5E 02E8
        gbc.setState(0x3208, 0xca3a, 0x2240, 0x9205, 0x523, 0x6716, 0x0, 0x1);
        gbc.writeMem(0x3208, { 0x5e });
        gbc.writeMem(0x6716, { 0x80 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xca3a, gbc.sp());
        EXPECT(0x3209, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02E9
        gbc.setState(0x39d5, 0x55e0, 0x3720, 0xc4e9, 0x82b1, 0x6f63, 0x1, 0x0);
        gbc.writeMem(0x39d5, { 0x5e });
        gbc.writeMem(0x6f63, { 0x56 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x55e0, gbc.sp());
        EXPECT(0x39d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02EA
        gbc.setState(0x236, 0x293e, 0x1d0, 0x4bbf, 0x5193, 0x979, 0x0, 0x1);
        gbc.writeMem(0x236, { 0x5e });
        gbc.writeMem(0x979, { 0x3 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x293e, gbc.sp());
        EXPECT(0x237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 02EB
        gbc.setState(0x2e98, 0x67c5, 0x2250, 0xc120, 0x13af, 0x371, 0x1, 0x1);
        gbc.writeMem(0x371, { 0x8 });
        gbc.writeMem(0x2e98, { 0x5e });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x67c5, gbc.sp());
        EXPECT(0x2e99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 02EC
        gbc.setState(0xb493, 0x1b32, 0x4df0, 0x3a4d, 0x9451, 0xb893, 0x0, 0x1);
        gbc.writeMem(0xb493, { 0x5e });
        gbc.writeMem(0xb893, { 0xa1 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1b32, gbc.sp());
        EXPECT(0xb494, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb493));
        EXPECT(0xa1, gbc.readMem(0xb893));
        // 5E 02ED
        gbc.setState(0x5f00, 0xfded, 0x32a0, 0xcb93, 0xe554, 0xf9f9, 0x0, 0x1);
        gbc.writeMem(0x5f00, { 0x5e });
        gbc.writeMem(0xf9f9, { 0xa1 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xfded, gbc.sp());
        EXPECT(0x5f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xf9f9));
        // 5E 02EF
        gbc.setState(0x48fa, 0x1d04, 0x9680, 0x985b, 0x53b4, 0x5f6b, 0x0, 0x0);
        gbc.writeMem(0x48fa, { 0x5e });
        gbc.writeMem(0x5f6b, { 0x63 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1d04, gbc.sp());
        EXPECT(0x48fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02F0
        gbc.setState(0x71c2, 0xad0e, 0xfc30, 0x9056, 0x4e67, 0xf659, 0x1, 0x1);
        gbc.writeMem(0x71c2, { 0x5e });
        gbc.writeMem(0xf659, { 0x5e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xad0e, gbc.sp());
        EXPECT(0x71c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xf659));
        // 5E 02F1
        gbc.setState(0xab6f, 0x3b88, 0x9430, 0x8d49, 0x7ac4, 0xe2a6, 0x0, 0x1);
        gbc.writeMem(0xab6f, { 0x5e });
        gbc.writeMem(0xe2a6, { 0xb9 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3b88, gbc.sp());
        EXPECT(0xab70, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xab6f));
        EXPECT(0xb9, gbc.readMem(0xe2a6));
        // 5E 02F3
        gbc.setState(0xab1e, 0x416d, 0x4550, 0xb26a, 0x6d1f, 0x4cc4, 0x0, 0x1);
        gbc.writeMem(0x4cc4, { 0xc7 });
        gbc.writeMem(0xab1e, { 0x5e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x416d, gbc.sp());
        EXPECT(0xab1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xab1e));
        // 5E 02F5
        gbc.setState(0xb656, 0x78aa, 0xed0, 0x8009, 0xbe5e, 0x80dc, 0x0, 0x0);
        gbc.writeMem(0x80dc, { 0x32 });
        gbc.writeMem(0xb656, { 0x5e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x78aa, gbc.sp());
        EXPECT(0xb657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x80dc));
        EXPECT(0x5e, gbc.readMem(0xb656));
        // 5E 02F6
        gbc.setState(0x3ac5, 0x1e6, 0xb90, 0xe98e, 0xc484, 0xa198, 0x0, 0x0);
        gbc.writeMem(0x3ac5, { 0x5e });
        gbc.writeMem(0xa198, { 0xae });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1e6, gbc.sp());
        EXPECT(0x3ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xa198));
        // 5E 02F7
        gbc.setState(0xe568, 0xaee1, 0xe730, 0xe574, 0xe87c, 0x93bc, 0x1, 0x0);
        gbc.writeMem(0x93bc, { 0x85 });
        gbc.writeMem(0xe568, { 0x5e });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xaee1, gbc.sp());
        EXPECT(0xe569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x93bc));
        EXPECT(0x5e, gbc.readMem(0xe568));
        // 5E 02F8
        gbc.setState(0x1291, 0x8c74, 0xd560, 0xe1a5, 0xbe04, 0xd09, 0x1, 0x0);
        gbc.writeMem(0xd09, { 0x5d });
        gbc.writeMem(0x1291, { 0x5e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8c74, gbc.sp());
        EXPECT(0x1292, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 02F9
        gbc.setState(0x872a, 0x18b5, 0x8eb0, 0x16e9, 0xe11b, 0xa244, 0x0, 0x1);
        gbc.writeMem(0x872a, { 0x5e });
        gbc.writeMem(0xa244, { 0xf9 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x18b5, gbc.sp());
        EXPECT(0x872b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x872a));
        EXPECT(0xf9, gbc.readMem(0xa244));
        // 5E 02FB
        gbc.setState(0x6e90, 0x571, 0x3c50, 0x5f2f, 0xcd1b, 0xcff2, 0x1, 0x1);
        gbc.writeMem(0x6e90, { 0x5e });
        gbc.writeMem(0xcff2, { 0xd6 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x571, gbc.sp());
        EXPECT(0x6e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd6, gbc.readMem(0xcff2));
        // 5E 02FC
        gbc.setState(0xd986, 0x33d3, 0x1270, 0xbb02, 0xb7c0, 0x6ee9, 0x1, 0x0);
        gbc.writeMem(0x6ee9, { 0xb3 });
        gbc.writeMem(0xd986, { 0x5e });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x33d3, gbc.sp());
        EXPECT(0xd987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd986));
        // 5E 02FE
        gbc.setState(0xbcb8, 0x54c8, 0x8f90, 0x404b, 0xa2f1, 0x6b86, 0x1, 0x1);
        gbc.writeMem(0x6b86, { 0x2c });
        gbc.writeMem(0xbcb8, { 0x5e });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x54c8, gbc.sp());
        EXPECT(0xbcb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbcb8));
        // 5E 02FF
        gbc.setState(0x4fe7, 0xeec5, 0xe900, 0xe4ea, 0x4ead, 0xab48, 0x1, 0x0);
        gbc.writeMem(0x4fe7, { 0x5e });
        gbc.writeMem(0xab48, { 0xef });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xeec5, gbc.sp());
        EXPECT(0x4fe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xab48));
        // 5E 0300
        gbc.setState(0xeb16, 0xb8b3, 0x980, 0x96d7, 0x6b22, 0x4e66, 0x1, 0x1);
        gbc.writeMem(0x4e66, { 0xd8 });
        gbc.writeMem(0xeb16, { 0x5e });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb8b3, gbc.sp());
        EXPECT(0xeb17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xeb16));
        // 5E 0301
        gbc.setState(0x4bfc, 0x8303, 0xf8a0, 0xab62, 0x7343, 0xdfef, 0x0, 0x1);
        gbc.writeMem(0x4bfc, { 0x5e });
        gbc.writeMem(0xdfef, { 0x44 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x8303, gbc.sp());
        EXPECT(0x4bfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0xdfef));
        // 5E 0302
        gbc.setState(0x4b87, 0xe5e3, 0xf660, 0x4eb0, 0x366, 0xc436, 0x0, 0x1);
        gbc.writeMem(0x4b87, { 0x5e });
        gbc.writeMem(0xc436, { 0x9e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xe5e3, gbc.sp());
        EXPECT(0x4b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xc436));
        // 5E 0303
        gbc.setState(0x475b, 0x9285, 0xdd60, 0xeb5d, 0x7cd9, 0xbba, 0x0, 0x1);
        gbc.writeMem(0xbba, { 0xe5 });
        gbc.writeMem(0x475b, { 0x5e });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x9285, gbc.sp());
        EXPECT(0x475c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0304
        gbc.setState(0x5794, 0x99bc, 0xf410, 0xc208, 0x5858, 0xad5d, 0x0, 0x1);
        gbc.writeMem(0x5794, { 0x5e });
        gbc.writeMem(0xad5d, { 0xcf });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x99bc, gbc.sp());
        EXPECT(0x5795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xad5d));
        // 5E 0305
        gbc.setState(0x2b00, 0x55b4, 0x38e0, 0x7453, 0x8c06, 0x12d2, 0x1, 0x0);
        gbc.writeMem(0x12d2, { 0x2e });
        gbc.writeMem(0x2b00, { 0x5e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x55b4, gbc.sp());
        EXPECT(0x2b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0306
        gbc.setState(0x8b0a, 0xb495, 0x9470, 0x6975, 0xe02f, 0xfd64, 0x0, 0x0);
        gbc.writeMem(0x8b0a, { 0x5e });
        gbc.writeMem(0xfd64, { 0xc3 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb495, gbc.sp());
        EXPECT(0x8b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8b0a));
        EXPECT(0xc3, gbc.readMem(0xfd64));
        // 5E 0307
        gbc.setState(0xc880, 0x8827, 0x1d00, 0xa5e4, 0xc274, 0xa9ad, 0x0, 0x1);
        gbc.writeMem(0xa9ad, { 0x9e });
        gbc.writeMem(0xc880, { 0x5e });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8827, gbc.sp());
        EXPECT(0xc881, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0xa9ad));
        EXPECT(0x5e, gbc.readMem(0xc880));
        // 5E 0308
        gbc.setState(0x23e1, 0x5425, 0x7bd0, 0xe97d, 0xd6aa, 0x8d68, 0x1, 0x0);
        gbc.writeMem(0x23e1, { 0x5e });
        gbc.writeMem(0x8d68, { 0x98 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5425, gbc.sp());
        EXPECT(0x23e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0x8d68));
        // 5E 0309
        gbc.setState(0x3c71, 0x3c84, 0x5f0, 0x96bc, 0x3a03, 0xa797, 0x1, 0x0);
        gbc.writeMem(0x3c71, { 0x5e });
        gbc.writeMem(0xa797, { 0x5e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x3c84, gbc.sp());
        EXPECT(0x3c72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa797));
        // 5E 030A
        gbc.setState(0xda76, 0x9a61, 0xacc0, 0x73cf, 0x171, 0xda00, 0x0, 0x0);
        gbc.writeMem(0xda00, { 0xa6 });
        gbc.writeMem(0xda76, { 0x5e });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x9a61, gbc.sp());
        EXPECT(0xda77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xda00));
        EXPECT(0x5e, gbc.readMem(0xda76));
        // 5E 030B
        gbc.setState(0xe3e1, 0x8dd7, 0xd120, 0x9a5d, 0x2566, 0x45c4, 0x0, 0x0);
        gbc.writeMem(0x45c4, { 0x62 });
        gbc.writeMem(0xe3e1, { 0x5e });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8dd7, gbc.sp());
        EXPECT(0xe3e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe3e1));
        // 5E 030C
        gbc.setState(0x5776, 0x5e31, 0xafc0, 0xa1a3, 0x2bb2, 0xb3da, 0x0, 0x0);
        gbc.writeMem(0x5776, { 0x5e });
        gbc.writeMem(0xb3da, { 0x87 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x5e31, gbc.sp());
        EXPECT(0x5777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb3da));
        // 5E 030D
        gbc.setState(0xfa7, 0x972a, 0x3970, 0xe440, 0x9226, 0x1357, 0x1, 0x0);
        gbc.writeMem(0xfa7, { 0x5e });
        gbc.writeMem(0x1357, { 0xd8 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x972a, gbc.sp());
        EXPECT(0xfa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 030E
        gbc.setState(0xc0a1, 0x9dd5, 0xf120, 0x5884, 0x75cd, 0xb59b, 0x0, 0x1);
        gbc.writeMem(0xb59b, { 0x59 });
        gbc.writeMem(0xc0a1, { 0x5e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9dd5, gbc.sp());
        EXPECT(0xc0a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xb59b));
        EXPECT(0x5e, gbc.readMem(0xc0a1));
        // 5E 030F
        gbc.setState(0x1b00, 0xdc90, 0x1e40, 0x6df7, 0xcc0, 0x9233, 0x1, 0x0);
        gbc.writeMem(0x1b00, { 0x5e });
        gbc.writeMem(0x9233, { 0x96 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xdc90, gbc.sp());
        EXPECT(0x1b01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x9233));
        // 5E 0310
        gbc.setState(0x102, 0xb262, 0x81b0, 0xd244, 0xf6c0, 0x143d, 0x0, 0x1);
        gbc.writeMem(0x102, { 0x5e });
        gbc.writeMem(0x143d, { 0x10 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xb262, gbc.sp());
        EXPECT(0x103, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0311
        gbc.setState(0xe21, 0x5e01, 0xca90, 0xfc4d, 0xa8bf, 0xf91f, 0x1, 0x0);
        gbc.writeMem(0xe21, { 0x5e });
        gbc.writeMem(0xf91f, { 0x79 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x5e01, gbc.sp());
        EXPECT(0xe22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xf91f));
        // 5E 0312
        gbc.setState(0x8f3f, 0x6668, 0xb600, 0xaee6, 0x5df6, 0x8264, 0x0, 0x0);
        gbc.writeMem(0x8264, { 0x83 });
        gbc.writeMem(0x8f3f, { 0x5e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x6668, gbc.sp());
        EXPECT(0x8f40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x8264));
        EXPECT(0x5e, gbc.readMem(0x8f3f));
        // 5E 0314
        gbc.setState(0x247b, 0xec83, 0x5ce0, 0x712a, 0x4421, 0x5868, 0x0, 0x0);
        gbc.writeMem(0x247b, { 0x5e });
        gbc.writeMem(0x5868, { 0x51 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xec83, gbc.sp());
        EXPECT(0x247c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0315
        gbc.setState(0x86fb, 0x278d, 0x4390, 0xe4b0, 0x3473, 0x7eff, 0x1, 0x0);
        gbc.writeMem(0x7eff, { 0xc1 });
        gbc.writeMem(0x86fb, { 0x5e });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x278d, gbc.sp());
        EXPECT(0x86fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x86fb));
        // 5E 0316
        gbc.setState(0x2d5d, 0xef90, 0x4540, 0xf2f1, 0x6e1b, 0x1076, 0x0, 0x0);
        gbc.writeMem(0x1076, { 0x20 });
        gbc.writeMem(0x2d5d, { 0x5e });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xef90, gbc.sp());
        EXPECT(0x2d5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0317
        gbc.setState(0xca9c, 0x3fab, 0xd350, 0x1a66, 0x57fe, 0x8127, 0x0, 0x0);
        gbc.writeMem(0x8127, { 0xed });
        gbc.writeMem(0xca9c, { 0x5e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3fab, gbc.sp());
        EXPECT(0xca9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8127));
        EXPECT(0x5e, gbc.readMem(0xca9c));
        // 5E 0318
        gbc.setState(0xe352, 0x3360, 0x7640, 0xbaf0, 0x640a, 0x7d26, 0x0, 0x0);
        gbc.writeMem(0x7d26, { 0xac });
        gbc.writeMem(0xe352, { 0x5e });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3360, gbc.sp());
        EXPECT(0xe353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe352));
        // 5E 0319
        gbc.setState(0x20ba, 0x6478, 0xd9f0, 0x63b0, 0xce5e, 0xc460, 0x1, 0x1);
        gbc.writeMem(0x20ba, { 0x5e });
        gbc.writeMem(0xc460, { 0xed });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6478, gbc.sp());
        EXPECT(0x20bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xc460));
        // 5E 031A
        gbc.setState(0x5a6d, 0xeb25, 0x2250, 0xeed0, 0xfce1, 0xecc8, 0x1, 0x1);
        gbc.writeMem(0x5a6d, { 0x5e });
        gbc.writeMem(0xecc8, { 0x74 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xeb25, gbc.sp());
        EXPECT(0x5a6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x74, gbc.readMem(0xecc8));
        // 5E 031B
        gbc.setState(0x5e9d, 0xad4c, 0x6180, 0xd20c, 0xe510, 0xd71f, 0x1, 0x0);
        gbc.writeMem(0x5e9d, { 0x5e });
        gbc.writeMem(0xd71f, { 0x7 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xad4c, gbc.sp());
        EXPECT(0x5e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd71f));
        // 5E 031C
        gbc.setState(0xb8c5, 0x52e8, 0x60f0, 0xaa8, 0xf9c9, 0xf839, 0x1, 0x1);
        gbc.writeMem(0xb8c5, { 0x5e });
        gbc.writeMem(0xf839, { 0x8a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x52e8, gbc.sp());
        EXPECT(0xb8c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb8c5));
        EXPECT(0x8a, gbc.readMem(0xf839));
        // 5E 031D
        gbc.setState(0xa895, 0x4e1b, 0xa5b0, 0x5b02, 0x2451, 0xf87f, 0x0, 0x0);
        gbc.writeMem(0xa895, { 0x5e });
        gbc.writeMem(0xf87f, { 0x99 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4e1b, gbc.sp());
        EXPECT(0xa896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa895));
        EXPECT(0x99, gbc.readMem(0xf87f));
        // 5E 031E
        gbc.setState(0xa21c, 0xd9b4, 0x78b0, 0x1afd, 0xe5bf, 0xd6d1, 0x1, 0x1);
        gbc.writeMem(0xa21c, { 0x5e });
        gbc.writeMem(0xd6d1, { 0x53 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xd9b4, gbc.sp());
        EXPECT(0xa21d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa21c));
        EXPECT(0x53, gbc.readMem(0xd6d1));
        // 5E 031F
        gbc.setState(0xad9c, 0x5e9a, 0xe80, 0xb81d, 0x169f, 0x645, 0x1, 0x0);
        gbc.writeMem(0x645, { 0x24 });
        gbc.writeMem(0xad9c, { 0x5e });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x5e9a, gbc.sp());
        EXPECT(0xad9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xad9c));
        // 5E 0320
        gbc.setState(0x8b15, 0x82fd, 0xb350, 0x5359, 0x5641, 0xe84c, 0x1, 0x1);
        gbc.writeMem(0x8b15, { 0x5e });
        gbc.writeMem(0xe84c, { 0x7a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x82fd, gbc.sp());
        EXPECT(0x8b16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8b15));
        EXPECT(0x7a, gbc.readMem(0xe84c));
        // 5E 0321
        gbc.setState(0xafd3, 0x8d3e, 0x5120, 0xd47b, 0x6429, 0xdfc8, 0x1, 0x1);
        gbc.writeMem(0xafd3, { 0x5e });
        gbc.writeMem(0xdfc8, { 0x72 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8d3e, gbc.sp());
        EXPECT(0xafd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xafd3));
        EXPECT(0x72, gbc.readMem(0xdfc8));
        // 5E 0322
        gbc.setState(0x41cd, 0xa9a1, 0x24a0, 0x9d99, 0x6be4, 0x24e5, 0x0, 0x1);
        gbc.writeMem(0x24e5, { 0xb2 });
        gbc.writeMem(0x41cd, { 0x5e });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa9a1, gbc.sp());
        EXPECT(0x41ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0323
        gbc.setState(0x2d61, 0x725f, 0x5060, 0xf4d, 0x77c6, 0x2c1a, 0x0, 0x0);
        gbc.writeMem(0x2c1a, { 0x33 });
        gbc.writeMem(0x2d61, { 0x5e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x725f, gbc.sp());
        EXPECT(0x2d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0324
        gbc.setState(0xea2a, 0x1326, 0xec10, 0x7b78, 0xc706, 0xdd04, 0x1, 0x1);
        gbc.writeMem(0xdd04, { 0xbb });
        gbc.writeMem(0xea2a, { 0x5e });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1326, gbc.sp());
        EXPECT(0xea2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdd04));
        EXPECT(0x5e, gbc.readMem(0xea2a));
        // 5E 0325
        gbc.setState(0xd0a, 0x8db8, 0x34c0, 0xf40a, 0x9f47, 0x186f, 0x1, 0x0);
        gbc.writeMem(0xd0a, { 0x5e });
        gbc.writeMem(0x186f, { 0x77 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x8db8, gbc.sp());
        EXPECT(0xd0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0326
        gbc.setState(0x6d57, 0xd3d4, 0x2530, 0xa37c, 0x6037, 0xfaa7, 0x0, 0x0);
        gbc.writeMem(0x6d57, { 0x5e });
        gbc.writeMem(0xfaa7, { 0xab });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd3d4, gbc.sp());
        EXPECT(0x6d58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xfaa7));
        // 5E 0327
        gbc.setState(0x4f04, 0x67f5, 0x62b0, 0xc5b9, 0xc6ca, 0x1c15, 0x1, 0x1);
        gbc.writeMem(0x1c15, { 0xe3 });
        gbc.writeMem(0x4f04, { 0x5e });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x67f5, gbc.sp());
        EXPECT(0x4f05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0328
        gbc.setState(0x1bf6, 0x2981, 0x5200, 0x3197, 0x602, 0x4236, 0x0, 0x0);
        gbc.writeMem(0x1bf6, { 0x5e });
        gbc.writeMem(0x4236, { 0x8c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2981, gbc.sp());
        EXPECT(0x1bf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0329
        gbc.setState(0x6080, 0x2a6f, 0xcf90, 0x5b52, 0xbb86, 0xec9a, 0x1, 0x0);
        gbc.writeMem(0x6080, { 0x5e });
        gbc.writeMem(0xec9a, { 0xcb });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x2a6f, gbc.sp());
        EXPECT(0x6081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec9a));
        // 5E 032A
        gbc.setState(0x11e1, 0x9eed, 0xe2c0, 0x864c, 0x40b3, 0x440d, 0x1, 0x1);
        gbc.writeMem(0x11e1, { 0x5e });
        gbc.writeMem(0x440d, { 0xf4 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x9eed, gbc.sp());
        EXPECT(0x11e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 032B
        gbc.setState(0xb43c, 0x663f, 0x8a70, 0x75c0, 0x4afc, 0xa996, 0x0, 0x1);
        gbc.writeMem(0xa996, { 0x92 });
        gbc.writeMem(0xb43c, { 0x5e });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x663f, gbc.sp());
        EXPECT(0xb43d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa996));
        EXPECT(0x5e, gbc.readMem(0xb43c));
        // 5E 032C
        gbc.setState(0xde78, 0xce23, 0x2100, 0x9763, 0x70a6, 0x11ba, 0x1, 0x0);
        gbc.writeMem(0x11ba, { 0xd3 });
        gbc.writeMem(0xde78, { 0x5e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xce23, gbc.sp());
        EXPECT(0xde79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xde78));
        // 5E 032D
        gbc.setState(0xeabc, 0x368d, 0xefb0, 0xee4a, 0xdf35, 0x23d9, 0x1, 0x1);
        gbc.writeMem(0x23d9, { 0xc });
        gbc.writeMem(0xeabc, { 0x5e });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x368d, gbc.sp());
        EXPECT(0xeabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xeabc));
        // 5E 032E
        gbc.setState(0x3219, 0x685e, 0x9650, 0xaba0, 0xaf45, 0x51c6, 0x0, 0x0);
        gbc.writeMem(0x3219, { 0x5e });
        gbc.writeMem(0x51c6, { 0xc9 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x685e, gbc.sp());
        EXPECT(0x321a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 032F
        gbc.setState(0xdf75, 0x3ccd, 0x1fe0, 0x310b, 0xd561, 0xb2ef, 0x1, 0x0);
        gbc.writeMem(0xb2ef, { 0x88 });
        gbc.writeMem(0xdf75, { 0x5e });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3ccd, gbc.sp());
        EXPECT(0xdf76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xb2ef));
        EXPECT(0x5e, gbc.readMem(0xdf75));
        // 5E 0330
        gbc.setState(0x5692, 0x2ef0, 0x440, 0xee50, 0x545a, 0xef41, 0x0, 0x1);
        gbc.writeMem(0x5692, { 0x5e });
        gbc.writeMem(0xef41, { 0xbd });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2ef0, gbc.sp());
        EXPECT(0x5693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xef41));
        // 5E 0331
        gbc.setState(0x96be, 0x4cb, 0x3500, 0x3542, 0x75, 0x9040, 0x0, 0x1);
        gbc.writeMem(0x9040, { 0x1b });
        gbc.writeMem(0x96be, { 0x5e });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x4cb, gbc.sp());
        EXPECT(0x96bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0x9040));
        EXPECT(0x5e, gbc.readMem(0x96be));
        // 5E 0332
        gbc.setState(0xcc2b, 0x3b71, 0x8d20, 0xa1c3, 0xe200, 0xbe42, 0x0, 0x1);
        gbc.writeMem(0xbe42, { 0xf7 });
        gbc.writeMem(0xcc2b, { 0x5e });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x3b71, gbc.sp());
        EXPECT(0xcc2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xbe42));
        EXPECT(0x5e, gbc.readMem(0xcc2b));
        // 5E 0333
        gbc.setState(0x32d2, 0xb4ce, 0xe4f0, 0xe28f, 0x95ba, 0x1956, 0x0, 0x1);
        gbc.writeMem(0x1956, { 0x10 });
        gbc.writeMem(0x32d2, { 0x5e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb4ce, gbc.sp());
        EXPECT(0x32d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0334
        gbc.setState(0xce4a, 0xdb9, 0xe4b0, 0x7ea0, 0xf799, 0x54f0, 0x0, 0x1);
        gbc.writeMem(0x54f0, { 0xdf });
        gbc.writeMem(0xce4a, { 0x5e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xdb9, gbc.sp());
        EXPECT(0xce4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xce4a));
        // 5E 0335
        gbc.setState(0x6540, 0xdaeb, 0x4cd0, 0xb167, 0xc295, 0x90a, 0x1, 0x1);
        gbc.writeMem(0x90a, { 0xaf });
        gbc.writeMem(0x6540, { 0x5e });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xdaeb, gbc.sp());
        EXPECT(0x6541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0336
        gbc.setState(0x36d5, 0x73eb, 0x5820, 0xd929, 0xe46b, 0xd32f, 0x0, 0x1);
        gbc.writeMem(0x36d5, { 0x5e });
        gbc.writeMem(0xd32f, { 0x36 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x73eb, gbc.sp());
        EXPECT(0x36d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xd32f));
        // 5E 0338
        gbc.setState(0xe985, 0x5d96, 0x11f0, 0xb286, 0xdf15, 0x45e8, 0x1, 0x1);
        gbc.writeMem(0x45e8, { 0x9d });
        gbc.writeMem(0xe985, { 0x5e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5d96, gbc.sp());
        EXPECT(0xe986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe985));
        // 5E 0339
        gbc.setState(0xda62, 0x6045, 0x2070, 0xe7c0, 0x8dcf, 0x1d43, 0x1, 0x0);
        gbc.writeMem(0x1d43, { 0x2f });
        gbc.writeMem(0xda62, { 0x5e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x6045, gbc.sp());
        EXPECT(0xda63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xda62));
        // 5E 033A
        gbc.setState(0x346c, 0x1403, 0xdb50, 0x210, 0xa0be, 0xba0d, 0x0, 0x0);
        gbc.writeMem(0x346c, { 0x5e });
        gbc.writeMem(0xba0d, { 0xdd });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1403, gbc.sp());
        EXPECT(0x346d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xba0d));
        // 5E 033B
        gbc.setState(0xebad, 0x1b53, 0xe530, 0xb18a, 0x7c18, 0x36ab, 0x1, 0x0);
        gbc.writeMem(0x36ab, { 0x5c });
        gbc.writeMem(0xebad, { 0x5e });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1b53, gbc.sp());
        EXPECT(0xebae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xebad));
        // 5E 033C
        gbc.setState(0x9766, 0xe687, 0xc110, 0x735f, 0xd010, 0xba5, 0x1, 0x1);
        gbc.writeMem(0xba5, { 0x5b });
        gbc.writeMem(0x9766, { 0x5e });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe687, gbc.sp());
        EXPECT(0x9767, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9766));
        // 5E 033D
        gbc.setState(0xa03c, 0x4f7e, 0x340, 0x10f8, 0xf475, 0x2b26, 0x1, 0x1);
        gbc.writeMem(0x2b26, { 0x83 });
        gbc.writeMem(0xa03c, { 0x5e });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4f7e, gbc.sp());
        EXPECT(0xa03d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa03c));
        // 5E 033E
        gbc.setState(0xcfb5, 0x9af7, 0x5cd0, 0x5385, 0x6832, 0xd33f, 0x1, 0x0);
        gbc.writeMem(0xcfb5, { 0x5e });
        gbc.writeMem(0xd33f, { 0xbf });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x9af7, gbc.sp());
        EXPECT(0xcfb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcfb5));
        EXPECT(0xbf, gbc.readMem(0xd33f));
        // 5E 033F
        gbc.setState(0xecce, 0x8a5, 0xf150, 0x37b3, 0x1053, 0x29a8, 0x1, 0x1);
        gbc.writeMem(0x29a8, { 0xd0 });
        gbc.writeMem(0xecce, { 0x5e });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x8a5, gbc.sp());
        EXPECT(0xeccf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xecce));
        // 5E 0340
        gbc.setState(0xb2ea, 0x272b, 0x8380, 0x9c94, 0x9db, 0xa0aa, 0x0, 0x0);
        gbc.writeMem(0xa0aa, { 0xc0 });
        gbc.writeMem(0xb2ea, { 0x5e });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x272b, gbc.sp());
        EXPECT(0xb2eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc0, gbc.readMem(0xa0aa));
        EXPECT(0x5e, gbc.readMem(0xb2ea));
        // 5E 0341
        gbc.setState(0x884b, 0xd26d, 0xd2d0, 0x49bf, 0xc01, 0xa0cb, 0x0, 0x0);
        gbc.writeMem(0x884b, { 0x5e });
        gbc.writeMem(0xa0cb, { 0xe9 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd26d, gbc.sp());
        EXPECT(0x884c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x884b));
        EXPECT(0xe9, gbc.readMem(0xa0cb));
        // 5E 0342
        gbc.setState(0x3d3e, 0x7fed, 0x7980, 0x8356, 0x47a, 0xf2b9, 0x1, 0x0);
        gbc.writeMem(0x3d3e, { 0x5e });
        gbc.writeMem(0xf2b9, { 0xa7 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x7fed, gbc.sp());
        EXPECT(0x3d3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xf2b9));
        // 5E 0343
        gbc.setState(0xdabd, 0x50b4, 0x4eb0, 0x279a, 0x40d3, 0xf5c4, 0x1, 0x1);
        gbc.writeMem(0xdabd, { 0x5e });
        gbc.writeMem(0xf5c4, { 0x41 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x50b4, gbc.sp());
        EXPECT(0xdabe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xdabd));
        EXPECT(0x41, gbc.readMem(0xf5c4));
        // 5E 0344
        gbc.setState(0x19a8, 0xab40, 0xf390, 0x4e4a, 0x50f8, 0xe832, 0x0, 0x0);
        gbc.writeMem(0x19a8, { 0x5e });
        gbc.writeMem(0xe832, { 0x84 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xab40, gbc.sp());
        EXPECT(0x19a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x84, gbc.readMem(0xe832));
        // 5E 0345
        gbc.setState(0x468b, 0x7528, 0xd560, 0xe385, 0x5e9c, 0x12ca, 0x1, 0x1);
        gbc.writeMem(0x12ca, { 0x87 });
        gbc.writeMem(0x468b, { 0x5e });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x7528, gbc.sp());
        EXPECT(0x468c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0346
        gbc.setState(0x2dac, 0x62a4, 0x5060, 0xc030, 0x4161, 0x3d4, 0x0, 0x0);
        gbc.writeMem(0x3d4, { 0x91 });
        gbc.writeMem(0x2dac, { 0x5e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x62a4, gbc.sp());
        EXPECT(0x2dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0347
        gbc.setState(0x5ee7, 0x7081, 0xd310, 0x3355, 0x41bf, 0xd084, 0x0, 0x0);
        gbc.writeMem(0x5ee7, { 0x5e });
        gbc.writeMem(0xd084, { 0x9b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7081, gbc.sp());
        EXPECT(0x5ee8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd084));
        // 5E 0348
        gbc.setState(0xe63d, 0x1013, 0x7f70, 0x9bf6, 0x1ae9, 0xd35c, 0x1, 0x0);
        gbc.writeMem(0xd35c, { 0x7d });
        gbc.writeMem(0xe63d, { 0x5e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x1013, gbc.sp());
        EXPECT(0xe63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xd35c));
        EXPECT(0x5e, gbc.readMem(0xe63d));
        // 5E 0349
        gbc.setState(0xd1b0, 0x6a41, 0x1130, 0x799e, 0xd53f, 0x478c, 0x0, 0x1);
        gbc.writeMem(0x478c, { 0x25 });
        gbc.writeMem(0xd1b0, { 0x5e });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x6a41, gbc.sp());
        EXPECT(0xd1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd1b0));
        // 5E 034B
        gbc.setState(0x82ac, 0x318c, 0x8580, 0xa41c, 0xe7c2, 0x4bb7, 0x1, 0x0);
        gbc.writeMem(0x4bb7, { 0xf0 });
        gbc.writeMem(0x82ac, { 0x5e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x318c, gbc.sp());
        EXPECT(0x82ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x82ac));
        // 5E 034C
        gbc.setState(0xc5c3, 0xfe0b, 0xb660, 0xc8b7, 0x97ae, 0x68ec, 0x1, 0x1);
        gbc.writeMem(0x68ec, { 0xb8 });
        gbc.writeMem(0xc5c3, { 0x5e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfe0b, gbc.sp());
        EXPECT(0xc5c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc5c3));
        // 5E 034E
        gbc.setState(0x8b5, 0x9703, 0x39d0, 0x68db, 0x6c7c, 0x7629, 0x1, 0x1);
        gbc.writeMem(0x8b5, { 0x5e });
        gbc.writeMem(0x7629, { 0xbf });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x9703, gbc.sp());
        EXPECT(0x8b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 034F
        gbc.setState(0x65fa, 0x67a6, 0xbb90, 0xe89c, 0x9a99, 0x4743, 0x1, 0x0);
        gbc.writeMem(0x4743, { 0xab });
        gbc.writeMem(0x65fa, { 0x5e });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x67a6, gbc.sp());
        EXPECT(0x65fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0350
        gbc.setState(0x7603, 0x9d6, 0xa140, 0x1983, 0xf0d6, 0x5fe9, 0x0, 0x1);
        gbc.writeMem(0x5fe9, { 0x93 });
        gbc.writeMem(0x7603, { 0x5e });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x9d6, gbc.sp());
        EXPECT(0x7604, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0351
        gbc.setState(0x33d3, 0x844d, 0xbfd0, 0xc24c, 0x9afa, 0xd539, 0x1, 0x0);
        gbc.writeMem(0x33d3, { 0x5e });
        gbc.writeMem(0xd539, { 0x65 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x844d, gbc.sp());
        EXPECT(0x33d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd539));
        // 5E 0352
        gbc.setState(0x1ad, 0xf038, 0x7d20, 0xbe56, 0x4c74, 0x914a, 0x1, 0x1);
        gbc.writeMem(0x1ad, { 0x5e });
        gbc.writeMem(0x914a, { 0xa5 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf038, gbc.sp());
        EXPECT(0x1ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0x914a));
        // 5E 0353
        gbc.setState(0xeda6, 0x4fca, 0x1780, 0x9949, 0xcbff, 0x56f6, 0x1, 0x0);
        gbc.writeMem(0x56f6, { 0x32 });
        gbc.writeMem(0xeda6, { 0x5e });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x4fca, gbc.sp());
        EXPECT(0xeda7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xeda6));
        // 5E 0354
        gbc.setState(0xb09f, 0x2c49, 0xbe70, 0x95f8, 0xc3e8, 0xda97, 0x1, 0x1);
        gbc.writeMem(0xb09f, { 0x5e });
        gbc.writeMem(0xda97, { 0x3c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2c49, gbc.sp());
        EXPECT(0xb0a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb09f));
        EXPECT(0x3c, gbc.readMem(0xda97));
        // 5E 0355
        gbc.setState(0xec6, 0xa871, 0x5410, 0xe622, 0x4247, 0x88a3, 0x1, 0x0);
        gbc.writeMem(0xec6, { 0x5e });
        gbc.writeMem(0x88a3, { 0x96 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa871, gbc.sp());
        EXPECT(0xec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x96, gbc.readMem(0x88a3));
        // 5E 0356
        gbc.setState(0x88fc, 0x4574, 0x73e0, 0x605, 0x9828, 0x3677, 0x1, 0x0);
        gbc.writeMem(0x3677, { 0xcb });
        gbc.writeMem(0x88fc, { 0x5e });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x4574, gbc.sp());
        EXPECT(0x88fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x88fc));
        // 5E 0357
        gbc.setState(0xa60c, 0x924d, 0xe920, 0x798e, 0x1d9, 0xa6b1, 0x1, 0x1);
        gbc.writeMem(0xa60c, { 0x5e });
        gbc.writeMem(0xa6b1, { 0x15 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x924d, gbc.sp());
        EXPECT(0xa60d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa60c));
        EXPECT(0x15, gbc.readMem(0xa6b1));
        // 5E 0358
        gbc.setState(0x4089, 0x287e, 0xb860, 0x22e2, 0xfc36, 0x2a1f, 0x1, 0x0);
        gbc.writeMem(0x2a1f, { 0x31 });
        gbc.writeMem(0x4089, { 0x5e });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x287e, gbc.sp());
        EXPECT(0x408a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0359
        gbc.setState(0xacb8, 0x8c40, 0xaa00, 0xd503, 0xe8a5, 0xb0ad, 0x1, 0x1);
        gbc.writeMem(0xacb8, { 0x5e });
        gbc.writeMem(0xb0ad, { 0xf2 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8c40, gbc.sp());
        EXPECT(0xacb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xacb8));
        EXPECT(0xf2, gbc.readMem(0xb0ad));
        // 5E 035A
        gbc.setState(0xbe64, 0x4605, 0xe4f0, 0x1ba0, 0xd84e, 0x52c3, 0x1, 0x0);
        gbc.writeMem(0x52c3, { 0x91 });
        gbc.writeMem(0xbe64, { 0x5e });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4605, gbc.sp());
        EXPECT(0xbe65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbe64));
        // 5E 035B
        gbc.setState(0x926d, 0x87f1, 0x3810, 0x73eb, 0x4462, 0x15c2, 0x1, 0x1);
        gbc.writeMem(0x15c2, { 0x85 });
        gbc.writeMem(0x926d, { 0x5e });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x87f1, gbc.sp());
        EXPECT(0x926e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x926d));
        // 5E 035C
        gbc.setState(0x60a, 0x838c, 0x2050, 0x5186, 0x2d5e, 0x1b23, 0x0, 0x0);
        gbc.writeMem(0x60a, { 0x5e });
        gbc.writeMem(0x1b23, { 0xbf });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x838c, gbc.sp());
        EXPECT(0x60b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 035D
        gbc.setState(0x3507, 0xcef6, 0x21a0, 0xa210, 0xacf9, 0x6dc3, 0x0, 0x1);
        gbc.writeMem(0x3507, { 0x5e });
        gbc.writeMem(0x6dc3, { 0x4d });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcef6, gbc.sp());
        EXPECT(0x3508, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 035E
        gbc.setState(0xd243, 0x7575, 0x5cf0, 0x171c, 0x9e1d, 0xd42, 0x0, 0x1);
        gbc.writeMem(0xd42, { 0x8f });
        gbc.writeMem(0xd243, { 0x5e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x7575, gbc.sp());
        EXPECT(0xd244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd243));
        // 5E 035F
        gbc.setState(0x28db, 0xe2f3, 0x95b0, 0xdd25, 0xa3a4, 0xbdb4, 0x1, 0x0);
        gbc.writeMem(0x28db, { 0x5e });
        gbc.writeMem(0xbdb4, { 0xe8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe2f3, gbc.sp());
        EXPECT(0x28dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xbdb4));
        // 5E 0360
        gbc.setState(0xa44a, 0xe5f4, 0xe4a0, 0xeb88, 0x8883, 0xf103, 0x1, 0x1);
        gbc.writeMem(0xa44a, { 0x5e });
        gbc.writeMem(0xf103, { 0x76 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe5f4, gbc.sp());
        EXPECT(0xa44b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa44a));
        EXPECT(0x76, gbc.readMem(0xf103));
        // 5E 0361
        gbc.setState(0x30dc, 0xb449, 0xd660, 0x2457, 0x5698, 0x7bf0, 0x0, 0x0);
        gbc.writeMem(0x30dc, { 0x5e });
        gbc.writeMem(0x7bf0, { 0x41 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xb449, gbc.sp());
        EXPECT(0x30dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0362
        gbc.setState(0xbf7c, 0x7817, 0xde80, 0xb773, 0x7077, 0xa810, 0x0, 0x1);
        gbc.writeMem(0xa810, { 0xaa });
        gbc.writeMem(0xbf7c, { 0x5e });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x7817, gbc.sp());
        EXPECT(0xbf7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xa810));
        EXPECT(0x5e, gbc.readMem(0xbf7c));
        // 5E 0363
        gbc.setState(0x4d26, 0xaadb, 0xed10, 0x71a7, 0xda4d, 0x489a, 0x0, 0x1);
        gbc.writeMem(0x489a, { 0x4b });
        gbc.writeMem(0x4d26, { 0x5e });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xaadb, gbc.sp());
        EXPECT(0x4d27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0364
        gbc.setState(0x1114, 0xeb6, 0x2650, 0xd692, 0xc1b6, 0x863f, 0x1, 0x0);
        gbc.writeMem(0x1114, { 0x5e });
        gbc.writeMem(0x863f, { 0x5 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xeb6, gbc.sp());
        EXPECT(0x1115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x863f));
        // 5E 0365
        gbc.setState(0xc705, 0xa758, 0x4df0, 0xc9ab, 0x4df0, 0x62bc, 0x1, 0x0);
        gbc.writeMem(0x62bc, { 0x6b });
        gbc.writeMem(0xc705, { 0x5e });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa758, gbc.sp());
        EXPECT(0xc706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc705));
        // 5E 0366
        gbc.setState(0xbfef, 0x336, 0xd060, 0x6aed, 0x7dfd, 0x11ec, 0x1, 0x1);
        gbc.writeMem(0x11ec, { 0x56 });
        gbc.writeMem(0xbfef, { 0x5e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x336, gbc.sp());
        EXPECT(0xbff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xbfef));
        // 5E 0367
        gbc.setState(0x99fa, 0x22b2, 0x3100, 0x5bb, 0x4f8c, 0x66e4, 0x1, 0x1);
        gbc.writeMem(0x66e4, { 0xd5 });
        gbc.writeMem(0x99fa, { 0x5e });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x22b2, gbc.sp());
        EXPECT(0x99fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x99fa));
        // 5E 0368
        gbc.setState(0x53e6, 0x3e20, 0xeab0, 0x5a62, 0xf502, 0x8f17, 0x0, 0x0);
        gbc.writeMem(0x53e6, { 0x5e });
        gbc.writeMem(0x8f17, { 0x94 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3e20, gbc.sp());
        EXPECT(0x53e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0x8f17));
        // 5E 0369
        gbc.setState(0xa2be, 0x8604, 0xcba0, 0xf991, 0xd5e1, 0x5695, 0x1, 0x1);
        gbc.writeMem(0x5695, { 0x16 });
        gbc.writeMem(0xa2be, { 0x5e });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8604, gbc.sp());
        EXPECT(0xa2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa2be));
        // 5E 036A
        gbc.setState(0x55bf, 0x2ca8, 0xcab0, 0xc285, 0x6b45, 0x34b0, 0x1, 0x1);
        gbc.writeMem(0x34b0, { 0xcf });
        gbc.writeMem(0x55bf, { 0x5e });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2ca8, gbc.sp());
        EXPECT(0x55c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 036B
        gbc.setState(0x62fe, 0xa7fa, 0x1930, 0x38af, 0x3c8a, 0xbd8, 0x0, 0x0);
        gbc.writeMem(0xbd8, { 0xbf });
        gbc.writeMem(0x62fe, { 0x5e });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa7fa, gbc.sp());
        EXPECT(0x62ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 036C
        gbc.setState(0xe6ef, 0x5daa, 0x4f30, 0xe6a7, 0xb39f, 0x34e8, 0x1, 0x1);
        gbc.writeMem(0x34e8, { 0xa9 });
        gbc.writeMem(0xe6ef, { 0x5e });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5daa, gbc.sp());
        EXPECT(0xe6f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe6ef));
        // 5E 036D
        gbc.setState(0x44d0, 0x88c9, 0x4fe0, 0xa35d, 0xd9c2, 0xf96c, 0x0, 0x0);
        gbc.writeMem(0x44d0, { 0x5e });
        gbc.writeMem(0xf96c, { 0xb2 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x88c9, gbc.sp());
        EXPECT(0x44d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb2, gbc.readMem(0xf96c));
        // 5E 036E
        gbc.setState(0x2bf0, 0x2a5d, 0xb9b0, 0xb52a, 0x7783, 0x8dde, 0x1, 0x0);
        gbc.writeMem(0x2bf0, { 0x5e });
        gbc.writeMem(0x8dde, { 0x57 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x2a5d, gbc.sp());
        EXPECT(0x2bf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x8dde));
        // 5E 036F
        gbc.setState(0xd4fc, 0xa9b7, 0x9f90, 0x118c, 0xdc28, 0xe67f, 0x1, 0x0);
        gbc.writeMem(0xd4fc, { 0x5e });
        gbc.writeMem(0xe67f, { 0x12 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa9b7, gbc.sp());
        EXPECT(0xd4fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd4fc));
        EXPECT(0x12, gbc.readMem(0xe67f));
        // 5E 0370
        gbc.setState(0x1540, 0xa567, 0x4120, 0x9cda, 0x13e1, 0xaedf, 0x1, 0x1);
        gbc.writeMem(0x1540, { 0x5e });
        gbc.writeMem(0xaedf, { 0x3f });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xa567, gbc.sp());
        EXPECT(0x1541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xaedf));
        // 5E 0371
        gbc.setState(0x18c1, 0xeae6, 0xf3b0, 0x3428, 0x7039, 0x8348, 0x1, 0x0);
        gbc.writeMem(0x18c1, { 0x5e });
        gbc.writeMem(0x8348, { 0x50 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xeae6, gbc.sp());
        EXPECT(0x18c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x50, gbc.readMem(0x8348));
        // 5E 0372
        gbc.setState(0x2cb8, 0x6a2b, 0x1ef0, 0x94cf, 0xe0f1, 0x4897, 0x1, 0x1);
        gbc.writeMem(0x2cb8, { 0x5e });
        gbc.writeMem(0x4897, { 0xfa });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6a2b, gbc.sp());
        EXPECT(0x2cb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0373
        gbc.setState(0xcf76, 0x7e50, 0x50c0, 0xc568, 0x73cf, 0x141f, 0x0, 0x0);
        gbc.writeMem(0x141f, { 0xd5 });
        gbc.writeMem(0xcf76, { 0x5e });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7e50, gbc.sp());
        EXPECT(0xcf77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcf76));
        // 5E 0374
        gbc.setState(0x4fd9, 0x9c81, 0x4b20, 0x909c, 0x4910, 0xbd8e, 0x1, 0x0);
        gbc.writeMem(0x4fd9, { 0x5e });
        gbc.writeMem(0xbd8e, { 0x83 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x9c81, gbc.sp());
        EXPECT(0x4fda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xbd8e));
        // 5E 0375
        gbc.setState(0x2d7b, 0x2c7f, 0x3200, 0xaa8c, 0x66b, 0xa32b, 0x0, 0x1);
        gbc.writeMem(0x2d7b, { 0x5e });
        gbc.writeMem(0xa32b, { 0x23 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2c7f, gbc.sp());
        EXPECT(0x2d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xa32b));
        // 5E 0376
        gbc.setState(0x7d9d, 0xed08, 0x7a40, 0x506b, 0x4eda, 0x94a4, 0x1, 0x1);
        gbc.writeMem(0x7d9d, { 0x5e });
        gbc.writeMem(0x94a4, { 0x57 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xed08, gbc.sp());
        EXPECT(0x7d9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x94a4));
        // 5E 0377
        gbc.setState(0x4afc, 0x6a03, 0x1730, 0xe796, 0xfc9d, 0xa5fa, 0x1, 0x0);
        gbc.writeMem(0x4afc, { 0x5e });
        gbc.writeMem(0xa5fa, { 0xba });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6a03, gbc.sp());
        EXPECT(0x4afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xa5fa));
        // 5E 0378
        gbc.setState(0x581b, 0xd23, 0xe090, 0x768d, 0x887b, 0x5f42, 0x1, 0x0);
        gbc.writeMem(0x581b, { 0x5e });
        gbc.writeMem(0x5f42, { 0xb6 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xd23, gbc.sp());
        EXPECT(0x581c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0379
        gbc.setState(0x2893, 0xc761, 0x2730, 0xc282, 0xe62c, 0xe54c, 0x1, 0x1);
        gbc.writeMem(0x2893, { 0x5e });
        gbc.writeMem(0xe54c, { 0xc });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xc761, gbc.sp());
        EXPECT(0x2894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc, gbc.readMem(0xe54c));
        // 5E 037A
        gbc.setState(0xaecf, 0xdfc5, 0x21c0, 0xea8f, 0xd952, 0x8b96, 0x0, 0x1);
        gbc.writeMem(0x8b96, { 0x39 });
        gbc.writeMem(0xaecf, { 0x5e });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xdfc5, gbc.sp());
        EXPECT(0xaed0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x8b96));
        EXPECT(0x5e, gbc.readMem(0xaecf));
        // 5E 037B
        gbc.setState(0x6ba7, 0x7870, 0x7a80, 0x1856, 0xa58d, 0x51d1, 0x1, 0x1);
        gbc.writeMem(0x51d1, { 0xd9 });
        gbc.writeMem(0x6ba7, { 0x5e });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7870, gbc.sp());
        EXPECT(0x6ba8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 037C
        gbc.setState(0x53fb, 0xede, 0xfd20, 0xedad, 0x241a, 0x6a11, 0x1, 0x0);
        gbc.writeMem(0x53fb, { 0x5e });
        gbc.writeMem(0x6a11, { 0xc });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xede, gbc.sp());
        EXPECT(0x53fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 037D
        gbc.setState(0x3246, 0xd5ed, 0xb7f0, 0x5217, 0x40aa, 0x7290, 0x0, 0x0);
        gbc.writeMem(0x3246, { 0x5e });
        gbc.writeMem(0x7290, { 0xfd });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xd5ed, gbc.sp());
        EXPECT(0x3247, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 037E
        gbc.setState(0x97d6, 0x8bc9, 0xc100, 0xac69, 0x9a93, 0xcbb7, 0x1, 0x1);
        gbc.writeMem(0x97d6, { 0x5e });
        gbc.writeMem(0xcbb7, { 0x79 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8bc9, gbc.sp());
        EXPECT(0x97d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x97d6));
        EXPECT(0x79, gbc.readMem(0xcbb7));
        // 5E 037F
        gbc.setState(0xedb3, 0x6c13, 0xfea0, 0x36a2, 0xeb7c, 0x2fc7, 0x0, 0x1);
        gbc.writeMem(0x2fc7, { 0x45 });
        gbc.writeMem(0xedb3, { 0x5e });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x6c13, gbc.sp());
        EXPECT(0xedb4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xedb3));
        // 5E 0380
        gbc.setState(0x8456, 0x626d, 0x20d0, 0xeb99, 0xae60, 0x88c1, 0x0, 0x1);
        gbc.writeMem(0x8456, { 0x5e });
        gbc.writeMem(0x88c1, { 0x66 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x626d, gbc.sp());
        EXPECT(0x8457, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8456));
        EXPECT(0x66, gbc.readMem(0x88c1));
        // 5E 0381
        gbc.setState(0x6dc0, 0x2e5b, 0xd0f0, 0xfe62, 0x427b, 0x6d72, 0x1, 0x1);
        gbc.writeMem(0x6d72, { 0x35 });
        gbc.writeMem(0x6dc0, { 0x5e });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2e5b, gbc.sp());
        EXPECT(0x6dc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0382
        gbc.setState(0xe7cf, 0xb04, 0xf230, 0x7b77, 0xc17c, 0x76e2, 0x0, 0x1);
        gbc.writeMem(0x76e2, { 0xa });
        gbc.writeMem(0xe7cf, { 0x5e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb04, gbc.sp());
        EXPECT(0xe7d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xe7cf));
        // 5E 0383
        gbc.setState(0xcb14, 0x621, 0x58e0, 0x86bc, 0x52d2, 0x31c8, 0x1, 0x0);
        gbc.writeMem(0x31c8, { 0xc6 });
        gbc.writeMem(0xcb14, { 0x5e });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x621, gbc.sp());
        EXPECT(0xcb15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcb14));
        // 5E 0386
        gbc.setState(0x64e3, 0x6505, 0x5190, 0x3523, 0xe923, 0x2b06, 0x1, 0x1);
        gbc.writeMem(0x2b06, { 0x1 });
        gbc.writeMem(0x64e3, { 0x5e });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x6505, gbc.sp());
        EXPECT(0x64e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0387
        gbc.setState(0x831d, 0xa041, 0xb1d0, 0xb99, 0xd685, 0x592d, 0x1, 0x0);
        gbc.writeMem(0x592d, { 0x9d });
        gbc.writeMem(0x831d, { 0x5e });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xa041, gbc.sp());
        EXPECT(0x831e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x831d));
        // 5E 0388
        gbc.setState(0xa25a, 0x248, 0x7040, 0xc71b, 0xa6a1, 0xa1fc, 0x0, 0x0);
        gbc.writeMem(0xa1fc, { 0x14 });
        gbc.writeMem(0xa25a, { 0x5e });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x248, gbc.sp());
        EXPECT(0xa25b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x14, gbc.readMem(0xa1fc));
        EXPECT(0x5e, gbc.readMem(0xa25a));
        // 5E 0389
        gbc.setState(0x5915, 0x1a00, 0xd8f0, 0x4a48, 0xe42f, 0xbada, 0x0, 0x1);
        gbc.writeMem(0x5915, { 0x5e });
        gbc.writeMem(0xbada, { 0x4e });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1a00, gbc.sp());
        EXPECT(0x5916, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xbada));
        // 5E 038A
        gbc.setState(0x64b4, 0x770c, 0x2750, 0xa81d, 0xa0e5, 0x7314, 0x1, 0x1);
        gbc.writeMem(0x64b4, { 0x5e });
        gbc.writeMem(0x7314, { 0x79 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x770c, gbc.sp());
        EXPECT(0x64b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 038B
        gbc.setState(0x9dc7, 0x8b6d, 0x68d0, 0x33a3, 0x7380, 0xb0bc, 0x1, 0x0);
        gbc.writeMem(0x9dc7, { 0x5e });
        gbc.writeMem(0xb0bc, { 0x38 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x8b6d, gbc.sp());
        EXPECT(0x9dc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9dc7));
        EXPECT(0x38, gbc.readMem(0xb0bc));
        // 5E 038C
        gbc.setState(0x8bc0, 0x1dbc, 0x4080, 0x92a1, 0x3d70, 0xb002, 0x0, 0x1);
        gbc.writeMem(0x8bc0, { 0x5e });
        gbc.writeMem(0xb002, { 0x38 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x1dbc, gbc.sp());
        EXPECT(0x8bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8bc0));
        EXPECT(0x38, gbc.readMem(0xb002));
        // 5E 038D
        gbc.setState(0xb546, 0xe7fc, 0x5b70, 0x2388, 0x7c6b, 0x7ed6, 0x0, 0x1);
        gbc.writeMem(0x7ed6, { 0xfd });
        gbc.writeMem(0xb546, { 0x5e });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe7fc, gbc.sp());
        EXPECT(0xb547, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb546));
        // 5E 038E
        gbc.setState(0x3b3d, 0x7903, 0x3b40, 0x75b4, 0x13d0, 0xb26d, 0x0, 0x1);
        gbc.writeMem(0x3b3d, { 0x5e });
        gbc.writeMem(0xb26d, { 0xe0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x7903, gbc.sp());
        EXPECT(0x3b3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xb26d));
        // 5E 038F
        gbc.setState(0xaef4, 0xe21, 0x3990, 0x8777, 0xad11, 0x426, 0x0, 0x0);
        gbc.writeMem(0x426, { 0x2e });
        gbc.writeMem(0xaef4, { 0x5e });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xe21, gbc.sp());
        EXPECT(0xaef5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xaef4));
        // 5E 0390
        gbc.setState(0x2743, 0x3643, 0x5a0, 0x20c, 0x40f3, 0x3600, 0x0, 0x1);
        gbc.writeMem(0x2743, { 0x5e });
        gbc.writeMem(0x3600, { 0xdd });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x3643, gbc.sp());
        EXPECT(0x2744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0391
        gbc.setState(0xb5d9, 0x430d, 0xdbc0, 0xecb1, 0x1b27, 0x1168, 0x1, 0x0);
        gbc.writeMem(0x1168, { 0xab });
        gbc.writeMem(0xb5d9, { 0x5e });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x430d, gbc.sp());
        EXPECT(0xb5da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb5d9));
        // 5E 0392
        gbc.setState(0x3a20, 0x693a, 0x9f50, 0x2662, 0xa0a5, 0x448a, 0x1, 0x0);
        gbc.writeMem(0x3a20, { 0x5e });
        gbc.writeMem(0x448a, { 0xe3 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x693a, gbc.sp());
        EXPECT(0x3a21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 0393
        gbc.setState(0x52a8, 0xc481, 0x4be0, 0xafe, 0xcf8c, 0x7704, 0x0, 0x0);
        gbc.writeMem(0x52a8, { 0x5e });
        gbc.writeMem(0x7704, { 0x28 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xc481, gbc.sp());
        EXPECT(0x52a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0394
        gbc.setState(0x1929, 0x8b5, 0x2040, 0xdcf4, 0x63fb, 0x6388, 0x0, 0x0);
        gbc.writeMem(0x1929, { 0x5e });
        gbc.writeMem(0x6388, { 0x30 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8b5, gbc.sp());
        EXPECT(0x192a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 0395
        gbc.setState(0xa049, 0x1e40, 0x3ca0, 0x64ed, 0x502b, 0x77df, 0x1, 0x0);
        gbc.writeMem(0x77df, { 0xd3 });
        gbc.writeMem(0xa049, { 0x5e });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x1e40, gbc.sp());
        EXPECT(0xa04a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa049));
        // 5E 0396
        gbc.setState(0x9a9a, 0x9202, 0xf680, 0x8209, 0xed17, 0x7aa2, 0x1, 0x1);
        gbc.writeMem(0x7aa2, { 0xa });
        gbc.writeMem(0x9a9a, { 0x5e });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9202, gbc.sp());
        EXPECT(0x9a9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9a9a));
        // 5E 0397
        gbc.setState(0xb53d, 0xe8e8, 0xf200, 0x4f1d, 0xec47, 0x191d, 0x1, 0x0);
        gbc.writeMem(0x191d, { 0x4b });
        gbc.writeMem(0xb53d, { 0x5e });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe8e8, gbc.sp());
        EXPECT(0xb53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb53d));
        // 5E 0398
        gbc.setState(0x39bd, 0x727d, 0x5bf0, 0xfd0f, 0x3be1, 0xb6be, 0x1, 0x0);
        gbc.writeMem(0x39bd, { 0x5e });
        gbc.writeMem(0xb6be, { 0xfb });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x727d, gbc.sp());
        EXPECT(0x39be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xb6be));
        // 5E 0399
        gbc.setState(0x5603, 0xd857, 0x61f0, 0x95a0, 0xf3da, 0x9fa7, 0x1, 0x0);
        gbc.writeMem(0x5603, { 0x5e });
        gbc.writeMem(0x9fa7, { 0x7a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd857, gbc.sp());
        EXPECT(0x5604, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9fa7));
        // 5E 039A
        gbc.setState(0x2b19, 0x2809, 0x1220, 0xb7b6, 0x397, 0xc310, 0x1, 0x1);
        gbc.writeMem(0x2b19, { 0x5e });
        gbc.writeMem(0xc310, { 0x21 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2809, gbc.sp());
        EXPECT(0x2b1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xc310));
        // 5E 039B
        gbc.setState(0x59f, 0x159e, 0xefb0, 0x1085, 0x9a5b, 0xf6de, 0x0, 0x0);
        gbc.writeMem(0x59f, { 0x5e });
        gbc.writeMem(0xf6de, { 0x4f });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x159e, gbc.sp());
        EXPECT(0x5a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xf6de));
        // 5E 039C
        gbc.setState(0x5d61, 0xf5d, 0xc260, 0x6121, 0x8b33, 0x49ca, 0x0, 0x1);
        gbc.writeMem(0x49ca, { 0x9d });
        gbc.writeMem(0x5d61, { 0x5e });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf5d, gbc.sp());
        EXPECT(0x5d62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 039D
        gbc.setState(0x2d13, 0xf23e, 0x120, 0x2538, 0x5380, 0x2277, 0x0, 0x0);
        gbc.writeMem(0x2277, { 0x48 });
        gbc.writeMem(0x2d13, { 0x5e });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xf23e, gbc.sp());
        EXPECT(0x2d14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 039E
        gbc.setState(0x1742, 0xe00b, 0xce70, 0x1e30, 0xd76b, 0x51a1, 0x0, 0x0);
        gbc.writeMem(0x1742, { 0x5e });
        gbc.writeMem(0x51a1, { 0xb1 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe00b, gbc.sp());
        EXPECT(0x1743, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 039F
        gbc.setState(0x7419, 0x9966, 0xc380, 0x32a7, 0xad58, 0xeb37, 0x0, 0x0);
        gbc.writeMem(0x7419, { 0x5e });
        gbc.writeMem(0xeb37, { 0xab });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9966, gbc.sp());
        EXPECT(0x741a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xeb37));
        // 5E 03A0
        gbc.setState(0x780e, 0x579a, 0xe1e0, 0xb03d, 0xaf13, 0xa62a, 0x1, 0x0);
        gbc.writeMem(0x780e, { 0x5e });
        gbc.writeMem(0xa62a, { 0x7d });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x579a, gbc.sp());
        EXPECT(0x780f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa62a));
        // 5E 03A1
        gbc.setState(0x8bb3, 0x4654, 0xc330, 0xe2ee, 0x7a55, 0xc6ba, 0x1, 0x1);
        gbc.writeMem(0x8bb3, { 0x5e });
        gbc.writeMem(0xc6ba, { 0xff });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4654, gbc.sp());
        EXPECT(0x8bb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8bb3));
        EXPECT(0xff, gbc.readMem(0xc6ba));
        // 5E 03A2
        gbc.setState(0x2380, 0x7212, 0xb660, 0xac20, 0xa847, 0xef52, 0x0, 0x1);
        gbc.writeMem(0x2380, { 0x5e });
        gbc.writeMem(0xef52, { 0x63 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x7212, gbc.sp());
        EXPECT(0x2381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xef52));
        // 5E 03A4
        gbc.setState(0x450b, 0x37c, 0x5380, 0xf718, 0xb0a, 0xdec4, 0x0, 0x1);
        gbc.writeMem(0x450b, { 0x5e });
        gbc.writeMem(0xdec4, { 0x57 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x37c, gbc.sp());
        EXPECT(0x450c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdec4));
        // 5E 03A5
        gbc.setState(0x6421, 0xc776, 0x8760, 0x6cd0, 0xcc9e, 0x863a, 0x0, 0x1);
        gbc.writeMem(0x6421, { 0x5e });
        gbc.writeMem(0x863a, { 0xec });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc776, gbc.sp());
        EXPECT(0x6422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x863a));
        // 5E 03A6
        gbc.setState(0xb69e, 0x24a4, 0x1300, 0xcdcb, 0xf07a, 0x8253, 0x0, 0x1);
        gbc.writeMem(0x8253, { 0xbb });
        gbc.writeMem(0xb69e, { 0x5e });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x24a4, gbc.sp());
        EXPECT(0xb69f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x8253));
        EXPECT(0x5e, gbc.readMem(0xb69e));
        // 5E 03A7
        gbc.setState(0xcccd, 0x7795, 0x20d0, 0x756d, 0x98f5, 0x38f9, 0x1, 0x1);
        gbc.writeMem(0x38f9, { 0x49 });
        gbc.writeMem(0xcccd, { 0x5e });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7795, gbc.sp());
        EXPECT(0xccce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcccd));
        // 5E 03A8
        gbc.setState(0xa315, 0x8dca, 0xaec0, 0x10cb, 0xdd74, 0x61de, 0x0, 0x1);
        gbc.writeMem(0x61de, { 0x10 });
        gbc.writeMem(0xa315, { 0x5e });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x8dca, gbc.sp());
        EXPECT(0xa316, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa315));
        // 5E 03A9
        gbc.setState(0x8808, 0x7364, 0xfc50, 0x5058, 0x5ac8, 0xfcc0, 0x1, 0x0);
        gbc.writeMem(0x8808, { 0x5e });
        gbc.writeMem(0xfcc0, { 0xff });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7364, gbc.sp());
        EXPECT(0x8809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8808));
        EXPECT(0xff, gbc.readMem(0xfcc0));
        // 5E 03AA
        gbc.setState(0x4820, 0x6a45, 0xcdb0, 0xa7e5, 0x10d1, 0xa915, 0x1, 0x0);
        gbc.writeMem(0x4820, { 0x5e });
        gbc.writeMem(0xa915, { 0xc3 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x6a45, gbc.sp());
        EXPECT(0x4821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0xa915));
        // 5E 03AB
        gbc.setState(0xd9d, 0x5212, 0xf710, 0xeec3, 0x555c, 0xec7a, 0x1, 0x0);
        gbc.writeMem(0xd9d, { 0x5e });
        gbc.writeMem(0xec7a, { 0xad });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5212, gbc.sp());
        EXPECT(0xd9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xec7a));
        // 5E 03AC
        gbc.setState(0x1cd8, 0x348e, 0xf0b0, 0xd257, 0x1285, 0x309e, 0x0, 0x0);
        gbc.writeMem(0x1cd8, { 0x5e });
        gbc.writeMem(0x309e, { 0x59 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x348e, gbc.sp());
        EXPECT(0x1cd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 03AD
        gbc.setState(0x3ba9, 0xacf5, 0x22a0, 0xaa2f, 0x54b9, 0x8038, 0x0, 0x0);
        gbc.writeMem(0x3ba9, { 0x5e });
        gbc.writeMem(0x8038, { 0xc6 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xacf5, gbc.sp());
        EXPECT(0x3baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0x8038));
        // 5E 03AE
        gbc.setState(0xa105, 0xf066, 0x44c0, 0x7c00, 0x3aca, 0xc6d, 0x1, 0x1);
        gbc.writeMem(0xc6d, { 0x9a });
        gbc.writeMem(0xa105, { 0x5e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xf066, gbc.sp());
        EXPECT(0xa106, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa105));
        // 5E 03AF
        gbc.setState(0xcd07, 0x2490, 0x2c00, 0x12cd, 0x18cd, 0x4f40, 0x1, 0x0);
        gbc.writeMem(0x4f40, { 0x8c });
        gbc.writeMem(0xcd07, { 0x5e });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2490, gbc.sp());
        EXPECT(0xcd08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xcd07));
        // 5E 03B0
        gbc.setState(0xe42f, 0xda88, 0x8510, 0x8d08, 0x5d6a, 0xcdf7, 0x1, 0x0);
        gbc.writeMem(0xcdf7, { 0x95 });
        gbc.writeMem(0xe42f, { 0x5e });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xda88, gbc.sp());
        EXPECT(0xe430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xcdf7));
        EXPECT(0x5e, gbc.readMem(0xe42f));
        // 5E 03B1
        gbc.setState(0xa53f, 0x1842, 0x9050, 0xa55f, 0xf2df, 0x7e0c, 0x0, 0x1);
        gbc.writeMem(0x7e0c, { 0xaa });
        gbc.writeMem(0xa53f, { 0x5e });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1842, gbc.sp());
        EXPECT(0xa540, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa53f));
        // 5E 03B2
        gbc.setState(0x7619, 0xac7c, 0xd3d0, 0x9061, 0x189c, 0x8447, 0x0, 0x0);
        gbc.writeMem(0x7619, { 0x5e });
        gbc.writeMem(0x8447, { 0xb });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xac7c, gbc.sp());
        EXPECT(0x761a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0x8447));
        // 5E 03B3
        gbc.setState(0x4a4e, 0x736d, 0x5b50, 0x1d60, 0x5e3e, 0xed14, 0x0, 0x0);
        gbc.writeMem(0x4a4e, { 0x5e });
        gbc.writeMem(0xed14, { 0xf1 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x736d, gbc.sp());
        EXPECT(0x4a4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xed14));
        // 5E 03B4
        gbc.setState(0x8a76, 0xc580, 0x3db0, 0x549, 0x4746, 0x5c77, 0x1, 0x0);
        gbc.writeMem(0x5c77, { 0xe3 });
        gbc.writeMem(0x8a76, { 0x5e });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xc580, gbc.sp());
        EXPECT(0x8a77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x8a76));
        // 5E 03B5
        gbc.setState(0xc84b, 0xbfc4, 0xd440, 0x994c, 0xd9b9, 0xbdf9, 0x0, 0x0);
        gbc.writeMem(0xbdf9, { 0xb });
        gbc.writeMem(0xc84b, { 0x5e });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbfc4, gbc.sp());
        EXPECT(0xc84c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xbdf9));
        EXPECT(0x5e, gbc.readMem(0xc84b));
        // 5E 03B6
        gbc.setState(0xa619, 0x7aea, 0xfbb0, 0xce27, 0xef6f, 0xc2eb, 0x1, 0x1);
        gbc.writeMem(0xa619, { 0x5e });
        gbc.writeMem(0xc2eb, { 0xe7 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7aea, gbc.sp());
        EXPECT(0xa61a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa619));
        EXPECT(0xe7, gbc.readMem(0xc2eb));
        // 5E 03B7
        gbc.setState(0x11f3, 0x5f2, 0x9200, 0x6d81, 0x53d8, 0x5470, 0x0, 0x1);
        gbc.writeMem(0x11f3, { 0x5e });
        gbc.writeMem(0x5470, { 0x8f });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5f2, gbc.sp());
        EXPECT(0x11f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 03B8
        gbc.setState(0x10fb, 0xaf46, 0x82e0, 0xf23e, 0x9456, 0x5c05, 0x1, 0x1);
        gbc.writeMem(0x10fb, { 0x5e });
        gbc.writeMem(0x5c05, { 0x18 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xaf46, gbc.sp());
        EXPECT(0x10fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 03B9
        gbc.setState(0xba4e, 0xaa33, 0x1020, 0x878d, 0x9c9e, 0x401a, 0x1, 0x1);
        gbc.writeMem(0x401a, { 0x4 });
        gbc.writeMem(0xba4e, { 0x5e });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xaa33, gbc.sp());
        EXPECT(0xba4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xba4e));
        // 5E 03BA
        gbc.setState(0x52df, 0x3770, 0xffc0, 0x8cf8, 0xb415, 0xfeea, 0x0, 0x1);
        gbc.writeMem(0x52df, { 0x5e });
        gbc.writeMem(0xfeea, { 0x82 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3770, gbc.sp());
        EXPECT(0x52e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x82, gbc.readMem(0xfeea));
        // 5E 03BB
        gbc.setState(0xa7b7, 0x18b8, 0xb940, 0xa68f, 0xa270, 0x7747, 0x1, 0x1);
        gbc.writeMem(0x7747, { 0x49 });
        gbc.writeMem(0xa7b7, { 0x5e });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x18b8, gbc.sp());
        EXPECT(0xa7b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa7b7));
        // 5E 03BD
        gbc.setState(0x6916, 0x18a0, 0x4ef0, 0x5c6b, 0x8cae, 0x46f5, 0x1, 0x0);
        gbc.writeMem(0x46f5, { 0xcf });
        gbc.writeMem(0x6916, { 0x5e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x18a0, gbc.sp());
        EXPECT(0x6917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 03BE
        gbc.setState(0x60c2, 0x1242, 0x97a0, 0xde44, 0xcfb7, 0xb4bf, 0x1, 0x1);
        gbc.writeMem(0x60c2, { 0x5e });
        gbc.writeMem(0xb4bf, { 0x92 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x1242, gbc.sp());
        EXPECT(0x60c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb4bf));
        // 5E 03C0
        gbc.setState(0xe2df, 0x5953, 0x5d10, 0x4459, 0x42fb, 0xa29b, 0x1, 0x0);
        gbc.writeMem(0xa29b, { 0x9f });
        gbc.writeMem(0xe2df, { 0x5e });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x5953, gbc.sp());
        EXPECT(0xe2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xa29b));
        EXPECT(0x5e, gbc.readMem(0xe2df));
        // 5E 03C1
        gbc.setState(0x1f74, 0xefbb, 0x9e60, 0x782b, 0x2799, 0xa266, 0x0, 0x0);
        gbc.writeMem(0x1f74, { 0x5e });
        gbc.writeMem(0xa266, { 0x59 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xefbb, gbc.sp());
        EXPECT(0x1f75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xa266));
        // 5E 03C2
        gbc.setState(0x1b5b, 0x7628, 0x8830, 0x9366, 0x917f, 0x616c, 0x0, 0x0);
        gbc.writeMem(0x1b5b, { 0x5e });
        gbc.writeMem(0x616c, { 0x3a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7628, gbc.sp());
        EXPECT(0x1b5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 03C3
        gbc.setState(0x4619, 0xd1f0, 0x7f00, 0x491, 0x6e01, 0x3113, 0x1, 0x0);
        gbc.writeMem(0x3113, { 0x48 });
        gbc.writeMem(0x4619, { 0x5e });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd1f0, gbc.sp());
        EXPECT(0x461a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 03C4
        gbc.setState(0x4eb6, 0xe8cf, 0x5790, 0x2eb0, 0x669c, 0x97e2, 0x1, 0x1);
        gbc.writeMem(0x4eb6, { 0x5e });
        gbc.writeMem(0x97e2, { 0x88 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe8cf, gbc.sp());
        EXPECT(0x4eb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0x97e2));
        // 5E 03C5
        gbc.setState(0xe0ec, 0x4901, 0xaa10, 0xcc63, 0xe8ba, 0xa985, 0x0, 0x0);
        gbc.writeMem(0xa985, { 0x99 });
        gbc.writeMem(0xe0ec, { 0x5e });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4901, gbc.sp());
        EXPECT(0xe0ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xa985));
        EXPECT(0x5e, gbc.readMem(0xe0ec));
        // 5E 03C6
        gbc.setState(0x918a, 0xb978, 0xcee0, 0xff42, 0xc239, 0xc32d, 0x0, 0x1);
        gbc.writeMem(0x918a, { 0x5e });
        gbc.writeMem(0xc32d, { 0x99 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb978, gbc.sp());
        EXPECT(0x918b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x918a));
        EXPECT(0x99, gbc.readMem(0xc32d));
        // 5E 03C7
        gbc.setState(0x70c8, 0xda41, 0x8250, 0x3866, 0x193c, 0x2893, 0x1, 0x1);
        gbc.writeMem(0x2893, { 0x84 });
        gbc.writeMem(0x70c8, { 0x5e });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xda41, gbc.sp());
        EXPECT(0x70c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 03C8
        gbc.setState(0x1827, 0xf403, 0xb950, 0xf765, 0x2d46, 0x2805, 0x1, 0x1);
        gbc.writeMem(0x1827, { 0x5e });
        gbc.writeMem(0x2805, { 0xd1 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xf403, gbc.sp());
        EXPECT(0x1828, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 03C9
        gbc.setState(0x5af4, 0x88e4, 0x4400, 0x42c3, 0x9abd, 0x585b, 0x1, 0x1);
        gbc.writeMem(0x585b, { 0xe });
        gbc.writeMem(0x5af4, { 0x5e });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x88e4, gbc.sp());
        EXPECT(0x5af5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 03CA
        gbc.setState(0x797f, 0xf432, 0xff90, 0x8ae1, 0x4136, 0x795c, 0x0, 0x0);
        gbc.writeMem(0x795c, { 0x7 });
        gbc.writeMem(0x797f, { 0x5e });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf432, gbc.sp());
        EXPECT(0x7980, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 03CB
        gbc.setState(0xced7, 0x6034, 0xd310, 0x4b44, 0xf137, 0x965c, 0x1, 0x0);
        gbc.writeMem(0x965c, { 0xb6 });
        gbc.writeMem(0xced7, { 0x5e });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6034, gbc.sp());
        EXPECT(0xced8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb6, gbc.readMem(0x965c));
        EXPECT(0x5e, gbc.readMem(0xced7));
        // 5E 03CD
        gbc.setState(0xc25f, 0xe1bd, 0x550, 0x25b7, 0x3826, 0x665a, 0x1, 0x0);
        gbc.writeMem(0x665a, { 0x7c });
        gbc.writeMem(0xc25f, { 0x5e });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xe1bd, gbc.sp());
        EXPECT(0xc260, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xc25f));
        // 5E 03CE
        gbc.setState(0xb206, 0x7e4d, 0xb6f0, 0x47eb, 0xdeb8, 0x1598, 0x0, 0x1);
        gbc.writeMem(0x1598, { 0xd3 });
        gbc.writeMem(0xb206, { 0x5e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x7e4d, gbc.sp());
        EXPECT(0xb207, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb206));
        // 5E 03CF
        gbc.setState(0xace5, 0xa037, 0x3a40, 0x7542, 0x2198, 0x3a3, 0x1, 0x1);
        gbc.writeMem(0x3a3, { 0x4b });
        gbc.writeMem(0xace5, { 0x5e });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa037, gbc.sp());
        EXPECT(0xace6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xace5));
        // 5E 03D0
        gbc.setState(0x1882, 0xd34c, 0xf260, 0x9e5e, 0x4c06, 0xe485, 0x1, 0x1);
        gbc.writeMem(0x1882, { 0x5e });
        gbc.writeMem(0xe485, { 0xa7 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd34c, gbc.sp());
        EXPECT(0x1883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xe485));
        // 5E 03D1
        gbc.setState(0x9419, 0x4fa9, 0x7c10, 0x5ed6, 0x6487, 0xa5e0, 0x0, 0x1);
        gbc.writeMem(0x9419, { 0x5e });
        gbc.writeMem(0xa5e0, { 0x14 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4fa9, gbc.sp());
        EXPECT(0x941a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x9419));
        EXPECT(0x14, gbc.readMem(0xa5e0));
        // 5E 03D2
        gbc.setState(0x719, 0xa0dd, 0x1ab0, 0xd96f, 0x7c16, 0x5002, 0x0, 0x1);
        gbc.writeMem(0x719, { 0x5e });
        gbc.writeMem(0x5002, { 0x91 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xa0dd, gbc.sp());
        EXPECT(0x71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 03D3
        gbc.setState(0x80ab, 0x124a, 0xd290, 0xbd7a, 0x6976, 0xa587, 0x0, 0x1);
        gbc.writeMem(0x80ab, { 0x5e });
        gbc.writeMem(0xa587, { 0x43 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x124a, gbc.sp());
        EXPECT(0x80ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0x80ab));
        EXPECT(0x43, gbc.readMem(0xa587));
        // 5E 03D4
        gbc.setState(0x13ff, 0xf75f, 0x6300, 0x8807, 0xc21b, 0x2df2, 0x0, 0x0);
        gbc.writeMem(0x13ff, { 0x5e });
        gbc.writeMem(0x2df2, { 0xb5 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf75f, gbc.sp());
        EXPECT(0x1400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 03D5
        gbc.setState(0x1119, 0x1a49, 0xc6e0, 0x5596, 0x13c8, 0xdc6d, 0x1, 0x1);
        gbc.writeMem(0x1119, { 0x5e });
        gbc.writeMem(0xdc6d, { 0x57 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x1a49, gbc.sp());
        EXPECT(0x111a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdc6d));
        // 5E 03D6
        gbc.setState(0x7ddc, 0x551b, 0x6780, 0x4496, 0xb60a, 0xeebe, 0x1, 0x1);
        gbc.writeMem(0x7ddc, { 0x5e });
        gbc.writeMem(0xeebe, { 0x8f });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x551b, gbc.sp());
        EXPECT(0x7ddd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xeebe));
        // 5E 03D7
        gbc.setState(0xd93c, 0x55ca, 0x1a60, 0x72ac, 0x14f4, 0xfd6e, 0x0, 0x1);
        gbc.writeMem(0xd93c, { 0x5e });
        gbc.writeMem(0xfd6e, { 0xf4 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x55ca, gbc.sp());
        EXPECT(0xd93d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd93c));
        EXPECT(0xf4, gbc.readMem(0xfd6e));
        // 5E 03D8
        gbc.setState(0x942f, 0xd70, 0xc800, 0xc7a6, 0x5f22, 0x88c4, 0x1, 0x0);
        gbc.writeMem(0x88c4, { 0x3e });
        gbc.writeMem(0x942f, { 0x5e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xd70, gbc.sp());
        EXPECT(0x9430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0x88c4));
        EXPECT(0x5e, gbc.readMem(0x942f));
        // 5E 03D9
        gbc.setState(0xa5af, 0xa480, 0x5cf0, 0x6884, 0xcd72, 0x4aee, 0x0, 0x1);
        gbc.writeMem(0x4aee, { 0x4f });
        gbc.writeMem(0xa5af, { 0x5e });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa480, gbc.sp());
        EXPECT(0xa5b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xa5af));
        // 5E 03DA
        gbc.setState(0x1c79, 0xa482, 0x9970, 0xb11a, 0xfbef, 0x55d8, 0x1, 0x1);
        gbc.writeMem(0x1c79, { 0x5e });
        gbc.writeMem(0x55d8, { 0x3 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xa482, gbc.sp());
        EXPECT(0x1c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 03DB
        gbc.setState(0x46e4, 0x3f45, 0x3330, 0xf000, 0x88d3, 0x6db, 0x1, 0x0);
        gbc.writeMem(0x6db, { 0x9 });
        gbc.writeMem(0x46e4, { 0x5e });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3f45, gbc.sp());
        EXPECT(0x46e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 03DC
        gbc.setState(0x7781, 0xa8d0, 0x8380, 0x2a3e, 0x1185, 0xcc41, 0x0, 0x0);
        gbc.writeMem(0x7781, { 0x5e });
        gbc.writeMem(0xcc41, { 0x42 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa8d0, gbc.sp());
        EXPECT(0x7782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcc41));
        // 5E 03DD
        gbc.setState(0xb4d4, 0xddda, 0xe020, 0x51be, 0x73a1, 0x50ff, 0x0, 0x1);
        gbc.writeMem(0x50ff, { 0x61 });
        gbc.writeMem(0xb4d4, { 0x5e });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xddda, gbc.sp());
        EXPECT(0xb4d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xb4d4));
        // 5E 03DF
        gbc.setState(0x374c, 0x5445, 0xe2e0, 0xedfb, 0x4884, 0x932c, 0x0, 0x1);
        gbc.writeMem(0x374c, { 0x5e });
        gbc.writeMem(0x932c, { 0xf6 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5445, gbc.sp());
        EXPECT(0x374d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x932c));
        // 5E 03E0
        gbc.setState(0xb620, 0x6fab, 0x4090, 0x4111, 0xdf0e, 0x923b, 0x1, 0x1);
        gbc.writeMem(0x923b, { 0x4b });
        gbc.writeMem(0xb620, { 0x5e });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x6fab, gbc.sp());
        EXPECT(0xb621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x923b));
        EXPECT(0x5e, gbc.readMem(0xb620));
        // 5E 03E1
        gbc.setState(0x3f11, 0x3e11, 0x80d0, 0x3e17, 0x23f1, 0x521c, 0x1, 0x1);
        gbc.writeMem(0x3f11, { 0x5e });
        gbc.writeMem(0x521c, { 0xd });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3e11, gbc.sp());
        EXPECT(0x3f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 03E2
        gbc.setState(0x55cc, 0x578e, 0xb260, 0xb572, 0xf5b2, 0x887d, 0x1, 0x0);
        gbc.writeMem(0x55cc, { 0x5e });
        gbc.writeMem(0x887d, { 0x6d });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x578e, gbc.sp());
        EXPECT(0x55cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x887d));
        // 5E 03E3
        gbc.setState(0x68b8, 0xe41, 0x4970, 0xd44d, 0x8356, 0x67e, 0x0, 0x1);
        gbc.writeMem(0x67e, { 0x3 });
        gbc.writeMem(0x68b8, { 0x5e });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe41, gbc.sp());
        EXPECT(0x68b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 5E 03E4
        gbc.setState(0x3f49, 0xfe71, 0x6fc0, 0x166f, 0x57e2, 0xb5d, 0x1, 0x0);
        gbc.writeMem(0xb5d, { 0xf8 });
        gbc.writeMem(0x3f49, { 0x5e });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfe71, gbc.sp());
        EXPECT(0x3f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 5E 03E5
        gbc.setState(0xaf99, 0xbec9, 0x5500, 0x93d5, 0x8ad5, 0x5376, 0x0, 0x0);
        gbc.writeMem(0x5376, { 0x3b });
        gbc.writeMem(0xaf99, { 0x5e });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbec9, gbc.sp());
        EXPECT(0xaf9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xaf99));
        // 5E 03E6
        gbc.setState(0xe30e, 0xced3, 0xc7a0, 0x916f, 0xf547, 0xc571, 0x1, 0x1);
        gbc.writeMem(0xc571, { 0xfd });
        gbc.writeMem(0xe30e, { 0x5e });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xced3, gbc.sp());
        EXPECT(0xe30f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xc571));
        EXPECT(0x5e, gbc.readMem(0xe30e));
        // 5E 03E7
        gbc.setState(0x3e7e, 0xc26b, 0x65f0, 0xbd6d, 0x45d6, 0x825, 0x1, 0x1);
        gbc.writeMem(0x825, { 0x37 });
        gbc.writeMem(0x3e7e, { 0x5e });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xc26b, gbc.sp());
        EXPECT(0x3e7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
