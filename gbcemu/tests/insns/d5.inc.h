    TEST(gbcemu, opcode_d5) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // D5 0001
        gbc.setState(0x2eeb, 0xb811, 0x35d0, 0xc246, 0xb87, 0x27b0, 0x0, 0x0);
        gbc.writeMem(0x2eeb, { 0xd5 });
        gbc.writeMem(0xb80f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb80f, gbc.sp());
        EXPECT(0x2eec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xb80f));
        EXPECT(0xb, gbc.readMem(0xb810));
        // D5 0003
        gbc.setState(0x4675, 0xf768, 0x7250, 0x588d, 0x5aa, 0xf801, 0x0, 0x0);
        gbc.writeMem(0x4675, { 0xd5 });
        gbc.writeMem(0xf766, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf766, gbc.sp());
        EXPECT(0x4676, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xf766));
        EXPECT(0x5, gbc.readMem(0xf767));
        // D5 0004
        gbc.setState(0xea8b, 0xb7ae, 0x2000, 0x3384, 0x422a, 0x919f, 0x0, 0x1);
        gbc.writeMem(0xb7ac, { 0x0, 0x0 });
        gbc.writeMem(0xea8b, { 0xd5 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb7ac, gbc.sp());
        EXPECT(0xea8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xb7ac));
        EXPECT(0x42, gbc.readMem(0xb7ad));
        EXPECT(0xd5, gbc.readMem(0xea8b));
        // D5 000D
        gbc.setState(0x558c, 0xd085, 0xfc40, 0x13f4, 0x74de, 0xa907, 0x1, 0x1);
        gbc.writeMem(0x558c, { 0xd5 });
        gbc.writeMem(0xd083, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd083, gbc.sp());
        EXPECT(0x558d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xde, gbc.readMem(0xd083));
        EXPECT(0x74, gbc.readMem(0xd084));
        // D5 0012
        gbc.setState(0x1757, 0x82bf, 0x0, 0x6da7, 0xe799, 0x2a56, 0x1, 0x1);
        gbc.writeMem(0x1757, { 0xd5 });
        gbc.writeMem(0x82bd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x82bd, gbc.sp());
        EXPECT(0x1758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x82bd));
        EXPECT(0xe7, gbc.readMem(0x82be));
        // D5 001A
        gbc.setState(0xe575, 0xbe84, 0xed50, 0xf51c, 0xf477, 0x39ac, 0x0, 0x1);
        gbc.writeMem(0xbe82, { 0x0, 0x0 });
        gbc.writeMem(0xe575, { 0xd5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xbe82, gbc.sp());
        EXPECT(0xe576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xbe82));
        EXPECT(0xf4, gbc.readMem(0xbe83));
        EXPECT(0xd5, gbc.readMem(0xe575));
        // D5 001B
        gbc.setState(0xee58, 0xa5ed, 0x7b10, 0xdd23, 0x5521, 0x80e6, 0x0, 0x0);
        gbc.writeMem(0xa5eb, { 0x0, 0x0 });
        gbc.writeMem(0xee58, { 0xd5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa5eb, gbc.sp());
        EXPECT(0xee59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xa5eb));
        EXPECT(0x55, gbc.readMem(0xa5ec));
        EXPECT(0xd5, gbc.readMem(0xee58));
        // D5 001C
        gbc.setState(0xe7f9, 0x8ab5, 0x2730, 0xb781, 0x1005, 0xb7a7, 0x0, 0x0);
        gbc.writeMem(0x8ab3, { 0x0, 0x0 });
        gbc.writeMem(0xe7f9, { 0xd5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8ab3, gbc.sp());
        EXPECT(0xe7fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8ab3));
        EXPECT(0x10, gbc.readMem(0x8ab4));
        EXPECT(0xd5, gbc.readMem(0xe7f9));
        // D5 0020
        gbc.setState(0x42ac, 0xf86f, 0x4a30, 0x6591, 0x2a2b, 0xd24f, 0x1, 0x1);
        gbc.writeMem(0x42ac, { 0xd5 });
        gbc.writeMem(0xf86d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xf86d, gbc.sp());
        EXPECT(0x42ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xf86d));
        EXPECT(0x2a, gbc.readMem(0xf86e));
        // D5 0023
        gbc.setState(0x7277, 0xb944, 0x17e0, 0xf77f, 0xce34, 0xe774, 0x0, 0x0);
        gbc.writeMem(0x7277, { 0xd5 });
        gbc.writeMem(0xb942, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb942, gbc.sp());
        EXPECT(0x7278, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xb942));
        EXPECT(0xce, gbc.readMem(0xb943));
        // D5 0024
        gbc.setState(0xb18a, 0x9b26, 0xa610, 0x10eb, 0x7246, 0xc391, 0x1, 0x0);
        gbc.writeMem(0x9b24, { 0x0, 0x0 });
        gbc.writeMem(0xb18a, { 0xd5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9b24, gbc.sp());
        EXPECT(0xb18b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x9b24));
        EXPECT(0x72, gbc.readMem(0x9b25));
        EXPECT(0xd5, gbc.readMem(0xb18a));
        // D5 0029
        gbc.setState(0x362f, 0xcbbc, 0x7cf0, 0x31a, 0xccc, 0x9a94, 0x0, 0x0);
        gbc.writeMem(0x362f, { 0xd5 });
        gbc.writeMem(0xcbba, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xcbba, gbc.sp());
        EXPECT(0x3630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xcbba));
        EXPECT(0xc, gbc.readMem(0xcbbb));
        // D5 002B
        gbc.setState(0x3b21, 0xbf6b, 0x4330, 0x8258, 0xf25, 0xf1ce, 0x0, 0x1);
        gbc.writeMem(0x3b21, { 0xd5 });
        gbc.writeMem(0xbf69, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xbf69, gbc.sp());
        EXPECT(0x3b22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xbf69));
        EXPECT(0xf, gbc.readMem(0xbf6a));
        // D5 002D
        gbc.setState(0x205e, 0xc280, 0xaa70, 0x698a, 0x7b95, 0xe4ec, 0x1, 0x1);
        gbc.writeMem(0x205e, { 0xd5 });
        gbc.writeMem(0xc27e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc27e, gbc.sp());
        EXPECT(0x205f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xc27e));
        EXPECT(0x7b, gbc.readMem(0xc27f));
        // D5 002E
        gbc.setState(0xeb98, 0x932e, 0x1710, 0xccf6, 0x9b2b, 0x73ca, 0x1, 0x1);
        gbc.writeMem(0x932c, { 0x0, 0x0 });
        gbc.writeMem(0xeb98, { 0xd5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x932c, gbc.sp());
        EXPECT(0xeb99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0x932c));
        EXPECT(0x9b, gbc.readMem(0x932d));
        EXPECT(0xd5, gbc.readMem(0xeb98));
        // D5 0035
        gbc.setState(0xe5ba, 0x8ef3, 0xd9f0, 0xaf1, 0xd906, 0xa8da, 0x1, 0x0);
        gbc.writeMem(0x8ef1, { 0x0, 0x0 });
        gbc.writeMem(0xe5ba, { 0xd5 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x8ef1, gbc.sp());
        EXPECT(0xe5bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0x8ef1));
        EXPECT(0xd9, gbc.readMem(0x8ef2));
        EXPECT(0xd5, gbc.readMem(0xe5ba));
        // D5 0036
        gbc.setState(0xd3df, 0xc351, 0x1f80, 0x9f85, 0xc2a5, 0xc0c6, 0x1, 0x1);
        gbc.writeMem(0xc34f, { 0x0, 0x0 });
        gbc.writeMem(0xd3df, { 0xd5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xc34f, gbc.sp());
        EXPECT(0xd3e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xc34f));
        EXPECT(0xc2, gbc.readMem(0xc350));
        EXPECT(0xd5, gbc.readMem(0xd3df));
        // D5 0038
        gbc.setState(0xa7d6, 0xcd15, 0xaa80, 0xc5f1, 0x8b91, 0x690, 0x1, 0x1);
        gbc.writeMem(0xa7d6, { 0xd5 });
        gbc.writeMem(0xcd13, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xcd13, gbc.sp());
        EXPECT(0xa7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa7d6));
        EXPECT(0x91, gbc.readMem(0xcd13));
        EXPECT(0x8b, gbc.readMem(0xcd14));
        // D5 003C
        gbc.setState(0x6c53, 0xe379, 0x2090, 0x44fb, 0x4f0, 0x5948, 0x1, 0x1);
        gbc.writeMem(0x6c53, { 0xd5 });
        gbc.writeMem(0xe377, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe377, gbc.sp());
        EXPECT(0x6c54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0xe377));
        EXPECT(0x4, gbc.readMem(0xe378));
        // D5 003E
        gbc.setState(0x829e, 0xbff1, 0xe780, 0x5b51, 0x1c86, 0xa2d0, 0x0, 0x1);
        gbc.writeMem(0x829e, { 0xd5 });
        gbc.writeMem(0xbfef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xbfef, gbc.sp());
        EXPECT(0x829f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x829e));
        EXPECT(0x86, gbc.readMem(0xbfef));
        EXPECT(0x1c, gbc.readMem(0xbff0));
        // D5 0042
        gbc.setState(0xb2a0, 0x8231, 0xcad0, 0xb379, 0xdc52, 0xf9f, 0x1, 0x1);
        gbc.writeMem(0x822f, { 0x0, 0x0 });
        gbc.writeMem(0xb2a0, { 0xd5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x822f, gbc.sp());
        EXPECT(0xb2a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0x822f));
        EXPECT(0xdc, gbc.readMem(0x8230));
        EXPECT(0xd5, gbc.readMem(0xb2a0));
        // D5 0044
        gbc.setState(0x411b, 0xdb0e, 0x31e0, 0x4967, 0xf0f5, 0x3a7e, 0x0, 0x0);
        gbc.writeMem(0x411b, { 0xd5 });
        gbc.writeMem(0xdb0c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdb0c, gbc.sp());
        EXPECT(0x411c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xdb0c));
        EXPECT(0xf0, gbc.readMem(0xdb0d));
        // D5 0046
        gbc.setState(0x9da0, 0xedd6, 0x7350, 0x6222, 0x46c2, 0x3c17, 0x1, 0x0);
        gbc.writeMem(0x9da0, { 0xd5 });
        gbc.writeMem(0xedd4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xedd4, gbc.sp());
        EXPECT(0x9da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9da0));
        EXPECT(0xc2, gbc.readMem(0xedd4));
        EXPECT(0x46, gbc.readMem(0xedd5));
        // D5 004A
        gbc.setState(0xeba9, 0xf174, 0xfe50, 0xaf48, 0xe7ad, 0xd7e4, 0x0, 0x1);
        gbc.writeMem(0xeba9, { 0xd5 });
        gbc.writeMem(0xf172, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xf172, gbc.sp());
        EXPECT(0xebaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xeba9));
        EXPECT(0xad, gbc.readMem(0xf172));
        EXPECT(0xe7, gbc.readMem(0xf173));
        // D5 004B
        gbc.setState(0xf56, 0xb649, 0xf020, 0xaa02, 0x95a6, 0x6253, 0x1, 0x0);
        gbc.writeMem(0xf56, { 0xd5 });
        gbc.writeMem(0xb647, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb647, gbc.sp());
        EXPECT(0xf57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa6, gbc.readMem(0xb647));
        EXPECT(0x95, gbc.readMem(0xb648));
        // D5 004D
        gbc.setState(0x332, 0x8eac, 0x7d40, 0x7a34, 0x63e1, 0xf54b, 0x1, 0x0);
        gbc.writeMem(0x332, { 0xd5 });
        gbc.writeMem(0x8eaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x8eaa, gbc.sp());
        EXPECT(0x333, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0x8eaa));
        EXPECT(0x63, gbc.readMem(0x8eab));
        // D5 004E
        gbc.setState(0x4dcc, 0xc944, 0xdbe0, 0xb86c, 0x1c6c, 0xe807, 0x0, 0x1);
        gbc.writeMem(0x4dcc, { 0xd5 });
        gbc.writeMem(0xc942, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc942, gbc.sp());
        EXPECT(0x4dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6c, gbc.readMem(0xc942));
        EXPECT(0x1c, gbc.readMem(0xc943));
        // D5 0053
        gbc.setState(0x507d, 0xad69, 0x23c0, 0x2b5b, 0xa5ef, 0xbf61, 0x0, 0x1);
        gbc.writeMem(0x507d, { 0xd5 });
        gbc.writeMem(0xad67, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xad67, gbc.sp());
        EXPECT(0x507e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xef, gbc.readMem(0xad67));
        EXPECT(0xa5, gbc.readMem(0xad68));
        // D5 0054
        gbc.setState(0x53c, 0xa550, 0x3b80, 0xa91d, 0x3aec, 0x899c, 0x1, 0x0);
        gbc.writeMem(0x53c, { 0xd5 });
        gbc.writeMem(0xa54e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xa54e, gbc.sp());
        EXPECT(0x53d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xa54e));
        EXPECT(0x3a, gbc.readMem(0xa54f));
        // D5 0055
        gbc.setState(0x6be2, 0xd86e, 0xf290, 0x51e8, 0x12d8, 0x14ea, 0x0, 0x0);
        gbc.writeMem(0x6be2, { 0xd5 });
        gbc.writeMem(0xd86c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd86c, gbc.sp());
        EXPECT(0x6be3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0xd86c));
        EXPECT(0x12, gbc.readMem(0xd86d));
        // D5 0056
        gbc.setState(0x2f7d, 0xe79a, 0xe060, 0xdedf, 0xc1ad, 0xd672, 0x1, 0x1);
        gbc.writeMem(0x2f7d, { 0xd5 });
        gbc.writeMem(0xe798, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe798, gbc.sp());
        EXPECT(0x2f7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xe798));
        EXPECT(0xc1, gbc.readMem(0xe799));
        // D5 005B
        gbc.setState(0x6dba, 0xf860, 0x6430, 0x74d3, 0x2740, 0xd71d, 0x0, 0x0);
        gbc.writeMem(0x6dba, { 0xd5 });
        gbc.writeMem(0xf85e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf85e, gbc.sp());
        EXPECT(0x6dbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xf85e));
        EXPECT(0x27, gbc.readMem(0xf85f));
        // D5 005C
        gbc.setState(0xabee, 0x8f8e, 0x6440, 0xc6e7, 0xb9c9, 0xa009, 0x1, 0x1);
        gbc.writeMem(0x8f8c, { 0x0, 0x0 });
        gbc.writeMem(0xabee, { 0xd5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x8f8c, gbc.sp());
        EXPECT(0xabef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8f8c));
        EXPECT(0xb9, gbc.readMem(0x8f8d));
        EXPECT(0xd5, gbc.readMem(0xabee));
        // D5 005D
        gbc.setState(0xbc33, 0xac72, 0x1fb0, 0xa7ca, 0x9cca, 0xbae0, 0x1, 0x0);
        gbc.writeMem(0xac70, { 0x0, 0x0 });
        gbc.writeMem(0xbc33, { 0xd5 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xac70, gbc.sp());
        EXPECT(0xbc34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0xac70));
        EXPECT(0x9c, gbc.readMem(0xac71));
        EXPECT(0xd5, gbc.readMem(0xbc33));
        // D5 0060
        gbc.setState(0x4060, 0xca2e, 0xe960, 0x8388, 0x72cb, 0xf084, 0x1, 0x1);
        gbc.writeMem(0x4060, { 0xd5 });
        gbc.writeMem(0xca2c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xca2c, gbc.sp());
        EXPECT(0x4061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca2c));
        EXPECT(0x72, gbc.readMem(0xca2d));
        // D5 0061
        gbc.setState(0x2945, 0xf569, 0xae0, 0xa008, 0x9a46, 0xda3e, 0x1, 0x1);
        gbc.writeMem(0x2945, { 0xd5 });
        gbc.writeMem(0xf567, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf567, gbc.sp());
        EXPECT(0x2946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0xf567));
        EXPECT(0x9a, gbc.readMem(0xf568));
        // D5 0063
        gbc.setState(0x4b33, 0xddda, 0xaa30, 0x9d8d, 0x5c4e, 0xc535, 0x0, 0x1);
        gbc.writeMem(0x4b33, { 0xd5 });
        gbc.writeMem(0xddd8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xddd8, gbc.sp());
        EXPECT(0x4b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4e, gbc.readMem(0xddd8));
        EXPECT(0x5c, gbc.readMem(0xddd9));
        // D5 0065
        gbc.setState(0x11b6, 0xb8a6, 0xb5a0, 0xc203, 0xa537, 0x9c40, 0x0, 0x1);
        gbc.writeMem(0x11b6, { 0xd5 });
        gbc.writeMem(0xb8a4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xb8a4, gbc.sp());
        EXPECT(0x11b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xb8a4));
        EXPECT(0xa5, gbc.readMem(0xb8a5));
        // D5 0069
        gbc.setState(0xac29, 0xadc3, 0xa700, 0x207a, 0x621f, 0xc513, 0x0, 0x1);
        gbc.writeMem(0xac29, { 0xd5 });
        gbc.writeMem(0xadc1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xadc1, gbc.sp());
        EXPECT(0xac2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xac29));
        EXPECT(0x1f, gbc.readMem(0xadc1));
        EXPECT(0x62, gbc.readMem(0xadc2));
        // D5 006E
        gbc.setState(0x5e0, 0xc4af, 0x1d80, 0x4962, 0xb8df, 0xfd7, 0x0, 0x1);
        gbc.writeMem(0x5e0, { 0xd5 });
        gbc.writeMem(0xc4ad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xc4ad, gbc.sp());
        EXPECT(0x5e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xc4ad));
        EXPECT(0xb8, gbc.readMem(0xc4ae));
        // D5 0070
        gbc.setState(0x1c91, 0xbec4, 0x9f40, 0x7b83, 0xa06b, 0x313, 0x1, 0x0);
        gbc.writeMem(0x1c91, { 0xd5 });
        gbc.writeMem(0xbec2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbec2, gbc.sp());
        EXPECT(0x1c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xbec2));
        EXPECT(0xa0, gbc.readMem(0xbec3));
        // D5 0074
        gbc.setState(0xa352, 0x9c74, 0xa6a0, 0x9dc6, 0xc115, 0xced, 0x0, 0x1);
        gbc.writeMem(0x9c72, { 0x0, 0x0 });
        gbc.writeMem(0xa352, { 0xd5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x9c72, gbc.sp());
        EXPECT(0xa353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9c72));
        EXPECT(0xc1, gbc.readMem(0x9c73));
        EXPECT(0xd5, gbc.readMem(0xa352));
        // D5 0076
        gbc.setState(0xd32f, 0xe049, 0xfca0, 0xf713, 0x786c, 0x62c1, 0x1, 0x1);
        gbc.writeMem(0xd32f, { 0xd5 });
        gbc.writeMem(0xe047, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe047, gbc.sp());
        EXPECT(0xd330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd32f));
        EXPECT(0x6c, gbc.readMem(0xe047));
        EXPECT(0x78, gbc.readMem(0xe048));
        // D5 0078
        gbc.setState(0xac5, 0xd6b8, 0xdb60, 0x287b, 0xd1bf, 0x1c73, 0x0, 0x0);
        gbc.writeMem(0xac5, { 0xd5 });
        gbc.writeMem(0xd6b6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd6b6, gbc.sp());
        EXPECT(0xac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd6b6));
        EXPECT(0xd1, gbc.readMem(0xd6b7));
        // D5 007B
        gbc.setState(0xe26c, 0xfa9b, 0xc430, 0xe827, 0x93d1, 0xc744, 0x0, 0x1);
        gbc.writeMem(0xe26c, { 0xd5 });
        gbc.writeMem(0xfa99, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xfa99, gbc.sp());
        EXPECT(0xe26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xe26c));
        EXPECT(0xd1, gbc.readMem(0xfa99));
        EXPECT(0x93, gbc.readMem(0xfa9a));
        // D5 007C
        gbc.setState(0xb13a, 0xce7e, 0x2c80, 0x47e5, 0xb0a3, 0xfb9b, 0x0, 0x0);
        gbc.writeMem(0xb13a, { 0xd5 });
        gbc.writeMem(0xce7c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xce7c, gbc.sp());
        EXPECT(0xb13b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb13a));
        EXPECT(0xa3, gbc.readMem(0xce7c));
        EXPECT(0xb0, gbc.readMem(0xce7d));
        // D5 007D
        gbc.setState(0x8ebb, 0xd73f, 0x1ce0, 0xcd39, 0xed4, 0x28bd, 0x1, 0x1);
        gbc.writeMem(0x8ebb, { 0xd5 });
        gbc.writeMem(0xd73d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd73d, gbc.sp());
        EXPECT(0x8ebc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8ebb));
        EXPECT(0xd4, gbc.readMem(0xd73d));
        EXPECT(0xe, gbc.readMem(0xd73e));
        // D5 0080
        gbc.setState(0xd9ea, 0xcdc0, 0xac60, 0x2343, 0xf84f, 0x8fca, 0x0, 0x1);
        gbc.writeMem(0xcdbe, { 0x0, 0x0 });
        gbc.writeMem(0xd9ea, { 0xd5 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xcdbe, gbc.sp());
        EXPECT(0xd9eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xcdbe));
        EXPECT(0xf8, gbc.readMem(0xcdbf));
        EXPECT(0xd5, gbc.readMem(0xd9ea));
        // D5 0081
        gbc.setState(0xcf72, 0x94b3, 0xb470, 0xfc13, 0x1f6f, 0x84e5, 0x1, 0x1);
        gbc.writeMem(0x94b1, { 0x0, 0x0 });
        gbc.writeMem(0xcf72, { 0xd5 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x94b1, gbc.sp());
        EXPECT(0xcf73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x94b1));
        EXPECT(0x1f, gbc.readMem(0x94b2));
        EXPECT(0xd5, gbc.readMem(0xcf72));
        // D5 0082
        gbc.setState(0x21f8, 0xc46b, 0x9640, 0x3236, 0x8da5, 0x99aa, 0x0, 0x0);
        gbc.writeMem(0x21f8, { 0xd5 });
        gbc.writeMem(0xc469, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc469, gbc.sp());
        EXPECT(0x21f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xc469));
        EXPECT(0x8d, gbc.readMem(0xc46a));
        // D5 0083
        gbc.setState(0x7846, 0xd20e, 0xf310, 0x64fa, 0x7f06, 0x883b, 0x0, 0x1);
        gbc.writeMem(0x7846, { 0xd5 });
        gbc.writeMem(0xd20c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd20c, gbc.sp());
        EXPECT(0x7847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xd20c));
        EXPECT(0x7f, gbc.readMem(0xd20d));
        // D5 0084
        gbc.setState(0xc10f, 0x9cef, 0x30f0, 0x2566, 0x6a2d, 0x34d9, 0x0, 0x0);
        gbc.writeMem(0x9ced, { 0x0, 0x0 });
        gbc.writeMem(0xc10f, { 0xd5 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x9ced, gbc.sp());
        EXPECT(0xc110, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9ced));
        EXPECT(0x6a, gbc.readMem(0x9cee));
        EXPECT(0xd5, gbc.readMem(0xc10f));
        // D5 0086
        gbc.setState(0x22f3, 0xe2be, 0x9e30, 0xd5f4, 0x9147, 0x3f2d, 0x0, 0x0);
        gbc.writeMem(0x22f3, { 0xd5 });
        gbc.writeMem(0xe2bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xe2bc, gbc.sp());
        EXPECT(0x22f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xe2bc));
        EXPECT(0x91, gbc.readMem(0xe2bd));
        // D5 0087
        gbc.setState(0x460e, 0xbfd4, 0x5460, 0x5943, 0xc7aa, 0xaef6, 0x0, 0x1);
        gbc.writeMem(0x460e, { 0xd5 });
        gbc.writeMem(0xbfd2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xbfd2, gbc.sp());
        EXPECT(0x460f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xbfd2));
        EXPECT(0xc7, gbc.readMem(0xbfd3));
        // D5 0088
        gbc.setState(0xcf93, 0xe4aa, 0xfee0, 0xe063, 0x3255, 0x6f0a, 0x0, 0x0);
        gbc.writeMem(0xcf93, { 0xd5 });
        gbc.writeMem(0xe4a8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xe4a8, gbc.sp());
        EXPECT(0xcf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xcf93));
        EXPECT(0x55, gbc.readMem(0xe4a8));
        EXPECT(0x32, gbc.readMem(0xe4a9));
        // D5 0089
        gbc.setState(0x2457, 0xe8b3, 0xd3a0, 0x4ed3, 0xc86b, 0x8881, 0x1, 0x0);
        gbc.writeMem(0x2457, { 0xd5 });
        gbc.writeMem(0xe8b1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe8b1, gbc.sp());
        EXPECT(0x2458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xe8b1));
        EXPECT(0xc8, gbc.readMem(0xe8b2));
        // D5 008B
        gbc.setState(0xb9e4, 0x97b7, 0x4f40, 0x1194, 0x2a03, 0x5174, 0x1, 0x1);
        gbc.writeMem(0x97b5, { 0x0, 0x0 });
        gbc.writeMem(0xb9e4, { 0xd5 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x97b5, gbc.sp());
        EXPECT(0xb9e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x97b5));
        EXPECT(0x2a, gbc.readMem(0x97b6));
        EXPECT(0xd5, gbc.readMem(0xb9e4));
        // D5 008C
        gbc.setState(0x7c0e, 0x9d02, 0xd4f0, 0x840c, 0x4c8a, 0x6f8c, 0x0, 0x0);
        gbc.writeMem(0x7c0e, { 0xd5 });
        gbc.writeMem(0x9d00, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9d00, gbc.sp());
        EXPECT(0x7c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8a, gbc.readMem(0x9d00));
        EXPECT(0x4c, gbc.readMem(0x9d01));
        // D5 008D
        gbc.setState(0x4e0a, 0x8a76, 0x3710, 0xd579, 0x6534, 0x35c, 0x1, 0x1);
        gbc.writeMem(0x4e0a, { 0xd5 });
        gbc.writeMem(0x8a74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8a74, gbc.sp());
        EXPECT(0x4e0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0x8a74));
        EXPECT(0x65, gbc.readMem(0x8a75));
        // D5 0091
        gbc.setState(0xe616, 0xb750, 0x13a0, 0x6454, 0x3f08, 0xe5af, 0x1, 0x1);
        gbc.writeMem(0xb74e, { 0x0, 0x0 });
        gbc.writeMem(0xe616, { 0xd5 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xb74e, gbc.sp());
        EXPECT(0xe617, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xb74e));
        EXPECT(0x3f, gbc.readMem(0xb74f));
        EXPECT(0xd5, gbc.readMem(0xe616));
        // D5 0093
        gbc.setState(0xe1e7, 0xd93b, 0xa400, 0xfbe0, 0x3f5e, 0x5ad6, 0x1, 0x1);
        gbc.writeMem(0xd939, { 0x0, 0x0 });
        gbc.writeMem(0xe1e7, { 0xd5 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xd939, gbc.sp());
        EXPECT(0xe1e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xd939));
        EXPECT(0x3f, gbc.readMem(0xd93a));
        EXPECT(0xd5, gbc.readMem(0xe1e7));
        // D5 0094
        gbc.setState(0x9095, 0xbcac, 0x4fb0, 0xa14d, 0x1a54, 0xd228, 0x0, 0x1);
        gbc.writeMem(0x9095, { 0xd5 });
        gbc.writeMem(0xbcaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbcaa, gbc.sp());
        EXPECT(0x9096, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9095));
        EXPECT(0x54, gbc.readMem(0xbcaa));
        EXPECT(0x1a, gbc.readMem(0xbcab));
        // D5 0097
        gbc.setState(0xcc17, 0xab15, 0x5700, 0x62c5, 0x3ad9, 0x879a, 0x1, 0x0);
        gbc.writeMem(0xab13, { 0x0, 0x0 });
        gbc.writeMem(0xcc17, { 0xd5 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xab13, gbc.sp());
        EXPECT(0xcc18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xab13));
        EXPECT(0x3a, gbc.readMem(0xab14));
        EXPECT(0xd5, gbc.readMem(0xcc17));
        // D5 0099
        gbc.setState(0x5147, 0xf94a, 0x38b0, 0xb637, 0x1620, 0x5caf, 0x1, 0x0);
        gbc.writeMem(0x5147, { 0xd5 });
        gbc.writeMem(0xf948, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf948, gbc.sp());
        EXPECT(0x5148, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0xf948));
        EXPECT(0x16, gbc.readMem(0xf949));
        // D5 009B
        gbc.setState(0xce1f, 0xe183, 0x9c70, 0xdbbc, 0x3412, 0xdacc, 0x0, 0x0);
        gbc.writeMem(0xce1f, { 0xd5 });
        gbc.writeMem(0xe181, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe181, gbc.sp());
        EXPECT(0xce20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xce1f));
        EXPECT(0x12, gbc.readMem(0xe181));
        EXPECT(0x34, gbc.readMem(0xe182));
        // D5 009E
        gbc.setState(0x3bd9, 0xfeaf, 0xbe40, 0x8ead, 0x5dfe, 0x8905, 0x0, 0x1);
        gbc.writeMem(0x3bd9, { 0xd5 });
        gbc.writeMem(0xfead, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xfead, gbc.sp());
        EXPECT(0x3bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0xfead));
        EXPECT(0x5d, gbc.readMem(0xfeae));
        // D5 00A2
        gbc.setState(0xe167, 0xaf5b, 0x4e70, 0x18fd, 0xd1a0, 0x69e2, 0x0, 0x1);
        gbc.writeMem(0xaf59, { 0x0, 0x0 });
        gbc.writeMem(0xe167, { 0xd5 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xaf59, gbc.sp());
        EXPECT(0xe168, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa0, gbc.readMem(0xaf59));
        EXPECT(0xd1, gbc.readMem(0xaf5a));
        EXPECT(0xd5, gbc.readMem(0xe167));
        // D5 00A3
        gbc.setState(0x50bb, 0x9845, 0x4c70, 0x638b, 0xc746, 0x4fa7, 0x1, 0x0);
        gbc.writeMem(0x50bb, { 0xd5 });
        gbc.writeMem(0x9843, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9843, gbc.sp());
        EXPECT(0x50bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x46, gbc.readMem(0x9843));
        EXPECT(0xc7, gbc.readMem(0x9844));
        // D5 00A5
        gbc.setState(0x7260, 0x83d7, 0x9970, 0x8749, 0x80fe, 0xb33, 0x1, 0x0);
        gbc.writeMem(0x7260, { 0xd5 });
        gbc.writeMem(0x83d5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x83d5, gbc.sp());
        EXPECT(0x7261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfe, gbc.readMem(0x83d5));
        EXPECT(0x80, gbc.readMem(0x83d6));
        // D5 00A7
        gbc.setState(0x9f9f, 0x90ad, 0xbd20, 0xf372, 0x8cd8, 0x4a53, 0x0, 0x1);
        gbc.writeMem(0x90ab, { 0x0, 0x0 });
        gbc.writeMem(0x9f9f, { 0xd5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x90ab, gbc.sp());
        EXPECT(0x9fa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x90ab));
        EXPECT(0x8c, gbc.readMem(0x90ac));
        EXPECT(0xd5, gbc.readMem(0x9f9f));
        // D5 00A8
        gbc.setState(0xc242, 0xbb4e, 0xbf90, 0x6ee6, 0x4908, 0x86a5, 0x0, 0x0);
        gbc.writeMem(0xbb4c, { 0x0, 0x0 });
        gbc.writeMem(0xc242, { 0xd5 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbb4c, gbc.sp());
        EXPECT(0xc243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8, gbc.readMem(0xbb4c));
        EXPECT(0x49, gbc.readMem(0xbb4d));
        EXPECT(0xd5, gbc.readMem(0xc242));
        // D5 00A9
        gbc.setState(0x30da, 0xe1cc, 0x21e0, 0xe94b, 0xb057, 0xcda3, 0x0, 0x0);
        gbc.writeMem(0x30da, { 0xd5 });
        gbc.writeMem(0xe1ca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xe1ca, gbc.sp());
        EXPECT(0x30db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe1ca));
        EXPECT(0xb0, gbc.readMem(0xe1cb));
        // D5 00AA
        gbc.setState(0xaafc, 0xbc67, 0xbd0, 0xb609, 0x55be, 0x8e13, 0x0, 0x0);
        gbc.writeMem(0xaafc, { 0xd5 });
        gbc.writeMem(0xbc65, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xbc65, gbc.sp());
        EXPECT(0xaafd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xaafc));
        EXPECT(0xbe, gbc.readMem(0xbc65));
        EXPECT(0x55, gbc.readMem(0xbc66));
        // D5 00AB
        gbc.setState(0x875, 0xcfe1, 0xb960, 0x3ca3, 0x9c0e, 0xb2d6, 0x0, 0x1);
        gbc.writeMem(0x875, { 0xd5 });
        gbc.writeMem(0xcfdf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcfdf, gbc.sp());
        EXPECT(0x876, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe, gbc.readMem(0xcfdf));
        EXPECT(0x9c, gbc.readMem(0xcfe0));
        // D5 00AE
        gbc.setState(0x83f1, 0xce77, 0x4560, 0x954c, 0xf9b9, 0x9afa, 0x1, 0x0);
        gbc.writeMem(0x83f1, { 0xd5 });
        gbc.writeMem(0xce75, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xce75, gbc.sp());
        EXPECT(0x83f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x83f1));
        EXPECT(0xb9, gbc.readMem(0xce75));
        EXPECT(0xf9, gbc.readMem(0xce76));
        // D5 00AF
        gbc.setState(0x5c08, 0xe028, 0x5920, 0x27ee, 0x6cf4, 0xb47d, 0x1, 0x0);
        gbc.writeMem(0x5c08, { 0xd5 });
        gbc.writeMem(0xe026, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe026, gbc.sp());
        EXPECT(0x5c09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xe026));
        EXPECT(0x6c, gbc.readMem(0xe027));
        // D5 00B1
        gbc.setState(0x5e07, 0x9c3a, 0x6b20, 0x27c0, 0x963a, 0xc839, 0x1, 0x0);
        gbc.writeMem(0x5e07, { 0xd5 });
        gbc.writeMem(0x9c38, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9c38, gbc.sp());
        EXPECT(0x5e08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x9c38));
        EXPECT(0x96, gbc.readMem(0x9c39));
        // D5 00B6
        gbc.setState(0xdd8, 0xa7a5, 0xd0e0, 0xef9f, 0x52a9, 0xc5bc, 0x1, 0x1);
        gbc.writeMem(0xdd8, { 0xd5 });
        gbc.writeMem(0xa7a3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa7a3, gbc.sp());
        EXPECT(0xdd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xa7a3));
        EXPECT(0x52, gbc.readMem(0xa7a4));
        // D5 00B9
        gbc.setState(0xdf7d, 0xc705, 0x6e20, 0x53e8, 0x3387, 0xd223, 0x1, 0x1);
        gbc.writeMem(0xc703, { 0x0, 0x0 });
        gbc.writeMem(0xdf7d, { 0xd5 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xc703, gbc.sp());
        EXPECT(0xdf7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc703));
        EXPECT(0x33, gbc.readMem(0xc704));
        EXPECT(0xd5, gbc.readMem(0xdf7d));
        // D5 00BA
        gbc.setState(0xe7d1, 0xd83b, 0xfa40, 0x8203, 0x3e9b, 0x1f1c, 0x0, 0x0);
        gbc.writeMem(0xd839, { 0x0, 0x0 });
        gbc.writeMem(0xe7d1, { 0xd5 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd839, gbc.sp());
        EXPECT(0xe7d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd839));
        EXPECT(0x3e, gbc.readMem(0xd83a));
        EXPECT(0xd5, gbc.readMem(0xe7d1));
        // D5 00C0
        gbc.setState(0xe7aa, 0x9d82, 0xd010, 0x128e, 0x83ee, 0x434a, 0x0, 0x1);
        gbc.writeMem(0x9d80, { 0x0, 0x0 });
        gbc.writeMem(0xe7aa, { 0xd5 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x9d80, gbc.sp());
        EXPECT(0xe7ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x9d80));
        EXPECT(0x83, gbc.readMem(0x9d81));
        EXPECT(0xd5, gbc.readMem(0xe7aa));
        // D5 00C1
        gbc.setState(0xb58a, 0xd7cf, 0x30, 0x8402, 0x5326, 0x3503, 0x1, 0x0);
        gbc.writeMem(0xb58a, { 0xd5 });
        gbc.writeMem(0xd7cd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xd7cd, gbc.sp());
        EXPECT(0xb58b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb58a));
        EXPECT(0x26, gbc.readMem(0xd7cd));
        EXPECT(0x53, gbc.readMem(0xd7ce));
        // D5 00C2
        gbc.setState(0x86dd, 0x8b45, 0x2fe0, 0x71d8, 0x8a59, 0x5e8d, 0x0, 0x0);
        gbc.writeMem(0x86dd, { 0xd5 });
        gbc.writeMem(0x8b43, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x8b43, gbc.sp());
        EXPECT(0x86de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x86dd));
        EXPECT(0x59, gbc.readMem(0x8b43));
        EXPECT(0x8a, gbc.readMem(0x8b44));
        // D5 00C3
        gbc.setState(0xd04a, 0xab5b, 0x2a40, 0x74b3, 0x7af6, 0xd63, 0x0, 0x0);
        gbc.writeMem(0xab59, { 0x0, 0x0 });
        gbc.writeMem(0xd04a, { 0xd5 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xab59, gbc.sp());
        EXPECT(0xd04b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xab59));
        EXPECT(0x7a, gbc.readMem(0xab5a));
        EXPECT(0xd5, gbc.readMem(0xd04a));
        // D5 00C9
        gbc.setState(0xe15e, 0x877f, 0x53e0, 0x45b8, 0x874c, 0x91ba, 0x0, 0x1);
        gbc.writeMem(0x877d, { 0x0, 0x0 });
        gbc.writeMem(0xe15e, { 0xd5 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x877d, gbc.sp());
        EXPECT(0xe15f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0x877d));
        EXPECT(0x87, gbc.readMem(0x877e));
        EXPECT(0xd5, gbc.readMem(0xe15e));
        // D5 00CC
        gbc.setState(0x1f6, 0xf5ef, 0x21e0, 0xe42c, 0x8dbc, 0x5204, 0x0, 0x0);
        gbc.writeMem(0x1f6, { 0xd5 });
        gbc.writeMem(0xf5ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf5ed, gbc.sp());
        EXPECT(0x1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbc, gbc.readMem(0xf5ed));
        EXPECT(0x8d, gbc.readMem(0xf5ee));
        // D5 00CE
        gbc.setState(0xd0d7, 0xabc4, 0xfd50, 0x946d, 0x1249, 0xf630, 0x0, 0x0);
        gbc.writeMem(0xabc2, { 0x0, 0x0 });
        gbc.writeMem(0xd0d7, { 0xd5 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xabc2, gbc.sp());
        EXPECT(0xd0d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xabc2));
        EXPECT(0x12, gbc.readMem(0xabc3));
        EXPECT(0xd5, gbc.readMem(0xd0d7));
        // D5 00D2
        gbc.setState(0x35fb, 0xd997, 0xef60, 0x25a7, 0xfe31, 0x31a0, 0x1, 0x1);
        gbc.writeMem(0x35fb, { 0xd5 });
        gbc.writeMem(0xd995, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd995, gbc.sp());
        EXPECT(0x35fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0xd995));
        EXPECT(0xfe, gbc.readMem(0xd996));
        // D5 00D5
        gbc.setState(0xd022, 0xc24f, 0x7190, 0xec69, 0xbd06, 0x1235, 0x0, 0x1);
        gbc.writeMem(0xc24d, { 0x0, 0x0 });
        gbc.writeMem(0xd022, { 0xd5 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc24d, gbc.sp());
        EXPECT(0xd023, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc24d));
        EXPECT(0xbd, gbc.readMem(0xc24e));
        EXPECT(0xd5, gbc.readMem(0xd022));
        // D5 00D7
        gbc.setState(0x4ee0, 0xf737, 0xe10, 0x479e, 0x83a8, 0x2a5b, 0x1, 0x0);
        gbc.writeMem(0x4ee0, { 0xd5 });
        gbc.writeMem(0xf735, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xf735, gbc.sp());
        EXPECT(0x4ee1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa8, gbc.readMem(0xf735));
        EXPECT(0x83, gbc.readMem(0xf736));
        // D5 00D8
        gbc.setState(0x4c44, 0xcadf, 0x170, 0xaf86, 0x864, 0xe08f, 0x0, 0x1);
        gbc.writeMem(0x4c44, { 0xd5 });
        gbc.writeMem(0xcadd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xcadd, gbc.sp());
        EXPECT(0x4c45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0xcadd));
        EXPECT(0x8, gbc.readMem(0xcade));
        // D5 00D9
        gbc.setState(0xa5de, 0xff59, 0xb3b0, 0xa182, 0xda73, 0xf145, 0x1, 0x1);
        gbc.writeMem(0xa5de, { 0xd5 });
        gbc.writeMem(0xff57, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xff57, gbc.sp());
        EXPECT(0xa5df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa5de));
        EXPECT(0x73, gbc.readMem(0xff57));
        EXPECT(0xda, gbc.readMem(0xff58));
        // D5 00DC
        gbc.setState(0x9d47, 0xc146, 0x4260, 0x11b5, 0x18c6, 0x25c4, 0x1, 0x0);
        gbc.writeMem(0x9d47, { 0xd5 });
        gbc.writeMem(0xc144, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc144, gbc.sp());
        EXPECT(0x9d48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9d47));
        EXPECT(0xc6, gbc.readMem(0xc144));
        EXPECT(0x18, gbc.readMem(0xc145));
        // D5 00DD
        gbc.setState(0xb9ab, 0xc569, 0x4e20, 0x2fe1, 0xe544, 0xa891, 0x1, 0x0);
        gbc.writeMem(0xb9ab, { 0xd5 });
        gbc.writeMem(0xc567, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xc567, gbc.sp());
        EXPECT(0xb9ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb9ab));
        EXPECT(0x44, gbc.readMem(0xc567));
        EXPECT(0xe5, gbc.readMem(0xc568));
        // D5 00DF
        gbc.setState(0x5c9e, 0xedd7, 0xcbe0, 0x5936, 0x575e, 0xe5f5, 0x0, 0x0);
        gbc.writeMem(0x5c9e, { 0xd5 });
        gbc.writeMem(0xedd5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xedd5, gbc.sp());
        EXPECT(0x5c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5e, gbc.readMem(0xedd5));
        EXPECT(0x57, gbc.readMem(0xedd6));
        // D5 00E1
        gbc.setState(0x5a44, 0xb2e6, 0x4de0, 0x7553, 0xdf27, 0x1ccf, 0x1, 0x1);
        gbc.writeMem(0x5a44, { 0xd5 });
        gbc.writeMem(0xb2e4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb2e4, gbc.sp());
        EXPECT(0x5a45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb2e4));
        EXPECT(0xdf, gbc.readMem(0xb2e5));
        // D5 00E2
        gbc.setState(0x5268, 0xdbf2, 0xe7f0, 0xcc61, 0x4bd4, 0x50fe, 0x0, 0x0);
        gbc.writeMem(0x5268, { 0xd5 });
        gbc.writeMem(0xdbf0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdbf0, gbc.sp());
        EXPECT(0x5269, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd4, gbc.readMem(0xdbf0));
        EXPECT(0x4b, gbc.readMem(0xdbf1));
        // D5 00E3
        gbc.setState(0xbf57, 0xcedc, 0x6f50, 0x242f, 0xf8cf, 0x6578, 0x1, 0x0);
        gbc.writeMem(0xbf57, { 0xd5 });
        gbc.writeMem(0xceda, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xceda, gbc.sp());
        EXPECT(0xbf58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xbf57));
        EXPECT(0xcf, gbc.readMem(0xceda));
        EXPECT(0xf8, gbc.readMem(0xcedb));
        // D5 00E6
        gbc.setState(0xa615, 0xbcfd, 0x3820, 0x3559, 0xb515, 0x4660, 0x1, 0x0);
        gbc.writeMem(0xa615, { 0xd5 });
        gbc.writeMem(0xbcfb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xbcfb, gbc.sp());
        EXPECT(0xa616, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa615));
        EXPECT(0x15, gbc.readMem(0xbcfb));
        EXPECT(0xb5, gbc.readMem(0xbcfc));
        // D5 00E7
        gbc.setState(0xb7bb, 0xbbdb, 0x4d30, 0xb81, 0x2ee, 0xa35a, 0x0, 0x0);
        gbc.writeMem(0xb7bb, { 0xd5 });
        gbc.writeMem(0xbbd9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbbd9, gbc.sp());
        EXPECT(0xb7bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb7bb));
        EXPECT(0xee, gbc.readMem(0xbbd9));
        EXPECT(0x2, gbc.readMem(0xbbda));
        // D5 00E8
        gbc.setState(0xede8, 0xff51, 0xc560, 0xd0ed, 0xa8f7, 0x7d15, 0x0, 0x0);
        gbc.writeMem(0xede8, { 0xd5 });
        gbc.writeMem(0xff4f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xff4f, gbc.sp());
        EXPECT(0xede9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xede8));
        EXPECT(0xf7, gbc.readMem(0xff4f));
        EXPECT(0xa8, gbc.readMem(0xff50));
        // D5 00ED
        gbc.setState(0xea78, 0x83b2, 0x1c60, 0x5c4d, 0xb99d, 0x7831, 0x1, 0x0);
        gbc.writeMem(0x83b0, { 0x0, 0x0 });
        gbc.writeMem(0xea78, { 0xd5 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x83b0, gbc.sp());
        EXPECT(0xea79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x83b0));
        EXPECT(0xb9, gbc.readMem(0x83b1));
        EXPECT(0xd5, gbc.readMem(0xea78));
        // D5 00EE
        gbc.setState(0xaffa, 0xcbc4, 0x2170, 0x1894, 0xfc15, 0x433e, 0x1, 0x1);
        gbc.writeMem(0xaffa, { 0xd5 });
        gbc.writeMem(0xcbc2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xcbc2, gbc.sp());
        EXPECT(0xaffb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xaffa));
        EXPECT(0x15, gbc.readMem(0xcbc2));
        EXPECT(0xfc, gbc.readMem(0xcbc3));
        // D5 00F0
        gbc.setState(0xe919, 0x8d02, 0x1410, 0xd1e0, 0x27ec, 0x581e, 0x0, 0x1);
        gbc.writeMem(0x8d00, { 0x0, 0x0 });
        gbc.writeMem(0xe919, { 0xd5 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x8d00, gbc.sp());
        EXPECT(0xe91a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0x8d00));
        EXPECT(0x27, gbc.readMem(0x8d01));
        EXPECT(0xd5, gbc.readMem(0xe919));
        // D5 00F1
        gbc.setState(0xbe8, 0xe7e6, 0x7d80, 0xe1e4, 0x3f3c, 0xb6dd, 0x1, 0x1);
        gbc.writeMem(0xbe8, { 0xd5 });
        gbc.writeMem(0xe7e4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe7e4, gbc.sp());
        EXPECT(0xbe9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3c, gbc.readMem(0xe7e4));
        EXPECT(0x3f, gbc.readMem(0xe7e5));
        // D5 00F3
        gbc.setState(0x4ce7, 0xae0f, 0xceb0, 0x7ed5, 0x946d, 0x528c, 0x1, 0x1);
        gbc.writeMem(0x4ce7, { 0xd5 });
        gbc.writeMem(0xae0d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xae0d, gbc.sp());
        EXPECT(0x4ce8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xae0d));
        EXPECT(0x94, gbc.readMem(0xae0e));
        // D5 00F5
        gbc.setState(0xa951, 0x8f6f, 0xfb90, 0x23b8, 0x15fa, 0xe188, 0x1, 0x0);
        gbc.writeMem(0x8f6d, { 0x0, 0x0 });
        gbc.writeMem(0xa951, { 0xd5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x8f6d, gbc.sp());
        EXPECT(0xa952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8f6d));
        EXPECT(0x15, gbc.readMem(0x8f6e));
        EXPECT(0xd5, gbc.readMem(0xa951));
        // D5 00F6
        gbc.setState(0x6cb, 0x8db3, 0xf860, 0xb21d, 0x1b64, 0x94b1, 0x1, 0x1);
        gbc.writeMem(0x6cb, { 0xd5 });
        gbc.writeMem(0x8db1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8db1, gbc.sp());
        EXPECT(0x6cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x8db1));
        EXPECT(0x1b, gbc.readMem(0x8db2));
        // D5 00F7
        gbc.setState(0x6ac0, 0xc148, 0x1010, 0x673, 0x98b, 0x11f1, 0x0, 0x0);
        gbc.writeMem(0x6ac0, { 0xd5 });
        gbc.writeMem(0xc146, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc146, gbc.sp());
        EXPECT(0x6ac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xc146));
        EXPECT(0x9, gbc.readMem(0xc147));
        // D5 00F8
        gbc.setState(0xcbbe, 0xd062, 0x3dd0, 0xfec8, 0x6f35, 0x7a7b, 0x0, 0x1);
        gbc.writeMem(0xcbbe, { 0xd5 });
        gbc.writeMem(0xd060, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd060, gbc.sp());
        EXPECT(0xcbbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xcbbe));
        EXPECT(0x35, gbc.readMem(0xd060));
        EXPECT(0x6f, gbc.readMem(0xd061));
        // D5 00F9
        gbc.setState(0xccaa, 0xd9ee, 0xda50, 0xb85a, 0x1959, 0x80e9, 0x0, 0x1);
        gbc.writeMem(0xccaa, { 0xd5 });
        gbc.writeMem(0xd9ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd9ec, gbc.sp());
        EXPECT(0xccab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xccaa));
        EXPECT(0x59, gbc.readMem(0xd9ec));
        EXPECT(0x19, gbc.readMem(0xd9ed));
        // D5 00FC
        gbc.setState(0x30b7, 0x84bd, 0x7110, 0x938, 0x32d8, 0x7911, 0x0, 0x1);
        gbc.writeMem(0x30b7, { 0xd5 });
        gbc.writeMem(0x84bb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x84bb, gbc.sp());
        EXPECT(0x30b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd8, gbc.readMem(0x84bb));
        EXPECT(0x32, gbc.readMem(0x84bc));
        // D5 00FF
        gbc.setState(0x17af, 0xad04, 0xf190, 0x253, 0xae52, 0x9b45, 0x0, 0x0);
        gbc.writeMem(0x17af, { 0xd5 });
        gbc.writeMem(0xad02, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xad02, gbc.sp());
        EXPECT(0x17b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x52, gbc.readMem(0xad02));
        EXPECT(0xae, gbc.readMem(0xad03));
        // D5 0100
        gbc.setState(0xd762, 0xc79b, 0x7560, 0xd8fe, 0x85e4, 0x6611, 0x1, 0x0);
        gbc.writeMem(0xc799, { 0x0, 0x0 });
        gbc.writeMem(0xd762, { 0xd5 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xc799, gbc.sp());
        EXPECT(0xd763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe4, gbc.readMem(0xc799));
        EXPECT(0x85, gbc.readMem(0xc79a));
        EXPECT(0xd5, gbc.readMem(0xd762));
        // D5 0102
        gbc.setState(0xbc54, 0xcebd, 0x2d0, 0xd812, 0x31d0, 0x1c01, 0x0, 0x1);
        gbc.writeMem(0xbc54, { 0xd5 });
        gbc.writeMem(0xcebb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcebb, gbc.sp());
        EXPECT(0xbc55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xbc54));
        EXPECT(0xd0, gbc.readMem(0xcebb));
        EXPECT(0x31, gbc.readMem(0xcebc));
        // D5 0103
        gbc.setState(0x48e2, 0xbc2e, 0x8490, 0x73cd, 0x3c17, 0xb2e5, 0x1, 0x1);
        gbc.writeMem(0x48e2, { 0xd5 });
        gbc.writeMem(0xbc2c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xbc2c, gbc.sp());
        EXPECT(0x48e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xbc2c));
        EXPECT(0x3c, gbc.readMem(0xbc2d));
        // D5 0109
        gbc.setState(0xa627, 0xa923, 0x31e0, 0x398b, 0x99af, 0x5ea3, 0x0, 0x0);
        gbc.writeMem(0xa627, { 0xd5 });
        gbc.writeMem(0xa921, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa921, gbc.sp());
        EXPECT(0xa628, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa627));
        EXPECT(0xaf, gbc.readMem(0xa921));
        EXPECT(0x99, gbc.readMem(0xa922));
        // D5 010A
        gbc.setState(0x8577, 0x93e3, 0xd9c0, 0xa29b, 0xb964, 0xd8c2, 0x0, 0x1);
        gbc.writeMem(0x8577, { 0xd5 });
        gbc.writeMem(0x93e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x93e1, gbc.sp());
        EXPECT(0x8578, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8577));
        EXPECT(0x64, gbc.readMem(0x93e1));
        EXPECT(0xb9, gbc.readMem(0x93e2));
        // D5 010B
        gbc.setState(0x7e5e, 0xc139, 0x5a0, 0xcade, 0x335f, 0xba28, 0x1, 0x0);
        gbc.writeMem(0x7e5e, { 0xd5 });
        gbc.writeMem(0xc137, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc137, gbc.sp());
        EXPECT(0x7e5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xc137));
        EXPECT(0x33, gbc.readMem(0xc138));
        // D5 010E
        gbc.setState(0xd783, 0xb2a5, 0x5d20, 0xa77b, 0xe730, 0xd342, 0x1, 0x1);
        gbc.writeMem(0xb2a3, { 0x0, 0x0 });
        gbc.writeMem(0xd783, { 0xd5 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb2a3, gbc.sp());
        EXPECT(0xd784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xb2a3));
        EXPECT(0xe7, gbc.readMem(0xb2a4));
        EXPECT(0xd5, gbc.readMem(0xd783));
        // D5 0111
        gbc.setState(0x7e36, 0x9e72, 0x65c0, 0x8a66, 0x4692, 0x7342, 0x0, 0x0);
        gbc.writeMem(0x7e36, { 0xd5 });
        gbc.writeMem(0x9e70, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x9e70, gbc.sp());
        EXPECT(0x7e37, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9e70));
        EXPECT(0x46, gbc.readMem(0x9e71));
        // D5 0113
        gbc.setState(0x33f4, 0xedba, 0xd870, 0xf0f3, 0xf8f3, 0x2db3, 0x1, 0x1);
        gbc.writeMem(0x33f4, { 0xd5 });
        gbc.writeMem(0xedb8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xedb8, gbc.sp());
        EXPECT(0x33f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xedb8));
        EXPECT(0xf8, gbc.readMem(0xedb9));
        // D5 0118
        gbc.setState(0x89ae, 0xc204, 0x67b0, 0xfba4, 0x2b85, 0x2134, 0x0, 0x1);
        gbc.writeMem(0x89ae, { 0xd5 });
        gbc.writeMem(0xc202, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc202, gbc.sp());
        EXPECT(0x89af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x89ae));
        EXPECT(0x85, gbc.readMem(0xc202));
        EXPECT(0x2b, gbc.readMem(0xc203));
        // D5 0119
        gbc.setState(0xa80e, 0x8d7f, 0xef30, 0x81ab, 0xb98b, 0x7ddf, 0x0, 0x0);
        gbc.writeMem(0x8d7d, { 0x0, 0x0 });
        gbc.writeMem(0xa80e, { 0xd5 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x8d7d, gbc.sp());
        EXPECT(0xa80f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0x8d7d));
        EXPECT(0xb9, gbc.readMem(0x8d7e));
        EXPECT(0xd5, gbc.readMem(0xa80e));
        // D5 011A
        gbc.setState(0x73f6, 0xa26f, 0x520, 0x1d1f, 0x94dd, 0x26fe, 0x0, 0x0);
        gbc.writeMem(0x73f6, { 0xd5 });
        gbc.writeMem(0xa26d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa26d, gbc.sp());
        EXPECT(0x73f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xa26d));
        EXPECT(0x94, gbc.readMem(0xa26e));
        // D5 011E
        gbc.setState(0x4eb8, 0xfc49, 0xf2a0, 0x7b6b, 0x638, 0x26c8, 0x1, 0x0);
        gbc.writeMem(0x4eb8, { 0xd5 });
        gbc.writeMem(0xfc47, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfc47, gbc.sp());
        EXPECT(0x4eb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0xfc47));
        EXPECT(0x6, gbc.readMem(0xfc48));
        // D5 0122
        gbc.setState(0x2f20, 0x868f, 0x7a0, 0x7e63, 0x2f49, 0x7816, 0x0, 0x1);
        gbc.writeMem(0x2f20, { 0xd5 });
        gbc.writeMem(0x868d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x868d, gbc.sp());
        EXPECT(0x2f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0x868d));
        EXPECT(0x2f, gbc.readMem(0x868e));
        // D5 0126
        gbc.setState(0x2da, 0xcc72, 0xa190, 0x3374, 0x57f, 0xbda7, 0x0, 0x1);
        gbc.writeMem(0x2da, { 0xd5 });
        gbc.writeMem(0xcc70, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcc70, gbc.sp());
        EXPECT(0x2db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xcc70));
        EXPECT(0x5, gbc.readMem(0xcc71));
        // D5 0127
        gbc.setState(0xc63e, 0xc75f, 0x2870, 0x8520, 0x61df, 0xe447, 0x0, 0x0);
        gbc.writeMem(0xc63e, { 0xd5 });
        gbc.writeMem(0xc75d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc75d, gbc.sp());
        EXPECT(0xc63f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc63e));
        EXPECT(0xdf, gbc.readMem(0xc75d));
        EXPECT(0x61, gbc.readMem(0xc75e));
        // D5 012F
        gbc.setState(0xb14f, 0x9614, 0xfed0, 0xdd51, 0xbda1, 0x5f09, 0x1, 0x0);
        gbc.writeMem(0x9612, { 0x0, 0x0 });
        gbc.writeMem(0xb14f, { 0xd5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9612, gbc.sp());
        EXPECT(0xb150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x9612));
        EXPECT(0xbd, gbc.readMem(0x9613));
        EXPECT(0xd5, gbc.readMem(0xb14f));
        // D5 0130
        gbc.setState(0xe68d, 0xbb60, 0xf6f0, 0xefb3, 0xf260, 0x5cf8, 0x1, 0x1);
        gbc.writeMem(0xbb5e, { 0x0, 0x0 });
        gbc.writeMem(0xe68d, { 0xd5 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xbb5e, gbc.sp());
        EXPECT(0xe68e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xbb5e));
        EXPECT(0xf2, gbc.readMem(0xbb5f));
        EXPECT(0xd5, gbc.readMem(0xe68d));
        // D5 0133
        gbc.setState(0x54c4, 0xf3df, 0x1300, 0xca5d, 0x708c, 0x42f3, 0x0, 0x1);
        gbc.writeMem(0x54c4, { 0xd5 });
        gbc.writeMem(0xf3dd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf3dd, gbc.sp());
        EXPECT(0x54c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xf3dd));
        EXPECT(0x70, gbc.readMem(0xf3de));
        // D5 0134
        gbc.setState(0x35f, 0xc358, 0xd690, 0x22bc, 0x299d, 0x5992, 0x0, 0x0);
        gbc.writeMem(0x35f, { 0xd5 });
        gbc.writeMem(0xc356, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc356, gbc.sp());
        EXPECT(0x360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xc356));
        EXPECT(0x29, gbc.readMem(0xc357));
        // D5 0135
        gbc.setState(0xa51d, 0xf473, 0xb2c0, 0xf430, 0x3048, 0xe9e1, 0x1, 0x1);
        gbc.writeMem(0xa51d, { 0xd5 });
        gbc.writeMem(0xf471, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xf471, gbc.sp());
        EXPECT(0xa51e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa51d));
        EXPECT(0x48, gbc.readMem(0xf471));
        EXPECT(0x30, gbc.readMem(0xf472));
        // D5 0137
        gbc.setState(0x3cc4, 0xd495, 0xe1f0, 0x482b, 0x35e3, 0xaca7, 0x0, 0x1);
        gbc.writeMem(0x3cc4, { 0xd5 });
        gbc.writeMem(0xd493, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xd493, gbc.sp());
        EXPECT(0x3cc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xd493));
        EXPECT(0x35, gbc.readMem(0xd494));
        // D5 0138
        gbc.setState(0xb2c7, 0xe6e5, 0x7f80, 0xbe5f, 0x70b9, 0xa719, 0x1, 0x1);
        gbc.writeMem(0xb2c7, { 0xd5 });
        gbc.writeMem(0xe6e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe6e3, gbc.sp());
        EXPECT(0xb2c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb2c7));
        EXPECT(0xb9, gbc.readMem(0xe6e3));
        EXPECT(0x70, gbc.readMem(0xe6e4));
        // D5 0139
        gbc.setState(0x5823, 0xb6d8, 0x5300, 0xa458, 0xdc90, 0x7216, 0x1, 0x1);
        gbc.writeMem(0x5823, { 0xd5 });
        gbc.writeMem(0xb6d6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xb6d6, gbc.sp());
        EXPECT(0x5824, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x90, gbc.readMem(0xb6d6));
        EXPECT(0xdc, gbc.readMem(0xb6d7));
        // D5 013B
        gbc.setState(0x270d, 0xa361, 0x57d0, 0x5065, 0x9592, 0xd19b, 0x0, 0x1);
        gbc.writeMem(0x270d, { 0xd5 });
        gbc.writeMem(0xa35f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa35f, gbc.sp());
        EXPECT(0x270e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xa35f));
        EXPECT(0x95, gbc.readMem(0xa360));
        // D5 013D
        gbc.setState(0x6f72, 0xd6cd, 0x32f0, 0xab25, 0x7d40, 0x9c79, 0x0, 0x0);
        gbc.writeMem(0x6f72, { 0xd5 });
        gbc.writeMem(0xd6cb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd6cb, gbc.sp());
        EXPECT(0x6f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd6cb));
        EXPECT(0x7d, gbc.readMem(0xd6cc));
        // D5 013E
        gbc.setState(0x9e71, 0xf897, 0x7b50, 0x9cdd, 0xa59b, 0x8f7, 0x1, 0x0);
        gbc.writeMem(0x9e71, { 0xd5 });
        gbc.writeMem(0xf895, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xf895, gbc.sp());
        EXPECT(0x9e72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9e71));
        EXPECT(0x9b, gbc.readMem(0xf895));
        EXPECT(0xa5, gbc.readMem(0xf896));
        // D5 0140
        gbc.setState(0xaf68, 0xc351, 0x4cf0, 0x174e, 0xe176, 0xf82d, 0x0, 0x0);
        gbc.writeMem(0xaf68, { 0xd5 });
        gbc.writeMem(0xc34f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xc34f, gbc.sp());
        EXPECT(0xaf69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xaf68));
        EXPECT(0x76, gbc.readMem(0xc34f));
        EXPECT(0xe1, gbc.readMem(0xc350));
        // D5 0142
        gbc.setState(0xb66b, 0xcf60, 0x7960, 0x2022, 0x5e91, 0x2366, 0x1, 0x0);
        gbc.writeMem(0xb66b, { 0xd5 });
        gbc.writeMem(0xcf5e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcf5e, gbc.sp());
        EXPECT(0xb66c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb66b));
        EXPECT(0x91, gbc.readMem(0xcf5e));
        EXPECT(0x5e, gbc.readMem(0xcf5f));
        // D5 0148
        gbc.setState(0xd0cd, 0xa94c, 0x1dd0, 0xbd60, 0x17a5, 0xc264, 0x0, 0x1);
        gbc.writeMem(0xa94a, { 0x0, 0x0 });
        gbc.writeMem(0xd0cd, { 0xd5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa94a, gbc.sp());
        EXPECT(0xd0ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xa94a));
        EXPECT(0x17, gbc.readMem(0xa94b));
        EXPECT(0xd5, gbc.readMem(0xd0cd));
        // D5 0149
        gbc.setState(0x44dd, 0xb659, 0xdaa0, 0x9534, 0x7c7c, 0xbfc1, 0x1, 0x1);
        gbc.writeMem(0x44dd, { 0xd5 });
        gbc.writeMem(0xb657, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb657, gbc.sp());
        EXPECT(0x44de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xb657));
        EXPECT(0x7c, gbc.readMem(0xb658));
        // D5 014A
        gbc.setState(0xc232, 0xd6cc, 0x1930, 0xaa51, 0x2d49, 0x91bb, 0x0, 0x0);
        gbc.writeMem(0xc232, { 0xd5 });
        gbc.writeMem(0xd6ca, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xd6ca, gbc.sp());
        EXPECT(0xc233, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc232));
        EXPECT(0x49, gbc.readMem(0xd6ca));
        EXPECT(0x2d, gbc.readMem(0xd6cb));
        // D5 014B
        gbc.setState(0x121d, 0x8f55, 0xbca0, 0x33cb, 0x1df3, 0x8e44, 0x0, 0x0);
        gbc.writeMem(0x121d, { 0xd5 });
        gbc.writeMem(0x8f53, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8f53, gbc.sp());
        EXPECT(0x121e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x8f53));
        EXPECT(0x1d, gbc.readMem(0x8f54));
        // D5 014C
        gbc.setState(0x689c, 0xc029, 0xa290, 0x4982, 0x4d43, 0xe3b4, 0x0, 0x1);
        gbc.writeMem(0x689c, { 0xd5 });
        gbc.writeMem(0xc027, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc027, gbc.sp());
        EXPECT(0x689d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xc027));
        EXPECT(0x4d, gbc.readMem(0xc028));
        // D5 014D
        gbc.setState(0xcbcb, 0xf7fe, 0x810, 0x6c94, 0x6be0, 0xa274, 0x0, 0x1);
        gbc.writeMem(0xcbcb, { 0xd5 });
        gbc.writeMem(0xf7fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf7fc, gbc.sp());
        EXPECT(0xcbcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xcbcb));
        EXPECT(0xe0, gbc.readMem(0xf7fc));
        EXPECT(0x6b, gbc.readMem(0xf7fd));
        // D5 014E
        gbc.setState(0x8c6c, 0x8e21, 0x93f0, 0x5542, 0x9e78, 0xb20c, 0x0, 0x0);
        gbc.writeMem(0x8c6c, { 0xd5 });
        gbc.writeMem(0x8e1f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x8e1f, gbc.sp());
        EXPECT(0x8c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8c6c));
        EXPECT(0x78, gbc.readMem(0x8e1f));
        EXPECT(0x9e, gbc.readMem(0x8e20));
        // D5 0150
        gbc.setState(0xa8d8, 0xa094, 0x7b60, 0x64f2, 0x762b, 0xe277, 0x0, 0x0);
        gbc.writeMem(0xa092, { 0x0, 0x0 });
        gbc.writeMem(0xa8d8, { 0xd5 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xa092, gbc.sp());
        EXPECT(0xa8d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xa092));
        EXPECT(0x76, gbc.readMem(0xa093));
        EXPECT(0xd5, gbc.readMem(0xa8d8));
        // D5 0152
        gbc.setState(0x1526, 0xcdff, 0x5c40, 0x1f72, 0x72da, 0xec36, 0x0, 0x1);
        gbc.writeMem(0x1526, { 0xd5 });
        gbc.writeMem(0xcdfd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xcdfd, gbc.sp());
        EXPECT(0x1527, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xcdfd));
        EXPECT(0x72, gbc.readMem(0xcdfe));
        // D5 0154
        gbc.setState(0x4dfe, 0x8d0b, 0x1ae0, 0x76bc, 0xe42f, 0xf865, 0x1, 0x1);
        gbc.writeMem(0x4dfe, { 0xd5 });
        gbc.writeMem(0x8d09, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8d09, gbc.sp());
        EXPECT(0x4dff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2f, gbc.readMem(0x8d09));
        EXPECT(0xe4, gbc.readMem(0x8d0a));
        // D5 0155
        gbc.setState(0x8e19, 0xdece, 0xb280, 0xddfc, 0xfdc1, 0x1cd6, 0x0, 0x0);
        gbc.writeMem(0x8e19, { 0xd5 });
        gbc.writeMem(0xdecc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdecc, gbc.sp());
        EXPECT(0x8e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8e19));
        EXPECT(0xc1, gbc.readMem(0xdecc));
        EXPECT(0xfd, gbc.readMem(0xdecd));
        // D5 0156
        gbc.setState(0x1027, 0x8da8, 0x1710, 0x1aca, 0x3b7e, 0xf68f, 0x1, 0x0);
        gbc.writeMem(0x1027, { 0xd5 });
        gbc.writeMem(0x8da6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8da6, gbc.sp());
        EXPECT(0x1028, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0x8da6));
        EXPECT(0x3b, gbc.readMem(0x8da7));
        // D5 0157
        gbc.setState(0x1cf3, 0xdc2a, 0x98b0, 0x4e11, 0x4571, 0x357f, 0x0, 0x1);
        gbc.writeMem(0x1cf3, { 0xd5 });
        gbc.writeMem(0xdc28, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xdc28, gbc.sp());
        EXPECT(0x1cf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xdc28));
        EXPECT(0x45, gbc.readMem(0xdc29));
        // D5 015C
        gbc.setState(0xbb5, 0xab59, 0x16f0, 0xfe71, 0x9ad7, 0xf926, 0x1, 0x0);
        gbc.writeMem(0xbb5, { 0xd5 });
        gbc.writeMem(0xab57, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xab57, gbc.sp());
        EXPECT(0xbb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xab57));
        EXPECT(0x9a, gbc.readMem(0xab58));
        // D5 015D
        gbc.setState(0xa0e1, 0x90f8, 0xa3c0, 0x3dbf, 0x74dc, 0x59ba, 0x0, 0x0);
        gbc.writeMem(0x90f6, { 0x0, 0x0 });
        gbc.writeMem(0xa0e1, { 0xd5 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x90f6, gbc.sp());
        EXPECT(0xa0e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x90f6));
        EXPECT(0x74, gbc.readMem(0x90f7));
        EXPECT(0xd5, gbc.readMem(0xa0e1));
        // D5 015F
        gbc.setState(0xb9ab, 0x87ce, 0x1d90, 0x905d, 0x6476, 0x3627, 0x0, 0x0);
        gbc.writeMem(0x87cc, { 0x0, 0x0 });
        gbc.writeMem(0xb9ab, { 0xd5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x87cc, gbc.sp());
        EXPECT(0xb9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x76, gbc.readMem(0x87cc));
        EXPECT(0x64, gbc.readMem(0x87cd));
        EXPECT(0xd5, gbc.readMem(0xb9ab));
        // D5 0161
        gbc.setState(0x7b1c, 0xba1f, 0x51f0, 0xa2eb, 0x14f6, 0x400e, 0x1, 0x1);
        gbc.writeMem(0x7b1c, { 0xd5 });
        gbc.writeMem(0xba1d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xba1d, gbc.sp());
        EXPECT(0x7b1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xba1d));
        EXPECT(0x14, gbc.readMem(0xba1e));
        // D5 0163
        gbc.setState(0xc310, 0xcc1d, 0xdd90, 0x9301, 0xd97a, 0xea9, 0x1, 0x0);
        gbc.writeMem(0xc310, { 0xd5 });
        gbc.writeMem(0xcc1b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xcc1b, gbc.sp());
        EXPECT(0xc311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc310));
        EXPECT(0x7a, gbc.readMem(0xcc1b));
        EXPECT(0xd9, gbc.readMem(0xcc1c));
        // D5 0164
        gbc.setState(0xc9af, 0xdb12, 0xe4d0, 0x3dd1, 0xcad1, 0x7e04, 0x1, 0x1);
        gbc.writeMem(0xc9af, { 0xd5 });
        gbc.writeMem(0xdb10, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xdb10, gbc.sp());
        EXPECT(0xc9b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc9af));
        EXPECT(0xd1, gbc.readMem(0xdb10));
        EXPECT(0xca, gbc.readMem(0xdb11));
        // D5 0166
        gbc.setState(0x981e, 0x9c63, 0x4ee0, 0x693d, 0x4050, 0x6726, 0x1, 0x1);
        gbc.writeMem(0x981e, { 0xd5 });
        gbc.writeMem(0x9c61, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9c61, gbc.sp());
        EXPECT(0x981f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x981e));
        EXPECT(0x50, gbc.readMem(0x9c61));
        EXPECT(0x40, gbc.readMem(0x9c62));
        // D5 0167
        gbc.setState(0x91a9, 0xca5d, 0xa870, 0xa077, 0xb4e5, 0x972, 0x0, 0x0);
        gbc.writeMem(0x91a9, { 0xd5 });
        gbc.writeMem(0xca5b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xca5b, gbc.sp());
        EXPECT(0x91aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x91a9));
        EXPECT(0xe5, gbc.readMem(0xca5b));
        EXPECT(0xb4, gbc.readMem(0xca5c));
        // D5 0168
        gbc.setState(0x4bd9, 0xa7e2, 0x550, 0xc300, 0x27cd, 0x2e5b, 0x0, 0x1);
        gbc.writeMem(0x4bd9, { 0xd5 });
        gbc.writeMem(0xa7e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa7e0, gbc.sp());
        EXPECT(0x4bda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xa7e0));
        EXPECT(0x27, gbc.readMem(0xa7e1));
        // D5 016B
        gbc.setState(0x6a47, 0xbb94, 0xf1d0, 0xef10, 0x4272, 0x89b0, 0x1, 0x1);
        gbc.writeMem(0x6a47, { 0xd5 });
        gbc.writeMem(0xbb92, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xbb92, gbc.sp());
        EXPECT(0x6a48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xbb92));
        EXPECT(0x42, gbc.readMem(0xbb93));
        // D5 016E
        gbc.setState(0xc310, 0xacb2, 0xc7d0, 0xd9b5, 0x3d25, 0xd50f, 0x1, 0x0);
        gbc.writeMem(0xacb0, { 0x0, 0x0 });
        gbc.writeMem(0xc310, { 0xd5 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xacb0, gbc.sp());
        EXPECT(0xc311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xacb0));
        EXPECT(0x3d, gbc.readMem(0xacb1));
        EXPECT(0xd5, gbc.readMem(0xc310));
        // D5 0170
        gbc.setState(0x5da8, 0xf181, 0x3a00, 0x88b, 0xc088, 0xbd2f, 0x1, 0x0);
        gbc.writeMem(0x5da8, { 0xd5 });
        gbc.writeMem(0xf17f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xf17f, gbc.sp());
        EXPECT(0x5da9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x88, gbc.readMem(0xf17f));
        EXPECT(0xc0, gbc.readMem(0xf180));
        // D5 0171
        gbc.setState(0xd994, 0xfb98, 0x9e30, 0xd38, 0xd74e, 0x552a, 0x1, 0x0);
        gbc.writeMem(0xd994, { 0xd5 });
        gbc.writeMem(0xfb96, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xfb96, gbc.sp());
        EXPECT(0xd995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd994));
        EXPECT(0x4e, gbc.readMem(0xfb96));
        EXPECT(0xd7, gbc.readMem(0xfb97));
        // D5 0172
        gbc.setState(0x48b6, 0xe43a, 0x1c40, 0x7a54, 0x323f, 0x3c4e, 0x0, 0x1);
        gbc.writeMem(0x48b6, { 0xd5 });
        gbc.writeMem(0xe438, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe438, gbc.sp());
        EXPECT(0x48b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xe438));
        EXPECT(0x32, gbc.readMem(0xe439));
        // D5 0174
        gbc.setState(0x6ced, 0xb225, 0xf230, 0x996f, 0x4560, 0x9bb5, 0x1, 0x1);
        gbc.writeMem(0x6ced, { 0xd5 });
        gbc.writeMem(0xb223, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb223, gbc.sp());
        EXPECT(0x6cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0xb223));
        EXPECT(0x45, gbc.readMem(0xb224));
        // D5 0175
        gbc.setState(0x12d, 0x8851, 0xbd10, 0xd28a, 0x4156, 0x9b7a, 0x1, 0x1);
        gbc.writeMem(0x12d, { 0xd5 });
        gbc.writeMem(0x884f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x884f, gbc.sp());
        EXPECT(0x12e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x884f));
        EXPECT(0x41, gbc.readMem(0x8850));
        // D5 0178
        gbc.setState(0xb21d, 0xc146, 0x4350, 0x9008, 0x3d2d, 0x22c4, 0x1, 0x1);
        gbc.writeMem(0xb21d, { 0xd5 });
        gbc.writeMem(0xc144, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc144, gbc.sp());
        EXPECT(0xb21e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb21d));
        EXPECT(0x2d, gbc.readMem(0xc144));
        EXPECT(0x3d, gbc.readMem(0xc145));
        // D5 017B
        gbc.setState(0x295e, 0xa1e2, 0x9d80, 0xb8ab, 0xc0ee, 0xca35, 0x1, 0x1);
        gbc.writeMem(0x295e, { 0xd5 });
        gbc.writeMem(0xa1e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa1e0, gbc.sp());
        EXPECT(0x295f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xa1e0));
        EXPECT(0xc0, gbc.readMem(0xa1e1));
        // D5 017C
        gbc.setState(0x550c, 0xc947, 0x7090, 0x2aea, 0xecec, 0x9e5, 0x1, 0x0);
        gbc.writeMem(0x550c, { 0xd5 });
        gbc.writeMem(0xc945, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xc945, gbc.sp());
        EXPECT(0x550d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xec, gbc.readMem(0xc945));
        EXPECT(0xec, gbc.readMem(0xc946));
        // D5 017E
        gbc.setState(0x90ab, 0xdd3e, 0x3a60, 0xc8c0, 0x9bee, 0xde3b, 0x1, 0x1);
        gbc.writeMem(0x90ab, { 0xd5 });
        gbc.writeMem(0xdd3c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xdd3c, gbc.sp());
        EXPECT(0x90ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x90ab));
        EXPECT(0xee, gbc.readMem(0xdd3c));
        EXPECT(0x9b, gbc.readMem(0xdd3d));
        // D5 017F
        gbc.setState(0x1b80, 0xb7ee, 0xdb90, 0x280e, 0xa3e, 0xe55a, 0x0, 0x1);
        gbc.writeMem(0x1b80, { 0xd5 });
        gbc.writeMem(0xb7ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xb7ec, gbc.sp());
        EXPECT(0x1b81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3e, gbc.readMem(0xb7ec));
        EXPECT(0xa, gbc.readMem(0xb7ed));
        // D5 0180
        gbc.setState(0x4d2f, 0xd4ff, 0x43f0, 0x7474, 0xc4b4, 0xb8ea, 0x1, 0x1);
        gbc.writeMem(0x4d2f, { 0xd5 });
        gbc.writeMem(0xd4fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xd4fd, gbc.sp());
        EXPECT(0x4d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb4, gbc.readMem(0xd4fd));
        EXPECT(0xc4, gbc.readMem(0xd4fe));
        // D5 0181
        gbc.setState(0xbded, 0xfd4e, 0xd6e0, 0x9584, 0x35ef, 0x700, 0x0, 0x1);
        gbc.writeMem(0xbded, { 0xd5 });
        gbc.writeMem(0xfd4c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xfd4c, gbc.sp());
        EXPECT(0xbdee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xbded));
        EXPECT(0xef, gbc.readMem(0xfd4c));
        EXPECT(0x35, gbc.readMem(0xfd4d));
        // D5 0182
        gbc.setState(0x7e0b, 0x84ec, 0x6d10, 0xe2e0, 0xa95c, 0xe6b5, 0x0, 0x0);
        gbc.writeMem(0x7e0b, { 0xd5 });
        gbc.writeMem(0x84ea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x84ea, gbc.sp());
        EXPECT(0x7e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5c, gbc.readMem(0x84ea));
        EXPECT(0xa9, gbc.readMem(0x84eb));
        // D5 0183
        gbc.setState(0x459c, 0x814e, 0xd2b0, 0xe9f, 0x19a1, 0x9be6, 0x0, 0x0);
        gbc.writeMem(0x459c, { 0xd5 });
        gbc.writeMem(0x814c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x814c, gbc.sp());
        EXPECT(0x459d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0x814c));
        EXPECT(0x19, gbc.readMem(0x814d));
        // D5 0184
        gbc.setState(0xa4f0, 0x97d8, 0xd620, 0x19da, 0x2fcf, 0xf17f, 0x0, 0x0);
        gbc.writeMem(0x97d6, { 0x0, 0x0 });
        gbc.writeMem(0xa4f0, { 0xd5 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x97d6, gbc.sp());
        EXPECT(0xa4f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x97d6));
        EXPECT(0x2f, gbc.readMem(0x97d7));
        EXPECT(0xd5, gbc.readMem(0xa4f0));
        // D5 0187
        gbc.setState(0x3045, 0xea78, 0x3d30, 0x3afd, 0x5937, 0x5f9b, 0x0, 0x0);
        gbc.writeMem(0x3045, { 0xd5 });
        gbc.writeMem(0xea76, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xea76, gbc.sp());
        EXPECT(0x3046, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xea76));
        EXPECT(0x59, gbc.readMem(0xea77));
        // D5 018A
        gbc.setState(0x8cf8, 0xf72a, 0x8810, 0xa863, 0xc9c1, 0x20f1, 0x0, 0x0);
        gbc.writeMem(0x8cf8, { 0xd5 });
        gbc.writeMem(0xf728, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf728, gbc.sp());
        EXPECT(0x8cf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8cf8));
        EXPECT(0xc1, gbc.readMem(0xf728));
        EXPECT(0xc9, gbc.readMem(0xf729));
        // D5 018E
        gbc.setState(0xa6b1, 0xbdaf, 0x4620, 0x7f32, 0x6a0a, 0x4ac0, 0x1, 0x0);
        gbc.writeMem(0xa6b1, { 0xd5 });
        gbc.writeMem(0xbdad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xbdad, gbc.sp());
        EXPECT(0xa6b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa6b1));
        EXPECT(0xa, gbc.readMem(0xbdad));
        EXPECT(0x6a, gbc.readMem(0xbdae));
        // D5 018F
        gbc.setState(0x78ff, 0x8420, 0x40c0, 0x4bd2, 0x3db1, 0x2cd, 0x1, 0x0);
        gbc.writeMem(0x78ff, { 0xd5 });
        gbc.writeMem(0x841e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x841e, gbc.sp());
        EXPECT(0x7900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x841e));
        EXPECT(0x3d, gbc.readMem(0x841f));
        // D5 0195
        gbc.setState(0xcaeb, 0xcee4, 0x8160, 0xfb65, 0xac33, 0xb166, 0x0, 0x1);
        gbc.writeMem(0xcaeb, { 0xd5 });
        gbc.writeMem(0xcee2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcee2, gbc.sp());
        EXPECT(0xcaec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xcaeb));
        EXPECT(0x33, gbc.readMem(0xcee2));
        EXPECT(0xac, gbc.readMem(0xcee3));
        // D5 0196
        gbc.setState(0x4b5d, 0xc6f9, 0x2cb0, 0xf491, 0xd28d, 0xfe48, 0x0, 0x1);
        gbc.writeMem(0x4b5d, { 0xd5 });
        gbc.writeMem(0xc6f7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xc6f7, gbc.sp());
        EXPECT(0x4b5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xc6f7));
        EXPECT(0xd2, gbc.readMem(0xc6f8));
        // D5 0197
        gbc.setState(0x182a, 0x82c6, 0xc50, 0x1877, 0x9ca, 0x9b17, 0x0, 0x1);
        gbc.writeMem(0x182a, { 0xd5 });
        gbc.writeMem(0x82c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x82c4, gbc.sp());
        EXPECT(0x182b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xca, gbc.readMem(0x82c4));
        EXPECT(0x9, gbc.readMem(0x82c5));
        // D5 019C
        gbc.setState(0x9d32, 0xd86b, 0x57c0, 0x81b1, 0xf61e, 0x327a, 0x1, 0x0);
        gbc.writeMem(0x9d32, { 0xd5 });
        gbc.writeMem(0xd869, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd869, gbc.sp());
        EXPECT(0x9d33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9d32));
        EXPECT(0x1e, gbc.readMem(0xd869));
        EXPECT(0xf6, gbc.readMem(0xd86a));
        // D5 019D
        gbc.setState(0xa7b4, 0xab9f, 0x8a30, 0x39e3, 0xb3b0, 0x7a0b, 0x1, 0x0);
        gbc.writeMem(0xa7b4, { 0xd5 });
        gbc.writeMem(0xab9d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xab9d, gbc.sp());
        EXPECT(0xa7b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa7b4));
        EXPECT(0xb0, gbc.readMem(0xab9d));
        EXPECT(0xb3, gbc.readMem(0xab9e));
        // D5 019F
        gbc.setState(0x673f, 0xc08b, 0x3e70, 0x975b, 0xe094, 0xe37f, 0x1, 0x0);
        gbc.writeMem(0x673f, { 0xd5 });
        gbc.writeMem(0xc089, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc089, gbc.sp());
        EXPECT(0x6740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x94, gbc.readMem(0xc089));
        EXPECT(0xe0, gbc.readMem(0xc08a));
        // D5 01A6
        gbc.setState(0x5e9f, 0xda2a, 0xe9b0, 0x4699, 0xefb3, 0x99ca, 0x1, 0x1);
        gbc.writeMem(0x5e9f, { 0xd5 });
        gbc.writeMem(0xda28, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xda28, gbc.sp());
        EXPECT(0x5ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xda28));
        EXPECT(0xef, gbc.readMem(0xda29));
        // D5 01A8
        gbc.setState(0xbc15, 0xafd9, 0xbcc0, 0x7ade, 0x96ab, 0x7203, 0x1, 0x0);
        gbc.writeMem(0xafd7, { 0x0, 0x0 });
        gbc.writeMem(0xbc15, { 0xd5 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xafd7, gbc.sp());
        EXPECT(0xbc16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xafd7));
        EXPECT(0x96, gbc.readMem(0xafd8));
        EXPECT(0xd5, gbc.readMem(0xbc15));
        // D5 01AA
        gbc.setState(0x99b1, 0xca62, 0xe3d0, 0x6418, 0x71d0, 0x7527, 0x0, 0x1);
        gbc.writeMem(0x99b1, { 0xd5 });
        gbc.writeMem(0xca60, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xca60, gbc.sp());
        EXPECT(0x99b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x99b1));
        EXPECT(0xd0, gbc.readMem(0xca60));
        EXPECT(0x71, gbc.readMem(0xca61));
        // D5 01AD
        gbc.setState(0x4604, 0xc311, 0x7f90, 0xe9a8, 0x225, 0xad36, 0x1, 0x0);
        gbc.writeMem(0x4604, { 0xd5 });
        gbc.writeMem(0xc30f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xc30f, gbc.sp());
        EXPECT(0x4605, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xc30f));
        EXPECT(0x2, gbc.readMem(0xc310));
        // D5 01AE
        gbc.setState(0x5988, 0xd9d7, 0x9fe0, 0x54d7, 0x1d2a, 0xfecc, 0x0, 0x0);
        gbc.writeMem(0x5988, { 0xd5 });
        gbc.writeMem(0xd9d5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xd9d5, gbc.sp());
        EXPECT(0x5989, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xd9d5));
        EXPECT(0x1d, gbc.readMem(0xd9d6));
        // D5 01B2
        gbc.setState(0x92e4, 0xd67c, 0x5ac0, 0x223e, 0x4bab, 0x1f85, 0x0, 0x0);
        gbc.writeMem(0x92e4, { 0xd5 });
        gbc.writeMem(0xd67a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xd67a, gbc.sp());
        EXPECT(0x92e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x92e4));
        EXPECT(0xab, gbc.readMem(0xd67a));
        EXPECT(0x4b, gbc.readMem(0xd67b));
        // D5 01B6
        gbc.setState(0x86e0, 0xb89e, 0xbb00, 0xb52d, 0xea9e, 0x52e2, 0x1, 0x0);
        gbc.writeMem(0x86e0, { 0xd5 });
        gbc.writeMem(0xb89c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb89c, gbc.sp());
        EXPECT(0x86e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x86e0));
        EXPECT(0x9e, gbc.readMem(0xb89c));
        EXPECT(0xea, gbc.readMem(0xb89d));
        // D5 01B7
        gbc.setState(0x82fb, 0xbcac, 0x9890, 0xe8f2, 0x5a31, 0xab86, 0x1, 0x0);
        gbc.writeMem(0x82fb, { 0xd5 });
        gbc.writeMem(0xbcaa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xbcaa, gbc.sp());
        EXPECT(0x82fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x82fb));
        EXPECT(0x31, gbc.readMem(0xbcaa));
        EXPECT(0x5a, gbc.readMem(0xbcab));
        // D5 01B9
        gbc.setState(0x7cd6, 0x82d5, 0x8550, 0xd6b0, 0x4764, 0x1c36, 0x1, 0x0);
        gbc.writeMem(0x7cd6, { 0xd5 });
        gbc.writeMem(0x82d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x82d3, gbc.sp());
        EXPECT(0x7cd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x64, gbc.readMem(0x82d3));
        EXPECT(0x47, gbc.readMem(0x82d4));
        // D5 01BB
        gbc.setState(0xa14d, 0x8648, 0xc0, 0xf4d1, 0xf0dd, 0x88f7, 0x0, 0x0);
        gbc.writeMem(0x8646, { 0x0, 0x0 });
        gbc.writeMem(0xa14d, { 0xd5 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x8646, gbc.sp());
        EXPECT(0xa14e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x8646));
        EXPECT(0xf0, gbc.readMem(0x8647));
        EXPECT(0xd5, gbc.readMem(0xa14d));
        // D5 01BE
        gbc.setState(0x4638, 0x948e, 0x200, 0x5643, 0xd2b0, 0xa83b, 0x1, 0x1);
        gbc.writeMem(0x4638, { 0xd5 });
        gbc.writeMem(0x948c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x948c, gbc.sp());
        EXPECT(0x4639, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0x948c));
        EXPECT(0xd2, gbc.readMem(0x948d));
        // D5 01C3
        gbc.setState(0x4608, 0x8a46, 0x9800, 0xd6ea, 0x526e, 0xd30e, 0x0, 0x0);
        gbc.writeMem(0x4608, { 0xd5 });
        gbc.writeMem(0x8a44, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x8a44, gbc.sp());
        EXPECT(0x4609, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0x8a44));
        EXPECT(0x52, gbc.readMem(0x8a45));
        // D5 01C4
        gbc.setState(0x8bf3, 0xb33c, 0xef90, 0x313a, 0x7b46, 0x3e0e, 0x0, 0x0);
        gbc.writeMem(0x8bf3, { 0xd5 });
        gbc.writeMem(0xb33a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb33a, gbc.sp());
        EXPECT(0x8bf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8bf3));
        EXPECT(0x46, gbc.readMem(0xb33a));
        EXPECT(0x7b, gbc.readMem(0xb33b));
        // D5 01C5
        gbc.setState(0x3602, 0xefa4, 0x2c60, 0xf965, 0x4415, 0xd4c, 0x0, 0x0);
        gbc.writeMem(0x3602, { 0xd5 });
        gbc.writeMem(0xefa2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xefa2, gbc.sp());
        EXPECT(0x3603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xefa2));
        EXPECT(0x44, gbc.readMem(0xefa3));
        // D5 01C6
        gbc.setState(0x587e, 0xc939, 0x1d00, 0xdf3e, 0x5777, 0x285a, 0x0, 0x0);
        gbc.writeMem(0x587e, { 0xd5 });
        gbc.writeMem(0xc937, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xc937, gbc.sp());
        EXPECT(0x587f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x77, gbc.readMem(0xc937));
        EXPECT(0x57, gbc.readMem(0xc938));
        // D5 01C7
        gbc.setState(0x7eb1, 0x957b, 0xacd0, 0x9b57, 0x143a, 0x4402, 0x0, 0x1);
        gbc.writeMem(0x7eb1, { 0xd5 });
        gbc.writeMem(0x9579, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x9579, gbc.sp());
        EXPECT(0x7eb2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3a, gbc.readMem(0x9579));
        EXPECT(0x14, gbc.readMem(0x957a));
        // D5 01C9
        gbc.setState(0x96bf, 0x9d7c, 0x7fa0, 0x12ba, 0x13c2, 0x8bd2, 0x1, 0x0);
        gbc.writeMem(0x96bf, { 0xd5 });
        gbc.writeMem(0x9d7a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x9d7a, gbc.sp());
        EXPECT(0x96c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x96bf));
        EXPECT(0xc2, gbc.readMem(0x9d7a));
        EXPECT(0x13, gbc.readMem(0x9d7b));
        // D5 01CA
        gbc.setState(0x6a0e, 0x9184, 0x3f0, 0xdbef, 0x1015, 0x2e34, 0x1, 0x1);
        gbc.writeMem(0x6a0e, { 0xd5 });
        gbc.writeMem(0x9182, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9182, gbc.sp());
        EXPECT(0x6a0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x9182));
        EXPECT(0x10, gbc.readMem(0x9183));
        // D5 01D1
        gbc.setState(0xe159, 0xeec7, 0x6680, 0x8e37, 0xbd8f, 0x1774, 0x0, 0x1);
        gbc.writeMem(0xe159, { 0xd5 });
        gbc.writeMem(0xeec5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xeec5, gbc.sp());
        EXPECT(0xe15a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xe159));
        EXPECT(0x8f, gbc.readMem(0xeec5));
        EXPECT(0xbd, gbc.readMem(0xeec6));
        // D5 01D5
        gbc.setState(0x6a61, 0xd577, 0x7390, 0xf077, 0x88d1, 0xcd0, 0x0, 0x1);
        gbc.writeMem(0x6a61, { 0xd5 });
        gbc.writeMem(0xd575, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xd575, gbc.sp());
        EXPECT(0x6a62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xd575));
        EXPECT(0x88, gbc.readMem(0xd576));
        // D5 01D6
        gbc.setState(0x6ed1, 0xebf1, 0x6230, 0x2d12, 0x857b, 0x7964, 0x0, 0x1);
        gbc.writeMem(0x6ed1, { 0xd5 });
        gbc.writeMem(0xebef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xebef, gbc.sp());
        EXPECT(0x6ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xebef));
        EXPECT(0x85, gbc.readMem(0xebf0));
        // D5 01D9
        gbc.setState(0x444d, 0xb354, 0xae30, 0x546f, 0x2c98, 0xb8fe, 0x0, 0x1);
        gbc.writeMem(0x444d, { 0xd5 });
        gbc.writeMem(0xb352, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xb352, gbc.sp());
        EXPECT(0x444e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x98, gbc.readMem(0xb352));
        EXPECT(0x2c, gbc.readMem(0xb353));
        // D5 01DA
        gbc.setState(0x2f90, 0xd0fc, 0xe150, 0x3b9a, 0x287a, 0xaafe, 0x0, 0x0);
        gbc.writeMem(0x2f90, { 0xd5 });
        gbc.writeMem(0xd0fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd0fa, gbc.sp());
        EXPECT(0x2f91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd0fa));
        EXPECT(0x28, gbc.readMem(0xd0fb));
        // D5 01DC
        gbc.setState(0x2a16, 0xe7ec, 0x8bf0, 0x12e3, 0x6736, 0x9c97, 0x0, 0x1);
        gbc.writeMem(0x2a16, { 0xd5 });
        gbc.writeMem(0xe7ea, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xe7ea, gbc.sp());
        EXPECT(0x2a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x36, gbc.readMem(0xe7ea));
        EXPECT(0x67, gbc.readMem(0xe7eb));
        // D5 01DE
        gbc.setState(0x57f1, 0xd979, 0x6db0, 0x8eed, 0xa9d1, 0xad28, 0x1, 0x1);
        gbc.writeMem(0x57f1, { 0xd5 });
        gbc.writeMem(0xd977, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd977, gbc.sp());
        EXPECT(0x57f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xd977));
        EXPECT(0xa9, gbc.readMem(0xd978));
        // D5 01E4
        gbc.setState(0x2ca1, 0x8eaf, 0xd760, 0x12ad, 0x3b43, 0x889f, 0x1, 0x1);
        gbc.writeMem(0x2ca1, { 0xd5 });
        gbc.writeMem(0x8ead, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8ead, gbc.sp());
        EXPECT(0x2ca2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x8ead));
        EXPECT(0x3b, gbc.readMem(0x8eae));
        // D5 01E7
        gbc.setState(0x4790, 0xbed3, 0xd670, 0xa508, 0x47fb, 0xa09e, 0x1, 0x1);
        gbc.writeMem(0x4790, { 0xd5 });
        gbc.writeMem(0xbed1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbed1, gbc.sp());
        EXPECT(0x4791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xbed1));
        EXPECT(0x47, gbc.readMem(0xbed2));
        // D5 01E9
        gbc.setState(0xa18f, 0xec63, 0x7aa0, 0xc6af, 0xbefa, 0x989e, 0x0, 0x0);
        gbc.writeMem(0xa18f, { 0xd5 });
        gbc.writeMem(0xec61, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xec61, gbc.sp());
        EXPECT(0xa190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa18f));
        EXPECT(0xfa, gbc.readMem(0xec61));
        EXPECT(0xbe, gbc.readMem(0xec62));
        // D5 01EA
        gbc.setState(0x4cad, 0xb7fc, 0xeca0, 0x632b, 0xf7fb, 0x191d, 0x0, 0x1);
        gbc.writeMem(0x4cad, { 0xd5 });
        gbc.writeMem(0xb7fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xb7fa, gbc.sp());
        EXPECT(0x4cae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xb7fa));
        EXPECT(0xf7, gbc.readMem(0xb7fb));
        // D5 01EB
        gbc.setState(0xe7bf, 0xd8f5, 0x3590, 0x4a5b, 0xef5f, 0x1f8c, 0x0, 0x1);
        gbc.writeMem(0xd8f3, { 0x0, 0x0 });
        gbc.writeMem(0xe7bf, { 0xd5 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd8f3, gbc.sp());
        EXPECT(0xe7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xd8f3));
        EXPECT(0xef, gbc.readMem(0xd8f4));
        EXPECT(0xd5, gbc.readMem(0xe7bf));
        // D5 01EF
        gbc.setState(0x5dda, 0xbfe0, 0x3650, 0xa433, 0xdce8, 0x6f5a, 0x0, 0x0);
        gbc.writeMem(0x5dda, { 0xd5 });
        gbc.writeMem(0xbfde, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbfde, gbc.sp());
        EXPECT(0x5ddb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xbfde));
        EXPECT(0xdc, gbc.readMem(0xbfdf));
        // D5 01F1
        gbc.setState(0x89e0, 0x9152, 0x6660, 0xc1e1, 0x3f7c, 0xd4e6, 0x0, 0x1);
        gbc.writeMem(0x89e0, { 0xd5 });
        gbc.writeMem(0x9150, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x9150, gbc.sp());
        EXPECT(0x89e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x89e0));
        EXPECT(0x7c, gbc.readMem(0x9150));
        EXPECT(0x3f, gbc.readMem(0x9151));
        // D5 01F4
        gbc.setState(0x349e, 0xc8a9, 0xce50, 0x9a1c, 0x5018, 0xea94, 0x0, 0x1);
        gbc.writeMem(0x349e, { 0xd5 });
        gbc.writeMem(0xc8a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc8a7, gbc.sp());
        EXPECT(0x349f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xc8a7));
        EXPECT(0x50, gbc.readMem(0xc8a8));
        // D5 01F5
        gbc.setState(0x38b6, 0xd118, 0x570, 0xcd2e, 0xd030, 0x4e28, 0x0, 0x1);
        gbc.writeMem(0x38b6, { 0xd5 });
        gbc.writeMem(0xd116, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xd116, gbc.sp());
        EXPECT(0x38b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xd116));
        EXPECT(0xd0, gbc.readMem(0xd117));
        // D5 01F7
        gbc.setState(0x4906, 0xb3fe, 0x9da0, 0x586, 0x82bf, 0x559d, 0x1, 0x0);
        gbc.writeMem(0x4906, { 0xd5 });
        gbc.writeMem(0xb3fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb3fc, gbc.sp());
        EXPECT(0x4907, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xb3fc));
        EXPECT(0x82, gbc.readMem(0xb3fd));
        // D5 01F8
        gbc.setState(0x3dc7, 0x8b95, 0xa040, 0x7601, 0x15da, 0xd338, 0x0, 0x1);
        gbc.writeMem(0x3dc7, { 0xd5 });
        gbc.writeMem(0x8b93, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x8b93, gbc.sp());
        EXPECT(0x3dc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x8b93));
        EXPECT(0x15, gbc.readMem(0x8b94));
        // D5 01FC
        gbc.setState(0xb64, 0xd396, 0x4e30, 0x8c73, 0xbd16, 0x5043, 0x0, 0x0);
        gbc.writeMem(0xb64, { 0xd5 });
        gbc.writeMem(0xd394, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd394, gbc.sp());
        EXPECT(0xb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xd394));
        EXPECT(0xbd, gbc.readMem(0xd395));
        // D5 01FD
        gbc.setState(0xafa8, 0xc2c0, 0x6a0, 0xab79, 0xc081, 0xbd22, 0x0, 0x0);
        gbc.writeMem(0xafa8, { 0xd5 });
        gbc.writeMem(0xc2be, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc2be, gbc.sp());
        EXPECT(0xafa9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xafa8));
        EXPECT(0x81, gbc.readMem(0xc2be));
        EXPECT(0xc0, gbc.readMem(0xc2bf));
        // D5 0200
        gbc.setState(0x218f, 0x9bf3, 0xedd0, 0xec5b, 0xf45f, 0x26f4, 0x0, 0x1);
        gbc.writeMem(0x218f, { 0xd5 });
        gbc.writeMem(0x9bf1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9bf1, gbc.sp());
        EXPECT(0x2190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x9bf1));
        EXPECT(0xf4, gbc.readMem(0x9bf2));
        // D5 0202
        gbc.setState(0x4cbb, 0xf7b3, 0x16e0, 0x372f, 0x68c5, 0xcaaf, 0x1, 0x0);
        gbc.writeMem(0x4cbb, { 0xd5 });
        gbc.writeMem(0xf7b1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xf7b1, gbc.sp());
        EXPECT(0x4cbc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xf7b1));
        EXPECT(0x68, gbc.readMem(0xf7b2));
        // D5 0205
        gbc.setState(0x4a72, 0xda75, 0x86d0, 0xa0b2, 0xa28b, 0x5a31, 0x0, 0x0);
        gbc.writeMem(0x4a72, { 0xd5 });
        gbc.writeMem(0xda73, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xda73, gbc.sp());
        EXPECT(0x4a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xda73));
        EXPECT(0xa2, gbc.readMem(0xda74));
        // D5 0206
        gbc.setState(0x179e, 0x8cfb, 0xfce0, 0x95b2, 0x9820, 0x3cb0, 0x1, 0x0);
        gbc.writeMem(0x179e, { 0xd5 });
        gbc.writeMem(0x8cf9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8cf9, gbc.sp());
        EXPECT(0x179f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x20, gbc.readMem(0x8cf9));
        EXPECT(0x98, gbc.readMem(0x8cfa));
        // D5 0207
        gbc.setState(0xacc8, 0x9f37, 0x7e60, 0x60e1, 0xc025, 0x662d, 0x0, 0x1);
        gbc.writeMem(0x9f35, { 0x0, 0x0 });
        gbc.writeMem(0xacc8, { 0xd5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9f35, gbc.sp());
        EXPECT(0xacc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0x9f35));
        EXPECT(0xc0, gbc.readMem(0x9f36));
        EXPECT(0xd5, gbc.readMem(0xacc8));
        // D5 020A
        gbc.setState(0x40b, 0x9678, 0xf220, 0x42c2, 0x1701, 0x700e, 0x0, 0x1);
        gbc.writeMem(0x40b, { 0xd5 });
        gbc.writeMem(0x9676, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x9676, gbc.sp());
        EXPECT(0x40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0x9676));
        EXPECT(0x17, gbc.readMem(0x9677));
        // D5 020B
        gbc.setState(0x3f58, 0x917f, 0x19a0, 0xe703, 0xa67a, 0xc68, 0x1, 0x0);
        gbc.writeMem(0x3f58, { 0xd5 });
        gbc.writeMem(0x917d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x917d, gbc.sp());
        EXPECT(0x3f59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x917d));
        EXPECT(0xa6, gbc.readMem(0x917e));
        // D5 020D
        gbc.setState(0x696c, 0xb88a, 0xb640, 0xd1f1, 0x1bda, 0x849f, 0x1, 0x0);
        gbc.writeMem(0x696c, { 0xd5 });
        gbc.writeMem(0xb888, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb888, gbc.sp());
        EXPECT(0x696d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0xb888));
        EXPECT(0x1b, gbc.readMem(0xb889));
        // D5 020F
        gbc.setState(0x915e, 0xf551, 0x3620, 0x447f, 0xd164, 0x950c, 0x0, 0x1);
        gbc.writeMem(0x915e, { 0xd5 });
        gbc.writeMem(0xf54f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf54f, gbc.sp());
        EXPECT(0x915f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x915e));
        EXPECT(0x64, gbc.readMem(0xf54f));
        EXPECT(0xd1, gbc.readMem(0xf550));
        // D5 0210
        gbc.setState(0x38bf, 0xfe5c, 0xeec0, 0xb8a4, 0xdc4a, 0xd22d, 0x0, 0x1);
        gbc.writeMem(0x38bf, { 0xd5 });
        gbc.writeMem(0xfe5a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xfe5a, gbc.sp());
        EXPECT(0x38c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4a, gbc.readMem(0xfe5a));
        EXPECT(0xdc, gbc.readMem(0xfe5b));
        // D5 0215
        gbc.setState(0x7723, 0xf403, 0xae50, 0xabb5, 0x9d03, 0xf345, 0x1, 0x0);
        gbc.writeMem(0x7723, { 0xd5 });
        gbc.writeMem(0xf401, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf401, gbc.sp());
        EXPECT(0x7724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xf401));
        EXPECT(0x9d, gbc.readMem(0xf402));
        // D5 0217
        gbc.setState(0x2aa9, 0xee25, 0xa8b0, 0x6f2, 0x9d2a, 0xfa8a, 0x0, 0x1);
        gbc.writeMem(0x2aa9, { 0xd5 });
        gbc.writeMem(0xee23, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xee23, gbc.sp());
        EXPECT(0x2aaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0xee23));
        EXPECT(0x9d, gbc.readMem(0xee24));
        // D5 0218
        gbc.setState(0xb1a0, 0x8b23, 0xb360, 0xeded, 0xf7ac, 0x3b8f, 0x0, 0x0);
        gbc.writeMem(0x8b21, { 0x0, 0x0 });
        gbc.writeMem(0xb1a0, { 0xd5 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x8b21, gbc.sp());
        EXPECT(0xb1a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0x8b21));
        EXPECT(0xf7, gbc.readMem(0x8b22));
        EXPECT(0xd5, gbc.readMem(0xb1a0));
        // D5 0219
        gbc.setState(0xda3c, 0xbf90, 0x28a0, 0x83a, 0x4407, 0xc075, 0x1, 0x1);
        gbc.writeMem(0xbf8e, { 0x0, 0x0 });
        gbc.writeMem(0xda3c, { 0xd5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbf8e, gbc.sp());
        EXPECT(0xda3d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xbf8e));
        EXPECT(0x44, gbc.readMem(0xbf8f));
        EXPECT(0xd5, gbc.readMem(0xda3c));
        // D5 021A
        gbc.setState(0xa2b9, 0x9b02, 0x1770, 0x510e, 0x20d, 0x2230, 0x1, 0x1);
        gbc.writeMem(0x9b00, { 0x0, 0x0 });
        gbc.writeMem(0xa2b9, { 0xd5 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9b00, gbc.sp());
        EXPECT(0xa2ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd, gbc.readMem(0x9b00));
        EXPECT(0x2, gbc.readMem(0x9b01));
        EXPECT(0xd5, gbc.readMem(0xa2b9));
        // D5 021D
        gbc.setState(0xe6, 0x8009, 0x72d0, 0x3da6, 0xd955, 0x888a, 0x0, 0x0);
        gbc.writeMem(0xe6, { 0xd5 });
        gbc.writeMem(0x8007, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8007, gbc.sp());
        EXPECT(0xe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x8007));
        EXPECT(0xd9, gbc.readMem(0x8008));
        // D5 021E
        gbc.setState(0x6e75, 0x9915, 0x6b50, 0xf940, 0xaf1c, 0xe882, 0x0, 0x1);
        gbc.writeMem(0x6e75, { 0xd5 });
        gbc.writeMem(0x9913, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9913, gbc.sp());
        EXPECT(0x6e76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1c, gbc.readMem(0x9913));
        EXPECT(0xaf, gbc.readMem(0x9914));
        // D5 021F
        gbc.setState(0x7edb, 0xf331, 0x4240, 0xed0e, 0x3225, 0x498a, 0x0, 0x0);
        gbc.writeMem(0x7edb, { 0xd5 });
        gbc.writeMem(0xf32f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf32f, gbc.sp());
        EXPECT(0x7edc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x25, gbc.readMem(0xf32f));
        EXPECT(0x32, gbc.readMem(0xf330));
        // D5 0220
        gbc.setState(0x3e2e, 0xf014, 0x5450, 0x14d8, 0xe07f, 0x5834, 0x1, 0x1);
        gbc.writeMem(0x3e2e, { 0xd5 });
        gbc.writeMem(0xf012, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf012, gbc.sp());
        EXPECT(0x3e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xf012));
        EXPECT(0xe0, gbc.readMem(0xf013));
        // D5 0222
        gbc.setState(0xc749, 0x9317, 0x49a0, 0x6ab8, 0x8eab, 0x21e0, 0x1, 0x1);
        gbc.writeMem(0x9315, { 0x0, 0x0 });
        gbc.writeMem(0xc749, { 0xd5 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x9315, gbc.sp());
        EXPECT(0xc74a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0x9315));
        EXPECT(0x8e, gbc.readMem(0x9316));
        EXPECT(0xd5, gbc.readMem(0xc749));
        // D5 0223
        gbc.setState(0x3a07, 0xf586, 0xd680, 0xece3, 0xb372, 0xeeae, 0x0, 0x1);
        gbc.writeMem(0x3a07, { 0xd5 });
        gbc.writeMem(0xf584, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf584, gbc.sp());
        EXPECT(0x3a08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x72, gbc.readMem(0xf584));
        EXPECT(0xb3, gbc.readMem(0xf585));
        // D5 0224
        gbc.setState(0x45e2, 0xf17c, 0xe3e0, 0xf77c, 0xb5a2, 0xd999, 0x1, 0x1);
        gbc.writeMem(0x45e2, { 0xd5 });
        gbc.writeMem(0xf17a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xf17a, gbc.sp());
        EXPECT(0x45e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa2, gbc.readMem(0xf17a));
        EXPECT(0xb5, gbc.readMem(0xf17b));
        // D5 0227
        gbc.setState(0x98be, 0xceb8, 0xa300, 0xe71e, 0x3cd5, 0x4a05, 0x1, 0x1);
        gbc.writeMem(0x98be, { 0xd5 });
        gbc.writeMem(0xceb6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xceb6, gbc.sp());
        EXPECT(0x98bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x98be));
        EXPECT(0xd5, gbc.readMem(0xceb6));
        EXPECT(0x3c, gbc.readMem(0xceb7));
        // D5 022B
        gbc.setState(0xb1ee, 0xb242, 0x9300, 0x4bf8, 0x29c5, 0x19de, 0x1, 0x1);
        gbc.writeMem(0xb1ee, { 0xd5 });
        gbc.writeMem(0xb240, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb240, gbc.sp());
        EXPECT(0xb1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb1ee));
        EXPECT(0xc5, gbc.readMem(0xb240));
        EXPECT(0x29, gbc.readMem(0xb241));
        // D5 022D
        gbc.setState(0x170, 0xff6f, 0x38b0, 0xde05, 0x4ce3, 0x798c, 0x1, 0x1);
        gbc.writeMem(0x170, { 0xd5 });
        gbc.writeMem(0xff6d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xff6d, gbc.sp());
        EXPECT(0x171, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xff6d));
        EXPECT(0x4c, gbc.readMem(0xff6e));
        // D5 0230
        gbc.setState(0xa0d9, 0xa8a9, 0x4fb0, 0x80e2, 0xfb2, 0xfb7f, 0x0, 0x1);
        gbc.writeMem(0xa0d9, { 0xd5 });
        gbc.writeMem(0xa8a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa8a7, gbc.sp());
        EXPECT(0xa0da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa0d9));
        EXPECT(0xb2, gbc.readMem(0xa8a7));
        EXPECT(0xf, gbc.readMem(0xa8a8));
        // D5 0231
        gbc.setState(0xb722, 0xab4e, 0xa690, 0x521f, 0x51e5, 0x591d, 0x1, 0x1);
        gbc.writeMem(0xab4c, { 0x0, 0x0 });
        gbc.writeMem(0xb722, { 0xd5 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xab4c, gbc.sp());
        EXPECT(0xb723, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xab4c));
        EXPECT(0x51, gbc.readMem(0xab4d));
        EXPECT(0xd5, gbc.readMem(0xb722));
        // D5 0232
        gbc.setState(0x79e2, 0x858a, 0x6970, 0x46e8, 0x4ea9, 0xa39f, 0x1, 0x0);
        gbc.writeMem(0x79e2, { 0xd5 });
        gbc.writeMem(0x8588, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x8588, gbc.sp());
        EXPECT(0x79e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x8588));
        EXPECT(0x4e, gbc.readMem(0x8589));
        // D5 0233
        gbc.setState(0xceaa, 0xe5ff, 0xeee0, 0x2de, 0xfa51, 0x567e, 0x1, 0x0);
        gbc.writeMem(0xceaa, { 0xd5 });
        gbc.writeMem(0xe5fd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe5fd, gbc.sp());
        EXPECT(0xceab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xceaa));
        EXPECT(0x51, gbc.readMem(0xe5fd));
        EXPECT(0xfa, gbc.readMem(0xe5fe));
        // D5 0234
        gbc.setState(0xe2ae, 0x84bb, 0xfe20, 0xb25a, 0x1466, 0xc41f, 0x0, 0x0);
        gbc.writeMem(0x84b9, { 0x0, 0x0 });
        gbc.writeMem(0xe2ae, { 0xd5 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x84b9, gbc.sp());
        EXPECT(0xe2af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x66, gbc.readMem(0x84b9));
        EXPECT(0x14, gbc.readMem(0x84ba));
        EXPECT(0xd5, gbc.readMem(0xe2ae));
        // D5 0235
        gbc.setState(0xcb65, 0xb027, 0x23f0, 0x668f, 0xca86, 0xaf1, 0x0, 0x1);
        gbc.writeMem(0xb025, { 0x0, 0x0 });
        gbc.writeMem(0xcb65, { 0xd5 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb025, gbc.sp());
        EXPECT(0xcb66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x86, gbc.readMem(0xb025));
        EXPECT(0xca, gbc.readMem(0xb026));
        EXPECT(0xd5, gbc.readMem(0xcb65));
        // D5 0236
        gbc.setState(0x341d, 0xd21c, 0x8a70, 0x2bc1, 0x1a61, 0xda01, 0x0, 0x1);
        gbc.writeMem(0x341d, { 0xd5 });
        gbc.writeMem(0xd21a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd21a, gbc.sp());
        EXPECT(0x341e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd21a));
        EXPECT(0x1a, gbc.readMem(0xd21b));
        // D5 0238
        gbc.setState(0xaec4, 0xab13, 0xcae0, 0x36df, 0x20ea, 0x9e90, 0x0, 0x0);
        gbc.writeMem(0xab11, { 0x0, 0x0 });
        gbc.writeMem(0xaec4, { 0xd5 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xab11, gbc.sp());
        EXPECT(0xaec5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xab11));
        EXPECT(0x20, gbc.readMem(0xab12));
        EXPECT(0xd5, gbc.readMem(0xaec4));
        // D5 023B
        gbc.setState(0x560b, 0x9332, 0xc950, 0x77a7, 0x18dc, 0xf907, 0x1, 0x1);
        gbc.writeMem(0x560b, { 0xd5 });
        gbc.writeMem(0x9330, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9330, gbc.sp());
        EXPECT(0x560c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdc, gbc.readMem(0x9330));
        EXPECT(0x18, gbc.readMem(0x9331));
        // D5 023C
        gbc.setState(0x95d4, 0x88d4, 0xe3c0, 0xfa20, 0x8863, 0x6a41, 0x1, 0x1);
        gbc.writeMem(0x88d2, { 0x0, 0x0 });
        gbc.writeMem(0x95d4, { 0xd5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x88d2, gbc.sp());
        EXPECT(0x95d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x88d2));
        EXPECT(0x88, gbc.readMem(0x88d3));
        EXPECT(0xd5, gbc.readMem(0x95d4));
        // D5 023E
        gbc.setState(0x1b7a, 0xdd92, 0x6b20, 0x899f, 0x61c4, 0x66e2, 0x0, 0x1);
        gbc.writeMem(0x1b7a, { 0xd5 });
        gbc.writeMem(0xdd90, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdd90, gbc.sp());
        EXPECT(0x1b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc4, gbc.readMem(0xdd90));
        EXPECT(0x61, gbc.readMem(0xdd91));
        // D5 0241
        gbc.setState(0xd32f, 0xbe54, 0xfb50, 0x5816, 0x31ba, 0x77f2, 0x1, 0x1);
        gbc.writeMem(0xbe52, { 0x0, 0x0 });
        gbc.writeMem(0xd32f, { 0xd5 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xbe52, gbc.sp());
        EXPECT(0xd330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xba, gbc.readMem(0xbe52));
        EXPECT(0x31, gbc.readMem(0xbe53));
        EXPECT(0xd5, gbc.readMem(0xd32f));
        // D5 0242
        gbc.setState(0xc16d, 0xae12, 0x9480, 0x48e7, 0xac07, 0xb92b, 0x0, 0x0);
        gbc.writeMem(0xae10, { 0x0, 0x0 });
        gbc.writeMem(0xc16d, { 0xd5 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xae10, gbc.sp());
        EXPECT(0xc16e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xae10));
        EXPECT(0xac, gbc.readMem(0xae11));
        EXPECT(0xd5, gbc.readMem(0xc16d));
        // D5 0243
        gbc.setState(0xc401, 0xf7c9, 0x4250, 0x5288, 0x8989, 0x59eb, 0x0, 0x1);
        gbc.writeMem(0xc401, { 0xd5 });
        gbc.writeMem(0xf7c7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf7c7, gbc.sp());
        EXPECT(0xc402, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc401));
        EXPECT(0x89, gbc.readMem(0xf7c7));
        EXPECT(0x89, gbc.readMem(0xf7c8));
        // D5 0244
        gbc.setState(0x2b30, 0x8379, 0xb200, 0x71ac, 0x6805, 0x5102, 0x1, 0x0);
        gbc.writeMem(0x2b30, { 0xd5 });
        gbc.writeMem(0x8377, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x8377, gbc.sp());
        EXPECT(0x2b31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x8377));
        EXPECT(0x68, gbc.readMem(0x8378));
        // D5 0245
        gbc.setState(0xa23c, 0xf923, 0x8f00, 0x2437, 0x5b68, 0x8d08, 0x0, 0x0);
        gbc.writeMem(0xa23c, { 0xd5 });
        gbc.writeMem(0xf921, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf921, gbc.sp());
        EXPECT(0xa23d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa23c));
        EXPECT(0x68, gbc.readMem(0xf921));
        EXPECT(0x5b, gbc.readMem(0xf922));
        // D5 0246
        gbc.setState(0x65c, 0xcbbf, 0x4b80, 0x162, 0x30b9, 0xffff, 0x1, 0x1);
        gbc.writeMem(0x65c, { 0xd5 });
        gbc.writeMem(0xcbbd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xcbbd, gbc.sp());
        EXPECT(0x65d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xcbbd));
        EXPECT(0x30, gbc.readMem(0xcbbe));
        // D5 0248
        gbc.setState(0x5137, 0xd27f, 0xb280, 0x915b, 0x2ff5, 0x8243, 0x1, 0x0);
        gbc.writeMem(0x5137, { 0xd5 });
        gbc.writeMem(0xd27d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd27d, gbc.sp());
        EXPECT(0x5138, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xd27d));
        EXPECT(0x2f, gbc.readMem(0xd27e));
        // D5 024A
        gbc.setState(0xc7ff, 0xa874, 0x8090, 0x465f, 0xd8d9, 0xff28, 0x0, 0x1);
        gbc.writeMem(0xa872, { 0x0, 0x0 });
        gbc.writeMem(0xc7ff, { 0xd5 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xa872, gbc.sp());
        EXPECT(0xc800, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xa872));
        EXPECT(0xd8, gbc.readMem(0xa873));
        EXPECT(0xd5, gbc.readMem(0xc7ff));
        // D5 024B
        gbc.setState(0x1e14, 0xc25c, 0x19d0, 0xd60e, 0x44ea, 0xb896, 0x0, 0x1);
        gbc.writeMem(0x1e14, { 0xd5 });
        gbc.writeMem(0xc25a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xc25a, gbc.sp());
        EXPECT(0x1e15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0xc25a));
        EXPECT(0x44, gbc.readMem(0xc25b));
        // D5 024D
        gbc.setState(0x868c, 0xfc0a, 0x70a0, 0x3be8, 0x381f, 0xf6fb, 0x0, 0x1);
        gbc.writeMem(0x868c, { 0xd5 });
        gbc.writeMem(0xfc08, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xfc08, gbc.sp());
        EXPECT(0x868d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x868c));
        EXPECT(0x1f, gbc.readMem(0xfc08));
        EXPECT(0x38, gbc.readMem(0xfc09));
        // D5 024E
        gbc.setState(0x5a5b, 0xe271, 0xd260, 0xd78d, 0xc7b9, 0xc7a1, 0x1, 0x1);
        gbc.writeMem(0x5a5b, { 0xd5 });
        gbc.writeMem(0xe26f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xe26f, gbc.sp());
        EXPECT(0x5a5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xe26f));
        EXPECT(0xc7, gbc.readMem(0xe270));
        // D5 024F
        gbc.setState(0x58e5, 0xe7f2, 0xc4e0, 0x7ed5, 0x8ad7, 0x48a2, 0x1, 0x1);
        gbc.writeMem(0x58e5, { 0xd5 });
        gbc.writeMem(0xe7f0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xe7f0, gbc.sp());
        EXPECT(0x58e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xe7f0));
        EXPECT(0x8a, gbc.readMem(0xe7f1));
        // D5 0251
        gbc.setState(0xe36a, 0xb2b3, 0xbd30, 0x5da4, 0x2692, 0xa186, 0x0, 0x1);
        gbc.writeMem(0xb2b1, { 0x0, 0x0 });
        gbc.writeMem(0xe36a, { 0xd5 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb2b1, gbc.sp());
        EXPECT(0xe36b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0xb2b1));
        EXPECT(0x26, gbc.readMem(0xb2b2));
        EXPECT(0xd5, gbc.readMem(0xe36a));
        // D5 0253
        gbc.setState(0xee3a, 0xe58e, 0x76a0, 0x9459, 0xaa17, 0xb148, 0x0, 0x0);
        gbc.writeMem(0xe58c, { 0x0, 0x0 });
        gbc.writeMem(0xee3a, { 0xd5 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xe58c, gbc.sp());
        EXPECT(0xee3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xe58c));
        EXPECT(0xaa, gbc.readMem(0xe58d));
        EXPECT(0xd5, gbc.readMem(0xee3a));
        // D5 0254
        gbc.setState(0x9bc3, 0x9cbd, 0xed0, 0x39e2, 0x6c95, 0x1037, 0x0, 0x1);
        gbc.writeMem(0x9bc3, { 0xd5 });
        gbc.writeMem(0x9cbb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x9cbb, gbc.sp());
        EXPECT(0x9bc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9bc3));
        EXPECT(0x95, gbc.readMem(0x9cbb));
        EXPECT(0x6c, gbc.readMem(0x9cbc));
        // D5 0257
        gbc.setState(0xa9c7, 0xa8c8, 0xe350, 0xb878, 0xd24d, 0x9eda, 0x0, 0x0);
        gbc.writeMem(0xa8c6, { 0x0, 0x0 });
        gbc.writeMem(0xa9c7, { 0xd5 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa8c6, gbc.sp());
        EXPECT(0xa9c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xa8c6));
        EXPECT(0xd2, gbc.readMem(0xa8c7));
        EXPECT(0xd5, gbc.readMem(0xa9c7));
        // D5 0258
        gbc.setState(0x4385, 0xbaea, 0x6fc0, 0xc082, 0x4358, 0x605a, 0x0, 0x0);
        gbc.writeMem(0x4385, { 0xd5 });
        gbc.writeMem(0xbae8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xbae8, gbc.sp());
        EXPECT(0x4386, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x58, gbc.readMem(0xbae8));
        EXPECT(0x43, gbc.readMem(0xbae9));
        // D5 0259
        gbc.setState(0xed39, 0x9834, 0xc400, 0xb58f, 0x8e3, 0xcd4, 0x0, 0x1);
        gbc.writeMem(0x9832, { 0x0, 0x0 });
        gbc.writeMem(0xed39, { 0xd5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x9832, gbc.sp());
        EXPECT(0xed3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x9832));
        EXPECT(0x8, gbc.readMem(0x9833));
        EXPECT(0xd5, gbc.readMem(0xed39));
        // D5 025C
        gbc.setState(0xc5ca, 0xb28a, 0x740, 0xd801, 0xe55d, 0x564, 0x0, 0x0);
        gbc.writeMem(0xb288, { 0x0, 0x0 });
        gbc.writeMem(0xc5ca, { 0xd5 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xb288, gbc.sp());
        EXPECT(0xc5cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xb288));
        EXPECT(0xe5, gbc.readMem(0xb289));
        EXPECT(0xd5, gbc.readMem(0xc5ca));
        // D5 0263
        gbc.setState(0x2bbd, 0x8148, 0x5a80, 0x4300, 0x75f0, 0x4d6, 0x1, 0x1);
        gbc.writeMem(0x2bbd, { 0xd5 });
        gbc.writeMem(0x8146, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x8146, gbc.sp());
        EXPECT(0x2bbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf0, gbc.readMem(0x8146));
        EXPECT(0x75, gbc.readMem(0x8147));
        // D5 0264
        gbc.setState(0x13f2, 0x9eba, 0x5120, 0x25cb, 0x5f9e, 0x1cd, 0x0, 0x0);
        gbc.writeMem(0x13f2, { 0xd5 });
        gbc.writeMem(0x9eb8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9eb8, gbc.sp());
        EXPECT(0x13f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9e, gbc.readMem(0x9eb8));
        EXPECT(0x5f, gbc.readMem(0x9eb9));
        // D5 0266
        gbc.setState(0x5e69, 0xcf6a, 0xdd30, 0xf97, 0xb315, 0x5f1c, 0x0, 0x0);
        gbc.writeMem(0x5e69, { 0xd5 });
        gbc.writeMem(0xcf68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xcf68, gbc.sp());
        EXPECT(0x5e6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xcf68));
        EXPECT(0xb3, gbc.readMem(0xcf69));
        // D5 0268
        gbc.setState(0x14df, 0xd0a8, 0xc7a0, 0x49bc, 0x967c, 0x2a8c, 0x0, 0x1);
        gbc.writeMem(0x14df, { 0xd5 });
        gbc.writeMem(0xd0a6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd0a6, gbc.sp());
        EXPECT(0x14e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xd0a6));
        EXPECT(0x96, gbc.readMem(0xd0a7));
        // D5 0269
        gbc.setState(0x1b82, 0xcff7, 0x1590, 0x166c, 0x2524, 0xa898, 0x1, 0x0);
        gbc.writeMem(0x1b82, { 0xd5 });
        gbc.writeMem(0xcff5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xcff5, gbc.sp());
        EXPECT(0x1b83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x24, gbc.readMem(0xcff5));
        EXPECT(0x25, gbc.readMem(0xcff6));
        // D5 026D
        gbc.setState(0xa575, 0xd0b2, 0xc800, 0xd4c6, 0x7a7c, 0xa04c, 0x0, 0x1);
        gbc.writeMem(0xa575, { 0xd5 });
        gbc.writeMem(0xd0b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd0b0, gbc.sp());
        EXPECT(0xa576, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa575));
        EXPECT(0x7c, gbc.readMem(0xd0b0));
        EXPECT(0x7a, gbc.readMem(0xd0b1));
        // D5 026E
        gbc.setState(0xbdd9, 0xd447, 0x6e70, 0x5e66, 0x9007, 0x6e06, 0x1, 0x1);
        gbc.writeMem(0xbdd9, { 0xd5 });
        gbc.writeMem(0xd445, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xd445, gbc.sp());
        EXPECT(0xbdda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xbdd9));
        EXPECT(0x7, gbc.readMem(0xd445));
        EXPECT(0x90, gbc.readMem(0xd446));
        // D5 026F
        gbc.setState(0x1fc7, 0xf77c, 0x6020, 0xb864, 0x8748, 0x53fb, 0x0, 0x1);
        gbc.writeMem(0x1fc7, { 0xd5 });
        gbc.writeMem(0xf77a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xf77a, gbc.sp());
        EXPECT(0x1fc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x48, gbc.readMem(0xf77a));
        EXPECT(0x87, gbc.readMem(0xf77b));
        // D5 0270
        gbc.setState(0x9631, 0xd653, 0x2860, 0x7b4b, 0x3bd2, 0xbd7b, 0x1, 0x1);
        gbc.writeMem(0x9631, { 0xd5 });
        gbc.writeMem(0xd651, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xd651, gbc.sp());
        EXPECT(0x9632, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9631));
        EXPECT(0xd2, gbc.readMem(0xd651));
        EXPECT(0x3b, gbc.readMem(0xd652));
        // D5 0273
        gbc.setState(0x3f64, 0xf61f, 0x8200, 0xa853, 0x163f, 0xf613, 0x1, 0x0);
        gbc.writeMem(0x3f64, { 0xd5 });
        gbc.writeMem(0xf61d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf61d, gbc.sp());
        EXPECT(0x3f65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0xf61d));
        EXPECT(0x16, gbc.readMem(0xf61e));
        // D5 0277
        gbc.setState(0x6688, 0xd763, 0xabd0, 0x6743, 0x17fc, 0x748e, 0x0, 0x1);
        gbc.writeMem(0x6688, { 0xd5 });
        gbc.writeMem(0xd761, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd761, gbc.sp());
        EXPECT(0x6689, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0xd761));
        EXPECT(0x17, gbc.readMem(0xd762));
        // D5 0279
        gbc.setState(0x849f, 0x9fb4, 0xc480, 0x55f8, 0x9b27, 0xf8d3, 0x0, 0x0);
        gbc.writeMem(0x849f, { 0xd5 });
        gbc.writeMem(0x9fb2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x9fb2, gbc.sp());
        EXPECT(0x84a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x849f));
        EXPECT(0x27, gbc.readMem(0x9fb2));
        EXPECT(0x9b, gbc.readMem(0x9fb3));
        // D5 027B
        gbc.setState(0x48f3, 0xd646, 0xa060, 0x1455, 0xa340, 0x4615, 0x0, 0x1);
        gbc.writeMem(0x48f3, { 0xd5 });
        gbc.writeMem(0xd644, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xd644, gbc.sp());
        EXPECT(0x48f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x40, gbc.readMem(0xd644));
        EXPECT(0xa3, gbc.readMem(0xd645));
        // D5 027C
        gbc.setState(0x38d0, 0xa051, 0xd6a0, 0x91c2, 0xbd9a, 0x2a55, 0x1, 0x1);
        gbc.writeMem(0x38d0, { 0xd5 });
        gbc.writeMem(0xa04f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xa04f, gbc.sp());
        EXPECT(0x38d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9a, gbc.readMem(0xa04f));
        EXPECT(0xbd, gbc.readMem(0xa050));
        // D5 027F
        gbc.setState(0xd22a, 0xcacf, 0xe090, 0xb3e3, 0x2d42, 0x2121, 0x0, 0x0);
        gbc.writeMem(0xcacd, { 0x0, 0x0 });
        gbc.writeMem(0xd22a, { 0xd5 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xcacd, gbc.sp());
        EXPECT(0xd22b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x42, gbc.readMem(0xcacd));
        EXPECT(0x2d, gbc.readMem(0xcace));
        EXPECT(0xd5, gbc.readMem(0xd22a));
        // D5 0282
        gbc.setState(0x860a, 0xbbca, 0x11b0, 0x51d8, 0x876, 0xd415, 0x0, 0x1);
        gbc.writeMem(0x860a, { 0xd5 });
        gbc.writeMem(0xbbc8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xbbc8, gbc.sp());
        EXPECT(0x860b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x860a));
        EXPECT(0x76, gbc.readMem(0xbbc8));
        EXPECT(0x8, gbc.readMem(0xbbc9));
        // D5 0283
        gbc.setState(0x6e2c, 0xc1c8, 0xb610, 0xfb3b, 0xe147, 0x2b12, 0x0, 0x0);
        gbc.writeMem(0x6e2c, { 0xd5 });
        gbc.writeMem(0xc1c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc1c6, gbc.sp());
        EXPECT(0x6e2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xc1c6));
        EXPECT(0xe1, gbc.readMem(0xc1c7));
        // D5 0286
        gbc.setState(0x4dde, 0x93e3, 0x7400, 0x5cdc, 0x875b, 0x3ea5, 0x0, 0x1);
        gbc.writeMem(0x4dde, { 0xd5 });
        gbc.writeMem(0x93e1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x93e1, gbc.sp());
        EXPECT(0x4ddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x93e1));
        EXPECT(0x87, gbc.readMem(0x93e2));
        // D5 0289
        gbc.setState(0xd2a, 0xb242, 0x5540, 0xc617, 0x2126, 0x3ac1, 0x1, 0x1);
        gbc.writeMem(0xd2a, { 0xd5 });
        gbc.writeMem(0xb240, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xb240, gbc.sp());
        EXPECT(0xd2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x26, gbc.readMem(0xb240));
        EXPECT(0x21, gbc.readMem(0xb241));
        // D5 028A
        gbc.setState(0x21ca, 0xbd8d, 0xcb20, 0xe6e2, 0x3bae, 0x1dc1, 0x1, 0x0);
        gbc.writeMem(0x21ca, { 0xd5 });
        gbc.writeMem(0xbd8b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbd8b, gbc.sp());
        EXPECT(0x21cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xbd8b));
        EXPECT(0x3b, gbc.readMem(0xbd8c));
        // D5 028C
        gbc.setState(0x5cdf, 0x915b, 0xa0b0, 0x3d9c, 0x859d, 0x31cb, 0x0, 0x0);
        gbc.writeMem(0x5cdf, { 0xd5 });
        gbc.writeMem(0x9159, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9159, gbc.sp());
        EXPECT(0x5ce0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x9159));
        EXPECT(0x85, gbc.readMem(0x915a));
        // D5 028E
        gbc.setState(0x9244, 0xcdea, 0xad10, 0x54a0, 0x4243, 0x9481, 0x1, 0x0);
        gbc.writeMem(0x9244, { 0xd5 });
        gbc.writeMem(0xcde8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xcde8, gbc.sp());
        EXPECT(0x9245, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9244));
        EXPECT(0x43, gbc.readMem(0xcde8));
        EXPECT(0x42, gbc.readMem(0xcde9));
        // D5 0290
        gbc.setState(0x96b2, 0xfb08, 0xb080, 0x1f2b, 0xea03, 0xdc60, 0x1, 0x0);
        gbc.writeMem(0x96b2, { 0xd5 });
        gbc.writeMem(0xfb06, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xfb06, gbc.sp());
        EXPECT(0x96b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x96b2));
        EXPECT(0x3, gbc.readMem(0xfb06));
        EXPECT(0xea, gbc.readMem(0xfb07));
        // D5 0292
        gbc.setState(0x119b, 0xcbf0, 0xd3d0, 0xdc, 0x7107, 0x1769, 0x0, 0x0);
        gbc.writeMem(0x119b, { 0xd5 });
        gbc.writeMem(0xcbee, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xcbee, gbc.sp());
        EXPECT(0x119c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xcbee));
        EXPECT(0x71, gbc.readMem(0xcbef));
        // D5 0293
        gbc.setState(0x693e, 0x9da2, 0x5160, 0xd6, 0xd3f4, 0x4b7a, 0x1, 0x1);
        gbc.writeMem(0x693e, { 0xd5 });
        gbc.writeMem(0x9da0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9da0, gbc.sp());
        EXPECT(0x693f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0x9da0));
        EXPECT(0xd3, gbc.readMem(0x9da1));
        // D5 0294
        gbc.setState(0x5609, 0xba8d, 0x3520, 0x9e96, 0x4de8, 0xc25c, 0x1, 0x0);
        gbc.writeMem(0x5609, { 0xd5 });
        gbc.writeMem(0xba8b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xba8b, gbc.sp());
        EXPECT(0x560a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe8, gbc.readMem(0xba8b));
        EXPECT(0x4d, gbc.readMem(0xba8c));
        // D5 0295
        gbc.setState(0xa2f4, 0x8dbf, 0xb660, 0xa4d4, 0x2097, 0xc50f, 0x0, 0x0);
        gbc.writeMem(0x8dbd, { 0x0, 0x0 });
        gbc.writeMem(0xa2f4, { 0xd5 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8dbd, gbc.sp());
        EXPECT(0xa2f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0x8dbd));
        EXPECT(0x20, gbc.readMem(0x8dbe));
        EXPECT(0xd5, gbc.readMem(0xa2f4));
        // D5 0296
        gbc.setState(0xac16, 0xea8a, 0xc9c0, 0x1359, 0x9de, 0x9204, 0x1, 0x1);
        gbc.writeMem(0xac16, { 0xd5 });
        gbc.writeMem(0xea88, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xea88, gbc.sp());
        EXPECT(0xac17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xac16));
        EXPECT(0xde, gbc.readMem(0xea88));
        EXPECT(0x9, gbc.readMem(0xea89));
        // D5 0299
        gbc.setState(0x80e2, 0x94e8, 0x9890, 0xb19, 0x7b2, 0x3660, 0x1, 0x0);
        gbc.writeMem(0x80e2, { 0xd5 });
        gbc.writeMem(0x94e6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x94e6, gbc.sp());
        EXPECT(0x80e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x80e2));
        EXPECT(0xb2, gbc.readMem(0x94e6));
        EXPECT(0x7, gbc.readMem(0x94e7));
        // D5 029B
        gbc.setState(0xe0e1, 0xe3a3, 0x46c0, 0xf609, 0x19d1, 0x214b, 0x1, 0x0);
        gbc.writeMem(0xe0e1, { 0xd5 });
        gbc.writeMem(0xe3a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xe3a1, gbc.sp());
        EXPECT(0xe0e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xe0e1));
        EXPECT(0xd1, gbc.readMem(0xe3a1));
        EXPECT(0x19, gbc.readMem(0xe3a2));
        // D5 029C
        gbc.setState(0x5e35, 0x877a, 0x9980, 0xf636, 0xbe79, 0xb8a9, 0x1, 0x1);
        gbc.writeMem(0x5e35, { 0xd5 });
        gbc.writeMem(0x8778, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8778, gbc.sp());
        EXPECT(0x5e36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x8778));
        EXPECT(0xbe, gbc.readMem(0x8779));
        // D5 029D
        gbc.setState(0xcb72, 0xc55a, 0xd4b0, 0x1a3c, 0x977c, 0x75a8, 0x1, 0x1);
        gbc.writeMem(0xc558, { 0x0, 0x0 });
        gbc.writeMem(0xcb72, { 0xd5 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc558, gbc.sp());
        EXPECT(0xcb73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7c, gbc.readMem(0xc558));
        EXPECT(0x97, gbc.readMem(0xc559));
        EXPECT(0xd5, gbc.readMem(0xcb72));
        // D5 02A3
        gbc.setState(0x9882, 0x9a07, 0xac30, 0x27a3, 0x5505, 0x52c4, 0x1, 0x0);
        gbc.writeMem(0x9882, { 0xd5 });
        gbc.writeMem(0x9a05, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x9a05, gbc.sp());
        EXPECT(0x9883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9882));
        EXPECT(0x5, gbc.readMem(0x9a05));
        EXPECT(0x55, gbc.readMem(0x9a06));
        // D5 02A4
        gbc.setState(0xc91b, 0x8c80, 0xf520, 0xc068, 0xc738, 0x1d21, 0x1, 0x0);
        gbc.writeMem(0x8c7e, { 0x0, 0x0 });
        gbc.writeMem(0xc91b, { 0xd5 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x8c7e, gbc.sp());
        EXPECT(0xc91c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x38, gbc.readMem(0x8c7e));
        EXPECT(0xc7, gbc.readMem(0x8c7f));
        EXPECT(0xd5, gbc.readMem(0xc91b));
        // D5 02A5
        gbc.setState(0xbc42, 0xd4c2, 0xab70, 0xa87e, 0x9c96, 0xaeb9, 0x0, 0x0);
        gbc.writeMem(0xbc42, { 0xd5 });
        gbc.writeMem(0xd4c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xd4c0, gbc.sp());
        EXPECT(0xbc43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xbc42));
        EXPECT(0x96, gbc.readMem(0xd4c0));
        EXPECT(0x9c, gbc.readMem(0xd4c1));
        // D5 02A9
        gbc.setState(0x2cab, 0xc3c1, 0x7930, 0x4e05, 0xd3ac, 0xa43, 0x1, 0x1);
        gbc.writeMem(0x2cab, { 0xd5 });
        gbc.writeMem(0xc3bf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc3bf, gbc.sp());
        EXPECT(0x2cac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xac, gbc.readMem(0xc3bf));
        EXPECT(0xd3, gbc.readMem(0xc3c0));
        // D5 02AB
        gbc.setState(0x1d6, 0xf39b, 0x52d0, 0xb481, 0x8c2d, 0xb0b4, 0x1, 0x0);
        gbc.writeMem(0x1d6, { 0xd5 });
        gbc.writeMem(0xf399, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf399, gbc.sp());
        EXPECT(0x1d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xf399));
        EXPECT(0x8c, gbc.readMem(0xf39a));
        // D5 02AE
        gbc.setState(0xfb5, 0x9067, 0xbfe0, 0x9325, 0xe056, 0x8823, 0x1, 0x0);
        gbc.writeMem(0xfb5, { 0xd5 });
        gbc.writeMem(0x9065, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9065, gbc.sp());
        EXPECT(0xfb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x56, gbc.readMem(0x9065));
        EXPECT(0xe0, gbc.readMem(0x9066));
        // D5 02AF
        gbc.setState(0xbcef, 0xac33, 0x2860, 0xed4a, 0x6ebe, 0x3ad3, 0x1, 0x1);
        gbc.writeMem(0xac31, { 0x0, 0x0 });
        gbc.writeMem(0xbcef, { 0xd5 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xac31, gbc.sp());
        EXPECT(0xbcf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xac31));
        EXPECT(0x6e, gbc.readMem(0xac32));
        EXPECT(0xd5, gbc.readMem(0xbcef));
        // D5 02B2
        gbc.setState(0x8620, 0xece9, 0x6070, 0xe9aa, 0xa667, 0xf4dd, 0x0, 0x0);
        gbc.writeMem(0x8620, { 0xd5 });
        gbc.writeMem(0xece7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xece7, gbc.sp());
        EXPECT(0x8621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8620));
        EXPECT(0x67, gbc.readMem(0xece7));
        EXPECT(0xa6, gbc.readMem(0xece8));
        // D5 02B3
        gbc.setState(0xcdcc, 0xe536, 0x9f40, 0x7a4b, 0x654d, 0xdc3f, 0x0, 0x0);
        gbc.writeMem(0xcdcc, { 0xd5 });
        gbc.writeMem(0xe534, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe534, gbc.sp());
        EXPECT(0xcdcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xcdcc));
        EXPECT(0x4d, gbc.readMem(0xe534));
        EXPECT(0x65, gbc.readMem(0xe535));
        // D5 02B4
        gbc.setState(0xd381, 0xa832, 0x250, 0xf408, 0x92ad, 0x37f7, 0x0, 0x0);
        gbc.writeMem(0xa830, { 0x0, 0x0 });
        gbc.writeMem(0xd381, { 0xd5 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xa830, gbc.sp());
        EXPECT(0xd382, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xa830));
        EXPECT(0x92, gbc.readMem(0xa831));
        EXPECT(0xd5, gbc.readMem(0xd381));
        // D5 02B5
        gbc.setState(0x7488, 0xee8b, 0x28f0, 0x1180, 0xfa09, 0xfaf, 0x0, 0x1);
        gbc.writeMem(0x7488, { 0xd5 });
        gbc.writeMem(0xee89, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xee89, gbc.sp());
        EXPECT(0x7489, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xee89));
        EXPECT(0xfa, gbc.readMem(0xee8a));
        // D5 02B6
        gbc.setState(0x8000, 0xfac0, 0xb090, 0x9f98, 0xd461, 0xdf04, 0x1, 0x0);
        gbc.writeMem(0x8000, { 0xd5 });
        gbc.writeMem(0xfabe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xfabe, gbc.sp());
        EXPECT(0x8001, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8000));
        EXPECT(0x61, gbc.readMem(0xfabe));
        EXPECT(0xd4, gbc.readMem(0xfabf));
        // D5 02B7
        gbc.setState(0xd1bd, 0xda25, 0xb500, 0x322b, 0x6b00, 0x72c, 0x0, 0x1);
        gbc.writeMem(0xd1bd, { 0xd5 });
        gbc.writeMem(0xda23, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xda23, gbc.sp());
        EXPECT(0xd1be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd1bd));
        EXPECT(0x0, gbc.readMem(0xda23));
        EXPECT(0x6b, gbc.readMem(0xda24));
        // D5 02BB
        gbc.setState(0x82f4, 0xa12b, 0x6570, 0x3ae7, 0x926f, 0x43c8, 0x0, 0x0);
        gbc.writeMem(0x82f4, { 0xd5 });
        gbc.writeMem(0xa129, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa129, gbc.sp());
        EXPECT(0x82f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x82f4));
        EXPECT(0x6f, gbc.readMem(0xa129));
        EXPECT(0x92, gbc.readMem(0xa12a));
        // D5 02BC
        gbc.setState(0x644, 0xdc00, 0x2e0, 0xd037, 0xb86e, 0xa34, 0x0, 0x1);
        gbc.writeMem(0x644, { 0xd5 });
        gbc.writeMem(0xdbfe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xdbfe, gbc.sp());
        EXPECT(0x645, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6e, gbc.readMem(0xdbfe));
        EXPECT(0xb8, gbc.readMem(0xdbff));
        // D5 02BE
        gbc.setState(0x6645, 0xc8ac, 0xf6c0, 0xc264, 0x7b4c, 0x31eb, 0x1, 0x0);
        gbc.writeMem(0x6645, { 0xd5 });
        gbc.writeMem(0xc8aa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc8aa, gbc.sp());
        EXPECT(0x6646, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4c, gbc.readMem(0xc8aa));
        EXPECT(0x7b, gbc.readMem(0xc8ab));
        // D5 02C1
        gbc.setState(0x926c, 0xe19b, 0x2990, 0x103f, 0xb82e, 0x4f7a, 0x1, 0x1);
        gbc.writeMem(0x926c, { 0xd5 });
        gbc.writeMem(0xe199, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe199, gbc.sp());
        EXPECT(0x926d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x926c));
        EXPECT(0x2e, gbc.readMem(0xe199));
        EXPECT(0xb8, gbc.readMem(0xe19a));
        // D5 02C3
        gbc.setState(0x38ee, 0xaedb, 0x6d60, 0x2c72, 0xb13, 0x4a53, 0x0, 0x1);
        gbc.writeMem(0x38ee, { 0xd5 });
        gbc.writeMem(0xaed9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xaed9, gbc.sp());
        EXPECT(0x38ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xaed9));
        EXPECT(0xb, gbc.readMem(0xaeda));
        // D5 02C9
        gbc.setState(0x57d, 0xf7a9, 0xe20, 0xb468, 0x8bcb, 0x6b78, 0x0, 0x0);
        gbc.writeMem(0x57d, { 0xd5 });
        gbc.writeMem(0xf7a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xf7a7, gbc.sp());
        EXPECT(0x57e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xf7a7));
        EXPECT(0x8b, gbc.readMem(0xf7a8));
        // D5 02CC
        gbc.setState(0xb744, 0xe49b, 0x2e40, 0xdff1, 0xd4f7, 0xcf77, 0x0, 0x0);
        gbc.writeMem(0xb744, { 0xd5 });
        gbc.writeMem(0xe499, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xe499, gbc.sp());
        EXPECT(0xb745, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb744));
        EXPECT(0xf7, gbc.readMem(0xe499));
        EXPECT(0xd4, gbc.readMem(0xe49a));
        // D5 02CD
        gbc.setState(0x5553, 0x8196, 0x5690, 0x6904, 0xcb6a, 0x9ff3, 0x0, 0x0);
        gbc.writeMem(0x5553, { 0xd5 });
        gbc.writeMem(0x8194, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x8194, gbc.sp());
        EXPECT(0x5554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0x8194));
        EXPECT(0xcb, gbc.readMem(0x8195));
        // D5 02D0
        gbc.setState(0x2656, 0x9f64, 0x8af0, 0xd7d4, 0xa92a, 0x73f4, 0x1, 0x0);
        gbc.writeMem(0x2656, { 0xd5 });
        gbc.writeMem(0x9f62, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x9f62, gbc.sp());
        EXPECT(0x2657, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2a, gbc.readMem(0x9f62));
        EXPECT(0xa9, gbc.readMem(0x9f63));
        // D5 02D2
        gbc.setState(0xdd71, 0x9280, 0x6470, 0xa22b, 0xd6f6, 0x684d, 0x0, 0x0);
        gbc.writeMem(0x927e, { 0x0, 0x0 });
        gbc.writeMem(0xdd71, { 0xd5 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x927e, gbc.sp());
        EXPECT(0xdd72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0x927e));
        EXPECT(0xd6, gbc.readMem(0x927f));
        EXPECT(0xd5, gbc.readMem(0xdd71));
        // D5 02D5
        gbc.setState(0x28f7, 0xe271, 0xb370, 0xb9fe, 0x99f1, 0xe253, 0x1, 0x0);
        gbc.writeMem(0x28f7, { 0xd5 });
        gbc.writeMem(0xe26f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xe26f, gbc.sp());
        EXPECT(0x28f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xe26f));
        EXPECT(0x99, gbc.readMem(0xe270));
        // D5 02D8
        gbc.setState(0xcc6d, 0xcdf6, 0x4d50, 0x1b2e, 0xc2d9, 0xc653, 0x1, 0x0);
        gbc.writeMem(0xcc6d, { 0xd5 });
        gbc.writeMem(0xcdf4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xcdf4, gbc.sp());
        EXPECT(0xcc6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xcc6d));
        EXPECT(0xd9, gbc.readMem(0xcdf4));
        EXPECT(0xc2, gbc.readMem(0xcdf5));
        // D5 02DA
        gbc.setState(0xd7c4, 0xe9fc, 0x18c0, 0xe131, 0x1ade, 0x3a5, 0x0, 0x1);
        gbc.writeMem(0xd7c4, { 0xd5 });
        gbc.writeMem(0xe9fa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe9fa, gbc.sp());
        EXPECT(0xd7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd7c4));
        EXPECT(0xde, gbc.readMem(0xe9fa));
        EXPECT(0x1a, gbc.readMem(0xe9fb));
        // D5 02DC
        gbc.setState(0x1df9, 0xc16d, 0x98c0, 0xde7f, 0xfbc6, 0xb241, 0x0, 0x0);
        gbc.writeMem(0x1df9, { 0xd5 });
        gbc.writeMem(0xc16b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc16b, gbc.sp());
        EXPECT(0x1dfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc6, gbc.readMem(0xc16b));
        EXPECT(0xfb, gbc.readMem(0xc16c));
        // D5 02DD
        gbc.setState(0x74af, 0x80d9, 0x5ed0, 0xcd59, 0xbc44, 0x7a97, 0x1, 0x1);
        gbc.writeMem(0x74af, { 0xd5 });
        gbc.writeMem(0x80d7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x80d7, gbc.sp());
        EXPECT(0x74b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x44, gbc.readMem(0x80d7));
        EXPECT(0xbc, gbc.readMem(0x80d8));
        // D5 02DF
        gbc.setState(0xa279, 0xa12e, 0xbec0, 0x8841, 0xc57a, 0x28a6, 0x1, 0x1);
        gbc.writeMem(0xa12c, { 0x0, 0x0 });
        gbc.writeMem(0xa279, { 0xd5 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa12c, gbc.sp());
        EXPECT(0xa27a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa12c));
        EXPECT(0xc5, gbc.readMem(0xa12d));
        EXPECT(0xd5, gbc.readMem(0xa279));
        // D5 02E1
        gbc.setState(0x1085, 0xc69d, 0x6430, 0x36a2, 0xe197, 0x86c4, 0x1, 0x1);
        gbc.writeMem(0x1085, { 0xd5 });
        gbc.writeMem(0xc69b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xc69b, gbc.sp());
        EXPECT(0x1086, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x97, gbc.readMem(0xc69b));
        EXPECT(0xe1, gbc.readMem(0xc69c));
        // D5 02E3
        gbc.setState(0x5292, 0x8391, 0x36f0, 0xaa97, 0xa987, 0xc0b9, 0x1, 0x1);
        gbc.writeMem(0x5292, { 0xd5 });
        gbc.writeMem(0x838f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x838f, gbc.sp());
        EXPECT(0x5293, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x838f));
        EXPECT(0xa9, gbc.readMem(0x8390));
        // D5 02E6
        gbc.setState(0x7c09, 0xeb81, 0xe730, 0x34c4, 0x6816, 0x453a, 0x1, 0x0);
        gbc.writeMem(0x7c09, { 0xd5 });
        gbc.writeMem(0xeb7f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xeb7f, gbc.sp());
        EXPECT(0x7c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x16, gbc.readMem(0xeb7f));
        EXPECT(0x68, gbc.readMem(0xeb80));
        // D5 02EA
        gbc.setState(0x3591, 0xb33e, 0xc6e0, 0xa436, 0xf49b, 0x44db, 0x0, 0x0);
        gbc.writeMem(0x3591, { 0xd5 });
        gbc.writeMem(0xb33c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xb33c, gbc.sp());
        EXPECT(0x3592, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xb33c));
        EXPECT(0xf4, gbc.readMem(0xb33d));
        // D5 02EC
        gbc.setState(0xc45f, 0xc222, 0xaf90, 0x3d8b, 0x14f6, 0xff33, 0x0, 0x1);
        gbc.writeMem(0xc220, { 0x0, 0x0 });
        gbc.writeMem(0xc45f, { 0xd5 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc220, gbc.sp());
        EXPECT(0xc460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf6, gbc.readMem(0xc220));
        EXPECT(0x14, gbc.readMem(0xc221));
        EXPECT(0xd5, gbc.readMem(0xc45f));
        // D5 02ED
        gbc.setState(0xd2c2, 0x9a50, 0x11d0, 0x1b5c, 0xa96f, 0xb060, 0x0, 0x0);
        gbc.writeMem(0x9a4e, { 0x0, 0x0 });
        gbc.writeMem(0xd2c2, { 0xd5 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9a4e, gbc.sp());
        EXPECT(0xd2c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x9a4e));
        EXPECT(0xa9, gbc.readMem(0x9a4f));
        EXPECT(0xd5, gbc.readMem(0xd2c2));
        // D5 02F1
        gbc.setState(0x3c2a, 0xd28d, 0x5020, 0xdc1f, 0x8f18, 0x6838, 0x1, 0x1);
        gbc.writeMem(0x3c2a, { 0xd5 });
        gbc.writeMem(0xd28b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xd28b, gbc.sp());
        EXPECT(0x3c2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x18, gbc.readMem(0xd28b));
        EXPECT(0x8f, gbc.readMem(0xd28c));
        // D5 02F2
        gbc.setState(0x3e87, 0xf408, 0x1520, 0x9b4a, 0x6a4, 0x9408, 0x0, 0x0);
        gbc.writeMem(0x3e87, { 0xd5 });
        gbc.writeMem(0xf406, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf406, gbc.sp());
        EXPECT(0x3e88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa4, gbc.readMem(0xf406));
        EXPECT(0x6, gbc.readMem(0xf407));
        // D5 02F3
        gbc.setState(0x4e39, 0x98f6, 0x7e60, 0x4ed8, 0x16d9, 0xb80, 0x1, 0x1);
        gbc.writeMem(0x4e39, { 0xd5 });
        gbc.writeMem(0x98f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x98f4, gbc.sp());
        EXPECT(0x4e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x98f4));
        EXPECT(0x16, gbc.readMem(0x98f5));
        // D5 02F5
        gbc.setState(0x96d3, 0xf18f, 0x5570, 0x9453, 0xf446, 0x5eda, 0x0, 0x0);
        gbc.writeMem(0x96d3, { 0xd5 });
        gbc.writeMem(0xf18d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xf18d, gbc.sp());
        EXPECT(0x96d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x96d3));
        EXPECT(0x46, gbc.readMem(0xf18d));
        EXPECT(0xf4, gbc.readMem(0xf18e));
        // D5 02F6
        gbc.setState(0x538d, 0xdf79, 0x5a30, 0x1a20, 0x2969, 0xcd6a, 0x1, 0x1);
        gbc.writeMem(0x538d, { 0xd5 });
        gbc.writeMem(0xdf77, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xdf77, gbc.sp());
        EXPECT(0x538e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xdf77));
        EXPECT(0x29, gbc.readMem(0xdf78));
        // D5 02F9
        gbc.setState(0x2a59, 0x9a07, 0xc110, 0x9f42, 0x67da, 0xa28c, 0x0, 0x1);
        gbc.writeMem(0x2a59, { 0xd5 });
        gbc.writeMem(0x9a05, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9a05, gbc.sp());
        EXPECT(0x2a5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xda, gbc.readMem(0x9a05));
        EXPECT(0x67, gbc.readMem(0x9a06));
        // D5 02FB
        gbc.setState(0xdb2f, 0x8638, 0x87a0, 0x3ba8, 0xa66f, 0xb143, 0x0, 0x1);
        gbc.writeMem(0x8636, { 0x0, 0x0 });
        gbc.writeMem(0xdb2f, { 0xd5 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8636, gbc.sp());
        EXPECT(0xdb30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x8636));
        EXPECT(0xa6, gbc.readMem(0x8637));
        EXPECT(0xd5, gbc.readMem(0xdb2f));
        // D5 02FD
        gbc.setState(0x1730, 0xc201, 0x99a0, 0x2bdb, 0xf39f, 0xf93a, 0x1, 0x1);
        gbc.writeMem(0x1730, { 0xd5 });
        gbc.writeMem(0xc1ff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc1ff, gbc.sp());
        EXPECT(0x1731, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9f, gbc.readMem(0xc1ff));
        EXPECT(0xf3, gbc.readMem(0xc200));
        // D5 02FE
        gbc.setState(0xe4bc, 0xd58f, 0x8910, 0x127, 0x3161, 0xb193, 0x1, 0x0);
        gbc.writeMem(0xd58d, { 0x0, 0x0 });
        gbc.writeMem(0xe4bc, { 0xd5 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd58d, gbc.sp());
        EXPECT(0xe4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xd58d));
        EXPECT(0x31, gbc.readMem(0xd58e));
        EXPECT(0xd5, gbc.readMem(0xe4bc));
        // D5 02FF
        gbc.setState(0xdb5e, 0xc66e, 0xe990, 0xfab8, 0xb730, 0x660b, 0x0, 0x0);
        gbc.writeMem(0xc66c, { 0x0, 0x0 });
        gbc.writeMem(0xdb5e, { 0xd5 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc66c, gbc.sp());
        EXPECT(0xdb5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x30, gbc.readMem(0xc66c));
        EXPECT(0xb7, gbc.readMem(0xc66d));
        EXPECT(0xd5, gbc.readMem(0xdb5e));
        // D5 0302
        gbc.setState(0xd2af, 0xb642, 0x84b0, 0xdda3, 0x148d, 0x7236, 0x0, 0x0);
        gbc.writeMem(0xb640, { 0x0, 0x0 });
        gbc.writeMem(0xd2af, { 0xd5 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xb640, gbc.sp());
        EXPECT(0xd2b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0xb640));
        EXPECT(0x14, gbc.readMem(0xb641));
        EXPECT(0xd5, gbc.readMem(0xd2af));
        // D5 0304
        gbc.setState(0x8190, 0x96d4, 0xb390, 0x1784, 0xc736, 0xe0f5, 0x0, 0x0);
        gbc.writeMem(0x8190, { 0xd5 });
        gbc.writeMem(0x96d2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x96d2, gbc.sp());
        EXPECT(0x8191, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8190));
        EXPECT(0x36, gbc.readMem(0x96d2));
        EXPECT(0xc7, gbc.readMem(0x96d3));
        // D5 0307
        gbc.setState(0xd84d, 0xa5d9, 0xb5a0, 0xd64b, 0x67f, 0x3231, 0x1, 0x0);
        gbc.writeMem(0xa5d7, { 0x0, 0x0 });
        gbc.writeMem(0xd84d, { 0xd5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xa5d7, gbc.sp());
        EXPECT(0xd84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7f, gbc.readMem(0xa5d7));
        EXPECT(0x6, gbc.readMem(0xa5d8));
        EXPECT(0xd5, gbc.readMem(0xd84d));
        // D5 0308
        gbc.setState(0x541e, 0xcc32, 0x960, 0xcc96, 0x8c1f, 0xfdfb, 0x1, 0x1);
        gbc.writeMem(0x541e, { 0xd5 });
        gbc.writeMem(0xcc30, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xcc30, gbc.sp());
        EXPECT(0x541f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xcc30));
        EXPECT(0x8c, gbc.readMem(0xcc31));
        // D5 0309
        gbc.setState(0xccca, 0xe831, 0x25d0, 0x831d, 0xafb, 0xa589, 0x0, 0x0);
        gbc.writeMem(0xccca, { 0xd5 });
        gbc.writeMem(0xe82f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xe82f, gbc.sp());
        EXPECT(0xcccb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xccca));
        EXPECT(0xfb, gbc.readMem(0xe82f));
        EXPECT(0xa, gbc.readMem(0xe830));
        // D5 030A
        gbc.setState(0x7453, 0xc6e5, 0x9810, 0x2bcc, 0xed87, 0x3a24, 0x1, 0x1);
        gbc.writeMem(0x7453, { 0xd5 });
        gbc.writeMem(0xc6e3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xc6e3, gbc.sp());
        EXPECT(0x7454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xc6e3));
        EXPECT(0xed, gbc.readMem(0xc6e4));
        // D5 0310
        gbc.setState(0x95c3, 0xe0c9, 0x1c10, 0xb2ce, 0xbe7b, 0xb75b, 0x1, 0x1);
        gbc.writeMem(0x95c3, { 0xd5 });
        gbc.writeMem(0xe0c7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xe0c7, gbc.sp());
        EXPECT(0x95c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x95c3));
        EXPECT(0x7b, gbc.readMem(0xe0c7));
        EXPECT(0xbe, gbc.readMem(0xe0c8));
        // D5 0312
        gbc.setState(0x7ddb, 0xa167, 0x3b70, 0x94d6, 0x5c29, 0xfc3b, 0x1, 0x0);
        gbc.writeMem(0x7ddb, { 0xd5 });
        gbc.writeMem(0xa165, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa165, gbc.sp());
        EXPECT(0x7ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xa165));
        EXPECT(0x5c, gbc.readMem(0xa166));
        // D5 0316
        gbc.setState(0xa4e3, 0xaf89, 0xd310, 0x28c1, 0x87df, 0x2d2f, 0x1, 0x1);
        gbc.writeMem(0xa4e3, { 0xd5 });
        gbc.writeMem(0xaf87, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xaf87, gbc.sp());
        EXPECT(0xa4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa4e3));
        EXPECT(0xdf, gbc.readMem(0xaf87));
        EXPECT(0x87, gbc.readMem(0xaf88));
        // D5 0317
        gbc.setState(0x1b5f, 0xa7ef, 0xf400, 0x875d, 0x1a43, 0x885a, 0x0, 0x1);
        gbc.writeMem(0x1b5f, { 0xd5 });
        gbc.writeMem(0xa7ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa7ed, gbc.sp());
        EXPECT(0x1b60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa7ed));
        EXPECT(0x1a, gbc.readMem(0xa7ee));
        // D5 031A
        gbc.setState(0x1f87, 0xf73b, 0x3cd0, 0xf914, 0x5b6b, 0x98bf, 0x0, 0x0);
        gbc.writeMem(0x1f87, { 0xd5 });
        gbc.writeMem(0xf739, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf739, gbc.sp());
        EXPECT(0x1f88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xf739));
        EXPECT(0x5b, gbc.readMem(0xf73a));
        // D5 031C
        gbc.setState(0x62f7, 0x96a2, 0x8340, 0xaf0, 0xaa60, 0xb670, 0x1, 0x1);
        gbc.writeMem(0x62f7, { 0xd5 });
        gbc.writeMem(0x96a0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x96a0, gbc.sp());
        EXPECT(0x62f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x60, gbc.readMem(0x96a0));
        EXPECT(0xaa, gbc.readMem(0x96a1));
        // D5 0320
        gbc.setState(0xd740, 0xeb00, 0x2260, 0x9807, 0xdea0, 0x47bf, 0x0, 0x0);
        gbc.writeMem(0xd740, { 0xd5 });
        gbc.writeMem(0xeafe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xeafe, gbc.sp());
        EXPECT(0xd741, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd740));
        EXPECT(0xa0, gbc.readMem(0xeafe));
        EXPECT(0xde, gbc.readMem(0xeaff));
        // D5 0325
        gbc.setState(0x2e5e, 0xab93, 0x19c0, 0x4d1e, 0xb7b0, 0x2ae9, 0x0, 0x1);
        gbc.writeMem(0x2e5e, { 0xd5 });
        gbc.writeMem(0xab91, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xab91, gbc.sp());
        EXPECT(0x2e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb0, gbc.readMem(0xab91));
        EXPECT(0xb7, gbc.readMem(0xab92));
        // D5 0326
        gbc.setState(0xbfc8, 0x985b, 0xcf70, 0xe49, 0xb3ed, 0x9d0c, 0x1, 0x0);
        gbc.writeMem(0x9859, { 0x0, 0x0 });
        gbc.writeMem(0xbfc8, { 0xd5 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9859, gbc.sp());
        EXPECT(0xbfc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x9859));
        EXPECT(0xb3, gbc.readMem(0x985a));
        EXPECT(0xd5, gbc.readMem(0xbfc8));
        // D5 0329
        gbc.setState(0x5008, 0xbeed, 0x5b60, 0x2c8f, 0x17f4, 0x9770, 0x0, 0x1);
        gbc.writeMem(0x5008, { 0xd5 });
        gbc.writeMem(0xbeeb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbeeb, gbc.sp());
        EXPECT(0x5009, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xbeeb));
        EXPECT(0x17, gbc.readMem(0xbeec));
        // D5 032A
        gbc.setState(0x5e2f, 0xcdf9, 0xf1c0, 0x9bae, 0x7222, 0xe2a0, 0x1, 0x1);
        gbc.writeMem(0x5e2f, { 0xd5 });
        gbc.writeMem(0xcdf7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcdf7, gbc.sp());
        EXPECT(0x5e30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xcdf7));
        EXPECT(0x72, gbc.readMem(0xcdf8));
        // D5 032C
        gbc.setState(0x1716, 0xb6f4, 0x3270, 0x2dbb, 0x322, 0x93e6, 0x1, 0x1);
        gbc.writeMem(0x1716, { 0xd5 });
        gbc.writeMem(0xb6f2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb6f2, gbc.sp());
        EXPECT(0x1717, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x22, gbc.readMem(0xb6f2));
        EXPECT(0x3, gbc.readMem(0xb6f3));
        // D5 032E
        gbc.setState(0xeb0, 0xd9c2, 0xaad0, 0xb80a, 0x3e2d, 0xddf3, 0x1, 0x1);
        gbc.writeMem(0xeb0, { 0xd5 });
        gbc.writeMem(0xd9c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd9c0, gbc.sp());
        EXPECT(0xeb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xd9c0));
        EXPECT(0x3e, gbc.readMem(0xd9c1));
        // D5 032F
        gbc.setState(0xc7d4, 0xd799, 0x3770, 0xae71, 0x271e, 0xc5a2, 0x0, 0x1);
        gbc.writeMem(0xc7d4, { 0xd5 });
        gbc.writeMem(0xd797, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xd797, gbc.sp());
        EXPECT(0xc7d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc7d4));
        EXPECT(0x1e, gbc.readMem(0xd797));
        EXPECT(0x27, gbc.readMem(0xd798));
        // D5 0330
        gbc.setState(0x5629, 0xaf75, 0xab80, 0xcd59, 0x8893, 0x23ce, 0x0, 0x1);
        gbc.writeMem(0x5629, { 0xd5 });
        gbc.writeMem(0xaf73, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xaf73, gbc.sp());
        EXPECT(0x562a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0xaf73));
        EXPECT(0x88, gbc.readMem(0xaf74));
        // D5 0331
        gbc.setState(0x245d, 0xfef7, 0x5310, 0xb76d, 0x41aa, 0x38c7, 0x0, 0x0);
        gbc.writeMem(0x245d, { 0xd5 });
        gbc.writeMem(0xfef5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xfef5, gbc.sp());
        EXPECT(0x245e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xfef5));
        EXPECT(0x41, gbc.readMem(0xfef6));
        // D5 0334
        gbc.setState(0x7e39, 0x82a7, 0x3130, 0x59fe, 0x861a, 0xaad0, 0x1, 0x0);
        gbc.writeMem(0x7e39, { 0xd5 });
        gbc.writeMem(0x82a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x82a5, gbc.sp());
        EXPECT(0x7e3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0x82a5));
        EXPECT(0x86, gbc.readMem(0x82a6));
        // D5 0335
        gbc.setState(0x9d2b, 0xbd76, 0x30c0, 0xe416, 0x2000, 0xbc0e, 0x1, 0x0);
        gbc.writeMem(0x9d2b, { 0xd5 });
        gbc.writeMem(0xbd74, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xbd74, gbc.sp());
        EXPECT(0x9d2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9d2b));
        EXPECT(0x0, gbc.readMem(0xbd74));
        EXPECT(0x20, gbc.readMem(0xbd75));
        // D5 0336
        gbc.setState(0xc027, 0xf075, 0x8190, 0xd1f, 0x2543, 0xead7, 0x0, 0x0);
        gbc.writeMem(0xc027, { 0xd5 });
        gbc.writeMem(0xf073, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xf073, gbc.sp());
        EXPECT(0xc028, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc027));
        EXPECT(0x43, gbc.readMem(0xf073));
        EXPECT(0x25, gbc.readMem(0xf074));
        // D5 033A
        gbc.setState(0x7c26, 0x80bf, 0x9600, 0xa359, 0x9105, 0x3ec4, 0x0, 0x0);
        gbc.writeMem(0x7c26, { 0xd5 });
        gbc.writeMem(0x80bd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x80bd, gbc.sp());
        EXPECT(0x7c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x80bd));
        EXPECT(0x91, gbc.readMem(0x80be));
        // D5 033D
        gbc.setState(0xc0e8, 0xd90e, 0xf110, 0xca7b, 0xbe64, 0x66a8, 0x0, 0x0);
        gbc.writeMem(0xc0e8, { 0xd5 });
        gbc.writeMem(0xd90c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xd90c, gbc.sp());
        EXPECT(0xc0e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xc0e8));
        EXPECT(0x64, gbc.readMem(0xd90c));
        EXPECT(0xbe, gbc.readMem(0xd90d));
        // D5 033E
        gbc.setState(0x1bf3, 0xa6e6, 0xf0c0, 0x2f29, 0xa0e6, 0x8f81, 0x1, 0x0);
        gbc.writeMem(0x1bf3, { 0xd5 });
        gbc.writeMem(0xa6e4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa6e4, gbc.sp());
        EXPECT(0x1bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe6, gbc.readMem(0xa6e4));
        EXPECT(0xa0, gbc.readMem(0xa6e5));
        // D5 0341
        gbc.setState(0x368, 0xd13d, 0x7e80, 0x27da, 0x73e1, 0xe899, 0x0, 0x1);
        gbc.writeMem(0x368, { 0xd5 });
        gbc.writeMem(0xd13b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd13b, gbc.sp());
        EXPECT(0x369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd13b));
        EXPECT(0x73, gbc.readMem(0xd13c));
        // D5 0342
        gbc.setState(0xec82, 0xd204, 0xc400, 0x57cc, 0x2780, 0x1212, 0x0, 0x1);
        gbc.writeMem(0xd202, { 0x0, 0x0 });
        gbc.writeMem(0xec82, { 0xd5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xd202, gbc.sp());
        EXPECT(0xec83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x80, gbc.readMem(0xd202));
        EXPECT(0x27, gbc.readMem(0xd203));
        EXPECT(0xd5, gbc.readMem(0xec82));
        // D5 0344
        gbc.setState(0xa50b, 0xa3dc, 0xad70, 0x1b3d, 0x67eb, 0x52f2, 0x0, 0x1);
        gbc.writeMem(0xa3da, { 0x0, 0x0 });
        gbc.writeMem(0xa50b, { 0xd5 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa3da, gbc.sp());
        EXPECT(0xa50c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa3da));
        EXPECT(0x67, gbc.readMem(0xa3db));
        EXPECT(0xd5, gbc.readMem(0xa50b));
        // D5 0345
        gbc.setState(0xe2c0, 0x870f, 0x6880, 0x96c4, 0x3a3, 0x91cb, 0x0, 0x1);
        gbc.writeMem(0x870d, { 0x0, 0x0 });
        gbc.writeMem(0xe2c0, { 0xd5 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x870d, gbc.sp());
        EXPECT(0xe2c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0x870d));
        EXPECT(0x3, gbc.readMem(0x870e));
        EXPECT(0xd5, gbc.readMem(0xe2c0));
        // D5 0349
        gbc.setState(0x3c9e, 0xf86f, 0x3ce0, 0x111, 0x8a85, 0x80f9, 0x1, 0x1);
        gbc.writeMem(0x3c9e, { 0xd5 });
        gbc.writeMem(0xf86d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xf86d, gbc.sp());
        EXPECT(0x3c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0xf86d));
        EXPECT(0x8a, gbc.readMem(0xf86e));
        // D5 034A
        gbc.setState(0x44af, 0x9e08, 0x1070, 0x7261, 0xb732, 0x9c74, 0x0, 0x1);
        gbc.writeMem(0x44af, { 0xd5 });
        gbc.writeMem(0x9e06, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x9e06, gbc.sp());
        EXPECT(0x44b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x32, gbc.readMem(0x9e06));
        EXPECT(0xb7, gbc.readMem(0x9e07));
        // D5 034E
        gbc.setState(0x87d9, 0xa14a, 0x1380, 0xac8c, 0x1309, 0x6bc8, 0x0, 0x1);
        gbc.writeMem(0x87d9, { 0xd5 });
        gbc.writeMem(0xa148, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa148, gbc.sp());
        EXPECT(0x87da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x87d9));
        EXPECT(0x9, gbc.readMem(0xa148));
        EXPECT(0x13, gbc.readMem(0xa149));
        // D5 034F
        gbc.setState(0x16e5, 0xe271, 0x6ef0, 0x425a, 0x9b7a, 0xbb57, 0x1, 0x1);
        gbc.writeMem(0x16e5, { 0xd5 });
        gbc.writeMem(0xe26f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe26f, gbc.sp());
        EXPECT(0x16e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe26f));
        EXPECT(0x9b, gbc.readMem(0xe270));
        // D5 0350
        gbc.setState(0x5d68, 0x8fee, 0xeb40, 0x55c0, 0x949b, 0x2340, 0x1, 0x1);
        gbc.writeMem(0x5d68, { 0xd5 });
        gbc.writeMem(0x8fec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x8fec, gbc.sp());
        EXPECT(0x5d69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0x8fec));
        EXPECT(0x94, gbc.readMem(0x8fed));
        // D5 0357
        gbc.setState(0x8b54, 0xed0c, 0xa7f0, 0x89d4, 0x7b77, 0x5364, 0x1, 0x1);
        gbc.writeMem(0x8b54, { 0xd5 });
        gbc.writeMem(0xed0a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xed0a, gbc.sp());
        EXPECT(0x8b55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8b54));
        EXPECT(0x77, gbc.readMem(0xed0a));
        EXPECT(0x7b, gbc.readMem(0xed0b));
        // D5 035B
        gbc.setState(0x437a, 0xe964, 0x6f40, 0x775, 0xfaae, 0x9103, 0x0, 0x1);
        gbc.writeMem(0x437a, { 0xd5 });
        gbc.writeMem(0xe962, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xe962, gbc.sp());
        EXPECT(0x437b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xae, gbc.readMem(0xe962));
        EXPECT(0xfa, gbc.readMem(0xe963));
        // D5 035D
        gbc.setState(0x528, 0xbcb0, 0x56f0, 0x5d1e, 0x8835, 0x6c1e, 0x1, 0x0);
        gbc.writeMem(0x528, { 0xd5 });
        gbc.writeMem(0xbcae, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbcae, gbc.sp());
        EXPECT(0x529, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xbcae));
        EXPECT(0x88, gbc.readMem(0xbcaf));
        // D5 035E
        gbc.setState(0x701d, 0x9ea2, 0x50, 0xf8e4, 0x8b92, 0xa41d, 0x0, 0x0);
        gbc.writeMem(0x701d, { 0xd5 });
        gbc.writeMem(0x9ea0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x9ea0, gbc.sp());
        EXPECT(0x701e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x92, gbc.readMem(0x9ea0));
        EXPECT(0x8b, gbc.readMem(0x9ea1));
        // D5 035F
        gbc.setState(0xa695, 0xc6f7, 0x9110, 0x8ae8, 0xc52f, 0x358a, 0x1, 0x0);
        gbc.writeMem(0xa695, { 0xd5 });
        gbc.writeMem(0xc6f5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xc6f5, gbc.sp());
        EXPECT(0xa696, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa695));
        EXPECT(0x2f, gbc.readMem(0xc6f5));
        EXPECT(0xc5, gbc.readMem(0xc6f6));
        // D5 0363
        gbc.setState(0x82b, 0xc9ee, 0x5df0, 0xfec8, 0x44e0, 0x1607, 0x0, 0x1);
        gbc.writeMem(0x82b, { 0xd5 });
        gbc.writeMem(0xc9ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc9ec, gbc.sp());
        EXPECT(0x82c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe0, gbc.readMem(0xc9ec));
        EXPECT(0x44, gbc.readMem(0xc9ed));
        // D5 0364
        gbc.setState(0x929, 0xafe7, 0xd730, 0x897f, 0x3627, 0x6be, 0x1, 0x1);
        gbc.writeMem(0x929, { 0xd5 });
        gbc.writeMem(0xafe5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xafe5, gbc.sp());
        EXPECT(0x92a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xafe5));
        EXPECT(0x36, gbc.readMem(0xafe6));
        // D5 0367
        gbc.setState(0x55e4, 0xfc97, 0xf840, 0xa153, 0x5653, 0x7085, 0x0, 0x1);
        gbc.writeMem(0x55e4, { 0xd5 });
        gbc.writeMem(0xfc95, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xfc95, gbc.sp());
        EXPECT(0x55e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xfc95));
        EXPECT(0x56, gbc.readMem(0xfc96));
        // D5 0368
        gbc.setState(0x342f, 0x822d, 0xeda0, 0xd0b4, 0x385, 0x6fba, 0x1, 0x1);
        gbc.writeMem(0x342f, { 0xd5 });
        gbc.writeMem(0x822b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x822b, gbc.sp());
        EXPECT(0x3430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x85, gbc.readMem(0x822b));
        EXPECT(0x3, gbc.readMem(0x822c));
        // D5 036F
        gbc.setState(0x48d9, 0xb64e, 0xb150, 0x5e8, 0x96aa, 0x735c, 0x0, 0x1);
        gbc.writeMem(0x48d9, { 0xd5 });
        gbc.writeMem(0xb64c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb64c, gbc.sp());
        EXPECT(0x48da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaa, gbc.readMem(0xb64c));
        EXPECT(0x96, gbc.readMem(0xb64d));
        // D5 0371
        gbc.setState(0x269f, 0xb879, 0xc910, 0xb250, 0x29, 0xbe60, 0x1, 0x0);
        gbc.writeMem(0x269f, { 0xd5 });
        gbc.writeMem(0xb877, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xb877, gbc.sp());
        EXPECT(0x26a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xb877));
        EXPECT(0x0, gbc.readMem(0xb878));
        // D5 0375
        gbc.setState(0x68d8, 0xbc80, 0xe970, 0x2e60, 0xbdc5, 0x5454, 0x1, 0x1);
        gbc.writeMem(0x68d8, { 0xd5 });
        gbc.writeMem(0xbc7e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xbc7e, gbc.sp());
        EXPECT(0x68d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbc7e));
        EXPECT(0xbd, gbc.readMem(0xbc7f));
        // D5 037A
        gbc.setState(0xa927, 0xe5ef, 0xae40, 0xb4b3, 0x4eab, 0xa8db, 0x0, 0x0);
        gbc.writeMem(0xa927, { 0xd5 });
        gbc.writeMem(0xe5ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xe5ed, gbc.sp());
        EXPECT(0xa928, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa927));
        EXPECT(0xab, gbc.readMem(0xe5ed));
        EXPECT(0x4e, gbc.readMem(0xe5ee));
        // D5 0384
        gbc.setState(0xb5de, 0xcec2, 0x33a0, 0xb3b6, 0xda95, 0xb74e, 0x1, 0x1);
        gbc.writeMem(0xb5de, { 0xd5 });
        gbc.writeMem(0xcec0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xcec0, gbc.sp());
        EXPECT(0xb5df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb5de));
        EXPECT(0x95, gbc.readMem(0xcec0));
        EXPECT(0xda, gbc.readMem(0xcec1));
        // D5 038A
        gbc.setState(0xc006, 0xbe21, 0xe630, 0x7171, 0xdbe, 0xe756, 0x0, 0x1);
        gbc.writeMem(0xbe1f, { 0x0, 0x0 });
        gbc.writeMem(0xc006, { 0xd5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbe1f, gbc.sp());
        EXPECT(0xc007, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbe, gbc.readMem(0xbe1f));
        EXPECT(0xd, gbc.readMem(0xbe20));
        EXPECT(0xd5, gbc.readMem(0xc006));
        // D5 038B
        gbc.setState(0x79bc, 0xa8bf, 0xe770, 0x5b74, 0x49c8, 0x36ec, 0x1, 0x1);
        gbc.writeMem(0x79bc, { 0xd5 });
        gbc.writeMem(0xa8bd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xa8bd, gbc.sp());
        EXPECT(0x79bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc8, gbc.readMem(0xa8bd));
        EXPECT(0x49, gbc.readMem(0xa8be));
        // D5 038C
        gbc.setState(0x4ac8, 0x901d, 0x7cc0, 0x68c2, 0x8667, 0x8e5b, 0x1, 0x0);
        gbc.writeMem(0x4ac8, { 0xd5 });
        gbc.writeMem(0x901b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x901b, gbc.sp());
        EXPECT(0x4ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x901b));
        EXPECT(0x86, gbc.readMem(0x901c));
        // D5 038D
        gbc.setState(0xaf2f, 0x8928, 0xece0, 0xb04b, 0x41fa, 0x876a, 0x0, 0x0);
        gbc.writeMem(0x8926, { 0x0, 0x0 });
        gbc.writeMem(0xaf2f, { 0xd5 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x8926, gbc.sp());
        EXPECT(0xaf30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfa, gbc.readMem(0x8926));
        EXPECT(0x41, gbc.readMem(0x8927));
        EXPECT(0xd5, gbc.readMem(0xaf2f));
        // D5 0391
        gbc.setState(0xbb94, 0x87be, 0x37b0, 0xa305, 0x5afc, 0xff40, 0x1, 0x1);
        gbc.writeMem(0x87bc, { 0x0, 0x0 });
        gbc.writeMem(0xbb94, { 0xd5 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x87bc, gbc.sp());
        EXPECT(0xbb95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfc, gbc.readMem(0x87bc));
        EXPECT(0x5a, gbc.readMem(0x87bd));
        EXPECT(0xd5, gbc.readMem(0xbb94));
        // D5 0392
        gbc.setState(0x5d54, 0xb01c, 0xead0, 0x139, 0x16ee, 0x37b5, 0x0, 0x0);
        gbc.writeMem(0x5d54, { 0xd5 });
        gbc.writeMem(0xb01a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb01a, gbc.sp());
        EXPECT(0x5d55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0xb01a));
        EXPECT(0x16, gbc.readMem(0xb01b));
        // D5 0393
        gbc.setState(0xb6ef, 0x979e, 0xf130, 0xb0c3, 0x4703, 0xf3b0, 0x0, 0x1);
        gbc.writeMem(0x979c, { 0x0, 0x0 });
        gbc.writeMem(0xb6ef, { 0xd5 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x979c, gbc.sp());
        EXPECT(0xb6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0x979c));
        EXPECT(0x47, gbc.readMem(0x979d));
        EXPECT(0xd5, gbc.readMem(0xb6ef));
        // D5 039A
        gbc.setState(0x35, 0xecd2, 0x9e10, 0xe921, 0x88f4, 0xdfcf, 0x0, 0x1);
        gbc.writeMem(0x35, { 0xd5 });
        gbc.writeMem(0xecd0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xecd0, gbc.sp());
        EXPECT(0x36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf4, gbc.readMem(0xecd0));
        EXPECT(0x88, gbc.readMem(0xecd1));
        // D5 039F
        gbc.setState(0x4cff, 0xc496, 0xbdd0, 0x83db, 0xa669, 0xbb0e, 0x1, 0x1);
        gbc.writeMem(0x4cff, { 0xd5 });
        gbc.writeMem(0xc494, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xc494, gbc.sp());
        EXPECT(0x4d00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xc494));
        EXPECT(0xa6, gbc.readMem(0xc495));
        // D5 03A1
        gbc.setState(0xd7b5, 0xd215, 0x7e50, 0xba10, 0xe98c, 0x4ca9, 0x0, 0x0);
        gbc.writeMem(0xd213, { 0x0, 0x0 });
        gbc.writeMem(0xd7b5, { 0xd5 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xd213, gbc.sp());
        EXPECT(0xd7b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd213));
        EXPECT(0xe9, gbc.readMem(0xd214));
        EXPECT(0xd5, gbc.readMem(0xd7b5));
        // D5 03A3
        gbc.setState(0xc2a9, 0x8cca, 0x2990, 0x9311, 0x86c9, 0x2657, 0x1, 0x1);
        gbc.writeMem(0x8cc8, { 0x0, 0x0 });
        gbc.writeMem(0xc2a9, { 0xd5 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x8cc8, gbc.sp());
        EXPECT(0xc2aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x8cc8));
        EXPECT(0x86, gbc.readMem(0x8cc9));
        EXPECT(0xd5, gbc.readMem(0xc2a9));
        // D5 03A5
        gbc.setState(0x5c30, 0xe2c5, 0x1730, 0xba8e, 0xa01a, 0x1a0f, 0x1, 0x1);
        gbc.writeMem(0x5c30, { 0xd5 });
        gbc.writeMem(0xe2c3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xe2c3, gbc.sp());
        EXPECT(0x5c31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1a, gbc.readMem(0xe2c3));
        EXPECT(0xa0, gbc.readMem(0xe2c4));
        // D5 03AA
        gbc.setState(0x3467, 0xc416, 0x7f60, 0xde1e, 0xce06, 0x2108, 0x1, 0x1);
        gbc.writeMem(0x3467, { 0xd5 });
        gbc.writeMem(0xc414, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xc414, gbc.sp());
        EXPECT(0x3468, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6, gbc.readMem(0xc414));
        EXPECT(0xce, gbc.readMem(0xc415));
        // D5 03AC
        gbc.setState(0xe47, 0xa893, 0x77e0, 0xc0df, 0x52f2, 0xc4e5, 0x1, 0x0);
        gbc.writeMem(0xe47, { 0xd5 });
        gbc.writeMem(0xa891, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xa891, gbc.sp());
        EXPECT(0xe48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf2, gbc.readMem(0xa891));
        EXPECT(0x52, gbc.readMem(0xa892));
        // D5 03AD
        gbc.setState(0xa6d8, 0xc931, 0xbb70, 0x5831, 0xd833, 0x969f, 0x1, 0x0);
        gbc.writeMem(0xa6d8, { 0xd5 });
        gbc.writeMem(0xc92f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc92f, gbc.sp());
        EXPECT(0xa6d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa6d8));
        EXPECT(0x33, gbc.readMem(0xc92f));
        EXPECT(0xd8, gbc.readMem(0xc930));
        // D5 03AE
        gbc.setState(0xabc1, 0xf493, 0x9df0, 0x77dd, 0x5d10, 0x9022, 0x0, 0x1);
        gbc.writeMem(0xabc1, { 0xd5 });
        gbc.writeMem(0xf491, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf491, gbc.sp());
        EXPECT(0xabc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xabc1));
        EXPECT(0x10, gbc.readMem(0xf491));
        EXPECT(0x5d, gbc.readMem(0xf492));
        // D5 03B4
        gbc.setState(0x11f9, 0x95a7, 0x7860, 0x9f88, 0x7c43, 0x6b0, 0x1, 0x1);
        gbc.writeMem(0x11f9, { 0xd5 });
        gbc.writeMem(0x95a5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x95a5, gbc.sp());
        EXPECT(0x11fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x95a5));
        EXPECT(0x7c, gbc.readMem(0x95a6));
        // D5 03B7
        gbc.setState(0x7800, 0xf4be, 0xd200, 0x115, 0x3573, 0x1623, 0x0, 0x1);
        gbc.writeMem(0x7800, { 0xd5 });
        gbc.writeMem(0xf4bc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf4bc, gbc.sp());
        EXPECT(0x7801, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0xf4bc));
        EXPECT(0x35, gbc.readMem(0xf4bd));
        // D5 03B8
        gbc.setState(0x2b1e, 0xc421, 0x6d80, 0x8824, 0x99cc, 0x68f7, 0x1, 0x1);
        gbc.writeMem(0x2b1e, { 0xd5 });
        gbc.writeMem(0xc41f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc41f, gbc.sp());
        EXPECT(0x2b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcc, gbc.readMem(0xc41f));
        EXPECT(0x99, gbc.readMem(0xc420));
        // D5 03B9
        gbc.setState(0xd64c, 0x8b23, 0x6df0, 0x96fa, 0x80f8, 0x66cb, 0x0, 0x0);
        gbc.writeMem(0x8b21, { 0x0, 0x0 });
        gbc.writeMem(0xd64c, { 0xd5 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x8b21, gbc.sp());
        EXPECT(0xd64d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf8, gbc.readMem(0x8b21));
        EXPECT(0x80, gbc.readMem(0x8b22));
        EXPECT(0xd5, gbc.readMem(0xd64c));
        // D5 03BA
        gbc.setState(0x71ea, 0xf3ae, 0x7f60, 0x6192, 0x441d, 0x3d03, 0x1, 0x0);
        gbc.writeMem(0x71ea, { 0xd5 });
        gbc.writeMem(0xf3ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf3ac, gbc.sp());
        EXPECT(0x71eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0xf3ac));
        EXPECT(0x44, gbc.readMem(0xf3ad));
        // D5 03BB
        gbc.setState(0xe1ce, 0x90bd, 0x1d60, 0x26cb, 0x948d, 0xb2ca, 0x0, 0x1);
        gbc.writeMem(0x90bb, { 0x0, 0x0 });
        gbc.writeMem(0xe1ce, { 0xd5 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x90bb, gbc.sp());
        EXPECT(0xe1cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8d, gbc.readMem(0x90bb));
        EXPECT(0x94, gbc.readMem(0x90bc));
        EXPECT(0xd5, gbc.readMem(0xe1ce));
        // D5 03BF
        gbc.setState(0xe367, 0x8088, 0xa030, 0x6264, 0xe6c5, 0x7f89, 0x1, 0x0);
        gbc.writeMem(0x8086, { 0x0, 0x0 });
        gbc.writeMem(0xe367, { 0xd5 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8086, gbc.sp());
        EXPECT(0xe368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0x8086));
        EXPECT(0xe6, gbc.readMem(0x8087));
        EXPECT(0xd5, gbc.readMem(0xe367));
        // D5 03C2
        gbc.setState(0x9d7a, 0xcfd0, 0x130, 0x8a60, 0x9bd0, 0x5fae, 0x0, 0x0);
        gbc.writeMem(0x9d7a, { 0xd5 });
        gbc.writeMem(0xcfce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xcfce, gbc.sp());
        EXPECT(0x9d7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x9d7a));
        EXPECT(0xd0, gbc.readMem(0xcfce));
        EXPECT(0x9b, gbc.readMem(0xcfcf));
        // D5 03C4
        gbc.setState(0xa0f, 0xb04f, 0xb940, 0x7880, 0xeb9, 0xd7a1, 0x1, 0x0);
        gbc.writeMem(0xa0f, { 0xd5 });
        gbc.writeMem(0xb04d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb04d, gbc.sp());
        EXPECT(0xa10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb04d));
        EXPECT(0xe, gbc.readMem(0xb04e));
        // D5 03C5
        gbc.setState(0x6de8, 0xa18a, 0x1c40, 0x698b, 0x7e34, 0x4651, 0x0, 0x0);
        gbc.writeMem(0x6de8, { 0xd5 });
        gbc.writeMem(0xa188, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa188, gbc.sp());
        EXPECT(0x6de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x34, gbc.readMem(0xa188));
        EXPECT(0x7e, gbc.readMem(0xa189));
        // D5 03C7
        gbc.setState(0x622, 0xfb30, 0xede0, 0x2fd0, 0x25d9, 0x8e61, 0x0, 0x1);
        gbc.writeMem(0x622, { 0xd5 });
        gbc.writeMem(0xfb2e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xfb2e, gbc.sp());
        EXPECT(0x623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xfb2e));
        EXPECT(0x25, gbc.readMem(0xfb2f));
        // D5 03CA
        gbc.setState(0xb55e, 0xb7fe, 0x5050, 0xa161, 0xc41c, 0x92e0, 0x1, 0x0);
        gbc.writeMem(0xb55e, { 0xd5 });
        gbc.writeMem(0xb7fc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xb7fc, gbc.sp());
        EXPECT(0xb55f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xb55e));
        EXPECT(0x1c, gbc.readMem(0xb7fc));
        EXPECT(0xc4, gbc.readMem(0xb7fd));
        // D5 03D0
        gbc.setState(0xa2cf, 0xf5a3, 0xcae0, 0xa67e, 0x7194, 0xbe9c, 0x1, 0x1);
        gbc.writeMem(0xa2cf, { 0xd5 });
        gbc.writeMem(0xf5a1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xf5a1, gbc.sp());
        EXPECT(0xa2d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xa2cf));
        EXPECT(0x94, gbc.readMem(0xf5a1));
        EXPECT(0x71, gbc.readMem(0xf5a2));
        // D5 03D2
        gbc.setState(0x790b, 0xa0fd, 0x61c0, 0x7679, 0xd77e, 0x9264, 0x1, 0x0);
        gbc.writeMem(0x790b, { 0xd5 });
        gbc.writeMem(0xa0fb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xa0fb, gbc.sp());
        EXPECT(0x790c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7e, gbc.readMem(0xa0fb));
        EXPECT(0xd7, gbc.readMem(0xa0fc));
        // D5 03D4
        gbc.setState(0x278e, 0xb8b1, 0x9c00, 0x4759, 0xf19d, 0x333a, 0x1, 0x0);
        gbc.writeMem(0x278e, { 0xd5 });
        gbc.writeMem(0xb8af, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xb8af, gbc.sp());
        EXPECT(0x278f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xb8af));
        EXPECT(0xf1, gbc.readMem(0xb8b0));
        // D5 03D6
        gbc.setState(0xd6a9, 0xe984, 0xfc20, 0x9cf5, 0xae5d, 0x5ee9, 0x0, 0x0);
        gbc.writeMem(0xd6a9, { 0xd5 });
        gbc.writeMem(0xe982, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe982, gbc.sp());
        EXPECT(0xd6aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xd6a9));
        EXPECT(0x5d, gbc.readMem(0xe982));
        EXPECT(0xae, gbc.readMem(0xe983));
        // D5 03D7
        gbc.setState(0x1a25, 0xce2d, 0xd320, 0x3b7c, 0x6e6a, 0xdc94, 0x1, 0x0);
        gbc.writeMem(0x1a25, { 0xd5 });
        gbc.writeMem(0xce2b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xce2b, gbc.sp());
        EXPECT(0x1a26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6a, gbc.readMem(0xce2b));
        EXPECT(0x6e, gbc.readMem(0xce2c));
        // D5 03D8
        gbc.setState(0xe7fb, 0xc87a, 0x1510, 0xc6ce, 0xa002, 0x472f, 0x0, 0x0);
        gbc.writeMem(0xc878, { 0x0, 0x0 });
        gbc.writeMem(0xe7fb, { 0xd5 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xc878, gbc.sp());
        EXPECT(0xe7fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2, gbc.readMem(0xc878));
        EXPECT(0xa0, gbc.readMem(0xc879));
        EXPECT(0xd5, gbc.readMem(0xe7fb));
        // D5 03DC
        gbc.setState(0x4903, 0xb056, 0xf4e0, 0x8f0f, 0xdf27, 0xfa6c, 0x1, 0x1);
        gbc.writeMem(0x4903, { 0xd5 });
        gbc.writeMem(0xb054, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xb054, gbc.sp());
        EXPECT(0x4904, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xb054));
        EXPECT(0xdf, gbc.readMem(0xb055));
        // D5 03DE
        gbc.setState(0x5336, 0x9a3d, 0xdb20, 0x7287, 0xc970, 0xa192, 0x0, 0x1);
        gbc.writeMem(0x5336, { 0xd5 });
        gbc.writeMem(0x9a3b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9a3b, gbc.sp());
        EXPECT(0x5337, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x70, gbc.readMem(0x9a3b));
        EXPECT(0xc9, gbc.readMem(0x9a3c));
        // D5 03DF
        gbc.setState(0x2864, 0x8aff, 0x5430, 0xb7b8, 0x3cea, 0x42c1, 0x1, 0x0);
        gbc.writeMem(0x2864, { 0xd5 });
        gbc.writeMem(0x8afd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x8afd, gbc.sp());
        EXPECT(0x2865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xea, gbc.readMem(0x8afd));
        EXPECT(0x3c, gbc.readMem(0x8afe));
        // D5 03E2
        gbc.setState(0x665e, 0x9066, 0xc450, 0x18e8, 0xf04, 0x6a27, 0x0, 0x1);
        gbc.writeMem(0x665e, { 0xd5 });
        gbc.writeMem(0x9064, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9064, gbc.sp());
        EXPECT(0x665f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4, gbc.readMem(0x9064));
        EXPECT(0xf, gbc.readMem(0x9065));
        // D5 03E7
        gbc.setState(0x40d7, 0x8123, 0x1a20, 0xb108, 0xa0ee, 0x8591, 0x1, 0x1);
        gbc.writeMem(0x40d7, { 0xd5 });
        gbc.writeMem(0x8121, { 0x0, 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x8121, gbc.sp());
        EXPECT(0x40d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xee, gbc.readMem(0x8121));
        EXPECT(0xa0, gbc.readMem(0x8122));
    }
