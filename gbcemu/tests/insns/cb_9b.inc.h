    TEST(gbcemu, opcode_cb_9b) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 9B 0000
        gbc.setState(0x7d03, 0x92f, 0x6fd0, 0xc984, 0x41f9, 0x83c6, 0x1, 0x1);
        gbc.writeMem(0x7d03, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x92f, gbc.sp());
        EXPECT(0x7d05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0001
        gbc.setState(0x4779, 0xf34c, 0x89e0, 0x66db, 0xbc48, 0xc00d, 0x1, 0x1);
        gbc.writeMem(0x4779, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xf34c, gbc.sp());
        EXPECT(0x477b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0002
        gbc.setState(0x5381, 0x6859, 0x1b30, 0x56cd, 0x6c15, 0x5e6f, 0x0, 0x0);
        gbc.writeMem(0x5381, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6859, gbc.sp());
        EXPECT(0x5383, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0003
        gbc.setState(0xca4, 0x65ec, 0xec0, 0x8af9, 0x952b, 0xb9aa, 0x0, 0x0);
        gbc.writeMem(0xca4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x65ec, gbc.sp());
        EXPECT(0xca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0004
        gbc.setState(0xb250, 0xa0a4, 0xd390, 0x4886, 0x9865, 0x2578, 0x0, 0x1);
        gbc.writeMem(0xb250, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa0a4, gbc.sp());
        EXPECT(0xb252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb250));
        EXPECT(0x9b, gbc.readMem(0xb251));
        // CB 9B 0005
        gbc.setState(0xc34f, 0xd61b, 0x74b0, 0xb1ec, 0x3485, 0x823c, 0x0, 0x1);
        gbc.writeMem(0xc34f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd61b, gbc.sp());
        EXPECT(0xc351, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc34f));
        EXPECT(0x9b, gbc.readMem(0xc350));
        // CB 9B 0006
        gbc.setState(0xb22a, 0xbab7, 0x77a0, 0x7d2d, 0x4c4, 0xc619, 0x0, 0x0);
        gbc.writeMem(0xb22a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xbab7, gbc.sp());
        EXPECT(0xb22c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb22a));
        EXPECT(0x9b, gbc.readMem(0xb22b));
        // CB 9B 0007
        gbc.setState(0xd8e9, 0x2f4c, 0x2880, 0x7a41, 0x7f6e, 0x82c1, 0x1, 0x1);
        gbc.writeMem(0xd8e9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2f4c, gbc.sp());
        EXPECT(0xd8eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e9));
        EXPECT(0x9b, gbc.readMem(0xd8ea));
        // CB 9B 0008
        gbc.setState(0x335a, 0xc03f, 0x4ac0, 0x9194, 0xa4b7, 0x9abf, 0x1, 0x0);
        gbc.writeMem(0x335a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc03f, gbc.sp());
        EXPECT(0x335c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0009
        gbc.setState(0x3f15, 0xee85, 0xc010, 0x9444, 0xbfb5, 0xd52d, 0x0, 0x0);
        gbc.writeMem(0x3f15, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xee85, gbc.sp());
        EXPECT(0x3f17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 000B
        gbc.setState(0xeb5d, 0x944c, 0xafd0, 0xdf6a, 0x7687, 0xa1a9, 0x1, 0x0);
        gbc.writeMem(0xeb5d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x944c, gbc.sp());
        EXPECT(0xeb5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb5d));
        EXPECT(0x9b, gbc.readMem(0xeb5e));
        // CB 9B 000C
        gbc.setState(0x9c2c, 0x9b2b, 0x89f0, 0xfca4, 0xdebf, 0xf626, 0x1, 0x0);
        gbc.writeMem(0x9c2c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9b2b, gbc.sp());
        EXPECT(0x9c2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c2c));
        EXPECT(0x9b, gbc.readMem(0x9c2d));
        // CB 9B 000D
        gbc.setState(0x5350, 0x85eb, 0x8030, 0xf2ba, 0xc705, 0x6a98, 0x1, 0x0);
        gbc.writeMem(0x5350, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x85eb, gbc.sp());
        EXPECT(0x5352, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 000E
        gbc.setState(0xb6e1, 0xc557, 0x5930, 0x4e1e, 0x63f0, 0xfb56, 0x0, 0x1);
        gbc.writeMem(0xb6e1, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc557, gbc.sp());
        EXPECT(0xb6e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6e1));
        EXPECT(0x9b, gbc.readMem(0xb6e2));
        // CB 9B 000F
        gbc.setState(0x1813, 0xd8d7, 0xcae0, 0x9984, 0xc1a2, 0x343d, 0x1, 0x1);
        gbc.writeMem(0x1813, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd8d7, gbc.sp());
        EXPECT(0x1815, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0010
        gbc.setState(0x4a0b, 0x4f18, 0x2300, 0xc113, 0xf9b7, 0x126b, 0x1, 0x0);
        gbc.writeMem(0x4a0b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4f18, gbc.sp());
        EXPECT(0x4a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0011
        gbc.setState(0x60cb, 0x5af3, 0xc7c0, 0xa39f, 0xde39, 0x3029, 0x0, 0x0);
        gbc.writeMem(0x60cb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5af3, gbc.sp());
        EXPECT(0x60cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0012
        gbc.setState(0x9c0e, 0xe44a, 0x1110, 0xd5bc, 0xb032, 0x5bb0, 0x1, 0x0);
        gbc.writeMem(0x9c0e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe44a, gbc.sp());
        EXPECT(0x9c10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c0e));
        EXPECT(0x9b, gbc.readMem(0x9c0f));
        // CB 9B 0014
        gbc.setState(0x6b32, 0x7a8, 0xcf50, 0xc5d2, 0x3f8d, 0xb278, 0x0, 0x0);
        gbc.writeMem(0x6b32, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x7a8, gbc.sp());
        EXPECT(0x6b34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0015
        gbc.setState(0x5b1b, 0x25ac, 0x3cd0, 0xfa18, 0x469, 0x480, 0x0, 0x1);
        gbc.writeMem(0x5b1b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x25ac, gbc.sp());
        EXPECT(0x5b1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0016
        gbc.setState(0x67b1, 0x75f0, 0x1aa0, 0x3485, 0x11b, 0x22a9, 0x1, 0x1);
        gbc.writeMem(0x67b1, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x75f0, gbc.sp());
        EXPECT(0x67b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0017
        gbc.setState(0xcbe6, 0x630b, 0x9c20, 0xd745, 0x3a4d, 0x2f35, 0x1, 0x1);
        gbc.writeMem(0xcbe6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x630b, gbc.sp());
        EXPECT(0xcbe8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbe6));
        EXPECT(0x9b, gbc.readMem(0xcbe7));
        // CB 9B 0019
        gbc.setState(0xdedf, 0xc3bb, 0x11f0, 0xed2, 0xd937, 0xf679, 0x0, 0x0);
        gbc.writeMem(0xdedf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc3bb, gbc.sp());
        EXPECT(0xdee1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdedf));
        EXPECT(0x9b, gbc.readMem(0xdee0));
        // CB 9B 001A
        gbc.setState(0xa42a, 0xdbc6, 0xcd40, 0x4612, 0x5af7, 0x9a0c, 0x1, 0x0);
        gbc.writeMem(0xa42a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xdbc6, gbc.sp());
        EXPECT(0xa42c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42a));
        EXPECT(0x9b, gbc.readMem(0xa42b));
        // CB 9B 001B
        gbc.setState(0x7916, 0xd075, 0x9bf0, 0x82ae, 0xd8a4, 0xad86, 0x1, 0x0);
        gbc.writeMem(0x7916, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd075, gbc.sp());
        EXPECT(0x7918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 001C
        gbc.setState(0x70fd, 0x1ebe, 0x83e0, 0xa059, 0x74c, 0xcf16, 0x1, 0x0);
        gbc.writeMem(0x70fd, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x1ebe, gbc.sp());
        EXPECT(0x70ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 001D
        gbc.setState(0x848f, 0x5216, 0xc1d0, 0xb04b, 0x3a23, 0xf9e1, 0x1, 0x0);
        gbc.writeMem(0x848f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5216, gbc.sp());
        EXPECT(0x8491, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848f));
        EXPECT(0x9b, gbc.readMem(0x8490));
        // CB 9B 001E
        gbc.setState(0x77fb, 0x5d80, 0x70, 0x49c0, 0xd9da, 0x6807, 0x0, 0x0);
        gbc.writeMem(0x77fb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x5d80, gbc.sp());
        EXPECT(0x77fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 001F
        gbc.setState(0x392, 0x3dc2, 0x2690, 0x7bd2, 0xa42, 0x8867, 0x0, 0x1);
        gbc.writeMem(0x392, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3dc2, gbc.sp());
        EXPECT(0x394, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0020
        gbc.setState(0xacb2, 0xc8e2, 0x3750, 0x51ed, 0x3395, 0x5607, 0x1, 0x0);
        gbc.writeMem(0xacb2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc8e2, gbc.sp());
        EXPECT(0xacb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacb2));
        EXPECT(0x9b, gbc.readMem(0xacb3));
        // CB 9B 0021
        gbc.setState(0x8477, 0x4be1, 0x3900, 0x6fba, 0xcefc, 0x165c, 0x1, 0x1);
        gbc.writeMem(0x8477, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x4be1, gbc.sp());
        EXPECT(0x8479, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8477));
        EXPECT(0x9b, gbc.readMem(0x8478));
        // CB 9B 0022
        gbc.setState(0x50e8, 0x97a6, 0x5600, 0x5580, 0xfb74, 0xdde2, 0x1, 0x1);
        gbc.writeMem(0x50e8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x97a6, gbc.sp());
        EXPECT(0x50ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0023
        gbc.setState(0x7752, 0x4670, 0x9a30, 0x71c4, 0xe6ed, 0x53db, 0x0, 0x0);
        gbc.writeMem(0x7752, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x4670, gbc.sp());
        EXPECT(0x7754, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0024
        gbc.setState(0xb61b, 0x660a, 0x6e10, 0xbdf9, 0xcd3a, 0x1b81, 0x1, 0x1);
        gbc.writeMem(0xb61b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x660a, gbc.sp());
        EXPECT(0xb61d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb61b));
        EXPECT(0x9b, gbc.readMem(0xb61c));
        // CB 9B 0025
        gbc.setState(0xe07, 0x5d9c, 0x7650, 0x1030, 0xa5e, 0xad46, 0x1, 0x1);
        gbc.writeMem(0xe07, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5d9c, gbc.sp());
        EXPECT(0xe09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0026
        gbc.setState(0x325f, 0xcedf, 0xe080, 0xf899, 0x4549, 0xcf6d, 0x0, 0x1);
        gbc.writeMem(0x325f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcedf, gbc.sp());
        EXPECT(0x3261, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0027
        gbc.setState(0x7b54, 0xe5a4, 0x6f0, 0x5e7, 0x5aef, 0xac81, 0x0, 0x1);
        gbc.writeMem(0x7b54, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xe5a4, gbc.sp());
        EXPECT(0x7b56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0028
        gbc.setState(0x9fce, 0x4a45, 0xfa40, 0xa71d, 0x2e5f, 0x311, 0x0, 0x0);
        gbc.writeMem(0x9fce, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x4a45, gbc.sp());
        EXPECT(0x9fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9fce));
        EXPECT(0x9b, gbc.readMem(0x9fcf));
        // CB 9B 0029
        gbc.setState(0x3235, 0x1634, 0x4720, 0x77f7, 0xa0f9, 0x8841, 0x0, 0x0);
        gbc.writeMem(0x3235, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1634, gbc.sp());
        EXPECT(0x3237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 002A
        gbc.setState(0x2096, 0x4b34, 0x2820, 0x56c7, 0x22a2, 0xe267, 0x1, 0x0);
        gbc.writeMem(0x2096, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x4b34, gbc.sp());
        EXPECT(0x2098, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 002B
        gbc.setState(0x7aa9, 0xee90, 0x51c0, 0x3cd7, 0x6716, 0xf909, 0x1, 0x0);
        gbc.writeMem(0x7aa9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xee90, gbc.sp());
        EXPECT(0x7aab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 002C
        gbc.setState(0x3344, 0x1aa1, 0x33a0, 0xf817, 0xb27c, 0x3177, 0x0, 0x0);
        gbc.writeMem(0x3344, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x1aa1, gbc.sp());
        EXPECT(0x3346, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 002D
        gbc.setState(0x5d51, 0xd040, 0xd570, 0x9acb, 0xb713, 0x1f9e, 0x1, 0x0);
        gbc.writeMem(0x5d51, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xd040, gbc.sp());
        EXPECT(0x5d53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 002E
        gbc.setState(0x67f8, 0xe61a, 0xaa80, 0x46f9, 0xbca3, 0xb351, 0x0, 0x0);
        gbc.writeMem(0x67f8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xe61a, gbc.sp());
        EXPECT(0x67fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 002F
        gbc.setState(0x1ea8, 0xef3b, 0x9050, 0x4474, 0x4e9c, 0x71e0, 0x1, 0x1);
        gbc.writeMem(0x1ea8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xef3b, gbc.sp());
        EXPECT(0x1eaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0031
        gbc.setState(0x1acb, 0xd212, 0x2280, 0x7f66, 0xc506, 0xbe69, 0x1, 0x1);
        gbc.writeMem(0x1acb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xd212, gbc.sp());
        EXPECT(0x1acd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0032
        gbc.setState(0x68c7, 0x2a26, 0xbf60, 0x2b9e, 0x17a7, 0x5067, 0x0, 0x1);
        gbc.writeMem(0x68c7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2a26, gbc.sp());
        EXPECT(0x68c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0033
        gbc.setState(0x5ef4, 0xa9e6, 0x4c60, 0xcd38, 0x68a2, 0xf640, 0x1, 0x0);
        gbc.writeMem(0x5ef4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa9e6, gbc.sp());
        EXPECT(0x5ef6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0034
        gbc.setState(0x940c, 0x21f8, 0xb460, 0x89a4, 0xf5e6, 0x3943, 0x1, 0x0);
        gbc.writeMem(0x940c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x21f8, gbc.sp());
        EXPECT(0x940e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x940c));
        EXPECT(0x9b, gbc.readMem(0x940d));
        // CB 9B 0035
        gbc.setState(0x7feb, 0xbbe4, 0xb820, 0xe0a2, 0x20de, 0x6f01, 0x1, 0x1);
        gbc.writeMem(0x7feb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xbbe4, gbc.sp());
        EXPECT(0x7fed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0036
        gbc.setState(0xd5e5, 0x85af, 0x9850, 0xd611, 0xddc, 0xbca4, 0x1, 0x1);
        gbc.writeMem(0xd5e5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x85af, gbc.sp());
        EXPECT(0xd5e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd5e5));
        EXPECT(0x9b, gbc.readMem(0xd5e6));
        // CB 9B 0037
        gbc.setState(0x53cc, 0xaabc, 0xc740, 0x9aec, 0x42c, 0xf4fe, 0x1, 0x0);
        gbc.writeMem(0x53cc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xaabc, gbc.sp());
        EXPECT(0x53ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0038
        gbc.setState(0x4515, 0x98e0, 0xbab0, 0x1110, 0x3175, 0x33dd, 0x1, 0x0);
        gbc.writeMem(0x4515, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x98e0, gbc.sp());
        EXPECT(0x4517, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0039
        gbc.setState(0x707d, 0x4bc2, 0x35f0, 0x193e, 0xd231, 0xc576, 0x1, 0x0);
        gbc.writeMem(0x707d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4bc2, gbc.sp());
        EXPECT(0x707f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 003A
        gbc.setState(0x991, 0x341d, 0xe4f0, 0x14cd, 0x91e, 0xf7ae, 0x1, 0x1);
        gbc.writeMem(0x991, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x341d, gbc.sp());
        EXPECT(0x993, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 003B
        gbc.setState(0x537d, 0x3697, 0x8e80, 0xa29, 0x104d, 0x28dd, 0x0, 0x0);
        gbc.writeMem(0x537d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3697, gbc.sp());
        EXPECT(0x537f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 003C
        gbc.setState(0x568a, 0x618d, 0xc490, 0x4af8, 0xccbc, 0x60e9, 0x1, 0x1);
        gbc.writeMem(0x568a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x618d, gbc.sp());
        EXPECT(0x568c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 003D
        gbc.setState(0xcbb4, 0xa640, 0x32e0, 0x7b83, 0x582b, 0xa08, 0x1, 0x1);
        gbc.writeMem(0xcbb4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xa640, gbc.sp());
        EXPECT(0xcbb6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcbb4));
        EXPECT(0x9b, gbc.readMem(0xcbb5));
        // CB 9B 003E
        gbc.setState(0x41f0, 0x2ef8, 0x9570, 0xc0d7, 0xefe, 0x958d, 0x0, 0x0);
        gbc.writeMem(0x41f0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x2ef8, gbc.sp());
        EXPECT(0x41f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 003F
        gbc.setState(0xc1fb, 0xddb, 0x5160, 0xd0d7, 0x6335, 0x8842, 0x1, 0x0);
        gbc.writeMem(0xc1fb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xddb, gbc.sp());
        EXPECT(0xc1fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1fb));
        EXPECT(0x9b, gbc.readMem(0xc1fc));
        // CB 9B 0040
        gbc.setState(0x96ec, 0x87c5, 0xf580, 0x1b0, 0x1f3b, 0x818e, 0x1, 0x1);
        gbc.writeMem(0x96ec, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x87c5, gbc.sp());
        EXPECT(0x96ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96ec));
        EXPECT(0x9b, gbc.readMem(0x96ed));
        // CB 9B 0041
        gbc.setState(0x43c2, 0xa616, 0x3d00, 0xa839, 0xd382, 0xaa4f, 0x0, 0x0);
        gbc.writeMem(0x43c2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa616, gbc.sp());
        EXPECT(0x43c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0043
        gbc.setState(0x5e2d, 0xb7a7, 0x9ea0, 0x10f5, 0xb0c9, 0x7c39, 0x0, 0x0);
        gbc.writeMem(0x5e2d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xb7a7, gbc.sp());
        EXPECT(0x5e2f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0044
        gbc.setState(0x5027, 0x107c, 0x6bf0, 0x529a, 0x5027, 0x63, 0x0, 0x0);
        gbc.writeMem(0x5027, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x107c, gbc.sp());
        EXPECT(0x5029, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0045
        gbc.setState(0x9bd6, 0xba38, 0xc7e0, 0x98ff, 0xd0d0, 0xf50, 0x0, 0x1);
        gbc.writeMem(0x9bd6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xba38, gbc.sp());
        EXPECT(0x9bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd6));
        EXPECT(0x9b, gbc.readMem(0x9bd7));
        // CB 9B 0046
        gbc.setState(0xdb1e, 0x5d00, 0x2ca0, 0x760f, 0xa349, 0x2028, 0x1, 0x0);
        gbc.writeMem(0xdb1e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5d00, gbc.sp());
        EXPECT(0xdb20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb1e));
        EXPECT(0x9b, gbc.readMem(0xdb1f));
        // CB 9B 0047
        gbc.setState(0x7c78, 0x554a, 0x3d10, 0x2199, 0x21f3, 0x3743, 0x0, 0x1);
        gbc.writeMem(0x7c78, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x554a, gbc.sp());
        EXPECT(0x7c7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0048
        gbc.setState(0xebcf, 0xa963, 0xb590, 0xa9f8, 0xda17, 0x2e80, 0x1, 0x1);
        gbc.writeMem(0xebcf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa963, gbc.sp());
        EXPECT(0xebd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebcf));
        EXPECT(0x9b, gbc.readMem(0xebd0));
        // CB 9B 0049
        gbc.setState(0x6654, 0xcfe5, 0x8360, 0x8396, 0x1efa, 0x2dcc, 0x1, 0x0);
        gbc.writeMem(0x6654, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xcfe5, gbc.sp());
        EXPECT(0x6656, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 004A
        gbc.setState(0xbcdb, 0x4409, 0x3ea0, 0xd2ac, 0x1538, 0xa768, 0x0, 0x0);
        gbc.writeMem(0xbcdb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x4409, gbc.sp());
        EXPECT(0xbcdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbcdb));
        EXPECT(0x9b, gbc.readMem(0xbcdc));
        // CB 9B 004B
        gbc.setState(0x2923, 0x9b81, 0x6480, 0xc39e, 0xea5b, 0x95cc, 0x1, 0x1);
        gbc.writeMem(0x2923, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9b81, gbc.sp());
        EXPECT(0x2925, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 004C
        gbc.setState(0xac16, 0x4843, 0x1ad0, 0xbbb0, 0x4bca, 0xe4d0, 0x0, 0x0);
        gbc.writeMem(0xac16, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4843, gbc.sp());
        EXPECT(0xac18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac16));
        EXPECT(0x9b, gbc.readMem(0xac17));
        // CB 9B 004D
        gbc.setState(0xc41a, 0x6784, 0x1d40, 0x55b, 0x8bfe, 0x5cd1, 0x0, 0x0);
        gbc.writeMem(0xc41a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x6784, gbc.sp());
        EXPECT(0xc41c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc41a));
        EXPECT(0x9b, gbc.readMem(0xc41b));
        // CB 9B 004E
        gbc.setState(0xed45, 0xad39, 0x1990, 0x6bea, 0xff15, 0xa567, 0x0, 0x1);
        gbc.writeMem(0xed45, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xad39, gbc.sp());
        EXPECT(0xed47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed45));
        EXPECT(0x9b, gbc.readMem(0xed46));
        // CB 9B 004F
        gbc.setState(0x8c97, 0xe32b, 0xb220, 0xe562, 0x5c58, 0x2288, 0x0, 0x1);
        gbc.writeMem(0x8c97, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xe32b, gbc.sp());
        EXPECT(0x8c99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c97));
        EXPECT(0x9b, gbc.readMem(0x8c98));
        // CB 9B 0050
        gbc.setState(0x76bf, 0x1ec9, 0x5250, 0x2607, 0x6d5a, 0x5284, 0x1, 0x1);
        gbc.writeMem(0x76bf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x1ec9, gbc.sp());
        EXPECT(0x76c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0051
        gbc.setState(0x20ed, 0xe0ae, 0xf580, 0xb8b1, 0x2f63, 0x7f3c, 0x1, 0x0);
        gbc.writeMem(0x20ed, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xe0ae, gbc.sp());
        EXPECT(0x20ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0052
        gbc.setState(0x3092, 0xb04a, 0x9fb0, 0x2f0e, 0xefc1, 0xf126, 0x0, 0x0);
        gbc.writeMem(0x3092, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xb04a, gbc.sp());
        EXPECT(0x3094, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0053
        gbc.setState(0xb1ed, 0x4dec, 0x1ba0, 0x30bc, 0xed9, 0x3f46, 0x1, 0x1);
        gbc.writeMem(0xb1ed, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4dec, gbc.sp());
        EXPECT(0xb1ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ed));
        EXPECT(0x9b, gbc.readMem(0xb1ee));
        // CB 9B 0054
        gbc.setState(0x40, 0x9271, 0xe6b0, 0xe0f8, 0x978d, 0xa784, 0x1, 0x1);
        gbc.writeMem(0x40, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x9271, gbc.sp());
        EXPECT(0x42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0055
        gbc.setState(0x5bb, 0x4521, 0xcd90, 0x3274, 0xc712, 0x5774, 0x0, 0x0);
        gbc.writeMem(0x5bb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x4521, gbc.sp());
        EXPECT(0x5bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0056
        gbc.setState(0x197e, 0x9814, 0x6490, 0x41b7, 0x739d, 0xbedb, 0x1, 0x0);
        gbc.writeMem(0x197e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9814, gbc.sp());
        EXPECT(0x1980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0057
        gbc.setState(0x6c0c, 0x54e6, 0xa430, 0xb18, 0x84ab, 0x71da, 0x0, 0x0);
        gbc.writeMem(0x6c0c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x54e6, gbc.sp());
        EXPECT(0x6c0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0058
        gbc.setState(0x1bb6, 0x3e07, 0x6510, 0x5f79, 0xb12d, 0xae1c, 0x0, 0x0);
        gbc.writeMem(0x1bb6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x3e07, gbc.sp());
        EXPECT(0x1bb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0059
        gbc.setState(0x2849, 0x764, 0x8680, 0x9b8a, 0xc0f1, 0xba4a, 0x0, 0x1);
        gbc.writeMem(0x2849, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x764, gbc.sp());
        EXPECT(0x284b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 005A
        gbc.setState(0x5858, 0x41f, 0x6790, 0xca, 0xb40e, 0x3164, 0x0, 0x1);
        gbc.writeMem(0x5858, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x41f, gbc.sp());
        EXPECT(0x585a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 005B
        gbc.setState(0x68e4, 0x5130, 0x9a10, 0x6751, 0x92ee, 0x889f, 0x0, 0x0);
        gbc.writeMem(0x68e4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x5130, gbc.sp());
        EXPECT(0x68e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 005C
        gbc.setState(0xbf0a, 0x3955, 0x7ee0, 0x5fda, 0x67a7, 0xaf2f, 0x1, 0x1);
        gbc.writeMem(0xbf0a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3955, gbc.sp());
        EXPECT(0xbf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf0a));
        EXPECT(0x9b, gbc.readMem(0xbf0b));
        // CB 9B 005D
        gbc.setState(0x31c3, 0xf88b, 0x9f50, 0xe6f8, 0x71ca, 0x4c8a, 0x0, 0x0);
        gbc.writeMem(0x31c3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xf88b, gbc.sp());
        EXPECT(0x31c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 005E
        gbc.setState(0x7bf2, 0x9f8f, 0x26e0, 0x752, 0x9a85, 0xdc18, 0x1, 0x1);
        gbc.writeMem(0x7bf2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9f8f, gbc.sp());
        EXPECT(0x7bf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 005F
        gbc.setState(0x1277, 0x806e, 0xd0b0, 0xe6fa, 0xb74f, 0xba7f, 0x0, 0x1);
        gbc.writeMem(0x1277, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x806e, gbc.sp());
        EXPECT(0x1279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0060
        gbc.setState(0x18f0, 0xf1ee, 0xeba0, 0x19ec, 0xbe18, 0xfc4c, 0x0, 0x1);
        gbc.writeMem(0x18f0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf1ee, gbc.sp());
        EXPECT(0x18f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0061
        gbc.setState(0x4625, 0x3415, 0x50f0, 0xcf0e, 0x4371, 0x915a, 0x1, 0x0);
        gbc.writeMem(0x4625, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x3415, gbc.sp());
        EXPECT(0x4627, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0062
        gbc.setState(0x4d2e, 0xbe86, 0x5140, 0x7207, 0xb2d7, 0x16ec, 0x1, 0x0);
        gbc.writeMem(0x4d2e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbe86, gbc.sp());
        EXPECT(0x4d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0063
        gbc.setState(0xbd5c, 0xfa14, 0xf820, 0xa9aa, 0x8905, 0xb7df, 0x1, 0x1);
        gbc.writeMem(0xbd5c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xfa14, gbc.sp());
        EXPECT(0xbd5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd5c));
        EXPECT(0x9b, gbc.readMem(0xbd5d));
        // CB 9B 0064
        gbc.setState(0x306d, 0xdb64, 0xa90, 0x6e52, 0xd8f8, 0x82bc, 0x1, 0x0);
        gbc.writeMem(0x306d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdb64, gbc.sp());
        EXPECT(0x306f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0065
        gbc.setState(0x7d6c, 0xfe7d, 0x4940, 0x446d, 0xfc89, 0x7bee, 0x0, 0x0);
        gbc.writeMem(0x7d6c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xfe7d, gbc.sp());
        EXPECT(0x7d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0066
        gbc.setState(0x388a, 0x8f48, 0xc5e0, 0x26a7, 0xf5af, 0x8e92, 0x1, 0x1);
        gbc.writeMem(0x388a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x8f48, gbc.sp());
        EXPECT(0x388c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0067
        gbc.setState(0x8194, 0x6fb6, 0x550, 0xd6e8, 0xdf4b, 0x6c1d, 0x0, 0x0);
        gbc.writeMem(0x8194, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x6fb6, gbc.sp());
        EXPECT(0x8196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8194));
        EXPECT(0x9b, gbc.readMem(0x8195));
        // CB 9B 0068
        gbc.setState(0x71a2, 0x59f8, 0xb490, 0x2372, 0x7d6d, 0x85e, 0x1, 0x1);
        gbc.writeMem(0x71a2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x59f8, gbc.sp());
        EXPECT(0x71a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0069
        gbc.setState(0xeb81, 0x859, 0x8360, 0xda4, 0x8f92, 0x15f9, 0x1, 0x0);
        gbc.writeMem(0xeb81, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x859, gbc.sp());
        EXPECT(0xeb83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb81));
        EXPECT(0x9b, gbc.readMem(0xeb82));
        // CB 9B 006A
        gbc.setState(0x9f4e, 0x482c, 0x46c0, 0x5753, 0xc569, 0xdd13, 0x0, 0x1);
        gbc.writeMem(0x9f4e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x482c, gbc.sp());
        EXPECT(0x9f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4e));
        EXPECT(0x9b, gbc.readMem(0x9f4f));
        // CB 9B 006B
        gbc.setState(0x652e, 0x7c3a, 0xf8a0, 0x66ba, 0x54b2, 0x6bc0, 0x0, 0x1);
        gbc.writeMem(0x652e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x7c3a, gbc.sp());
        EXPECT(0x6530, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 006C
        gbc.setState(0xc51e, 0x13a9, 0x2e30, 0x392a, 0xe9e7, 0x1b23, 0x1, 0x0);
        gbc.writeMem(0xc51e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x13a9, gbc.sp());
        EXPECT(0xc520, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc51e));
        EXPECT(0x9b, gbc.readMem(0xc51f));
        // CB 9B 006D
        gbc.setState(0xb58b, 0x3e50, 0xf790, 0x34cf, 0xfcdf, 0x51, 0x0, 0x0);
        gbc.writeMem(0xb58b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x3e50, gbc.sp());
        EXPECT(0xb58d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb58b));
        EXPECT(0x9b, gbc.readMem(0xb58c));
        // CB 9B 006E
        gbc.setState(0xb367, 0x45e0, 0x8cb0, 0xf192, 0xd869, 0xb272, 0x0, 0x0);
        gbc.writeMem(0xb367, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x45e0, gbc.sp());
        EXPECT(0xb369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb367));
        EXPECT(0x9b, gbc.readMem(0xb368));
        // CB 9B 006F
        gbc.setState(0x7036, 0x8f55, 0xe20, 0x7495, 0x3656, 0xdb04, 0x1, 0x0);
        gbc.writeMem(0x7036, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8f55, gbc.sp());
        EXPECT(0x7038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0070
        gbc.setState(0xb677, 0x24de, 0x7ff0, 0xa1a0, 0xd731, 0x14f1, 0x0, 0x1);
        gbc.writeMem(0xb677, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x24de, gbc.sp());
        EXPECT(0xb679, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb677));
        EXPECT(0x9b, gbc.readMem(0xb678));
        // CB 9B 0071
        gbc.setState(0x7671, 0xf513, 0xc220, 0x64d3, 0x442f, 0xa680, 0x0, 0x0);
        gbc.writeMem(0x7671, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf513, gbc.sp());
        EXPECT(0x7673, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0072
        gbc.setState(0xbfcf, 0x2fa4, 0xccb0, 0x97b5, 0x1eb2, 0xb337, 0x0, 0x0);
        gbc.writeMem(0xbfcf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x2fa4, gbc.sp());
        EXPECT(0xbfd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfcf));
        EXPECT(0x9b, gbc.readMem(0xbfd0));
        // CB 9B 0073
        gbc.setState(0x6417, 0x24e9, 0x9cb0, 0xb0a8, 0x3265, 0x90fe, 0x1, 0x0);
        gbc.writeMem(0x6417, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x24e9, gbc.sp());
        EXPECT(0x6419, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0074
        gbc.setState(0x2986, 0x8f6f, 0x26b0, 0xfe88, 0x6ba1, 0x942b, 0x1, 0x0);
        gbc.writeMem(0x2986, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x8f6f, gbc.sp());
        EXPECT(0x2988, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0075
        gbc.setState(0x5bd2, 0x8b2b, 0x2a80, 0xb260, 0xc5ae, 0xade2, 0x1, 0x1);
        gbc.writeMem(0x5bd2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8b2b, gbc.sp());
        EXPECT(0x5bd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0076
        gbc.setState(0x3ebf, 0xee84, 0xb0a0, 0x520b, 0x38ec, 0xf28, 0x1, 0x0);
        gbc.writeMem(0x3ebf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xee84, gbc.sp());
        EXPECT(0x3ec1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0078
        gbc.setState(0xca88, 0x2fdc, 0x9710, 0x4884, 0x7075, 0x57ed, 0x0, 0x0);
        gbc.writeMem(0xca88, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2fdc, gbc.sp());
        EXPECT(0xca8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca88));
        EXPECT(0x9b, gbc.readMem(0xca89));
        // CB 9B 0079
        gbc.setState(0xc475, 0x3ba9, 0xa0a0, 0xf806, 0xe65c, 0x5b89, 0x1, 0x1);
        gbc.writeMem(0xc475, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x3ba9, gbc.sp());
        EXPECT(0xc477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc475));
        EXPECT(0x9b, gbc.readMem(0xc476));
        // CB 9B 007A
        gbc.setState(0x7e1f, 0x534a, 0x5a10, 0xb571, 0x41f5, 0x81ac, 0x0, 0x1);
        gbc.writeMem(0x7e1f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x534a, gbc.sp());
        EXPECT(0x7e21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 007B
        gbc.setState(0xabbd, 0x1c67, 0x8e50, 0xc805, 0x693d, 0xe9a9, 0x1, 0x1);
        gbc.writeMem(0xabbd, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1c67, gbc.sp());
        EXPECT(0xabbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabbd));
        EXPECT(0x9b, gbc.readMem(0xabbe));
        // CB 9B 007C
        gbc.setState(0x8c6, 0x3494, 0xafe0, 0x75b7, 0xcc45, 0x960e, 0x1, 0x1);
        gbc.writeMem(0x8c6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x3494, gbc.sp());
        EXPECT(0x8c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 007D
        gbc.setState(0x7318, 0x9906, 0xa4f0, 0xeeee, 0x37ce, 0x3112, 0x1, 0x0);
        gbc.writeMem(0x7318, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9906, gbc.sp());
        EXPECT(0x731a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 007E
        gbc.setState(0x820f, 0x212d, 0x8950, 0xfe55, 0x55a3, 0xe4ce, 0x1, 0x1);
        gbc.writeMem(0x820f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x212d, gbc.sp());
        EXPECT(0x8211, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x820f));
        EXPECT(0x9b, gbc.readMem(0x8210));
        // CB 9B 007F
        gbc.setState(0x1350, 0x3281, 0xb9e0, 0x7a96, 0x2c60, 0xe63, 0x0, 0x1);
        gbc.writeMem(0x1350, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3281, gbc.sp());
        EXPECT(0x1352, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0080
        gbc.setState(0x2450, 0xed77, 0xa650, 0x9976, 0xc8bc, 0xa26f, 0x0, 0x0);
        gbc.writeMem(0x2450, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xed77, gbc.sp());
        EXPECT(0x2452, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0081
        gbc.setState(0x6aeb, 0xdf6f, 0x1220, 0xf91, 0xe703, 0x73f9, 0x1, 0x1);
        gbc.writeMem(0x6aeb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xdf6f, gbc.sp());
        EXPECT(0x6aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0082
        gbc.setState(0x8cba, 0xeaf, 0xb7f0, 0xba1e, 0x6b14, 0x6df6, 0x0, 0x1);
        gbc.writeMem(0x8cba, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xeaf, gbc.sp());
        EXPECT(0x8cbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cba));
        EXPECT(0x9b, gbc.readMem(0x8cbb));
        // CB 9B 0083
        gbc.setState(0xc9ef, 0x294e, 0xb960, 0xca65, 0x990, 0xf337, 0x1, 0x0);
        gbc.writeMem(0xc9ef, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x294e, gbc.sp());
        EXPECT(0xc9f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9ef));
        EXPECT(0x9b, gbc.readMem(0xc9f0));
        // CB 9B 0084
        gbc.setState(0x3a8c, 0x9b96, 0xdbb0, 0x87be, 0xb56f, 0x1ad5, 0x0, 0x1);
        gbc.writeMem(0x3a8c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x9b96, gbc.sp());
        EXPECT(0x3a8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0085
        gbc.setState(0x863a, 0x3a19, 0xf560, 0xccce, 0xd3a7, 0x12ef, 0x0, 0x0);
        gbc.writeMem(0x863a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3a19, gbc.sp());
        EXPECT(0x863c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863a));
        EXPECT(0x9b, gbc.readMem(0x863b));
        // CB 9B 0086
        gbc.setState(0x5a09, 0xd014, 0x7320, 0x905b, 0x4b70, 0x8c7e, 0x0, 0x0);
        gbc.writeMem(0x5a09, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd014, gbc.sp());
        EXPECT(0x5a0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0087
        gbc.setState(0x5ebc, 0x9d83, 0xaaf0, 0xbc86, 0x3304, 0x716c, 0x1, 0x1);
        gbc.writeMem(0x5ebc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9d83, gbc.sp());
        EXPECT(0x5ebe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0088
        gbc.setState(0x6114, 0x4cad, 0xbc30, 0x10f3, 0xcdbc, 0xaec3, 0x0, 0x0);
        gbc.writeMem(0x6114, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x4cad, gbc.sp());
        EXPECT(0x6116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0089
        gbc.setState(0xe863, 0xe5c7, 0x3df0, 0xacca, 0xc04d, 0xeec6, 0x0, 0x1);
        gbc.writeMem(0xe863, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe5c7, gbc.sp());
        EXPECT(0xe865, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe863));
        EXPECT(0x9b, gbc.readMem(0xe864));
        // CB 9B 008A
        gbc.setState(0x7eed, 0x6779, 0xaa20, 0x3cfe, 0xd5f8, 0xb120, 0x1, 0x0);
        gbc.writeMem(0x7eed, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x6779, gbc.sp());
        EXPECT(0x7eef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 008B
        gbc.setState(0xc1ee, 0xdf68, 0x4080, 0xe290, 0x12b4, 0x197e, 0x0, 0x0);
        gbc.writeMem(0xc1ee, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xdf68, gbc.sp());
        EXPECT(0xc1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ee));
        EXPECT(0x9b, gbc.readMem(0xc1ef));
        // CB 9B 008C
        gbc.setState(0xab5d, 0x821b, 0x7760, 0xd779, 0xcd3f, 0x98f, 0x1, 0x1);
        gbc.writeMem(0xab5d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x821b, gbc.sp());
        EXPECT(0xab5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab5d));
        EXPECT(0x9b, gbc.readMem(0xab5e));
        // CB 9B 008D
        gbc.setState(0x2038, 0x6f90, 0x1740, 0xd6ad, 0x6d38, 0xda2a, 0x1, 0x0);
        gbc.writeMem(0x2038, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6f90, gbc.sp());
        EXPECT(0x203a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 008E
        gbc.setState(0x1178, 0xa2ae, 0xe340, 0xae67, 0x94f4, 0x3765, 0x0, 0x0);
        gbc.writeMem(0x1178, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xa2ae, gbc.sp());
        EXPECT(0x117a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 008F
        gbc.setState(0x31d3, 0xd690, 0x2480, 0xba9d, 0xf19f, 0x1971, 0x0, 0x1);
        gbc.writeMem(0x31d3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xd690, gbc.sp());
        EXPECT(0x31d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0090
        gbc.setState(0x1cd3, 0x6f65, 0x2490, 0x6536, 0x8bed, 0xa4fb, 0x0, 0x0);
        gbc.writeMem(0x1cd3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6f65, gbc.sp());
        EXPECT(0x1cd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0091
        gbc.setState(0x7fba, 0xb549, 0x9800, 0x9ce7, 0xbbab, 0xc9ff, 0x0, 0x1);
        gbc.writeMem(0x7fba, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb549, gbc.sp());
        EXPECT(0x7fbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0092
        gbc.setState(0x13b8, 0x365c, 0xdbe0, 0x258e, 0xf5d6, 0x3a47, 0x1, 0x0);
        gbc.writeMem(0x13b8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x365c, gbc.sp());
        EXPECT(0x13ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0093
        gbc.setState(0x6a22, 0xfbb8, 0x7900, 0x73df, 0x1ce6, 0xe948, 0x0, 0x0);
        gbc.writeMem(0x6a22, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xfbb8, gbc.sp());
        EXPECT(0x6a24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0094
        gbc.setState(0x3d73, 0x6ef8, 0xce20, 0x3c20, 0x1a5, 0x288b, 0x0, 0x1);
        gbc.writeMem(0x3d73, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x6ef8, gbc.sp());
        EXPECT(0x3d75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0095
        gbc.setState(0x6f83, 0x33ed, 0xe400, 0x5223, 0x7bc2, 0x274a, 0x0, 0x1);
        gbc.writeMem(0x6f83, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x33ed, gbc.sp());
        EXPECT(0x6f85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0097
        gbc.setState(0x1b17, 0x5513, 0xf30, 0x5484, 0x93f9, 0xd224, 0x0, 0x0);
        gbc.writeMem(0x1b17, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x5513, gbc.sp());
        EXPECT(0x1b19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0098
        gbc.setState(0xa1bb, 0x61c3, 0x95e0, 0x40c6, 0x7090, 0xa58b, 0x1, 0x1);
        gbc.writeMem(0xa1bb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x61c3, gbc.sp());
        EXPECT(0xa1bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1bb));
        EXPECT(0x9b, gbc.readMem(0xa1bc));
        // CB 9B 0099
        gbc.setState(0xb18a, 0xfa81, 0x62a0, 0x3754, 0xff49, 0x2382, 0x1, 0x1);
        gbc.writeMem(0xb18a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xfa81, gbc.sp());
        EXPECT(0xb18c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb18a));
        EXPECT(0x9b, gbc.readMem(0xb18b));
        // CB 9B 009A
        gbc.setState(0xdabf, 0xce35, 0x2af0, 0xfee6, 0x1b5d, 0x8805, 0x1, 0x0);
        gbc.writeMem(0xdabf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xce35, gbc.sp());
        EXPECT(0xdac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdabf));
        EXPECT(0x9b, gbc.readMem(0xdac0));
        // CB 9B 009B
        gbc.setState(0x4534, 0x1a1b, 0x4d70, 0x7ed6, 0x98c3, 0x1b07, 0x1, 0x1);
        gbc.writeMem(0x4534, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x1a1b, gbc.sp());
        EXPECT(0x4536, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 009C
        gbc.setState(0xe1ee, 0x7dd1, 0xb100, 0x686f, 0x459, 0xb1d4, 0x0, 0x0);
        gbc.writeMem(0xe1ee, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x7dd1, gbc.sp());
        EXPECT(0xe1f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1ee));
        EXPECT(0x9b, gbc.readMem(0xe1ef));
        // CB 9B 009D
        gbc.setState(0x3edd, 0x5e9a, 0x2e70, 0x50d0, 0x3c4a, 0x91c7, 0x1, 0x1);
        gbc.writeMem(0x3edd, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x5e9a, gbc.sp());
        EXPECT(0x3edf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 009E
        gbc.setState(0xba3f, 0xc737, 0xb860, 0xcc33, 0xb5d, 0x4d97, 0x1, 0x0);
        gbc.writeMem(0xba3f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc737, gbc.sp());
        EXPECT(0xba41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba3f));
        EXPECT(0x9b, gbc.readMem(0xba40));
        // CB 9B 009F
        gbc.setState(0x3e31, 0xa9ef, 0x2d30, 0xff3b, 0x4e22, 0xd7d4, 0x1, 0x1);
        gbc.writeMem(0x3e31, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa9ef, gbc.sp());
        EXPECT(0x3e33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00A0
        gbc.setState(0xbd9f, 0xd187, 0x8be0, 0x52fe, 0xfb0f, 0x629f, 0x0, 0x0);
        gbc.writeMem(0xbd9f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xd187, gbc.sp());
        EXPECT(0xbda1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd9f));
        EXPECT(0x9b, gbc.readMem(0xbda0));
        // CB 9B 00A1
        gbc.setState(0x46dc, 0x4514, 0xd2b0, 0x2620, 0x836c, 0xd19d, 0x1, 0x0);
        gbc.writeMem(0x46dc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x4514, gbc.sp());
        EXPECT(0x46de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00A2
        gbc.setState(0x3a29, 0xfed4, 0x8310, 0xa258, 0xf67b, 0xe9a2, 0x0, 0x1);
        gbc.writeMem(0x3a29, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xfed4, gbc.sp());
        EXPECT(0x3a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00A3
        gbc.setState(0xac83, 0x8996, 0x9d20, 0x613b, 0x1a35, 0xd684, 0x1, 0x0);
        gbc.writeMem(0xac83, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x8996, gbc.sp());
        EXPECT(0xac85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac83));
        EXPECT(0x9b, gbc.readMem(0xac84));
        // CB 9B 00A4
        gbc.setState(0xce58, 0x8457, 0x6cc0, 0xdc0f, 0x2091, 0x5dec, 0x0, 0x1);
        gbc.writeMem(0xce58, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x8457, gbc.sp());
        EXPECT(0xce5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce58));
        EXPECT(0x9b, gbc.readMem(0xce59));
        // CB 9B 00A5
        gbc.setState(0x8318, 0x8ba0, 0x3750, 0x525d, 0xf144, 0x5f0f, 0x0, 0x0);
        gbc.writeMem(0x8318, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8ba0, gbc.sp());
        EXPECT(0x831a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8318));
        EXPECT(0x9b, gbc.readMem(0x8319));
        // CB 9B 00A6
        gbc.setState(0x2661, 0x997c, 0x40c0, 0xb039, 0x2d98, 0x34b9, 0x1, 0x1);
        gbc.writeMem(0x2661, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x997c, gbc.sp());
        EXPECT(0x2663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00A7
        gbc.setState(0xd4bb, 0xe6c7, 0x7ee0, 0x2bc7, 0xdf3, 0xcea5, 0x1, 0x1);
        gbc.writeMem(0xd4bb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe6c7, gbc.sp());
        EXPECT(0xd4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4bb));
        EXPECT(0x9b, gbc.readMem(0xd4bc));
        // CB 9B 00A8
        gbc.setState(0x7f1c, 0x7237, 0x8720, 0xc6bf, 0xbb52, 0xfe64, 0x0, 0x0);
        gbc.writeMem(0x7f1c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x7237, gbc.sp());
        EXPECT(0x7f1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00A9
        gbc.setState(0xe945, 0x5dcd, 0x3e50, 0x6467, 0x812e, 0x37de, 0x0, 0x1);
        gbc.writeMem(0xe945, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5dcd, gbc.sp());
        EXPECT(0xe947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe945));
        EXPECT(0x9b, gbc.readMem(0xe946));
        // CB 9B 00AA
        gbc.setState(0xa6e5, 0xf3b, 0x87f0, 0x6675, 0x44c1, 0x7cc1, 0x1, 0x1);
        gbc.writeMem(0xa6e5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf3b, gbc.sp());
        EXPECT(0xa6e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6e5));
        EXPECT(0x9b, gbc.readMem(0xa6e6));
        // CB 9B 00AB
        gbc.setState(0x4395, 0xa757, 0xf770, 0xa68f, 0xf3d4, 0xfd5f, 0x0, 0x1);
        gbc.writeMem(0x4395, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xa757, gbc.sp());
        EXPECT(0x4397, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00AC
        gbc.setState(0x6b98, 0x659f, 0xcd60, 0x24ca, 0x8fb0, 0xb65e, 0x0, 0x1);
        gbc.writeMem(0x6b98, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x659f, gbc.sp());
        EXPECT(0x6b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00AD
        gbc.setState(0x909e, 0xbb1f, 0x6510, 0x24fd, 0x88fe, 0x8c4e, 0x1, 0x1);
        gbc.writeMem(0x909e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xbb1f, gbc.sp());
        EXPECT(0x90a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x909e));
        EXPECT(0x9b, gbc.readMem(0x909f));
        // CB 9B 00AE
        gbc.setState(0x417, 0x74c2, 0x6a10, 0xb1b0, 0x2333, 0xd47a, 0x0, 0x1);
        gbc.writeMem(0x417, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x74c2, gbc.sp());
        EXPECT(0x419, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00AF
        gbc.setState(0x86c8, 0x4cae, 0xa180, 0x8c36, 0xdadf, 0x7eb3, 0x1, 0x1);
        gbc.writeMem(0x86c8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x4cae, gbc.sp());
        EXPECT(0x86ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86c8));
        EXPECT(0x9b, gbc.readMem(0x86c9));
        // CB 9B 00B0
        gbc.setState(0xd971, 0x7219, 0xf5a0, 0x6860, 0xecf9, 0xbd46, 0x1, 0x0);
        gbc.writeMem(0xd971, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7219, gbc.sp());
        EXPECT(0xd973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd971));
        EXPECT(0x9b, gbc.readMem(0xd972));
        // CB 9B 00B1
        gbc.setState(0xa4b, 0xa814, 0x4f60, 0x6b2f, 0xb4a5, 0x880d, 0x0, 0x1);
        gbc.writeMem(0xa4b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa814, gbc.sp());
        EXPECT(0xa4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00B2
        gbc.setState(0x9086, 0x93e2, 0x430, 0x6f49, 0xa2c8, 0x5273, 0x0, 0x0);
        gbc.writeMem(0x9086, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x93e2, gbc.sp());
        EXPECT(0x9088, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9086));
        EXPECT(0x9b, gbc.readMem(0x9087));
        // CB 9B 00B3
        gbc.setState(0x38f0, 0x1c34, 0x6c90, 0xb47, 0xf7a8, 0x403b, 0x1, 0x1);
        gbc.writeMem(0x38f0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1c34, gbc.sp());
        EXPECT(0x38f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00B4
        gbc.setState(0x7e18, 0xee7a, 0xa140, 0xe3d6, 0x3f05, 0x35ff, 0x0, 0x0);
        gbc.writeMem(0x7e18, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xee7a, gbc.sp());
        EXPECT(0x7e1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00B5
        gbc.setState(0xe925, 0x2c3, 0x2600, 0x3adf, 0x72bf, 0xad81, 0x1, 0x0);
        gbc.writeMem(0xe925, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2c3, gbc.sp());
        EXPECT(0xe927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe925));
        EXPECT(0x9b, gbc.readMem(0xe926));
        // CB 9B 00B6
        gbc.setState(0x32fc, 0x9c9, 0xbaf0, 0xe833, 0x270, 0x2a27, 0x0, 0x1);
        gbc.writeMem(0x32fc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9c9, gbc.sp());
        EXPECT(0x32fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00B7
        gbc.setState(0x15f7, 0x6e39, 0x720, 0x5a6f, 0x6bcc, 0xa8f5, 0x1, 0x0);
        gbc.writeMem(0x15f7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x6e39, gbc.sp());
        EXPECT(0x15f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00B8
        gbc.setState(0x9e9c, 0xe7aa, 0xc40, 0x2c4b, 0xcb7d, 0x8a61, 0x0, 0x0);
        gbc.writeMem(0x9e9c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe7aa, gbc.sp());
        EXPECT(0x9e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e9c));
        EXPECT(0x9b, gbc.readMem(0x9e9d));
        // CB 9B 00B9
        gbc.setState(0xb5ad, 0xfb2f, 0x5d70, 0xb766, 0x6d35, 0x70d2, 0x1, 0x1);
        gbc.writeMem(0xb5ad, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xfb2f, gbc.sp());
        EXPECT(0xb5af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5ad));
        EXPECT(0x9b, gbc.readMem(0xb5ae));
        // CB 9B 00BA
        gbc.setState(0x94aa, 0x9af6, 0x80f0, 0x1b5c, 0x4226, 0xe124, 0x1, 0x0);
        gbc.writeMem(0x94aa, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x9af6, gbc.sp());
        EXPECT(0x94ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94aa));
        EXPECT(0x9b, gbc.readMem(0x94ab));
        // CB 9B 00BB
        gbc.setState(0x2ef5, 0xc21f, 0x4b40, 0x8550, 0x9698, 0x13c, 0x0, 0x0);
        gbc.writeMem(0x2ef5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xc21f, gbc.sp());
        EXPECT(0x2ef7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00BC
        gbc.setState(0xb1ef, 0x6d31, 0xe660, 0xdad0, 0xd9f4, 0xa52d, 0x1, 0x1);
        gbc.writeMem(0xb1ef, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x6d31, gbc.sp());
        EXPECT(0xb1f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1ef));
        EXPECT(0x9b, gbc.readMem(0xb1f0));
        // CB 9B 00BD
        gbc.setState(0x9590, 0x691b, 0xfa30, 0x8b71, 0x7429, 0x24a1, 0x1, 0x0);
        gbc.writeMem(0x9590, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x691b, gbc.sp());
        EXPECT(0x9592, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9590));
        EXPECT(0x9b, gbc.readMem(0x9591));
        // CB 9B 00BE
        gbc.setState(0x757c, 0xb25d, 0x8d60, 0x96d1, 0x4401, 0xb4b6, 0x0, 0x1);
        gbc.writeMem(0x757c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb25d, gbc.sp());
        EXPECT(0x757e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00BF
        gbc.setState(0x9242, 0x7602, 0xf060, 0xf151, 0xa48, 0xb855, 0x0, 0x1);
        gbc.writeMem(0x9242, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7602, gbc.sp());
        EXPECT(0x9244, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9242));
        EXPECT(0x9b, gbc.readMem(0x9243));
        // CB 9B 00C0
        gbc.setState(0x10a0, 0xf3c1, 0x4c70, 0x837, 0xae9f, 0xcd9a, 0x1, 0x1);
        gbc.writeMem(0x10a0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf3c1, gbc.sp());
        EXPECT(0x10a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00C1
        gbc.setState(0x3492, 0xa6f9, 0xa750, 0xb6f6, 0xbc4c, 0xca00, 0x1, 0x1);
        gbc.writeMem(0x3492, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xa6f9, gbc.sp());
        EXPECT(0x3494, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00C2
        gbc.setState(0xb9d0, 0xfff9, 0x3d20, 0x4b53, 0xdf51, 0x1d5c, 0x1, 0x0);
        gbc.writeMem(0xb9d0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xfff9, gbc.sp());
        EXPECT(0xb9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9d0));
        EXPECT(0x9b, gbc.readMem(0xb9d1));
        // CB 9B 00C3
        gbc.setState(0x45a8, 0xc2d6, 0x8330, 0xe28d, 0x8b02, 0xa00c, 0x0, 0x0);
        gbc.writeMem(0x45a8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xc2d6, gbc.sp());
        EXPECT(0x45aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00C4
        gbc.setState(0x3420, 0xf8d9, 0x36a0, 0xe90a, 0xae87, 0x5c13, 0x0, 0x1);
        gbc.writeMem(0x3420, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf8d9, gbc.sp());
        EXPECT(0x3422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00C5
        gbc.setState(0xe190, 0x6d13, 0xfa10, 0x166e, 0x99c, 0xd84d, 0x0, 0x1);
        gbc.writeMem(0xe190, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6d13, gbc.sp());
        EXPECT(0xe192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe190));
        EXPECT(0x9b, gbc.readMem(0xe191));
        // CB 9B 00C6
        gbc.setState(0xc298, 0x3ec4, 0x5570, 0x8684, 0xacf3, 0x8523, 0x1, 0x1);
        gbc.writeMem(0xc298, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x3ec4, gbc.sp());
        EXPECT(0xc29a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc298));
        EXPECT(0x9b, gbc.readMem(0xc299));
        // CB 9B 00C7
        gbc.setState(0x4209, 0x7c05, 0x7920, 0xd68f, 0x6be7, 0x3f0c, 0x0, 0x0);
        gbc.writeMem(0x4209, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7c05, gbc.sp());
        EXPECT(0x420b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00C8
        gbc.setState(0x904c, 0x72e4, 0xe840, 0x82d2, 0x8b8, 0x4363, 0x1, 0x0);
        gbc.writeMem(0x904c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x72e4, gbc.sp());
        EXPECT(0x904e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x904c));
        EXPECT(0x9b, gbc.readMem(0x904d));
        // CB 9B 00CA
        gbc.setState(0x5840, 0x20a5, 0xca70, 0xc340, 0x23e6, 0x7ef2, 0x0, 0x1);
        gbc.writeMem(0x5840, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x20a5, gbc.sp());
        EXPECT(0x5842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00CB
        gbc.setState(0x90f1, 0x9f0, 0xd8a0, 0xdad4, 0x6f2, 0xb69, 0x1, 0x1);
        gbc.writeMem(0x90f1, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9f0, gbc.sp());
        EXPECT(0x90f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90f1));
        EXPECT(0x9b, gbc.readMem(0x90f2));
        // CB 9B 00CC
        gbc.setState(0x4f9d, 0xb343, 0xb7b0, 0x13cc, 0x211f, 0xf679, 0x1, 0x0);
        gbc.writeMem(0x4f9d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb343, gbc.sp());
        EXPECT(0x4f9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00CD
        gbc.setState(0x4c79, 0x179f, 0xea90, 0xaa50, 0x1f02, 0x7cbe, 0x1, 0x0);
        gbc.writeMem(0x4c79, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x179f, gbc.sp());
        EXPECT(0x4c7b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00CE
        gbc.setState(0x9f4e, 0xdc15, 0x6340, 0xcb73, 0x10b4, 0x4a59, 0x0, 0x1);
        gbc.writeMem(0x9f4e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdc15, gbc.sp());
        EXPECT(0x9f50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f4e));
        EXPECT(0x9b, gbc.readMem(0x9f4f));
        // CB 9B 00D0
        gbc.setState(0xe3f9, 0x748, 0x5b20, 0xc7b8, 0x9fad, 0x9616, 0x0, 0x0);
        gbc.writeMem(0xe3f9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x748, gbc.sp());
        EXPECT(0xe3fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3f9));
        EXPECT(0x9b, gbc.readMem(0xe3fa));
        // CB 9B 00D1
        gbc.setState(0xcfc7, 0xd824, 0xbc70, 0x9aa3, 0x8eda, 0x4382, 0x0, 0x1);
        gbc.writeMem(0xcfc7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xd824, gbc.sp());
        EXPECT(0xcfc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfc7));
        EXPECT(0x9b, gbc.readMem(0xcfc8));
        // CB 9B 00D2
        gbc.setState(0x1438, 0x2a2e, 0x2790, 0xe8a1, 0xa09a, 0x636d, 0x0, 0x0);
        gbc.writeMem(0x1438, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x2a2e, gbc.sp());
        EXPECT(0x143a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00D3
        gbc.setState(0xaa29, 0x2cea, 0x8a80, 0xa86c, 0x1482, 0x2c, 0x1, 0x0);
        gbc.writeMem(0xaa29, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x2cea, gbc.sp());
        EXPECT(0xaa2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa29));
        EXPECT(0x9b, gbc.readMem(0xaa2a));
        // CB 9B 00D4
        gbc.setState(0x31d9, 0xb11a, 0x6db0, 0x4ccf, 0x2808, 0xd84b, 0x1, 0x0);
        gbc.writeMem(0x31d9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xb11a, gbc.sp());
        EXPECT(0x31db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00D6
        gbc.setState(0xd738, 0x7382, 0x1ef0, 0x7fb, 0xdd23, 0x525d, 0x0, 0x1);
        gbc.writeMem(0xd738, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7382, gbc.sp());
        EXPECT(0xd73a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd738));
        EXPECT(0x9b, gbc.readMem(0xd739));
        // CB 9B 00D7
        gbc.setState(0x532f, 0x6fc5, 0x8340, 0x9b13, 0x4bd9, 0xa9d6, 0x1, 0x0);
        gbc.writeMem(0x532f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x6fc5, gbc.sp());
        EXPECT(0x5331, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00D8
        gbc.setState(0x4a3a, 0x32e7, 0x9f50, 0x9fec, 0x5bc2, 0x4e94, 0x0, 0x0);
        gbc.writeMem(0x4a3a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x32e7, gbc.sp());
        EXPECT(0x4a3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00D9
        gbc.setState(0x15d8, 0x4488, 0xa600, 0x5526, 0xf2f8, 0xbbfd, 0x1, 0x0);
        gbc.writeMem(0x15d8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x4488, gbc.sp());
        EXPECT(0x15da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00DA
        gbc.setState(0xa6b4, 0x9180, 0x5230, 0x8d5, 0x9762, 0x85fb, 0x0, 0x1);
        gbc.writeMem(0xa6b4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9180, gbc.sp());
        EXPECT(0xa6b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa6b4));
        EXPECT(0x9b, gbc.readMem(0xa6b5));
        // CB 9B 00DB
        gbc.setState(0x82fa, 0xab4a, 0xfa00, 0x386f, 0xe4e3, 0xe042, 0x0, 0x1);
        gbc.writeMem(0x82fa, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xab4a, gbc.sp());
        EXPECT(0x82fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82fa));
        EXPECT(0x9b, gbc.readMem(0x82fb));
        // CB 9B 00DC
        gbc.setState(0x21f2, 0x178e, 0x8a60, 0xafd2, 0xbd58, 0xb55a, 0x1, 0x0);
        gbc.writeMem(0x21f2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x178e, gbc.sp());
        EXPECT(0x21f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00DD
        gbc.setState(0xe44d, 0x53a7, 0x4170, 0xdddd, 0xc283, 0x9a3b, 0x0, 0x0);
        gbc.writeMem(0xe44d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x53a7, gbc.sp());
        EXPECT(0xe44f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe44d));
        EXPECT(0x9b, gbc.readMem(0xe44e));
        // CB 9B 00DE
        gbc.setState(0x6a5f, 0xa994, 0xc950, 0xc843, 0x4194, 0xda7c, 0x0, 0x1);
        gbc.writeMem(0x6a5f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa994, gbc.sp());
        EXPECT(0x6a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00DF
        gbc.setState(0x219e, 0x2a2a, 0x6a0, 0xdb13, 0x2f6a, 0xdc69, 0x1, 0x1);
        gbc.writeMem(0x219e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x2a2a, gbc.sp());
        EXPECT(0x21a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00E0
        gbc.setState(0x602a, 0x7dba, 0x5840, 0xb3ee, 0x45c4, 0x9565, 0x1, 0x1);
        gbc.writeMem(0x602a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x7dba, gbc.sp());
        EXPECT(0x602c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00E1
        gbc.setState(0xc3f4, 0x633f, 0xcbb0, 0x52a9, 0xa9aa, 0x68b4, 0x0, 0x0);
        gbc.writeMem(0xc3f4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x633f, gbc.sp());
        EXPECT(0xc3f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3f4));
        EXPECT(0x9b, gbc.readMem(0xc3f5));
        // CB 9B 00E2
        gbc.setState(0xa2f, 0xb673, 0x2d10, 0xdb94, 0x5b5b, 0xa95f, 0x0, 0x1);
        gbc.writeMem(0xa2f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xb673, gbc.sp());
        EXPECT(0xa31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00E3
        gbc.setState(0x2f7d, 0xc4c9, 0xd440, 0x6428, 0xb493, 0xff6e, 0x0, 0x1);
        gbc.writeMem(0x2f7d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc4c9, gbc.sp());
        EXPECT(0x2f7f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00E4
        gbc.setState(0x1a36, 0x5e62, 0x7f00, 0x1184, 0xe7f6, 0x37e5, 0x0, 0x0);
        gbc.writeMem(0x1a36, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5e62, gbc.sp());
        EXPECT(0x1a38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00E5
        gbc.setState(0xcc87, 0x5195, 0x44f0, 0xb2d0, 0x2ce6, 0xf23e, 0x1, 0x1);
        gbc.writeMem(0xcc87, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x5195, gbc.sp());
        EXPECT(0xcc89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc87));
        EXPECT(0x9b, gbc.readMem(0xcc88));
        // CB 9B 00E6
        gbc.setState(0x610d, 0xfd9c, 0x3dd0, 0xeb0a, 0x80b2, 0xfbe3, 0x0, 0x0);
        gbc.writeMem(0x610d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xfd9c, gbc.sp());
        EXPECT(0x610f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00E7
        gbc.setState(0x2644, 0x8ba, 0x8760, 0x311a, 0x9ce3, 0x8035, 0x0, 0x0);
        gbc.writeMem(0x2644, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x8ba, gbc.sp());
        EXPECT(0x2646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00E8
        gbc.setState(0x38fa, 0x2ccc, 0x370, 0x6fdf, 0x6b67, 0x8d21, 0x0, 0x1);
        gbc.writeMem(0x38fa, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2ccc, gbc.sp());
        EXPECT(0x38fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00EB
        gbc.setState(0x7d6b, 0x8382, 0x6d50, 0x6f59, 0x62bd, 0x3a87, 0x0, 0x0);
        gbc.writeMem(0x7d6b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x8382, gbc.sp());
        EXPECT(0x7d6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00EC
        gbc.setState(0xa99, 0xcd56, 0x4610, 0x370, 0x11da, 0x1a41, 0x0, 0x0);
        gbc.writeMem(0xa99, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xcd56, gbc.sp());
        EXPECT(0xa9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00EE
        gbc.setState(0x9bf3, 0x2689, 0x8660, 0x722c, 0x71a8, 0x2be6, 0x1, 0x1);
        gbc.writeMem(0x9bf3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x2689, gbc.sp());
        EXPECT(0x9bf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bf3));
        EXPECT(0x9b, gbc.readMem(0x9bf4));
        // CB 9B 00EF
        gbc.setState(0x1863, 0xb793, 0xe950, 0xe664, 0x565a, 0xffdf, 0x1, 0x1);
        gbc.writeMem(0x1863, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb793, gbc.sp());
        EXPECT(0x1865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00F0
        gbc.setState(0x6629, 0xe1a1, 0xdac0, 0x52f1, 0x7834, 0xccbf, 0x0, 0x1);
        gbc.writeMem(0x6629, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe1a1, gbc.sp());
        EXPECT(0x662b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00F1
        gbc.setState(0xdf8b, 0xc180, 0x67b0, 0x38d3, 0x5847, 0xf2e8, 0x1, 0x1);
        gbc.writeMem(0xdf8b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc180, gbc.sp());
        EXPECT(0xdf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf8b));
        EXPECT(0x9b, gbc.readMem(0xdf8c));
        // CB 9B 00F2
        gbc.setState(0x2fa5, 0x81bd, 0x15f0, 0xeb9e, 0x98ef, 0x879d, 0x0, 0x0);
        gbc.writeMem(0x2fa5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x81bd, gbc.sp());
        EXPECT(0x2fa7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00F3
        gbc.setState(0x726, 0x82fa, 0x7580, 0x865c, 0x6739, 0x4e59, 0x1, 0x1);
        gbc.writeMem(0x726, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x82fa, gbc.sp());
        EXPECT(0x728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00F4
        gbc.setState(0xe80, 0x9c96, 0x47b0, 0xba3a, 0x4ac, 0x7b86, 0x0, 0x1);
        gbc.writeMem(0xe80, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9c96, gbc.sp());
        EXPECT(0xe82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00F5
        gbc.setState(0x2db5, 0x1d2d, 0xbdd0, 0x8714, 0x6497, 0x323b, 0x0, 0x1);
        gbc.writeMem(0x2db5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x1d2d, gbc.sp());
        EXPECT(0x2db7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00F6
        gbc.setState(0xe4b6, 0x4f54, 0x6a90, 0x6259, 0x8bb7, 0x2ed0, 0x1, 0x1);
        gbc.writeMem(0xe4b6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4f54, gbc.sp());
        EXPECT(0xe4b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4b6));
        EXPECT(0x9b, gbc.readMem(0xe4b7));
        // CB 9B 00F7
        gbc.setState(0x50c4, 0x96b0, 0x17e0, 0x3ce9, 0x3edf, 0x4d5a, 0x0, 0x0);
        gbc.writeMem(0x50c4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x96b0, gbc.sp());
        EXPECT(0x50c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00F8
        gbc.setState(0xb971, 0xe0ec, 0x3ff0, 0xb205, 0xd6bd, 0x1119, 0x0, 0x0);
        gbc.writeMem(0xb971, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe0ec, gbc.sp());
        EXPECT(0xb973, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb971));
        EXPECT(0x9b, gbc.readMem(0xb972));
        // CB 9B 00F9
        gbc.setState(0xac51, 0x78df, 0x98e0, 0xbb79, 0xbe63, 0x7f53, 0x1, 0x0);
        gbc.writeMem(0xac51, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x78df, gbc.sp());
        EXPECT(0xac53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac51));
        EXPECT(0x9b, gbc.readMem(0xac52));
        // CB 9B 00FA
        gbc.setState(0x4a90, 0xae81, 0xc540, 0x8c5c, 0xf582, 0xe75e, 0x1, 0x1);
        gbc.writeMem(0x4a90, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xae81, gbc.sp());
        EXPECT(0x4a92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00FB
        gbc.setState(0x1bf0, 0x38d3, 0x4050, 0x7964, 0x9310, 0x77f6, 0x1, 0x0);
        gbc.writeMem(0x1bf0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x38d3, gbc.sp());
        EXPECT(0x1bf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00FC
        gbc.setState(0x22c2, 0x84d3, 0x2b20, 0x61ac, 0x79bb, 0x6416, 0x1, 0x1);
        gbc.writeMem(0x22c2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x84d3, gbc.sp());
        EXPECT(0x22c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 00FD
        gbc.setState(0xc63a, 0xb60e, 0x1a30, 0xfff0, 0x115c, 0xd893, 0x1, 0x1);
        gbc.writeMem(0xc63a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xb60e, gbc.sp());
        EXPECT(0xc63c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc63a));
        EXPECT(0x9b, gbc.readMem(0xc63b));
        // CB 9B 00FE
        gbc.setState(0x6b, 0x9967, 0x7a70, 0xaab0, 0x9224, 0xbc1f, 0x0, 0x0);
        gbc.writeMem(0x6b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x9967, gbc.sp());
        EXPECT(0x6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 00FF
        gbc.setState(0x82fc, 0xf045, 0x7100, 0xed1f, 0xc885, 0xe1d9, 0x0, 0x1);
        gbc.writeMem(0x82fc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf045, gbc.sp());
        EXPECT(0x82fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x82fc));
        EXPECT(0x9b, gbc.readMem(0x82fd));
        // CB 9B 0100
        gbc.setState(0xa0a9, 0x5bd5, 0x4240, 0x2063, 0x8027, 0x7168, 0x1, 0x0);
        gbc.writeMem(0xa0a9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5bd5, gbc.sp());
        EXPECT(0xa0ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0a9));
        EXPECT(0x9b, gbc.readMem(0xa0aa));
        // CB 9B 0101
        gbc.setState(0xc110, 0x1524, 0x7b20, 0xb280, 0xa4b7, 0x3e34, 0x1, 0x1);
        gbc.writeMem(0xc110, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x1524, gbc.sp());
        EXPECT(0xc112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc110));
        EXPECT(0x9b, gbc.readMem(0xc111));
        // CB 9B 0104
        gbc.setState(0x33cf, 0xa30e, 0x1db0, 0x94ca, 0x78c4, 0x8766, 0x0, 0x0);
        gbc.writeMem(0x33cf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xa30e, gbc.sp());
        EXPECT(0x33d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0105
        gbc.setState(0x791d, 0xe76e, 0x29d0, 0x665f, 0x2d2c, 0xc9ee, 0x1, 0x0);
        gbc.writeMem(0x791d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe76e, gbc.sp());
        EXPECT(0x791f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0106
        gbc.setState(0x1a0f, 0x3893, 0x1b0, 0xfc76, 0x2ed9, 0x5a56, 0x1, 0x1);
        gbc.writeMem(0x1a0f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x3893, gbc.sp());
        EXPECT(0x1a11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0107
        gbc.setState(0xdf7e, 0x881b, 0x40a0, 0x26c3, 0x917e, 0xa240, 0x0, 0x0);
        gbc.writeMem(0xdf7e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x881b, gbc.sp());
        EXPECT(0xdf80, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf7e));
        EXPECT(0x9b, gbc.readMem(0xdf7f));
        // CB 9B 0108
        gbc.setState(0x13c4, 0xf637, 0x8c80, 0xcb92, 0xeeaa, 0x964d, 0x1, 0x0);
        gbc.writeMem(0x13c4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf637, gbc.sp());
        EXPECT(0x13c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0109
        gbc.setState(0x9e53, 0x9a9b, 0x91e0, 0x7b20, 0xa213, 0x7235, 0x1, 0x0);
        gbc.writeMem(0x9e53, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9a9b, gbc.sp());
        EXPECT(0x9e55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e53));
        EXPECT(0x9b, gbc.readMem(0x9e54));
        // CB 9B 010A
        gbc.setState(0x22e4, 0x10fb, 0xe410, 0xf6da, 0xb01e, 0xb157, 0x1, 0x1);
        gbc.writeMem(0x22e4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x10fb, gbc.sp());
        EXPECT(0x22e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 010B
        gbc.setState(0xb62b, 0xd70c, 0xb2f0, 0x20b8, 0xc6a1, 0x8505, 0x0, 0x1);
        gbc.writeMem(0xb62b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xd70c, gbc.sp());
        EXPECT(0xb62d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb62b));
        EXPECT(0x9b, gbc.readMem(0xb62c));
        // CB 9B 010C
        gbc.setState(0x57a4, 0x1b3e, 0x7380, 0x587a, 0xfd7b, 0x6cfc, 0x1, 0x1);
        gbc.writeMem(0x57a4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1b3e, gbc.sp());
        EXPECT(0x57a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 010D
        gbc.setState(0x5955, 0xe2e5, 0x8b60, 0xff85, 0x98a3, 0xb7f9, 0x0, 0x0);
        gbc.writeMem(0x5955, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xe2e5, gbc.sp());
        EXPECT(0x5957, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 010E
        gbc.setState(0x858f, 0x8a27, 0x4dc0, 0xdbb2, 0xbe1e, 0xe73a, 0x0, 0x0);
        gbc.writeMem(0x858f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8a27, gbc.sp());
        EXPECT(0x8591, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x858f));
        EXPECT(0x9b, gbc.readMem(0x8590));
        // CB 9B 010F
        gbc.setState(0xb14f, 0xa997, 0xc900, 0x28b0, 0x25bb, 0x277d, 0x0, 0x0);
        gbc.writeMem(0xb14f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xa997, gbc.sp());
        EXPECT(0xb151, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb14f));
        EXPECT(0x9b, gbc.readMem(0xb150));
        // CB 9B 0110
        gbc.setState(0x35af, 0xaae1, 0x16d0, 0xac3f, 0x6af1, 0x7ada, 0x1, 0x0);
        gbc.writeMem(0x35af, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xaae1, gbc.sp());
        EXPECT(0x35b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0111
        gbc.setState(0x7bc9, 0xb52c, 0x75c0, 0x5f37, 0xa551, 0x316b, 0x1, 0x1);
        gbc.writeMem(0x7bc9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xb52c, gbc.sp());
        EXPECT(0x7bcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0113
        gbc.setState(0xe17b, 0xb5d0, 0x5c00, 0xc6f6, 0x2b53, 0xdd79, 0x0, 0x0);
        gbc.writeMem(0xe17b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb5d0, gbc.sp());
        EXPECT(0xe17d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe17b));
        EXPECT(0x9b, gbc.readMem(0xe17c));
        // CB 9B 0114
        gbc.setState(0xae1d, 0x3195, 0x2ef0, 0xd934, 0xe4a4, 0xd7a1, 0x0, 0x0);
        gbc.writeMem(0xae1d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3195, gbc.sp());
        EXPECT(0xae1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae1d));
        EXPECT(0x9b, gbc.readMem(0xae1e));
        // CB 9B 0115
        gbc.setState(0xa69c, 0x242, 0x9250, 0x2f6c, 0x2183, 0xac7, 0x1, 0x1);
        gbc.writeMem(0xa69c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x242, gbc.sp());
        EXPECT(0xa69e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa69c));
        EXPECT(0x9b, gbc.readMem(0xa69d));
        // CB 9B 0117
        gbc.setState(0xba47, 0x7583, 0x98e0, 0x8f77, 0x7836, 0xcbb, 0x1, 0x1);
        gbc.writeMem(0xba47, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7583, gbc.sp());
        EXPECT(0xba49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba47));
        EXPECT(0x9b, gbc.readMem(0xba48));
        // CB 9B 0118
        gbc.setState(0xb4b4, 0x3f9b, 0x7d90, 0x952e, 0x59a3, 0xac2b, 0x1, 0x1);
        gbc.writeMem(0xb4b4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3f9b, gbc.sp());
        EXPECT(0xb4b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4b4));
        EXPECT(0x9b, gbc.readMem(0xb4b5));
        // CB 9B 0119
        gbc.setState(0xbf56, 0xb081, 0x1c10, 0x8eb9, 0x17cd, 0x681, 0x0, 0x1);
        gbc.writeMem(0xbf56, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xb081, gbc.sp());
        EXPECT(0xbf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbf56));
        EXPECT(0x9b, gbc.readMem(0xbf57));
        // CB 9B 011A
        gbc.setState(0x4d39, 0x11de, 0x82c0, 0xb12b, 0xb0ba, 0x10d3, 0x1, 0x1);
        gbc.writeMem(0x4d39, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x11de, gbc.sp());
        EXPECT(0x4d3b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 011B
        gbc.setState(0xadfc, 0xe6dd, 0xda70, 0x8841, 0xe322, 0x6a37, 0x0, 0x1);
        gbc.writeMem(0xadfc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe6dd, gbc.sp());
        EXPECT(0xadfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xadfc));
        EXPECT(0x9b, gbc.readMem(0xadfd));
        // CB 9B 011C
        gbc.setState(0x5550, 0x798, 0x9c60, 0xbff, 0x6479, 0x9a08, 0x1, 0x0);
        gbc.writeMem(0x5550, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x798, gbc.sp());
        EXPECT(0x5552, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 011D
        gbc.setState(0x5e9, 0x3f3c, 0xd170, 0x5e96, 0xac04, 0x977c, 0x1, 0x0);
        gbc.writeMem(0x5e9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x3f3c, gbc.sp());
        EXPECT(0x5eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 011E
        gbc.setState(0x5980, 0xefa2, 0x78a0, 0x8ad, 0xa463, 0x44a6, 0x0, 0x0);
        gbc.writeMem(0x5980, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xefa2, gbc.sp());
        EXPECT(0x5982, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 011F
        gbc.setState(0xe1c8, 0x595d, 0xbe40, 0x40e, 0xef5e, 0xc831, 0x0, 0x1);
        gbc.writeMem(0xe1c8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x595d, gbc.sp());
        EXPECT(0xe1ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe1c8));
        EXPECT(0x9b, gbc.readMem(0xe1c9));
        // CB 9B 0121
        gbc.setState(0x5955, 0xc126, 0xd040, 0xc2ec, 0xc1a2, 0xc67f, 0x1, 0x1);
        gbc.writeMem(0x5955, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xc126, gbc.sp());
        EXPECT(0x5957, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0122
        gbc.setState(0x7673, 0xd6de, 0xb220, 0xe08, 0x5dc2, 0x448b, 0x1, 0x1);
        gbc.writeMem(0x7673, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xd6de, gbc.sp());
        EXPECT(0x7675, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0123
        gbc.setState(0xe770, 0x6a91, 0x48e0, 0x1c1c, 0xf618, 0xfbe3, 0x0, 0x1);
        gbc.writeMem(0xe770, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x6a91, gbc.sp());
        EXPECT(0xe772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe770));
        EXPECT(0x9b, gbc.readMem(0xe771));
        // CB 9B 0124
        gbc.setState(0xe6a2, 0xba5, 0x5f00, 0x82f8, 0x791, 0x309a, 0x0, 0x0);
        gbc.writeMem(0xe6a2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xba5, gbc.sp());
        EXPECT(0xe6a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe6a2));
        EXPECT(0x9b, gbc.readMem(0xe6a3));
        // CB 9B 0125
        gbc.setState(0xb483, 0x9b21, 0x6b0, 0xec52, 0xf6a5, 0xa60f, 0x0, 0x0);
        gbc.writeMem(0xb483, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9b21, gbc.sp());
        EXPECT(0xb485, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb483));
        EXPECT(0x9b, gbc.readMem(0xb484));
        // CB 9B 0126
        gbc.setState(0x60f4, 0xb2a4, 0xb830, 0xdc81, 0xf54f, 0xee7b, 0x1, 0x0);
        gbc.writeMem(0x60f4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb2a4, gbc.sp());
        EXPECT(0x60f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0127
        gbc.setState(0x8c32, 0x3c76, 0x6730, 0x30c1, 0x2882, 0x7eb7, 0x1, 0x1);
        gbc.writeMem(0x8c32, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3c76, gbc.sp());
        EXPECT(0x8c34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c32));
        EXPECT(0x9b, gbc.readMem(0x8c33));
        // CB 9B 0128
        gbc.setState(0x5223, 0x7ce5, 0xed0, 0xc42d, 0x4ccf, 0xe6ee, 0x1, 0x1);
        gbc.writeMem(0x5223, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7ce5, gbc.sp());
        EXPECT(0x5225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0129
        gbc.setState(0x5468, 0xbcef, 0x5e10, 0x2248, 0x7426, 0x9575, 0x1, 0x1);
        gbc.writeMem(0x5468, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xbcef, gbc.sp());
        EXPECT(0x546a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 012A
        gbc.setState(0xb542, 0x394a, 0xe090, 0xbb3a, 0xae53, 0x9fd9, 0x0, 0x0);
        gbc.writeMem(0xb542, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x394a, gbc.sp());
        EXPECT(0xb544, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb542));
        EXPECT(0x9b, gbc.readMem(0xb543));
        // CB 9B 012B
        gbc.setState(0x48e6, 0xa335, 0xdb90, 0xe6ad, 0x59c8, 0xaf0d, 0x1, 0x0);
        gbc.writeMem(0x48e6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa335, gbc.sp());
        EXPECT(0x48e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 012D
        gbc.setState(0x8a08, 0xf13b, 0x5440, 0xa3f3, 0x25df, 0x3974, 0x0, 0x0);
        gbc.writeMem(0x8a08, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf13b, gbc.sp());
        EXPECT(0x8a0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a08));
        EXPECT(0x9b, gbc.readMem(0x8a09));
        // CB 9B 012E
        gbc.setState(0x5c12, 0xb14f, 0xf8d0, 0x4848, 0x149f, 0x84, 0x0, 0x1);
        gbc.writeMem(0x5c12, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb14f, gbc.sp());
        EXPECT(0x5c14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 012F
        gbc.setState(0x7065, 0xdf30, 0xaef0, 0x69b4, 0x95e5, 0x6416, 0x1, 0x1);
        gbc.writeMem(0x7065, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xdf30, gbc.sp());
        EXPECT(0x7067, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0130
        gbc.setState(0xad50, 0xcec9, 0xefe0, 0x6ff, 0x531a, 0x7b45, 0x1, 0x0);
        gbc.writeMem(0xad50, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xcec9, gbc.sp());
        EXPECT(0xad52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad50));
        EXPECT(0x9b, gbc.readMem(0xad51));
        // CB 9B 0131
        gbc.setState(0xa08b, 0x8ae5, 0x8240, 0x2c5, 0x3087, 0x232, 0x1, 0x0);
        gbc.writeMem(0xa08b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8ae5, gbc.sp());
        EXPECT(0xa08d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa08b));
        EXPECT(0x9b, gbc.readMem(0xa08c));
        // CB 9B 0132
        gbc.setState(0x1cf7, 0x9626, 0x58d0, 0x8a96, 0x5622, 0x5da9, 0x1, 0x1);
        gbc.writeMem(0x1cf7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x9626, gbc.sp());
        EXPECT(0x1cf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0133
        gbc.setState(0xba78, 0x5a20, 0xb070, 0xcb48, 0xcd3f, 0x191d, 0x1, 0x1);
        gbc.writeMem(0xba78, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x5a20, gbc.sp());
        EXPECT(0xba7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba78));
        EXPECT(0x9b, gbc.readMem(0xba79));
        // CB 9B 0134
        gbc.setState(0x8d27, 0x1d4c, 0xcad0, 0xf996, 0xcdca, 0x425d, 0x1, 0x0);
        gbc.writeMem(0x8d27, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1d4c, gbc.sp());
        EXPECT(0x8d29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d27));
        EXPECT(0x9b, gbc.readMem(0x8d28));
        // CB 9B 0135
        gbc.setState(0x1d25, 0xab9b, 0x7970, 0xaeb9, 0x5c35, 0x406f, 0x1, 0x1);
        gbc.writeMem(0x1d25, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xab9b, gbc.sp());
        EXPECT(0x1d27, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0136
        gbc.setState(0xa60f, 0x57e9, 0x6910, 0x9048, 0xd7ff, 0x36fa, 0x0, 0x0);
        gbc.writeMem(0xa60f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x57e9, gbc.sp());
        EXPECT(0xa611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa60f));
        EXPECT(0x9b, gbc.readMem(0xa610));
        // CB 9B 0137
        gbc.setState(0x9d03, 0xebc6, 0x70d0, 0x44a7, 0xc182, 0x9dc3, 0x0, 0x1);
        gbc.writeMem(0x9d03, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xebc6, gbc.sp());
        EXPECT(0x9d05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d03));
        EXPECT(0x9b, gbc.readMem(0x9d04));
        // CB 9B 0138
        gbc.setState(0xc4c5, 0x9994, 0xa0a0, 0x80cf, 0xa1f3, 0xdf85, 0x1, 0x0);
        gbc.writeMem(0xc4c5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9994, gbc.sp());
        EXPECT(0xc4c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4c5));
        EXPECT(0x9b, gbc.readMem(0xc4c6));
        // CB 9B 0139
        gbc.setState(0x1a5a, 0x98c4, 0x1580, 0x57d2, 0x51d9, 0xbb04, 0x0, 0x1);
        gbc.writeMem(0x1a5a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x98c4, gbc.sp());
        EXPECT(0x1a5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 013A
        gbc.setState(0x406b, 0x9a63, 0xccc0, 0xed51, 0x3d56, 0xcc95, 0x1, 0x1);
        gbc.writeMem(0x406b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9a63, gbc.sp());
        EXPECT(0x406d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 013B
        gbc.setState(0xde2f, 0xc2d1, 0x1160, 0xf8aa, 0x3ba2, 0x8e34, 0x1, 0x0);
        gbc.writeMem(0xde2f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xc2d1, gbc.sp());
        EXPECT(0xde31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde2f));
        EXPECT(0x9b, gbc.readMem(0xde30));
        // CB 9B 013C
        gbc.setState(0x6d7, 0xa222, 0xd610, 0xd4f5, 0x465e, 0x84c5, 0x0, 0x0);
        gbc.writeMem(0x6d7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xa222, gbc.sp());
        EXPECT(0x6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 013D
        gbc.setState(0x9435, 0xd496, 0x7ff0, 0x240, 0x1550, 0xe977, 0x1, 0x1);
        gbc.writeMem(0x9435, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd496, gbc.sp());
        EXPECT(0x9437, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9435));
        EXPECT(0x9b, gbc.readMem(0x9436));
        // CB 9B 013E
        gbc.setState(0x42b8, 0xa9d3, 0xfa70, 0x9ef8, 0x11cb, 0x8b0f, 0x1, 0x1);
        gbc.writeMem(0x42b8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xa9d3, gbc.sp());
        EXPECT(0x42ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 013F
        gbc.setState(0xc5cf, 0xa0c8, 0xbc0, 0x501c, 0xd10a, 0xf79e, 0x1, 0x0);
        gbc.writeMem(0xc5cf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa0c8, gbc.sp());
        EXPECT(0xc5d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5cf));
        EXPECT(0x9b, gbc.readMem(0xc5d0));
        // CB 9B 0140
        gbc.setState(0x4825, 0xd742, 0x2f00, 0x8f36, 0x4a95, 0x15ac, 0x0, 0x1);
        gbc.writeMem(0x4825, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd742, gbc.sp());
        EXPECT(0x4827, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0141
        gbc.setState(0x3944, 0xa865, 0x1f90, 0x942a, 0xdeed, 0xd1d2, 0x1, 0x0);
        gbc.writeMem(0x3944, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xa865, gbc.sp());
        EXPECT(0x3946, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0142
        gbc.setState(0x720d, 0x5b97, 0xa690, 0x2a79, 0x77e, 0xce86, 0x1, 0x0);
        gbc.writeMem(0x720d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5b97, gbc.sp());
        EXPECT(0x720f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0143
        gbc.setState(0xed74, 0x88b8, 0x8390, 0x2186, 0x9ceb, 0xa0a7, 0x0, 0x1);
        gbc.writeMem(0xed74, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x88b8, gbc.sp());
        EXPECT(0xed76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xed74));
        EXPECT(0x9b, gbc.readMem(0xed75));
        // CB 9B 0144
        gbc.setState(0xc7a, 0xecc1, 0xcf00, 0xa531, 0x2c79, 0x4b5c, 0x1, 0x1);
        gbc.writeMem(0xc7a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xecc1, gbc.sp());
        EXPECT(0xc7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0145
        gbc.setState(0x78cd, 0x95ce, 0x24e0, 0xabe2, 0xcb3d, 0xc02d, 0x1, 0x0);
        gbc.writeMem(0x78cd, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x95ce, gbc.sp());
        EXPECT(0x78cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0146
        gbc.setState(0x7e2f, 0x33f7, 0xbff0, 0x528e, 0xe76, 0x8f12, 0x1, 0x0);
        gbc.writeMem(0x7e2f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x33f7, gbc.sp());
        EXPECT(0x7e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0147
        gbc.setState(0x84f2, 0x1513, 0xd540, 0x541d, 0x37c3, 0x2d41, 0x0, 0x1);
        gbc.writeMem(0x84f2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1513, gbc.sp());
        EXPECT(0x84f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84f2));
        EXPECT(0x9b, gbc.readMem(0x84f3));
        // CB 9B 0148
        gbc.setState(0x56c2, 0xa797, 0x9fe0, 0xa67f, 0x7d58, 0x3bd9, 0x0, 0x1);
        gbc.writeMem(0x56c2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa797, gbc.sp());
        EXPECT(0x56c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0149
        gbc.setState(0x2f7f, 0x6e39, 0xf1a0, 0x89d3, 0xeb4f, 0x9c56, 0x0, 0x0);
        gbc.writeMem(0x2f7f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6e39, gbc.sp());
        EXPECT(0x2f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 014A
        gbc.setState(0x2d1d, 0xbc2f, 0x4160, 0x4ba6, 0x234d, 0x515e, 0x1, 0x0);
        gbc.writeMem(0x2d1d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xbc2f, gbc.sp());
        EXPECT(0x2d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 014B
        gbc.setState(0xdc00, 0x8ca2, 0x5e80, 0xca6a, 0xb23c, 0xb174, 0x1, 0x0);
        gbc.writeMem(0xdc00, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x8ca2, gbc.sp());
        EXPECT(0xdc02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc00));
        EXPECT(0x9b, gbc.readMem(0xdc01));
        // CB 9B 014C
        gbc.setState(0x22b8, 0xb79e, 0x7a40, 0xfc06, 0x8a43, 0xec22, 0x1, 0x1);
        gbc.writeMem(0x22b8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb79e, gbc.sp());
        EXPECT(0x22ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 014D
        gbc.setState(0x78bc, 0xb7e5, 0x28f0, 0x288a, 0x49e5, 0x3598, 0x1, 0x0);
        gbc.writeMem(0x78bc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xb7e5, gbc.sp());
        EXPECT(0x78be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 014E
        gbc.setState(0x8262, 0xbbda, 0x75b0, 0xf469, 0xc5fa, 0x48d2, 0x1, 0x1);
        gbc.writeMem(0x8262, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xbbda, gbc.sp());
        EXPECT(0x8264, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8262));
        EXPECT(0x9b, gbc.readMem(0x8263));
        // CB 9B 014F
        gbc.setState(0x6b0b, 0x7b6e, 0xef80, 0x46e4, 0xbf27, 0x1a6e, 0x0, 0x0);
        gbc.writeMem(0x6b0b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7b6e, gbc.sp());
        EXPECT(0x6b0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0150
        gbc.setState(0xd3c, 0xa25a, 0xad50, 0x25df, 0x6d79, 0xe901, 0x0, 0x0);
        gbc.writeMem(0xd3c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa25a, gbc.sp());
        EXPECT(0xd3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0151
        gbc.setState(0x67e5, 0xc1fe, 0xc850, 0xab04, 0x876e, 0xb51e, 0x1, 0x1);
        gbc.writeMem(0x67e5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc1fe, gbc.sp());
        EXPECT(0x67e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0152
        gbc.setState(0x5755, 0xcf41, 0xde50, 0x8379, 0xcdd, 0xf16d, 0x0, 0x0);
        gbc.writeMem(0x5755, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcf41, gbc.sp());
        EXPECT(0x5757, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0153
        gbc.setState(0xb2c0, 0x55b, 0xd930, 0x4a53, 0x8fee, 0x4500, 0x0, 0x0);
        gbc.writeMem(0xb2c0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x55b, gbc.sp());
        EXPECT(0xb2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb2c0));
        EXPECT(0x9b, gbc.readMem(0xb2c1));
        // CB 9B 0154
        gbc.setState(0xdb9, 0x79b, 0x6a70, 0x2751, 0xf150, 0xae73, 0x1, 0x1);
        gbc.writeMem(0xdb9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x79b, gbc.sp());
        EXPECT(0xdbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0156
        gbc.setState(0x9f67, 0x847b, 0x1200, 0xc2e1, 0x4d4a, 0x6f95, 0x0, 0x0);
        gbc.writeMem(0x9f67, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x847b, gbc.sp());
        EXPECT(0x9f69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f67));
        EXPECT(0x9b, gbc.readMem(0x9f68));
        // CB 9B 0157
        gbc.setState(0xc881, 0x771d, 0x70b0, 0x75, 0x84dc, 0x676d, 0x0, 0x1);
        gbc.writeMem(0xc881, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x771d, gbc.sp());
        EXPECT(0xc883, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc881));
        EXPECT(0x9b, gbc.readMem(0xc882));
        // CB 9B 0158
        gbc.setState(0xe7b0, 0x6581, 0xe5a0, 0xe633, 0xb424, 0x2ae, 0x1, 0x0);
        gbc.writeMem(0xe7b0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x6581, gbc.sp());
        EXPECT(0xe7b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7b0));
        EXPECT(0x9b, gbc.readMem(0xe7b1));
        // CB 9B 0159
        gbc.setState(0x9da3, 0xd0c6, 0xb970, 0x735d, 0xd161, 0xdfa1, 0x1, 0x0);
        gbc.writeMem(0x9da3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd0c6, gbc.sp());
        EXPECT(0x9da5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9da3));
        EXPECT(0x9b, gbc.readMem(0x9da4));
        // CB 9B 015A
        gbc.setState(0xdc8d, 0x1892, 0x9ec0, 0x1b7c, 0x103d, 0xd4f6, 0x0, 0x1);
        gbc.writeMem(0xdc8d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1892, gbc.sp());
        EXPECT(0xdc8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc8d));
        EXPECT(0x9b, gbc.readMem(0xdc8e));
        // CB 9B 015B
        gbc.setState(0xe75a, 0x66f2, 0x2d80, 0xe8c8, 0xedac, 0xf269, 0x1, 0x1);
        gbc.writeMem(0xe75a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x66f2, gbc.sp());
        EXPECT(0xe75c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe75a));
        EXPECT(0x9b, gbc.readMem(0xe75b));
        // CB 9B 015C
        gbc.setState(0xb3bd, 0xee0e, 0xcd80, 0xb585, 0x40cf, 0xbfa9, 0x1, 0x1);
        gbc.writeMem(0xb3bd, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xee0e, gbc.sp());
        EXPECT(0xb3bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3bd));
        EXPECT(0x9b, gbc.readMem(0xb3be));
        // CB 9B 015D
        gbc.setState(0xe95c, 0xc88f, 0xeb80, 0x59d2, 0x60f7, 0xdb9a, 0x1, 0x0);
        gbc.writeMem(0xe95c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xc88f, gbc.sp());
        EXPECT(0xe95e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe95c));
        EXPECT(0x9b, gbc.readMem(0xe95d));
        // CB 9B 015F
        gbc.setState(0x6397, 0x44d5, 0x9ea0, 0x4e5f, 0x3b27, 0x7693, 0x0, 0x1);
        gbc.writeMem(0x6397, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x44d5, gbc.sp());
        EXPECT(0x6399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0160
        gbc.setState(0xb273, 0x66e8, 0x8a50, 0xb055, 0x8fa7, 0x8280, 0x1, 0x0);
        gbc.writeMem(0xb273, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x66e8, gbc.sp());
        EXPECT(0xb275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb273));
        EXPECT(0x9b, gbc.readMem(0xb274));
        // CB 9B 0161
        gbc.setState(0x60ca, 0x3bbf, 0xac50, 0x94af, 0x23c7, 0xb87a, 0x1, 0x0);
        gbc.writeMem(0x60ca, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x3bbf, gbc.sp());
        EXPECT(0x60cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0162
        gbc.setState(0x6154, 0x1102, 0x5a00, 0x97a1, 0x6bf3, 0x58ff, 0x0, 0x1);
        gbc.writeMem(0x6154, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x1102, gbc.sp());
        EXPECT(0x6156, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0163
        gbc.setState(0x8e64, 0x91bd, 0xaa30, 0x9b89, 0x3726, 0x2209, 0x1, 0x1);
        gbc.writeMem(0x8e64, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x91bd, gbc.sp());
        EXPECT(0x8e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e64));
        EXPECT(0x9b, gbc.readMem(0x8e65));
        // CB 9B 0164
        gbc.setState(0xa867, 0x8db1, 0x57c0, 0xb527, 0xdd32, 0x73a, 0x0, 0x0);
        gbc.writeMem(0xa867, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x8db1, gbc.sp());
        EXPECT(0xa869, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa867));
        EXPECT(0x9b, gbc.readMem(0xa868));
        // CB 9B 0165
        gbc.setState(0x74bf, 0xdc24, 0xf950, 0x815f, 0x5fb1, 0x9754, 0x1, 0x1);
        gbc.writeMem(0x74bf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xdc24, gbc.sp());
        EXPECT(0x74c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0167
        gbc.setState(0x91c5, 0x8cd9, 0x2d50, 0x5999, 0x5deb, 0x8dcc, 0x0, 0x0);
        gbc.writeMem(0x91c5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8cd9, gbc.sp());
        EXPECT(0x91c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91c5));
        EXPECT(0x9b, gbc.readMem(0x91c6));
        // CB 9B 0168
        gbc.setState(0xd7c8, 0xd28a, 0xdb60, 0x1b70, 0x1ae6, 0x8860, 0x1, 0x0);
        gbc.writeMem(0xd7c8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xd28a, gbc.sp());
        EXPECT(0xd7ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7c8));
        EXPECT(0x9b, gbc.readMem(0xd7c9));
        // CB 9B 0169
        gbc.setState(0x17d, 0x4fe5, 0x4d00, 0xed72, 0x8d9d, 0x4ea0, 0x0, 0x1);
        gbc.writeMem(0x17d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4fe5, gbc.sp());
        EXPECT(0x17f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 016A
        gbc.setState(0xe8f8, 0x76b3, 0x3870, 0x1792, 0x196, 0x57e5, 0x0, 0x1);
        gbc.writeMem(0xe8f8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x76b3, gbc.sp());
        EXPECT(0xe8fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8f8));
        EXPECT(0x9b, gbc.readMem(0xe8f9));
        // CB 9B 016B
        gbc.setState(0x6a0a, 0x9ad7, 0x8ce0, 0x3f26, 0xcdd0, 0x8626, 0x0, 0x0);
        gbc.writeMem(0x6a0a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9ad7, gbc.sp());
        EXPECT(0x6a0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 016C
        gbc.setState(0x8d9f, 0xfa34, 0xa880, 0xc904, 0x6a62, 0x9a16, 0x1, 0x1);
        gbc.writeMem(0x8d9f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xfa34, gbc.sp());
        EXPECT(0x8da1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d9f));
        EXPECT(0x9b, gbc.readMem(0x8da0));
        // CB 9B 016D
        gbc.setState(0x795a, 0x15ef, 0xdbe0, 0xa639, 0x24a1, 0xb739, 0x1, 0x0);
        gbc.writeMem(0x795a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x15ef, gbc.sp());
        EXPECT(0x795c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 016E
        gbc.setState(0x39ab, 0x8207, 0x4e80, 0xd4cb, 0x6760, 0xf1c3, 0x1, 0x0);
        gbc.writeMem(0x39ab, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8207, gbc.sp());
        EXPECT(0x39ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 016F
        gbc.setState(0xe277, 0xd14a, 0x9080, 0xdc37, 0x9be9, 0x1a4e, 0x0, 0x1);
        gbc.writeMem(0xe277, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd14a, gbc.sp());
        EXPECT(0xe279, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe277));
        EXPECT(0x9b, gbc.readMem(0xe278));
        // CB 9B 0170
        gbc.setState(0x5efb, 0xad59, 0xc130, 0x2d45, 0x7e89, 0xd5bb, 0x1, 0x0);
        gbc.writeMem(0x5efb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xad59, gbc.sp());
        EXPECT(0x5efd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0171
        gbc.setState(0x32a9, 0x2fc1, 0x5b0, 0x12c0, 0x42ed, 0xd7fd, 0x0, 0x0);
        gbc.writeMem(0x32a9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2fc1, gbc.sp());
        EXPECT(0x32ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0172
        gbc.setState(0x961f, 0xf519, 0xa680, 0x4158, 0x94c2, 0xc9c3, 0x1, 0x1);
        gbc.writeMem(0x961f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf519, gbc.sp());
        EXPECT(0x9621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x961f));
        EXPECT(0x9b, gbc.readMem(0x9620));
        // CB 9B 0173
        gbc.setState(0xc356, 0xf6c7, 0x4330, 0xc148, 0xac50, 0x84f6, 0x1, 0x1);
        gbc.writeMem(0xc356, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xf6c7, gbc.sp());
        EXPECT(0xc358, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc356));
        EXPECT(0x9b, gbc.readMem(0xc357));
        // CB 9B 0174
        gbc.setState(0xd2a3, 0xc73, 0x3fa0, 0x9b17, 0x8fe3, 0xa826, 0x1, 0x0);
        gbc.writeMem(0xd2a3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xc73, gbc.sp());
        EXPECT(0xd2a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a3));
        EXPECT(0x9b, gbc.readMem(0xd2a4));
        // CB 9B 0175
        gbc.setState(0x51cd, 0x3b97, 0x8160, 0x2caf, 0x6670, 0x6abd, 0x1, 0x1);
        gbc.writeMem(0x51cd, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3b97, gbc.sp());
        EXPECT(0x51cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0176
        gbc.setState(0x53d0, 0x101e, 0x1fb0, 0x6451, 0xe3ed, 0xcf31, 0x0, 0x0);
        gbc.writeMem(0x53d0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x101e, gbc.sp());
        EXPECT(0x53d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0177
        gbc.setState(0x2cef, 0x73b2, 0xab80, 0xc582, 0xeda3, 0xcd8d, 0x1, 0x0);
        gbc.writeMem(0x2cef, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x73b2, gbc.sp());
        EXPECT(0x2cf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0178
        gbc.setState(0x5840, 0xa6e5, 0xc330, 0xf421, 0x37b8, 0xacee, 0x0, 0x1);
        gbc.writeMem(0x5840, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xa6e5, gbc.sp());
        EXPECT(0x5842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0179
        gbc.setState(0x66f3, 0x459, 0x21a0, 0x63ad, 0xc8e8, 0x9690, 0x1, 0x1);
        gbc.writeMem(0x66f3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x459, gbc.sp());
        EXPECT(0x66f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 017A
        gbc.setState(0xf12, 0xe516, 0x48f0, 0x29f2, 0x4ab8, 0x8819, 0x1, 0x1);
        gbc.writeMem(0xf12, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xe516, gbc.sp());
        EXPECT(0xf14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 017B
        gbc.setState(0x8d32, 0x5fdd, 0xe650, 0xc83f, 0x47de, 0xb2e1, 0x0, 0x0);
        gbc.writeMem(0x8d32, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x5fdd, gbc.sp());
        EXPECT(0x8d34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d32));
        EXPECT(0x9b, gbc.readMem(0x8d33));
        // CB 9B 017C
        gbc.setState(0xac95, 0xb47a, 0xd080, 0x2fa2, 0x1c2c, 0xe2cf, 0x0, 0x1);
        gbc.writeMem(0xac95, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xb47a, gbc.sp());
        EXPECT(0xac97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac95));
        EXPECT(0x9b, gbc.readMem(0xac96));
        // CB 9B 017D
        gbc.setState(0x9bc0, 0x23ab, 0x5be0, 0x97e6, 0x3cdf, 0x1494, 0x0, 0x0);
        gbc.writeMem(0x9bc0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x23ab, gbc.sp());
        EXPECT(0x9bc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bc0));
        EXPECT(0x9b, gbc.readMem(0x9bc1));
        // CB 9B 017E
        gbc.setState(0xc2f4, 0xe319, 0x3e70, 0x110a, 0xae19, 0x790d, 0x0, 0x1);
        gbc.writeMem(0xc2f4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe319, gbc.sp());
        EXPECT(0xc2f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2f4));
        EXPECT(0x9b, gbc.readMem(0xc2f5));
        // CB 9B 017F
        gbc.setState(0x8105, 0x72d0, 0x2330, 0xac97, 0xb8be, 0x883c, 0x0, 0x1);
        gbc.writeMem(0x8105, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x72d0, gbc.sp());
        EXPECT(0x8107, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8105));
        EXPECT(0x9b, gbc.readMem(0x8106));
        // CB 9B 0180
        gbc.setState(0xae49, 0x6706, 0xfec0, 0xfcd0, 0xf204, 0xdc37, 0x1, 0x0);
        gbc.writeMem(0xae49, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x6706, gbc.sp());
        EXPECT(0xae4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae49));
        EXPECT(0x9b, gbc.readMem(0xae4a));
        // CB 9B 0181
        gbc.setState(0xa2e2, 0x6edf, 0x30d0, 0x58ed, 0xde8f, 0xae4d, 0x0, 0x0);
        gbc.writeMem(0xa2e2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x6edf, gbc.sp());
        EXPECT(0xa2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2e2));
        EXPECT(0x9b, gbc.readMem(0xa2e3));
        // CB 9B 0182
        gbc.setState(0x3c52, 0x5fc0, 0xd2c0, 0x88a, 0x71c, 0x2e4, 0x0, 0x0);
        gbc.writeMem(0x3c52, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x5fc0, gbc.sp());
        EXPECT(0x3c54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0183
        gbc.setState(0xc6c8, 0xb704, 0xf470, 0xadca, 0x7168, 0xfce1, 0x0, 0x0);
        gbc.writeMem(0xc6c8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xb704, gbc.sp());
        EXPECT(0xc6ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6c8));
        EXPECT(0x9b, gbc.readMem(0xc6c9));
        // CB 9B 0184
        gbc.setState(0x8a25, 0xc969, 0x5430, 0xaf2c, 0x7450, 0xc40, 0x0, 0x0);
        gbc.writeMem(0x8a25, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xc969, gbc.sp());
        EXPECT(0x8a27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a25));
        EXPECT(0x9b, gbc.readMem(0x8a26));
        // CB 9B 0185
        gbc.setState(0x7d73, 0xdea8, 0x8660, 0x6e0d, 0x95a4, 0xd650, 0x1, 0x0);
        gbc.writeMem(0x7d73, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xdea8, gbc.sp());
        EXPECT(0x7d75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0186
        gbc.setState(0x392f, 0x107d, 0x54b0, 0x465e, 0x9fa1, 0x44e6, 0x1, 0x1);
        gbc.writeMem(0x392f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x107d, gbc.sp());
        EXPECT(0x3931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0187
        gbc.setState(0x7d88, 0x2ea1, 0x19c0, 0x6305, 0xd29e, 0xe2bf, 0x1, 0x1);
        gbc.writeMem(0x7d88, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2ea1, gbc.sp());
        EXPECT(0x7d8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0188
        gbc.setState(0xb4c4, 0x912a, 0x7a10, 0x8703, 0xac43, 0xae07, 0x1, 0x0);
        gbc.writeMem(0xb4c4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x912a, gbc.sp());
        EXPECT(0xb4c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4c4));
        EXPECT(0x9b, gbc.readMem(0xb4c5));
        // CB 9B 0189
        gbc.setState(0x2d2b, 0xa6e3, 0xe470, 0x46a4, 0x428f, 0xb471, 0x0, 0x0);
        gbc.writeMem(0x2d2b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xa6e3, gbc.sp());
        EXPECT(0x2d2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 018A
        gbc.setState(0x5661, 0x3613, 0xca0, 0x2d93, 0x4e57, 0x6ae7, 0x0, 0x0);
        gbc.writeMem(0x5661, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3613, gbc.sp());
        EXPECT(0x5663, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 018B
        gbc.setState(0x1edb, 0x1d3, 0xb830, 0x8dd0, 0xa30b, 0xdb14, 0x0, 0x0);
        gbc.writeMem(0x1edb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1d3, gbc.sp());
        EXPECT(0x1edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 018C
        gbc.setState(0x49e, 0x4dd5, 0xf290, 0xa2b7, 0x332, 0x4f84, 0x0, 0x1);
        gbc.writeMem(0x49e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4dd5, gbc.sp());
        EXPECT(0x4a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 018D
        gbc.setState(0x7bd6, 0x87fe, 0xfb10, 0x7a1c, 0x3cbf, 0xd6a6, 0x0, 0x1);
        gbc.writeMem(0x7bd6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x87fe, gbc.sp());
        EXPECT(0x7bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 018E
        gbc.setState(0x5163, 0x446, 0xd300, 0xaa83, 0x4a6b, 0x19a1, 0x1, 0x0);
        gbc.writeMem(0x5163, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x446, gbc.sp());
        EXPECT(0x5165, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 018F
        gbc.setState(0x1a29, 0xb6b9, 0xb1d0, 0x7537, 0x4f2e, 0xdf48, 0x0, 0x0);
        gbc.writeMem(0x1a29, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xb6b9, gbc.sp());
        EXPECT(0x1a2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0191
        gbc.setState(0x1009, 0xf60b, 0x7dc0, 0x1c6a, 0xac89, 0x8fb5, 0x1, 0x1);
        gbc.writeMem(0x1009, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xf60b, gbc.sp());
        EXPECT(0x100b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0192
        gbc.setState(0x725a, 0x8f40, 0x8a60, 0x188b, 0x96e4, 0x6246, 0x0, 0x1);
        gbc.writeMem(0x725a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x8f40, gbc.sp());
        EXPECT(0x725c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0193
        gbc.setState(0xda15, 0x712c, 0xd590, 0x5243, 0xba62, 0x6077, 0x0, 0x1);
        gbc.writeMem(0xda15, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x712c, gbc.sp());
        EXPECT(0xda17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda15));
        EXPECT(0x9b, gbc.readMem(0xda16));
        // CB 9B 0195
        gbc.setState(0x266b, 0xf18, 0x3510, 0x27d7, 0xcf6a, 0x4a9d, 0x1, 0x0);
        gbc.writeMem(0x266b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xf18, gbc.sp());
        EXPECT(0x266d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0196
        gbc.setState(0xefe9, 0x6e59, 0xb310, 0x7c3a, 0xedc4, 0x4181, 0x1, 0x0);
        gbc.writeMem(0xefe9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6e59, gbc.sp());
        EXPECT(0xefeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefe9));
        EXPECT(0x9b, gbc.readMem(0xefea));
        // CB 9B 0197
        gbc.setState(0x8f75, 0x3acc, 0x9980, 0x5d19, 0x719c, 0x73db, 0x0, 0x1);
        gbc.writeMem(0x8f75, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x3acc, gbc.sp());
        EXPECT(0x8f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f75));
        EXPECT(0x9b, gbc.readMem(0x8f76));
        // CB 9B 0198
        gbc.setState(0x3e87, 0x7cd8, 0xea90, 0xda2f, 0x9b0c, 0xf9d2, 0x0, 0x1);
        gbc.writeMem(0x3e87, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x7cd8, gbc.sp());
        EXPECT(0x3e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0199
        gbc.setState(0x6a1d, 0x1e14, 0xef80, 0xc59d, 0x65d8, 0xeccc, 0x0, 0x1);
        gbc.writeMem(0x6a1d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1e14, gbc.sp());
        EXPECT(0x6a1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 019A
        gbc.setState(0xc1ec, 0xf1b0, 0x2a90, 0xe8da, 0x5353, 0x6450, 0x0, 0x0);
        gbc.writeMem(0xc1ec, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf1b0, gbc.sp());
        EXPECT(0xc1ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1ec));
        EXPECT(0x9b, gbc.readMem(0xc1ed));
        // CB 9B 019B
        gbc.setState(0xce96, 0x1cbd, 0xd80, 0x80fd, 0x6df7, 0xaeb6, 0x0, 0x1);
        gbc.writeMem(0xce96, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1cbd, gbc.sp());
        EXPECT(0xce98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce96));
        EXPECT(0x9b, gbc.readMem(0xce97));
        // CB 9B 019C
        gbc.setState(0x9e8e, 0x36b7, 0xcf60, 0xa0d, 0xd276, 0x9680, 0x1, 0x1);
        gbc.writeMem(0x9e8e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x36b7, gbc.sp());
        EXPECT(0x9e90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e8e));
        EXPECT(0x9b, gbc.readMem(0x9e8f));
        // CB 9B 019D
        gbc.setState(0x3f5b, 0xc883, 0x4f70, 0x98b4, 0x2959, 0x36a, 0x0, 0x1);
        gbc.writeMem(0x3f5b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xc883, gbc.sp());
        EXPECT(0x3f5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 019E
        gbc.setState(0xa970, 0xa7e0, 0x4b0, 0xa8ca, 0x9002, 0x9476, 0x0, 0x0);
        gbc.writeMem(0xa970, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa7e0, gbc.sp());
        EXPECT(0xa972, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa970));
        EXPECT(0x9b, gbc.readMem(0xa971));
        // CB 9B 019F
        gbc.setState(0x734b, 0xdf5a, 0x74c0, 0x51c9, 0xc581, 0x1999, 0x1, 0x0);
        gbc.writeMem(0x734b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xdf5a, gbc.sp());
        EXPECT(0x734d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01A0
        gbc.setState(0xd9d7, 0x5257, 0xc8c0, 0xe82a, 0x509, 0x31f3, 0x1, 0x0);
        gbc.writeMem(0xd9d7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5257, gbc.sp());
        EXPECT(0xd9d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9d7));
        EXPECT(0x9b, gbc.readMem(0xd9d8));
        // CB 9B 01A1
        gbc.setState(0x305, 0xfc3a, 0xa6d0, 0x5102, 0x3028, 0x9d96, 0x1, 0x1);
        gbc.writeMem(0x305, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xfc3a, gbc.sp());
        EXPECT(0x307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01A2
        gbc.setState(0xeabb, 0xc91d, 0xdb80, 0x9f9f, 0x2708, 0xa7e9, 0x1, 0x0);
        gbc.writeMem(0xeabb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xc91d, gbc.sp());
        EXPECT(0xeabd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeabb));
        EXPECT(0x9b, gbc.readMem(0xeabc));
        // CB 9B 01A3
        gbc.setState(0x9f29, 0xd927, 0x8890, 0x5c53, 0x576f, 0x669a, 0x0, 0x1);
        gbc.writeMem(0x9f29, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xd927, gbc.sp());
        EXPECT(0x9f2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f29));
        EXPECT(0x9b, gbc.readMem(0x9f2a));
        // CB 9B 01A4
        gbc.setState(0x8836, 0x1f03, 0xd270, 0x53f2, 0x3b1b, 0x9967, 0x1, 0x1);
        gbc.writeMem(0x8836, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x1f03, gbc.sp());
        EXPECT(0x8838, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8836));
        EXPECT(0x9b, gbc.readMem(0x8837));
        // CB 9B 01A5
        gbc.setState(0xeb36, 0x57eb, 0xf240, 0xe14c, 0xbfee, 0x5146, 0x0, 0x1);
        gbc.writeMem(0xeb36, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x57eb, gbc.sp());
        EXPECT(0xeb38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb36));
        EXPECT(0x9b, gbc.readMem(0xeb37));
        // CB 9B 01A6
        gbc.setState(0x9211, 0xbba8, 0xd950, 0xb7d3, 0x93db, 0xcc1a, 0x0, 0x0);
        gbc.writeMem(0x9211, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbba8, gbc.sp());
        EXPECT(0x9213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9211));
        EXPECT(0x9b, gbc.readMem(0x9212));
        // CB 9B 01A7
        gbc.setState(0x3957, 0xcad8, 0x7ae0, 0xaf97, 0x489, 0x3529, 0x0, 0x0);
        gbc.writeMem(0x3957, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcad8, gbc.sp());
        EXPECT(0x3959, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01A8
        gbc.setState(0x185b, 0x84a6, 0x4190, 0x3d29, 0x49a9, 0xcba0, 0x0, 0x1);
        gbc.writeMem(0x185b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x84a6, gbc.sp());
        EXPECT(0x185d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01A9
        gbc.setState(0xaddd, 0x84aa, 0x5520, 0x58a8, 0x98e4, 0x7fcf, 0x0, 0x0);
        gbc.writeMem(0xaddd, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x84aa, gbc.sp());
        EXPECT(0xaddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaddd));
        EXPECT(0x9b, gbc.readMem(0xadde));
        // CB 9B 01AA
        gbc.setState(0x6d6f, 0x2969, 0x77d0, 0x1c34, 0xa5f0, 0x3e11, 0x0, 0x1);
        gbc.writeMem(0x6d6f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x2969, gbc.sp());
        EXPECT(0x6d71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01AB
        gbc.setState(0xb6a5, 0x2780, 0xf470, 0x7a14, 0x39b6, 0x76bc, 0x1, 0x0);
        gbc.writeMem(0xb6a5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x2780, gbc.sp());
        EXPECT(0xb6a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6a5));
        EXPECT(0x9b, gbc.readMem(0xb6a6));
        // CB 9B 01AC
        gbc.setState(0x6ffc, 0x4e92, 0xfe20, 0x1073, 0x42c6, 0xf901, 0x0, 0x0);
        gbc.writeMem(0x6ffc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4e92, gbc.sp());
        EXPECT(0x6ffe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01AD
        gbc.setState(0xa62b, 0xfa4b, 0x89c0, 0x81cc, 0xd3a3, 0xe209, 0x0, 0x1);
        gbc.writeMem(0xa62b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfa4b, gbc.sp());
        EXPECT(0xa62d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa62b));
        EXPECT(0x9b, gbc.readMem(0xa62c));
        // CB 9B 01AE
        gbc.setState(0xcffb, 0xe5a2, 0xe650, 0x9b21, 0xfeab, 0x107a, 0x0, 0x0);
        gbc.writeMem(0xcffb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe5a2, gbc.sp());
        EXPECT(0xcffd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcffb));
        EXPECT(0x9b, gbc.readMem(0xcffc));
        // CB 9B 01AF
        gbc.setState(0xa25d, 0x9a87, 0x3a20, 0x22f7, 0xce11, 0x5a60, 0x0, 0x1);
        gbc.writeMem(0xa25d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9a87, gbc.sp());
        EXPECT(0xa25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa25d));
        EXPECT(0x9b, gbc.readMem(0xa25e));
        // CB 9B 01B0
        gbc.setState(0x845, 0xf51f, 0x37d0, 0xed9b, 0xe41e, 0x867c, 0x0, 0x1);
        gbc.writeMem(0x845, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xf51f, gbc.sp());
        EXPECT(0x847, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01B1
        gbc.setState(0x5a37, 0xf13d, 0x4ea0, 0x3a73, 0x4566, 0x7606, 0x0, 0x0);
        gbc.writeMem(0x5a37, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xf13d, gbc.sp());
        EXPECT(0x5a39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01B2
        gbc.setState(0x1c75, 0x3a99, 0xfd40, 0xee1e, 0x3cb9, 0x1b2d, 0x0, 0x1);
        gbc.writeMem(0x1c75, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3a99, gbc.sp());
        EXPECT(0x1c77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01B3
        gbc.setState(0x3856, 0xc668, 0x9fb0, 0x5f66, 0x47b1, 0x31bd, 0x0, 0x0);
        gbc.writeMem(0x3856, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc668, gbc.sp());
        EXPECT(0x3858, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01B4
        gbc.setState(0x6074, 0x875e, 0xb190, 0x3855, 0x8fe5, 0xc811, 0x1, 0x1);
        gbc.writeMem(0x6074, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x875e, gbc.sp());
        EXPECT(0x6076, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01B6
        gbc.setState(0x5ef0, 0x44e8, 0x8900, 0xbb54, 0xe02f, 0x45ec, 0x1, 0x0);
        gbc.writeMem(0x5ef0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x44e8, gbc.sp());
        EXPECT(0x5ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01B7
        gbc.setState(0x1d9a, 0x11fb, 0xf670, 0x9614, 0x45ab, 0xfb1d, 0x1, 0x1);
        gbc.writeMem(0x1d9a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x11fb, gbc.sp());
        EXPECT(0x1d9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01B8
        gbc.setState(0x2580, 0x3a1, 0x2920, 0xc49a, 0x48d7, 0x3818, 0x1, 0x1);
        gbc.writeMem(0x2580, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x3a1, gbc.sp());
        EXPECT(0x2582, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01BA
        gbc.setState(0x50a4, 0x2e33, 0x6e40, 0xecf7, 0xb0e8, 0x9aee, 0x1, 0x0);
        gbc.writeMem(0x50a4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x2e33, gbc.sp());
        EXPECT(0x50a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01BB
        gbc.setState(0xc45f, 0xc1c5, 0xd6e0, 0x55a7, 0x6afb, 0x897b, 0x1, 0x0);
        gbc.writeMem(0xc45f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc1c5, gbc.sp());
        EXPECT(0xc461, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45f));
        EXPECT(0x9b, gbc.readMem(0xc460));
        // CB 9B 01BC
        gbc.setState(0xd8e5, 0x3065, 0x5740, 0xe9f3, 0x6b88, 0xbf34, 0x1, 0x1);
        gbc.writeMem(0xd8e5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3065, gbc.sp());
        EXPECT(0xd8e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8e5));
        EXPECT(0x9b, gbc.readMem(0xd8e6));
        // CB 9B 01BD
        gbc.setState(0x5666, 0xd148, 0xac10, 0x8319, 0x33fd, 0x13bc, 0x0, 0x0);
        gbc.writeMem(0x5666, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xd148, gbc.sp());
        EXPECT(0x5668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01BF
        gbc.setState(0x52fa, 0xd1c, 0x5160, 0xeb1b, 0xe039, 0xc6a1, 0x0, 0x1);
        gbc.writeMem(0x52fa, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xd1c, gbc.sp());
        EXPECT(0x52fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01C0
        gbc.setState(0xc517, 0x9bc4, 0x1c70, 0xea81, 0x51ba, 0x548a, 0x1, 0x1);
        gbc.writeMem(0xc517, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x9bc4, gbc.sp());
        EXPECT(0xc519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc517));
        EXPECT(0x9b, gbc.readMem(0xc518));
        // CB 9B 01C1
        gbc.setState(0x6085, 0xc1ca, 0xd0e0, 0xcf72, 0x3a33, 0xe71b, 0x0, 0x0);
        gbc.writeMem(0x6085, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc1ca, gbc.sp());
        EXPECT(0x6087, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01C2
        gbc.setState(0xefa0, 0xbb75, 0x5340, 0xaea3, 0xb0d4, 0x520b, 0x1, 0x1);
        gbc.writeMem(0xefa0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xbb75, gbc.sp());
        EXPECT(0xefa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xefa0));
        EXPECT(0x9b, gbc.readMem(0xefa1));
        // CB 9B 01C3
        gbc.setState(0x4b8f, 0x46c7, 0x84e0, 0xb0ae, 0x8848, 0x472c, 0x0, 0x1);
        gbc.writeMem(0x4b8f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x46c7, gbc.sp());
        EXPECT(0x4b91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01C4
        gbc.setState(0x9b6a, 0xd752, 0x2710, 0xcd55, 0x1866, 0x93e9, 0x0, 0x1);
        gbc.writeMem(0x9b6a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd752, gbc.sp());
        EXPECT(0x9b6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b6a));
        EXPECT(0x9b, gbc.readMem(0x9b6b));
        // CB 9B 01C5
        gbc.setState(0xad90, 0x95a, 0x6de0, 0xb71c, 0x57c7, 0x6537, 0x0, 0x0);
        gbc.writeMem(0xad90, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x95a, gbc.sp());
        EXPECT(0xad92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad90));
        EXPECT(0x9b, gbc.readMem(0xad91));
        // CB 9B 01C6
        gbc.setState(0xa07, 0x65f8, 0x6ec0, 0xae3c, 0x2cbe, 0xbfd9, 0x0, 0x1);
        gbc.writeMem(0xa07, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x65f8, gbc.sp());
        EXPECT(0xa09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01C7
        gbc.setState(0x5fce, 0xa463, 0xa150, 0x3f4b, 0x708d, 0xac09, 0x1, 0x0);
        gbc.writeMem(0x5fce, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xa463, gbc.sp());
        EXPECT(0x5fd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01C8
        gbc.setState(0xdd96, 0xcc1b, 0xa450, 0xef83, 0x619, 0x8b04, 0x1, 0x1);
        gbc.writeMem(0xdd96, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcc1b, gbc.sp());
        EXPECT(0xdd98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd96));
        EXPECT(0x9b, gbc.readMem(0xdd97));
        // CB 9B 01C9
        gbc.setState(0x92d5, 0x82fd, 0xb980, 0xba75, 0x625c, 0x44, 0x1, 0x0);
        gbc.writeMem(0x92d5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x82fd, gbc.sp());
        EXPECT(0x92d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92d5));
        EXPECT(0x9b, gbc.readMem(0x92d6));
        // CB 9B 01CA
        gbc.setState(0x4711, 0xa305, 0xc50, 0xf109, 0xf03c, 0x1376, 0x1, 0x0);
        gbc.writeMem(0x4711, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa305, gbc.sp());
        EXPECT(0x4713, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01CB
        gbc.setState(0xc4b0, 0xca69, 0xb800, 0xc9c1, 0xde3c, 0xdba, 0x0, 0x0);
        gbc.writeMem(0xc4b0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xca69, gbc.sp());
        EXPECT(0xc4b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b0));
        EXPECT(0x9b, gbc.readMem(0xc4b1));
        // CB 9B 01CC
        gbc.setState(0x856e, 0x2dd0, 0x1ee0, 0x209c, 0x3521, 0xf365, 0x1, 0x0);
        gbc.writeMem(0x856e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2dd0, gbc.sp());
        EXPECT(0x8570, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x856e));
        EXPECT(0x9b, gbc.readMem(0x856f));
        // CB 9B 01CD
        gbc.setState(0x235e, 0x5eac, 0x8b00, 0xd999, 0xfd73, 0x40d7, 0x0, 0x1);
        gbc.writeMem(0x235e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x5eac, gbc.sp());
        EXPECT(0x2360, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01CE
        gbc.setState(0x248, 0x803f, 0xc260, 0x5aa, 0xbfe0, 0x56dd, 0x1, 0x0);
        gbc.writeMem(0x248, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x803f, gbc.sp());
        EXPECT(0x24a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01CF
        gbc.setState(0x8bf1, 0x57b0, 0x7280, 0x2e7, 0xfc71, 0x1f9, 0x0, 0x0);
        gbc.writeMem(0x8bf1, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x57b0, gbc.sp());
        EXPECT(0x8bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8bf1));
        EXPECT(0x9b, gbc.readMem(0x8bf2));
        // CB 9B 01D0
        gbc.setState(0xb926, 0xa136, 0xf340, 0x1548, 0x3d28, 0xe50e, 0x1, 0x1);
        gbc.writeMem(0xb926, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xa136, gbc.sp());
        EXPECT(0xb928, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb926));
        EXPECT(0x9b, gbc.readMem(0xb927));
        // CB 9B 01D1
        gbc.setState(0x845b, 0x57b4, 0x200, 0x6207, 0x85f, 0xd08a, 0x0, 0x0);
        gbc.writeMem(0x845b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x57b4, gbc.sp());
        EXPECT(0x845d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x845b));
        EXPECT(0x9b, gbc.readMem(0x845c));
        // CB 9B 01D2
        gbc.setState(0xe583, 0x74d4, 0xa080, 0x920d, 0xa845, 0x6c4c, 0x1, 0x0);
        gbc.writeMem(0xe583, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x74d4, gbc.sp());
        EXPECT(0xe585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe583));
        EXPECT(0x9b, gbc.readMem(0xe584));
        // CB 9B 01D3
        gbc.setState(0x17bb, 0x4325, 0x9320, 0x708a, 0xdbcf, 0x5d87, 0x1, 0x1);
        gbc.writeMem(0x17bb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x4325, gbc.sp());
        EXPECT(0x17bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01D4
        gbc.setState(0xdc1d, 0x8527, 0xce20, 0xbf45, 0x3b59, 0xdbc4, 0x0, 0x0);
        gbc.writeMem(0xdc1d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8527, gbc.sp());
        EXPECT(0xdc1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc1d));
        EXPECT(0x9b, gbc.readMem(0xdc1e));
        // CB 9B 01D5
        gbc.setState(0x98a4, 0x4741, 0x46e0, 0xd65e, 0xf05f, 0x3064, 0x0, 0x0);
        gbc.writeMem(0x98a4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x4741, gbc.sp());
        EXPECT(0x98a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98a4));
        EXPECT(0x9b, gbc.readMem(0x98a5));
        // CB 9B 01D6
        gbc.setState(0xcb34, 0x291a, 0xf3b0, 0x4dc0, 0x1b6, 0x7b96, 0x0, 0x1);
        gbc.writeMem(0xcb34, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x291a, gbc.sp());
        EXPECT(0xcb36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb34));
        EXPECT(0x9b, gbc.readMem(0xcb35));
        // CB 9B 01D7
        gbc.setState(0x9b87, 0xa9f9, 0xde90, 0x6db0, 0xcbcf, 0x5ca8, 0x1, 0x1);
        gbc.writeMem(0x9b87, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa9f9, gbc.sp());
        EXPECT(0x9b89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b87));
        EXPECT(0x9b, gbc.readMem(0x9b88));
        // CB 9B 01D8
        gbc.setState(0xb318, 0xe4b6, 0x98f0, 0xea2, 0xfc50, 0xd4f0, 0x0, 0x1);
        gbc.writeMem(0xb318, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe4b6, gbc.sp());
        EXPECT(0xb31a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb318));
        EXPECT(0x9b, gbc.readMem(0xb319));
        // CB 9B 01DA
        gbc.setState(0x8cbb, 0x7ddd, 0xf9c0, 0xd02e, 0x5468, 0x9333, 0x1, 0x1);
        gbc.writeMem(0x8cbb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7ddd, gbc.sp());
        EXPECT(0x8cbd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cbb));
        EXPECT(0x9b, gbc.readMem(0x8cbc));
        // CB 9B 01DB
        gbc.setState(0x5973, 0x1527, 0x9880, 0xab25, 0x3bd6, 0xcb82, 0x1, 0x0);
        gbc.writeMem(0x5973, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x1527, gbc.sp());
        EXPECT(0x5975, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01DC
        gbc.setState(0x551e, 0xdb55, 0x6cb0, 0xd0b0, 0x761e, 0xd83f, 0x0, 0x0);
        gbc.writeMem(0x551e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xdb55, gbc.sp());
        EXPECT(0x5520, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01DD
        gbc.setState(0x20d9, 0x1784, 0x9e0, 0x8920, 0xf648, 0x7681, 0x0, 0x1);
        gbc.writeMem(0x20d9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x1784, gbc.sp());
        EXPECT(0x20db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01DE
        gbc.setState(0x5b4, 0x9956, 0xd200, 0x6728, 0x19b8, 0x529f, 0x0, 0x0);
        gbc.writeMem(0x5b4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x9956, gbc.sp());
        EXPECT(0x5b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01DF
        gbc.setState(0xc84c, 0x1fab, 0x52d0, 0x7faf, 0xb70f, 0x30dd, 0x1, 0x1);
        gbc.writeMem(0xc84c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1fab, gbc.sp());
        EXPECT(0xc84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc84c));
        EXPECT(0x9b, gbc.readMem(0xc84d));
        // CB 9B 01E0
        gbc.setState(0x1f75, 0x5566, 0xc840, 0x583c, 0x88a2, 0x3e46, 0x1, 0x1);
        gbc.writeMem(0x1f75, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5566, gbc.sp());
        EXPECT(0x1f77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01E1
        gbc.setState(0xb648, 0x1c2e, 0xcf10, 0xc60c, 0x4300, 0x1866, 0x0, 0x1);
        gbc.writeMem(0xb648, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1c2e, gbc.sp());
        EXPECT(0xb64a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb648));
        EXPECT(0x9b, gbc.readMem(0xb649));
        // CB 9B 01E2
        gbc.setState(0x6030, 0xbb09, 0x7fa0, 0xa40d, 0x78e2, 0xf8ff, 0x0, 0x1);
        gbc.writeMem(0x6030, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xbb09, gbc.sp());
        EXPECT(0x6032, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01E3
        gbc.setState(0x448d, 0xf752, 0xc450, 0xd5d8, 0xab44, 0xe1ee, 0x0, 0x0);
        gbc.writeMem(0x448d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xf752, gbc.sp());
        EXPECT(0x448f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01E4
        gbc.setState(0x8257, 0x5e1b, 0x5240, 0x5a51, 0x951f, 0x9150, 0x0, 0x1);
        gbc.writeMem(0x8257, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x5e1b, gbc.sp());
        EXPECT(0x8259, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8257));
        EXPECT(0x9b, gbc.readMem(0x8258));
        // CB 9B 01E5
        gbc.setState(0xe310, 0x4001, 0xbe10, 0xc2d4, 0xb93d, 0x64ba, 0x1, 0x1);
        gbc.writeMem(0xe310, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4001, gbc.sp());
        EXPECT(0xe312, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe310));
        EXPECT(0x9b, gbc.readMem(0xe311));
        // CB 9B 01E6
        gbc.setState(0x2872, 0x9857, 0xc4e0, 0x3b75, 0x5681, 0xe840, 0x0, 0x1);
        gbc.writeMem(0x2872, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9857, gbc.sp());
        EXPECT(0x2874, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01E7
        gbc.setState(0xacc2, 0x4108, 0x75c0, 0x3562, 0xeeed, 0xdc75, 0x0, 0x0);
        gbc.writeMem(0xacc2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4108, gbc.sp());
        EXPECT(0xacc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacc2));
        EXPECT(0x9b, gbc.readMem(0xacc3));
        // CB 9B 01E8
        gbc.setState(0x9ffd, 0x6403, 0x4490, 0xe6e, 0xca74, 0x2626, 0x0, 0x0);
        gbc.writeMem(0x9ffd, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6403, gbc.sp());
        EXPECT(0x9fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ffd));
        EXPECT(0x9b, gbc.readMem(0x9ffe));
        // CB 9B 01E9
        gbc.setState(0xe652, 0x4aec, 0x7ee0, 0x1a0d, 0x11bb, 0x7f62, 0x0, 0x0);
        gbc.writeMem(0xe652, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x4aec, gbc.sp());
        EXPECT(0xe654, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe652));
        EXPECT(0x9b, gbc.readMem(0xe653));
        // CB 9B 01EA
        gbc.setState(0xe78f, 0xd633, 0x9a70, 0x87b8, 0x271, 0x8ae7, 0x1, 0x0);
        gbc.writeMem(0xe78f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd633, gbc.sp());
        EXPECT(0xe791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe78f));
        EXPECT(0x9b, gbc.readMem(0xe790));
        // CB 9B 01EB
        gbc.setState(0x2ae8, 0xd97a, 0x31e0, 0x679, 0x736c, 0x4051, 0x1, 0x1);
        gbc.writeMem(0x2ae8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd97a, gbc.sp());
        EXPECT(0x2aea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01EC
        gbc.setState(0x9e49, 0xf4e7, 0xc2d0, 0x4bbd, 0xb139, 0xd9ed, 0x0, 0x0);
        gbc.writeMem(0x9e49, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf4e7, gbc.sp());
        EXPECT(0x9e4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e49));
        EXPECT(0x9b, gbc.readMem(0x9e4a));
        // CB 9B 01ED
        gbc.setState(0x8c08, 0xb6da, 0xcc50, 0xbd5b, 0xdc9d, 0xe0a1, 0x1, 0x0);
        gbc.writeMem(0x8c08, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xb6da, gbc.sp());
        EXPECT(0x8c0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c08));
        EXPECT(0x9b, gbc.readMem(0x8c09));
        // CB 9B 01EE
        gbc.setState(0x8daf, 0x9f7c, 0xd0d0, 0x98f8, 0x998e, 0xb985, 0x0, 0x0);
        gbc.writeMem(0x8daf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x9f7c, gbc.sp());
        EXPECT(0x8db1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8daf));
        EXPECT(0x9b, gbc.readMem(0x8db0));
        // CB 9B 01EF
        gbc.setState(0xd0b8, 0x5a28, 0x8160, 0xd2f7, 0x673e, 0x6863, 0x1, 0x1);
        gbc.writeMem(0xd0b8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5a28, gbc.sp());
        EXPECT(0xd0ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0b8));
        EXPECT(0x9b, gbc.readMem(0xd0b9));
        // CB 9B 01F0
        gbc.setState(0xd326, 0x7b32, 0x5660, 0xc17c, 0xa3fc, 0xc462, 0x1, 0x0);
        gbc.writeMem(0xd326, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7b32, gbc.sp());
        EXPECT(0xd328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd326));
        EXPECT(0x9b, gbc.readMem(0xd327));
        // CB 9B 01F1
        gbc.setState(0x673a, 0x3206, 0x98e0, 0x309c, 0x856d, 0xf734, 0x1, 0x0);
        gbc.writeMem(0x673a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x3206, gbc.sp());
        EXPECT(0x673c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01F2
        gbc.setState(0x3006, 0x5ec5, 0x1b10, 0xb239, 0x59f6, 0x48f5, 0x0, 0x1);
        gbc.writeMem(0x3006, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x5ec5, gbc.sp());
        EXPECT(0x3008, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01F3
        gbc.setState(0xd18c, 0x180f, 0x2630, 0x4e2f, 0x932f, 0x594a, 0x0, 0x0);
        gbc.writeMem(0xd18c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x180f, gbc.sp());
        EXPECT(0xd18e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd18c));
        EXPECT(0x9b, gbc.readMem(0xd18d));
        // CB 9B 01F4
        gbc.setState(0xba09, 0x1277, 0x3b90, 0x85bc, 0xb932, 0x1bf5, 0x1, 0x1);
        gbc.writeMem(0xba09, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1277, gbc.sp());
        EXPECT(0xba0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba09));
        EXPECT(0x9b, gbc.readMem(0xba0a));
        // CB 9B 01F5
        gbc.setState(0x8f18, 0xaa57, 0x490, 0xd84a, 0xffc2, 0xe2ad, 0x1, 0x0);
        gbc.writeMem(0x8f18, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xaa57, gbc.sp());
        EXPECT(0x8f1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f18));
        EXPECT(0x9b, gbc.readMem(0x8f19));
        // CB 9B 01F7
        gbc.setState(0xd2a1, 0x7d9c, 0x30c0, 0x9872, 0xf56d, 0x4646, 0x0, 0x1);
        gbc.writeMem(0xd2a1, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x7d9c, gbc.sp());
        EXPECT(0xd2a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd2a1));
        EXPECT(0x9b, gbc.readMem(0xd2a2));
        // CB 9B 01F8
        gbc.setState(0x2183, 0xd18f, 0xca00, 0xd08a, 0xbda1, 0x4978, 0x0, 0x0);
        gbc.writeMem(0x2183, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xd18f, gbc.sp());
        EXPECT(0x2185, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01F9
        gbc.setState(0x2538, 0xe359, 0xb240, 0xa3cf, 0x930f, 0xd2ba, 0x1, 0x1);
        gbc.writeMem(0x2538, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xe359, gbc.sp());
        EXPECT(0x253a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01FA
        gbc.setState(0x902b, 0x991, 0xa130, 0x20bc, 0x255e, 0x2943, 0x0, 0x0);
        gbc.writeMem(0x902b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x991, gbc.sp());
        EXPECT(0x902d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x902b));
        EXPECT(0x9b, gbc.readMem(0x902c));
        // CB 9B 01FB
        gbc.setState(0x4c6e, 0x4108, 0x5e50, 0xfcc9, 0x114f, 0x500e, 0x1, 0x1);
        gbc.writeMem(0x4c6e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4108, gbc.sp());
        EXPECT(0x4c70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 01FC
        gbc.setState(0x1033, 0xcdd7, 0xae80, 0x6d79, 0xfb5c, 0x662a, 0x0, 0x1);
        gbc.writeMem(0x1033, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xcdd7, gbc.sp());
        EXPECT(0x1035, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01FD
        gbc.setState(0x1046, 0x8dda, 0xde00, 0x837a, 0xcb8f, 0x4271, 0x0, 0x0);
        gbc.writeMem(0x1046, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8dda, gbc.sp());
        EXPECT(0x1048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 01FF
        gbc.setState(0x6601, 0xcef2, 0x7b80, 0x5257, 0x6a7e, 0x4804, 0x1, 0x1);
        gbc.writeMem(0x6601, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcef2, gbc.sp());
        EXPECT(0x6603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0200
        gbc.setState(0xd008, 0x52c3, 0xcaf0, 0xabe5, 0x807a, 0x9db3, 0x1, 0x1);
        gbc.writeMem(0xd008, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x52c3, gbc.sp());
        EXPECT(0xd00a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd008));
        EXPECT(0x9b, gbc.readMem(0xd009));
        // CB 9B 0201
        gbc.setState(0x5a8d, 0xa3e5, 0xffe0, 0x46f5, 0xef03, 0x6b6f, 0x0, 0x1);
        gbc.writeMem(0x5a8d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa3e5, gbc.sp());
        EXPECT(0x5a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0202
        gbc.setState(0xe102, 0x6263, 0x95b0, 0xe0b3, 0x34e9, 0xed1b, 0x0, 0x1);
        gbc.writeMem(0xe102, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x6263, gbc.sp());
        EXPECT(0xe104, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe102));
        EXPECT(0x9b, gbc.readMem(0xe103));
        // CB 9B 0203
        gbc.setState(0xb8bc, 0xeea1, 0x15c0, 0xcb04, 0x997c, 0xf231, 0x1, 0x1);
        gbc.writeMem(0xb8bc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xeea1, gbc.sp());
        EXPECT(0xb8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8bc));
        EXPECT(0x9b, gbc.readMem(0xb8bd));
        // CB 9B 0204
        gbc.setState(0xb0e7, 0x525, 0xcb40, 0xe7e6, 0xdbd7, 0x7079, 0x0, 0x1);
        gbc.writeMem(0xb0e7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x525, gbc.sp());
        EXPECT(0xb0e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0e7));
        EXPECT(0x9b, gbc.readMem(0xb0e8));
        // CB 9B 0205
        gbc.setState(0xd0f1, 0xa3f, 0xd1a0, 0xa763, 0x969, 0x7359, 0x0, 0x1);
        gbc.writeMem(0xd0f1, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xa3f, gbc.sp());
        EXPECT(0xd0f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0f1));
        EXPECT(0x9b, gbc.readMem(0xd0f2));
        // CB 9B 0206
        gbc.setState(0xced5, 0xd84, 0xdae0, 0x8c4a, 0xeabf, 0x9626, 0x1, 0x1);
        gbc.writeMem(0xced5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xd84, gbc.sp());
        EXPECT(0xced7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xced5));
        EXPECT(0x9b, gbc.readMem(0xced6));
        // CB 9B 0207
        gbc.setState(0x1e1e, 0xb75, 0x2d20, 0x8da1, 0xd544, 0x8d04, 0x1, 0x0);
        gbc.writeMem(0x1e1e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb75, gbc.sp());
        EXPECT(0x1e20, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0209
        gbc.setState(0xb, 0xa747, 0x4b20, 0xd369, 0x219f, 0xea76, 0x1, 0x1);
        gbc.writeMem(0xb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xa747, gbc.sp());
        EXPECT(0xd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 020B
        gbc.setState(0x3b79, 0xb655, 0x5a70, 0xa6a7, 0x2ebc, 0xdfdf, 0x0, 0x1);
        gbc.writeMem(0x3b79, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb655, gbc.sp());
        EXPECT(0x3b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 020C
        gbc.setState(0x2ec6, 0xd236, 0xbff0, 0xa77e, 0xba76, 0x2417, 0x1, 0x0);
        gbc.writeMem(0x2ec6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xd236, gbc.sp());
        EXPECT(0x2ec8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 020D
        gbc.setState(0xd8a6, 0x1841, 0x91a0, 0x88de, 0x28ed, 0x2e3d, 0x1, 0x1);
        gbc.writeMem(0xd8a6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1841, gbc.sp());
        EXPECT(0xd8a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd8a6));
        EXPECT(0x9b, gbc.readMem(0xd8a7));
        // CB 9B 020E
        gbc.setState(0xe839, 0x8fd1, 0xdf80, 0x740c, 0x4391, 0xd07f, 0x1, 0x0);
        gbc.writeMem(0xe839, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8fd1, gbc.sp());
        EXPECT(0xe83b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe839));
        EXPECT(0x9b, gbc.readMem(0xe83a));
        // CB 9B 020F
        gbc.setState(0xe9a4, 0xf3a6, 0xe8d0, 0x8408, 0x23f5, 0x14d3, 0x1, 0x1);
        gbc.writeMem(0xe9a4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf3a6, gbc.sp());
        EXPECT(0xe9a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9a4));
        EXPECT(0x9b, gbc.readMem(0xe9a5));
        // CB 9B 0210
        gbc.setState(0x5dec, 0xd88a, 0xd200, 0xca77, 0x6a92, 0xcad3, 0x1, 0x0);
        gbc.writeMem(0x5dec, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd88a, gbc.sp());
        EXPECT(0x5dee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0212
        gbc.setState(0xaf92, 0x8c90, 0x6b10, 0xf7d4, 0xf17b, 0x30f6, 0x0, 0x1);
        gbc.writeMem(0xaf92, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8c90, gbc.sp());
        EXPECT(0xaf94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf92));
        EXPECT(0x9b, gbc.readMem(0xaf93));
        // CB 9B 0213
        gbc.setState(0x6d62, 0xf2b0, 0x1ff0, 0x8d6b, 0x2144, 0x41f3, 0x0, 0x1);
        gbc.writeMem(0x6d62, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xf2b0, gbc.sp());
        EXPECT(0x6d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0214
        gbc.setState(0x4f1f, 0xe8b1, 0xb790, 0xc263, 0xcec7, 0xc487, 0x1, 0x1);
        gbc.writeMem(0x4f1f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xe8b1, gbc.sp());
        EXPECT(0x4f21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0215
        gbc.setState(0x1d66, 0x5e4e, 0x880, 0x65ec, 0xf332, 0x54ee, 0x0, 0x1);
        gbc.writeMem(0x1d66, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x5e4e, gbc.sp());
        EXPECT(0x1d68, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0216
        gbc.setState(0x3002, 0xd244, 0x7c60, 0xa459, 0x7dad, 0x1dcb, 0x1, 0x0);
        gbc.writeMem(0x3002, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd244, gbc.sp());
        EXPECT(0x3004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0217
        gbc.setState(0x8f71, 0x50d0, 0x4c30, 0xec0, 0xe34a, 0x526f, 0x0, 0x0);
        gbc.writeMem(0x8f71, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x50d0, gbc.sp());
        EXPECT(0x8f73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f71));
        EXPECT(0x9b, gbc.readMem(0x8f72));
        // CB 9B 0218
        gbc.setState(0x681f, 0xf1d3, 0xa2f0, 0xb1f, 0xca71, 0xa403, 0x0, 0x0);
        gbc.writeMem(0x681f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xf1d3, gbc.sp());
        EXPECT(0x6821, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0219
        gbc.setState(0xbb07, 0x8b88, 0x6030, 0x5a29, 0xf504, 0x61ac, 0x1, 0x0);
        gbc.writeMem(0xbb07, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x8b88, gbc.sp());
        EXPECT(0xbb09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb07));
        EXPECT(0x9b, gbc.readMem(0xbb08));
        // CB 9B 021A
        gbc.setState(0x850d, 0x52ac, 0xfb60, 0x7e81, 0x6c8d, 0x8a1d, 0x0, 0x1);
        gbc.writeMem(0x850d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x52ac, gbc.sp());
        EXPECT(0x850f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x850d));
        EXPECT(0x9b, gbc.readMem(0x850e));
        // CB 9B 021B
        gbc.setState(0x2cfe, 0x46dc, 0xbc20, 0xcfad, 0xe85, 0xa318, 0x0, 0x0);
        gbc.writeMem(0x2cfe, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x46dc, gbc.sp());
        EXPECT(0x2d00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 021C
        gbc.setState(0xd3e1, 0x5ec, 0x2e60, 0x90b2, 0xa556, 0x4f69, 0x0, 0x1);
        gbc.writeMem(0xd3e1, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x5ec, gbc.sp());
        EXPECT(0xd3e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3e1));
        EXPECT(0x9b, gbc.readMem(0xd3e2));
        // CB 9B 021D
        gbc.setState(0xeaae, 0x3039, 0x3610, 0x73af, 0x4a68, 0x89d9, 0x1, 0x1);
        gbc.writeMem(0xeaae, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x3039, gbc.sp());
        EXPECT(0xeab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeaae));
        EXPECT(0x9b, gbc.readMem(0xeaaf));
        // CB 9B 021F
        gbc.setState(0xaf06, 0x93ee, 0x97d0, 0x73b2, 0x758, 0x7bd2, 0x1, 0x0);
        gbc.writeMem(0xaf06, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x93ee, gbc.sp());
        EXPECT(0xaf08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf06));
        EXPECT(0x9b, gbc.readMem(0xaf07));
        // CB 9B 0220
        gbc.setState(0xd0e6, 0xf9cc, 0x7f60, 0x4b37, 0x3e4a, 0xbc87, 0x1, 0x1);
        gbc.writeMem(0xd0e6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf9cc, gbc.sp());
        EXPECT(0xd0e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0e6));
        EXPECT(0x9b, gbc.readMem(0xd0e7));
        // CB 9B 0222
        gbc.setState(0xc767, 0x6409, 0xf50, 0xa5f9, 0x6769, 0xfc60, 0x0, 0x0);
        gbc.writeMem(0xc767, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6409, gbc.sp());
        EXPECT(0xc769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc767));
        EXPECT(0x9b, gbc.readMem(0xc768));
        // CB 9B 0223
        gbc.setState(0xda3a, 0x945, 0x5880, 0x23a8, 0x5ca7, 0x8172, 0x0, 0x0);
        gbc.writeMem(0xda3a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x945, gbc.sp());
        EXPECT(0xda3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3a));
        EXPECT(0x9b, gbc.readMem(0xda3b));
        // CB 9B 0224
        gbc.setState(0xee7e, 0xeae6, 0x5140, 0xd125, 0x7a7f, 0xaaaf, 0x1, 0x1);
        gbc.writeMem(0xee7e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xeae6, gbc.sp());
        EXPECT(0xee80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee7e));
        EXPECT(0x9b, gbc.readMem(0xee7f));
        // CB 9B 0225
        gbc.setState(0xa375, 0xa9d8, 0x1d80, 0xdb8f, 0xf017, 0x1dfd, 0x0, 0x0);
        gbc.writeMem(0xa375, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa9d8, gbc.sp());
        EXPECT(0xa377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa375));
        EXPECT(0x9b, gbc.readMem(0xa376));
        // CB 9B 0226
        gbc.setState(0x6fa1, 0x923, 0x5d50, 0x16d6, 0x1be6, 0x857e, 0x0, 0x0);
        gbc.writeMem(0x6fa1, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x923, gbc.sp());
        EXPECT(0x6fa3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0227
        gbc.setState(0x95c1, 0xddaa, 0x1aa0, 0xbaa5, 0xdb9a, 0x848e, 0x1, 0x1);
        gbc.writeMem(0x95c1, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xddaa, gbc.sp());
        EXPECT(0x95c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c1));
        EXPECT(0x9b, gbc.readMem(0x95c2));
        // CB 9B 0228
        gbc.setState(0xd7bf, 0xbb05, 0xc0e0, 0x4878, 0x48a9, 0x2876, 0x1, 0x1);
        gbc.writeMem(0xd7bf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xbb05, gbc.sp());
        EXPECT(0xd7c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd7bf));
        EXPECT(0x9b, gbc.readMem(0xd7c0));
        // CB 9B 0229
        gbc.setState(0x2a9c, 0x318d, 0x610, 0x7713, 0x2146, 0x785, 0x1, 0x0);
        gbc.writeMem(0x2a9c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x318d, gbc.sp());
        EXPECT(0x2a9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 022B
        gbc.setState(0xa106, 0x5cef, 0x7ca0, 0xabfa, 0x9691, 0x98ec, 0x1, 0x1);
        gbc.writeMem(0xa106, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x5cef, gbc.sp());
        EXPECT(0xa108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa106));
        EXPECT(0x9b, gbc.readMem(0xa107));
        // CB 9B 022C
        gbc.setState(0x9f2f, 0x6978, 0xe740, 0x4f4a, 0x65e0, 0x6767, 0x1, 0x0);
        gbc.writeMem(0x9f2f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x6978, gbc.sp());
        EXPECT(0x9f31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f2f));
        EXPECT(0x9b, gbc.readMem(0x9f30));
        // CB 9B 022F
        gbc.setState(0x6f25, 0x7de6, 0xee40, 0xdabb, 0x9f2c, 0xa0fc, 0x0, 0x1);
        gbc.writeMem(0x6f25, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7de6, gbc.sp());
        EXPECT(0x6f27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0230
        gbc.setState(0x53d6, 0x1dbb, 0x96d0, 0x39c4, 0x2b2a, 0x1afc, 0x0, 0x1);
        gbc.writeMem(0x53d6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x1dbb, gbc.sp());
        EXPECT(0x53d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0231
        gbc.setState(0x1e45, 0x6dbe, 0xf5d0, 0x42dd, 0xa12c, 0x7660, 0x0, 0x0);
        gbc.writeMem(0x1e45, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x6dbe, gbc.sp());
        EXPECT(0x1e47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0232
        gbc.setState(0xc1a2, 0x1441, 0xa5f0, 0x6bfa, 0x44f4, 0x68a6, 0x0, 0x1);
        gbc.writeMem(0xc1a2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1441, gbc.sp());
        EXPECT(0xc1a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1a2));
        EXPECT(0x9b, gbc.readMem(0xc1a3));
        // CB 9B 0233
        gbc.setState(0x935f, 0xee1a, 0x1a80, 0x14ae, 0x57bb, 0x9a2e, 0x0, 0x1);
        gbc.writeMem(0x935f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xee1a, gbc.sp());
        EXPECT(0x9361, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x935f));
        EXPECT(0x9b, gbc.readMem(0x9360));
        // CB 9B 0234
        gbc.setState(0xdbda, 0xfbb4, 0xd270, 0x3af1, 0x5fd4, 0xbc9f, 0x1, 0x1);
        gbc.writeMem(0xdbda, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xfbb4, gbc.sp());
        EXPECT(0xdbdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbda));
        EXPECT(0x9b, gbc.readMem(0xdbdb));
        // CB 9B 0235
        gbc.setState(0x4779, 0x6fd7, 0xa6b0, 0x38c5, 0x6914, 0x19b1, 0x0, 0x1);
        gbc.writeMem(0x4779, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x6fd7, gbc.sp());
        EXPECT(0x477b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0236
        gbc.setState(0xa357, 0x915b, 0x2810, 0x414a, 0xef33, 0x535b, 0x0, 0x1);
        gbc.writeMem(0xa357, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x915b, gbc.sp());
        EXPECT(0xa359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa357));
        EXPECT(0x9b, gbc.readMem(0xa358));
        // CB 9B 0237
        gbc.setState(0x8c1b, 0x8439, 0x2f0, 0xfde5, 0x7cf4, 0xd397, 0x1, 0x0);
        gbc.writeMem(0x8c1b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8439, gbc.sp());
        EXPECT(0x8c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c1b));
        EXPECT(0x9b, gbc.readMem(0x8c1c));
        // CB 9B 0238
        gbc.setState(0xb6ce, 0xcb74, 0x84f0, 0x8a11, 0x52b9, 0xe54f, 0x1, 0x0);
        gbc.writeMem(0xb6ce, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xcb74, gbc.sp());
        EXPECT(0xb6d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb6ce));
        EXPECT(0x9b, gbc.readMem(0xb6cf));
        // CB 9B 0239
        gbc.setState(0x5a4, 0x2cb3, 0x830, 0x4d24, 0xfa73, 0x2f46, 0x1, 0x1);
        gbc.writeMem(0x5a4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x2cb3, gbc.sp());
        EXPECT(0x5a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 023A
        gbc.setState(0xac49, 0xa368, 0xbae0, 0xf491, 0x5131, 0xea0, 0x1, 0x1);
        gbc.writeMem(0xac49, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa368, gbc.sp());
        EXPECT(0xac4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac49));
        EXPECT(0x9b, gbc.readMem(0xac4a));
        // CB 9B 023B
        gbc.setState(0x91cf, 0xc7d1, 0xb240, 0xd3f4, 0x8f9d, 0xec35, 0x0, 0x1);
        gbc.writeMem(0x91cf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc7d1, gbc.sp());
        EXPECT(0x91d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91cf));
        EXPECT(0x9b, gbc.readMem(0x91d0));
        // CB 9B 023C
        gbc.setState(0x4631, 0x91e3, 0xe670, 0xebe3, 0x31bb, 0x1365, 0x1, 0x0);
        gbc.writeMem(0x4631, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x91e3, gbc.sp());
        EXPECT(0x4633, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 023D
        gbc.setState(0xaa7f, 0x9fda, 0xc1e0, 0x9abf, 0x90e0, 0x7150, 0x0, 0x0);
        gbc.writeMem(0xaa7f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9fda, gbc.sp());
        EXPECT(0xaa81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa7f));
        EXPECT(0x9b, gbc.readMem(0xaa80));
        // CB 9B 023E
        gbc.setState(0xa256, 0x9d28, 0x6030, 0x70a5, 0x6e55, 0xc060, 0x0, 0x0);
        gbc.writeMem(0xa256, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x9d28, gbc.sp());
        EXPECT(0xa258, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa256));
        EXPECT(0x9b, gbc.readMem(0xa257));
        // CB 9B 023F
        gbc.setState(0x4b85, 0x88a9, 0xbf90, 0xdac8, 0x8e3a, 0xfb24, 0x0, 0x0);
        gbc.writeMem(0x4b85, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x88a9, gbc.sp());
        EXPECT(0x4b87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0240
        gbc.setState(0x90d0, 0xe365, 0xeeb0, 0x27ff, 0x6bfb, 0x4783, 0x1, 0x1);
        gbc.writeMem(0x90d0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe365, gbc.sp());
        EXPECT(0x90d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90d0));
        EXPECT(0x9b, gbc.readMem(0x90d1));
        // CB 9B 0241
        gbc.setState(0xaf08, 0x9dcd, 0x4790, 0x9152, 0x2d46, 0x32eb, 0x0, 0x0);
        gbc.writeMem(0xaf08, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9dcd, gbc.sp());
        EXPECT(0xaf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaf08));
        EXPECT(0x9b, gbc.readMem(0xaf09));
        // CB 9B 0242
        gbc.setState(0x8826, 0x7a2f, 0xd1b0, 0x3577, 0x1f2e, 0x2be8, 0x0, 0x1);
        gbc.writeMem(0x8826, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7a2f, gbc.sp());
        EXPECT(0x8828, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8826));
        EXPECT(0x9b, gbc.readMem(0x8827));
        // CB 9B 0243
        gbc.setState(0x3b38, 0xb7fc, 0xd5a0, 0x891b, 0x5389, 0x6fc0, 0x0, 0x0);
        gbc.writeMem(0x3b38, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb7fc, gbc.sp());
        EXPECT(0x3b3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0244
        gbc.setState(0xb4fa, 0x2012, 0xe400, 0x3966, 0x3e0d, 0xbc0c, 0x1, 0x0);
        gbc.writeMem(0xb4fa, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2012, gbc.sp());
        EXPECT(0xb4fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4fa));
        EXPECT(0x9b, gbc.readMem(0xb4fb));
        // CB 9B 0245
        gbc.setState(0x66d6, 0x1f1, 0xcb60, 0xb0a7, 0x65cd, 0x7eef, 0x0, 0x1);
        gbc.writeMem(0x66d6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1f1, gbc.sp());
        EXPECT(0x66d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0246
        gbc.setState(0x582a, 0x3a50, 0x18e0, 0xdcb1, 0x833a, 0xe55c, 0x1, 0x1);
        gbc.writeMem(0x582a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x3a50, gbc.sp());
        EXPECT(0x582c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0247
        gbc.setState(0xcb02, 0x95b3, 0x18c0, 0xa097, 0xe150, 0x9f84, 0x0, 0x1);
        gbc.writeMem(0xcb02, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x95b3, gbc.sp());
        EXPECT(0xcb04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb02));
        EXPECT(0x9b, gbc.readMem(0xcb03));
        // CB 9B 0249
        gbc.setState(0x83e9, 0x5e78, 0x5f30, 0x483d, 0x9ac9, 0x2ae0, 0x1, 0x1);
        gbc.writeMem(0x83e9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5e78, gbc.sp());
        EXPECT(0x83eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83e9));
        EXPECT(0x9b, gbc.readMem(0x83ea));
        // CB 9B 024A
        gbc.setState(0xeb14, 0xfb41, 0x59f0, 0xf1af, 0xc7f2, 0xa00d, 0x1, 0x0);
        gbc.writeMem(0xeb14, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfb41, gbc.sp());
        EXPECT(0xeb16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb14));
        EXPECT(0x9b, gbc.readMem(0xeb15));
        // CB 9B 024B
        gbc.setState(0x10ff, 0x2de5, 0xa150, 0xd618, 0x9e52, 0xce3e, 0x1, 0x1);
        gbc.writeMem(0x10ff, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x2de5, gbc.sp());
        EXPECT(0x1101, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 024C
        gbc.setState(0x17e2, 0x4935, 0x8010, 0x6539, 0xb6e9, 0xd02, 0x1, 0x1);
        gbc.writeMem(0x17e2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4935, gbc.sp());
        EXPECT(0x17e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 024D
        gbc.setState(0x9f2d, 0xeafe, 0x39c0, 0x4599, 0x79d4, 0x744b, 0x1, 0x0);
        gbc.writeMem(0x9f2d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xeafe, gbc.sp());
        EXPECT(0x9f2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f2d));
        EXPECT(0x9b, gbc.readMem(0x9f2e));
        // CB 9B 024E
        gbc.setState(0x6530, 0xac4d, 0x6b0, 0xed, 0x1f03, 0x12be, 0x0, 0x1);
        gbc.writeMem(0x6530, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xac4d, gbc.sp());
        EXPECT(0x6532, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 024F
        gbc.setState(0xaacc, 0x4d74, 0x7e00, 0x21b4, 0x8b5b, 0x2192, 0x0, 0x1);
        gbc.writeMem(0xaacc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4d74, gbc.sp());
        EXPECT(0xaace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaacc));
        EXPECT(0x9b, gbc.readMem(0xaacd));
        // CB 9B 0250
        gbc.setState(0x54de, 0xe2a2, 0x2540, 0x44e3, 0x43e3, 0xfefb, 0x0, 0x0);
        gbc.writeMem(0x54de, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xe2a2, gbc.sp());
        EXPECT(0x54e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0251
        gbc.setState(0x5400, 0xc197, 0x1430, 0x8a43, 0xf418, 0x78e3, 0x1, 0x1);
        gbc.writeMem(0x5400, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xc197, gbc.sp());
        EXPECT(0x5402, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0252
        gbc.setState(0xa42d, 0x4e0b, 0x3210, 0x2c90, 0xe910, 0x4599, 0x0, 0x0);
        gbc.writeMem(0xa42d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x4e0b, gbc.sp());
        EXPECT(0xa42f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa42d));
        EXPECT(0x9b, gbc.readMem(0xa42e));
        // CB 9B 0253
        gbc.setState(0x4cc6, 0xd1fc, 0x7a70, 0x82cd, 0x816f, 0x3220, 0x1, 0x1);
        gbc.writeMem(0x4cc6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd1fc, gbc.sp());
        EXPECT(0x4cc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0254
        gbc.setState(0x23a0, 0xa125, 0xbfe0, 0xaed6, 0x6786, 0x680d, 0x0, 0x0);
        gbc.writeMem(0x23a0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa125, gbc.sp());
        EXPECT(0x23a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0255
        gbc.setState(0xb1bb, 0xe4e8, 0xa510, 0xc9c5, 0x1098, 0x7479, 0x0, 0x0);
        gbc.writeMem(0xb1bb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe4e8, gbc.sp());
        EXPECT(0xb1bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1bb));
        EXPECT(0x9b, gbc.readMem(0xb1bc));
        // CB 9B 0256
        gbc.setState(0x9097, 0xb34c, 0xa0d0, 0x475c, 0x8929, 0x238c, 0x0, 0x1);
        gbc.writeMem(0x9097, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb34c, gbc.sp());
        EXPECT(0x9099, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9097));
        EXPECT(0x9b, gbc.readMem(0x9098));
        // CB 9B 0257
        gbc.setState(0x3424, 0x202e, 0xcb90, 0x27b0, 0x6009, 0x60d1, 0x0, 0x0);
        gbc.writeMem(0x3424, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x202e, gbc.sp());
        EXPECT(0x3426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0258
        gbc.setState(0x2b30, 0x5a4c, 0x3e40, 0x4296, 0x4dbe, 0x6083, 0x0, 0x1);
        gbc.writeMem(0x2b30, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x5a4c, gbc.sp());
        EXPECT(0x2b32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0259
        gbc.setState(0x6f4d, 0xa5f8, 0xf440, 0xe7e1, 0x44c1, 0xfefd, 0x0, 0x0);
        gbc.writeMem(0x6f4d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xa5f8, gbc.sp());
        EXPECT(0x6f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 025A
        gbc.setState(0xff9, 0xa0d0, 0x25f0, 0x1a7b, 0x8e5a, 0x47f3, 0x0, 0x1);
        gbc.writeMem(0xff9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa0d0, gbc.sp());
        EXPECT(0xffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 025B
        gbc.setState(0x749c, 0x8d7b, 0x34f0, 0x17, 0xc263, 0x44eb, 0x1, 0x0);
        gbc.writeMem(0x749c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8d7b, gbc.sp());
        EXPECT(0x749e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 025C
        gbc.setState(0x30e2, 0x9e39, 0x35d0, 0x3232, 0xf966, 0x3dac, 0x1, 0x0);
        gbc.writeMem(0x30e2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x9e39, gbc.sp());
        EXPECT(0x30e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 025D
        gbc.setState(0xef3, 0x43db, 0x1f30, 0xc65e, 0x646c, 0x6f7a, 0x1, 0x1);
        gbc.writeMem(0xef3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x43db, gbc.sp());
        EXPECT(0xef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 025E
        gbc.setState(0x535a, 0xc12a, 0x4b30, 0xb5c, 0xc0aa, 0xb938, 0x1, 0x1);
        gbc.writeMem(0x535a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc12a, gbc.sp());
        EXPECT(0x535c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 025F
        gbc.setState(0xa18e, 0xf2a5, 0x1c30, 0x4764, 0x74af, 0x672e, 0x0, 0x1);
        gbc.writeMem(0xa18e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xf2a5, gbc.sp());
        EXPECT(0xa190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa18e));
        EXPECT(0x9b, gbc.readMem(0xa18f));
        // CB 9B 0260
        gbc.setState(0x2bb7, 0xf70e, 0xb480, 0x3bc1, 0x7565, 0x5857, 0x0, 0x0);
        gbc.writeMem(0x2bb7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xf70e, gbc.sp());
        EXPECT(0x2bb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0261
        gbc.setState(0x709e, 0x9c71, 0x67b0, 0x2db5, 0x31f, 0x47cd, 0x0, 0x0);
        gbc.writeMem(0x709e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x9c71, gbc.sp());
        EXPECT(0x70a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0263
        gbc.setState(0x4ce3, 0x9c4e, 0x8e30, 0xc377, 0x3aa5, 0x664e, 0x1, 0x1);
        gbc.writeMem(0x4ce3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x9c4e, gbc.sp());
        EXPECT(0x4ce5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0264
        gbc.setState(0x5aed, 0xa2ad, 0xfac0, 0xde57, 0x7ce8, 0xb1d1, 0x1, 0x1);
        gbc.writeMem(0x5aed, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xa2ad, gbc.sp());
        EXPECT(0x5aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0265
        gbc.setState(0x48e0, 0x669, 0xfc40, 0x8481, 0x2c7, 0xc3a2, 0x0, 0x0);
        gbc.writeMem(0x48e0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x669, gbc.sp());
        EXPECT(0x48e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0266
        gbc.setState(0x81f6, 0xe5d4, 0xc190, 0x4c9, 0x8562, 0x1510, 0x1, 0x1);
        gbc.writeMem(0x81f6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xe5d4, gbc.sp());
        EXPECT(0x81f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81f6));
        EXPECT(0x9b, gbc.readMem(0x81f7));
        // CB 9B 0267
        gbc.setState(0x73d4, 0x44a7, 0xc8c0, 0xabc4, 0x7074, 0x9fff, 0x0, 0x0);
        gbc.writeMem(0x73d4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x44a7, gbc.sp());
        EXPECT(0x73d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0268
        gbc.setState(0x3250, 0x6d25, 0x2940, 0xbb35, 0x8614, 0xcb5, 0x0, 0x1);
        gbc.writeMem(0x3250, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x6d25, gbc.sp());
        EXPECT(0x3252, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0269
        gbc.setState(0x610e, 0x1602, 0xb50, 0xbbc8, 0x6a0c, 0x8b27, 0x1, 0x1);
        gbc.writeMem(0x610e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x1602, gbc.sp());
        EXPECT(0x6110, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 026A
        gbc.setState(0x4a32, 0xb38e, 0xd7b0, 0x9b5d, 0x99bf, 0x9d41, 0x0, 0x1);
        gbc.writeMem(0x4a32, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb38e, gbc.sp());
        EXPECT(0x4a34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 026B
        gbc.setState(0xa084, 0x2163, 0xa170, 0xdb0f, 0x66da, 0x4036, 0x0, 0x0);
        gbc.writeMem(0xa084, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2163, gbc.sp());
        EXPECT(0xa086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa084));
        EXPECT(0x9b, gbc.readMem(0xa085));
        // CB 9B 026C
        gbc.setState(0xeef7, 0x26a1, 0x2a00, 0xc079, 0xea2b, 0xb390, 0x0, 0x0);
        gbc.writeMem(0xeef7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x26a1, gbc.sp());
        EXPECT(0xeef9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeef7));
        EXPECT(0x9b, gbc.readMem(0xeef8));
        // CB 9B 026D
        gbc.setState(0x9efe, 0x9896, 0x490, 0xbbe8, 0x790d, 0xff76, 0x0, 0x1);
        gbc.writeMem(0x9efe, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9896, gbc.sp());
        EXPECT(0x9f00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9efe));
        EXPECT(0x9b, gbc.readMem(0x9eff));
        // CB 9B 026E
        gbc.setState(0x2d15, 0xf97c, 0xc480, 0xefcd, 0x2e1, 0xc4e7, 0x1, 0x1);
        gbc.writeMem(0x2d15, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xf97c, gbc.sp());
        EXPECT(0x2d17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 026F
        gbc.setState(0x2d37, 0x90cd, 0x6e30, 0xbab8, 0x8c55, 0x21e0, 0x1, 0x0);
        gbc.writeMem(0x2d37, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x90cd, gbc.sp());
        EXPECT(0x2d39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0270
        gbc.setState(0x33cc, 0xa516, 0x3f10, 0x4e1e, 0x4b2e, 0x7fc8, 0x1, 0x1);
        gbc.writeMem(0x33cc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xa516, gbc.sp());
        EXPECT(0x33ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0271
        gbc.setState(0x6857, 0x2818, 0x2300, 0x688c, 0x7464, 0x17d6, 0x1, 0x0);
        gbc.writeMem(0x6857, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2818, gbc.sp());
        EXPECT(0x6859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0273
        gbc.setState(0x6801, 0xe0a1, 0x5880, 0xfe36, 0xf729, 0xe76e, 0x1, 0x0);
        gbc.writeMem(0x6801, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe0a1, gbc.sp());
        EXPECT(0x6803, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0274
        gbc.setState(0xa9df, 0x594c, 0xb230, 0x9c9e, 0xe64, 0x1f06, 0x1, 0x0);
        gbc.writeMem(0xa9df, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x594c, gbc.sp());
        EXPECT(0xa9e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa9df));
        EXPECT(0x9b, gbc.readMem(0xa9e0));
        // CB 9B 0275
        gbc.setState(0xa896, 0x55d1, 0xc100, 0xdb8d, 0xb9d7, 0x2030, 0x0, 0x0);
        gbc.writeMem(0xa896, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x55d1, gbc.sp());
        EXPECT(0xa898, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa896));
        EXPECT(0x9b, gbc.readMem(0xa897));
        // CB 9B 0276
        gbc.setState(0x5b46, 0x9417, 0x7230, 0x9665, 0x43f1, 0xb05c, 0x1, 0x1);
        gbc.writeMem(0x5b46, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x9417, gbc.sp());
        EXPECT(0x5b48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0277
        gbc.setState(0x3f0b, 0xf90b, 0xa760, 0x325a, 0x9ebd, 0x8ab1, 0x1, 0x0);
        gbc.writeMem(0x3f0b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf90b, gbc.sp());
        EXPECT(0x3f0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0278
        gbc.setState(0x3941, 0xda89, 0xba90, 0x1482, 0x9b73, 0x93d5, 0x1, 0x0);
        gbc.writeMem(0x3941, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xda89, gbc.sp());
        EXPECT(0x3943, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0279
        gbc.setState(0x7028, 0xa841, 0xbeb0, 0x3f68, 0xd8c6, 0x5dfb, 0x1, 0x1);
        gbc.writeMem(0x7028, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xa841, gbc.sp());
        EXPECT(0x702a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 027A
        gbc.setState(0xc452, 0xae3, 0x4e30, 0x7e83, 0x4c4a, 0xcbe1, 0x1, 0x0);
        gbc.writeMem(0xc452, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xae3, gbc.sp());
        EXPECT(0xc454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc452));
        EXPECT(0x9b, gbc.readMem(0xc453));
        // CB 9B 027B
        gbc.setState(0x6ac4, 0x42cd, 0x97b0, 0x9766, 0xdabb, 0x512e, 0x0, 0x1);
        gbc.writeMem(0x6ac4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x42cd, gbc.sp());
        EXPECT(0x6ac6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 027C
        gbc.setState(0x2bca, 0x6d35, 0xae70, 0x43d5, 0xe81b, 0xf1b8, 0x0, 0x1);
        gbc.writeMem(0x2bca, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x6d35, gbc.sp());
        EXPECT(0x2bcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 027D
        gbc.setState(0x4db7, 0x69c2, 0xf840, 0xd3bc, 0x986b, 0x9c8b, 0x1, 0x0);
        gbc.writeMem(0x4db7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x69c2, gbc.sp());
        EXPECT(0x4db9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 027E
        gbc.setState(0x657e, 0x3007, 0x15e0, 0x7f44, 0x8d4f, 0xf0c7, 0x0, 0x1);
        gbc.writeMem(0x657e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x3007, gbc.sp());
        EXPECT(0x6580, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 027F
        gbc.setState(0x8f15, 0xeadf, 0x3fe0, 0x8971, 0x3251, 0xdea1, 0x1, 0x0);
        gbc.writeMem(0x8f15, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xeadf, gbc.sp());
        EXPECT(0x8f17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f15));
        EXPECT(0x9b, gbc.readMem(0x8f16));
        // CB 9B 0280
        gbc.setState(0xc225, 0xdf1d, 0xcf60, 0x88a7, 0xe672, 0x6b05, 0x1, 0x0);
        gbc.writeMem(0xc225, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xdf1d, gbc.sp());
        EXPECT(0xc227, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc225));
        EXPECT(0x9b, gbc.readMem(0xc226));
        // CB 9B 0282
        gbc.setState(0xabb1, 0x88cc, 0x3d0, 0xa762, 0xc858, 0x6510, 0x0, 0x0);
        gbc.writeMem(0xabb1, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x88cc, gbc.sp());
        EXPECT(0xabb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xabb1));
        EXPECT(0x9b, gbc.readMem(0xabb2));
        // CB 9B 0283
        gbc.setState(0x6cdc, 0x8456, 0x9cc0, 0x46b8, 0xabe4, 0xb3d5, 0x0, 0x0);
        gbc.writeMem(0x6cdc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x8456, gbc.sp());
        EXPECT(0x6cde, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0285
        gbc.setState(0x68fc, 0xfb45, 0xb6b0, 0x9327, 0x40c0, 0x5e5, 0x0, 0x1);
        gbc.writeMem(0x68fc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfb45, gbc.sp());
        EXPECT(0x68fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0286
        gbc.setState(0xb8cd, 0xb56f, 0x72f0, 0xd3eb, 0xda6f, 0x34e2, 0x0, 0x0);
        gbc.writeMem(0xb8cd, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xb56f, gbc.sp());
        EXPECT(0xb8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8cd));
        EXPECT(0x9b, gbc.readMem(0xb8ce));
        // CB 9B 0287
        gbc.setState(0x8b2, 0x7f55, 0x170, 0xa756, 0x90e1, 0xd6ee, 0x0, 0x0);
        gbc.writeMem(0x8b2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7f55, gbc.sp());
        EXPECT(0x8b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0288
        gbc.setState(0x4401, 0x77b2, 0x7600, 0xd547, 0x55b6, 0xce0b, 0x1, 0x0);
        gbc.writeMem(0x4401, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x77b2, gbc.sp());
        EXPECT(0x4403, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0289
        gbc.setState(0xd32c, 0xc370, 0xa940, 0xb044, 0xcd04, 0xdb51, 0x0, 0x1);
        gbc.writeMem(0xd32c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc370, gbc.sp());
        EXPECT(0xd32e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd32c));
        EXPECT(0x9b, gbc.readMem(0xd32d));
        // CB 9B 028A
        gbc.setState(0xc901, 0x7c81, 0x5b30, 0xe5f6, 0x7b72, 0x4d12, 0x0, 0x0);
        gbc.writeMem(0xc901, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x7c81, gbc.sp());
        EXPECT(0xc903, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc901));
        EXPECT(0x9b, gbc.readMem(0xc902));
        // CB 9B 028B
        gbc.setState(0x2cad, 0x590a, 0x9550, 0x35b6, 0xa86b, 0x51fe, 0x0, 0x1);
        gbc.writeMem(0x2cad, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x590a, gbc.sp());
        EXPECT(0x2caf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 028C
        gbc.setState(0xc17e, 0xefff, 0x7020, 0xf2e2, 0xf155, 0x6413, 0x1, 0x1);
        gbc.writeMem(0xc17e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xefff, gbc.sp());
        EXPECT(0xc180, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc17e));
        EXPECT(0x9b, gbc.readMem(0xc17f));
        // CB 9B 028D
        gbc.setState(0xda74, 0xfbfb, 0x7880, 0x4b6b, 0x9cbb, 0xc3c0, 0x0, 0x0);
        gbc.writeMem(0xda74, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xfbfb, gbc.sp());
        EXPECT(0xda76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda74));
        EXPECT(0x9b, gbc.readMem(0xda75));
        // CB 9B 028E
        gbc.setState(0x89bc, 0x8411, 0x3770, 0x3757, 0x8f07, 0xc736, 0x0, 0x0);
        gbc.writeMem(0x89bc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x8411, gbc.sp());
        EXPECT(0x89be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89bc));
        EXPECT(0x9b, gbc.readMem(0x89bd));
        // CB 9B 028F
        gbc.setState(0x840b, 0x3b56, 0x2bc0, 0x81b0, 0x34a9, 0x152b, 0x1, 0x0);
        gbc.writeMem(0x840b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x3b56, gbc.sp());
        EXPECT(0x840d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x840b));
        EXPECT(0x9b, gbc.readMem(0x840c));
        // CB 9B 0290
        gbc.setState(0x6fa4, 0x78a1, 0x8920, 0x1c4b, 0xfbd, 0xb83f, 0x0, 0x0);
        gbc.writeMem(0x6fa4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x78a1, gbc.sp());
        EXPECT(0x6fa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0291
        gbc.setState(0x3645, 0x7094, 0x26b0, 0x4c8a, 0xa88d, 0xfc9, 0x0, 0x1);
        gbc.writeMem(0x3645, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7094, gbc.sp());
        EXPECT(0x3647, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0292
        gbc.setState(0x75c, 0x9595, 0x5400, 0x79a4, 0xb92e, 0xf726, 0x1, 0x0);
        gbc.writeMem(0x75c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x9595, gbc.sp());
        EXPECT(0x75e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0293
        gbc.setState(0x8173, 0xca0, 0x2310, 0x6c5, 0x3cc2, 0x9b9d, 0x0, 0x1);
        gbc.writeMem(0x8173, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xca0, gbc.sp());
        EXPECT(0x8175, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8173));
        EXPECT(0x9b, gbc.readMem(0x8174));
        // CB 9B 0294
        gbc.setState(0x195e, 0x5c47, 0xfe40, 0x8a57, 0x5df9, 0x4629, 0x1, 0x1);
        gbc.writeMem(0x195e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5c47, gbc.sp());
        EXPECT(0x1960, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0295
        gbc.setState(0xbd25, 0xa2f8, 0x5af0, 0xc9d9, 0x3017, 0x1891, 0x0, 0x1);
        gbc.writeMem(0xbd25, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xa2f8, gbc.sp());
        EXPECT(0xbd27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbd25));
        EXPECT(0x9b, gbc.readMem(0xbd26));
        // CB 9B 0296
        gbc.setState(0xff8, 0x1cab, 0x29b0, 0x8b69, 0x53c1, 0x95dd, 0x0, 0x1);
        gbc.writeMem(0xff8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x1cab, gbc.sp());
        EXPECT(0xffa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0298
        gbc.setState(0x63d2, 0x582d, 0xd340, 0xc6f1, 0xb60a, 0xd1b1, 0x1, 0x1);
        gbc.writeMem(0x63d2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x582d, gbc.sp());
        EXPECT(0x63d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0299
        gbc.setState(0x3a1a, 0x698, 0x26b0, 0x26f5, 0xda57, 0xc274, 0x0, 0x1);
        gbc.writeMem(0x3a1a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x698, gbc.sp());
        EXPECT(0x3a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 029A
        gbc.setState(0x9025, 0x8466, 0x9f30, 0x8ef7, 0xeb33, 0x51c, 0x1, 0x0);
        gbc.writeMem(0x9025, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8466, gbc.sp());
        EXPECT(0x9027, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9025));
        EXPECT(0x9b, gbc.readMem(0x9026));
        // CB 9B 029B
        gbc.setState(0x26a9, 0xf811, 0x1e40, 0x28f8, 0xf3cd, 0x2076, 0x1, 0x1);
        gbc.writeMem(0x26a9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf811, gbc.sp());
        EXPECT(0x26ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 029C
        gbc.setState(0xc65, 0xd7b1, 0xa330, 0xfbea, 0x21f4, 0x9ac, 0x1, 0x1);
        gbc.writeMem(0xc65, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd7b1, gbc.sp());
        EXPECT(0xc67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 029D
        gbc.setState(0x3396, 0xa1a2, 0x5f00, 0xf114, 0x974a, 0xa98, 0x1, 0x1);
        gbc.writeMem(0x3396, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xa1a2, gbc.sp());
        EXPECT(0x3398, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 029E
        gbc.setState(0x1884, 0x20cf, 0x3840, 0xf8af, 0xa4fc, 0xc624, 0x1, 0x1);
        gbc.writeMem(0x1884, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x20cf, gbc.sp());
        EXPECT(0x1886, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 029F
        gbc.setState(0x86f6, 0xe23a, 0xaee0, 0xb8d7, 0x9e44, 0xa472, 0x1, 0x0);
        gbc.writeMem(0x86f6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xe23a, gbc.sp());
        EXPECT(0x86f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x86f6));
        EXPECT(0x9b, gbc.readMem(0x86f7));
        // CB 9B 02A0
        gbc.setState(0xfbd, 0x18b7, 0x4ba0, 0x9de8, 0xdaee, 0x2ef5, 0x0, 0x0);
        gbc.writeMem(0xfbd, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x18b7, gbc.sp());
        EXPECT(0xfbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02A1
        gbc.setState(0x2572, 0x2a6f, 0xd410, 0xbb75, 0x79e7, 0xc67c, 0x1, 0x0);
        gbc.writeMem(0x2572, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2a6f, gbc.sp());
        EXPECT(0x2574, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02A2
        gbc.setState(0x40f8, 0xf08a, 0xe520, 0x9752, 0x7ca6, 0xfcb3, 0x0, 0x1);
        gbc.writeMem(0x40f8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf08a, gbc.sp());
        EXPECT(0x40fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02A3
        gbc.setState(0x314, 0xd111, 0x7160, 0x2e88, 0x2c44, 0xec55, 0x1, 0x0);
        gbc.writeMem(0x314, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd111, gbc.sp());
        EXPECT(0x316, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02A4
        gbc.setState(0x115f, 0xa23c, 0x1430, 0xefc7, 0xb9b2, 0xc8b3, 0x1, 0x1);
        gbc.writeMem(0x115f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xa23c, gbc.sp());
        EXPECT(0x1161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02A6
        gbc.setState(0x1869, 0x5c0f, 0xcbf0, 0xea50, 0x16f3, 0xa900, 0x1, 0x0);
        gbc.writeMem(0x1869, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x5c0f, gbc.sp());
        EXPECT(0x186b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02A7
        gbc.setState(0x80e3, 0xa6b0, 0x3860, 0x6a24, 0x3b06, 0xb96b, 0x1, 0x1);
        gbc.writeMem(0x80e3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xa6b0, gbc.sp());
        EXPECT(0x80e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x80e3));
        EXPECT(0x9b, gbc.readMem(0x80e4));
        // CB 9B 02A8
        gbc.setState(0x90b7, 0xc88c, 0x4ae0, 0xc2fc, 0xb7c1, 0xfd98, 0x1, 0x0);
        gbc.writeMem(0x90b7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xc88c, gbc.sp());
        EXPECT(0x90b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x90b7));
        EXPECT(0x9b, gbc.readMem(0x90b8));
        // CB 9B 02A9
        gbc.setState(0xd43f, 0x124f, 0x9780, 0xda78, 0xa79d, 0x541e, 0x0, 0x1);
        gbc.writeMem(0xd43f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x124f, gbc.sp());
        EXPECT(0xd441, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd43f));
        EXPECT(0x9b, gbc.readMem(0xd440));
        // CB 9B 02AA
        gbc.setState(0xc2a3, 0x6239, 0x35c0, 0xc865, 0x7354, 0x800d, 0x1, 0x0);
        gbc.writeMem(0xc2a3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6239, gbc.sp());
        EXPECT(0xc2a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2a3));
        EXPECT(0x9b, gbc.readMem(0xc2a4));
        // CB 9B 02AB
        gbc.setState(0xc0d6, 0x8f50, 0xdd10, 0xc073, 0x1275, 0x1c3d, 0x1, 0x1);
        gbc.writeMem(0xc0d6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8f50, gbc.sp());
        EXPECT(0xc0d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0d6));
        EXPECT(0x9b, gbc.readMem(0xc0d7));
        // CB 9B 02AC
        gbc.setState(0x131c, 0x4dcb, 0x3b40, 0x56f5, 0xba2, 0xeb76, 0x1, 0x1);
        gbc.writeMem(0x131c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x4dcb, gbc.sp());
        EXPECT(0x131e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02AD
        gbc.setState(0x2b55, 0x35fb, 0x700, 0xd44d, 0x6524, 0x7993, 0x1, 0x0);
        gbc.writeMem(0x2b55, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x35fb, gbc.sp());
        EXPECT(0x2b57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02AF
        gbc.setState(0x1c1d, 0x876, 0xec00, 0xa0a7, 0x136f, 0x5e4f, 0x0, 0x1);
        gbc.writeMem(0x1c1d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x876, gbc.sp());
        EXPECT(0x1c1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02B0
        gbc.setState(0x4aca, 0x7fa0, 0xe950, 0x6399, 0xf46c, 0x796c, 0x0, 0x1);
        gbc.writeMem(0x4aca, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x7fa0, gbc.sp());
        EXPECT(0x4acc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02B1
        gbc.setState(0xa344, 0xd49e, 0x2910, 0xcf24, 0xd3a3, 0x682d, 0x1, 0x0);
        gbc.writeMem(0xa344, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xd49e, gbc.sp());
        EXPECT(0xa346, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa344));
        EXPECT(0x9b, gbc.readMem(0xa345));
        // CB 9B 02B2
        gbc.setState(0xc281, 0xfafa, 0x28a0, 0x4ced, 0x69cc, 0xc431, 0x1, 0x0);
        gbc.writeMem(0xc281, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xfafa, gbc.sp());
        EXPECT(0xc283, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc281));
        EXPECT(0x9b, gbc.readMem(0xc282));
        // CB 9B 02B3
        gbc.setState(0xe8db, 0xe830, 0x4080, 0xb5a7, 0xf3a, 0x15a9, 0x0, 0x0);
        gbc.writeMem(0xe8db, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe830, gbc.sp());
        EXPECT(0xe8dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8db));
        EXPECT(0x9b, gbc.readMem(0xe8dc));
        // CB 9B 02B4
        gbc.setState(0xa556, 0x388e, 0x2040, 0x66ba, 0x8d75, 0x7c2d, 0x0, 0x0);
        gbc.writeMem(0xa556, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x388e, gbc.sp());
        EXPECT(0xa558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa556));
        EXPECT(0x9b, gbc.readMem(0xa557));
        // CB 9B 02B5
        gbc.setState(0xd759, 0x869c, 0x8f20, 0x21e2, 0x9f7, 0x3be4, 0x0, 0x0);
        gbc.writeMem(0xd759, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x869c, gbc.sp());
        EXPECT(0xd75b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd759));
        EXPECT(0x9b, gbc.readMem(0xd75a));
        // CB 9B 02B6
        gbc.setState(0x5bee, 0x74a2, 0xa2b0, 0x38ea, 0x54a6, 0x7251, 0x1, 0x0);
        gbc.writeMem(0x5bee, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x74a2, gbc.sp());
        EXPECT(0x5bf0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02B7
        gbc.setState(0xb31e, 0x6193, 0xe7a0, 0xa2c7, 0xb9da, 0x51e9, 0x1, 0x0);
        gbc.writeMem(0xb31e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x6193, gbc.sp());
        EXPECT(0xb320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb31e));
        EXPECT(0x9b, gbc.readMem(0xb31f));
        // CB 9B 02B8
        gbc.setState(0x524e, 0x1d7a, 0x2c20, 0xd05c, 0xa66b, 0x6704, 0x1, 0x0);
        gbc.writeMem(0x524e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x1d7a, gbc.sp());
        EXPECT(0x5250, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02B9
        gbc.setState(0x70cc, 0x8e41, 0xda50, 0x2b6a, 0xb8cf, 0xd4ea, 0x0, 0x0);
        gbc.writeMem(0x70cc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x8e41, gbc.sp());
        EXPECT(0x70ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02BA
        gbc.setState(0x893d, 0x38c2, 0x71c0, 0x68d9, 0x6b58, 0x80ef, 0x0, 0x1);
        gbc.writeMem(0x893d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x38c2, gbc.sp());
        EXPECT(0x893f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x893d));
        EXPECT(0x9b, gbc.readMem(0x893e));
        // CB 9B 02BB
        gbc.setState(0xd37e, 0xb63d, 0xcc0, 0x3f51, 0x5b94, 0xe138, 0x1, 0x0);
        gbc.writeMem(0xd37e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xb63d, gbc.sp());
        EXPECT(0xd380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd37e));
        EXPECT(0x9b, gbc.readMem(0xd37f));
        // CB 9B 02BC
        gbc.setState(0x5076, 0xdf3c, 0xc160, 0xf496, 0x16d8, 0xa227, 0x0, 0x0);
        gbc.writeMem(0x5076, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xdf3c, gbc.sp());
        EXPECT(0x5078, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02BE
        gbc.setState(0xcc87, 0x6208, 0x53b0, 0xe27, 0x69df, 0x2afd, 0x1, 0x1);
        gbc.writeMem(0xcc87, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6208, gbc.sp());
        EXPECT(0xcc89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc87));
        EXPECT(0x9b, gbc.readMem(0xcc88));
        // CB 9B 02BF
        gbc.setState(0x2f31, 0x908d, 0x47b0, 0x97e, 0xd295, 0xbc38, 0x0, 0x1);
        gbc.writeMem(0x2f31, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x908d, gbc.sp());
        EXPECT(0x2f33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02C0
        gbc.setState(0x5215, 0x7c36, 0x5ca0, 0xee18, 0xc032, 0x482f, 0x1, 0x0);
        gbc.writeMem(0x5215, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7c36, gbc.sp());
        EXPECT(0x5217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02C1
        gbc.setState(0x5331, 0xfc3f, 0x4ab0, 0xb44, 0xd91b, 0x5b9b, 0x0, 0x0);
        gbc.writeMem(0x5331, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xfc3f, gbc.sp());
        EXPECT(0x5333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02C2
        gbc.setState(0x3485, 0x240e, 0x2050, 0x8560, 0xbcf4, 0xed00, 0x0, 0x1);
        gbc.writeMem(0x3485, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x240e, gbc.sp());
        EXPECT(0x3487, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02C3
        gbc.setState(0xdb4b, 0xbc5c, 0x19a0, 0x92c7, 0xa121, 0xadb3, 0x0, 0x1);
        gbc.writeMem(0xdb4b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xbc5c, gbc.sp());
        EXPECT(0xdb4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdb4b));
        EXPECT(0x9b, gbc.readMem(0xdb4c));
        // CB 9B 02C4
        gbc.setState(0x1a10, 0x3830, 0x9970, 0x9416, 0x3c7b, 0x6703, 0x1, 0x0);
        gbc.writeMem(0x1a10, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x3830, gbc.sp());
        EXPECT(0x1a12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02C5
        gbc.setState(0xc6d7, 0x8d12, 0xe7a0, 0x845f, 0x7f27, 0x7e4e, 0x0, 0x0);
        gbc.writeMem(0xc6d7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8d12, gbc.sp());
        EXPECT(0xc6d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d7));
        EXPECT(0x9b, gbc.readMem(0xc6d8));
        // CB 9B 02C6
        gbc.setState(0x6d48, 0x746a, 0x6000, 0xaded, 0x6496, 0xe9d9, 0x0, 0x0);
        gbc.writeMem(0x6d48, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x746a, gbc.sp());
        EXPECT(0x6d4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02C7
        gbc.setState(0xd9ec, 0xb862, 0x2780, 0x1053, 0x988, 0x1374, 0x1, 0x0);
        gbc.writeMem(0xd9ec, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb862, gbc.sp());
        EXPECT(0xd9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd9ec));
        EXPECT(0x9b, gbc.readMem(0xd9ed));
        // CB 9B 02C8
        gbc.setState(0xa8d, 0x86bf, 0x7d10, 0x4cf8, 0x715d, 0x2f79, 0x0, 0x1);
        gbc.writeMem(0xa8d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x86bf, gbc.sp());
        EXPECT(0xa8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02C9
        gbc.setState(0x2f84, 0x6304, 0x1470, 0xfceb, 0x7b7, 0xf431, 0x1, 0x0);
        gbc.writeMem(0x2f84, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6304, gbc.sp());
        EXPECT(0x2f86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02CA
        gbc.setState(0x8d10, 0xf344, 0x4110, 0x8db7, 0x7ae4, 0x7a55, 0x1, 0x1);
        gbc.writeMem(0x8d10, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf344, gbc.sp());
        EXPECT(0x8d12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d10));
        EXPECT(0x9b, gbc.readMem(0x8d11));
        // CB 9B 02CB
        gbc.setState(0x659f, 0x2ee7, 0xdc50, 0x1e6e, 0x3f3e, 0x81f7, 0x0, 0x1);
        gbc.writeMem(0x659f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2ee7, gbc.sp());
        EXPECT(0x65a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02CC
        gbc.setState(0x190b, 0x61f7, 0xb390, 0x384b, 0x912a, 0x7ff5, 0x1, 0x1);
        gbc.writeMem(0x190b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x61f7, gbc.sp());
        EXPECT(0x190d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02CD
        gbc.setState(0x54e, 0xef3d, 0xca20, 0xe3b4, 0xcda0, 0x1310, 0x0, 0x1);
        gbc.writeMem(0x54e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xef3d, gbc.sp());
        EXPECT(0x550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02CE
        gbc.setState(0x602a, 0x174a, 0xdf70, 0x109d, 0x8423, 0x669f, 0x0, 0x1);
        gbc.writeMem(0x602a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x174a, gbc.sp());
        EXPECT(0x602c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02CF
        gbc.setState(0x3b8b, 0xccd8, 0xc410, 0xb891, 0xf60e, 0xee29, 0x1, 0x1);
        gbc.writeMem(0x3b8b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xccd8, gbc.sp());
        EXPECT(0x3b8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02D0
        gbc.setState(0x11bf, 0x38bb, 0x64c0, 0xb20d, 0xd26a, 0xa43f, 0x1, 0x0);
        gbc.writeMem(0x11bf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x38bb, gbc.sp());
        EXPECT(0x11c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02D1
        gbc.setState(0x119a, 0xeed2, 0x8990, 0x89a9, 0x8211, 0xc45c, 0x0, 0x0);
        gbc.writeMem(0x119a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xeed2, gbc.sp());
        EXPECT(0x119c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02D2
        gbc.setState(0xe200, 0xbf37, 0x15b0, 0xce39, 0x20b, 0xafa0, 0x0, 0x1);
        gbc.writeMem(0xe200, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xbf37, gbc.sp());
        EXPECT(0xe202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe200));
        EXPECT(0x9b, gbc.readMem(0xe201));
        // CB 9B 02D3
        gbc.setState(0x8d66, 0xd563, 0xb570, 0x6fda, 0x5860, 0xe321, 0x1, 0x1);
        gbc.writeMem(0x8d66, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xd563, gbc.sp());
        EXPECT(0x8d68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d66));
        EXPECT(0x9b, gbc.readMem(0x8d67));
        // CB 9B 02D5
        gbc.setState(0x6d82, 0x51a5, 0xe680, 0xbdb6, 0x8aa8, 0x4b69, 0x1, 0x1);
        gbc.writeMem(0x6d82, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x51a5, gbc.sp());
        EXPECT(0x6d84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02D6
        gbc.setState(0x5b7b, 0xd7de, 0x6450, 0x3d5e, 0x5487, 0xd454, 0x1, 0x1);
        gbc.writeMem(0x5b7b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd7de, gbc.sp());
        EXPECT(0x5b7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02D7
        gbc.setState(0x9555, 0x6cb0, 0x4220, 0xe751, 0x9161, 0x8816, 0x1, 0x1);
        gbc.writeMem(0x9555, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x6cb0, gbc.sp());
        EXPECT(0x9557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9555));
        EXPECT(0x9b, gbc.readMem(0x9556));
        // CB 9B 02D8
        gbc.setState(0x9ba8, 0xb0a2, 0x7e0, 0xd6d8, 0x46b, 0x5f12, 0x1, 0x0);
        gbc.writeMem(0x9ba8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xb0a2, gbc.sp());
        EXPECT(0x9baa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ba8));
        EXPECT(0x9b, gbc.readMem(0x9ba9));
        // CB 9B 02D9
        gbc.setState(0x15b2, 0x6aa7, 0x6810, 0x76e2, 0x84c6, 0xee5d, 0x0, 0x1);
        gbc.writeMem(0x15b2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x6aa7, gbc.sp());
        EXPECT(0x15b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02DA
        gbc.setState(0x9dc7, 0xbd7f, 0xe1a0, 0xfe15, 0xe743, 0xad56, 0x0, 0x0);
        gbc.writeMem(0x9dc7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbd7f, gbc.sp());
        EXPECT(0x9dc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9dc7));
        EXPECT(0x9b, gbc.readMem(0x9dc8));
        // CB 9B 02DB
        gbc.setState(0x1051, 0x6e6d, 0x6290, 0xe2cc, 0x8cba, 0xdd71, 0x0, 0x0);
        gbc.writeMem(0x1051, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6e6d, gbc.sp());
        EXPECT(0x1053, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02DC
        gbc.setState(0x9b0e, 0xdeca, 0xd8a0, 0xe2e9, 0x8cae, 0xac24, 0x0, 0x0);
        gbc.writeMem(0x9b0e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xdeca, gbc.sp());
        EXPECT(0x9b10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b0e));
        EXPECT(0x9b, gbc.readMem(0x9b0f));
        // CB 9B 02DD
        gbc.setState(0x4ba4, 0xaf7f, 0x5b80, 0xbf75, 0x21da, 0x71b4, 0x0, 0x1);
        gbc.writeMem(0x4ba4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xaf7f, gbc.sp());
        EXPECT(0x4ba6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02DE
        gbc.setState(0x1734, 0xdd1c, 0x25c0, 0x2946, 0x2dfd, 0x4af7, 0x1, 0x1);
        gbc.writeMem(0x1734, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xdd1c, gbc.sp());
        EXPECT(0x1736, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02DF
        gbc.setState(0x43c3, 0xc162, 0x5280, 0x955, 0x819b, 0xc75f, 0x0, 0x1);
        gbc.writeMem(0x43c3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xc162, gbc.sp());
        EXPECT(0x43c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02E0
        gbc.setState(0xea32, 0x4c70, 0x1df0, 0x97f4, 0x7f88, 0x634, 0x0, 0x0);
        gbc.writeMem(0xea32, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4c70, gbc.sp());
        EXPECT(0xea34, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xea32));
        EXPECT(0x9b, gbc.readMem(0xea33));
        // CB 9B 02E1
        gbc.setState(0xe563, 0x56b, 0x5b70, 0xc08c, 0x5ff8, 0x8d5a, 0x1, 0x1);
        gbc.writeMem(0xe563, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x56b, gbc.sp());
        EXPECT(0xe565, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe563));
        EXPECT(0x9b, gbc.readMem(0xe564));
        // CB 9B 02E2
        gbc.setState(0x9368, 0x9728, 0xa9b0, 0xeaa7, 0x5fb2, 0x1c8f, 0x0, 0x1);
        gbc.writeMem(0x9368, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x9728, gbc.sp());
        EXPECT(0x936a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9368));
        EXPECT(0x9b, gbc.readMem(0x9369));
        // CB 9B 02E3
        gbc.setState(0x4910, 0x67c7, 0xb080, 0x3cd0, 0x7baf, 0x438f, 0x1, 0x0);
        gbc.writeMem(0x4910, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x67c7, gbc.sp());
        EXPECT(0x4912, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02E4
        gbc.setState(0x130f, 0x6936, 0xe770, 0x208, 0xb103, 0xb853, 0x1, 0x0);
        gbc.writeMem(0x130f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x6936, gbc.sp());
        EXPECT(0x1311, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02E6
        gbc.setState(0x79c4, 0x55a7, 0xcdb0, 0x461d, 0x1d56, 0x5ec1, 0x0, 0x0);
        gbc.writeMem(0x79c4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x55a7, gbc.sp());
        EXPECT(0x79c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02E7
        gbc.setState(0xd24f, 0xf055, 0x7790, 0x5854, 0xc3d2, 0x3113, 0x1, 0x1);
        gbc.writeMem(0xd24f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xf055, gbc.sp());
        EXPECT(0xd251, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd24f));
        EXPECT(0x9b, gbc.readMem(0xd250));
        // CB 9B 02E8
        gbc.setState(0x83cb, 0xf66b, 0xa7d0, 0x83a2, 0xf7bd, 0x3cbf, 0x0, 0x1);
        gbc.writeMem(0x83cb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf66b, gbc.sp());
        EXPECT(0x83cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83cb));
        EXPECT(0x9b, gbc.readMem(0x83cc));
        // CB 9B 02E9
        gbc.setState(0x2213, 0xd620, 0x58c0, 0x513, 0xb1f2, 0x8b67, 0x1, 0x0);
        gbc.writeMem(0x2213, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xd620, gbc.sp());
        EXPECT(0x2215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02EA
        gbc.setState(0x715c, 0x66b6, 0xa290, 0x2b97, 0xd238, 0xd97c, 0x1, 0x0);
        gbc.writeMem(0x715c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x66b6, gbc.sp());
        EXPECT(0x715e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02EB
        gbc.setState(0xb9d, 0xa33d, 0x9fb0, 0x8b8a, 0x92b2, 0x1ebf, 0x1, 0x0);
        gbc.writeMem(0xb9d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xa33d, gbc.sp());
        EXPECT(0xb9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02EC
        gbc.setState(0xb636, 0x5408, 0xf310, 0x88fc, 0xeeac, 0x4ba7, 0x1, 0x1);
        gbc.writeMem(0xb636, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x5408, gbc.sp());
        EXPECT(0xb638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb636));
        EXPECT(0x9b, gbc.readMem(0xb637));
        // CB 9B 02ED
        gbc.setState(0x8c61, 0xbb52, 0x6f20, 0x329e, 0x36c5, 0x1251, 0x1, 0x0);
        gbc.writeMem(0x8c61, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xbb52, gbc.sp());
        EXPECT(0x8c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c61));
        EXPECT(0x9b, gbc.readMem(0x8c62));
        // CB 9B 02EE
        gbc.setState(0x5144, 0xb6de, 0xcc70, 0xa0d9, 0x87b9, 0x8a43, 0x1, 0x1);
        gbc.writeMem(0x5144, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xb6de, gbc.sp());
        EXPECT(0x5146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02EF
        gbc.setState(0x4be6, 0xac5b, 0x2c80, 0xd398, 0xa28a, 0x6b86, 0x1, 0x0);
        gbc.writeMem(0x4be6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xac5b, gbc.sp());
        EXPECT(0x4be8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02F0
        gbc.setState(0x4322, 0xd0d3, 0xcc70, 0x11e4, 0xcf39, 0xfbd9, 0x1, 0x1);
        gbc.writeMem(0x4322, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xd0d3, gbc.sp());
        EXPECT(0x4324, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02F1
        gbc.setState(0x4f7f, 0xec8e, 0x920, 0xc9c8, 0xf9b7, 0xa557, 0x1, 0x0);
        gbc.writeMem(0x4f7f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xec8e, gbc.sp());
        EXPECT(0x4f81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02F2
        gbc.setState(0x443e, 0xc493, 0x8620, 0x3448, 0x9fed, 0xd91d, 0x0, 0x0);
        gbc.writeMem(0x443e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc493, gbc.sp());
        EXPECT(0x4440, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02F3
        gbc.setState(0x2c0d, 0x48d0, 0x440, 0xf7e5, 0x474e, 0x72ef, 0x0, 0x1);
        gbc.writeMem(0x2c0d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x48d0, gbc.sp());
        EXPECT(0x2c0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02F4
        gbc.setState(0x9d21, 0xffae, 0x93f0, 0xa26a, 0x7cff, 0x7e2f, 0x1, 0x0);
        gbc.writeMem(0x9d21, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xffae, gbc.sp());
        EXPECT(0x9d23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d21));
        EXPECT(0x9b, gbc.readMem(0x9d22));
        // CB 9B 02F5
        gbc.setState(0xc453, 0x3d30, 0x4ec0, 0x256f, 0x4602, 0xa6cb, 0x0, 0x0);
        gbc.writeMem(0xc453, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3d30, gbc.sp());
        EXPECT(0xc455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc453));
        EXPECT(0x9b, gbc.readMem(0xc454));
        // CB 9B 02F7
        gbc.setState(0xc381, 0x62b5, 0x21b0, 0xbb83, 0xec15, 0x7c2, 0x1, 0x1);
        gbc.writeMem(0xc381, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x62b5, gbc.sp());
        EXPECT(0xc383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc381));
        EXPECT(0x9b, gbc.readMem(0xc382));
        // CB 9B 02F9
        gbc.setState(0xc6e4, 0x9cf7, 0x2430, 0x6cfc, 0x514c, 0x3432, 0x1, 0x1);
        gbc.writeMem(0xc6e4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9cf7, gbc.sp());
        EXPECT(0xc6e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6e4));
        EXPECT(0x9b, gbc.readMem(0xc6e5));
        // CB 9B 02FA
        gbc.setState(0xbe0d, 0x1d05, 0x2e00, 0x17a7, 0xd5b6, 0xcfb4, 0x0, 0x1);
        gbc.writeMem(0xbe0d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x1d05, gbc.sp());
        EXPECT(0xbe0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbe0d));
        EXPECT(0x9b, gbc.readMem(0xbe0e));
        // CB 9B 02FB
        gbc.setState(0xdd29, 0xa56, 0x8310, 0x743a, 0x1a17, 0xb58e, 0x1, 0x0);
        gbc.writeMem(0xdd29, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xa56, gbc.sp());
        EXPECT(0xdd2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd29));
        EXPECT(0x9b, gbc.readMem(0xdd2a));
        // CB 9B 02FC
        gbc.setState(0x6809, 0xa363, 0xf2a0, 0x7d25, 0xaac9, 0xa7b6, 0x1, 0x0);
        gbc.writeMem(0x6809, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xa363, gbc.sp());
        EXPECT(0x680b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 02FD
        gbc.setState(0x9611, 0xad97, 0xfd00, 0xc9a3, 0xedca, 0x75c6, 0x1, 0x0);
        gbc.writeMem(0x9611, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xad97, gbc.sp());
        EXPECT(0x9613, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9611));
        EXPECT(0x9b, gbc.readMem(0x9612));
        // CB 9B 02FE
        gbc.setState(0x38b4, 0x62c1, 0x8410, 0xe571, 0x86ba, 0x66e1, 0x1, 0x0);
        gbc.writeMem(0x38b4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x62c1, gbc.sp());
        EXPECT(0x38b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 02FF
        gbc.setState(0x5ab7, 0xd7e6, 0xcc90, 0x871e, 0xff0b, 0x279b, 0x0, 0x1);
        gbc.writeMem(0x5ab7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xd7e6, gbc.sp());
        EXPECT(0x5ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0300
        gbc.setState(0x95c1, 0x545d, 0x3940, 0x10cc, 0x184d, 0xe985, 0x0, 0x0);
        gbc.writeMem(0x95c1, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x545d, gbc.sp());
        EXPECT(0x95c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c1));
        EXPECT(0x9b, gbc.readMem(0x95c2));
        // CB 9B 0301
        gbc.setState(0x15c, 0xfe7b, 0x9e50, 0xdab4, 0xc7df, 0xe467, 0x0, 0x0);
        gbc.writeMem(0x15c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xfe7b, gbc.sp());
        EXPECT(0x15e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0303
        gbc.setState(0x3128, 0x9399, 0x93c0, 0xce1d, 0x561a, 0xcd6e, 0x1, 0x1);
        gbc.writeMem(0x3128, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x9399, gbc.sp());
        EXPECT(0x312a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0304
        gbc.setState(0x229a, 0xa64b, 0x11e0, 0xf16c, 0x5086, 0xbb78, 0x1, 0x1);
        gbc.writeMem(0x229a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa64b, gbc.sp());
        EXPECT(0x229c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0305
        gbc.setState(0xace9, 0x62b6, 0x8280, 0x3575, 0x4ece, 0xe62e, 0x1, 0x1);
        gbc.writeMem(0xace9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x62b6, gbc.sp());
        EXPECT(0xaceb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xace9));
        EXPECT(0x9b, gbc.readMem(0xacea));
        // CB 9B 0306
        gbc.setState(0xc91f, 0xc69, 0xe610, 0x6b62, 0xc81a, 0x266, 0x0, 0x0);
        gbc.writeMem(0xc91f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xc69, gbc.sp());
        EXPECT(0xc921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc91f));
        EXPECT(0x9b, gbc.readMem(0xc920));
        // CB 9B 0307
        gbc.setState(0x2d6c, 0xf559, 0x7fa0, 0x40c7, 0x6e95, 0x284c, 0x0, 0x0);
        gbc.writeMem(0x2d6c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xf559, gbc.sp());
        EXPECT(0x2d6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0308
        gbc.setState(0xe69d, 0xf6b3, 0x2880, 0xd2c1, 0x34ee, 0x15a9, 0x1, 0x1);
        gbc.writeMem(0xe69d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf6b3, gbc.sp());
        EXPECT(0xe69f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe69d));
        EXPECT(0x9b, gbc.readMem(0xe69e));
        // CB 9B 0309
        gbc.setState(0x2c3e, 0x5705, 0x8290, 0x1b72, 0xd5a6, 0x62b7, 0x1, 0x0);
        gbc.writeMem(0x2c3e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5705, gbc.sp());
        EXPECT(0x2c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 030B
        gbc.setState(0x22ca, 0x13f0, 0x3ce0, 0x841b, 0x6965, 0xe8ee, 0x0, 0x0);
        gbc.writeMem(0x22ca, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x13f0, gbc.sp());
        EXPECT(0x22cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 030D
        gbc.setState(0xe7a5, 0x4523, 0x1b00, 0xed3b, 0x13aa, 0xdf0a, 0x1, 0x1);
        gbc.writeMem(0xe7a5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4523, gbc.sp());
        EXPECT(0xe7a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7a5));
        EXPECT(0x9b, gbc.readMem(0xe7a6));
        // CB 9B 030E
        gbc.setState(0x93df, 0xdf7, 0x3000, 0x13ea, 0x8cf3, 0x92ee, 0x1, 0x1);
        gbc.writeMem(0x93df, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xdf7, gbc.sp());
        EXPECT(0x93e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93df));
        EXPECT(0x9b, gbc.readMem(0x93e0));
        // CB 9B 030F
        gbc.setState(0x8ae6, 0xdb96, 0xb700, 0x5f79, 0x997f, 0x8b85, 0x1, 0x0);
        gbc.writeMem(0x8ae6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xdb96, gbc.sp());
        EXPECT(0x8ae8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ae6));
        EXPECT(0x9b, gbc.readMem(0x8ae7));
        // CB 9B 0310
        gbc.setState(0xc368, 0xf66f, 0x45c0, 0xdd00, 0xf87f, 0xd54a, 0x0, 0x0);
        gbc.writeMem(0xc368, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf66f, gbc.sp());
        EXPECT(0xc36a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc368));
        EXPECT(0x9b, gbc.readMem(0xc369));
        // CB 9B 0311
        gbc.setState(0x6317, 0xc88c, 0xac40, 0x76a8, 0x2ea4, 0x6c59, 0x0, 0x0);
        gbc.writeMem(0x6317, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc88c, gbc.sp());
        EXPECT(0x6319, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0312
        gbc.setState(0x37dd, 0x6560, 0xc670, 0x8e1e, 0xf3b6, 0x96f1, 0x1, 0x1);
        gbc.writeMem(0x37dd, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6560, gbc.sp());
        EXPECT(0x37df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0314
        gbc.setState(0x6f23, 0x2bcf, 0xd880, 0x1226, 0x4519, 0xc9d5, 0x0, 0x1);
        gbc.writeMem(0x6f23, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2bcf, gbc.sp());
        EXPECT(0x6f25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0315
        gbc.setState(0x9f40, 0xa8c9, 0xca0, 0x7fb, 0x534b, 0x173b, 0x1, 0x1);
        gbc.writeMem(0x9f40, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xa8c9, gbc.sp());
        EXPECT(0x9f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f40));
        EXPECT(0x9b, gbc.readMem(0x9f41));
        // CB 9B 0316
        gbc.setState(0x6b54, 0x2aae, 0x3240, 0x706d, 0xaeb0, 0x3f0, 0x1, 0x0);
        gbc.writeMem(0x6b54, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2aae, gbc.sp());
        EXPECT(0x6b56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0317
        gbc.setState(0xc0c5, 0x2dbe, 0xde20, 0x29d0, 0x20c7, 0xaa40, 0x1, 0x0);
        gbc.writeMem(0xc0c5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x2dbe, gbc.sp());
        EXPECT(0xc0c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0c5));
        EXPECT(0x9b, gbc.readMem(0xc0c6));
        // CB 9B 0318
        gbc.setState(0xd251, 0xc04e, 0x2170, 0x449f, 0x4167, 0x7baa, 0x1, 0x1);
        gbc.writeMem(0xd251, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc04e, gbc.sp());
        EXPECT(0xd253, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd251));
        EXPECT(0x9b, gbc.readMem(0xd252));
        // CB 9B 0319
        gbc.setState(0x1173, 0x465e, 0x49f0, 0x5e58, 0x5e8b, 0xab75, 0x1, 0x1);
        gbc.writeMem(0x1173, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x465e, gbc.sp());
        EXPECT(0x1175, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 031B
        gbc.setState(0x9d70, 0x99c2, 0x4750, 0xf1e1, 0x754e, 0xdda0, 0x0, 0x1);
        gbc.writeMem(0x9d70, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x99c2, gbc.sp());
        EXPECT(0x9d72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d70));
        EXPECT(0x9b, gbc.readMem(0x9d71));
        // CB 9B 031D
        gbc.setState(0x4121, 0x2672, 0x54c0, 0xfd67, 0x746d, 0x5a5e, 0x1, 0x1);
        gbc.writeMem(0x4121, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2672, gbc.sp());
        EXPECT(0x4123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 031E
        gbc.setState(0x45ac, 0x576, 0x2710, 0x2a3e, 0xcebb, 0x5dc6, 0x1, 0x1);
        gbc.writeMem(0x45ac, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x576, gbc.sp());
        EXPECT(0x45ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 031F
        gbc.setState(0xd758, 0x9986, 0x5670, 0x8868, 0x663a, 0x6c50, 0x1, 0x0);
        gbc.writeMem(0xd758, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x9986, gbc.sp());
        EXPECT(0xd75a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd758));
        EXPECT(0x9b, gbc.readMem(0xd759));
        // CB 9B 0320
        gbc.setState(0x5a13, 0xcca8, 0x41b0, 0x8354, 0x2b61, 0x7201, 0x0, 0x0);
        gbc.writeMem(0x5a13, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xcca8, gbc.sp());
        EXPECT(0x5a15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0321
        gbc.setState(0xe89f, 0xce1c, 0x3ad0, 0xe986, 0xc526, 0xdaa4, 0x1, 0x1);
        gbc.writeMem(0xe89f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xce1c, gbc.sp());
        EXPECT(0xe8a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe89f));
        EXPECT(0x9b, gbc.readMem(0xe8a0));
        // CB 9B 0322
        gbc.setState(0xc3c5, 0x79e, 0xfb60, 0xc547, 0x71a8, 0xde29, 0x0, 0x0);
        gbc.writeMem(0xc3c5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x79e, gbc.sp());
        EXPECT(0xc3c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c5));
        EXPECT(0x9b, gbc.readMem(0xc3c6));
        // CB 9B 0323
        gbc.setState(0x74c7, 0xf9b7, 0xa7a0, 0x281f, 0xf7e7, 0xab72, 0x0, 0x1);
        gbc.writeMem(0x74c7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf9b7, gbc.sp());
        EXPECT(0x74c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0324
        gbc.setState(0xc426, 0x3ed2, 0xd6b0, 0x6590, 0x2d38, 0x4227, 0x1, 0x1);
        gbc.writeMem(0xc426, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3ed2, gbc.sp());
        EXPECT(0xc428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc426));
        EXPECT(0x9b, gbc.readMem(0xc427));
        // CB 9B 0325
        gbc.setState(0xc2d5, 0x320c, 0x1fb0, 0xf777, 0xc0eb, 0x1bc0, 0x0, 0x0);
        gbc.writeMem(0xc2d5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x320c, gbc.sp());
        EXPECT(0xc2d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2d5));
        EXPECT(0x9b, gbc.readMem(0xc2d6));
        // CB 9B 0326
        gbc.setState(0x6545, 0x2382, 0x3ba0, 0x78fe, 0x55e7, 0x6589, 0x1, 0x0);
        gbc.writeMem(0x6545, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x2382, gbc.sp());
        EXPECT(0x6547, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0327
        gbc.setState(0xbad6, 0xde46, 0x8310, 0x176e, 0x6678, 0xcb43, 0x0, 0x0);
        gbc.writeMem(0xbad6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xde46, gbc.sp());
        EXPECT(0xbad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbad6));
        EXPECT(0x9b, gbc.readMem(0xbad7));
        // CB 9B 0328
        gbc.setState(0xcc72, 0x5272, 0x9e40, 0xa2fc, 0xa9e4, 0x4a2b, 0x1, 0x1);
        gbc.writeMem(0xcc72, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x5272, gbc.sp());
        EXPECT(0xcc74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc72));
        EXPECT(0x9b, gbc.readMem(0xcc73));
        // CB 9B 0329
        gbc.setState(0x649f, 0x3088, 0x8ef0, 0x6a52, 0x4655, 0x68bf, 0x1, 0x0);
        gbc.writeMem(0x649f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x3088, gbc.sp());
        EXPECT(0x64a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 032A
        gbc.setState(0x7a0, 0x42b4, 0x4760, 0xac73, 0xd243, 0xa381, 0x1, 0x1);
        gbc.writeMem(0x7a0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x42b4, gbc.sp());
        EXPECT(0x7a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 032B
        gbc.setState(0x582f, 0xfa47, 0xdf50, 0xadde, 0x1d98, 0x533c, 0x1, 0x1);
        gbc.writeMem(0x582f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xfa47, gbc.sp());
        EXPECT(0x5831, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 032C
        gbc.setState(0x87ba, 0x963b, 0x1cd0, 0x47bc, 0xcc9d, 0x6428, 0x0, 0x1);
        gbc.writeMem(0x87ba, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x963b, gbc.sp());
        EXPECT(0x87bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ba));
        EXPECT(0x9b, gbc.readMem(0x87bb));
        // CB 9B 032D
        gbc.setState(0xd41f, 0xfdce, 0xcd10, 0xd90f, 0x7345, 0x1b, 0x1, 0x1);
        gbc.writeMem(0xd41f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xfdce, gbc.sp());
        EXPECT(0xd421, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41f));
        EXPECT(0x9b, gbc.readMem(0xd420));
        // CB 9B 032E
        gbc.setState(0xa51, 0x6e15, 0x7200, 0x606b, 0xb736, 0x52c4, 0x1, 0x0);
        gbc.writeMem(0xa51, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x6e15, gbc.sp());
        EXPECT(0xa53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 032F
        gbc.setState(0x346c, 0x74b8, 0x3320, 0x84f0, 0xbd04, 0xb36c, 0x1, 0x1);
        gbc.writeMem(0x346c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x74b8, gbc.sp());
        EXPECT(0x346e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0330
        gbc.setState(0xf68, 0xf489, 0x8160, 0xe832, 0xfbb, 0xa386, 0x0, 0x0);
        gbc.writeMem(0xf68, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xf489, gbc.sp());
        EXPECT(0xf6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0331
        gbc.setState(0x5b83, 0x34a5, 0xbf10, 0x22d8, 0xa90e, 0xbd91, 0x0, 0x1);
        gbc.writeMem(0x5b83, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x34a5, gbc.sp());
        EXPECT(0x5b85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0332
        gbc.setState(0xf56, 0x2a7f, 0x1190, 0x158c, 0x1775, 0x1de4, 0x0, 0x0);
        gbc.writeMem(0xf56, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x2a7f, gbc.sp());
        EXPECT(0xf58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0334
        gbc.setState(0xb51d, 0x274d, 0xed0, 0x5603, 0xb03f, 0x5cfb, 0x1, 0x1);
        gbc.writeMem(0xb51d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x274d, gbc.sp());
        EXPECT(0xb51f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb51d));
        EXPECT(0x9b, gbc.readMem(0xb51e));
        // CB 9B 0335
        gbc.setState(0x58ab, 0xd3e6, 0xd150, 0x9e3, 0xc8ec, 0x767d, 0x0, 0x0);
        gbc.writeMem(0x58ab, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xd3e6, gbc.sp());
        EXPECT(0x58ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0336
        gbc.setState(0x953b, 0x62b2, 0xa8a0, 0x1e08, 0x5e7d, 0x5446, 0x1, 0x0);
        gbc.writeMem(0x953b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x62b2, gbc.sp());
        EXPECT(0x953d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x953b));
        EXPECT(0x9b, gbc.readMem(0x953c));
        // CB 9B 0337
        gbc.setState(0xb55d, 0x5d99, 0x8bd0, 0x6088, 0x30b4, 0x5a8e, 0x0, 0x1);
        gbc.writeMem(0xb55d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5d99, gbc.sp());
        EXPECT(0xb55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb55d));
        EXPECT(0x9b, gbc.readMem(0xb55e));
        // CB 9B 0338
        gbc.setState(0xb315, 0xd91, 0xeda0, 0xf5aa, 0x75c5, 0xc14c, 0x1, 0x0);
        gbc.writeMem(0xb315, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xd91, gbc.sp());
        EXPECT(0xb317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb315));
        EXPECT(0x9b, gbc.readMem(0xb316));
        // CB 9B 033A
        gbc.setState(0xcd9a, 0x5752, 0xb1a0, 0x2af1, 0xf45f, 0x9afc, 0x1, 0x1);
        gbc.writeMem(0xcd9a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x5752, gbc.sp());
        EXPECT(0xcd9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcd9a));
        EXPECT(0x9b, gbc.readMem(0xcd9b));
        // CB 9B 033B
        gbc.setState(0x965, 0x87cd, 0x55a0, 0x8dc0, 0x7249, 0x2775, 0x1, 0x1);
        gbc.writeMem(0x965, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x87cd, gbc.sp());
        EXPECT(0x967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 033C
        gbc.setState(0xdd5d, 0x77e8, 0x9550, 0xfb10, 0x6998, 0x6db3, 0x1, 0x0);
        gbc.writeMem(0xdd5d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x77e8, gbc.sp());
        EXPECT(0xdd5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdd5d));
        EXPECT(0x9b, gbc.readMem(0xdd5e));
        // CB 9B 033D
        gbc.setState(0x7971, 0xab53, 0x11f0, 0x6793, 0x2a24, 0xcb96, 0x1, 0x1);
        gbc.writeMem(0x7971, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xab53, gbc.sp());
        EXPECT(0x7973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 033E
        gbc.setState(0x260f, 0xcdfc, 0x96c0, 0xfa01, 0x3c0d, 0x23c3, 0x0, 0x1);
        gbc.writeMem(0x260f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xcdfc, gbc.sp());
        EXPECT(0x2611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 033F
        gbc.setState(0x8a0, 0xe5ca, 0x8280, 0x1c8d, 0x664c, 0x8306, 0x1, 0x1);
        gbc.writeMem(0x8a0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe5ca, gbc.sp());
        EXPECT(0x8a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0340
        gbc.setState(0xce34, 0x7cfa, 0x2710, 0x7611, 0x40d0, 0xc6b0, 0x0, 0x1);
        gbc.writeMem(0xce34, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7cfa, gbc.sp());
        EXPECT(0xce36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xce34));
        EXPECT(0x9b, gbc.readMem(0xce35));
        // CB 9B 0341
        gbc.setState(0x549, 0x3c08, 0x5ec0, 0xfda7, 0x5da3, 0xfa73, 0x0, 0x1);
        gbc.writeMem(0x549, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3c08, gbc.sp());
        EXPECT(0x54b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0342
        gbc.setState(0xe895, 0x7bee, 0x6760, 0xa0f1, 0x6543, 0x59d5, 0x1, 0x0);
        gbc.writeMem(0xe895, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7bee, gbc.sp());
        EXPECT(0xe897, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe895));
        EXPECT(0x9b, gbc.readMem(0xe896));
        // CB 9B 0343
        gbc.setState(0x896a, 0x6712, 0xd300, 0xf646, 0x10d6, 0xff19, 0x0, 0x1);
        gbc.writeMem(0x896a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6712, gbc.sp());
        EXPECT(0x896c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x896a));
        EXPECT(0x9b, gbc.readMem(0x896b));
        // CB 9B 0344
        gbc.setState(0x3903, 0xc1cb, 0xfb80, 0x1598, 0x758, 0x36a2, 0x0, 0x1);
        gbc.writeMem(0x3903, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc1cb, gbc.sp());
        EXPECT(0x3905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0345
        gbc.setState(0xd984, 0xf7c8, 0x1fb0, 0x9fa0, 0x2dcf, 0xf01a, 0x1, 0x1);
        gbc.writeMem(0xd984, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xf7c8, gbc.sp());
        EXPECT(0xd986, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd984));
        EXPECT(0x9b, gbc.readMem(0xd985));
        // CB 9B 0346
        gbc.setState(0x3a98, 0x548e, 0x74d0, 0x60e4, 0xae46, 0xba61, 0x1, 0x0);
        gbc.writeMem(0x3a98, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x548e, gbc.sp());
        EXPECT(0x3a9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0347
        gbc.setState(0x915b, 0xf1c1, 0x8830, 0x56dc, 0x4c21, 0x596a, 0x0, 0x1);
        gbc.writeMem(0x915b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf1c1, gbc.sp());
        EXPECT(0x915d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x915b));
        EXPECT(0x9b, gbc.readMem(0x915c));
        // CB 9B 0348
        gbc.setState(0x5c12, 0x5d19, 0x72e0, 0x746b, 0xfec2, 0xbdc4, 0x1, 0x0);
        gbc.writeMem(0x5c12, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5d19, gbc.sp());
        EXPECT(0x5c14, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0349
        gbc.setState(0x7f75, 0x8114, 0xdda0, 0x96f5, 0xda3a, 0x8520, 0x0, 0x0);
        gbc.writeMem(0x7f75, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8114, gbc.sp());
        EXPECT(0x7f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 034A
        gbc.setState(0x4915, 0x8fd5, 0x5030, 0x8d2d, 0xb148, 0x36db, 0x1, 0x1);
        gbc.writeMem(0x4915, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8fd5, gbc.sp());
        EXPECT(0x4917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 034B
        gbc.setState(0x72a9, 0x5aa1, 0xadd0, 0x33e9, 0x53ab, 0xc40f, 0x1, 0x0);
        gbc.writeMem(0x72a9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x5aa1, gbc.sp());
        EXPECT(0x72ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 034C
        gbc.setState(0x989f, 0xd5ae, 0xf840, 0x11cb, 0x3188, 0x4d93, 0x1, 0x0);
        gbc.writeMem(0x989f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xd5ae, gbc.sp());
        EXPECT(0x98a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x989f));
        EXPECT(0x9b, gbc.readMem(0x98a0));
        // CB 9B 034D
        gbc.setState(0xc0e8, 0x4841, 0x26a0, 0x4879, 0x2e4c, 0x13e4, 0x1, 0x0);
        gbc.writeMem(0xc0e8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x4841, gbc.sp());
        EXPECT(0xc0ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e8));
        EXPECT(0x9b, gbc.readMem(0xc0e9));
        // CB 9B 034E
        gbc.setState(0xbebb, 0x65a7, 0x4f60, 0x1437, 0x5c0a, 0x4ee1, 0x0, 0x1);
        gbc.writeMem(0xbebb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x65a7, gbc.sp());
        EXPECT(0xbebd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbebb));
        EXPECT(0x9b, gbc.readMem(0xbebc));
        // CB 9B 034F
        gbc.setState(0x1086, 0x9890, 0xa830, 0x4fe4, 0x1c24, 0x5999, 0x1, 0x1);
        gbc.writeMem(0x1086, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x9890, gbc.sp());
        EXPECT(0x1088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0350
        gbc.setState(0xc785, 0xed18, 0xbea0, 0xedb4, 0xb6f8, 0xea6e, 0x0, 0x0);
        gbc.writeMem(0xc785, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xed18, gbc.sp());
        EXPECT(0xc787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc785));
        EXPECT(0x9b, gbc.readMem(0xc786));
        // CB 9B 0351
        gbc.setState(0x7ab, 0x27d1, 0x99f0, 0x95ca, 0x2394, 0xfb3, 0x1, 0x0);
        gbc.writeMem(0x7ab, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x27d1, gbc.sp());
        EXPECT(0x7ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0352
        gbc.setState(0x815f, 0xf31, 0x5ef0, 0x81fa, 0x4c3, 0x13d, 0x1, 0x1);
        gbc.writeMem(0x815f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xf31, gbc.sp());
        EXPECT(0x8161, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x815f));
        EXPECT(0x9b, gbc.readMem(0x8160));
        // CB 9B 0353
        gbc.setState(0xd928, 0x5ef6, 0xbc30, 0xef02, 0x30e2, 0xdc8e, 0x0, 0x0);
        gbc.writeMem(0xd928, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x5ef6, gbc.sp());
        EXPECT(0xd92a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd928));
        EXPECT(0x9b, gbc.readMem(0xd929));
        // CB 9B 0354
        gbc.setState(0xc195, 0x2d77, 0xa580, 0x8d0f, 0x5613, 0xafff, 0x1, 0x1);
        gbc.writeMem(0xc195, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x2d77, gbc.sp());
        EXPECT(0xc197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc195));
        EXPECT(0x9b, gbc.readMem(0xc196));
        // CB 9B 0355
        gbc.setState(0x9730, 0xd12d, 0xc290, 0xe6c2, 0x42c3, 0x15f1, 0x0, 0x1);
        gbc.writeMem(0x9730, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xd12d, gbc.sp());
        EXPECT(0x9732, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9730));
        EXPECT(0x9b, gbc.readMem(0x9731));
        // CB 9B 0357
        gbc.setState(0x6d09, 0x7233, 0xb1a0, 0xa487, 0xfb60, 0x908e, 0x1, 0x1);
        gbc.writeMem(0x6d09, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x7233, gbc.sp());
        EXPECT(0x6d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0358
        gbc.setState(0x1d1c, 0xaf1e, 0xe9a0, 0x7ff8, 0x42e9, 0x85c0, 0x1, 0x1);
        gbc.writeMem(0x1d1c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xaf1e, gbc.sp());
        EXPECT(0x1d1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0359
        gbc.setState(0x5e4b, 0xd245, 0x1a10, 0xd6e, 0x9f20, 0x96d3, 0x1, 0x1);
        gbc.writeMem(0x5e4b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xd245, gbc.sp());
        EXPECT(0x5e4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 035A
        gbc.setState(0xc0e2, 0xcc01, 0xcb30, 0xefb1, 0x8027, 0xb13b, 0x0, 0x1);
        gbc.writeMem(0xc0e2, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcc01, gbc.sp());
        EXPECT(0xc0e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0e2));
        EXPECT(0x9b, gbc.readMem(0xc0e3));
        // CB 9B 035B
        gbc.setState(0x3777, 0xba47, 0xd990, 0x4983, 0x735c, 0xbde7, 0x0, 0x1);
        gbc.writeMem(0x3777, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xba47, gbc.sp());
        EXPECT(0x3779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 035C
        gbc.setState(0xd41d, 0x20fa, 0x2730, 0xec05, 0xdb49, 0x540f, 0x0, 0x1);
        gbc.writeMem(0xd41d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x20fa, gbc.sp());
        EXPECT(0xd41f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd41d));
        EXPECT(0x9b, gbc.readMem(0xd41e));
        // CB 9B 035D
        gbc.setState(0xe583, 0x2f76, 0x28b0, 0x7678, 0x932c, 0x6a2b, 0x1, 0x0);
        gbc.writeMem(0xe583, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2f76, gbc.sp());
        EXPECT(0xe585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe583));
        EXPECT(0x9b, gbc.readMem(0xe584));
        // CB 9B 035E
        gbc.setState(0xb7a5, 0xe7eb, 0x4cd0, 0xe8d1, 0x7ef4, 0x2be9, 0x0, 0x0);
        gbc.writeMem(0xb7a5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xe7eb, gbc.sp());
        EXPECT(0xb7a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7a5));
        EXPECT(0x9b, gbc.readMem(0xb7a6));
        // CB 9B 035F
        gbc.setState(0x21f, 0x9de, 0x6990, 0x3a30, 0x892d, 0x7a89, 0x0, 0x0);
        gbc.writeMem(0x21f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x9de, gbc.sp());
        EXPECT(0x221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0361
        gbc.setState(0xda20, 0xee7d, 0x3d60, 0x4239, 0x7130, 0xece3, 0x1, 0x0);
        gbc.writeMem(0xda20, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xee7d, gbc.sp());
        EXPECT(0xda22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda20));
        EXPECT(0x9b, gbc.readMem(0xda21));
        // CB 9B 0362
        gbc.setState(0x15b4, 0x4155, 0xfc10, 0x7d0c, 0x826f, 0x4f01, 0x0, 0x1);
        gbc.writeMem(0x15b4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x4155, gbc.sp());
        EXPECT(0x15b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0363
        gbc.setState(0xeff4, 0x1aef, 0x6780, 0x1430, 0xd534, 0x1a58, 0x1, 0x1);
        gbc.writeMem(0xeff4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x1aef, gbc.sp());
        EXPECT(0xeff6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeff4));
        EXPECT(0x9b, gbc.readMem(0xeff5));
        // CB 9B 0364
        gbc.setState(0x89c0, 0x593a, 0x87d0, 0x6f7e, 0x4ce0, 0x21bb, 0x0, 0x0);
        gbc.writeMem(0x89c0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x593a, gbc.sp());
        EXPECT(0x89c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89c0));
        EXPECT(0x9b, gbc.readMem(0x89c1));
        // CB 9B 0365
        gbc.setState(0x9617, 0x52ee, 0x4ad0, 0x25a4, 0xb4d4, 0x8e23, 0x1, 0x0);
        gbc.writeMem(0x9617, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x52ee, gbc.sp());
        EXPECT(0x9619, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9617));
        EXPECT(0x9b, gbc.readMem(0x9618));
        // CB 9B 0366
        gbc.setState(0x34de, 0x2c4a, 0xf4e0, 0x4e54, 0x77ac, 0xc9df, 0x1, 0x0);
        gbc.writeMem(0x34de, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x2c4a, gbc.sp());
        EXPECT(0x34e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0367
        gbc.setState(0xf40, 0x7a5e, 0x7500, 0xe4fb, 0xbb35, 0x2cc7, 0x1, 0x0);
        gbc.writeMem(0xf40, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x7a5e, gbc.sp());
        EXPECT(0xf42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0368
        gbc.setState(0xcb67, 0x2c61, 0x9b60, 0xb2a8, 0xeb5b, 0xc64, 0x0, 0x0);
        gbc.writeMem(0xcb67, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2c61, gbc.sp());
        EXPECT(0xcb69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcb67));
        EXPECT(0x9b, gbc.readMem(0xcb68));
        // CB 9B 0369
        gbc.setState(0x588e, 0xb8c8, 0x3f20, 0xd37a, 0xb889, 0xce0a, 0x1, 0x0);
        gbc.writeMem(0x588e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb8c8, gbc.sp());
        EXPECT(0x5890, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 036A
        gbc.setState(0x8362, 0xa6d3, 0xa630, 0x6a94, 0xd5e1, 0x78a6, 0x0, 0x0);
        gbc.writeMem(0x8362, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa6d3, gbc.sp());
        EXPECT(0x8364, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8362));
        EXPECT(0x9b, gbc.readMem(0x8363));
        // CB 9B 036B
        gbc.setState(0x556b, 0xd840, 0x1c60, 0x565a, 0x2338, 0xebd, 0x0, 0x1);
        gbc.writeMem(0x556b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xd840, gbc.sp());
        EXPECT(0x556d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 036C
        gbc.setState(0x9272, 0xd686, 0x1660, 0x5d1d, 0x3951, 0x7288, 0x1, 0x0);
        gbc.writeMem(0x9272, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd686, gbc.sp());
        EXPECT(0x9274, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9272));
        EXPECT(0x9b, gbc.readMem(0x9273));
        // CB 9B 036D
        gbc.setState(0xb1bf, 0xbe29, 0xb220, 0xdda5, 0x7ca9, 0x6f23, 0x0, 0x0);
        gbc.writeMem(0xb1bf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xbe29, gbc.sp());
        EXPECT(0xb1c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1bf));
        EXPECT(0x9b, gbc.readMem(0xb1c0));
        // CB 9B 036E
        gbc.setState(0x37db, 0xef77, 0x7980, 0x1060, 0x52bd, 0xb5ea, 0x1, 0x1);
        gbc.writeMem(0x37db, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xef77, gbc.sp());
        EXPECT(0x37dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 036F
        gbc.setState(0xda3a, 0x43c9, 0x3050, 0x13fe, 0x3387, 0x2b00, 0x0, 0x1);
        gbc.writeMem(0xda3a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x43c9, gbc.sp());
        EXPECT(0xda3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda3a));
        EXPECT(0x9b, gbc.readMem(0xda3b));
        // CB 9B 0370
        gbc.setState(0xb743, 0xdb00, 0x4840, 0x7bf9, 0x7b9f, 0x1a8b, 0x1, 0x1);
        gbc.writeMem(0xb743, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xdb00, gbc.sp());
        EXPECT(0xb745, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb743));
        EXPECT(0x9b, gbc.readMem(0xb744));
        // CB 9B 0371
        gbc.setState(0x8d19, 0xc509, 0xffa0, 0x614b, 0x60, 0x42d8, 0x1, 0x1);
        gbc.writeMem(0x8d19, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xc509, gbc.sp());
        EXPECT(0x8d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8d19));
        EXPECT(0x9b, gbc.readMem(0x8d1a));
        // CB 9B 0372
        gbc.setState(0x26d3, 0x4454, 0xb550, 0x2e8d, 0xab0b, 0xbf21, 0x1, 0x0);
        gbc.writeMem(0x26d3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4454, gbc.sp());
        EXPECT(0x26d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0373
        gbc.setState(0xec98, 0x7da8, 0x2e30, 0x8e28, 0xa1ed, 0x1cdf, 0x1, 0x0);
        gbc.writeMem(0xec98, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7da8, gbc.sp());
        EXPECT(0xec9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec98));
        EXPECT(0x9b, gbc.readMem(0xec99));
        // CB 9B 0374
        gbc.setState(0x4a97, 0xd5a6, 0xce60, 0x8c37, 0x85d5, 0xdb29, 0x1, 0x0);
        gbc.writeMem(0x4a97, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xd5a6, gbc.sp());
        EXPECT(0x4a99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0375
        gbc.setState(0x816, 0x45ef, 0x8af0, 0x60cc, 0x10f3, 0xd325, 0x0, 0x1);
        gbc.writeMem(0x816, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x45ef, gbc.sp());
        EXPECT(0x818, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0376
        gbc.setState(0x4474, 0x57f, 0x6110, 0xbc42, 0x9dfc, 0xf41f, 0x1, 0x0);
        gbc.writeMem(0x4474, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x57f, gbc.sp());
        EXPECT(0x4476, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0377
        gbc.setState(0x392c, 0xbd41, 0xb880, 0xba85, 0x833, 0x77e3, 0x0, 0x1);
        gbc.writeMem(0x392c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xbd41, gbc.sp());
        EXPECT(0x392e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0378
        gbc.setState(0x97a3, 0xea0b, 0xaac0, 0xb18e, 0x35c6, 0x6deb, 0x0, 0x0);
        gbc.writeMem(0x97a3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xea0b, gbc.sp());
        EXPECT(0x97a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x97a3));
        EXPECT(0x9b, gbc.readMem(0x97a4));
        // CB 9B 0379
        gbc.setState(0x8511, 0xd8f5, 0x19c0, 0xa33f, 0x497c, 0xc0fb, 0x0, 0x0);
        gbc.writeMem(0x8511, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd8f5, gbc.sp());
        EXPECT(0x8513, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8511));
        EXPECT(0x9b, gbc.readMem(0x8512));
        // CB 9B 037A
        gbc.setState(0x513, 0xd16f, 0xd120, 0xbaf9, 0x89ef, 0xbd55, 0x1, 0x1);
        gbc.writeMem(0x513, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd16f, gbc.sp());
        EXPECT(0x515, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 037C
        gbc.setState(0xa43e, 0xd882, 0x98f0, 0x9e0a, 0xa9fe, 0x5b54, 0x1, 0x1);
        gbc.writeMem(0xa43e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xd882, gbc.sp());
        EXPECT(0xa440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa43e));
        EXPECT(0x9b, gbc.readMem(0xa43f));
        // CB 9B 037E
        gbc.setState(0x608a, 0x7a49, 0xf550, 0xdfd2, 0x3f86, 0x19f5, 0x0, 0x0);
        gbc.writeMem(0x608a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x7a49, gbc.sp());
        EXPECT(0x608c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 037F
        gbc.setState(0x9e87, 0x5f9e, 0xcc20, 0xd5a7, 0x7dbf, 0xed53, 0x0, 0x0);
        gbc.writeMem(0x9e87, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5f9e, gbc.sp());
        EXPECT(0x9e89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e87));
        EXPECT(0x9b, gbc.readMem(0x9e88));
        // CB 9B 0380
        gbc.setState(0xe454, 0xa1c5, 0x7be0, 0x6ed1, 0xc3da, 0xf3c0, 0x0, 0x1);
        gbc.writeMem(0xe454, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xa1c5, gbc.sp());
        EXPECT(0xe456, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe454));
        EXPECT(0x9b, gbc.readMem(0xe455));
        // CB 9B 0381
        gbc.setState(0x77de, 0x987e, 0x7210, 0x6d04, 0x9c15, 0xea49, 0x1, 0x0);
        gbc.writeMem(0x77de, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x987e, gbc.sp());
        EXPECT(0x77e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0382
        gbc.setState(0xe14f, 0xe355, 0x24a0, 0xc776, 0xc3e2, 0x1c2b, 0x1, 0x0);
        gbc.writeMem(0xe14f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe355, gbc.sp());
        EXPECT(0xe151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe14f));
        EXPECT(0x9b, gbc.readMem(0xe150));
        // CB 9B 0383
        gbc.setState(0x6430, 0x75f4, 0xfe20, 0xccc1, 0x5e41, 0x1d14, 0x0, 0x1);
        gbc.writeMem(0x6430, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x75f4, gbc.sp());
        EXPECT(0x6432, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0384
        gbc.setState(0x1f52, 0x10c7, 0xe530, 0x7ed2, 0x3ac8, 0x1db3, 0x0, 0x1);
        gbc.writeMem(0x1f52, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x10c7, gbc.sp());
        EXPECT(0x1f54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0385
        gbc.setState(0x96d8, 0xf70d, 0xc690, 0xb3, 0x3b40, 0x4337, 0x0, 0x1);
        gbc.writeMem(0x96d8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf70d, gbc.sp());
        EXPECT(0x96da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x96d8));
        EXPECT(0x9b, gbc.readMem(0x96d9));
        // CB 9B 0386
        gbc.setState(0xc5d6, 0x3a68, 0xfcc0, 0x570f, 0xdc9a, 0xc70a, 0x0, 0x0);
        gbc.writeMem(0xc5d6, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x3a68, gbc.sp());
        EXPECT(0xc5d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc5d6));
        EXPECT(0x9b, gbc.readMem(0xc5d7));
        // CB 9B 0387
        gbc.setState(0x98f9, 0x6303, 0x1d90, 0x907c, 0x4686, 0xf77c, 0x0, 0x1);
        gbc.writeMem(0x98f9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x6303, gbc.sp());
        EXPECT(0x98fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98f9));
        EXPECT(0x9b, gbc.readMem(0x98fa));
        // CB 9B 0388
        gbc.setState(0x6508, 0xdc49, 0x9160, 0xc30b, 0x49a6, 0xe962, 0x1, 0x1);
        gbc.writeMem(0x6508, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xdc49, gbc.sp());
        EXPECT(0x650a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 0389
        gbc.setState(0x9408, 0x9b1b, 0x9bb0, 0xc610, 0x6426, 0x3b05, 0x1, 0x0);
        gbc.writeMem(0x9408, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x9b1b, gbc.sp());
        EXPECT(0x940a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9408));
        EXPECT(0x9b, gbc.readMem(0x9409));
        // CB 9B 038A
        gbc.setState(0x81a7, 0x4df4, 0xb5b0, 0x6e3e, 0xc40, 0x6432, 0x1, 0x0);
        gbc.writeMem(0x81a7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x4df4, gbc.sp());
        EXPECT(0x81a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81a7));
        EXPECT(0x9b, gbc.readMem(0x81a8));
        // CB 9B 038B
        gbc.setState(0x8334, 0x806d, 0x7e0, 0xcf80, 0x1568, 0x5a50, 0x0, 0x0);
        gbc.writeMem(0x8334, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x806d, gbc.sp());
        EXPECT(0x8336, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8334));
        EXPECT(0x9b, gbc.readMem(0x8335));
        // CB 9B 038C
        gbc.setState(0xde34, 0x9f34, 0x2970, 0x2e8b, 0x6af, 0xb581, 0x0, 0x1);
        gbc.writeMem(0xde34, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x9f34, gbc.sp());
        EXPECT(0xde36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde34));
        EXPECT(0x9b, gbc.readMem(0xde35));
        // CB 9B 038D
        gbc.setState(0x81ba, 0x9678, 0x8080, 0x3666, 0x8276, 0xed46, 0x1, 0x0);
        gbc.writeMem(0x81ba, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x9678, gbc.sp());
        EXPECT(0x81bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x81ba));
        EXPECT(0x9b, gbc.readMem(0x81bb));
        // CB 9B 038E
        gbc.setState(0xdda1, 0xdef3, 0x6c90, 0x666a, 0x7009, 0xee79, 0x0, 0x1);
        gbc.writeMem(0xdda1, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xdef3, gbc.sp());
        EXPECT(0xdda3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdda1));
        EXPECT(0x9b, gbc.readMem(0xdda2));
        // CB 9B 038F
        gbc.setState(0xb7b8, 0xf016, 0x9a40, 0xcb7c, 0x5252, 0x901e, 0x1, 0x0);
        gbc.writeMem(0xb7b8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xf016, gbc.sp());
        EXPECT(0xb7ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7b8));
        EXPECT(0x9b, gbc.readMem(0xb7b9));
        // CB 9B 0390
        gbc.setState(0x9067, 0x80fc, 0x1770, 0xa56d, 0x3c51, 0x96e7, 0x1, 0x1);
        gbc.writeMem(0x9067, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x80fc, gbc.sp());
        EXPECT(0x9069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9067));
        EXPECT(0x9b, gbc.readMem(0x9068));
        // CB 9B 0391
        gbc.setState(0xc135, 0xd503, 0x9110, 0x2641, 0x72d3, 0x3b2b, 0x1, 0x1);
        gbc.writeMem(0xc135, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd503, gbc.sp());
        EXPECT(0xc137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc135));
        EXPECT(0x9b, gbc.readMem(0xc136));
        // CB 9B 0393
        gbc.setState(0xb815, 0x6087, 0x1fb0, 0x8221, 0xc98b, 0xe389, 0x0, 0x0);
        gbc.writeMem(0xb815, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x6087, gbc.sp());
        EXPECT(0xb817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb815));
        EXPECT(0x9b, gbc.readMem(0xb816));
        // CB 9B 0394
        gbc.setState(0xba65, 0x4132, 0x4800, 0x99ba, 0xfa3d, 0xb15e, 0x0, 0x0);
        gbc.writeMem(0xba65, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x4132, gbc.sp());
        EXPECT(0xba67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xba65));
        EXPECT(0x9b, gbc.readMem(0xba66));
        // CB 9B 0395
        gbc.setState(0x131b, 0xf02c, 0x16f0, 0xafd6, 0xec7d, 0x52ff, 0x1, 0x1);
        gbc.writeMem(0x131b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf02c, gbc.sp());
        EXPECT(0x131d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0396
        gbc.setState(0xb770, 0x39ab, 0x580, 0x51e, 0x4e4d, 0x1d2, 0x0, 0x1);
        gbc.writeMem(0xb770, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x39ab, gbc.sp());
        EXPECT(0xb772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb770));
        EXPECT(0x9b, gbc.readMem(0xb771));
        // CB 9B 0397
        gbc.setState(0xd123, 0x152b, 0x7030, 0x5f4e, 0xeda3, 0xb9f, 0x0, 0x1);
        gbc.writeMem(0xd123, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x152b, gbc.sp());
        EXPECT(0xd125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd123));
        EXPECT(0x9b, gbc.readMem(0xd124));
        // CB 9B 0398
        gbc.setState(0x6d2e, 0xfe21, 0xb2b0, 0xd45c, 0x3ec5, 0x1b37, 0x1, 0x0);
        gbc.writeMem(0x6d2e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xfe21, gbc.sp());
        EXPECT(0x6d30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 0399
        gbc.setState(0xb370, 0xb445, 0xbcc0, 0x557e, 0xc99c, 0x62, 0x0, 0x0);
        gbc.writeMem(0xb370, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xb445, gbc.sp());
        EXPECT(0xb372, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb370));
        EXPECT(0x9b, gbc.readMem(0xb371));
        // CB 9B 039A
        gbc.setState(0x6f5c, 0xd7e0, 0x8670, 0xf061, 0xca50, 0x5116, 0x0, 0x1);
        gbc.writeMem(0x6f5c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd7e0, gbc.sp());
        EXPECT(0x6f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 039B
        gbc.setState(0xb1cc, 0xe02c, 0xfe40, 0x6292, 0x885a, 0x16a9, 0x0, 0x1);
        gbc.writeMem(0xb1cc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe02c, gbc.sp());
        EXPECT(0xb1ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb1cc));
        EXPECT(0x9b, gbc.readMem(0xb1cd));
        // CB 9B 039C
        gbc.setState(0x1d26, 0x41db, 0xe630, 0x76e2, 0xce20, 0xfeeb, 0x0, 0x0);
        gbc.writeMem(0x1d26, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x41db, gbc.sp());
        EXPECT(0x1d28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 039D
        gbc.setState(0xd802, 0x66a3, 0x4110, 0xfea1, 0xb57f, 0x7741, 0x1, 0x1);
        gbc.writeMem(0xd802, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x66a3, gbc.sp());
        EXPECT(0xd804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd802));
        EXPECT(0x9b, gbc.readMem(0xd803));
        // CB 9B 039E
        gbc.setState(0x7ae, 0x7853, 0x54a0, 0x4967, 0x4f2e, 0x4ceb, 0x1, 0x0);
        gbc.writeMem(0x7ae, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x7853, gbc.sp());
        EXPECT(0x7b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 039F
        gbc.setState(0x1e0d, 0x1ca2, 0xf490, 0xb1ca, 0xb936, 0xa5b6, 0x0, 0x1);
        gbc.writeMem(0x1e0d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1ca2, gbc.sp());
        EXPECT(0x1e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03A0
        gbc.setState(0x1c0f, 0xd97d, 0x7760, 0x3126, 0xc344, 0x3a5a, 0x1, 0x1);
        gbc.writeMem(0x1c0f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd97d, gbc.sp());
        EXPECT(0x1c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03A1
        gbc.setState(0x4ae0, 0x1082, 0x70f0, 0x7f75, 0x32e7, 0x78a5, 0x1, 0x0);
        gbc.writeMem(0x4ae0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1082, gbc.sp());
        EXPECT(0x4ae2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03A2
        gbc.setState(0x9827, 0x297, 0xa630, 0x1ccf, 0x4279, 0xcb45, 0x1, 0x1);
        gbc.writeMem(0x9827, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x297, gbc.sp());
        EXPECT(0x9829, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9827));
        EXPECT(0x9b, gbc.readMem(0x9828));
        // CB 9B 03A3
        gbc.setState(0x36bc, 0xa6aa, 0xb4c0, 0x3ca7, 0xedd, 0x656a, 0x0, 0x0);
        gbc.writeMem(0x36bc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa6aa, gbc.sp());
        EXPECT(0x36be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03A4
        gbc.setState(0xe7be, 0xe448, 0x3570, 0x687b, 0xe2ee, 0x5270, 0x0, 0x0);
        gbc.writeMem(0xe7be, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe448, gbc.sp());
        EXPECT(0xe7c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe7be));
        EXPECT(0x9b, gbc.readMem(0xe7bf));
        // CB 9B 03A5
        gbc.setState(0x791, 0x6c04, 0x97e0, 0xc122, 0x2b38, 0xd57a, 0x1, 0x1);
        gbc.writeMem(0x791, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x6c04, gbc.sp());
        EXPECT(0x793, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03A6
        gbc.setState(0x806d, 0x9226, 0x4300, 0x269e, 0xff4f, 0xc65d, 0x0, 0x1);
        gbc.writeMem(0x806d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9226, gbc.sp());
        EXPECT(0x806f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x806d));
        EXPECT(0x9b, gbc.readMem(0x806e));
        // CB 9B 03A7
        gbc.setState(0xacf3, 0xbe48, 0x4ec0, 0x4327, 0xbde9, 0x4758, 0x0, 0x1);
        gbc.writeMem(0xacf3, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xbe48, gbc.sp());
        EXPECT(0xacf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xacf3));
        EXPECT(0x9b, gbc.readMem(0xacf4));
        // CB 9B 03A8
        gbc.setState(0x489a, 0x178a, 0x44d0, 0x1ef0, 0xbdb8, 0x5baa, 0x0, 0x1);
        gbc.writeMem(0x489a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x178a, gbc.sp());
        EXPECT(0x489c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03A9
        gbc.setState(0xdc56, 0x1edf, 0x5d70, 0x190d, 0x732b, 0x858a, 0x0, 0x1);
        gbc.writeMem(0xdc56, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x1edf, gbc.sp());
        EXPECT(0xdc58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc56));
        EXPECT(0x9b, gbc.readMem(0xdc57));
        // CB 9B 03AA
        gbc.setState(0xb782, 0xb774, 0xdae0, 0xa6c4, 0x3dce, 0x2922, 0x1, 0x1);
        gbc.writeMem(0xb782, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xb774, gbc.sp());
        EXPECT(0xb784, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb782));
        EXPECT(0x9b, gbc.readMem(0xb783));
        // CB 9B 03AB
        gbc.setState(0xa2c0, 0x1d8c, 0x7770, 0x37f8, 0xb072, 0xbcc1, 0x0, 0x1);
        gbc.writeMem(0xa2c0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x1d8c, gbc.sp());
        EXPECT(0xa2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa2c0));
        EXPECT(0x9b, gbc.readMem(0xa2c1));
        // CB 9B 03AC
        gbc.setState(0x4143, 0x5df4, 0x5d10, 0x59a1, 0x8679, 0x1d21, 0x0, 0x1);
        gbc.writeMem(0x4143, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5df4, gbc.sp());
        EXPECT(0x4145, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03AD
        gbc.setState(0x8942, 0x7fa8, 0x79d0, 0x8939, 0x419f, 0xd1f2, 0x1, 0x1);
        gbc.writeMem(0x8942, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7fa8, gbc.sp());
        EXPECT(0x8944, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8942));
        EXPECT(0x9b, gbc.readMem(0x8943));
        // CB 9B 03AE
        gbc.setState(0xee4a, 0x14fb, 0xa080, 0xe169, 0x14ad, 0x59c4, 0x0, 0x0);
        gbc.writeMem(0xee4a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x14fb, gbc.sp());
        EXPECT(0xee4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xee4a));
        EXPECT(0x9b, gbc.readMem(0xee4b));
        // CB 9B 03AF
        gbc.setState(0x74a8, 0x610b, 0xd6a0, 0x87cd, 0x3c16, 0x4181, 0x1, 0x1);
        gbc.writeMem(0x74a8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x610b, gbc.sp());
        EXPECT(0x74aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03B0
        gbc.setState(0xe4a9, 0x3dca, 0xf630, 0xd8b2, 0xaf86, 0xffa, 0x1, 0x0);
        gbc.writeMem(0xe4a9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3dca, gbc.sp());
        EXPECT(0xe4ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4a9));
        EXPECT(0x9b, gbc.readMem(0xe4aa));
        // CB 9B 03B1
        gbc.setState(0xb7e7, 0x2ec6, 0xd220, 0x2d67, 0xff0, 0x172d, 0x0, 0x0);
        gbc.writeMem(0xb7e7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2ec6, gbc.sp());
        EXPECT(0xb7e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7e7));
        EXPECT(0x9b, gbc.readMem(0xb7e8));
        // CB 9B 03B2
        gbc.setState(0x39c8, 0xa07a, 0xf930, 0x45bc, 0xe9f2, 0x6b14, 0x0, 0x1);
        gbc.writeMem(0x39c8, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa07a, gbc.sp());
        EXPECT(0x39ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03B3
        gbc.setState(0x2c5d, 0x159a, 0xa510, 0x3e1e, 0x9fdd, 0x57de, 0x1, 0x0);
        gbc.writeMem(0x2c5d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x159a, gbc.sp());
        EXPECT(0x2c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03B4
        gbc.setState(0xd711, 0xc519, 0xae80, 0x9987, 0xb54e, 0x5d2, 0x0, 0x0);
        gbc.writeMem(0xd711, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc519, gbc.sp());
        EXPECT(0xd713, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd711));
        EXPECT(0x9b, gbc.readMem(0xd712));
        // CB 9B 03B6
        gbc.setState(0xc7c7, 0xc741, 0xcf80, 0xd812, 0xa115, 0x1a7e, 0x1, 0x0);
        gbc.writeMem(0xc7c7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc741, gbc.sp());
        EXPECT(0xc7c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7c7));
        EXPECT(0x9b, gbc.readMem(0xc7c8));
        // CB 9B 03B7
        gbc.setState(0xbaf9, 0xbf38, 0xada0, 0x722f, 0xa9ce, 0x9aa9, 0x0, 0x0);
        gbc.writeMem(0xbaf9, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbf38, gbc.sp());
        EXPECT(0xbafb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbaf9));
        EXPECT(0x9b, gbc.readMem(0xbafa));
        // CB 9B 03B8
        gbc.setState(0xb559, 0xd32b, 0x7c00, 0x2c7c, 0x73a, 0x4b3b, 0x1, 0x0);
        gbc.writeMem(0xb559, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xd32b, gbc.sp());
        EXPECT(0xb55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb559));
        EXPECT(0x9b, gbc.readMem(0xb55a));
        // CB 9B 03B9
        gbc.setState(0x881e, 0x3713, 0x2740, 0x7ee, 0x385a, 0x2a5b, 0x0, 0x1);
        gbc.writeMem(0x881e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3713, gbc.sp());
        EXPECT(0x8820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x881e));
        EXPECT(0x9b, gbc.readMem(0x881f));
        // CB 9B 03BA
        gbc.setState(0x818a, 0xc7cc, 0xd810, 0x459b, 0x5187, 0xd7f4, 0x1, 0x0);
        gbc.writeMem(0x818a, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc7cc, gbc.sp());
        EXPECT(0x818c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x818a));
        EXPECT(0x9b, gbc.readMem(0x818b));
        // CB 9B 03BB
        gbc.setState(0x1d11, 0xf138, 0x7280, 0x840c, 0x5b23, 0xde74, 0x0, 0x0);
        gbc.writeMem(0x1d11, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf138, gbc.sp());
        EXPECT(0x1d13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03BC
        gbc.setState(0x962c, 0xbda9, 0xbdc0, 0x317a, 0x67d7, 0xb4a9, 0x1, 0x1);
        gbc.writeMem(0x962c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xbda9, gbc.sp());
        EXPECT(0x962e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x962c));
        EXPECT(0x9b, gbc.readMem(0x962d));
        // CB 9B 03BD
        gbc.setState(0x281d, 0x8fe6, 0x35b0, 0x5170, 0xd80d, 0x916e, 0x0, 0x1);
        gbc.writeMem(0x281d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8fe6, gbc.sp());
        EXPECT(0x281f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03BE
        gbc.setState(0x43bf, 0x25eb, 0x59f0, 0x7e34, 0xed8, 0x977d, 0x1, 0x0);
        gbc.writeMem(0x43bf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x25eb, gbc.sp());
        EXPECT(0x43c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03C0
        gbc.setState(0xdcf0, 0x294f, 0xc1f0, 0xf2be, 0x5b63, 0x13fd, 0x0, 0x1);
        gbc.writeMem(0xdcf0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x294f, gbc.sp());
        EXPECT(0xdcf2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdcf0));
        EXPECT(0x9b, gbc.readMem(0xdcf1));
        // CB 9B 03C1
        gbc.setState(0xe8bc, 0xbd68, 0x6850, 0x5cb8, 0x4fdf, 0xe410, 0x1, 0x1);
        gbc.writeMem(0xe8bc, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xbd68, gbc.sp());
        EXPECT(0xe8be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe8bc));
        EXPECT(0x9b, gbc.readMem(0xe8bd));
        // CB 9B 03C2
        gbc.setState(0x3074, 0xd465, 0x8620, 0xeda0, 0x6086, 0x8516, 0x0, 0x1);
        gbc.writeMem(0x3074, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd465, gbc.sp());
        EXPECT(0x3076, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03C3
        gbc.setState(0x2d1b, 0xed95, 0xbb60, 0x4bad, 0x5468, 0x4abc, 0x1, 0x0);
        gbc.writeMem(0x2d1b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xed95, gbc.sp());
        EXPECT(0x2d1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03C4
        gbc.setState(0x5f8c, 0xc723, 0xe070, 0x8912, 0x6e57, 0x5718, 0x0, 0x1);
        gbc.writeMem(0x5f8c, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc723, gbc.sp());
        EXPECT(0x5f8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03C5
        gbc.setState(0xa66d, 0x10ba, 0x5320, 0xc77f, 0x64f0, 0x618c, 0x0, 0x1);
        gbc.writeMem(0xa66d, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x10ba, gbc.sp());
        EXPECT(0xa66f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa66d));
        EXPECT(0x9b, gbc.readMem(0xa66e));
        // CB 9B 03C6
        gbc.setState(0x4dc4, 0xab22, 0xffc0, 0x8fe6, 0x7f67, 0x8946, 0x1, 0x1);
        gbc.writeMem(0x4dc4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xab22, gbc.sp());
        EXPECT(0x4dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03C7
        gbc.setState(0xcd0, 0xcedb, 0x4630, 0x7d26, 0xd5ec, 0xa8f6, 0x0, 0x1);
        gbc.writeMem(0xcd0, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xcedb, gbc.sp());
        EXPECT(0xcd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03C8
        gbc.setState(0x580e, 0xfcb9, 0xb9d0, 0xf165, 0x7dc8, 0x69e0, 0x1, 0x0);
        gbc.writeMem(0x580e, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xfcb9, gbc.sp());
        EXPECT(0x5810, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03C9
        gbc.setState(0x2f11, 0x89ae, 0xf2c0, 0x5618, 0xa9d, 0x4efe, 0x1, 0x1);
        gbc.writeMem(0x2f11, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x89ae, gbc.sp());
        EXPECT(0x2f13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03CA
        gbc.setState(0x9b23, 0xa3a0, 0x1ef0, 0x84b3, 0xca54, 0x6182, 0x0, 0x1);
        gbc.writeMem(0x9b23, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xa3a0, gbc.sp());
        EXPECT(0x9b25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b23));
        EXPECT(0x9b, gbc.readMem(0x9b24));
        // CB 9B 03CB
        gbc.setState(0x65fd, 0x1701, 0x3d30, 0x53a2, 0xd982, 0xc3b6, 0x0, 0x0);
        gbc.writeMem(0x65fd, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x1701, gbc.sp());
        EXPECT(0x65ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03CC
        gbc.setState(0x6261, 0x4522, 0x8da0, 0xb22d, 0x1745, 0xa7b, 0x1, 0x0);
        gbc.writeMem(0x6261, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x4522, gbc.sp());
        EXPECT(0x6263, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03CD
        gbc.setState(0x47a4, 0xc501, 0x3390, 0x5e74, 0x9860, 0x1c7, 0x1, 0x1);
        gbc.writeMem(0x47a4, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xc501, gbc.sp());
        EXPECT(0x47a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03CE
        gbc.setState(0x8b17, 0x9994, 0x6080, 0x6aec, 0x904d, 0x3b34, 0x1, 0x0);
        gbc.writeMem(0x8b17, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x9994, gbc.sp());
        EXPECT(0x8b19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b17));
        EXPECT(0x9b, gbc.readMem(0x8b18));
        // CB 9B 03CF
        gbc.setState(0x6cec, 0xef7d, 0x4a50, 0x3f51, 0x98cd, 0x5918, 0x1, 0x1);
        gbc.writeMem(0x6cec, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xef7d, gbc.sp());
        EXPECT(0x6cee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03D0
        gbc.setState(0x9c87, 0x64d6, 0x4a30, 0x542c, 0xc925, 0xa3a5, 0x1, 0x0);
        gbc.writeMem(0x9c87, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x64d6, gbc.sp());
        EXPECT(0x9c89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c87));
        EXPECT(0x9b, gbc.readMem(0x9c88));
        // CB 9B 03D1
        gbc.setState(0x2d08, 0x1662, 0x6d50, 0xcd3, 0xa570, 0x1c05, 0x0, 0x1);
        gbc.writeMem(0x2d08, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x1662, gbc.sp());
        EXPECT(0x2d0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03D2
        gbc.setState(0x3d5b, 0x7890, 0xde30, 0xf20a, 0x9a9, 0x76b0, 0x0, 0x0);
        gbc.writeMem(0x3d5b, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7890, gbc.sp());
        EXPECT(0x3d5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03D3
        gbc.setState(0xe9cf, 0x9b03, 0xc9b0, 0x855b, 0xfa28, 0x610a, 0x1, 0x0);
        gbc.writeMem(0xe9cf, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9b03, gbc.sp());
        EXPECT(0xe9d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe9cf));
        EXPECT(0x9b, gbc.readMem(0xe9d0));
        // CB 9B 03D4
        gbc.setState(0x595, 0x5935, 0x4310, 0xf04b, 0x1c24, 0x1d61, 0x1, 0x0);
        gbc.writeMem(0x595, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x5935, gbc.sp());
        EXPECT(0x597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03D5
        gbc.setState(0x1540, 0x12b3, 0x9860, 0x845a, 0xea45, 0x8a57, 0x0, 0x1);
        gbc.writeMem(0x1540, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x12b3, gbc.sp());
        EXPECT(0x1542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03D6
        gbc.setState(0xf90, 0x25f9, 0xeab0, 0x2bcb, 0xb1a, 0x261f, 0x1, 0x0);
        gbc.writeMem(0xf90, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x25f9, gbc.sp());
        EXPECT(0xf92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03D7
        gbc.setState(0x18d1, 0x4d43, 0x17a0, 0xd3fc, 0x2fbb, 0x330a, 0x1, 0x0);
        gbc.writeMem(0x18d1, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x4d43, gbc.sp());
        EXPECT(0x18d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03D8
        gbc.setState(0x9b60, 0xaa92, 0x2810, 0x976c, 0xc39a, 0xe661, 0x0, 0x0);
        gbc.writeMem(0x9b60, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xaa92, gbc.sp());
        EXPECT(0x9b62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b60));
        EXPECT(0x9b, gbc.readMem(0x9b61));
        // CB 9B 03D9
        gbc.setState(0x7bb7, 0xed3a, 0x24d0, 0xa06b, 0x9d67, 0xaffa, 0x1, 0x1);
        gbc.writeMem(0x7bb7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xed3a, gbc.sp());
        EXPECT(0x7bb9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03DA
        gbc.setState(0xe25f, 0x19a6, 0x7de0, 0x91a7, 0x71a8, 0x6ccd, 0x1, 0x1);
        gbc.writeMem(0xe25f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x19a6, gbc.sp());
        EXPECT(0xe261, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe25f));
        EXPECT(0x9b, gbc.readMem(0xe260));
        // CB 9B 03DB
        gbc.setState(0x2e78, 0xa624, 0x9670, 0x9e58, 0xb17, 0x699b, 0x1, 0x1);
        gbc.writeMem(0x2e78, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xa624, gbc.sp());
        EXPECT(0x2e7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03DC
        gbc.setState(0x33fe, 0x8b98, 0xec0, 0xcbb1, 0xbfc3, 0xf7e5, 0x0, 0x0);
        gbc.writeMem(0x33fe, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8b98, gbc.sp());
        EXPECT(0x3400, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03DD
        gbc.setState(0x33f7, 0x637, 0x1440, 0xa934, 0xe154, 0x4bb5, 0x1, 0x1);
        gbc.writeMem(0x33f7, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x637, gbc.sp());
        EXPECT(0x33f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03DE
        gbc.setState(0xca21, 0x4d7f, 0x2e00, 0xc7ba, 0x24bf, 0xdb1, 0x0, 0x0);
        gbc.writeMem(0xca21, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x4d7f, gbc.sp());
        EXPECT(0xca23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca21));
        EXPECT(0x9b, gbc.readMem(0xca22));
        // CB 9B 03DF
        gbc.setState(0x826f, 0x1dcf, 0xabc0, 0xea5b, 0x9413, 0x3718, 0x1, 0x1);
        gbc.writeMem(0x826f, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1dcf, gbc.sp());
        EXPECT(0x8271, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x826f));
        EXPECT(0x9b, gbc.readMem(0x8270));
        // CB 9B 03E0
        gbc.setState(0x6860, 0x23e4, 0xb590, 0xf804, 0x708, 0x17fa, 0x1, 0x0);
        gbc.writeMem(0x6860, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x23e4, gbc.sp());
        EXPECT(0x6862, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03E1
        gbc.setState(0xed, 0x979d, 0x9cc0, 0x9b3e, 0xb22c, 0x64eb, 0x1, 0x0);
        gbc.writeMem(0xed, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x979d, gbc.sp());
        EXPECT(0xef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03E2
        gbc.setState(0x2245, 0x2181, 0x9b70, 0xd3f5, 0xe1f0, 0x5fd, 0x1, 0x1);
        gbc.writeMem(0x2245, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2181, gbc.sp());
        EXPECT(0x2247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03E3
        gbc.setState(0x71e5, 0xbd6b, 0x71a0, 0xa9f3, 0x4bf2, 0xc4f4, 0x0, 0x1);
        gbc.writeMem(0x71e5, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xbd6b, gbc.sp());
        EXPECT(0x71e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03E4
        gbc.setState(0x2019, 0xd71, 0xb200, 0x5728, 0xaa91, 0x49c9, 0x0, 0x1);
        gbc.writeMem(0x2019, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd71, gbc.sp());
        EXPECT(0x201b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB 9B 03E5
        gbc.setState(0xc8eb, 0xcd7e, 0xa30, 0x4616, 0x4c16, 0x8d88, 0x1, 0x0);
        gbc.writeMem(0xc8eb, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xcd7e, gbc.sp());
        EXPECT(0xc8ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc8eb));
        EXPECT(0x9b, gbc.readMem(0xc8ec));
        // CB 9B 03E6
        gbc.setState(0x42ad, 0xaa39, 0x2b10, 0x7542, 0xd460, 0x5b8f, 0x1, 0x1);
        gbc.writeMem(0x42ad, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xaa39, gbc.sp());
        EXPECT(0x42af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB 9B 03E7
        gbc.setState(0x4918, 0xf719, 0xcad0, 0x41b2, 0xfecc, 0xa6e9, 0x0, 0x0);
        gbc.writeMem(0x4918, { 0xcb, 0x9b });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xf719, gbc.sp());
        EXPECT(0x491a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
    }
