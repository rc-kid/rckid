    TEST(gbcemu, opcode_00) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 00 0000
        gbc.setState(0x4ddf, 0xe82e, 0x6ef0, 0xb990, 0xd0be, 0x8393, 0x1, 0x1);
        gbc.writeMem(0x4ddf, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xe82e, gbc.sp());
        EXPECT(0x4de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0001
        gbc.setState(0xb16b, 0xd16, 0x1a00, 0x6074, 0x4fd5, 0x6cf2, 0x0, 0x0);
        gbc.writeMem(0xb16b, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xd16, gbc.sp());
        EXPECT(0xb16c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb16b));
        // 00 0002
        gbc.setState(0x67da, 0x8aec, 0xb5a0, 0x9561, 0xcd06, 0x40a6, 0x1, 0x1);
        gbc.writeMem(0x67da, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8aec, gbc.sp());
        EXPECT(0x67db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0004
        gbc.setState(0x5b02, 0x5faa, 0x7890, 0x450e, 0x2ae, 0xbf28, 0x0, 0x1);
        gbc.writeMem(0x5b02, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5faa, gbc.sp());
        EXPECT(0x5b03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0005
        gbc.setState(0x81a3, 0x9186, 0x8900, 0xa620, 0x520a, 0xffdf, 0x0, 0x0);
        gbc.writeMem(0x81a3, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9186, gbc.sp());
        EXPECT(0x81a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x81a3));
        // 00 0007
        gbc.setState(0xd8a4, 0x6b80, 0x7850, 0x6048, 0x36b3, 0x27fd, 0x1, 0x1);
        gbc.writeMem(0xd8a4, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6b80, gbc.sp());
        EXPECT(0xd8a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd8a4));
        // 00 0008
        gbc.setState(0x2b4a, 0x3415, 0xcdc0, 0x8cd6, 0xb1f0, 0x2b13, 0x1, 0x1);
        gbc.writeMem(0x2b4a, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3415, gbc.sp());
        EXPECT(0x2b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0009
        gbc.setState(0x7bae, 0x9fe5, 0x8330, 0xae3e, 0x2920, 0x8b40, 0x0, 0x1);
        gbc.writeMem(0x7bae, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x9fe5, gbc.sp());
        EXPECT(0x7baf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 000A
        gbc.setState(0x5dac, 0x4207, 0xc880, 0x897f, 0x8750, 0xcbf9, 0x0, 0x0);
        gbc.writeMem(0x5dac, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x4207, gbc.sp());
        EXPECT(0x5dad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 000B
        gbc.setState(0x4f20, 0xf77e, 0xbf20, 0x38ad, 0x86cb, 0x74ad, 0x0, 0x1);
        gbc.writeMem(0x4f20, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xf77e, gbc.sp());
        EXPECT(0x4f21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 000E
        gbc.setState(0x1511, 0xfbdf, 0xb600, 0xef0b, 0xe981, 0xba1a, 0x0, 0x1);
        gbc.writeMem(0x1511, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xfbdf, gbc.sp());
        EXPECT(0x1512, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 000F
        gbc.setState(0xc018, 0xb930, 0xed70, 0xc09d, 0x7ce2, 0x8dcb, 0x0, 0x1);
        gbc.writeMem(0xc018, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xb930, gbc.sp());
        EXPECT(0xc019, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc018));
        // 00 0010
        gbc.setState(0x302, 0x29fd, 0x4620, 0xda7d, 0x187b, 0x7c35, 0x0, 0x1);
        gbc.writeMem(0x302, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x29fd, gbc.sp());
        EXPECT(0x303, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0011
        gbc.setState(0x707a, 0x8c45, 0xf400, 0xd9a2, 0xb232, 0x15cd, 0x0, 0x0);
        gbc.writeMem(0x707a, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8c45, gbc.sp());
        EXPECT(0x707b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0012
        gbc.setState(0x9f41, 0x711b, 0xd5f0, 0xcf1a, 0x5d93, 0x66ac, 0x1, 0x0);
        gbc.writeMem(0x9f41, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x711b, gbc.sp());
        EXPECT(0x9f42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9f41));
        // 00 0013
        gbc.setState(0x8c6d, 0x5afd, 0x6e60, 0xca5e, 0x1bfe, 0xc5f1, 0x0, 0x0);
        gbc.writeMem(0x8c6d, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x5afd, gbc.sp());
        EXPECT(0x8c6e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8c6d));
        // 00 0014
        gbc.setState(0x21b1, 0x453c, 0x9ce0, 0xd3ab, 0x34bf, 0x349a, 0x0, 0x1);
        gbc.writeMem(0x21b1, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x453c, gbc.sp());
        EXPECT(0x21b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0015
        gbc.setState(0x21d8, 0x2c5f, 0x8c00, 0x1fe8, 0x6855, 0x3166, 0x0, 0x1);
        gbc.writeMem(0x21d8, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x2c5f, gbc.sp());
        EXPECT(0x21d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0016
        gbc.setState(0xd8fa, 0xf4cf, 0xa6c0, 0x2d94, 0x5998, 0xe9d4, 0x1, 0x1);
        gbc.writeMem(0xd8fa, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xf4cf, gbc.sp());
        EXPECT(0xd8fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd8fa));
        // 00 0017
        gbc.setState(0x98e2, 0x311f, 0x30d0, 0x6a14, 0x88ab, 0x3c89, 0x0, 0x1);
        gbc.writeMem(0x98e2, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x311f, gbc.sp());
        EXPECT(0x98e3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x98e2));
        // 00 0018
        gbc.setState(0x9386, 0xef4c, 0x1e0, 0x9a6b, 0x2822, 0x6211, 0x1, 0x0);
        gbc.writeMem(0x9386, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xef4c, gbc.sp());
        EXPECT(0x9387, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9386));
        // 00 0019
        gbc.setState(0x19ab, 0x17da, 0x9f50, 0x7ca6, 0xd4d0, 0xa4b6, 0x1, 0x1);
        gbc.writeMem(0x19ab, { 0x0 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x17da, gbc.sp());
        EXPECT(0x19ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 001A
        gbc.setState(0x6f45, 0x7eb0, 0xfe00, 0xe12f, 0xc5ec, 0x8092, 0x1, 0x1);
        gbc.writeMem(0x6f45, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7eb0, gbc.sp());
        EXPECT(0x6f46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 001B
        gbc.setState(0xdb49, 0x213c, 0xf490, 0x4747, 0x8d62, 0x6a72, 0x1, 0x1);
        gbc.writeMem(0xdb49, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x213c, gbc.sp());
        EXPECT(0xdb4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdb49));
        // 00 001C
        gbc.setState(0xa9bf, 0xc473, 0xe80, 0x442c, 0x43f7, 0x1602, 0x1, 0x0);
        gbc.writeMem(0xa9bf, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xc473, gbc.sp());
        EXPECT(0xa9c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa9bf));
        // 00 001D
        gbc.setState(0xa1f0, 0x5cfd, 0xd7c0, 0x23cf, 0xa3e8, 0x83c, 0x0, 0x0);
        gbc.writeMem(0xa1f0, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5cfd, gbc.sp());
        EXPECT(0xa1f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa1f0));
        // 00 001E
        gbc.setState(0x1cb, 0x45e5, 0xae70, 0x3a74, 0xe60d, 0x87c4, 0x1, 0x1);
        gbc.writeMem(0x1cb, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x45e5, gbc.sp());
        EXPECT(0x1cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 001F
        gbc.setState(0x3bd, 0x71ae, 0xee50, 0x18c8, 0x358c, 0xa23d, 0x0, 0x1);
        gbc.writeMem(0x3bd, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x71ae, gbc.sp());
        EXPECT(0x3be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0020
        gbc.setState(0x229e, 0xa81a, 0x9d70, 0x98d8, 0xfb3f, 0xf507, 0x1, 0x1);
        gbc.writeMem(0x229e, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xa81a, gbc.sp());
        EXPECT(0x229f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0021
        gbc.setState(0xeb63, 0x1926, 0x77f0, 0x92f6, 0x74aa, 0xfffd, 0x1, 0x1);
        gbc.writeMem(0xeb63, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x1926, gbc.sp());
        EXPECT(0xeb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xeb63));
        // 00 0022
        gbc.setState(0xee82, 0x7181, 0xbf70, 0xd4c, 0x2a4c, 0x9ae8, 0x0, 0x1);
        gbc.writeMem(0xee82, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x7181, gbc.sp());
        EXPECT(0xee83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xee82));
        // 00 0023
        gbc.setState(0xd6cc, 0x1842, 0x6900, 0x9b10, 0xc0be, 0x43ec, 0x1, 0x1);
        gbc.writeMem(0xd6cc, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x1842, gbc.sp());
        EXPECT(0xd6cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd6cc));
        // 00 0024
        gbc.setState(0x6679, 0xaa0d, 0xd090, 0x3522, 0x8a2b, 0x584c, 0x1, 0x1);
        gbc.writeMem(0x6679, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xaa0d, gbc.sp());
        EXPECT(0x667a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0026
        gbc.setState(0xee9a, 0xd46e, 0x8e0, 0x15c0, 0xd741, 0x4bb6, 0x0, 0x0);
        gbc.writeMem(0xee9a, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd46e, gbc.sp());
        EXPECT(0xee9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xee9a));
        // 00 0027
        gbc.setState(0xb3c1, 0x42b7, 0x5050, 0x30de, 0xc1b7, 0xbd69, 0x1, 0x1);
        gbc.writeMem(0xb3c1, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x42b7, gbc.sp());
        EXPECT(0xb3c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb3c1));
        // 00 0028
        gbc.setState(0x98d7, 0x9247, 0xa300, 0xf0a1, 0xaac, 0x5068, 0x0, 0x0);
        gbc.writeMem(0x98d7, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9247, gbc.sp());
        EXPECT(0x98d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x98d7));
        // 00 002A
        gbc.setState(0x6b8b, 0xc3a5, 0xc5b0, 0xc5a0, 0x9c67, 0x1a3a, 0x1, 0x1);
        gbc.writeMem(0x6b8b, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc3a5, gbc.sp());
        EXPECT(0x6b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 002B
        gbc.setState(0xad12, 0x12dc, 0x7e90, 0x10e1, 0x3244, 0x9739, 0x1, 0x0);
        gbc.writeMem(0xad12, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x12dc, gbc.sp());
        EXPECT(0xad13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xad12));
        // 00 002C
        gbc.setState(0xc41c, 0xa1b, 0x3e30, 0x44d, 0x40bf, 0xb163, 0x1, 0x0);
        gbc.writeMem(0xc41c, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xa1b, gbc.sp());
        EXPECT(0xc41d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc41c));
        // 00 002D
        gbc.setState(0x2de3, 0x7cb, 0x63c0, 0xc723, 0xe812, 0x2d6, 0x0, 0x1);
        gbc.writeMem(0x2de3, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x7cb, gbc.sp());
        EXPECT(0x2de4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 002E
        gbc.setState(0x5b27, 0x75db, 0x31a0, 0xf288, 0xa19e, 0x8dd3, 0x0, 0x0);
        gbc.writeMem(0x5b27, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x75db, gbc.sp());
        EXPECT(0x5b28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 002F
        gbc.setState(0xad57, 0x8c07, 0x1920, 0xb729, 0x2130, 0xd930, 0x0, 0x1);
        gbc.writeMem(0xad57, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8c07, gbc.sp());
        EXPECT(0xad58, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xad57));
        // 00 0030
        gbc.setState(0x4c72, 0xef9d, 0xfc70, 0x36f9, 0xafc3, 0xda47, 0x0, 0x0);
        gbc.writeMem(0x4c72, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xef9d, gbc.sp());
        EXPECT(0x4c73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0031
        gbc.setState(0xe532, 0xb782, 0x1d70, 0xbe05, 0x4b8c, 0xe1a9, 0x1, 0x1);
        gbc.writeMem(0xe532, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xb782, gbc.sp());
        EXPECT(0xe533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe532));
        // 00 0032
        gbc.setState(0x681c, 0x734a, 0x8c70, 0xd6c4, 0xfade, 0x358, 0x1, 0x0);
        gbc.writeMem(0x681c, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x734a, gbc.sp());
        EXPECT(0x681d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0033
        gbc.setState(0xd090, 0x200e, 0x2200, 0xbee, 0x2f64, 0x36fd, 0x1, 0x0);
        gbc.writeMem(0xd090, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x200e, gbc.sp());
        EXPECT(0xd091, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd090));
        // 00 0034
        gbc.setState(0xbbf6, 0x139d, 0x43d0, 0x2623, 0xa892, 0x1897, 0x0, 0x1);
        gbc.writeMem(0xbbf6, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x139d, gbc.sp());
        EXPECT(0xbbf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbbf6));
        // 00 0035
        gbc.setState(0x8576, 0xb65b, 0x1290, 0x26be, 0x89d2, 0xb4a0, 0x1, 0x1);
        gbc.writeMem(0x8576, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xb65b, gbc.sp());
        EXPECT(0x8577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8576));
        // 00 0036
        gbc.setState(0x34d3, 0x4193, 0x8090, 0xf96b, 0x97a8, 0x3cda, 0x0, 0x0);
        gbc.writeMem(0x34d3, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x4193, gbc.sp());
        EXPECT(0x34d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0037
        gbc.setState(0x79d6, 0xa06d, 0x78e0, 0x9909, 0x38c8, 0x63d9, 0x0, 0x0);
        gbc.writeMem(0x79d6, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xa06d, gbc.sp());
        EXPECT(0x79d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0038
        gbc.setState(0x4f5f, 0xa455, 0xbf30, 0xaeb, 0x4110, 0x71d7, 0x0, 0x1);
        gbc.writeMem(0x4f5f, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xa455, gbc.sp());
        EXPECT(0x4f60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 003A
        gbc.setState(0x8ed3, 0x532e, 0xf0, 0x6efb, 0x2648, 0xdab8, 0x0, 0x0);
        gbc.writeMem(0x8ed3, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x532e, gbc.sp());
        EXPECT(0x8ed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8ed3));
        // 00 003B
        gbc.setState(0xaa85, 0x1d6d, 0xb8f0, 0xcbf3, 0x2d43, 0x9c3e, 0x0, 0x0);
        gbc.writeMem(0xaa85, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x1d6d, gbc.sp());
        EXPECT(0xaa86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaa85));
        // 00 003C
        gbc.setState(0x6bf9, 0xdf72, 0x4e90, 0xc689, 0x3aed, 0xc80f, 0x0, 0x1);
        gbc.writeMem(0x6bf9, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xdf72, gbc.sp());
        EXPECT(0x6bfa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 003D
        gbc.setState(0x864, 0xae00, 0x1900, 0xb996, 0x7612, 0x4504, 0x1, 0x0);
        gbc.writeMem(0x864, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xae00, gbc.sp());
        EXPECT(0x865, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 003E
        gbc.setState(0x68e4, 0x2aab, 0xfae0, 0x90db, 0xc486, 0xd636, 0x1, 0x1);
        gbc.writeMem(0x68e4, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2aab, gbc.sp());
        EXPECT(0x68e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 003F
        gbc.setState(0x379f, 0xac37, 0x6350, 0x1e58, 0x5f6a, 0x31fc, 0x0, 0x0);
        gbc.writeMem(0x379f, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xac37, gbc.sp());
        EXPECT(0x37a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0040
        gbc.setState(0x51ce, 0x1128, 0x51a0, 0x1323, 0xbe3e, 0xfcf3, 0x1, 0x0);
        gbc.writeMem(0x51ce, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1128, gbc.sp());
        EXPECT(0x51cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0041
        gbc.setState(0x6e9d, 0x8663, 0x7d00, 0x7c02, 0xe0fd, 0xfb73, 0x0, 0x1);
        gbc.writeMem(0x6e9d, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x8663, gbc.sp());
        EXPECT(0x6e9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0042
        gbc.setState(0xc6eb, 0xa6a7, 0x8f50, 0x4445, 0xc89f, 0xa247, 0x0, 0x1);
        gbc.writeMem(0xc6eb, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xa6a7, gbc.sp());
        EXPECT(0xc6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc6eb));
        // 00 0044
        gbc.setState(0x21ca, 0x771b, 0xcf40, 0x8042, 0x2702, 0xb024, 0x0, 0x0);
        gbc.writeMem(0x21ca, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x771b, gbc.sp());
        EXPECT(0x21cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0045
        gbc.setState(0xe218, 0x357f, 0xee90, 0x6029, 0x246a, 0xedee, 0x1, 0x0);
        gbc.writeMem(0xe218, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x357f, gbc.sp());
        EXPECT(0xe219, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe218));
        // 00 0046
        gbc.setState(0x512a, 0xfa33, 0xf870, 0x62be, 0x879, 0xb9f6, 0x1, 0x1);
        gbc.writeMem(0x512a, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xfa33, gbc.sp());
        EXPECT(0x512b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0047
        gbc.setState(0xe40c, 0xc655, 0xa750, 0x842, 0xe11a, 0xb6e1, 0x0, 0x1);
        gbc.writeMem(0xe40c, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc655, gbc.sp());
        EXPECT(0xe40d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe40c));
        // 00 0048
        gbc.setState(0x3cad, 0x815d, 0x4360, 0x3ced, 0x7969, 0x6000, 0x1, 0x0);
        gbc.writeMem(0x3cad, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x815d, gbc.sp());
        EXPECT(0x3cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 004A
        gbc.setState(0xb015, 0xb6fe, 0x8f20, 0xd0f4, 0x7910, 0x4bb5, 0x0, 0x0);
        gbc.writeMem(0xb015, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xb6fe, gbc.sp());
        EXPECT(0xb016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb015));
        // 00 004B
        gbc.setState(0x55c2, 0x3c8f, 0x4150, 0xee9d, 0xae05, 0x26a6, 0x0, 0x0);
        gbc.writeMem(0x55c2, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x3c8f, gbc.sp());
        EXPECT(0x55c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 004C
        gbc.setState(0x7236, 0x6ce0, 0x50e0, 0xd79b, 0x2589, 0xfc19, 0x0, 0x1);
        gbc.writeMem(0x7236, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x6ce0, gbc.sp());
        EXPECT(0x7237, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 004D
        gbc.setState(0x955d, 0x465f, 0xe8f0, 0x5e0d, 0x8c66, 0x46d9, 0x0, 0x0);
        gbc.writeMem(0x955d, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x465f, gbc.sp());
        EXPECT(0x955e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x955d));
        // 00 004E
        gbc.setState(0xd220, 0x2c5a, 0x2570, 0xc8a9, 0xb1e2, 0x820, 0x0, 0x1);
        gbc.writeMem(0xd220, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x2c5a, gbc.sp());
        EXPECT(0xd221, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd220));
        // 00 004F
        gbc.setState(0xb532, 0x96bd, 0x53f0, 0xd838, 0xb25e, 0xd043, 0x1, 0x0);
        gbc.writeMem(0xb532, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x96bd, gbc.sp());
        EXPECT(0xb533, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb532));
        // 00 0050
        gbc.setState(0x2ab3, 0x7557, 0x5f50, 0x11cb, 0x7659, 0xf33e, 0x0, 0x0);
        gbc.writeMem(0x2ab3, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7557, gbc.sp());
        EXPECT(0x2ab4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0051
        gbc.setState(0x374b, 0xb735, 0xfe00, 0x57b8, 0x8a60, 0xd651, 0x0, 0x1);
        gbc.writeMem(0x374b, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb735, gbc.sp());
        EXPECT(0x374c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0052
        gbc.setState(0x519c, 0x1da6, 0x4480, 0x72dd, 0x5618, 0xdb9a, 0x1, 0x1);
        gbc.writeMem(0x519c, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x1da6, gbc.sp());
        EXPECT(0x519d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0053
        gbc.setState(0x3ac8, 0x6ada, 0xf720, 0x7296, 0x42fd, 0x3577, 0x1, 0x0);
        gbc.writeMem(0x3ac8, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6ada, gbc.sp());
        EXPECT(0x3ac9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0054
        gbc.setState(0xb443, 0x9066, 0x2f40, 0xe508, 0x627, 0x4b77, 0x0, 0x0);
        gbc.writeMem(0xb443, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x9066, gbc.sp());
        EXPECT(0xb444, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb443));
        // 00 0055
        gbc.setState(0x846f, 0xed30, 0xc240, 0xfd13, 0xb981, 0xf86f, 0x0, 0x1);
        gbc.writeMem(0x846f, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xed30, gbc.sp());
        EXPECT(0x8470, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x846f));
        // 00 0056
        gbc.setState(0x8d4c, 0x9e97, 0xa4e0, 0x944b, 0x82dc, 0xb49a, 0x1, 0x1);
        gbc.writeMem(0x8d4c, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x9e97, gbc.sp());
        EXPECT(0x8d4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8d4c));
        // 00 0057
        gbc.setState(0xcb09, 0x6b9f, 0x9290, 0xc541, 0xc2b2, 0xdc6e, 0x1, 0x0);
        gbc.writeMem(0xcb09, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x6b9f, gbc.sp());
        EXPECT(0xcb0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcb09));
        // 00 0058
        gbc.setState(0xcd89, 0xf8ee, 0xff20, 0x502e, 0xd072, 0x4c80, 0x0, 0x0);
        gbc.writeMem(0xcd89, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xf8ee, gbc.sp());
        EXPECT(0xcd8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcd89));
        // 00 0059
        gbc.setState(0xdee3, 0x20c3, 0xddf0, 0x5260, 0x21c2, 0x8c, 0x1, 0x1);
        gbc.writeMem(0xdee3, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x20c3, gbc.sp());
        EXPECT(0xdee4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdee3));
        // 00 005A
        gbc.setState(0xeaaf, 0xd8d7, 0x3600, 0x4f8d, 0x16c6, 0xeb8e, 0x0, 0x1);
        gbc.writeMem(0xeaaf, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xd8d7, gbc.sp());
        EXPECT(0xeab0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xeaaf));
        // 00 005B
        gbc.setState(0xa937, 0x4b4f, 0x6c20, 0xc19a, 0x859b, 0x4bd0, 0x1, 0x0);
        gbc.writeMem(0xa937, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x4b4f, gbc.sp());
        EXPECT(0xa938, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa937));
        // 00 005C
        gbc.setState(0xb276, 0x1540, 0x2530, 0x8cf8, 0x2f21, 0x1c86, 0x1, 0x1);
        gbc.writeMem(0xb276, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x1540, gbc.sp());
        EXPECT(0xb277, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb276));
        // 00 005D
        gbc.setState(0x2884, 0xec23, 0x4a90, 0x95a0, 0x40d5, 0x4380, 0x1, 0x0);
        gbc.writeMem(0x2884, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xec23, gbc.sp());
        EXPECT(0x2885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 005E
        gbc.setState(0x8abb, 0x3b25, 0x7a10, 0xd3f6, 0xeae5, 0x3e10, 0x1, 0x0);
        gbc.writeMem(0x8abb, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x3b25, gbc.sp());
        EXPECT(0x8abc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8abb));
        // 00 0060
        gbc.setState(0x353c, 0x3fc3, 0x20c0, 0x3ba2, 0x82d6, 0xf38d, 0x0, 0x1);
        gbc.writeMem(0x353c, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x3fc3, gbc.sp());
        EXPECT(0x353d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0061
        gbc.setState(0x216, 0xa216, 0x5db0, 0x4c7e, 0x30d9, 0xd13e, 0x1, 0x0);
        gbc.writeMem(0x216, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa216, gbc.sp());
        EXPECT(0x217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0063
        gbc.setState(0x925c, 0xe20e, 0x9b20, 0x10c1, 0x143, 0x38b4, 0x0, 0x1);
        gbc.writeMem(0x925c, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xe20e, gbc.sp());
        EXPECT(0x925d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x925c));
        // 00 0064
        gbc.setState(0xa4f6, 0xea61, 0xd910, 0xdbd2, 0xbe45, 0xdc07, 0x1, 0x1);
        gbc.writeMem(0xa4f6, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xea61, gbc.sp());
        EXPECT(0xa4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa4f6));
        // 00 0065
        gbc.setState(0x4d44, 0xa7c2, 0x3e70, 0xb4a4, 0xe7e7, 0xc7c3, 0x0, 0x1);
        gbc.writeMem(0x4d44, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xa7c2, gbc.sp());
        EXPECT(0x4d45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0066
        gbc.setState(0x856, 0x623f, 0x5f80, 0x5f00, 0x6cc7, 0x7a77, 0x0, 0x0);
        gbc.writeMem(0x856, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x623f, gbc.sp());
        EXPECT(0x857, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0067
        gbc.setState(0xb77, 0x92f4, 0x8610, 0x5a7b, 0xe51e, 0xa460, 0x1, 0x1);
        gbc.writeMem(0xb77, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x92f4, gbc.sp());
        EXPECT(0xb78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0068
        gbc.setState(0x8037, 0x88ac, 0x57b0, 0x3304, 0x6130, 0x7ee9, 0x1, 0x0);
        gbc.writeMem(0x8037, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x88ac, gbc.sp());
        EXPECT(0x8038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8037));
        // 00 0069
        gbc.setState(0x7307, 0xd1c3, 0x3440, 0xffad, 0xb830, 0xb4c1, 0x0, 0x1);
        gbc.writeMem(0x7307, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xd1c3, gbc.sp());
        EXPECT(0x7308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 006A
        gbc.setState(0x3b47, 0x64c9, 0xb670, 0x19da, 0x7e0e, 0xfe71, 0x0, 0x1);
        gbc.writeMem(0x3b47, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x64c9, gbc.sp());
        EXPECT(0x3b48, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 006B
        gbc.setState(0x9ac0, 0xdba8, 0x37f0, 0x480, 0x365a, 0x9b28, 0x1, 0x1);
        gbc.writeMem(0x9ac0, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdba8, gbc.sp());
        EXPECT(0x9ac1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9ac0));
        // 00 006C
        gbc.setState(0xa787, 0xa149, 0xdd90, 0x21dc, 0x3e88, 0xf229, 0x1, 0x0);
        gbc.writeMem(0xa787, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa149, gbc.sp());
        EXPECT(0xa788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa787));
        // 00 006D
        gbc.setState(0x1b0a, 0xded5, 0x2f0, 0x2f29, 0x9a42, 0xc5ae, 0x0, 0x0);
        gbc.writeMem(0x1b0a, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xded5, gbc.sp());
        EXPECT(0x1b0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 006E
        gbc.setState(0xc0bd, 0x7570, 0xe190, 0x4815, 0xfeea, 0xa07a, 0x1, 0x1);
        gbc.writeMem(0xc0bd, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x7570, gbc.sp());
        EXPECT(0xc0be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc0bd));
        // 00 006F
        gbc.setState(0x66d3, 0x38b6, 0xb8b0, 0xcf1d, 0xe910, 0x7fbb, 0x0, 0x1);
        gbc.writeMem(0x66d3, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x38b6, gbc.sp());
        EXPECT(0x66d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0070
        gbc.setState(0x2b6e, 0xaa55, 0xd410, 0x36ed, 0xa0cf, 0x9b53, 0x1, 0x1);
        gbc.writeMem(0x2b6e, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xaa55, gbc.sp());
        EXPECT(0x2b6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0071
        gbc.setState(0x6fcd, 0x24a9, 0xc490, 0x296a, 0xdd38, 0x6009, 0x1, 0x0);
        gbc.writeMem(0x6fcd, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x24a9, gbc.sp());
        EXPECT(0x6fce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0072
        gbc.setState(0xe27f, 0x122b, 0xdd60, 0xddda, 0x3d48, 0x9a8f, 0x0, 0x1);
        gbc.writeMem(0xe27f, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x122b, gbc.sp());
        EXPECT(0xe280, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe27f));
        // 00 0073
        gbc.setState(0x16ce, 0x5fd6, 0xc140, 0x1d70, 0x6db9, 0xe2a9, 0x0, 0x1);
        gbc.writeMem(0x16ce, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5fd6, gbc.sp());
        EXPECT(0x16cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0074
        gbc.setState(0x4c22, 0xa543, 0x30e0, 0xab6, 0x72a7, 0xa537, 0x0, 0x0);
        gbc.writeMem(0x4c22, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xa543, gbc.sp());
        EXPECT(0x4c23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0075
        gbc.setState(0x550c, 0x7f6f, 0x9c50, 0xc544, 0xb2dc, 0xe98b, 0x0, 0x0);
        gbc.writeMem(0x550c, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x7f6f, gbc.sp());
        EXPECT(0x550d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0076
        gbc.setState(0xa3b9, 0x2dee, 0xaca0, 0x32e5, 0xdbad, 0xeff0, 0x0, 0x1);
        gbc.writeMem(0xa3b9, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x2dee, gbc.sp());
        EXPECT(0xa3ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa3b9));
        // 00 0077
        gbc.setState(0xe136, 0x9fb4, 0xef20, 0x2e5a, 0xd799, 0x459e, 0x1, 0x0);
        gbc.writeMem(0xe136, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x9fb4, gbc.sp());
        EXPECT(0xe137, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe136));
        // 00 0078
        gbc.setState(0x2ff1, 0x18df, 0xae40, 0xb973, 0x2a73, 0xb1ff, 0x1, 0x1);
        gbc.writeMem(0x2ff1, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x18df, gbc.sp());
        EXPECT(0x2ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0079
        gbc.setState(0x1f7c, 0x33a9, 0x7780, 0x163e, 0x2e6a, 0x8512, 0x0, 0x0);
        gbc.writeMem(0x1f7c, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x33a9, gbc.sp());
        EXPECT(0x1f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 007A
        gbc.setState(0x476e, 0x2134, 0x2210, 0x401f, 0xb944, 0xe8f7, 0x1, 0x1);
        gbc.writeMem(0x476e, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2134, gbc.sp());
        EXPECT(0x476f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 007B
        gbc.setState(0x8a5c, 0x649f, 0xf660, 0xee6b, 0x15ca, 0x78a, 0x1, 0x0);
        gbc.writeMem(0x8a5c, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x649f, gbc.sp());
        EXPECT(0x8a5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8a5c));
        // 00 007C
        gbc.setState(0xb4ec, 0xdee9, 0xd830, 0x2075, 0xc480, 0x5afc, 0x1, 0x1);
        gbc.writeMem(0xb4ec, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xdee9, gbc.sp());
        EXPECT(0xb4ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb4ec));
        // 00 007D
        gbc.setState(0x14d8, 0x3d79, 0x6fb0, 0x810f, 0x35ed, 0x5aea, 0x1, 0x1);
        gbc.writeMem(0x14d8, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x3d79, gbc.sp());
        EXPECT(0x14d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 007E
        gbc.setState(0x5562, 0xb22c, 0x4650, 0x27cf, 0xcc25, 0xfcdf, 0x0, 0x1);
        gbc.writeMem(0x5562, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xb22c, gbc.sp());
        EXPECT(0x5563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 007F
        gbc.setState(0x6f76, 0x285b, 0x8b80, 0xd389, 0xef5f, 0x1338, 0x0, 0x1);
        gbc.writeMem(0x6f76, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x285b, gbc.sp());
        EXPECT(0x6f77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0080
        gbc.setState(0x6c18, 0xefb4, 0x8400, 0x1461, 0xfde5, 0xac37, 0x1, 0x1);
        gbc.writeMem(0x6c18, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xefb4, gbc.sp());
        EXPECT(0x6c19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0081
        gbc.setState(0x8536, 0xfbc2, 0xbcb0, 0x3965, 0x2bbc, 0xe188, 0x0, 0x0);
        gbc.writeMem(0x8536, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xfbc2, gbc.sp());
        EXPECT(0x8537, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8536));
        // 00 0082
        gbc.setState(0x4e0b, 0xbcd7, 0x6860, 0x5ff2, 0x4050, 0xb73b, 0x1, 0x1);
        gbc.writeMem(0x4e0b, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xbcd7, gbc.sp());
        EXPECT(0x4e0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0083
        gbc.setState(0x3787, 0xd2bb, 0x400, 0x3eb1, 0xfb73, 0x8c7f, 0x1, 0x1);
        gbc.writeMem(0x3787, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd2bb, gbc.sp());
        EXPECT(0x3788, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0084
        gbc.setState(0xea79, 0xd84c, 0xa90, 0x80da, 0x30a4, 0x1988, 0x0, 0x1);
        gbc.writeMem(0xea79, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd84c, gbc.sp());
        EXPECT(0xea7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xea79));
        // 00 0085
        gbc.setState(0x8ce6, 0x99e1, 0xd970, 0x55ed, 0x4087, 0x6adf, 0x0, 0x1);
        gbc.writeMem(0x8ce6, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x99e1, gbc.sp());
        EXPECT(0x8ce7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8ce6));
        // 00 0086
        gbc.setState(0x515a, 0x2ca8, 0x8c70, 0xde77, 0x4ed, 0x95b7, 0x0, 0x1);
        gbc.writeMem(0x515a, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2ca8, gbc.sp());
        EXPECT(0x515b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0087
        gbc.setState(0x1cf1, 0xf7cb, 0xd350, 0xa544, 0x29d0, 0x42c3, 0x1, 0x1);
        gbc.writeMem(0x1cf1, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xf7cb, gbc.sp());
        EXPECT(0x1cf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0088
        gbc.setState(0x6c10, 0xf099, 0x8a20, 0x5771, 0x18f0, 0x7d8c, 0x1, 0x0);
        gbc.writeMem(0x6c10, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf099, gbc.sp());
        EXPECT(0x6c11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0089
        gbc.setState(0xabb9, 0x29b5, 0xde60, 0x5280, 0xb729, 0x8dfa, 0x1, 0x1);
        gbc.writeMem(0xabb9, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x29b5, gbc.sp());
        EXPECT(0xabba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xabb9));
        // 00 008A
        gbc.setState(0xda4, 0x8a13, 0x8d20, 0x8546, 0xc895, 0xf9d9, 0x0, 0x1);
        gbc.writeMem(0xda4, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x8a13, gbc.sp());
        EXPECT(0xda5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 008D
        gbc.setState(0x2e52, 0xd300, 0xe000, 0xeb27, 0x3d15, 0x4d91, 0x1, 0x1);
        gbc.writeMem(0x2e52, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xd300, gbc.sp());
        EXPECT(0x2e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 008E
        gbc.setState(0x546c, 0xc39c, 0x7d20, 0xd78d, 0x40fb, 0xace, 0x0, 0x0);
        gbc.writeMem(0x546c, { 0x0 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc39c, gbc.sp());
        EXPECT(0x546d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 008F
        gbc.setState(0x39d0, 0x808d, 0x8f20, 0x730e, 0x94a9, 0x3cd8, 0x0, 0x1);
        gbc.writeMem(0x39d0, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x808d, gbc.sp());
        EXPECT(0x39d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0090
        gbc.setState(0x20b5, 0xe098, 0x7a20, 0x21bb, 0xd3ad, 0xf0e3, 0x1, 0x1);
        gbc.writeMem(0x20b5, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xe098, gbc.sp());
        EXPECT(0x20b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0091
        gbc.setState(0x8f9c, 0xd251, 0x97d0, 0xd056, 0x1e10, 0x35e0, 0x0, 0x1);
        gbc.writeMem(0x8f9c, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd251, gbc.sp());
        EXPECT(0x8f9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8f9c));
        // 00 0092
        gbc.setState(0xe63f, 0x305a, 0x9080, 0xe7d3, 0xbe9f, 0x3da7, 0x1, 0x0);
        gbc.writeMem(0xe63f, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x305a, gbc.sp());
        EXPECT(0xe640, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe63f));
        // 00 0093
        gbc.setState(0x6454, 0xfdd1, 0x15f0, 0xdef2, 0xb242, 0x937d, 0x0, 0x0);
        gbc.writeMem(0x6454, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xfdd1, gbc.sp());
        EXPECT(0x6455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0094
        gbc.setState(0x8018, 0x3bec, 0xd70, 0xa51c, 0x4756, 0xaf5b, 0x1, 0x0);
        gbc.writeMem(0x8018, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x3bec, gbc.sp());
        EXPECT(0x8019, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8018));
        // 00 0095
        gbc.setState(0x7aa4, 0x216c, 0xdf20, 0x4926, 0x21c3, 0x1714, 0x1, 0x0);
        gbc.writeMem(0x7aa4, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x216c, gbc.sp());
        EXPECT(0x7aa5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0096
        gbc.setState(0xd03a, 0x1b6, 0x5400, 0xd97f, 0x8000, 0x7943, 0x1, 0x1);
        gbc.writeMem(0xd03a, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x1b6, gbc.sp());
        EXPECT(0xd03b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd03a));
        // 00 0097
        gbc.setState(0xd4f8, 0x8d79, 0x6fb0, 0xde86, 0xac45, 0x521f, 0x0, 0x0);
        gbc.writeMem(0xd4f8, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8d79, gbc.sp());
        EXPECT(0xd4f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd4f8));
        // 00 0098
        gbc.setState(0x6f9c, 0x1ad4, 0x1010, 0xd2e8, 0xf074, 0x41d, 0x1, 0x0);
        gbc.writeMem(0x6f9c, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1ad4, gbc.sp());
        EXPECT(0x6f9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0099
        gbc.setState(0x7b19, 0x26e7, 0xf410, 0x6bd1, 0x5ccc, 0xb824, 0x0, 0x1);
        gbc.writeMem(0x7b19, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x26e7, gbc.sp());
        EXPECT(0x7b1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 009A
        gbc.setState(0x52de, 0x58f1, 0xdbe0, 0x37ad, 0x1324, 0x4a75, 0x0, 0x1);
        gbc.writeMem(0x52de, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x58f1, gbc.sp());
        EXPECT(0x52df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 009B
        gbc.setState(0x196, 0x2bcd, 0x6060, 0x85f0, 0xb393, 0x4b6a, 0x1, 0x0);
        gbc.writeMem(0x196, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2bcd, gbc.sp());
        EXPECT(0x197, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 009C
        gbc.setState(0xa461, 0xb2c2, 0xb800, 0x82f6, 0x4491, 0x8b41, 0x0, 0x1);
        gbc.writeMem(0xa461, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb2c2, gbc.sp());
        EXPECT(0xa462, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa461));
        // 00 009D
        gbc.setState(0x958c, 0xcf2f, 0x80a0, 0xb0b5, 0x9acb, 0xb8b3, 0x0, 0x1);
        gbc.writeMem(0x958c, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xcf2f, gbc.sp());
        EXPECT(0x958d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x958c));
        // 00 009E
        gbc.setState(0xa0f0, 0x5aba, 0xcf90, 0xdc5a, 0xe5ab, 0xda53, 0x1, 0x1);
        gbc.writeMem(0xa0f0, { 0x0 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x5aba, gbc.sp());
        EXPECT(0xa0f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa0f0));
        // 00 009F
        gbc.setState(0xc142, 0xbbbb, 0xcec0, 0x4241, 0x1054, 0x631d, 0x1, 0x0);
        gbc.writeMem(0xc142, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xbbbb, gbc.sp());
        EXPECT(0xc143, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc142));
        // 00 00A0
        gbc.setState(0x26c, 0x9fd5, 0x8400, 0x8b76, 0xc861, 0x57fc, 0x0, 0x0);
        gbc.writeMem(0x26c, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x9fd5, gbc.sp());
        EXPECT(0x26d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00A1
        gbc.setState(0x861b, 0x9cfa, 0x23d0, 0x8018, 0xa65f, 0x6a75, 0x1, 0x0);
        gbc.writeMem(0x861b, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9cfa, gbc.sp());
        EXPECT(0x861c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x861b));
        // 00 00A2
        gbc.setState(0x484e, 0x10e3, 0xb010, 0xa08f, 0xc5ad, 0x8a89, 0x1, 0x0);
        gbc.writeMem(0x484e, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x10e3, gbc.sp());
        EXPECT(0x484f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00A3
        gbc.setState(0xa350, 0xea75, 0x8c10, 0x6854, 0xdc8d, 0xee7e, 0x1, 0x1);
        gbc.writeMem(0xa350, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xea75, gbc.sp());
        EXPECT(0xa351, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa350));
        // 00 00A4
        gbc.setState(0xa7a3, 0x43b4, 0x1160, 0x2db0, 0x3b69, 0xaafc, 0x0, 0x0);
        gbc.writeMem(0xa7a3, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x43b4, gbc.sp());
        EXPECT(0xa7a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa7a3));
        // 00 00A5
        gbc.setState(0xcbd8, 0xe6a6, 0x14b0, 0x54ed, 0x2588, 0xd132, 0x1, 0x1);
        gbc.writeMem(0xcbd8, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe6a6, gbc.sp());
        EXPECT(0xcbd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcbd8));
        // 00 00A6
        gbc.setState(0x8445, 0x7ba1, 0x640, 0x41d8, 0xbd9, 0x1f51, 0x0, 0x1);
        gbc.writeMem(0x8445, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7ba1, gbc.sp());
        EXPECT(0x8446, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8445));
        // 00 00A7
        gbc.setState(0x5c42, 0x656c, 0xf90, 0x6d56, 0x3136, 0xe166, 0x0, 0x0);
        gbc.writeMem(0x5c42, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x656c, gbc.sp());
        EXPECT(0x5c43, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00A8
        gbc.setState(0x9399, 0x89e8, 0x8480, 0xfb78, 0x597c, 0xeaaf, 0x0, 0x1);
        gbc.writeMem(0x9399, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x89e8, gbc.sp());
        EXPECT(0x939a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9399));
        // 00 00A9
        gbc.setState(0xc807, 0x788, 0xda20, 0x61f5, 0x2fce, 0x57f9, 0x1, 0x1);
        gbc.writeMem(0xc807, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x788, gbc.sp());
        EXPECT(0xc808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc807));
        // 00 00AB
        gbc.setState(0xc5f6, 0xe4fc, 0xa510, 0x2f64, 0x6625, 0x7431, 0x0, 0x0);
        gbc.writeMem(0xc5f6, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xe4fc, gbc.sp());
        EXPECT(0xc5f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc5f6));
        // 00 00AC
        gbc.setState(0xec8d, 0xf303, 0xf5c0, 0xe074, 0xc821, 0xe73, 0x0, 0x1);
        gbc.writeMem(0xec8d, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf303, gbc.sp());
        EXPECT(0xec8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xec8d));
        // 00 00AD
        gbc.setState(0x83bc, 0x7a5e, 0xfae0, 0xf1d, 0x5e05, 0xba99, 0x0, 0x0);
        gbc.writeMem(0x83bc, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x7a5e, gbc.sp());
        EXPECT(0x83bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x83bc));
        // 00 00AE
        gbc.setState(0x76e6, 0x841f, 0x12f0, 0x84e9, 0x4b29, 0xd995, 0x0, 0x1);
        gbc.writeMem(0x76e6, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x841f, gbc.sp());
        EXPECT(0x76e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00AF
        gbc.setState(0x981a, 0xaece, 0x12d0, 0x7ed, 0x1fe5, 0x9cae, 0x0, 0x1);
        gbc.writeMem(0x981a, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xaece, gbc.sp());
        EXPECT(0x981b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x981a));
        // 00 00B0
        gbc.setState(0x13ab, 0x39f0, 0xf8c0, 0xdc21, 0xce78, 0xa2e6, 0x0, 0x0);
        gbc.writeMem(0x13ab, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x39f0, gbc.sp());
        EXPECT(0x13ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00B1
        gbc.setState(0xe065, 0x61ab, 0x3900, 0x188d, 0x3e5e, 0x18fd, 0x1, 0x0);
        gbc.writeMem(0xe065, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x61ab, gbc.sp());
        EXPECT(0xe066, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe065));
        // 00 00B2
        gbc.setState(0xd9f, 0xaa43, 0x4560, 0x958f, 0x67cc, 0x3b0d, 0x1, 0x1);
        gbc.writeMem(0xd9f, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaa43, gbc.sp());
        EXPECT(0xda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00B3
        gbc.setState(0x41b7, 0x77f2, 0xb140, 0x655e, 0x8676, 0x2d1e, 0x1, 0x1);
        gbc.writeMem(0x41b7, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x77f2, gbc.sp());
        EXPECT(0x41b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00B4
        gbc.setState(0x2570, 0xbe47, 0xb100, 0xf5e6, 0x3bda, 0xb950, 0x1, 0x1);
        gbc.writeMem(0x2570, { 0x0 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbe47, gbc.sp());
        EXPECT(0x2571, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00B5
        gbc.setState(0x4d76, 0xc552, 0x5ed0, 0xd697, 0x521f, 0x8b1f, 0x0, 0x0);
        gbc.writeMem(0x4d76, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xc552, gbc.sp());
        EXPECT(0x4d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00B6
        gbc.setState(0xd2a4, 0x381f, 0xcee0, 0x421e, 0x55a3, 0x9477, 0x0, 0x1);
        gbc.writeMem(0xd2a4, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x381f, gbc.sp());
        EXPECT(0xd2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd2a4));
        // 00 00B7
        gbc.setState(0x4111, 0xcd32, 0xe5a0, 0x1c83, 0x14e7, 0x95d2, 0x0, 0x0);
        gbc.writeMem(0x4111, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xcd32, gbc.sp());
        EXPECT(0x4112, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00B8
        gbc.setState(0x9c19, 0x14ec, 0xc7f0, 0x2ec6, 0x5a48, 0x10dc, 0x0, 0x0);
        gbc.writeMem(0x9c19, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x14ec, gbc.sp());
        EXPECT(0x9c1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9c19));
        // 00 00B9
        gbc.setState(0xed16, 0xa1ed, 0x1a60, 0xe1ad, 0x49, 0x26d, 0x1, 0x0);
        gbc.writeMem(0xed16, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa1ed, gbc.sp());
        EXPECT(0xed17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xed16));
        // 00 00BA
        gbc.setState(0x3c0a, 0x36b7, 0x4fd0, 0x4a5d, 0x8ca0, 0x81b9, 0x1, 0x0);
        gbc.writeMem(0x3c0a, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x36b7, gbc.sp());
        EXPECT(0x3c0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00BB
        gbc.setState(0x5e2a, 0x83b5, 0x9e50, 0xc1b4, 0xd2f6, 0x683c, 0x1, 0x0);
        gbc.writeMem(0x5e2a, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x83b5, gbc.sp());
        EXPECT(0x5e2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00BC
        gbc.setState(0xd0c6, 0x7c46, 0xf570, 0x263f, 0xbc26, 0x79f2, 0x0, 0x1);
        gbc.writeMem(0xd0c6, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x7c46, gbc.sp());
        EXPECT(0xd0c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd0c6));
        // 00 00BD
        gbc.setState(0x59, 0xf7ec, 0x9220, 0xeb06, 0xa8f, 0x4d64, 0x0, 0x1);
        gbc.writeMem(0x59, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xf7ec, gbc.sp());
        EXPECT(0x5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00BE
        gbc.setState(0x27e1, 0x8534, 0x1440, 0xecc0, 0x8088, 0xacb4, 0x1, 0x1);
        gbc.writeMem(0x27e1, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x8534, gbc.sp());
        EXPECT(0x27e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00BF
        gbc.setState(0xee4e, 0x266e, 0xfd70, 0xe71a, 0x41d0, 0x5615, 0x1, 0x1);
        gbc.writeMem(0xee4e, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x266e, gbc.sp());
        EXPECT(0xee4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xee4e));
        // 00 00C0
        gbc.setState(0xbc93, 0xd12, 0x9390, 0xbab8, 0x4f6c, 0x4b96, 0x1, 0x1);
        gbc.writeMem(0xbc93, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd12, gbc.sp());
        EXPECT(0xbc94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbc93));
        // 00 00C1
        gbc.setState(0x805d, 0x6331, 0x6ef0, 0x9f54, 0x72a6, 0x3ddf, 0x1, 0x1);
        gbc.writeMem(0x805d, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x6331, gbc.sp());
        EXPECT(0x805e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x805d));
        // 00 00C2
        gbc.setState(0x7a48, 0xebd6, 0x67d0, 0xc8f7, 0x2399, 0x6725, 0x0, 0x1);
        gbc.writeMem(0x7a48, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xebd6, gbc.sp());
        EXPECT(0x7a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00C3
        gbc.setState(0x1058, 0xaf8f, 0x56c0, 0x9cdd, 0xde88, 0xf32d, 0x0, 0x1);
        gbc.writeMem(0x1058, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xaf8f, gbc.sp());
        EXPECT(0x1059, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00C4
        gbc.setState(0xc1c, 0x83eb, 0x48f0, 0x5ab1, 0xa25f, 0xa6a4, 0x0, 0x1);
        gbc.writeMem(0xc1c, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x83eb, gbc.sp());
        EXPECT(0xc1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00C5
        gbc.setState(0x64f1, 0xce9f, 0x8140, 0x6897, 0xd20, 0x91bf, 0x0, 0x0);
        gbc.writeMem(0x64f1, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xce9f, gbc.sp());
        EXPECT(0x64f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00C6
        gbc.setState(0x5552, 0xd6f9, 0x5110, 0xd98b, 0xc19, 0xb1de, 0x1, 0x0);
        gbc.writeMem(0x5552, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xd6f9, gbc.sp());
        EXPECT(0x5553, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00C7
        gbc.setState(0xac25, 0x9c01, 0xa880, 0x4bc4, 0x1ce5, 0xf982, 0x1, 0x1);
        gbc.writeMem(0xac25, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x9c01, gbc.sp());
        EXPECT(0xac26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xac25));
        // 00 00C8
        gbc.setState(0x5fe4, 0x995c, 0x2560, 0xbe11, 0xef3f, 0xe7ba, 0x0, 0x1);
        gbc.writeMem(0x5fe4, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x995c, gbc.sp());
        EXPECT(0x5fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00C9
        gbc.setState(0x38f, 0x3602, 0x9670, 0x5f9d, 0xea3e, 0x2607, 0x0, 0x0);
        gbc.writeMem(0x38f, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3602, gbc.sp());
        EXPECT(0x390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00CB
        gbc.setState(0x9bb2, 0x6175, 0x8f10, 0xca80, 0x44c1, 0x9ad8, 0x0, 0x1);
        gbc.writeMem(0x9bb2, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x6175, gbc.sp());
        EXPECT(0x9bb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9bb2));
        // 00 00CC
        gbc.setState(0x7592, 0xac0a, 0x3ef0, 0x6d3e, 0x9aad, 0xa1fd, 0x0, 0x1);
        gbc.writeMem(0x7592, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xac0a, gbc.sp());
        EXPECT(0x7593, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00CD
        gbc.setState(0x6a46, 0x4e6a, 0x2500, 0xe28, 0xf047, 0x6d16, 0x1, 0x0);
        gbc.writeMem(0x6a46, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x4e6a, gbc.sp());
        EXPECT(0x6a47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00CE
        gbc.setState(0x4bc4, 0x2823, 0xc1c0, 0x8136, 0x2036, 0xf9dd, 0x1, 0x1);
        gbc.writeMem(0x4bc4, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2823, gbc.sp());
        EXPECT(0x4bc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00CF
        gbc.setState(0x1798, 0x4c22, 0x9840, 0xd141, 0xbba6, 0x4a02, 0x1, 0x1);
        gbc.writeMem(0x1798, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4c22, gbc.sp());
        EXPECT(0x1799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00D0
        gbc.setState(0xa6f9, 0x8677, 0x75b0, 0xe4ea, 0x2d1, 0x8d69, 0x1, 0x1);
        gbc.writeMem(0xa6f9, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x8677, gbc.sp());
        EXPECT(0xa6fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa6f9));
        // 00 00D2
        gbc.setState(0x3844, 0xfca9, 0x32e0, 0x968d, 0x4969, 0xcba7, 0x1, 0x1);
        gbc.writeMem(0x3844, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xfca9, gbc.sp());
        EXPECT(0x3845, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00D3
        gbc.setState(0x1c57, 0xa3c1, 0xa2f0, 0x3f51, 0x6f15, 0xad46, 0x1, 0x1);
        gbc.writeMem(0x1c57, { 0x0 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa3c1, gbc.sp());
        EXPECT(0x1c58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00D4
        gbc.setState(0xa832, 0xac8f, 0xaf0, 0xe4b7, 0x795b, 0x6e39, 0x1, 0x1);
        gbc.writeMem(0xa832, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xac8f, gbc.sp());
        EXPECT(0xa833, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa832));
        // 00 00D5
        gbc.setState(0x353, 0xbf8, 0x31f0, 0x22c, 0x5768, 0xec52, 0x0, 0x0);
        gbc.writeMem(0x353, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xbf8, gbc.sp());
        EXPECT(0x354, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00D6
        gbc.setState(0xacb8, 0x6a66, 0x1ac0, 0xb12e, 0xaf8e, 0xccfb, 0x0, 0x1);
        gbc.writeMem(0xacb8, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6a66, gbc.sp());
        EXPECT(0xacb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xacb8));
        // 00 00D7
        gbc.setState(0x2895, 0xfb3d, 0x17b0, 0xee5d, 0xf5b6, 0x52ba, 0x0, 0x0);
        gbc.writeMem(0x2895, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xfb3d, gbc.sp());
        EXPECT(0x2896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00D8
        gbc.setState(0x8608, 0x62c3, 0x19f0, 0x31b2, 0xb9b4, 0x2dd6, 0x1, 0x1);
        gbc.writeMem(0x8608, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x62c3, gbc.sp());
        EXPECT(0x8609, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8608));
        // 00 00DA
        gbc.setState(0x1453, 0x8549, 0xb770, 0x6630, 0xe798, 0xbc44, 0x1, 0x1);
        gbc.writeMem(0x1453, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8549, gbc.sp());
        EXPECT(0x1454, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00DB
        gbc.setState(0x3de5, 0xd45d, 0x19b0, 0xb35e, 0x5d3a, 0x8f96, 0x1, 0x0);
        gbc.writeMem(0x3de5, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xd45d, gbc.sp());
        EXPECT(0x3de6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00DC
        gbc.setState(0x5481, 0x7e8d, 0x120, 0x366a, 0x7943, 0x5f21, 0x1, 0x1);
        gbc.writeMem(0x5481, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x7e8d, gbc.sp());
        EXPECT(0x5482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00DD
        gbc.setState(0xa5ac, 0x1926, 0x460, 0xab34, 0xe4a, 0xff35, 0x1, 0x1);
        gbc.writeMem(0xa5ac, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1926, gbc.sp());
        EXPECT(0xa5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa5ac));
        // 00 00DE
        gbc.setState(0x7d9a, 0xa6b1, 0xbdd0, 0x2fd0, 0xef85, 0x696d, 0x0, 0x1);
        gbc.writeMem(0x7d9a, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa6b1, gbc.sp());
        EXPECT(0x7d9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00DF
        gbc.setState(0xd468, 0x7b92, 0x8340, 0x7424, 0x1c5c, 0x2bd8, 0x1, 0x0);
        gbc.writeMem(0xd468, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x7b92, gbc.sp());
        EXPECT(0xd469, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd468));
        // 00 00E0
        gbc.setState(0x5642, 0x9a29, 0x58f0, 0xeee8, 0x2ce6, 0xd0bc, 0x0, 0x1);
        gbc.writeMem(0x5642, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x9a29, gbc.sp());
        EXPECT(0x5643, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00E2
        gbc.setState(0xa890, 0xb1df, 0x100, 0x8960, 0xe19d, 0x9f84, 0x0, 0x1);
        gbc.writeMem(0xa890, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xb1df, gbc.sp());
        EXPECT(0xa891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa890));
        // 00 00E3
        gbc.setState(0xb998, 0x82b7, 0xc5e0, 0xf7f9, 0x492b, 0x121b, 0x0, 0x0);
        gbc.writeMem(0xb998, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x82b7, gbc.sp());
        EXPECT(0xb999, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb998));
        // 00 00E4
        gbc.setState(0x1edf, 0xbca2, 0x3a0, 0xcca, 0xfae, 0x1828, 0x1, 0x1);
        gbc.writeMem(0x1edf, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbca2, gbc.sp());
        EXPECT(0x1ee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00E5
        gbc.setState(0xb454, 0x44d4, 0x8ae0, 0x2072, 0x7b5d, 0xda93, 0x0, 0x0);
        gbc.writeMem(0xb454, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x44d4, gbc.sp());
        EXPECT(0xb455, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb454));
        // 00 00E6
        gbc.setState(0xb673, 0x1651, 0x2a20, 0xbcf0, 0x6353, 0xd15b, 0x0, 0x1);
        gbc.writeMem(0xb673, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x1651, gbc.sp());
        EXPECT(0xb674, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb673));
        // 00 00E7
        gbc.setState(0x602c, 0x27aa, 0x6f40, 0xdab4, 0x48e8, 0x1d57, 0x0, 0x1);
        gbc.writeMem(0x602c, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x27aa, gbc.sp());
        EXPECT(0x602d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00E8
        gbc.setState(0x692b, 0x7373, 0xee30, 0xcb0c, 0xab75, 0xe8a0, 0x0, 0x0);
        gbc.writeMem(0x692b, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x7373, gbc.sp());
        EXPECT(0x692c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00E9
        gbc.setState(0x39f4, 0xe75e, 0xf740, 0xb7e3, 0x2220, 0x473a, 0x0, 0x0);
        gbc.writeMem(0x39f4, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xe75e, gbc.sp());
        EXPECT(0x39f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00EA
        gbc.setState(0xcba0, 0x77ee, 0xbcc0, 0xc748, 0xf83a, 0xbfee, 0x0, 0x1);
        gbc.writeMem(0xcba0, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x77ee, gbc.sp());
        EXPECT(0xcba1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcba0));
        // 00 00EC
        gbc.setState(0xa81e, 0xe1d4, 0x5f70, 0xa4e6, 0x33be, 0xa6c8, 0x1, 0x1);
        gbc.writeMem(0xa81e, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe1d4, gbc.sp());
        EXPECT(0xa81f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa81e));
        // 00 00ED
        gbc.setState(0x2d2b, 0x7736, 0xe390, 0x6e02, 0x2299, 0x7891, 0x0, 0x1);
        gbc.writeMem(0x2d2b, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x7736, gbc.sp());
        EXPECT(0x2d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00EE
        gbc.setState(0x2f71, 0x6f44, 0x47b0, 0xfd18, 0x7010, 0xf003, 0x1, 0x1);
        gbc.writeMem(0x2f71, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x6f44, gbc.sp());
        EXPECT(0x2f72, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00EF
        gbc.setState(0xafbf, 0x7b3a, 0x1210, 0x3b5c, 0xed1c, 0x7d9b, 0x0, 0x1);
        gbc.writeMem(0xafbf, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x7b3a, gbc.sp());
        EXPECT(0xafc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xafbf));
        // 00 00F0
        gbc.setState(0xa256, 0xc468, 0x2db0, 0x9deb, 0x83, 0xe688, 0x1, 0x1);
        gbc.writeMem(0xa256, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc468, gbc.sp());
        EXPECT(0xa257, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa256));
        // 00 00F1
        gbc.setState(0x6d73, 0x9854, 0xcdd0, 0xbe1c, 0x8793, 0x7675, 0x1, 0x1);
        gbc.writeMem(0x6d73, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x9854, gbc.sp());
        EXPECT(0x6d74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00F3
        gbc.setState(0x13b8, 0x42c8, 0xf390, 0xad60, 0x91ab, 0xd734, 0x0, 0x1);
        gbc.writeMem(0x13b8, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x42c8, gbc.sp());
        EXPECT(0x13b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00F4
        gbc.setState(0x97a8, 0xd7d4, 0x1db0, 0xf01f, 0x25b8, 0xc486, 0x1, 0x1);
        gbc.writeMem(0x97a8, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xd7d4, gbc.sp());
        EXPECT(0x97a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x97a8));
        // 00 00F5
        gbc.setState(0x9e38, 0xb81b, 0xe470, 0x3756, 0x7553, 0xca8, 0x0, 0x0);
        gbc.writeMem(0x9e38, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb81b, gbc.sp());
        EXPECT(0x9e39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9e38));
        // 00 00F6
        gbc.setState(0x5816, 0x2de9, 0xcea0, 0x39e9, 0x537, 0x5cd5, 0x0, 0x1);
        gbc.writeMem(0x5816, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2de9, gbc.sp());
        EXPECT(0x5817, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00F7
        gbc.setState(0x350c, 0x7da5, 0x9660, 0x703c, 0xf4cb, 0x255d, 0x0, 0x1);
        gbc.writeMem(0x350c, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x7da5, gbc.sp());
        EXPECT(0x350d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00F8
        gbc.setState(0x81fc, 0x304d, 0x45e0, 0xf2d7, 0x9262, 0xb24f, 0x0, 0x0);
        gbc.writeMem(0x81fc, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x304d, gbc.sp());
        EXPECT(0x81fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x81fc));
        // 00 00F9
        gbc.setState(0x7f88, 0x695b, 0x96b0, 0xb546, 0x6bac, 0x6b10, 0x1, 0x0);
        gbc.writeMem(0x7f88, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x695b, gbc.sp());
        EXPECT(0x7f89, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00FA
        gbc.setState(0x97e6, 0xcba3, 0xaa30, 0xd0f4, 0x653b, 0x6516, 0x1, 0x0);
        gbc.writeMem(0x97e6, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcba3, gbc.sp());
        EXPECT(0x97e7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x97e6));
        // 00 00FB
        gbc.setState(0x81e1, 0x8ad9, 0x7fe0, 0xf0bc, 0xc758, 0xc120, 0x0, 0x0);
        gbc.writeMem(0x81e1, { 0x0 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8ad9, gbc.sp());
        EXPECT(0x81e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x81e1));
        // 00 00FC
        gbc.setState(0xf26, 0x6138, 0x6820, 0xd0ab, 0x4233, 0xabf9, 0x0, 0x0);
        gbc.writeMem(0xf26, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6138, gbc.sp());
        EXPECT(0xf27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 00FD
        gbc.setState(0xc4ae, 0x18b6, 0x8a10, 0x4ccf, 0x8561, 0xf6e2, 0x1, 0x1);
        gbc.writeMem(0xc4ae, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x18b6, gbc.sp());
        EXPECT(0xc4af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc4ae));
        // 00 00FE
        gbc.setState(0x1dfd, 0xe40e, 0x8350, 0x3123, 0x3725, 0x7a62, 0x1, 0x0);
        gbc.writeMem(0x1dfd, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe40e, gbc.sp());
        EXPECT(0x1dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 00FF
        gbc.setState(0xe4d0, 0x3279, 0xf780, 0xd2c0, 0xc530, 0x7875, 0x0, 0x0);
        gbc.writeMem(0xe4d0, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3279, gbc.sp());
        EXPECT(0xe4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe4d0));
        // 00 0100
        gbc.setState(0x66de, 0x2f02, 0x2140, 0x5cef, 0x25c9, 0xb6b4, 0x0, 0x0);
        gbc.writeMem(0x66de, { 0x0 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2f02, gbc.sp());
        EXPECT(0x66df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0101
        gbc.setState(0xaa70, 0xc022, 0x1da0, 0xbafa, 0x4fec, 0x72e, 0x1, 0x1);
        gbc.writeMem(0xaa70, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc022, gbc.sp());
        EXPECT(0xaa71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaa70));
        // 00 0102
        gbc.setState(0xaa74, 0xc339, 0x5800, 0x494a, 0xf3c6, 0xfbfc, 0x0, 0x1);
        gbc.writeMem(0xaa74, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc339, gbc.sp());
        EXPECT(0xaa75, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaa74));
        // 00 0103
        gbc.setState(0x722d, 0x5479, 0x80d0, 0x4dbb, 0x9938, 0x6b7c, 0x1, 0x1);
        gbc.writeMem(0x722d, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x5479, gbc.sp());
        EXPECT(0x722e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0104
        gbc.setState(0x9016, 0x83bf, 0x1b90, 0x9c04, 0x5296, 0xba8f, 0x1, 0x1);
        gbc.writeMem(0x9016, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x83bf, gbc.sp());
        EXPECT(0x9017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9016));
        // 00 0105
        gbc.setState(0xef70, 0xda5e, 0xa620, 0xa37b, 0xad11, 0x220e, 0x0, 0x0);
        gbc.writeMem(0xef70, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xda5e, gbc.sp());
        EXPECT(0xef71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xef70));
        // 00 0106
        gbc.setState(0x6e2a, 0x8da4, 0xf9f0, 0x2011, 0x8bfa, 0xd547, 0x0, 0x0);
        gbc.writeMem(0x6e2a, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x8da4, gbc.sp());
        EXPECT(0x6e2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0107
        gbc.setState(0xa7c2, 0xc620, 0xd7c0, 0x423b, 0xb802, 0x3278, 0x1, 0x1);
        gbc.writeMem(0xa7c2, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc620, gbc.sp());
        EXPECT(0xa7c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa7c2));
        // 00 0108
        gbc.setState(0xdf4c, 0xce5f, 0xfa50, 0x9b7b, 0xda6, 0x6868, 0x0, 0x0);
        gbc.writeMem(0xdf4c, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xce5f, gbc.sp());
        EXPECT(0xdf4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdf4c));
        // 00 0109
        gbc.setState(0x84c2, 0xa4a7, 0x5e90, 0xbb8e, 0xbdff, 0xdb14, 0x1, 0x1);
        gbc.writeMem(0x84c2, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xa4a7, gbc.sp());
        EXPECT(0x84c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x84c2));
        // 00 010A
        gbc.setState(0x5407, 0xd5c2, 0x95b0, 0x55, 0x3ed2, 0xa44e, 0x1, 0x1);
        gbc.writeMem(0x5407, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xd5c2, gbc.sp());
        EXPECT(0x5408, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 010B
        gbc.setState(0x96f0, 0xa03e, 0x4600, 0x2495, 0xf03, 0x949, 0x1, 0x0);
        gbc.writeMem(0x96f0, { 0x0 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa03e, gbc.sp());
        EXPECT(0x96f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x96f0));
        // 00 010C
        gbc.setState(0x99ac, 0x30ae, 0x7c40, 0xe747, 0xd4a8, 0x8a9e, 0x1, 0x0);
        gbc.writeMem(0x99ac, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x30ae, gbc.sp());
        EXPECT(0x99ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x99ac));
        // 00 010D
        gbc.setState(0x2274, 0xf4bb, 0x30e0, 0x4131, 0x393d, 0x789e, 0x1, 0x1);
        gbc.writeMem(0x2274, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xf4bb, gbc.sp());
        EXPECT(0x2275, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 010F
        gbc.setState(0x28da, 0x8e88, 0xd220, 0x68ec, 0x7b00, 0x3466, 0x1, 0x1);
        gbc.writeMem(0x28da, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8e88, gbc.sp());
        EXPECT(0x28db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0110
        gbc.setState(0xd32a, 0xe630, 0xc7c0, 0x4989, 0x7956, 0x3cc8, 0x1, 0x0);
        gbc.writeMem(0xd32a, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xe630, gbc.sp());
        EXPECT(0xd32b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd32a));
        // 00 0111
        gbc.setState(0xa7a5, 0x65e9, 0xac30, 0xaf73, 0xc414, 0x923b, 0x0, 0x0);
        gbc.writeMem(0xa7a5, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x65e9, gbc.sp());
        EXPECT(0xa7a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa7a5));
        // 00 0112
        gbc.setState(0x1f11, 0x9017, 0xb820, 0xfd77, 0xd957, 0x6da3, 0x1, 0x0);
        gbc.writeMem(0x1f11, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9017, gbc.sp());
        EXPECT(0x1f12, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0113
        gbc.setState(0x498f, 0x4937, 0x3200, 0xa6f1, 0xc922, 0x1002, 0x1, 0x0);
        gbc.writeMem(0x498f, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x4937, gbc.sp());
        EXPECT(0x4990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0116
        gbc.setState(0x1593, 0xb92, 0x59e0, 0x283a, 0xd863, 0x1380, 0x1, 0x0);
        gbc.writeMem(0x1593, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xb92, gbc.sp());
        EXPECT(0x1594, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0117
        gbc.setState(0xdfe3, 0x3e06, 0x8090, 0xebe1, 0xe70a, 0xd363, 0x1, 0x1);
        gbc.writeMem(0xdfe3, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3e06, gbc.sp());
        EXPECT(0xdfe4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdfe3));
        // 00 0118
        gbc.setState(0x37f4, 0xca6e, 0x9e90, 0x28a, 0x1be1, 0xf225, 0x0, 0x0);
        gbc.writeMem(0x37f4, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xca6e, gbc.sp());
        EXPECT(0x37f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0119
        gbc.setState(0x6ac, 0xdbf7, 0xdf50, 0xc337, 0xf467, 0xefbc, 0x0, 0x1);
        gbc.writeMem(0x6ac, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xdbf7, gbc.sp());
        EXPECT(0x6ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 011A
        gbc.setState(0x9a86, 0xd596, 0x4510, 0x6fff, 0xdfcb, 0xca53, 0x1, 0x1);
        gbc.writeMem(0x9a86, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xd596, gbc.sp());
        EXPECT(0x9a87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9a86));
        // 00 011C
        gbc.setState(0xa768, 0xf5fa, 0x9720, 0xfdf8, 0x6d51, 0x390e, 0x0, 0x0);
        gbc.writeMem(0xa768, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf5fa, gbc.sp());
        EXPECT(0xa769, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa768));
        // 00 011D
        gbc.setState(0x27b4, 0xa0cf, 0xb840, 0xe24c, 0x97f0, 0x2097, 0x0, 0x0);
        gbc.writeMem(0x27b4, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa0cf, gbc.sp());
        EXPECT(0x27b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 011F
        gbc.setState(0xdee3, 0xb875, 0x7100, 0xbe10, 0x302f, 0x30e6, 0x0, 0x1);
        gbc.writeMem(0xdee3, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xb875, gbc.sp());
        EXPECT(0xdee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdee3));
        // 00 0120
        gbc.setState(0xcd7e, 0xc047, 0x8320, 0xd732, 0x27bc, 0xa718, 0x1, 0x0);
        gbc.writeMem(0xcd7e, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc047, gbc.sp());
        EXPECT(0xcd7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcd7e));
        // 00 0121
        gbc.setState(0x646a, 0x91a9, 0x9950, 0xee2c, 0xf651, 0x8279, 0x0, 0x0);
        gbc.writeMem(0x646a, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x91a9, gbc.sp());
        EXPECT(0x646b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0122
        gbc.setState(0x4187, 0xceb6, 0x5eb0, 0xc3a6, 0x7fc2, 0x377c, 0x1, 0x1);
        gbc.writeMem(0x4187, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xceb6, gbc.sp());
        EXPECT(0x4188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0123
        gbc.setState(0x7d42, 0x5310, 0x39f0, 0xaf0b, 0xa8ba, 0x754a, 0x1, 0x0);
        gbc.writeMem(0x7d42, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x5310, gbc.sp());
        EXPECT(0x7d43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0124
        gbc.setState(0xd4d0, 0xc60, 0xa3c0, 0xb90c, 0x15b2, 0x3820, 0x0, 0x1);
        gbc.writeMem(0xd4d0, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xc60, gbc.sp());
        EXPECT(0xd4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd4d0));
        // 00 0125
        gbc.setState(0x25dd, 0xff4a, 0x850, 0xbf5e, 0x4761, 0x8b4d, 0x1, 0x1);
        gbc.writeMem(0x25dd, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xff4a, gbc.sp());
        EXPECT(0x25de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0126
        gbc.setState(0x9049, 0x2a24, 0x22c0, 0xe25a, 0xaa4e, 0x7a5e, 0x0, 0x0);
        gbc.writeMem(0x9049, { 0x0 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2a24, gbc.sp());
        EXPECT(0x904a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9049));
        // 00 0127
        gbc.setState(0x6763, 0x479d, 0xc30, 0x9b52, 0xeb71, 0xf57d, 0x0, 0x0);
        gbc.writeMem(0x6763, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x479d, gbc.sp());
        EXPECT(0x6764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0128
        gbc.setState(0x2d02, 0xaee5, 0x9cb0, 0x965, 0xdd85, 0xf567, 0x1, 0x0);
        gbc.writeMem(0x2d02, { 0x0 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xaee5, gbc.sp());
        EXPECT(0x2d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0129
        gbc.setState(0x2dcf, 0x34fd, 0x280, 0xcde1, 0xfbd8, 0x8910, 0x0, 0x1);
        gbc.writeMem(0x2dcf, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x34fd, gbc.sp());
        EXPECT(0x2dd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 012A
        gbc.setState(0xdcff, 0x79bf, 0xdcb0, 0xb22, 0xfba9, 0x9815, 0x1, 0x1);
        gbc.writeMem(0xdcff, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x79bf, gbc.sp());
        EXPECT(0xdd00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdcff));
        // 00 012B
        gbc.setState(0xa9d9, 0xe9c2, 0xa8d0, 0x91c9, 0x73ce, 0xba49, 0x1, 0x0);
        gbc.writeMem(0xa9d9, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xe9c2, gbc.sp());
        EXPECT(0xa9da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa9d9));
        // 00 012C
        gbc.setState(0x254d, 0xf25f, 0xf720, 0x3117, 0x8209, 0x50ce, 0x0, 0x1);
        gbc.writeMem(0x254d, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf25f, gbc.sp());
        EXPECT(0x254e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 012D
        gbc.setState(0x2e90, 0x1504, 0xd000, 0xb728, 0x5a19, 0x9c98, 0x1, 0x0);
        gbc.writeMem(0x2e90, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x1504, gbc.sp());
        EXPECT(0x2e91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 012E
        gbc.setState(0x118, 0x19de, 0x7c20, 0xc5d8, 0x7731, 0x5e65, 0x1, 0x1);
        gbc.writeMem(0x118, { 0x0 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x19de, gbc.sp());
        EXPECT(0x119, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 012F
        gbc.setState(0x45fe, 0x2eb9, 0x8ed0, 0xe0b7, 0xdee1, 0x7dbb, 0x0, 0x1);
        gbc.writeMem(0x45fe, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x2eb9, gbc.sp());
        EXPECT(0x45ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0130
        gbc.setState(0x890, 0xcd69, 0x9db0, 0x9c68, 0x87f5, 0x9ce9, 0x0, 0x1);
        gbc.writeMem(0x890, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xcd69, gbc.sp());
        EXPECT(0x891, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0131
        gbc.setState(0xa16a, 0x4bd6, 0x7660, 0x5e81, 0xefe2, 0x70b6, 0x1, 0x0);
        gbc.writeMem(0xa16a, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x4bd6, gbc.sp());
        EXPECT(0xa16b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa16a));
        // 00 0132
        gbc.setState(0x898f, 0xa9e8, 0x8d90, 0x4cff, 0xe837, 0x4b16, 0x1, 0x1);
        gbc.writeMem(0x898f, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xa9e8, gbc.sp());
        EXPECT(0x8990, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x898f));
        // 00 0133
        gbc.setState(0x8a9b, 0xdc11, 0x26c0, 0x7480, 0xd451, 0xc249, 0x1, 0x0);
        gbc.writeMem(0x8a9b, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xdc11, gbc.sp());
        EXPECT(0x8a9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8a9b));
        // 00 0134
        gbc.setState(0xda0b, 0xa0eb, 0x2d30, 0x56f3, 0xdf36, 0xa74f, 0x0, 0x1);
        gbc.writeMem(0xda0b, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xa0eb, gbc.sp());
        EXPECT(0xda0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xda0b));
        // 00 0135
        gbc.setState(0x2b06, 0xf59e, 0x48d0, 0x270a, 0xbe6, 0xec09, 0x1, 0x0);
        gbc.writeMem(0x2b06, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xf59e, gbc.sp());
        EXPECT(0x2b07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0136
        gbc.setState(0xa9a3, 0xe61f, 0xf130, 0x6b54, 0xc8fc, 0x5ad3, 0x0, 0x0);
        gbc.writeMem(0xa9a3, { 0x0 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe61f, gbc.sp());
        EXPECT(0xa9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa9a3));
        // 00 0137
        gbc.setState(0xc030, 0xc952, 0x3fd0, 0xe4b8, 0xc61b, 0xbc2a, 0x1, 0x1);
        gbc.writeMem(0xc030, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xc952, gbc.sp());
        EXPECT(0xc031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc030));
        // 00 0138
        gbc.setState(0x58f, 0x3723, 0xa7a0, 0xf2e7, 0x644a, 0xb8e1, 0x0, 0x0);
        gbc.writeMem(0x58f, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3723, gbc.sp());
        EXPECT(0x590, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0139
        gbc.setState(0x46d7, 0xf361, 0x13e0, 0xe4e5, 0x3ad8, 0xab46, 0x1, 0x0);
        gbc.writeMem(0x46d7, { 0x0 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf361, gbc.sp());
        EXPECT(0x46d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 013A
        gbc.setState(0xbefd, 0x8c8e, 0x2c50, 0xb740, 0x4472, 0xc29, 0x1, 0x0);
        gbc.writeMem(0xbefd, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x8c8e, gbc.sp());
        EXPECT(0xbefe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbefd));
        // 00 013B
        gbc.setState(0x3ac7, 0x96a1, 0x24e0, 0x103e, 0x527c, 0x9661, 0x1, 0x1);
        gbc.writeMem(0x3ac7, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x96a1, gbc.sp());
        EXPECT(0x3ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 013C
        gbc.setState(0x2881, 0x5ce1, 0x62b0, 0xbb40, 0x2b31, 0xc7c1, 0x0, 0x1);
        gbc.writeMem(0x2881, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x5ce1, gbc.sp());
        EXPECT(0x2882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 013D
        gbc.setState(0x2553, 0xd44a, 0xf820, 0xcfe2, 0xd447, 0x5555, 0x0, 0x0);
        gbc.writeMem(0x2553, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xd44a, gbc.sp());
        EXPECT(0x2554, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 013E
        gbc.setState(0x5580, 0xdce4, 0xc320, 0x4a6, 0x6265, 0xc4ca, 0x0, 0x1);
        gbc.writeMem(0x5580, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdce4, gbc.sp());
        EXPECT(0x5581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 013F
        gbc.setState(0xec7b, 0x3593, 0x8d30, 0xb833, 0x8590, 0x344b, 0x0, 0x0);
        gbc.writeMem(0xec7b, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3593, gbc.sp());
        EXPECT(0xec7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xec7b));
        // 00 0140
        gbc.setState(0xd66d, 0x4141, 0x8ff0, 0x8424, 0x5b2, 0x2b33, 0x0, 0x0);
        gbc.writeMem(0xd66d, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x4141, gbc.sp());
        EXPECT(0xd66e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd66d));
        // 00 0141
        gbc.setState(0xe85, 0x6b4, 0xafa0, 0x6098, 0x1016, 0x20f1, 0x0, 0x0);
        gbc.writeMem(0xe85, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6b4, gbc.sp());
        EXPECT(0xe86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0142
        gbc.setState(0xe9cf, 0x804d, 0xee10, 0x4df1, 0xdfad, 0x646b, 0x0, 0x0);
        gbc.writeMem(0xe9cf, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x804d, gbc.sp());
        EXPECT(0xe9d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe9cf));
        // 00 0144
        gbc.setState(0x7f34, 0x6c83, 0xe930, 0x9d7d, 0x7f67, 0x9428, 0x1, 0x1);
        gbc.writeMem(0x7f34, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6c83, gbc.sp());
        EXPECT(0x7f35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0145
        gbc.setState(0x7dc4, 0x53ec, 0x8bf0, 0xb9df, 0x15ca, 0x9b99, 0x1, 0x1);
        gbc.writeMem(0x7dc4, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x53ec, gbc.sp());
        EXPECT(0x7dc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0146
        gbc.setState(0x14c3, 0x276a, 0x1670, 0xca7e, 0xb9d1, 0xe634, 0x1, 0x1);
        gbc.writeMem(0x14c3, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x276a, gbc.sp());
        EXPECT(0x14c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0147
        gbc.setState(0x2a92, 0xf0ec, 0x3170, 0xc395, 0xf323, 0x6138, 0x0, 0x1);
        gbc.writeMem(0x2a92, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf0ec, gbc.sp());
        EXPECT(0x2a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0148
        gbc.setState(0x4bbc, 0x93a, 0x8c00, 0x1c22, 0x5f1e, 0x291, 0x0, 0x0);
        gbc.writeMem(0x4bbc, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x93a, gbc.sp());
        EXPECT(0x4bbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0149
        gbc.setState(0x1f49, 0x3938, 0x990, 0x67d8, 0xbb6c, 0xbfa0, 0x1, 0x1);
        gbc.writeMem(0x1f49, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x3938, gbc.sp());
        EXPECT(0x1f4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 014A
        gbc.setState(0xdd0c, 0x739b, 0x6910, 0x553c, 0x1231, 0x61cc, 0x1, 0x1);
        gbc.writeMem(0xdd0c, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x739b, gbc.sp());
        EXPECT(0xdd0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdd0c));
        // 00 014B
        gbc.setState(0x419, 0x4325, 0x6b00, 0x501e, 0x5b8d, 0x7a1f, 0x1, 0x1);
        gbc.writeMem(0x419, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4325, gbc.sp());
        EXPECT(0x41a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 014C
        gbc.setState(0xc265, 0x87f6, 0x9580, 0xf39a, 0x7e53, 0x72ac, 0x0, 0x1);
        gbc.writeMem(0xc265, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x87f6, gbc.sp());
        EXPECT(0xc266, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc265));
        // 00 014D
        gbc.setState(0xd485, 0x2243, 0x2960, 0x6abd, 0x5ce8, 0xed5, 0x0, 0x0);
        gbc.writeMem(0xd485, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2243, gbc.sp());
        EXPECT(0xd486, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd485));
        // 00 014E
        gbc.setState(0x12e9, 0x6850, 0x2970, 0x2b78, 0xda84, 0xe005, 0x1, 0x1);
        gbc.writeMem(0x12e9, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6850, gbc.sp());
        EXPECT(0x12ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 014F
        gbc.setState(0xd119, 0x3206, 0xc840, 0xc82, 0xb89b, 0xa662, 0x1, 0x1);
        gbc.writeMem(0xd119, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3206, gbc.sp());
        EXPECT(0xd11a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd119));
        // 00 0150
        gbc.setState(0x1538, 0x1966, 0x80, 0xd092, 0xba93, 0xcf66, 0x1, 0x0);
        gbc.writeMem(0x1538, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x1966, gbc.sp());
        EXPECT(0x1539, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0151
        gbc.setState(0x246a, 0x9385, 0xc180, 0xd2ae, 0xc4a, 0x4372, 0x1, 0x1);
        gbc.writeMem(0x246a, { 0x0 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x9385, gbc.sp());
        EXPECT(0x246b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0152
        gbc.setState(0x7668, 0x4587, 0x5290, 0x6696, 0xacd7, 0xc223, 0x1, 0x1);
        gbc.writeMem(0x7668, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x4587, gbc.sp());
        EXPECT(0x7669, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0153
        gbc.setState(0x42e3, 0x1165, 0x89a0, 0x146b, 0xd86b, 0x4cd8, 0x0, 0x1);
        gbc.writeMem(0x42e3, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x1165, gbc.sp());
        EXPECT(0x42e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0154
        gbc.setState(0x1576, 0xbfbd, 0x5360, 0x1dfd, 0x77a0, 0x5b16, 0x1, 0x0);
        gbc.writeMem(0x1576, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xbfbd, gbc.sp());
        EXPECT(0x1577, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0155
        gbc.setState(0x148f, 0x8aab, 0xf320, 0xa929, 0x893e, 0xa659, 0x1, 0x1);
        gbc.writeMem(0x148f, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x8aab, gbc.sp());
        EXPECT(0x1490, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0156
        gbc.setState(0x9fd3, 0xb2da, 0x8070, 0x1fb6, 0x847c, 0x8259, 0x1, 0x1);
        gbc.writeMem(0x9fd3, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb2da, gbc.sp());
        EXPECT(0x9fd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9fd3));
        // 00 0157
        gbc.setState(0x259e, 0x38b2, 0xb660, 0x9754, 0x2944, 0x6ce1, 0x0, 0x1);
        gbc.writeMem(0x259e, { 0x0 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x38b2, gbc.sp());
        EXPECT(0x259f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0158
        gbc.setState(0x5968, 0x2b42, 0xf330, 0xb2cd, 0x65cb, 0x8e72, 0x0, 0x0);
        gbc.writeMem(0x5968, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x2b42, gbc.sp());
        EXPECT(0x5969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0159
        gbc.setState(0xb562, 0x58b4, 0x9b80, 0xe118, 0xaf73, 0x6079, 0x0, 0x0);
        gbc.writeMem(0xb562, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x58b4, gbc.sp());
        EXPECT(0xb563, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb562));
        // 00 015A
        gbc.setState(0x62a3, 0xe091, 0xb090, 0xf360, 0xd090, 0x8ac, 0x1, 0x1);
        gbc.writeMem(0x62a3, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe091, gbc.sp());
        EXPECT(0x62a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 015B
        gbc.setState(0x3d5d, 0xac13, 0xbb10, 0xbc5, 0x5515, 0xcc54, 0x1, 0x0);
        gbc.writeMem(0x3d5d, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xac13, gbc.sp());
        EXPECT(0x3d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 015C
        gbc.setState(0xd43d, 0x1f12, 0x1a50, 0x77ac, 0x20b7, 0x7664, 0x1, 0x0);
        gbc.writeMem(0xd43d, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x1f12, gbc.sp());
        EXPECT(0xd43e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd43d));
        // 00 015D
        gbc.setState(0x558c, 0x561, 0xdb30, 0x4bdf, 0xef8e, 0xd66a, 0x1, 0x1);
        gbc.writeMem(0x558c, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x561, gbc.sp());
        EXPECT(0x558d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 015E
        gbc.setState(0x7239, 0xc1e5, 0xf800, 0x2fb9, 0xe44f, 0x728, 0x0, 0x0);
        gbc.writeMem(0x7239, { 0x0 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc1e5, gbc.sp());
        EXPECT(0x723a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0160
        gbc.setState(0x1c0d, 0xc8ca, 0x4b10, 0xe24b, 0xbd7, 0x94fc, 0x1, 0x1);
        gbc.writeMem(0x1c0d, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc8ca, gbc.sp());
        EXPECT(0x1c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0161
        gbc.setState(0xb366, 0xe96c, 0x860, 0x8268, 0x41f4, 0xe2ed, 0x0, 0x1);
        gbc.writeMem(0xb366, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xe96c, gbc.sp());
        EXPECT(0xb367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb366));
        // 00 0162
        gbc.setState(0x6f00, 0x4233, 0xca10, 0xb9c5, 0x2339, 0x3263, 0x1, 0x1);
        gbc.writeMem(0x6f00, { 0x0 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4233, gbc.sp());
        EXPECT(0x6f01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0163
        gbc.setState(0x711c, 0xec02, 0x2d10, 0x287c, 0x7ed, 0x84f2, 0x1, 0x0);
        gbc.writeMem(0x711c, { 0x0 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xec02, gbc.sp());
        EXPECT(0x711d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0164
        gbc.setState(0x2a87, 0x9502, 0x4210, 0x15d7, 0x529c, 0xe1cf, 0x0, 0x0);
        gbc.writeMem(0x2a87, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x9502, gbc.sp());
        EXPECT(0x2a88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0165
        gbc.setState(0x8560, 0x5d6, 0x8020, 0xb2ec, 0xd4be, 0xfcc3, 0x0, 0x0);
        gbc.writeMem(0x8560, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5d6, gbc.sp());
        EXPECT(0x8561, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8560));
        // 00 0166
        gbc.setState(0x87f2, 0x7f64, 0x3ed0, 0x5933, 0x8fab, 0xd194, 0x1, 0x0);
        gbc.writeMem(0x87f2, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x7f64, gbc.sp());
        EXPECT(0x87f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x87f2));
        // 00 0167
        gbc.setState(0x62fc, 0x177a, 0xa420, 0xeafa, 0x8c15, 0x51c9, 0x1, 0x0);
        gbc.writeMem(0x62fc, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x177a, gbc.sp());
        EXPECT(0x62fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0168
        gbc.setState(0xc2ef, 0x271a, 0x250, 0x1bb, 0xd2a7, 0x55c3, 0x0, 0x1);
        gbc.writeMem(0xc2ef, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x271a, gbc.sp());
        EXPECT(0xc2f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc2ef));
        // 00 0169
        gbc.setState(0x78e9, 0x5d75, 0x15a0, 0x1f32, 0xde00, 0x1ed9, 0x1, 0x0);
        gbc.writeMem(0x78e9, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5d75, gbc.sp());
        EXPECT(0x78ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 016A
        gbc.setState(0x3aa5, 0x1af0, 0x4750, 0x7540, 0x77e4, 0x78c3, 0x1, 0x1);
        gbc.writeMem(0x3aa5, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x1af0, gbc.sp());
        EXPECT(0x3aa6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 016B
        gbc.setState(0xafaf, 0x1263, 0xf5d0, 0x58f8, 0x7d3d, 0xece4, 0x1, 0x1);
        gbc.writeMem(0xafaf, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x1263, gbc.sp());
        EXPECT(0xafb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xafaf));
        // 00 016D
        gbc.setState(0x318e, 0x1cb0, 0x7a30, 0x3508, 0x88bb, 0x9dbb, 0x0, 0x0);
        gbc.writeMem(0x318e, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x1cb0, gbc.sp());
        EXPECT(0x318f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 016E
        gbc.setState(0x51c0, 0xfc98, 0xc4b0, 0xd7eb, 0xbdbb, 0x2cfe, 0x0, 0x0);
        gbc.writeMem(0x51c0, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xfc98, gbc.sp());
        EXPECT(0x51c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 016F
        gbc.setState(0x3388, 0xd77d, 0xdd20, 0xf42f, 0x4cdd, 0x47c9, 0x1, 0x0);
        gbc.writeMem(0x3388, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd77d, gbc.sp());
        EXPECT(0x3389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0170
        gbc.setState(0x972d, 0xf879, 0xe30, 0x7597, 0xbf1b, 0x978b, 0x0, 0x1);
        gbc.writeMem(0x972d, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xf879, gbc.sp());
        EXPECT(0x972e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x972d));
        // 00 0171
        gbc.setState(0x8fd0, 0x4d1e, 0x50f0, 0x981d, 0x1326, 0xa7e7, 0x1, 0x1);
        gbc.writeMem(0x8fd0, { 0x0 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x4d1e, gbc.sp());
        EXPECT(0x8fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8fd0));
        // 00 0172
        gbc.setState(0x86a7, 0x2c57, 0x1f80, 0xc445, 0xa901, 0xcdc5, 0x0, 0x0);
        gbc.writeMem(0x86a7, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2c57, gbc.sp());
        EXPECT(0x86a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x86a7));
        // 00 0173
        gbc.setState(0xca53, 0xc23b, 0x78c0, 0x3a52, 0x712a, 0x7f61, 0x1, 0x0);
        gbc.writeMem(0xca53, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xc23b, gbc.sp());
        EXPECT(0xca54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xca53));
        // 00 0174
        gbc.setState(0xaf0b, 0x9325, 0xf920, 0x621e, 0xe3b7, 0x4866, 0x1, 0x1);
        gbc.writeMem(0xaf0b, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9325, gbc.sp());
        EXPECT(0xaf0c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaf0b));
        // 00 0175
        gbc.setState(0xb962, 0xfa60, 0x2980, 0x6d20, 0x60c1, 0x24e5, 0x0, 0x0);
        gbc.writeMem(0xb962, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xfa60, gbc.sp());
        EXPECT(0xb963, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb962));
        // 00 0176
        gbc.setState(0x5497, 0x558e, 0x45f0, 0x690d, 0xdb9f, 0xe12f, 0x0, 0x0);
        gbc.writeMem(0x5497, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x558e, gbc.sp());
        EXPECT(0x5498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0177
        gbc.setState(0x5361, 0x4582, 0xd270, 0x57f1, 0x1e31, 0xe269, 0x1, 0x0);
        gbc.writeMem(0x5361, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4582, gbc.sp());
        EXPECT(0x5362, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0178
        gbc.setState(0xe2ad, 0x7faa, 0x5420, 0x2a13, 0x7326, 0x5e09, 0x0, 0x0);
        gbc.writeMem(0xe2ad, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7faa, gbc.sp());
        EXPECT(0xe2ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe2ad));
        // 00 017A
        gbc.setState(0xcbc0, 0x2ec7, 0xfcc0, 0xf3f0, 0x2b97, 0xa1d0, 0x1, 0x1);
        gbc.writeMem(0xcbc0, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2ec7, gbc.sp());
        EXPECT(0xcbc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcbc0));
        // 00 017B
        gbc.setState(0x59b6, 0xe19, 0x4200, 0x7c18, 0x115e, 0x19ac, 0x1, 0x1);
        gbc.writeMem(0x59b6, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe19, gbc.sp());
        EXPECT(0x59b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 017C
        gbc.setState(0xb000, 0x7ccf, 0xf710, 0xebef, 0x9f9c, 0x1a0c, 0x0, 0x0);
        gbc.writeMem(0xb000, { 0x0 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7ccf, gbc.sp());
        EXPECT(0xb001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb000));
        // 00 017D
        gbc.setState(0x5955, 0x6761, 0x8db0, 0xceaa, 0xf6b7, 0x8c31, 0x1, 0x0);
        gbc.writeMem(0x5955, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x6761, gbc.sp());
        EXPECT(0x5956, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 017E
        gbc.setState(0x6248, 0x949f, 0xdaa0, 0x29d8, 0xb717, 0xb543, 0x0, 0x0);
        gbc.writeMem(0x6248, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x949f, gbc.sp());
        EXPECT(0x6249, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 017F
        gbc.setState(0x9e03, 0xf83a, 0xa890, 0x5e7, 0xd7c6, 0xa3d9, 0x0, 0x0);
        gbc.writeMem(0x9e03, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xf83a, gbc.sp());
        EXPECT(0x9e04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9e03));
        // 00 0180
        gbc.setState(0x4221, 0x8e0f, 0x2ae0, 0xebe8, 0xb96e, 0x2d0b, 0x1, 0x1);
        gbc.writeMem(0x4221, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8e0f, gbc.sp());
        EXPECT(0x4222, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0181
        gbc.setState(0xc8af, 0xf263, 0x8e90, 0x48e4, 0xfcf1, 0xce7d, 0x0, 0x0);
        gbc.writeMem(0xc8af, { 0x0 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xf263, gbc.sp());
        EXPECT(0xc8b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc8af));
        // 00 0184
        gbc.setState(0xbd4c, 0x1542, 0x8020, 0x4056, 0x1406, 0x8a6, 0x0, 0x0);
        gbc.writeMem(0xbd4c, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x1542, gbc.sp());
        EXPECT(0xbd4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbd4c));
        // 00 0185
        gbc.setState(0x9881, 0x751e, 0x1180, 0x2ae8, 0x16bc, 0xf324, 0x0, 0x1);
        gbc.writeMem(0x9881, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x751e, gbc.sp());
        EXPECT(0x9882, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9881));
        // 00 0186
        gbc.setState(0xc4cd, 0x2b89, 0xb9e0, 0x5d7d, 0xc266, 0xa4c5, 0x1, 0x1);
        gbc.writeMem(0xc4cd, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2b89, gbc.sp());
        EXPECT(0xc4ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc4cd));
        // 00 0187
        gbc.setState(0xe7a1, 0x1541, 0x460, 0x27d3, 0xaac0, 0x55cc, 0x1, 0x1);
        gbc.writeMem(0xe7a1, { 0x0 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x1541, gbc.sp());
        EXPECT(0xe7a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe7a1));
        // 00 0188
        gbc.setState(0x57de, 0xc3fd, 0x8170, 0xebf5, 0x5f33, 0x7a6, 0x1, 0x0);
        gbc.writeMem(0x57de, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc3fd, gbc.sp());
        EXPECT(0x57df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0189
        gbc.setState(0x8f8f, 0x68e4, 0xd7c0, 0xdcc1, 0x7ced, 0xf28d, 0x1, 0x1);
        gbc.writeMem(0x8f8f, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x68e4, gbc.sp());
        EXPECT(0x8f90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8f8f));
        // 00 018A
        gbc.setState(0x24ee, 0x89f3, 0xc8e0, 0x8b49, 0xbf3d, 0x5e7b, 0x1, 0x0);
        gbc.writeMem(0x24ee, { 0x0 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x89f3, gbc.sp());
        EXPECT(0x24ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 018C
        gbc.setState(0x34c1, 0xa4d5, 0xaf30, 0x84a4, 0xea55, 0x7def, 0x0, 0x1);
        gbc.writeMem(0x34c1, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xa4d5, gbc.sp());
        EXPECT(0x34c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 018D
        gbc.setState(0x76d7, 0xd9a3, 0x8af0, 0xc1a9, 0x878d, 0xd4b0, 0x1, 0x1);
        gbc.writeMem(0x76d7, { 0x0 });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xd9a3, gbc.sp());
        EXPECT(0x76d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 018F
        gbc.setState(0x6640, 0xc535, 0x2680, 0xdcd4, 0x9585, 0xa6ca, 0x0, 0x1);
        gbc.writeMem(0x6640, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc535, gbc.sp());
        EXPECT(0x6641, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0190
        gbc.setState(0xb419, 0x8533, 0xae90, 0xb10f, 0xc8fe, 0x801f, 0x0, 0x1);
        gbc.writeMem(0xb419, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x8533, gbc.sp());
        EXPECT(0xb41a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb419));
        // 00 0191
        gbc.setState(0x2233, 0x24f9, 0xe3e0, 0x335a, 0x1010, 0xaf85, 0x1, 0x0);
        gbc.writeMem(0x2233, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x24f9, gbc.sp());
        EXPECT(0x2234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0193
        gbc.setState(0x1b1a, 0x6743, 0x2340, 0x1afd, 0x9f3, 0x50af, 0x1, 0x1);
        gbc.writeMem(0x1b1a, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6743, gbc.sp());
        EXPECT(0x1b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0194
        gbc.setState(0xb602, 0x9d6, 0x6780, 0x789b, 0xcfbf, 0xbaec, 0x1, 0x0);
        gbc.writeMem(0xb602, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9d6, gbc.sp());
        EXPECT(0xb603, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb602));
        // 00 0195
        gbc.setState(0x3495, 0xe7a3, 0x8ba0, 0xcd51, 0x9c01, 0x29dd, 0x0, 0x1);
        gbc.writeMem(0x3495, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe7a3, gbc.sp());
        EXPECT(0x3496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0196
        gbc.setState(0x9490, 0x1b7c, 0xeec0, 0x7be, 0xc617, 0x883d, 0x0, 0x0);
        gbc.writeMem(0x9490, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x1b7c, gbc.sp());
        EXPECT(0x9491, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9490));
        // 00 0197
        gbc.setState(0x6f8e, 0xe299, 0x2750, 0x42ce, 0xe2b2, 0x7043, 0x0, 0x0);
        gbc.writeMem(0x6f8e, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xe299, gbc.sp());
        EXPECT(0x6f8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0198
        gbc.setState(0x7159, 0x33b, 0xf910, 0x926b, 0x373, 0xa14e, 0x0, 0x0);
        gbc.writeMem(0x7159, { 0x0 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x33b, gbc.sp());
        EXPECT(0x715a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0199
        gbc.setState(0xeab0, 0xea03, 0x93b0, 0x3eec, 0x8fad, 0xd764, 0x1, 0x0);
        gbc.writeMem(0xeab0, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xea03, gbc.sp());
        EXPECT(0xeab1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xeab0));
        // 00 019A
        gbc.setState(0x5037, 0xe977, 0xab90, 0xca2c, 0x98f5, 0x23ae, 0x1, 0x0);
        gbc.writeMem(0x5037, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xe977, gbc.sp());
        EXPECT(0x5038, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 019B
        gbc.setState(0x61af, 0xe10e, 0x4410, 0xe0a2, 0x3bec, 0x166, 0x0, 0x1);
        gbc.writeMem(0x61af, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xe10e, gbc.sp());
        EXPECT(0x61b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 019C
        gbc.setState(0xb48f, 0x6f21, 0xf0d0, 0x9710, 0x65fc, 0xc97e, 0x0, 0x0);
        gbc.writeMem(0xb48f, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x6f21, gbc.sp());
        EXPECT(0xb490, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb48f));
        // 00 019D
        gbc.setState(0x2ca, 0xc7be, 0x7a10, 0x71ab, 0xcac3, 0x412, 0x0, 0x1);
        gbc.writeMem(0x2ca, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xc7be, gbc.sp());
        EXPECT(0x2cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 019E
        gbc.setState(0xc121, 0x325d, 0xfe70, 0xf934, 0x8f9f, 0x26c2, 0x1, 0x1);
        gbc.writeMem(0xc121, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x325d, gbc.sp());
        EXPECT(0xc122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc121));
        // 00 019F
        gbc.setState(0x2267, 0xf19c, 0xea80, 0x4981, 0xcbde, 0x6350, 0x0, 0x0);
        gbc.writeMem(0x2267, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xf19c, gbc.sp());
        EXPECT(0x2268, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01A0
        gbc.setState(0x4daa, 0xd804, 0x5920, 0xa954, 0x4441, 0x1fee, 0x1, 0x0);
        gbc.writeMem(0x4daa, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xd804, gbc.sp());
        EXPECT(0x4dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01A1
        gbc.setState(0x93dc, 0x994a, 0x260, 0xcde3, 0x9144, 0x70ce, 0x0, 0x1);
        gbc.writeMem(0x93dc, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x994a, gbc.sp());
        EXPECT(0x93dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x93dc));
        // 00 01A2
        gbc.setState(0x7181, 0xf245, 0x8b00, 0x6a92, 0xf07c, 0x1b0, 0x0, 0x1);
        gbc.writeMem(0x7181, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xf245, gbc.sp());
        EXPECT(0x7182, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01A3
        gbc.setState(0x76a, 0xb947, 0xfae0, 0xcfa3, 0x7293, 0x2cc0, 0x1, 0x0);
        gbc.writeMem(0x76a, { 0x0 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb947, gbc.sp());
        EXPECT(0x76b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01A4
        gbc.setState(0x282a, 0x6b20, 0xfd10, 0x302f, 0x2e01, 0x7773, 0x0, 0x0);
        gbc.writeMem(0x282a, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x6b20, gbc.sp());
        EXPECT(0x282b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01A5
        gbc.setState(0x7ddb, 0xec76, 0xa580, 0x42ea, 0x5901, 0xa108, 0x1, 0x1);
        gbc.writeMem(0x7ddb, { 0x0 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xec76, gbc.sp());
        EXPECT(0x7ddc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01A6
        gbc.setState(0x7085, 0x6d37, 0x4a40, 0x4347, 0xfc61, 0xa285, 0x0, 0x1);
        gbc.writeMem(0x7085, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x6d37, gbc.sp());
        EXPECT(0x7086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01A7
        gbc.setState(0x3c83, 0x5524, 0xaf50, 0x513b, 0xa9d9, 0xb328, 0x1, 0x1);
        gbc.writeMem(0x3c83, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5524, gbc.sp());
        EXPECT(0x3c84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01A8
        gbc.setState(0x8ca9, 0x4a95, 0x2c60, 0x5514, 0x9b56, 0x159b, 0x0, 0x1);
        gbc.writeMem(0x8ca9, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x4a95, gbc.sp());
        EXPECT(0x8caa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8ca9));
        // 00 01A9
        gbc.setState(0x6e18, 0x1356, 0x1590, 0xe35c, 0x5e8c, 0xecf0, 0x1, 0x0);
        gbc.writeMem(0x6e18, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1356, gbc.sp());
        EXPECT(0x6e19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01AA
        gbc.setState(0x1ad4, 0x3d58, 0xb7f0, 0xe84e, 0x57f8, 0x6615, 0x0, 0x0);
        gbc.writeMem(0x1ad4, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x3d58, gbc.sp());
        EXPECT(0x1ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01AB
        gbc.setState(0x1f29, 0x8d0, 0xa070, 0x65f6, 0x7a8b, 0xbbfd, 0x1, 0x0);
        gbc.writeMem(0x1f29, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8d0, gbc.sp());
        EXPECT(0x1f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01AC
        gbc.setState(0xbbcb, 0x8191, 0xaae0, 0x3201, 0x4966, 0x3693, 0x1, 0x0);
        gbc.writeMem(0xbbcb, { 0x0 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8191, gbc.sp());
        EXPECT(0xbbcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbbcb));
        // 00 01AD
        gbc.setState(0x18a, 0x2d5e, 0xe8c0, 0x925a, 0x51f4, 0x93f5, 0x0, 0x0);
        gbc.writeMem(0x18a, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2d5e, gbc.sp());
        EXPECT(0x18b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01AE
        gbc.setState(0x986f, 0x4d07, 0x3290, 0x9931, 0xf42e, 0xbbee, 0x0, 0x1);
        gbc.writeMem(0x986f, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4d07, gbc.sp());
        EXPECT(0x9870, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x986f));
        // 00 01AF
        gbc.setState(0xcd86, 0xc40c, 0x2a30, 0xea2b, 0xd1a9, 0xaff7, 0x0, 0x0);
        gbc.writeMem(0xcd86, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xc40c, gbc.sp());
        EXPECT(0xcd87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcd86));
        // 00 01B0
        gbc.setState(0xa8ba, 0xeaa3, 0x43c0, 0x67a6, 0x424c, 0x267b, 0x1, 0x0);
        gbc.writeMem(0xa8ba, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xeaa3, gbc.sp());
        EXPECT(0xa8bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa8ba));
        // 00 01B1
        gbc.setState(0xb809, 0xc824, 0xe410, 0xf901, 0x1fef, 0xbf97, 0x1, 0x0);
        gbc.writeMem(0xb809, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xc824, gbc.sp());
        EXPECT(0xb80a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb809));
        // 00 01B2
        gbc.setState(0x6706, 0x2fe, 0xcdf0, 0xac85, 0x9ca2, 0x6d45, 0x0, 0x1);
        gbc.writeMem(0x6706, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x2fe, gbc.sp());
        EXPECT(0x6707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01B3
        gbc.setState(0x6ef, 0x586b, 0xcf0, 0x85b4, 0x13d7, 0x45d9, 0x0, 0x0);
        gbc.writeMem(0x6ef, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x586b, gbc.sp());
        EXPECT(0x6f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01B4
        gbc.setState(0xb47c, 0x5fc3, 0xece0, 0x5c76, 0x4908, 0x506e, 0x1, 0x0);
        gbc.writeMem(0xb47c, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5fc3, gbc.sp());
        EXPECT(0xb47d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb47c));
        // 00 01B5
        gbc.setState(0x660a, 0xb0b8, 0x11a0, 0x53e7, 0xe6ac, 0x6349, 0x0, 0x0);
        gbc.writeMem(0x660a, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xb0b8, gbc.sp());
        EXPECT(0x660b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01B6
        gbc.setState(0x2e9a, 0x953a, 0x3950, 0x8c8e, 0xbcbf, 0x24d8, 0x1, 0x0);
        gbc.writeMem(0x2e9a, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x953a, gbc.sp());
        EXPECT(0x2e9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01B7
        gbc.setState(0x6619, 0xb0e7, 0x5850, 0x406c, 0x5916, 0x802d, 0x1, 0x0);
        gbc.writeMem(0x6619, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb0e7, gbc.sp());
        EXPECT(0x661a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01B9
        gbc.setState(0xb925, 0xe227, 0x99e0, 0xe969, 0xa8af, 0x3465, 0x0, 0x1);
        gbc.writeMem(0xb925, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xe227, gbc.sp());
        EXPECT(0xb926, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb925));
        // 00 01BA
        gbc.setState(0xd692, 0xeb1e, 0x44b0, 0x850d, 0xe79, 0xfe36, 0x0, 0x1);
        gbc.writeMem(0xd692, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xeb1e, gbc.sp());
        EXPECT(0xd693, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd692));
        // 00 01BB
        gbc.setState(0x5d5, 0x7d5d, 0xbf20, 0xef5a, 0xb913, 0x1cdd, 0x1, 0x1);
        gbc.writeMem(0x5d5, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7d5d, gbc.sp());
        EXPECT(0x5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01BC
        gbc.setState(0xd238, 0xb6cf, 0xaf90, 0x260c, 0xa842, 0xd0dd, 0x0, 0x0);
        gbc.writeMem(0xd238, { 0x0 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xb6cf, gbc.sp());
        EXPECT(0xd239, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd238));
        // 00 01BD
        gbc.setState(0x590f, 0x2b04, 0xa1a0, 0x8fbc, 0x96d9, 0xde81, 0x0, 0x1);
        gbc.writeMem(0x590f, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x2b04, gbc.sp());
        EXPECT(0x5910, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01BE
        gbc.setState(0xcead, 0x9c03, 0xea70, 0xdd24, 0x3663, 0x8adf, 0x1, 0x1);
        gbc.writeMem(0xcead, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x9c03, gbc.sp());
        EXPECT(0xceae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcead));
        // 00 01BF
        gbc.setState(0x7fa2, 0x667d, 0x24c0, 0xdfb7, 0xe3a7, 0x8c36, 0x1, 0x1);
        gbc.writeMem(0x7fa2, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x667d, gbc.sp());
        EXPECT(0x7fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01C0
        gbc.setState(0xd540, 0x9345, 0xcce0, 0xe5b8, 0x7ddb, 0xfc66, 0x1, 0x0);
        gbc.writeMem(0xd540, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x9345, gbc.sp());
        EXPECT(0xd541, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd540));
        // 00 01C1
        gbc.setState(0x6aee, 0xf052, 0xeb0, 0x4ac6, 0xceec, 0x3c23, 0x1, 0x0);
        gbc.writeMem(0x6aee, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xf052, gbc.sp());
        EXPECT(0x6aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01C2
        gbc.setState(0x2c9, 0x7624, 0x51c0, 0x780b, 0x1611, 0x8d70, 0x0, 0x0);
        gbc.writeMem(0x2c9, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7624, gbc.sp());
        EXPECT(0x2ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01C3
        gbc.setState(0xe6c1, 0x27aa, 0x1c40, 0x15f, 0x47f4, 0xa04f, 0x0, 0x1);
        gbc.writeMem(0xe6c1, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x27aa, gbc.sp());
        EXPECT(0xe6c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe6c1));
        // 00 01C4
        gbc.setState(0xb784, 0xd9d4, 0x3820, 0x1efe, 0x2427, 0xcaf3, 0x1, 0x0);
        gbc.writeMem(0xb784, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xd9d4, gbc.sp());
        EXPECT(0xb785, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb784));
        // 00 01C5
        gbc.setState(0xb8d5, 0x94f7, 0x8d0, 0xcbe6, 0x6e61, 0xd2a5, 0x0, 0x1);
        gbc.writeMem(0xb8d5, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x94f7, gbc.sp());
        EXPECT(0xb8d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb8d5));
        // 00 01C7
        gbc.setState(0x265a, 0x7a0, 0xdad0, 0xc9ad, 0xb441, 0x5dce, 0x0, 0x1);
        gbc.writeMem(0x265a, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7a0, gbc.sp());
        EXPECT(0x265b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01CA
        gbc.setState(0x98a, 0xc60f, 0xb560, 0x4b57, 0xd72e, 0x936e, 0x1, 0x1);
        gbc.writeMem(0x98a, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc60f, gbc.sp());
        EXPECT(0x98b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01CB
        gbc.setState(0x2a50, 0xc23d, 0x8d0, 0x1fc, 0xf147, 0xddfe, 0x1, 0x1);
        gbc.writeMem(0x2a50, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xc23d, gbc.sp());
        EXPECT(0x2a51, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01CC
        gbc.setState(0xaeff, 0xdf0c, 0x3ce0, 0x3953, 0xe2dc, 0x7248, 0x1, 0x0);
        gbc.writeMem(0xaeff, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xdf0c, gbc.sp());
        EXPECT(0xaf00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaeff));
        // 00 01CD
        gbc.setState(0x70d8, 0x98aa, 0x66c0, 0xb454, 0x6c01, 0xac9c, 0x1, 0x0);
        gbc.writeMem(0x70d8, { 0x0 });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x98aa, gbc.sp());
        EXPECT(0x70d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01CE
        gbc.setState(0x43b4, 0xefe3, 0x850, 0xf033, 0x28a0, 0x423c, 0x1, 0x1);
        gbc.writeMem(0x43b4, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xefe3, gbc.sp());
        EXPECT(0x43b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01CF
        gbc.setState(0xedfd, 0x5570, 0xc650, 0x5b98, 0x18c, 0xc48c, 0x1, 0x1);
        gbc.writeMem(0xedfd, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5570, gbc.sp());
        EXPECT(0xedfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xedfd));
        // 00 01D0
        gbc.setState(0xb9f1, 0xe121, 0xab90, 0x49a2, 0x833f, 0x1573, 0x0, 0x1);
        gbc.writeMem(0xb9f1, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe121, gbc.sp());
        EXPECT(0xb9f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb9f1));
        // 00 01D1
        gbc.setState(0x5663, 0xfe0f, 0x390, 0xbf1f, 0x9022, 0xfc7b, 0x0, 0x1);
        gbc.writeMem(0x5663, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xfe0f, gbc.sp());
        EXPECT(0x5664, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01D2
        gbc.setState(0x707c, 0xf997, 0x26c0, 0xdbb7, 0xa805, 0x9ad1, 0x0, 0x1);
        gbc.writeMem(0x707c, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf997, gbc.sp());
        EXPECT(0x707d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01D3
        gbc.setState(0xaa25, 0xcb30, 0xd9b0, 0x2305, 0x30ae, 0xb099, 0x0, 0x1);
        gbc.writeMem(0xaa25, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcb30, gbc.sp());
        EXPECT(0xaa26, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaa25));
        // 00 01D4
        gbc.setState(0x1408, 0xeee6, 0x54b0, 0x772c, 0xba6c, 0x1dd2, 0x1, 0x1);
        gbc.writeMem(0x1408, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xeee6, gbc.sp());
        EXPECT(0x1409, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01D5
        gbc.setState(0x3093, 0x37ed, 0x90c0, 0x1256, 0xcca9, 0xb2ab, 0x1, 0x0);
        gbc.writeMem(0x3093, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x37ed, gbc.sp());
        EXPECT(0x3094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01D6
        gbc.setState(0x6e8c, 0x4916, 0xdc0, 0xbf90, 0x9868, 0xb89c, 0x0, 0x0);
        gbc.writeMem(0x6e8c, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x4916, gbc.sp());
        EXPECT(0x6e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01D7
        gbc.setState(0x1ee, 0x6ebb, 0x5be0, 0xebb8, 0x12ab, 0x2663, 0x0, 0x0);
        gbc.writeMem(0x1ee, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x6ebb, gbc.sp());
        EXPECT(0x1ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01D8
        gbc.setState(0xcf3d, 0xefe2, 0x44b0, 0x4e3, 0x4332, 0x1cad, 0x1, 0x0);
        gbc.writeMem(0xcf3d, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xefe2, gbc.sp());
        EXPECT(0xcf3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcf3d));
        // 00 01D9
        gbc.setState(0xc46f, 0x116b, 0x75c0, 0x8e11, 0xdd3d, 0xcfd1, 0x1, 0x0);
        gbc.writeMem(0xc46f, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x116b, gbc.sp());
        EXPECT(0xc470, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc46f));
        // 00 01DA
        gbc.setState(0xe8c7, 0x582b, 0xa8f0, 0xdb25, 0x21af, 0x2d43, 0x1, 0x0);
        gbc.writeMem(0xe8c7, { 0x0 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x582b, gbc.sp());
        EXPECT(0xe8c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe8c7));
        // 00 01DB
        gbc.setState(0x9734, 0x3d1e, 0xe860, 0x6c7b, 0x3d40, 0x4774, 0x1, 0x1);
        gbc.writeMem(0x9734, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x3d1e, gbc.sp());
        EXPECT(0x9735, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9734));
        // 00 01DC
        gbc.setState(0x9c3f, 0x9587, 0x88b0, 0xb54c, 0x5f5, 0xfa8b, 0x0, 0x1);
        gbc.writeMem(0x9c3f, { 0x0 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9587, gbc.sp());
        EXPECT(0x9c40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9c3f));
        // 00 01DD
        gbc.setState(0x11d, 0xf5b3, 0xe30, 0xd9e5, 0x6848, 0xd1a5, 0x0, 0x0);
        gbc.writeMem(0x11d, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xf5b3, gbc.sp());
        EXPECT(0x11e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01DE
        gbc.setState(0x3e7c, 0x47ab, 0xa990, 0x16f5, 0xa570, 0x4a47, 0x0, 0x1);
        gbc.writeMem(0x3e7c, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x47ab, gbc.sp());
        EXPECT(0x3e7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01DF
        gbc.setState(0x48d, 0x6740, 0xa50, 0xcbbf, 0x68d9, 0xa648, 0x1, 0x1);
        gbc.writeMem(0x48d, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x6740, gbc.sp());
        EXPECT(0x48e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01E0
        gbc.setState(0x529a, 0x3b1d, 0x3230, 0x3a8e, 0x7cb1, 0xff38, 0x0, 0x1);
        gbc.writeMem(0x529a, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3b1d, gbc.sp());
        EXPECT(0x529b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01E1
        gbc.setState(0x767a, 0x159a, 0xd7a0, 0x5bc, 0xa226, 0x8923, 0x0, 0x0);
        gbc.writeMem(0x767a, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x159a, gbc.sp());
        EXPECT(0x767b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01E2
        gbc.setState(0xb12, 0x293b, 0x6770, 0x2e67, 0xa303, 0xdc78, 0x0, 0x0);
        gbc.writeMem(0xb12, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x293b, gbc.sp());
        EXPECT(0xb13, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01E3
        gbc.setState(0xa8ac, 0x8543, 0x4f20, 0xf748, 0xae8e, 0xf751, 0x0, 0x0);
        gbc.writeMem(0xa8ac, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8543, gbc.sp());
        EXPECT(0xa8ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa8ac));
        // 00 01E5
        gbc.setState(0xea69, 0xbe5c, 0x2760, 0x1418, 0xd09a, 0x1a14, 0x1, 0x0);
        gbc.writeMem(0xea69, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbe5c, gbc.sp());
        EXPECT(0xea6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xea69));
        // 00 01E6
        gbc.setState(0x874e, 0x4673, 0x42b0, 0x8fbc, 0x736b, 0x6a93, 0x1, 0x0);
        gbc.writeMem(0x874e, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4673, gbc.sp());
        EXPECT(0x874f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x874e));
        // 00 01E7
        gbc.setState(0x8b9a, 0x4ec2, 0x90e0, 0xfaec, 0xbef2, 0x502d, 0x1, 0x1);
        gbc.writeMem(0x8b9a, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4ec2, gbc.sp());
        EXPECT(0x8b9b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8b9a));
        // 00 01E9
        gbc.setState(0xd03f, 0xb8f3, 0x1de0, 0x2597, 0x4ec4, 0xae74, 0x0, 0x0);
        gbc.writeMem(0xd03f, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xb8f3, gbc.sp());
        EXPECT(0xd040, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd03f));
        // 00 01EA
        gbc.setState(0x1a66, 0x4520, 0xc780, 0xc74f, 0x9ead, 0xbc75, 0x1, 0x1);
        gbc.writeMem(0x1a66, { 0x0 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4520, gbc.sp());
        EXPECT(0x1a67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01EB
        gbc.setState(0xdd6, 0x60dd, 0xd470, 0x8751, 0xcaa8, 0xae49, 0x1, 0x0);
        gbc.writeMem(0xdd6, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x60dd, gbc.sp());
        EXPECT(0xdd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01EC
        gbc.setState(0x192c, 0x55e6, 0xa770, 0x3a6f, 0x4653, 0x98fc, 0x1, 0x0);
        gbc.writeMem(0x192c, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x55e6, gbc.sp());
        EXPECT(0x192d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01ED
        gbc.setState(0xe995, 0x10ee, 0x6770, 0x3266, 0x37a, 0xb2fa, 0x1, 0x0);
        gbc.writeMem(0xe995, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x10ee, gbc.sp());
        EXPECT(0xe996, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe995));
        // 00 01F0
        gbc.setState(0xd556, 0x7372, 0xc060, 0xda3f, 0x5220, 0xb930, 0x1, 0x0);
        gbc.writeMem(0xd556, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7372, gbc.sp());
        EXPECT(0xd557, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd556));
        // 00 01F1
        gbc.setState(0x3155, 0xbc7a, 0xada0, 0x279e, 0xb965, 0x2005, 0x1, 0x0);
        gbc.writeMem(0x3155, { 0x0 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbc7a, gbc.sp());
        EXPECT(0x3156, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01F2
        gbc.setState(0x2b09, 0xdc9d, 0x2e30, 0xf9fa, 0xa91, 0x4575, 0x0, 0x1);
        gbc.writeMem(0x2b09, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xdc9d, gbc.sp());
        EXPECT(0x2b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01F3
        gbc.setState(0xa861, 0x93fe, 0xc5c0, 0x40cf, 0xe13c, 0x35b2, 0x0, 0x1);
        gbc.writeMem(0xa861, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x93fe, gbc.sp());
        EXPECT(0xa862, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa861));
        // 00 01F4
        gbc.setState(0x17f0, 0x401e, 0x6da0, 0xe317, 0xca27, 0xbc1d, 0x1, 0x0);
        gbc.writeMem(0x17f0, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x401e, gbc.sp());
        EXPECT(0x17f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01F5
        gbc.setState(0xac5b, 0xaf39, 0xfb0, 0xa1c8, 0x16b3, 0x9751, 0x0, 0x1);
        gbc.writeMem(0xac5b, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xaf39, gbc.sp());
        EXPECT(0xac5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xac5b));
        // 00 01F6
        gbc.setState(0xda41, 0xb873, 0x9880, 0xb6d9, 0x3045, 0x582f, 0x1, 0x1);
        gbc.writeMem(0xda41, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xb873, gbc.sp());
        EXPECT(0xda42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xda41));
        // 00 01F7
        gbc.setState(0x568d, 0x8a1b, 0x1290, 0x7ace, 0x36b9, 0xa281, 0x0, 0x0);
        gbc.writeMem(0x568d, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8a1b, gbc.sp());
        EXPECT(0x568e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01F8
        gbc.setState(0x1a8d, 0xb415, 0x2c0, 0x3cd6, 0xe45f, 0xe105, 0x1, 0x1);
        gbc.writeMem(0x1a8d, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb415, gbc.sp());
        EXPECT(0x1a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01F9
        gbc.setState(0xdb39, 0xb7f3, 0x8750, 0x2bf8, 0x8e04, 0x2d, 0x0, 0x1);
        gbc.writeMem(0xdb39, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb7f3, gbc.sp());
        EXPECT(0xdb3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdb39));
        // 00 01FA
        gbc.setState(0x673c, 0x774, 0xe400, 0x70a4, 0xe2f8, 0xcee5, 0x0, 0x1);
        gbc.writeMem(0x673c, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x774, gbc.sp());
        EXPECT(0x673d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01FB
        gbc.setState(0x6124, 0xb17, 0x63f0, 0x2581, 0xfd0c, 0x41c8, 0x0, 0x0);
        gbc.writeMem(0x6124, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb17, gbc.sp());
        EXPECT(0x6125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 01FC
        gbc.setState(0xe6f6, 0x5d8c, 0x720, 0x6e21, 0x2e39, 0x8a29, 0x0, 0x0);
        gbc.writeMem(0xe6f6, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x5d8c, gbc.sp());
        EXPECT(0xe6f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe6f6));
        // 00 01FD
        gbc.setState(0xcb91, 0x71fa, 0x61c0, 0x5980, 0x606f, 0xb4e7, 0x0, 0x1);
        gbc.writeMem(0xcb91, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x71fa, gbc.sp());
        EXPECT(0xcb92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcb91));
        // 00 01FE
        gbc.setState(0xfd4, 0x5c8b, 0x37a0, 0x6192, 0xb552, 0xdfd, 0x0, 0x1);
        gbc.writeMem(0xfd4, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5c8b, gbc.sp());
        EXPECT(0xfd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 01FF
        gbc.setState(0x2584, 0x21a7, 0xbe0, 0x5183, 0x9384, 0xa0f4, 0x1, 0x1);
        gbc.writeMem(0x2584, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x21a7, gbc.sp());
        EXPECT(0x2585, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0200
        gbc.setState(0x305f, 0xe476, 0xc2b0, 0x80f1, 0xf3a0, 0xf5d3, 0x0, 0x1);
        gbc.writeMem(0x305f, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xe476, gbc.sp());
        EXPECT(0x3060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0201
        gbc.setState(0xec88, 0x8631, 0x75e0, 0xe0f7, 0xab65, 0xd4c9, 0x0, 0x1);
        gbc.writeMem(0xec88, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x8631, gbc.sp());
        EXPECT(0xec89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xec88));
        // 00 0202
        gbc.setState(0x648a, 0xb9e6, 0xdef0, 0xb895, 0x829, 0xc65, 0x1, 0x0);
        gbc.writeMem(0x648a, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0xb9e6, gbc.sp());
        EXPECT(0x648b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0203
        gbc.setState(0x5514, 0x5836, 0xc4c0, 0xc19c, 0x4494, 0xa954, 0x0, 0x0);
        gbc.writeMem(0x5514, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x5836, gbc.sp());
        EXPECT(0x5515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0204
        gbc.setState(0x29d8, 0x5dbf, 0xfc70, 0x321b, 0xffb, 0x75c3, 0x0, 0x1);
        gbc.writeMem(0x29d8, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x5dbf, gbc.sp());
        EXPECT(0x29d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0205
        gbc.setState(0xb1f5, 0xa168, 0x5c00, 0xc748, 0x42ae, 0xe73e, 0x1, 0x1);
        gbc.writeMem(0xb1f5, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xa168, gbc.sp());
        EXPECT(0xb1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb1f5));
        // 00 0206
        gbc.setState(0xad0f, 0x2eaa, 0x8df0, 0xf497, 0x91d5, 0x830b, 0x0, 0x0);
        gbc.writeMem(0xad0f, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2eaa, gbc.sp());
        EXPECT(0xad10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xad0f));
        // 00 0207
        gbc.setState(0x41bc, 0x22b3, 0x9df0, 0x3d7, 0x282e, 0xbc8c, 0x0, 0x0);
        gbc.writeMem(0x41bc, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x22b3, gbc.sp());
        EXPECT(0x41bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0208
        gbc.setState(0x9b44, 0xcf31, 0xef50, 0xc44c, 0x48fc, 0xd9c, 0x1, 0x1);
        gbc.writeMem(0x9b44, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xcf31, gbc.sp());
        EXPECT(0x9b45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9b44));
        // 00 0209
        gbc.setState(0x50cc, 0x8299, 0xb940, 0x4e60, 0x4775, 0x8ec0, 0x1, 0x1);
        gbc.writeMem(0x50cc, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8299, gbc.sp());
        EXPECT(0x50cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 020A
        gbc.setState(0xb63b, 0x3053, 0x4fa0, 0x66e9, 0x7000, 0xbecb, 0x0, 0x0);
        gbc.writeMem(0xb63b, { 0x0 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x3053, gbc.sp());
        EXPECT(0xb63c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb63b));
        // 00 020B
        gbc.setState(0xed3d, 0x5f08, 0x4ac0, 0x86e9, 0x1070, 0x5f48, 0x0, 0x1);
        gbc.writeMem(0xed3d, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x5f08, gbc.sp());
        EXPECT(0xed3e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xed3d));
        // 00 020C
        gbc.setState(0xd0df, 0x2ec9, 0xa4e0, 0x7e27, 0x5fa1, 0xa4aa, 0x1, 0x0);
        gbc.writeMem(0xd0df, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2ec9, gbc.sp());
        EXPECT(0xd0e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd0df));
        // 00 020D
        gbc.setState(0xbbd1, 0x6fed, 0xcc10, 0xac86, 0x2244, 0x4c9, 0x0, 0x1);
        gbc.writeMem(0xbbd1, { 0x0 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x6fed, gbc.sp());
        EXPECT(0xbbd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbbd1));
        // 00 020F
        gbc.setState(0x4e3f, 0x9bb, 0x4590, 0x4ecb, 0x72a7, 0xbaaf, 0x0, 0x0);
        gbc.writeMem(0x4e3f, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x9bb, gbc.sp());
        EXPECT(0x4e40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0210
        gbc.setState(0x9096, 0xb506, 0xd500, 0x94b, 0x1a79, 0x14de, 0x0, 0x1);
        gbc.writeMem(0x9096, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xb506, gbc.sp());
        EXPECT(0x9097, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9096));
        // 00 0211
        gbc.setState(0xaadf, 0xe236, 0xa010, 0xaffd, 0x829a, 0xf0c, 0x0, 0x0);
        gbc.writeMem(0xaadf, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe236, gbc.sp());
        EXPECT(0xaae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaadf));
        // 00 0212
        gbc.setState(0x7771, 0x3b4d, 0xac50, 0x63df, 0xdfa5, 0x65b1, 0x0, 0x0);
        gbc.writeMem(0x7771, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x3b4d, gbc.sp());
        EXPECT(0x7772, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0213
        gbc.setState(0x4bc7, 0x8904, 0xbe30, 0xad21, 0xdf58, 0xdb66, 0x0, 0x1);
        gbc.writeMem(0x4bc7, { 0x0 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x8904, gbc.sp());
        EXPECT(0x4bc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0214
        gbc.setState(0x1d6, 0x5ad6, 0x9220, 0x2bea, 0x7df4, 0x5ff9, 0x0, 0x0);
        gbc.writeMem(0x1d6, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5ad6, gbc.sp());
        EXPECT(0x1d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0215
        gbc.setState(0x8faa, 0x80a3, 0x2b0, 0x1d28, 0x5902, 0x3f68, 0x1, 0x0);
        gbc.writeMem(0x8faa, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x80a3, gbc.sp());
        EXPECT(0x8fab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8faa));
        // 00 0216
        gbc.setState(0xb678, 0x8d65, 0x8270, 0xf46d, 0xb27c, 0x24be, 0x1, 0x0);
        gbc.writeMem(0xb678, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x8d65, gbc.sp());
        EXPECT(0xb679, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb678));
        // 00 0217
        gbc.setState(0xeba8, 0x4d4b, 0x6a00, 0xea0f, 0x8011, 0xcba0, 0x0, 0x1);
        gbc.writeMem(0xeba8, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x4d4b, gbc.sp());
        EXPECT(0xeba9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xeba8));
        // 00 0218
        gbc.setState(0x90bd, 0x2ef2, 0x820, 0x93cc, 0x676b, 0x6339, 0x1, 0x1);
        gbc.writeMem(0x90bd, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x2ef2, gbc.sp());
        EXPECT(0x90be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x90bd));
        // 00 0219
        gbc.setState(0x7763, 0x7619, 0x37b0, 0xec1d, 0x87c4, 0x88fa, 0x0, 0x0);
        gbc.writeMem(0x7763, { 0x0 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x7619, gbc.sp());
        EXPECT(0x7764, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 021A
        gbc.setState(0x9ddb, 0x4938, 0xae60, 0xb70c, 0x4357, 0x6b5f, 0x0, 0x0);
        gbc.writeMem(0x9ddb, { 0x0 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x4938, gbc.sp());
        EXPECT(0x9ddc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9ddb));
        // 00 021B
        gbc.setState(0xa913, 0x819a, 0x9460, 0x4b8c, 0xf87c, 0xe8c9, 0x0, 0x1);
        gbc.writeMem(0xa913, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x819a, gbc.sp());
        EXPECT(0xa914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa913));
        // 00 021C
        gbc.setState(0xef30, 0x5e41, 0x2440, 0xb7b2, 0x778d, 0x3292, 0x0, 0x0);
        gbc.writeMem(0xef30, { 0x0 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5e41, gbc.sp());
        EXPECT(0xef31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xef30));
        // 00 021D
        gbc.setState(0x1479, 0x6556, 0x8b50, 0xe63a, 0xf313, 0xda81, 0x1, 0x1);
        gbc.writeMem(0x1479, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x6556, gbc.sp());
        EXPECT(0x147a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 021E
        gbc.setState(0xe1d3, 0x90d, 0x94b0, 0xf45d, 0x4bdb, 0xf93e, 0x0, 0x1);
        gbc.writeMem(0xe1d3, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x90d, gbc.sp());
        EXPECT(0xe1d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe1d3));
        // 00 021F
        gbc.setState(0xdc5, 0x75a1, 0xd2f0, 0xe439, 0x7eb0, 0x8cb2, 0x1, 0x0);
        gbc.writeMem(0xdc5, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x75a1, gbc.sp());
        EXPECT(0xdc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0220
        gbc.setState(0x7000, 0xbf15, 0xa60, 0xa52a, 0x4299, 0xc4a7, 0x0, 0x1);
        gbc.writeMem(0x7000, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xbf15, gbc.sp());
        EXPECT(0x7001, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0221
        gbc.setState(0x6d00, 0x2d4c, 0xab10, 0x2c16, 0xb427, 0x9799, 0x1, 0x0);
        gbc.writeMem(0x6d00, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2d4c, gbc.sp());
        EXPECT(0x6d01, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0223
        gbc.setState(0xe4e3, 0xc5b, 0x2c0, 0x42de, 0x5b, 0xe3a2, 0x1, 0x0);
        gbc.writeMem(0xe4e3, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xc5b, gbc.sp());
        EXPECT(0xe4e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe4e3));
        // 00 0224
        gbc.setState(0xe497, 0x2ad, 0x79f0, 0x1535, 0xd1da, 0x9999, 0x0, 0x0);
        gbc.writeMem(0xe497, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x2ad, gbc.sp());
        EXPECT(0xe498, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe497));
        // 00 0225
        gbc.setState(0x4d79, 0x37a9, 0xab20, 0x6e20, 0x9fbc, 0xaab1, 0x1, 0x1);
        gbc.writeMem(0x4d79, { 0x0 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x37a9, gbc.sp());
        EXPECT(0x4d7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0226
        gbc.setState(0xdcf0, 0x3848, 0x7f0, 0x2e8b, 0xb307, 0x647d, 0x1, 0x1);
        gbc.writeMem(0xdcf0, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x3848, gbc.sp());
        EXPECT(0xdcf1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdcf0));
        // 00 0227
        gbc.setState(0x9da, 0x1b17, 0xe9d0, 0xf871, 0xcf62, 0x1ce9, 0x0, 0x0);
        gbc.writeMem(0x9da, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x1b17, gbc.sp());
        EXPECT(0x9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0228
        gbc.setState(0xdad7, 0xc1b2, 0x64b0, 0x3627, 0x9c7e, 0xb828, 0x0, 0x1);
        gbc.writeMem(0xdad7, { 0x0 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc1b2, gbc.sp());
        EXPECT(0xdad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdad7));
        // 00 0229
        gbc.setState(0x2bed, 0x1092, 0x6860, 0x87e3, 0xfc6, 0x7d48, 0x1, 0x1);
        gbc.writeMem(0x2bed, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1092, gbc.sp());
        EXPECT(0x2bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 022A
        gbc.setState(0x367f, 0xf939, 0x2f90, 0xb1a5, 0xd3d4, 0x37c8, 0x0, 0x0);
        gbc.writeMem(0x367f, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xf939, gbc.sp());
        EXPECT(0x3680, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 022B
        gbc.setState(0x684, 0x4a67, 0xbd0, 0x607a, 0x4064, 0x48b7, 0x0, 0x1);
        gbc.writeMem(0x684, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x4a67, gbc.sp());
        EXPECT(0x685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 022C
        gbc.setState(0xd28d, 0x518, 0x4420, 0x43, 0x6c15, 0xcb6c, 0x0, 0x1);
        gbc.writeMem(0xd28d, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x518, gbc.sp());
        EXPECT(0xd28e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd28d));
        // 00 022D
        gbc.setState(0x1fd1, 0xf3e8, 0x95c0, 0xdd98, 0x7a6f, 0xac0a, 0x0, 0x1);
        gbc.writeMem(0x1fd1, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xf3e8, gbc.sp());
        EXPECT(0x1fd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 022E
        gbc.setState(0xdafd, 0xbad7, 0x1030, 0x5c8a, 0x8812, 0xcef9, 0x1, 0x0);
        gbc.writeMem(0xdafd, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xbad7, gbc.sp());
        EXPECT(0xdafe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdafd));
        // 00 022F
        gbc.setState(0xb7b9, 0x7e93, 0x96b0, 0xfce2, 0xe5aa, 0xdb7f, 0x0, 0x0);
        gbc.writeMem(0xb7b9, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x7e93, gbc.sp());
        EXPECT(0xb7ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb7b9));
        // 00 0230
        gbc.setState(0x2d66, 0x532a, 0x12a0, 0x31e8, 0x12c7, 0xf3bb, 0x0, 0x0);
        gbc.writeMem(0x2d66, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x532a, gbc.sp());
        EXPECT(0x2d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0231
        gbc.setState(0x60ca, 0x10bb, 0xc2b0, 0xcfa3, 0x17a7, 0x972f, 0x1, 0x0);
        gbc.writeMem(0x60ca, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x10bb, gbc.sp());
        EXPECT(0x60cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0232
        gbc.setState(0xe5c7, 0x766e, 0x3990, 0x1eba, 0x2920, 0xcbb4, 0x1, 0x0);
        gbc.writeMem(0xe5c7, { 0x0 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x766e, gbc.sp());
        EXPECT(0xe5c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe5c7));
        // 00 0233
        gbc.setState(0x471b, 0xb7fe, 0x2a70, 0x2f01, 0x9ab4, 0x57bb, 0x1, 0x1);
        gbc.writeMem(0x471b, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xb7fe, gbc.sp());
        EXPECT(0x471c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0234
        gbc.setState(0x8ab8, 0xadf8, 0x340, 0x4d8f, 0x5079, 0x9fa6, 0x1, 0x0);
        gbc.writeMem(0x8ab8, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xadf8, gbc.sp());
        EXPECT(0x8ab9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8ab8));
        // 00 0235
        gbc.setState(0xe9df, 0x7301, 0xbb90, 0x5ad3, 0xadc3, 0x6a70, 0x0, 0x1);
        gbc.writeMem(0xe9df, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x7301, gbc.sp());
        EXPECT(0xe9e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe9df));
        // 00 0236
        gbc.setState(0x1c15, 0x477e, 0x75f0, 0x2a29, 0xbb55, 0xcbb6, 0x1, 0x0);
        gbc.writeMem(0x1c15, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x477e, gbc.sp());
        EXPECT(0x1c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0237
        gbc.setState(0x7ebf, 0xa1f8, 0xeac0, 0xeca3, 0x407f, 0x7b42, 0x0, 0x1);
        gbc.writeMem(0x7ebf, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa1f8, gbc.sp());
        EXPECT(0x7ec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0238
        gbc.setState(0x5012, 0xf629, 0xfe0, 0x99bb, 0x4694, 0xc13b, 0x0, 0x1);
        gbc.writeMem(0x5012, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xf629, gbc.sp());
        EXPECT(0x5013, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0239
        gbc.setState(0x8c7b, 0x5a11, 0xed30, 0xe675, 0xe6f2, 0x13aa, 0x0, 0x1);
        gbc.writeMem(0x8c7b, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5a11, gbc.sp());
        EXPECT(0x8c7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8c7b));
        // 00 023A
        gbc.setState(0x9675, 0xad1a, 0x4bd0, 0x87e6, 0xfe9e, 0x3ef3, 0x1, 0x0);
        gbc.writeMem(0x9675, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xad1a, gbc.sp());
        EXPECT(0x9676, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9675));
        // 00 023B
        gbc.setState(0x77, 0x967, 0xf6c0, 0xc8e2, 0xc6ed, 0xf03f, 0x0, 0x0);
        gbc.writeMem(0x77, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x967, gbc.sp());
        EXPECT(0x78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 023C
        gbc.setState(0x45e3, 0xfa93, 0xc410, 0xec96, 0x4223, 0xd06c, 0x0, 0x0);
        gbc.writeMem(0x45e3, { 0x0 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xfa93, gbc.sp());
        EXPECT(0x45e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 023D
        gbc.setState(0xac74, 0x50ec, 0x8dd0, 0x8760, 0x9836, 0x6d1a, 0x1, 0x0);
        gbc.writeMem(0xac74, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x50ec, gbc.sp());
        EXPECT(0xac75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xac74));
        // 00 023E
        gbc.setState(0x76ad, 0xea14, 0x60b0, 0xa9fc, 0xd836, 0x2e7f, 0x0, 0x1);
        gbc.writeMem(0x76ad, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xea14, gbc.sp());
        EXPECT(0x76ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 023F
        gbc.setState(0xc67f, 0xaabf, 0xfd60, 0x3b4d, 0x6603, 0xc6aa, 0x1, 0x0);
        gbc.writeMem(0xc67f, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xaabf, gbc.sp());
        EXPECT(0xc680, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc67f));
        // 00 0240
        gbc.setState(0x5cc, 0x6626, 0x4870, 0xb5b6, 0x37cb, 0x30ea, 0x0, 0x0);
        gbc.writeMem(0x5cc, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x6626, gbc.sp());
        EXPECT(0x5cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0241
        gbc.setState(0xbd5f, 0xd380, 0x6d70, 0x549d, 0x8da4, 0x2802, 0x0, 0x1);
        gbc.writeMem(0xbd5f, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xd380, gbc.sp());
        EXPECT(0xbd60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbd5f));
        // 00 0242
        gbc.setState(0x8778, 0x5e5a, 0x53b0, 0x22cd, 0x1fc8, 0x7c0c, 0x1, 0x1);
        gbc.writeMem(0x8778, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x5e5a, gbc.sp());
        EXPECT(0x8779, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8778));
        // 00 0243
        gbc.setState(0x5cda, 0x8d23, 0x71f0, 0xa8c5, 0x6a3d, 0xa715, 0x1, 0x0);
        gbc.writeMem(0x5cda, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8d23, gbc.sp());
        EXPECT(0x5cdb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0244
        gbc.setState(0x1bfa, 0xd5e, 0x5570, 0xc877, 0xc239, 0xdf73, 0x0, 0x0);
        gbc.writeMem(0x1bfa, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xd5e, gbc.sp());
        EXPECT(0x1bfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0245
        gbc.setState(0xaa0d, 0xc491, 0x83a0, 0x1571, 0x92b1, 0x86d4, 0x0, 0x0);
        gbc.writeMem(0xaa0d, { 0x0 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc491, gbc.sp());
        EXPECT(0xaa0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaa0d));
        // 00 0246
        gbc.setState(0x56bb, 0x7ad4, 0x4b70, 0xe75a, 0xa6c7, 0xce3f, 0x1, 0x1);
        gbc.writeMem(0x56bb, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7ad4, gbc.sp());
        EXPECT(0x56bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0247
        gbc.setState(0x6fd4, 0xb954, 0x12f0, 0xe84d, 0x9f72, 0xb8c, 0x0, 0x1);
        gbc.writeMem(0x6fd4, { 0x0 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xb954, gbc.sp());
        EXPECT(0x6fd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0248
        gbc.setState(0xa9cd, 0x41e3, 0xdf70, 0x17ad, 0x95a8, 0x3311, 0x0, 0x1);
        gbc.writeMem(0xa9cd, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x41e3, gbc.sp());
        EXPECT(0xa9ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa9cd));
        // 00 0249
        gbc.setState(0xd6d1, 0xa932, 0xb550, 0xa7cd, 0x2e3f, 0xda3d, 0x0, 0x1);
        gbc.writeMem(0xd6d1, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xa932, gbc.sp());
        EXPECT(0xd6d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd6d1));
        // 00 024A
        gbc.setState(0xafba, 0x8df, 0x1b00, 0x5045, 0x6ecf, 0xd8a1, 0x1, 0x1);
        gbc.writeMem(0xafba, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8df, gbc.sp());
        EXPECT(0xafbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xafba));
        // 00 024B
        gbc.setState(0x2d81, 0x348d, 0x3360, 0x9970, 0x5715, 0x3247, 0x0, 0x0);
        gbc.writeMem(0x2d81, { 0x0 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x348d, gbc.sp());
        EXPECT(0x2d82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 024C
        gbc.setState(0x92e4, 0xe50b, 0xf470, 0xf8f4, 0x56ac, 0x1460, 0x0, 0x1);
        gbc.writeMem(0x92e4, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xe50b, gbc.sp());
        EXPECT(0x92e5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x92e4));
        // 00 024D
        gbc.setState(0xeebf, 0xfb22, 0x51c0, 0x72aa, 0x6bc8, 0x54e6, 0x0, 0x1);
        gbc.writeMem(0xeebf, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xfb22, gbc.sp());
        EXPECT(0xeec0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xeebf));
        // 00 024E
        gbc.setState(0x371e, 0x1db6, 0x4ec0, 0x4d19, 0x7159, 0x7c0a, 0x1, 0x1);
        gbc.writeMem(0x371e, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x1db6, gbc.sp());
        EXPECT(0x371f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 024F
        gbc.setState(0x865c, 0x91ed, 0x9ea0, 0x90d0, 0x782d, 0x8c82, 0x0, 0x1);
        gbc.writeMem(0x865c, { 0x0 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x91ed, gbc.sp());
        EXPECT(0x865d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x865c));
        // 00 0250
        gbc.setState(0x1248, 0x450f, 0xb4a0, 0xe8cf, 0xf9bc, 0xabfe, 0x1, 0x0);
        gbc.writeMem(0x1248, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x450f, gbc.sp());
        EXPECT(0x1249, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0251
        gbc.setState(0xc65, 0xcc99, 0x3ec0, 0x87bb, 0x6c71, 0x5c7c, 0x1, 0x1);
        gbc.writeMem(0xc65, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xcc99, gbc.sp());
        EXPECT(0xc66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0252
        gbc.setState(0x421b, 0x96c3, 0x45b0, 0x8a5, 0xf3e6, 0x497c, 0x1, 0x0);
        gbc.writeMem(0x421b, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x96c3, gbc.sp());
        EXPECT(0x421c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0253
        gbc.setState(0x4c77, 0x87ec, 0x920, 0x96b8, 0x34cc, 0x9512, 0x1, 0x1);
        gbc.writeMem(0x4c77, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x87ec, gbc.sp());
        EXPECT(0x4c78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0254
        gbc.setState(0x956e, 0x8e66, 0xa3b0, 0x5f74, 0x9cfd, 0xb0ba, 0x0, 0x0);
        gbc.writeMem(0x956e, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x8e66, gbc.sp());
        EXPECT(0x956f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x956e));
        // 00 0255
        gbc.setState(0x7e9e, 0x8448, 0x1860, 0xc499, 0xdb1b, 0x5d28, 0x0, 0x1);
        gbc.writeMem(0x7e9e, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8448, gbc.sp());
        EXPECT(0x7e9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0256
        gbc.setState(0xe4a6, 0xb86e, 0x4d70, 0x9fcd, 0xc202, 0xa7b3, 0x0, 0x0);
        gbc.writeMem(0xe4a6, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xb86e, gbc.sp());
        EXPECT(0xe4a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe4a6));
        // 00 0257
        gbc.setState(0x7860, 0xee7a, 0x18d0, 0xfa27, 0x4fb0, 0x597a, 0x1, 0x0);
        gbc.writeMem(0x7860, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xee7a, gbc.sp());
        EXPECT(0x7861, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0258
        gbc.setState(0x86b0, 0x203b, 0x8030, 0x69fb, 0x670, 0xe66, 0x0, 0x1);
        gbc.writeMem(0x86b0, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x203b, gbc.sp());
        EXPECT(0x86b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x86b0));
        // 00 0259
        gbc.setState(0x661c, 0xc028, 0xcb90, 0x4946, 0xbae8, 0x99d, 0x1, 0x0);
        gbc.writeMem(0x661c, { 0x0 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xc028, gbc.sp());
        EXPECT(0x661d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 025A
        gbc.setState(0xddd3, 0xf3ca, 0x7810, 0x9676, 0xe509, 0x33f4, 0x1, 0x1);
        gbc.writeMem(0xddd3, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf3ca, gbc.sp());
        EXPECT(0xddd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xddd3));
        // 00 025B
        gbc.setState(0xab1e, 0xa068, 0x3860, 0x871, 0x3a4c, 0x7edb, 0x0, 0x0);
        gbc.writeMem(0xab1e, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xa068, gbc.sp());
        EXPECT(0xab1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xab1e));
        // 00 025C
        gbc.setState(0x1051, 0x2d47, 0x1b20, 0x7aca, 0xea16, 0x72f4, 0x1, 0x1);
        gbc.writeMem(0x1051, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x2d47, gbc.sp());
        EXPECT(0x1052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 025D
        gbc.setState(0x2a2c, 0x8100, 0xd7f0, 0x53a2, 0xa63, 0x50a9, 0x0, 0x1);
        gbc.writeMem(0x2a2c, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x8100, gbc.sp());
        EXPECT(0x2a2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 025E
        gbc.setState(0xdfaa, 0xc7d9, 0x5c80, 0x6dcd, 0x3db7, 0x68ca, 0x0, 0x0);
        gbc.writeMem(0xdfaa, { 0x0 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc7d9, gbc.sp());
        EXPECT(0xdfab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdfaa));
        // 00 025F
        gbc.setState(0x1b9d, 0x1dc0, 0xe910, 0xd8f3, 0x2ff3, 0xb4f0, 0x0, 0x0);
        gbc.writeMem(0x1b9d, { 0x0 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x1dc0, gbc.sp());
        EXPECT(0x1b9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0261
        gbc.setState(0x211f, 0x3e69, 0x92d0, 0xc27a, 0xac21, 0xc38e, 0x0, 0x1);
        gbc.writeMem(0x211f, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3e69, gbc.sp());
        EXPECT(0x2120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0262
        gbc.setState(0xcc4, 0x360c, 0x1020, 0x1879, 0x69df, 0x3aa, 0x0, 0x1);
        gbc.writeMem(0xcc4, { 0x0 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x360c, gbc.sp());
        EXPECT(0xcc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0263
        gbc.setState(0xbdbb, 0x6e76, 0x9350, 0x7f10, 0x3447, 0xbb22, 0x0, 0x0);
        gbc.writeMem(0xbdbb, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x6e76, gbc.sp());
        EXPECT(0xbdbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbdbb));
        // 00 0264
        gbc.setState(0x6fc3, 0x65d8, 0x6a30, 0x6f7b, 0x17b5, 0x72d8, 0x0, 0x0);
        gbc.writeMem(0x6fc3, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x65d8, gbc.sp());
        EXPECT(0x6fc4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0265
        gbc.setState(0xb60e, 0xaea5, 0xd820, 0xf806, 0xec73, 0xd12f, 0x1, 0x1);
        gbc.writeMem(0xb60e, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xaea5, gbc.sp());
        EXPECT(0xb60f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb60e));
        // 00 0266
        gbc.setState(0x989f, 0xc059, 0x8970, 0xb9ca, 0x872b, 0xf1a6, 0x0, 0x1);
        gbc.writeMem(0x989f, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xc059, gbc.sp());
        EXPECT(0x98a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x989f));
        // 00 0267
        gbc.setState(0xd6a7, 0xe72c, 0xb710, 0xb8e9, 0xb2f8, 0x647f, 0x1, 0x0);
        gbc.writeMem(0xd6a7, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe72c, gbc.sp());
        EXPECT(0xd6a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd6a7));
        // 00 0268
        gbc.setState(0x2a40, 0xc201, 0x23d0, 0x278, 0x4423, 0xb079, 0x0, 0x1);
        gbc.writeMem(0x2a40, { 0x0 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xc201, gbc.sp());
        EXPECT(0x2a41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0269
        gbc.setState(0xeda9, 0xb1d7, 0xc9b0, 0x32b7, 0xfab0, 0x46e9, 0x0, 0x1);
        gbc.writeMem(0xeda9, { 0x0 });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xb1d7, gbc.sp());
        EXPECT(0xedaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xeda9));
        // 00 026B
        gbc.setState(0xd3f1, 0x14c0, 0x54f0, 0xa8f3, 0xe07c, 0x74eb, 0x1, 0x1);
        gbc.writeMem(0xd3f1, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x14c0, gbc.sp());
        EXPECT(0xd3f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd3f1));
        // 00 026C
        gbc.setState(0xd479, 0xe4de, 0x5fd0, 0xd845, 0x3399, 0x6e7f, 0x1, 0x1);
        gbc.writeMem(0xd479, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe4de, gbc.sp());
        EXPECT(0xd47a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd479));
        // 00 026D
        gbc.setState(0xa54c, 0x2dbb, 0x74b0, 0xa3e2, 0x63c2, 0x91e3, 0x0, 0x1);
        gbc.writeMem(0xa54c, { 0x0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x2dbb, gbc.sp());
        EXPECT(0xa54d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa54c));
        // 00 026F
        gbc.setState(0x43ef, 0x9f60, 0x3180, 0x602e, 0x8043, 0x3fe7, 0x0, 0x0);
        gbc.writeMem(0x43ef, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x9f60, gbc.sp());
        EXPECT(0x43f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0270
        gbc.setState(0x4633, 0x69e6, 0xd270, 0xabb6, 0x4782, 0xf946, 0x0, 0x1);
        gbc.writeMem(0x4633, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x69e6, gbc.sp());
        EXPECT(0x4634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0271
        gbc.setState(0xcd8b, 0xce1, 0x5a70, 0x1ae5, 0xb1db, 0x3bcd, 0x1, 0x0);
        gbc.writeMem(0xcd8b, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xce1, gbc.sp());
        EXPECT(0xcd8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcd8b));
        // 00 0272
        gbc.setState(0x679f, 0x92b2, 0x7100, 0xa42a, 0xdcd5, 0x986a, 0x1, 0x0);
        gbc.writeMem(0x679f, { 0x0 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x92b2, gbc.sp());
        EXPECT(0x67a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0273
        gbc.setState(0x9ec6, 0x879b, 0x3c00, 0x8b77, 0xd966, 0xb961, 0x1, 0x1);
        gbc.writeMem(0x9ec6, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x879b, gbc.sp());
        EXPECT(0x9ec7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9ec6));
        // 00 0275
        gbc.setState(0x640d, 0x41d, 0xd650, 0x6a2, 0x42f1, 0x9b54, 0x1, 0x0);
        gbc.writeMem(0x640d, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x41d, gbc.sp());
        EXPECT(0x640e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0276
        gbc.setState(0x397a, 0x3c01, 0xd3f0, 0x975e, 0xcd4, 0xce5d, 0x0, 0x0);
        gbc.writeMem(0x397a, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3c01, gbc.sp());
        EXPECT(0x397b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0277
        gbc.setState(0x7f65, 0x5ab8, 0x9b60, 0x9c8d, 0x1e98, 0xee56, 0x1, 0x1);
        gbc.writeMem(0x7f65, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5ab8, gbc.sp());
        EXPECT(0x7f66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0279
        gbc.setState(0xa2c1, 0x3c08, 0x9a40, 0xb0ca, 0x7f63, 0xc480, 0x0, 0x1);
        gbc.writeMem(0xa2c1, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3c08, gbc.sp());
        EXPECT(0xa2c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa2c1));
        // 00 027A
        gbc.setState(0xbce1, 0x2915, 0xde10, 0x935a, 0x1413, 0x2864, 0x1, 0x0);
        gbc.writeMem(0xbce1, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2915, gbc.sp());
        EXPECT(0xbce2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbce1));
        // 00 027B
        gbc.setState(0xc280, 0x157b, 0x3850, 0x2233, 0x890, 0xc1fb, 0x0, 0x0);
        gbc.writeMem(0xc280, { 0x0 });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x157b, gbc.sp());
        EXPECT(0xc281, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc280));
        // 00 027C
        gbc.setState(0x7662, 0xe3a2, 0xd90, 0x8dd0, 0x46ca, 0xb4fd, 0x1, 0x0);
        gbc.writeMem(0x7662, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xe3a2, gbc.sp());
        EXPECT(0x7663, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 027D
        gbc.setState(0xc05c, 0x2062, 0x2740, 0x5a51, 0xaee, 0xa8fd, 0x1, 0x1);
        gbc.writeMem(0xc05c, { 0x0 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x2062, gbc.sp());
        EXPECT(0xc05d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc05c));
        // 00 027E
        gbc.setState(0xc69a, 0x8d85, 0x45c0, 0x6953, 0x6cf3, 0xb871, 0x1, 0x0);
        gbc.writeMem(0xc69a, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x8d85, gbc.sp());
        EXPECT(0xc69b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc69a));
        // 00 027F
        gbc.setState(0x898e, 0x2e5a, 0xdd90, 0x262e, 0x680a, 0xa30, 0x1, 0x0);
        gbc.writeMem(0x898e, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2e5a, gbc.sp());
        EXPECT(0x898f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x898e));
        // 00 0280
        gbc.setState(0xb777, 0x89fd, 0x8d60, 0x3759, 0xf2cb, 0x94bc, 0x0, 0x1);
        gbc.writeMem(0xb777, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x89fd, gbc.sp());
        EXPECT(0xb778, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb777));
        // 00 0281
        gbc.setState(0xd762, 0x8895, 0x84e0, 0x4b8b, 0x7511, 0xed18, 0x0, 0x1);
        gbc.writeMem(0xd762, { 0x0 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x8895, gbc.sp());
        EXPECT(0xd763, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd762));
        // 00 0282
        gbc.setState(0xa970, 0x230b, 0x6000, 0x786d, 0x5120, 0x8d86, 0x0, 0x0);
        gbc.writeMem(0xa970, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x230b, gbc.sp());
        EXPECT(0xa971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa970));
        // 00 0283
        gbc.setState(0x376b, 0x9718, 0x2fc0, 0x5344, 0xd8de, 0xd2db, 0x1, 0x1);
        gbc.writeMem(0x376b, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x9718, gbc.sp());
        EXPECT(0x376c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0284
        gbc.setState(0x2ec, 0x1555, 0x9580, 0xba13, 0xa79a, 0x9c2, 0x1, 0x1);
        gbc.writeMem(0x2ec, { 0x0 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x1555, gbc.sp());
        EXPECT(0x2ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0285
        gbc.setState(0x77c3, 0x1558, 0xd070, 0xc68a, 0xbfc0, 0x6fc4, 0x0, 0x0);
        gbc.writeMem(0x77c3, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x1558, gbc.sp());
        EXPECT(0x77c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0286
        gbc.setState(0x76b4, 0x1e9c, 0xb850, 0x4fab, 0xe1a8, 0xa83, 0x1, 0x1);
        gbc.writeMem(0x76b4, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x1e9c, gbc.sp());
        EXPECT(0x76b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0287
        gbc.setState(0x5f02, 0x8e46, 0x26a0, 0x6e1c, 0x4fe6, 0xf4d8, 0x1, 0x0);
        gbc.writeMem(0x5f02, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x8e46, gbc.sp());
        EXPECT(0x5f03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0288
        gbc.setState(0x9dd1, 0x4635, 0x2e20, 0xbe47, 0x26ed, 0x8ba9, 0x0, 0x1);
        gbc.writeMem(0x9dd1, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x4635, gbc.sp());
        EXPECT(0x9dd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9dd1));
        // 00 0289
        gbc.setState(0x81a3, 0x4b76, 0xa7e0, 0x552a, 0xd053, 0xf553, 0x0, 0x0);
        gbc.writeMem(0x81a3, { 0x0 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x4b76, gbc.sp());
        EXPECT(0x81a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x81a3));
        // 00 028A
        gbc.setState(0xaeba, 0x5caa, 0x5ec0, 0x9fe0, 0x14a6, 0x8c6b, 0x1, 0x0);
        gbc.writeMem(0xaeba, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5caa, gbc.sp());
        EXPECT(0xaebb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaeba));
        // 00 028B
        gbc.setState(0x74f3, 0x59a6, 0x81d0, 0xb543, 0x7a0b, 0x2665, 0x1, 0x0);
        gbc.writeMem(0x74f3, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x59a6, gbc.sp());
        EXPECT(0x74f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 028C
        gbc.setState(0x875d, 0xc7cf, 0x9460, 0x4b81, 0x1dab, 0x4194, 0x0, 0x0);
        gbc.writeMem(0x875d, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xc7cf, gbc.sp());
        EXPECT(0x875e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x875d));
        // 00 028D
        gbc.setState(0x41b2, 0x9d7d, 0x1ed0, 0xb971, 0xf055, 0x19b3, 0x0, 0x1);
        gbc.writeMem(0x41b2, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x9d7d, gbc.sp());
        EXPECT(0x41b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 028E
        gbc.setState(0x946a, 0xeebf, 0x6c70, 0x8113, 0xb31b, 0x22bb, 0x1, 0x1);
        gbc.writeMem(0x946a, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xeebf, gbc.sp());
        EXPECT(0x946b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x946a));
        // 00 028F
        gbc.setState(0x16ad, 0xe87c, 0x3a10, 0x2303, 0x2ed3, 0xc085, 0x1, 0x0);
        gbc.writeMem(0x16ad, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xe87c, gbc.sp());
        EXPECT(0x16ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0290
        gbc.setState(0xd7e9, 0x7229, 0xd510, 0xddec, 0xb81, 0xef74, 0x1, 0x1);
        gbc.writeMem(0xd7e9, { 0x0 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7229, gbc.sp());
        EXPECT(0xd7ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd7e9));
        // 00 0291
        gbc.setState(0xfa, 0x6f35, 0xde40, 0xd0be, 0x1f7f, 0xb9af, 0x0, 0x1);
        gbc.writeMem(0xfa, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x6f35, gbc.sp());
        EXPECT(0xfb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0292
        gbc.setState(0x61cb, 0xd4db, 0x3290, 0x55e2, 0x3aa, 0xcb87, 0x0, 0x1);
        gbc.writeMem(0x61cb, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xd4db, gbc.sp());
        EXPECT(0x61cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0294
        gbc.setState(0x7c8d, 0x5b10, 0xb210, 0x4294, 0x7b8f, 0xb6fd, 0x0, 0x0);
        gbc.writeMem(0x7c8d, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x5b10, gbc.sp());
        EXPECT(0x7c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0295
        gbc.setState(0x7442, 0x2304, 0x9700, 0x6de8, 0x9072, 0x184e, 0x0, 0x0);
        gbc.writeMem(0x7442, { 0x0 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x2304, gbc.sp());
        EXPECT(0x7443, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0297
        gbc.setState(0x9834, 0x3c, 0xbf00, 0xf8f8, 0xc5e4, 0xfeb3, 0x0, 0x1);
        gbc.writeMem(0x9834, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x3c, gbc.sp());
        EXPECT(0x9835, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9834));
        // 00 0298
        gbc.setState(0x7a4a, 0x25bd, 0xb080, 0x733, 0x758b, 0x7b6a, 0x0, 0x0);
        gbc.writeMem(0x7a4a, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x25bd, gbc.sp());
        EXPECT(0x7a4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0299
        gbc.setState(0xa0cd, 0xfd45, 0x3600, 0x16f0, 0xe5df, 0x7015, 0x1, 0x0);
        gbc.writeMem(0xa0cd, { 0x0 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfd45, gbc.sp());
        EXPECT(0xa0ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa0cd));
        // 00 029B
        gbc.setState(0xeac5, 0x95b0, 0xf070, 0xc4d9, 0xe4e6, 0xc6a7, 0x1, 0x1);
        gbc.writeMem(0xeac5, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x95b0, gbc.sp());
        EXPECT(0xeac6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xeac5));
        // 00 029C
        gbc.setState(0x31d4, 0xb4c3, 0xd2d0, 0x382a, 0xe23a, 0x7463, 0x0, 0x1);
        gbc.writeMem(0x31d4, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xb4c3, gbc.sp());
        EXPECT(0x31d5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 029D
        gbc.setState(0x6edb, 0xf1da, 0x1640, 0x8e0d, 0xbc3d, 0x5adf, 0x1, 0x1);
        gbc.writeMem(0x6edb, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xf1da, gbc.sp());
        EXPECT(0x6edc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 029E
        gbc.setState(0x4dc5, 0x35ac, 0x1f10, 0xb563, 0xbe3f, 0x284, 0x1, 0x1);
        gbc.writeMem(0x4dc5, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x35ac, gbc.sp());
        EXPECT(0x4dc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02A0
        gbc.setState(0x7fb8, 0xc9a, 0x3140, 0x660e, 0xdd42, 0xe83f, 0x0, 0x0);
        gbc.writeMem(0x7fb8, { 0x0 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xc9a, gbc.sp());
        EXPECT(0x7fb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02A1
        gbc.setState(0x9f55, 0x5307, 0xbc00, 0xdf11, 0xc1d5, 0x1cd9, 0x0, 0x1);
        gbc.writeMem(0x9f55, { 0x0 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5307, gbc.sp());
        EXPECT(0x9f56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9f55));
        // 00 02A2
        gbc.setState(0xbe8f, 0x18a8, 0x8b60, 0xeb26, 0x8446, 0x1edd, 0x1, 0x0);
        gbc.writeMem(0xbe8f, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x18a8, gbc.sp());
        EXPECT(0xbe90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbe8f));
        // 00 02A3
        gbc.setState(0xd22d, 0x2758, 0xece0, 0x280a, 0x72f1, 0x71d6, 0x0, 0x1);
        gbc.writeMem(0xd22d, { 0x0 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x2758, gbc.sp());
        EXPECT(0xd22e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd22d));
        // 00 02A4
        gbc.setState(0xe009, 0x9f23, 0x630, 0x55f0, 0x401e, 0x4141, 0x0, 0x1);
        gbc.writeMem(0xe009, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9f23, gbc.sp());
        EXPECT(0xe00a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe009));
        // 00 02A5
        gbc.setState(0xc87c, 0x4257, 0x1f80, 0x4635, 0x70de, 0xfcee, 0x0, 0x0);
        gbc.writeMem(0xc87c, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x4257, gbc.sp());
        EXPECT(0xc87d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc87c));
        // 00 02A6
        gbc.setState(0xefaf, 0x70ab, 0x8d20, 0x709a, 0x2376, 0xb71f, 0x0, 0x0);
        gbc.writeMem(0xefaf, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x70ab, gbc.sp());
        EXPECT(0xefb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xefaf));
        // 00 02A7
        gbc.setState(0x9dd8, 0x563c, 0xb790, 0xf33f, 0x1877, 0x35b3, 0x1, 0x0);
        gbc.writeMem(0x9dd8, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x563c, gbc.sp());
        EXPECT(0x9dd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9dd8));
        // 00 02A8
        gbc.setState(0x1dbc, 0xa00f, 0x5700, 0x81c0, 0x30bd, 0x3429, 0x0, 0x0);
        gbc.writeMem(0x1dbc, { 0x0 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xa00f, gbc.sp());
        EXPECT(0x1dbd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02A9
        gbc.setState(0xc3cc, 0xe884, 0xce80, 0x850, 0x204a, 0xf63, 0x1, 0x1);
        gbc.writeMem(0xc3cc, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe884, gbc.sp());
        EXPECT(0xc3cd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc3cc));
        // 00 02AA
        gbc.setState(0xc259, 0x783d, 0x7630, 0x1074, 0xc9ec, 0x8207, 0x1, 0x0);
        gbc.writeMem(0xc259, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x783d, gbc.sp());
        EXPECT(0xc25a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc259));
        // 00 02AB
        gbc.setState(0xcd81, 0x980, 0x4810, 0xbf19, 0x9adf, 0x430a, 0x1, 0x0);
        gbc.writeMem(0xcd81, { 0x0 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x980, gbc.sp());
        EXPECT(0xcd82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcd81));
        // 00 02AC
        gbc.setState(0x7631, 0x7ebb, 0xef50, 0xe420, 0xc33c, 0xaf04, 0x0, 0x0);
        gbc.writeMem(0x7631, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7ebb, gbc.sp());
        EXPECT(0x7632, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02AD
        gbc.setState(0x5156, 0x4645, 0x98f0, 0x62ed, 0x384b, 0xae37, 0x0, 0x1);
        gbc.writeMem(0x5156, { 0x0 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4645, gbc.sp());
        EXPECT(0x5157, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02AE
        gbc.setState(0x4c1a, 0x81b0, 0x1e90, 0x28f0, 0x6b04, 0xbc, 0x0, 0x1);
        gbc.writeMem(0x4c1a, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x81b0, gbc.sp());
        EXPECT(0x4c1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02B0
        gbc.setState(0x2f77, 0x8e96, 0x2f90, 0x8c59, 0xe1ab, 0x1181, 0x0, 0x0);
        gbc.writeMem(0x2f77, { 0x0 });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x8e96, gbc.sp());
        EXPECT(0x2f78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02B1
        gbc.setState(0xa74e, 0x5663, 0x4ec0, 0x7ec4, 0x4c62, 0x1340, 0x1, 0x1);
        gbc.writeMem(0xa74e, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x5663, gbc.sp());
        EXPECT(0xa74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa74e));
        // 00 02B3
        gbc.setState(0xac8e, 0xa064, 0x40e0, 0xb6f6, 0xcc6b, 0x9310, 0x1, 0x0);
        gbc.writeMem(0xac8e, { 0x0 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa064, gbc.sp());
        EXPECT(0xac8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xac8e));
        // 00 02B4
        gbc.setState(0x8ca0, 0x5fa9, 0x9100, 0xc0c1, 0x35bf, 0x3f66, 0x1, 0x0);
        gbc.writeMem(0x8ca0, { 0x0 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x5fa9, gbc.sp());
        EXPECT(0x8ca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8ca0));
        // 00 02B5
        gbc.setState(0xdd62, 0x7b15, 0x8060, 0x6cd3, 0x4fb7, 0xfa6a, 0x1, 0x1);
        gbc.writeMem(0xdd62, { 0x0 });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x7b15, gbc.sp());
        EXPECT(0xdd63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdd62));
        // 00 02B6
        gbc.setState(0xd38f, 0xe6aa, 0xd610, 0xe9e, 0xb7b4, 0xa1f0, 0x1, 0x0);
        gbc.writeMem(0xd38f, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xe6aa, gbc.sp());
        EXPECT(0xd390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd38f));
        // 00 02B7
        gbc.setState(0x4396, 0x7d19, 0xd6a0, 0x5835, 0x6e3, 0x3fde, 0x1, 0x0);
        gbc.writeMem(0x4396, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x7d19, gbc.sp());
        EXPECT(0x4397, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02B8
        gbc.setState(0x6f8b, 0xb4cb, 0xeae0, 0x74d3, 0xc82d, 0x69c0, 0x1, 0x0);
        gbc.writeMem(0x6f8b, { 0x0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xb4cb, gbc.sp());
        EXPECT(0x6f8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02B9
        gbc.setState(0x935, 0xbc40, 0x5e20, 0x6a7e, 0xe514, 0x4178, 0x1, 0x0);
        gbc.writeMem(0x935, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xbc40, gbc.sp());
        EXPECT(0x936, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02BA
        gbc.setState(0xcbdb, 0x3b0, 0xb350, 0x10f3, 0x9761, 0x7784, 0x1, 0x1);
        gbc.writeMem(0xcbdb, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3b0, gbc.sp());
        EXPECT(0xcbdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcbdb));
        // 00 02BB
        gbc.setState(0xbd8f, 0x3fb7, 0x32a0, 0x678c, 0xa3d3, 0xaa2c, 0x1, 0x1);
        gbc.writeMem(0xbd8f, { 0x0 });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x3fb7, gbc.sp());
        EXPECT(0xbd90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbd8f));
        // 00 02BC
        gbc.setState(0xe1f6, 0x88ea, 0x5300, 0x12b9, 0x863c, 0x5bc7, 0x0, 0x0);
        gbc.writeMem(0xe1f6, { 0x0 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x88ea, gbc.sp());
        EXPECT(0xe1f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe1f6));
        // 00 02BD
        gbc.setState(0xbd01, 0xbc5b, 0xe0b0, 0x8536, 0xb9c7, 0xb77b, 0x0, 0x1);
        gbc.writeMem(0xbd01, { 0x0 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xbc5b, gbc.sp());
        EXPECT(0xbd02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbd01));
        // 00 02BE
        gbc.setState(0x1b99, 0x6348, 0x5b70, 0xfefc, 0xb19c, 0xa0c0, 0x0, 0x1);
        gbc.writeMem(0x1b99, { 0x0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x6348, gbc.sp());
        EXPECT(0x1b9a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02BF
        gbc.setState(0x1152, 0x26e5, 0x3420, 0x379d, 0xb091, 0xb2bf, 0x0, 0x0);
        gbc.writeMem(0x1152, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x26e5, gbc.sp());
        EXPECT(0x1153, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02C0
        gbc.setState(0xe4bb, 0xff70, 0x5e20, 0x44b3, 0xf81a, 0x8e09, 0x0, 0x0);
        gbc.writeMem(0xe4bb, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xff70, gbc.sp());
        EXPECT(0xe4bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe4bb));
        // 00 02C1
        gbc.setState(0x6f19, 0x855c, 0x3f70, 0xaa5d, 0xe9aa, 0xd4ab, 0x0, 0x1);
        gbc.writeMem(0x6f19, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x855c, gbc.sp());
        EXPECT(0x6f1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02C2
        gbc.setState(0x4092, 0xa3b7, 0x51c0, 0x9a2e, 0x350b, 0x7150, 0x0, 0x1);
        gbc.writeMem(0x4092, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa3b7, gbc.sp());
        EXPECT(0x4093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02C3
        gbc.setState(0x304c, 0x7583, 0xb7e0, 0x91df, 0xcb32, 0xcf18, 0x1, 0x0);
        gbc.writeMem(0x304c, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x7583, gbc.sp());
        EXPECT(0x304d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02C4
        gbc.setState(0x9fae, 0xebe6, 0x4990, 0xc29a, 0x3cd8, 0x1efa, 0x1, 0x0);
        gbc.writeMem(0x9fae, { 0x0 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xebe6, gbc.sp());
        EXPECT(0x9faf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9fae));
        // 00 02C5
        gbc.setState(0x765c, 0xc755, 0xa4e0, 0x70e1, 0xa3b4, 0xe614, 0x0, 0x0);
        gbc.writeMem(0x765c, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xc755, gbc.sp());
        EXPECT(0x765d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02C6
        gbc.setState(0x6c2a, 0x5772, 0x2610, 0x7bc7, 0xb28a, 0x185e, 0x0, 0x1);
        gbc.writeMem(0x6c2a, { 0x0 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5772, gbc.sp());
        EXPECT(0x6c2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02C7
        gbc.setState(0x7e6a, 0xc92, 0xf220, 0xad3b, 0x138b, 0x84cd, 0x1, 0x0);
        gbc.writeMem(0x7e6a, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc92, gbc.sp());
        EXPECT(0x7e6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02C8
        gbc.setState(0xb561, 0xd22b, 0xd2e0, 0x77b7, 0x45bb, 0x418, 0x1, 0x0);
        gbc.writeMem(0xb561, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd22b, gbc.sp());
        EXPECT(0xb562, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb561));
        // 00 02C9
        gbc.setState(0xed9d, 0x8811, 0xe6b0, 0xef9d, 0x848c, 0x8c5c, 0x1, 0x0);
        gbc.writeMem(0xed9d, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x8811, gbc.sp());
        EXPECT(0xed9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xed9d));
        // 00 02CA
        gbc.setState(0x7369, 0x47aa, 0x3d90, 0xcd0c, 0xe69f, 0x77ec, 0x0, 0x0);
        gbc.writeMem(0x7369, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x47aa, gbc.sp());
        EXPECT(0x736a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02CB
        gbc.setState(0x2e95, 0x5312, 0x8790, 0x1bf0, 0x85df, 0xaa59, 0x1, 0x1);
        gbc.writeMem(0x2e95, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x5312, gbc.sp());
        EXPECT(0x2e96, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02CC
        gbc.setState(0xd32a, 0xc908, 0xa4e0, 0xdc48, 0x6f07, 0x32a3, 0x0, 0x1);
        gbc.writeMem(0xd32a, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xc908, gbc.sp());
        EXPECT(0xd32b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd32a));
        // 00 02CD
        gbc.setState(0x27a3, 0x959b, 0xd00, 0x9662, 0xb048, 0xf048, 0x1, 0x0);
        gbc.writeMem(0x27a3, { 0x0 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x959b, gbc.sp());
        EXPECT(0x27a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02CE
        gbc.setState(0xbb47, 0x2d1, 0xf2f0, 0x645b, 0x431a, 0x586a, 0x1, 0x1);
        gbc.writeMem(0xbb47, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x2d1, gbc.sp());
        EXPECT(0xbb48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbb47));
        // 00 02D0
        gbc.setState(0x38bb, 0xfeeb, 0x3410, 0x94f4, 0x5c00, 0x6709, 0x0, 0x1);
        gbc.writeMem(0x38bb, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xfeeb, gbc.sp());
        EXPECT(0x38bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02D1
        gbc.setState(0x19db, 0xd833, 0xda70, 0x8f6, 0x47ea, 0x187f, 0x0, 0x1);
        gbc.writeMem(0x19db, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xd833, gbc.sp());
        EXPECT(0x19dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02D2
        gbc.setState(0x7327, 0xc9a9, 0x4710, 0xa2f3, 0xe506, 0x7838, 0x1, 0x1);
        gbc.writeMem(0x7327, { 0x0 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc9a9, gbc.sp());
        EXPECT(0x7328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02D3
        gbc.setState(0x4d07, 0x7c6e, 0xfb60, 0x46b, 0x1706, 0xd28a, 0x1, 0x1);
        gbc.writeMem(0x4d07, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x7c6e, gbc.sp());
        EXPECT(0x4d08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02D4
        gbc.setState(0x8722, 0x64ff, 0x2f0, 0x2908, 0x99b5, 0xe38b, 0x0, 0x1);
        gbc.writeMem(0x8722, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x64ff, gbc.sp());
        EXPECT(0x8723, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8722));
        // 00 02D5
        gbc.setState(0xcaa0, 0xb8b2, 0x7ac0, 0xe78a, 0x72cb, 0xebd, 0x0, 0x1);
        gbc.writeMem(0xcaa0, { 0x0 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xb8b2, gbc.sp());
        EXPECT(0xcaa1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcaa0));
        // 00 02D6
        gbc.setState(0x38cf, 0x498d, 0xdef0, 0x5184, 0xa5bc, 0x5f25, 0x1, 0x0);
        gbc.writeMem(0x38cf, { 0x0 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x498d, gbc.sp());
        EXPECT(0x38d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02D7
        gbc.setState(0x8e30, 0x56d2, 0x7e70, 0x9b76, 0xe64c, 0xd0b6, 0x1, 0x1);
        gbc.writeMem(0x8e30, { 0x0 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x56d2, gbc.sp());
        EXPECT(0x8e31, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8e30));
        // 00 02D8
        gbc.setState(0xdeaf, 0x5695, 0x5f30, 0x5170, 0xc77b, 0x6ce6, 0x0, 0x0);
        gbc.writeMem(0xdeaf, { 0x0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x5695, gbc.sp());
        EXPECT(0xdeb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdeaf));
        // 00 02D9
        gbc.setState(0x440a, 0x9dc8, 0xbb40, 0x755, 0x442b, 0x1fcc, 0x1, 0x1);
        gbc.writeMem(0x440a, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9dc8, gbc.sp());
        EXPECT(0x440b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02DA
        gbc.setState(0x6913, 0xded2, 0xcda0, 0xe205, 0x686, 0xc17a, 0x0, 0x1);
        gbc.writeMem(0x6913, { 0x0 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xded2, gbc.sp());
        EXPECT(0x6914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02DB
        gbc.setState(0x8b48, 0xe02, 0x6f70, 0x61b2, 0x4143, 0xd1bb, 0x1, 0x1);
        gbc.writeMem(0x8b48, { 0x0 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xe02, gbc.sp());
        EXPECT(0x8b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8b48));
        // 00 02DC
        gbc.setState(0x368f, 0x63b8, 0xc30, 0x7a53, 0x1bbd, 0xba36, 0x1, 0x0);
        gbc.writeMem(0x368f, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x63b8, gbc.sp());
        EXPECT(0x3690, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02DD
        gbc.setState(0x25fb, 0xa048, 0xb340, 0x7940, 0x62f4, 0x83bb, 0x1, 0x1);
        gbc.writeMem(0x25fb, { 0x0 });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa048, gbc.sp());
        EXPECT(0x25fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02DE
        gbc.setState(0xa7eb, 0x934, 0x6310, 0x9eae, 0xf67c, 0xf3e9, 0x0, 0x1);
        gbc.writeMem(0xa7eb, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x934, gbc.sp());
        EXPECT(0xa7ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa7eb));
        // 00 02DF
        gbc.setState(0x3ba4, 0xf661, 0x93c0, 0xb6d3, 0x2b05, 0x378e, 0x1, 0x0);
        gbc.writeMem(0x3ba4, { 0x0 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf661, gbc.sp());
        EXPECT(0x3ba5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02E0
        gbc.setState(0xb179, 0x77fe, 0x70d0, 0x6b78, 0xab55, 0x3b, 0x1, 0x0);
        gbc.writeMem(0xb179, { 0x0 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x77fe, gbc.sp());
        EXPECT(0xb17a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb179));
        // 00 02E1
        gbc.setState(0xbe6d, 0xa916, 0x73b0, 0xa717, 0xc229, 0x3857, 0x1, 0x0);
        gbc.writeMem(0xbe6d, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xa916, gbc.sp());
        EXPECT(0xbe6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbe6d));
        // 00 02E2
        gbc.setState(0xa49e, 0xf410, 0x6300, 0x8c5b, 0x1473, 0x2cf0, 0x0, 0x1);
        gbc.writeMem(0xa49e, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xf410, gbc.sp());
        EXPECT(0xa49f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa49e));
        // 00 02E3
        gbc.setState(0xd65, 0x5ef9, 0xf620, 0xaeae, 0xb3ca, 0x30a9, 0x0, 0x1);
        gbc.writeMem(0xd65, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x5ef9, gbc.sp());
        EXPECT(0xd66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02E4
        gbc.setState(0x9795, 0x9c50, 0xa020, 0x7002, 0x1733, 0x65c8, 0x0, 0x0);
        gbc.writeMem(0x9795, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9c50, gbc.sp());
        EXPECT(0x9796, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9795));
        // 00 02E5
        gbc.setState(0x49f8, 0x6be3, 0x9950, 0x57b1, 0x3cad, 0x9354, 0x0, 0x1);
        gbc.writeMem(0x49f8, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6be3, gbc.sp());
        EXPECT(0x49f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02E6
        gbc.setState(0xd585, 0x29e9, 0xc5d0, 0xaf9c, 0xaa2, 0xf205, 0x0, 0x1);
        gbc.writeMem(0xd585, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x29e9, gbc.sp());
        EXPECT(0xd586, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd585));
        // 00 02E7
        gbc.setState(0xdaa9, 0xfe6f, 0xa410, 0x5a39, 0xe2cb, 0xdfc5, 0x0, 0x1);
        gbc.writeMem(0xdaa9, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfe6f, gbc.sp());
        EXPECT(0xdaaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdaa9));
        // 00 02E8
        gbc.setState(0xedef, 0x9384, 0x3080, 0xe73a, 0x392, 0x4c1a, 0x0, 0x1);
        gbc.writeMem(0xedef, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x9384, gbc.sp());
        EXPECT(0xedf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xedef));
        // 00 02E9
        gbc.setState(0xc0f5, 0x5a74, 0x3cb0, 0x233c, 0xb874, 0x9a99, 0x1, 0x1);
        gbc.writeMem(0xc0f5, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x5a74, gbc.sp());
        EXPECT(0xc0f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc0f5));
        // 00 02EA
        gbc.setState(0xcd69, 0xf4b6, 0x3f70, 0x4a53, 0xd9c8, 0xa40c, 0x0, 0x1);
        gbc.writeMem(0xcd69, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xf4b6, gbc.sp());
        EXPECT(0xcd6a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcd69));
        // 00 02EB
        gbc.setState(0x871b, 0x5c6e, 0xb010, 0xd6f, 0x146b, 0x2ff8, 0x0, 0x0);
        gbc.writeMem(0x871b, { 0x0 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5c6e, gbc.sp());
        EXPECT(0x871c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x871b));
        // 00 02EC
        gbc.setState(0x25c4, 0xac14, 0xd0f0, 0xcd5b, 0x7452, 0x5d20, 0x0, 0x1);
        gbc.writeMem(0x25c4, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xac14, gbc.sp());
        EXPECT(0x25c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02ED
        gbc.setState(0x7275, 0x51c4, 0x3050, 0x34eb, 0x90f0, 0x4b44, 0x0, 0x1);
        gbc.writeMem(0x7275, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x51c4, gbc.sp());
        EXPECT(0x7276, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02EE
        gbc.setState(0x293a, 0x2f4c, 0x6ac0, 0xb804, 0xede4, 0x820b, 0x0, 0x1);
        gbc.writeMem(0x293a, { 0x0 });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2f4c, gbc.sp());
        EXPECT(0x293b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02EF
        gbc.setState(0x6c00, 0xfb87, 0xd490, 0x44bc, 0x7e62, 0x42af, 0x0, 0x0);
        gbc.writeMem(0x6c00, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xfb87, gbc.sp());
        EXPECT(0x6c01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02F0
        gbc.setState(0x4456, 0x763a, 0xf610, 0x8285, 0x4bf5, 0x8470, 0x1, 0x0);
        gbc.writeMem(0x4456, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x763a, gbc.sp());
        EXPECT(0x4457, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02F1
        gbc.setState(0x7ee3, 0x4dde, 0x8c20, 0xbb24, 0x521b, 0x55e5, 0x0, 0x1);
        gbc.writeMem(0x7ee3, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x4dde, gbc.sp());
        EXPECT(0x7ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02F2
        gbc.setState(0x8d, 0x727e, 0x5800, 0x3ddd, 0xeec8, 0xdfb6, 0x1, 0x1);
        gbc.writeMem(0x8d, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x727e, gbc.sp());
        EXPECT(0x8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02F3
        gbc.setState(0x6930, 0x5dfd, 0x5960, 0x6f66, 0x8852, 0xbf3c, 0x1, 0x0);
        gbc.writeMem(0x6930, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x5dfd, gbc.sp());
        EXPECT(0x6931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02F4
        gbc.setState(0x9dd3, 0xf186, 0xa660, 0xacf7, 0xa27d, 0xf348, 0x1, 0x0);
        gbc.writeMem(0x9dd3, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf186, gbc.sp());
        EXPECT(0x9dd4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9dd3));
        // 00 02F5
        gbc.setState(0x53f4, 0x93f0, 0x2ec0, 0x7c62, 0xbb03, 0x884d, 0x0, 0x0);
        gbc.writeMem(0x53f4, { 0x0 });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x93f0, gbc.sp());
        EXPECT(0x53f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02F6
        gbc.setState(0x7b7a, 0x2155, 0x5480, 0x69ee, 0xbf86, 0x30c5, 0x0, 0x0);
        gbc.writeMem(0x7b7a, { 0x0 });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x2155, gbc.sp());
        EXPECT(0x7b7b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02F7
        gbc.setState(0xad2f, 0x2fc3, 0x1650, 0xde4b, 0xbb5e, 0x1c54, 0x0, 0x1);
        gbc.writeMem(0xad2f, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2fc3, gbc.sp());
        EXPECT(0xad30, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xad2f));
        // 00 02F8
        gbc.setState(0x401f, 0xfcaa, 0x6e0, 0x2c5f, 0x68d2, 0x95ca, 0x1, 0x0);
        gbc.writeMem(0x401f, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xfcaa, gbc.sp());
        EXPECT(0x4020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02F9
        gbc.setState(0xeaf2, 0x1ec8, 0xf450, 0x7753, 0xc576, 0x9c80, 0x0, 0x1);
        gbc.writeMem(0xeaf2, { 0x0 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x1ec8, gbc.sp());
        EXPECT(0xeaf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xeaf2));
        // 00 02FA
        gbc.setState(0x43d1, 0x9f40, 0x3dd0, 0x5372, 0x1b63, 0x11fd, 0x0, 0x0);
        gbc.writeMem(0x43d1, { 0x0 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x9f40, gbc.sp());
        EXPECT(0x43d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 02FB
        gbc.setState(0x88d0, 0x52ae, 0x1b40, 0x6905, 0x62be, 0x52c8, 0x1, 0x0);
        gbc.writeMem(0x88d0, { 0x0 });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x52ae, gbc.sp());
        EXPECT(0x88d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x88d0));
        // 00 02FC
        gbc.setState(0x641, 0x722, 0xd920, 0x2b77, 0xe46, 0xb6ae, 0x0, 0x0);
        gbc.writeMem(0x641, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x722, gbc.sp());
        EXPECT(0x642, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 02FD
        gbc.setState(0x83fe, 0x89c8, 0xcef0, 0xf40, 0x75c7, 0x275a, 0x1, 0x1);
        gbc.writeMem(0x83fe, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x89c8, gbc.sp());
        EXPECT(0x83ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x83fe));
        // 00 02FE
        gbc.setState(0xb93f, 0xd9b3, 0x1560, 0x876b, 0xd432, 0xc592, 0x0, 0x1);
        gbc.writeMem(0xb93f, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd9b3, gbc.sp());
        EXPECT(0xb940, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb93f));
        // 00 02FF
        gbc.setState(0x9d83, 0xafdb, 0xe760, 0x2f65, 0x590a, 0xfb67, 0x0, 0x0);
        gbc.writeMem(0x9d83, { 0x0 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xafdb, gbc.sp());
        EXPECT(0x9d84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9d83));
        // 00 0300
        gbc.setState(0xd6d, 0xb10d, 0xe3f0, 0x30c0, 0xed7a, 0xe108, 0x1, 0x0);
        gbc.writeMem(0xd6d, { 0x0 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb10d, gbc.sp());
        EXPECT(0xd6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0301
        gbc.setState(0x801d, 0x7d8e, 0x25d0, 0x9b88, 0x7658, 0x88cb, 0x1, 0x1);
        gbc.writeMem(0x801d, { 0x0 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x7d8e, gbc.sp());
        EXPECT(0x801e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x801d));
        // 00 0302
        gbc.setState(0x3be0, 0xccae, 0xa320, 0xc5e9, 0xc4cb, 0x5b74, 0x1, 0x1);
        gbc.writeMem(0x3be0, { 0x0 });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xccae, gbc.sp());
        EXPECT(0x3be1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0303
        gbc.setState(0xd35f, 0x8e2c, 0x8c70, 0xec61, 0x5e62, 0xcefc, 0x1, 0x0);
        gbc.writeMem(0xd35f, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8e2c, gbc.sp());
        EXPECT(0xd360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd35f));
        // 00 0304
        gbc.setState(0x9c38, 0x179f, 0xd380, 0xfe69, 0x2ed9, 0xa5de, 0x0, 0x1);
        gbc.writeMem(0x9c38, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x179f, gbc.sp());
        EXPECT(0x9c39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9c38));
        // 00 0305
        gbc.setState(0x6727, 0x3f8b, 0xd2e0, 0x9238, 0x3848, 0x93e1, 0x0, 0x0);
        gbc.writeMem(0x6727, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x3f8b, gbc.sp());
        EXPECT(0x6728, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0307
        gbc.setState(0x11fc, 0x921, 0x81c0, 0xabf6, 0xfe34, 0xd5f1, 0x1, 0x1);
        gbc.writeMem(0x11fc, { 0x0 });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x921, gbc.sp());
        EXPECT(0x11fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0308
        gbc.setState(0xbf99, 0xb6f4, 0xd610, 0xb048, 0xb79e, 0x1e7b, 0x1, 0x0);
        gbc.writeMem(0xbf99, { 0x0 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb6f4, gbc.sp());
        EXPECT(0xbf9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbf99));
        // 00 0309
        gbc.setState(0x6509, 0xcc01, 0xc6a0, 0x91a, 0x16c3, 0x31e5, 0x0, 0x0);
        gbc.writeMem(0x6509, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xcc01, gbc.sp());
        EXPECT(0x650a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 030A
        gbc.setState(0xe5f9, 0xfecc, 0xfe20, 0x6570, 0x62c, 0x9a50, 0x1, 0x0);
        gbc.writeMem(0xe5f9, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xfecc, gbc.sp());
        EXPECT(0xe5fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe5f9));
        // 00 030B
        gbc.setState(0xe617, 0x9999, 0xda40, 0x53b6, 0x277c, 0x433b, 0x0, 0x1);
        gbc.writeMem(0xe617, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x9999, gbc.sp());
        EXPECT(0xe618, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe617));
        // 00 030C
        gbc.setState(0x4d49, 0x6148, 0xb9c0, 0xf648, 0xe548, 0xcdca, 0x1, 0x1);
        gbc.writeMem(0x4d49, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x6148, gbc.sp());
        EXPECT(0x4d4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 030D
        gbc.setState(0xb97b, 0xdc6b, 0x7bf0, 0xa450, 0xe888, 0x4337, 0x0, 0x0);
        gbc.writeMem(0xb97b, { 0x0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xdc6b, gbc.sp());
        EXPECT(0xb97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb97b));
        // 00 030E
        gbc.setState(0xff2, 0xf416, 0x1e50, 0x5662, 0x434, 0x4f1, 0x1, 0x1);
        gbc.writeMem(0xff2, { 0x0 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xf416, gbc.sp());
        EXPECT(0xff3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0310
        gbc.setState(0x308a, 0x8f5e, 0x4460, 0x6dcd, 0x298, 0xe83f, 0x1, 0x1);
        gbc.writeMem(0x308a, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x8f5e, gbc.sp());
        EXPECT(0x308b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0311
        gbc.setState(0x228b, 0x1f75, 0xd270, 0xeed1, 0xe4bb, 0xe6af, 0x0, 0x0);
        gbc.writeMem(0x228b, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x1f75, gbc.sp());
        EXPECT(0x228c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0312
        gbc.setState(0x818, 0x63a9, 0xff10, 0xfb06, 0x5901, 0xc1c3, 0x1, 0x0);
        gbc.writeMem(0x818, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x63a9, gbc.sp());
        EXPECT(0x819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0313
        gbc.setState(0x8d08, 0xe77a, 0xdac0, 0x383c, 0xe2d9, 0x90c2, 0x1, 0x0);
        gbc.writeMem(0x8d08, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe77a, gbc.sp());
        EXPECT(0x8d09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8d08));
        // 00 0315
        gbc.setState(0x1c52, 0x4a3c, 0x6bf0, 0x354, 0x7706, 0xdf, 0x1, 0x1);
        gbc.writeMem(0x1c52, { 0x0 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x4a3c, gbc.sp());
        EXPECT(0x1c53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0316
        gbc.setState(0xc781, 0x1993, 0xdbd0, 0x49ec, 0x4032, 0xf314, 0x1, 0x0);
        gbc.writeMem(0xc781, { 0x0 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1993, gbc.sp());
        EXPECT(0xc782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc781));
        // 00 0317
        gbc.setState(0xae82, 0x77aa, 0xc230, 0xff57, 0x7bfc, 0x8815, 0x1, 0x1);
        gbc.writeMem(0xae82, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x77aa, gbc.sp());
        EXPECT(0xae83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xae82));
        // 00 0318
        gbc.setState(0x30b6, 0x3320, 0xe890, 0xb4da, 0x241f, 0x5ff4, 0x0, 0x1);
        gbc.writeMem(0x30b6, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x3320, gbc.sp());
        EXPECT(0x30b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0319
        gbc.setState(0x16a0, 0x2bfe, 0xb960, 0x1b92, 0xbd60, 0x7e1e, 0x0, 0x1);
        gbc.writeMem(0x16a0, { 0x0 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x2bfe, gbc.sp());
        EXPECT(0x16a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 031A
        gbc.setState(0x6aee, 0x15d9, 0x6570, 0xf878, 0xf4da, 0xd72a, 0x0, 0x0);
        gbc.writeMem(0x6aee, { 0x0 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x15d9, gbc.sp());
        EXPECT(0x6aef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 031B
        gbc.setState(0x636d, 0x5a76, 0x20, 0xe18d, 0xace1, 0xa1eb, 0x0, 0x0);
        gbc.writeMem(0x636d, { 0x0 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5a76, gbc.sp());
        EXPECT(0x636e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 031C
        gbc.setState(0x21ec, 0xf1a4, 0xc520, 0xb218, 0xa3b0, 0xe5b8, 0x1, 0x0);
        gbc.writeMem(0x21ec, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xf1a4, gbc.sp());
        EXPECT(0x21ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 031E
        gbc.setState(0x134b, 0x80b8, 0xfd0, 0x2a01, 0x1e74, 0x7d27, 0x0, 0x1);
        gbc.writeMem(0x134b, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x80b8, gbc.sp());
        EXPECT(0x134c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0320
        gbc.setState(0xaea0, 0xe4ef, 0x73c0, 0x48b7, 0xb8eb, 0x451b, 0x0, 0x0);
        gbc.writeMem(0xaea0, { 0x0 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xe4ef, gbc.sp());
        EXPECT(0xaea1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaea0));
        // 00 0321
        gbc.setState(0xd97b, 0x115d, 0x1de0, 0x749c, 0x5d1f, 0x12cc, 0x0, 0x1);
        gbc.writeMem(0xd97b, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x115d, gbc.sp());
        EXPECT(0xd97c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd97b));
        // 00 0322
        gbc.setState(0x27b0, 0x6d34, 0x1820, 0xedb, 0x3d6f, 0xa023, 0x1, 0x1);
        gbc.writeMem(0x27b0, { 0x0 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x6d34, gbc.sp());
        EXPECT(0x27b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0323
        gbc.setState(0xe33f, 0xeb83, 0xa20, 0xbf5a, 0x6902, 0x1abe, 0x1, 0x1);
        gbc.writeMem(0xe33f, { 0x0 });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xeb83, gbc.sp());
        EXPECT(0xe340, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe33f));
        // 00 0324
        gbc.setState(0x2994, 0xc6ba, 0x5270, 0x8198, 0xea36, 0x5b51, 0x1, 0x0);
        gbc.writeMem(0x2994, { 0x0 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc6ba, gbc.sp());
        EXPECT(0x2995, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0325
        gbc.setState(0xaf09, 0x3a47, 0x4130, 0x241b, 0xc840, 0xe4e0, 0x0, 0x0);
        gbc.writeMem(0xaf09, { 0x0 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3a47, gbc.sp());
        EXPECT(0xaf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaf09));
        // 00 0326
        gbc.setState(0xb8ae, 0x34bb, 0x6240, 0x382, 0x6e99, 0x263e, 0x0, 0x0);
        gbc.writeMem(0xb8ae, { 0x0 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x34bb, gbc.sp());
        EXPECT(0xb8af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb8ae));
        // 00 0327
        gbc.setState(0x82d8, 0x20e9, 0x76d0, 0x117b, 0x882c, 0x35fa, 0x0, 0x1);
        gbc.writeMem(0x82d8, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x20e9, gbc.sp());
        EXPECT(0x82d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x82d8));
        // 00 0328
        gbc.setState(0x2c4, 0xc8b2, 0x1580, 0xa2b3, 0xed23, 0x70ff, 0x1, 0x0);
        gbc.writeMem(0x2c4, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xc8b2, gbc.sp());
        EXPECT(0x2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0329
        gbc.setState(0x35b7, 0x1266, 0xa130, 0x858e, 0x7e52, 0xf72b, 0x1, 0x1);
        gbc.writeMem(0x35b7, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x1266, gbc.sp());
        EXPECT(0x35b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 032B
        gbc.setState(0x3f51, 0x661c, 0x7810, 0x6fd7, 0xbf13, 0xd49d, 0x0, 0x0);
        gbc.writeMem(0x3f51, { 0x0 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x661c, gbc.sp());
        EXPECT(0x3f52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 032C
        gbc.setState(0x3412, 0x2fb0, 0x2080, 0xf688, 0x2c50, 0x4254, 0x0, 0x0);
        gbc.writeMem(0x3412, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x2fb0, gbc.sp());
        EXPECT(0x3413, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 032D
        gbc.setState(0x4567, 0xf835, 0xeb60, 0x5dcf, 0x23f1, 0x3920, 0x0, 0x0);
        gbc.writeMem(0x4567, { 0x0 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xf835, gbc.sp());
        EXPECT(0x4568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 032E
        gbc.setState(0x96cc, 0xb582, 0xc40, 0x7c05, 0x6ac2, 0x92a3, 0x0, 0x0);
        gbc.writeMem(0x96cc, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb582, gbc.sp());
        EXPECT(0x96cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x96cc));
        // 00 032F
        gbc.setState(0xe5a4, 0xd269, 0x3500, 0xc196, 0x7d14, 0x16fc, 0x0, 0x1);
        gbc.writeMem(0xe5a4, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xd269, gbc.sp());
        EXPECT(0xe5a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe5a4));
        // 00 0330
        gbc.setState(0x244d, 0x7efd, 0xf000, 0x20e9, 0xf6a3, 0xee3f, 0x1, 0x1);
        gbc.writeMem(0x244d, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x7efd, gbc.sp());
        EXPECT(0x244e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0331
        gbc.setState(0xb68c, 0x7f0f, 0xa460, 0x6d4f, 0xea28, 0xbf6e, 0x1, 0x0);
        gbc.writeMem(0xb68c, { 0x0 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x7f0f, gbc.sp());
        EXPECT(0xb68d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb68c));
        // 00 0332
        gbc.setState(0x6143, 0xba48, 0x4d90, 0x7d98, 0x4d11, 0xaae8, 0x1, 0x0);
        gbc.writeMem(0x6143, { 0x0 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xba48, gbc.sp());
        EXPECT(0x6144, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0333
        gbc.setState(0xbbba, 0x3499, 0xce50, 0xb1a8, 0x88ca, 0xc78e, 0x1, 0x0);
        gbc.writeMem(0xbbba, { 0x0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x3499, gbc.sp());
        EXPECT(0xbbbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbbba));
        // 00 0334
        gbc.setState(0x8e80, 0xe7e4, 0xe280, 0xec9c, 0xce7d, 0x7ddf, 0x0, 0x0);
        gbc.writeMem(0x8e80, { 0x0 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0xe7e4, gbc.sp());
        EXPECT(0x8e81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8e80));
        // 00 0335
        gbc.setState(0xef00, 0x3a18, 0x7630, 0xd0a1, 0xb18a, 0x5340, 0x0, 0x0);
        gbc.writeMem(0xef00, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x3a18, gbc.sp());
        EXPECT(0xef01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xef00));
        // 00 0336
        gbc.setState(0xbb7, 0x5392, 0x7590, 0xd1d2, 0xc14c, 0xa36d, 0x0, 0x0);
        gbc.writeMem(0xbb7, { 0x0 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x5392, gbc.sp());
        EXPECT(0xbb8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0337
        gbc.setState(0x5595, 0xf5ab, 0x1600, 0x77b2, 0xc68c, 0x4785, 0x1, 0x0);
        gbc.writeMem(0x5595, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf5ab, gbc.sp());
        EXPECT(0x5596, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0339
        gbc.setState(0xdf78, 0xcac3, 0x42b0, 0xbde3, 0x932f, 0x3766, 0x1, 0x1);
        gbc.writeMem(0xdf78, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xcac3, gbc.sp());
        EXPECT(0xdf79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdf78));
        // 00 033A
        gbc.setState(0xae30, 0xaf46, 0xdda0, 0x66d9, 0x67a8, 0xf537, 0x0, 0x0);
        gbc.writeMem(0xae30, { 0x0 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xaf46, gbc.sp());
        EXPECT(0xae31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xae30));
        // 00 033B
        gbc.setState(0x2aaf, 0xf1a1, 0xb70, 0xcb7d, 0xf455, 0x9651, 0x1, 0x1);
        gbc.writeMem(0x2aaf, { 0x0 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xf1a1, gbc.sp());
        EXPECT(0x2ab0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 033C
        gbc.setState(0xd4ab, 0xc848, 0xf50, 0xe0fd, 0xfb48, 0x4fb4, 0x0, 0x0);
        gbc.writeMem(0xd4ab, { 0x0 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xc848, gbc.sp());
        EXPECT(0xd4ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd4ab));
        // 00 033D
        gbc.setState(0x7793, 0x27c, 0xa140, 0x414, 0x34c5, 0x8c09, 0x1, 0x0);
        gbc.writeMem(0x7793, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x27c, gbc.sp());
        EXPECT(0x7794, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 033E
        gbc.setState(0x9104, 0x453, 0x9920, 0x9adc, 0xa69b, 0x184e, 0x0, 0x1);
        gbc.writeMem(0x9104, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x453, gbc.sp());
        EXPECT(0x9105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9104));
        // 00 033F
        gbc.setState(0x4aeb, 0x603, 0xd310, 0x2d53, 0x17d0, 0x7f2c, 0x0, 0x1);
        gbc.writeMem(0x4aeb, { 0x0 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x603, gbc.sp());
        EXPECT(0x4aec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0340
        gbc.setState(0x1dca, 0xbe35, 0xed60, 0x1f74, 0xf35, 0x1afc, 0x1, 0x1);
        gbc.writeMem(0x1dca, { 0x0 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xbe35, gbc.sp());
        EXPECT(0x1dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0341
        gbc.setState(0x1ace, 0x22ef, 0x14b0, 0x33c1, 0xbc, 0x669d, 0x1, 0x1);
        gbc.writeMem(0x1ace, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x22ef, gbc.sp());
        EXPECT(0x1acf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0342
        gbc.setState(0xbb44, 0xbd0f, 0x82b0, 0x24e3, 0xd065, 0x27b5, 0x1, 0x0);
        gbc.writeMem(0xbb44, { 0x0 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xbd0f, gbc.sp());
        EXPECT(0xbb45, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbb44));
        // 00 0343
        gbc.setState(0x1a8d, 0x8050, 0xf000, 0x747e, 0xa96f, 0xa3b3, 0x1, 0x0);
        gbc.writeMem(0x1a8d, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8050, gbc.sp());
        EXPECT(0x1a8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0344
        gbc.setState(0x634b, 0xf689, 0x360, 0x9e05, 0xcedb, 0x88d8, 0x1, 0x1);
        gbc.writeMem(0x634b, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xf689, gbc.sp());
        EXPECT(0x634c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0345
        gbc.setState(0xd3df, 0x55be, 0x7940, 0xe67a, 0xdbb2, 0x64e6, 0x0, 0x0);
        gbc.writeMem(0xd3df, { 0x0 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x55be, gbc.sp());
        EXPECT(0xd3e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd3df));
        // 00 0346
        gbc.setState(0x2c47, 0x28d, 0xe30, 0x6f0f, 0x503c, 0x821d, 0x1, 0x0);
        gbc.writeMem(0x2c47, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x28d, gbc.sp());
        EXPECT(0x2c48, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0347
        gbc.setState(0x60f9, 0xda79, 0x5130, 0x31aa, 0x4fbe, 0x6fac, 0x0, 0x0);
        gbc.writeMem(0x60f9, { 0x0 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xda79, gbc.sp());
        EXPECT(0x60fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0348
        gbc.setState(0x7818, 0xc31, 0xd480, 0x3c16, 0x927a, 0x1bca, 0x1, 0x0);
        gbc.writeMem(0x7818, { 0x0 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xc31, gbc.sp());
        EXPECT(0x7819, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0349
        gbc.setState(0x3fa1, 0x4d67, 0x3ae0, 0x9eb1, 0xc8dd, 0x257a, 0x1, 0x1);
        gbc.writeMem(0x3fa1, { 0x0 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x4d67, gbc.sp());
        EXPECT(0x3fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 034A
        gbc.setState(0x4cfb, 0x4f41, 0xc3c0, 0x7778, 0x5bbd, 0xc754, 0x1, 0x1);
        gbc.writeMem(0x4cfb, { 0x0 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x4f41, gbc.sp());
        EXPECT(0x4cfc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 034C
        gbc.setState(0x9306, 0xaacc, 0x6830, 0x5b64, 0x8b32, 0xfaa7, 0x0, 0x0);
        gbc.writeMem(0x9306, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xaacc, gbc.sp());
        EXPECT(0x9307, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9306));
        // 00 034D
        gbc.setState(0xdcad, 0xcf6c, 0xdf60, 0x4467, 0x2389, 0x9dd3, 0x1, 0x1);
        gbc.writeMem(0xdcad, { 0x0 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xcf6c, gbc.sp());
        EXPECT(0xdcae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdcad));
        // 00 034E
        gbc.setState(0xbe0d, 0x9ccb, 0xda40, 0x5743, 0xb432, 0xce28, 0x0, 0x1);
        gbc.writeMem(0xbe0d, { 0x0 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x9ccb, gbc.sp());
        EXPECT(0xbe0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbe0d));
        // 00 034F
        gbc.setState(0xccc5, 0x2941, 0x1a0, 0xb955, 0xf476, 0x9636, 0x0, 0x1);
        gbc.writeMem(0xccc5, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x2941, gbc.sp());
        EXPECT(0xccc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xccc5));
        // 00 0350
        gbc.setState(0xbe4d, 0x9dac, 0x9b00, 0x7fa3, 0x9072, 0x810c, 0x0, 0x1);
        gbc.writeMem(0xbe4d, { 0x0 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x9dac, gbc.sp());
        EXPECT(0xbe4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbe4d));
        // 00 0351
        gbc.setState(0x7efe, 0xa49d, 0x6c10, 0x6c1a, 0xeeb, 0xede6, 0x0, 0x0);
        gbc.writeMem(0x7efe, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa49d, gbc.sp());
        EXPECT(0x7eff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0352
        gbc.setState(0x76dd, 0xb888, 0xe70, 0x1e25, 0x1d2b, 0xec3f, 0x0, 0x1);
        gbc.writeMem(0x76dd, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb888, gbc.sp());
        EXPECT(0x76de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0353
        gbc.setState(0x9d81, 0xd082, 0x1730, 0x33af, 0xa699, 0xb530, 0x1, 0x1);
        gbc.writeMem(0x9d81, { 0x0 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xd082, gbc.sp());
        EXPECT(0x9d82, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9d81));
        // 00 0354
        gbc.setState(0x4727, 0x7323, 0xac60, 0xdd77, 0xceff, 0x7180, 0x1, 0x1);
        gbc.writeMem(0x4727, { 0x0 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7323, gbc.sp());
        EXPECT(0x4728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0355
        gbc.setState(0xb0, 0xf15f, 0x4ed0, 0xe6a, 0x2562, 0xdd74, 0x0, 0x1);
        gbc.writeMem(0xb0, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf15f, gbc.sp());
        EXPECT(0xb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0356
        gbc.setState(0xa20e, 0x28b9, 0x5540, 0x13f4, 0x813f, 0x7809, 0x1, 0x0);
        gbc.writeMem(0xa20e, { 0x0 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x28b9, gbc.sp());
        EXPECT(0xa20f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa20e));
        // 00 0357
        gbc.setState(0x5abd, 0x5776, 0x76a0, 0x4092, 0x1f60, 0xbcdb, 0x0, 0x1);
        gbc.writeMem(0x5abd, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5776, gbc.sp());
        EXPECT(0x5abe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0358
        gbc.setState(0xad7d, 0xe755, 0xc010, 0x90a, 0xa0a5, 0x3c15, 0x1, 0x0);
        gbc.writeMem(0xad7d, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xe755, gbc.sp());
        EXPECT(0xad7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xad7d));
        // 00 0359
        gbc.setState(0x74b8, 0xc93f, 0x4280, 0x7bbb, 0xb9b0, 0xdcde, 0x1, 0x0);
        gbc.writeMem(0x74b8, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xc93f, gbc.sp());
        EXPECT(0x74b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 035A
        gbc.setState(0x3197, 0x3975, 0x5a70, 0x1310, 0xd949, 0x1d86, 0x0, 0x0);
        gbc.writeMem(0x3197, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3975, gbc.sp());
        EXPECT(0x3198, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 035B
        gbc.setState(0xbeb8, 0x75b, 0xc2c0, 0xcabe, 0x1cb3, 0xe849, 0x0, 0x1);
        gbc.writeMem(0xbeb8, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x75b, gbc.sp());
        EXPECT(0xbeb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbeb8));
        // 00 035C
        gbc.setState(0x500d, 0x5a80, 0x1520, 0x4980, 0x11a6, 0x241a, 0x1, 0x0);
        gbc.writeMem(0x500d, { 0x0 });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x5a80, gbc.sp());
        EXPECT(0x500e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 035D
        gbc.setState(0x1d66, 0x5588, 0x89b0, 0x954e, 0x7fc0, 0x848c, 0x0, 0x0);
        gbc.writeMem(0x1d66, { 0x0 });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x5588, gbc.sp());
        EXPECT(0x1d67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 035E
        gbc.setState(0xacbf, 0x8455, 0x9b0, 0x7247, 0xc470, 0x818c, 0x1, 0x0);
        gbc.writeMem(0xacbf, { 0x0 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x8455, gbc.sp());
        EXPECT(0xacc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xacbf));
        // 00 035F
        gbc.setState(0x7298, 0x6ad6, 0x9290, 0x310a, 0xae10, 0x4ffd, 0x1, 0x1);
        gbc.writeMem(0x7298, { 0x0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6ad6, gbc.sp());
        EXPECT(0x7299, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0360
        gbc.setState(0x3f54, 0x533, 0xc690, 0xd7f3, 0xea5, 0x3561, 0x0, 0x0);
        gbc.writeMem(0x3f54, { 0x0 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x533, gbc.sp());
        EXPECT(0x3f55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0361
        gbc.setState(0x576c, 0x2b04, 0x290, 0xfa79, 0xd020, 0x4744, 0x1, 0x0);
        gbc.writeMem(0x576c, { 0x0 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x2b04, gbc.sp());
        EXPECT(0x576d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0362
        gbc.setState(0x5589, 0x7508, 0xff40, 0x600c, 0x638d, 0xba7c, 0x0, 0x0);
        gbc.writeMem(0x5589, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x7508, gbc.sp());
        EXPECT(0x558a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0363
        gbc.setState(0x6686, 0xbbf5, 0x1910, 0x9e98, 0xd211, 0x206b, 0x1, 0x0);
        gbc.writeMem(0x6686, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xbbf5, gbc.sp());
        EXPECT(0x6687, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0364
        gbc.setState(0xd1db, 0x2a09, 0xe5f0, 0xc526, 0x9a85, 0xdf21, 0x0, 0x1);
        gbc.writeMem(0xd1db, { 0x0 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2a09, gbc.sp());
        EXPECT(0xd1dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd1db));
        // 00 0365
        gbc.setState(0x1c62, 0x548b, 0xfdb0, 0xf9de, 0xcffa, 0x47dc, 0x1, 0x0);
        gbc.writeMem(0x1c62, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x548b, gbc.sp());
        EXPECT(0x1c63, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0366
        gbc.setState(0x481c, 0xc50e, 0x94b0, 0x7f8a, 0x14f9, 0xe029, 0x0, 0x0);
        gbc.writeMem(0x481c, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc50e, gbc.sp());
        EXPECT(0x481d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0367
        gbc.setState(0xe93f, 0xe636, 0x4be0, 0x5ec9, 0xcbea, 0x664d, 0x1, 0x0);
        gbc.writeMem(0xe93f, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe636, gbc.sp());
        EXPECT(0xe940, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe93f));
        // 00 0368
        gbc.setState(0x61f4, 0xddf5, 0xb810, 0x8afa, 0xdf10, 0x9cfc, 0x0, 0x0);
        gbc.writeMem(0x61f4, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xddf5, gbc.sp());
        EXPECT(0x61f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0369
        gbc.setState(0x557, 0xe596, 0xb850, 0x4c10, 0x14d1, 0xa76e, 0x0, 0x1);
        gbc.writeMem(0x557, { 0x0 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe596, gbc.sp());
        EXPECT(0x558, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 036A
        gbc.setState(0x492d, 0x466f, 0x780, 0x139e, 0xc1db, 0x9da0, 0x1, 0x1);
        gbc.writeMem(0x492d, { 0x0 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x466f, gbc.sp());
        EXPECT(0x492e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 036B
        gbc.setState(0x68a8, 0x3b33, 0x5a70, 0x2590, 0xc058, 0x4208, 0x1, 0x0);
        gbc.writeMem(0x68a8, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3b33, gbc.sp());
        EXPECT(0x68a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 036C
        gbc.setState(0x5b20, 0x3d87, 0xc0d0, 0x651b, 0x8b54, 0x5396, 0x1, 0x0);
        gbc.writeMem(0x5b20, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x3d87, gbc.sp());
        EXPECT(0x5b21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 036D
        gbc.setState(0x9b34, 0x2a62, 0xd9b0, 0xa63c, 0x294b, 0xc2f7, 0x1, 0x0);
        gbc.writeMem(0x9b34, { 0x0 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x2a62, gbc.sp());
        EXPECT(0x9b35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9b34));
        // 00 036E
        gbc.setState(0xd9d1, 0x7019, 0xfd60, 0xa96, 0xdff6, 0x2743, 0x1, 0x0);
        gbc.writeMem(0xd9d1, { 0x0 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x7019, gbc.sp());
        EXPECT(0xd9d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd9d1));
        // 00 036F
        gbc.setState(0xe01f, 0xbb9f, 0x2030, 0x3958, 0x7314, 0xaf17, 0x1, 0x1);
        gbc.writeMem(0xe01f, { 0x0 });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xbb9f, gbc.sp());
        EXPECT(0xe020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe01f));
        // 00 0370
        gbc.setState(0x2392, 0x5c2a, 0x340, 0x5ed5, 0x21b3, 0xa820, 0x1, 0x0);
        gbc.writeMem(0x2392, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x5c2a, gbc.sp());
        EXPECT(0x2393, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0371
        gbc.setState(0x82c1, 0x67fd, 0x1160, 0x384a, 0x30ff, 0x227c, 0x0, 0x1);
        gbc.writeMem(0x82c1, { 0x0 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x67fd, gbc.sp());
        EXPECT(0x82c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x82c1));
        // 00 0372
        gbc.setState(0x92af, 0xd672, 0xffd0, 0xacae, 0xc97, 0xe6dd, 0x1, 0x1);
        gbc.writeMem(0x92af, { 0x0 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xd672, gbc.sp());
        EXPECT(0x92b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x92af));
        // 00 0373
        gbc.setState(0x4895, 0x403d, 0x2a30, 0x297a, 0x1b7d, 0x371a, 0x0, 0x1);
        gbc.writeMem(0x4895, { 0x0 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x403d, gbc.sp());
        EXPECT(0x4896, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0375
        gbc.setState(0x73d2, 0xd83b, 0x6770, 0x3397, 0x2172, 0xf78f, 0x1, 0x1);
        gbc.writeMem(0x73d2, { 0x0 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xd83b, gbc.sp());
        EXPECT(0x73d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0376
        gbc.setState(0x7386, 0xd1c4, 0xa1c0, 0xd437, 0x36bc, 0x745a, 0x0, 0x0);
        gbc.writeMem(0x7386, { 0x0 });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xd1c4, gbc.sp());
        EXPECT(0x7387, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0377
        gbc.setState(0xb99f, 0xb604, 0xdce0, 0x4809, 0x994a, 0x9146, 0x1, 0x0);
        gbc.writeMem(0xb99f, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xb604, gbc.sp());
        EXPECT(0xb9a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb99f));
        // 00 0378
        gbc.setState(0x66d1, 0x5021, 0x4320, 0xf3d2, 0xd5a9, 0x91a6, 0x1, 0x0);
        gbc.writeMem(0x66d1, { 0x0 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x5021, gbc.sp());
        EXPECT(0x66d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0379
        gbc.setState(0xdcf6, 0x3f5d, 0xe4d0, 0x65f2, 0xc5f0, 0x789d, 0x0, 0x1);
        gbc.writeMem(0xdcf6, { 0x0 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x3f5d, gbc.sp());
        EXPECT(0xdcf7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdcf6));
        // 00 037A
        gbc.setState(0x2301, 0x7f8c, 0x8710, 0xb8cf, 0x8e18, 0x4b80, 0x1, 0x0);
        gbc.writeMem(0x2301, { 0x0 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7f8c, gbc.sp());
        EXPECT(0x2302, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 037B
        gbc.setState(0xd4db, 0x8278, 0x94c0, 0xc688, 0x5ee2, 0x8482, 0x0, 0x1);
        gbc.writeMem(0xd4db, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x8278, gbc.sp());
        EXPECT(0xd4dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd4db));
        // 00 037C
        gbc.setState(0xd03b, 0x711d, 0xc290, 0xecae, 0x2fb, 0x8c4b, 0x1, 0x0);
        gbc.writeMem(0xd03b, { 0x0 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x711d, gbc.sp());
        EXPECT(0xd03c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd03b));
        // 00 037D
        gbc.setState(0xa01f, 0x8768, 0x4aa0, 0xc3ff, 0x387a, 0xf8fc, 0x1, 0x1);
        gbc.writeMem(0xa01f, { 0x0 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x8768, gbc.sp());
        EXPECT(0xa020, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa01f));
        // 00 037F
        gbc.setState(0xbf73, 0x1926, 0xdcf0, 0x3754, 0x59c7, 0x1173, 0x1, 0x1);
        gbc.writeMem(0xbf73, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x1926, gbc.sp());
        EXPECT(0xbf74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbf73));
        // 00 0380
        gbc.setState(0xabad, 0xe347, 0x6d90, 0x6d3d, 0x338b, 0x2f32, 0x0, 0x1);
        gbc.writeMem(0xabad, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe347, gbc.sp());
        EXPECT(0xabae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xabad));
        // 00 0381
        gbc.setState(0x7498, 0xac69, 0x8f40, 0xda07, 0x87a1, 0x8796, 0x1, 0x1);
        gbc.writeMem(0x7498, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xac69, gbc.sp());
        EXPECT(0x7499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0382
        gbc.setState(0xb02b, 0xc492, 0x8b10, 0xe7a2, 0xbb79, 0x2a01, 0x1, 0x0);
        gbc.writeMem(0xb02b, { 0x0 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc492, gbc.sp());
        EXPECT(0xb02c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xb02b));
        // 00 0383
        gbc.setState(0x914, 0x3081, 0xeec0, 0x34d9, 0xe62b, 0x88aa, 0x0, 0x0);
        gbc.writeMem(0x914, { 0x0 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x3081, gbc.sp());
        EXPECT(0x915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0384
        gbc.setState(0x6427, 0xe275, 0xbd90, 0xffc3, 0x1751, 0x99a9, 0x0, 0x0);
        gbc.writeMem(0x6427, { 0x0 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xe275, gbc.sp());
        EXPECT(0x6428, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0385
        gbc.setState(0x7865, 0x7094, 0xc0d0, 0xbb69, 0xaffa, 0x90c6, 0x1, 0x1);
        gbc.writeMem(0x7865, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7094, gbc.sp());
        EXPECT(0x7866, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0386
        gbc.setState(0x54de, 0x442a, 0xa900, 0xcd8b, 0x1535, 0x14db, 0x1, 0x1);
        gbc.writeMem(0x54de, { 0x0 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x442a, gbc.sp());
        EXPECT(0x54df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0387
        gbc.setState(0x29b6, 0x2f00, 0x4ec0, 0xeb11, 0xa2f, 0xe35c, 0x0, 0x1);
        gbc.writeMem(0x29b6, { 0x0 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x2f00, gbc.sp());
        EXPECT(0x29b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0388
        gbc.setState(0x11a6, 0x30a0, 0x9480, 0x6b4c, 0x730, 0xe8c4, 0x0, 0x1);
        gbc.writeMem(0x11a6, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x30a0, gbc.sp());
        EXPECT(0x11a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0389
        gbc.setState(0x46db, 0x8bee, 0x34b0, 0xcc3b, 0x8638, 0xce3d, 0x1, 0x1);
        gbc.writeMem(0x46db, { 0x0 });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x8bee, gbc.sp());
        EXPECT(0x46dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 038B
        gbc.setState(0x2f55, 0x9b2d, 0x86f0, 0x4f3a, 0x3091, 0x6d0a, 0x1, 0x0);
        gbc.writeMem(0x2f55, { 0x0 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x9b2d, gbc.sp());
        EXPECT(0x2f56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 038C
        gbc.setState(0xcc3b, 0xd05f, 0x2cb0, 0x2ab6, 0x7119, 0xa43c, 0x1, 0x0);
        gbc.writeMem(0xcc3b, { 0x0 });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xd05f, gbc.sp());
        EXPECT(0xcc3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcc3b));
        // 00 038D
        gbc.setState(0x7fa1, 0xb806, 0x1ce0, 0x812d, 0x824b, 0x3b8b, 0x1, 0x0);
        gbc.writeMem(0x7fa1, { 0x0 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb806, gbc.sp());
        EXPECT(0x7fa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 038E
        gbc.setState(0xaa31, 0x50f2, 0xe60, 0x413c, 0x60fc, 0xe333, 0x0, 0x1);
        gbc.writeMem(0xaa31, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x50f2, gbc.sp());
        EXPECT(0xaa32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xaa31));
        // 00 038F
        gbc.setState(0x3305, 0x6b09, 0xf270, 0x6b47, 0x55ec, 0x2d25, 0x0, 0x0);
        gbc.writeMem(0x3305, { 0x0 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x6b09, gbc.sp());
        EXPECT(0x3306, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0390
        gbc.setState(0xe908, 0x6664, 0x9400, 0x59d8, 0x49e7, 0xcc2a, 0x0, 0x1);
        gbc.writeMem(0xe908, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x6664, gbc.sp());
        EXPECT(0xe909, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe908));
        // 00 0391
        gbc.setState(0x52b1, 0xe34f, 0x8db0, 0x108f, 0xdc2e, 0x314e, 0x0, 0x1);
        gbc.writeMem(0x52b1, { 0x0 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe34f, gbc.sp());
        EXPECT(0x52b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 0393
        gbc.setState(0xa060, 0x18ad, 0x58f0, 0xbd28, 0x1ec8, 0xcd41, 0x1, 0x0);
        gbc.writeMem(0xa060, { 0x0 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x18ad, gbc.sp());
        EXPECT(0xa061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa060));
        // 00 0394
        gbc.setState(0xed3, 0x1097, 0x1d20, 0xe695, 0xe813, 0xc36b, 0x0, 0x1);
        gbc.writeMem(0xed3, { 0x0 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x1097, gbc.sp());
        EXPECT(0xed4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0395
        gbc.setState(0x24dc, 0xc880, 0x8a0, 0xca43, 0xc1bf, 0x27b6, 0x0, 0x1);
        gbc.writeMem(0x24dc, { 0x0 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xc880, gbc.sp());
        EXPECT(0x24dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0396
        gbc.setState(0x32db, 0xbb67, 0x6d60, 0xdc00, 0x443a, 0xcd85, 0x0, 0x1);
        gbc.writeMem(0x32db, { 0x0 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xbb67, gbc.sp());
        EXPECT(0x32dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 0397
        gbc.setState(0xa972, 0x2bad, 0xbb70, 0xf4e4, 0xd20, 0xb30, 0x1, 0x0);
        gbc.writeMem(0xa972, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x2bad, gbc.sp());
        EXPECT(0xa973, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa972));
        // 00 0398
        gbc.setState(0x935a, 0xf2fb, 0x9a10, 0x5979, 0xa7a5, 0xc622, 0x1, 0x0);
        gbc.writeMem(0x935a, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xf2fb, gbc.sp());
        EXPECT(0x935b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x935a));
        // 00 0399
        gbc.setState(0x661b, 0x2e61, 0x4ba0, 0x9ecb, 0xfdb9, 0xb3ed, 0x1, 0x1);
        gbc.writeMem(0x661b, { 0x0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x2e61, gbc.sp());
        EXPECT(0x661c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 039A
        gbc.setState(0x6533, 0x1ac1, 0x4490, 0xb031, 0x3b9f, 0xa5dc, 0x1, 0x1);
        gbc.writeMem(0x6533, { 0x0 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x1ac1, gbc.sp());
        EXPECT(0x6534, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 039B
        gbc.setState(0x8145, 0x2b07, 0x1fb0, 0x8d6c, 0x58a1, 0xce64, 0x1, 0x0);
        gbc.writeMem(0x8145, { 0x0 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x2b07, gbc.sp());
        EXPECT(0x8146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8145));
        // 00 039C
        gbc.setState(0x578c, 0xdab5, 0x1940, 0x1775, 0xac0b, 0xe709, 0x1, 0x0);
        gbc.writeMem(0x578c, { 0x0 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xdab5, gbc.sp());
        EXPECT(0x578d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 039D
        gbc.setState(0xc09c, 0x7452, 0xbfa0, 0x16a0, 0x24d5, 0xbd11, 0x1, 0x0);
        gbc.writeMem(0xc09c, { 0x0 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x7452, gbc.sp());
        EXPECT(0xc09d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc09c));
        // 00 039E
        gbc.setState(0xe7c4, 0x35c5, 0x3000, 0xc99b, 0x4921, 0xaaf7, 0x0, 0x0);
        gbc.writeMem(0xe7c4, { 0x0 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x35c5, gbc.sp());
        EXPECT(0xe7c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xe7c4));
        // 00 039F
        gbc.setState(0x6e39, 0x39a5, 0xf310, 0x6b7, 0x8d36, 0x6b81, 0x0, 0x1);
        gbc.writeMem(0x6e39, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x39a5, gbc.sp());
        EXPECT(0x6e3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03A0
        gbc.setState(0xbb75, 0x55b0, 0x9970, 0x3639, 0x9e40, 0x752a, 0x0, 0x1);
        gbc.writeMem(0xbb75, { 0x0 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x55b0, gbc.sp());
        EXPECT(0xbb76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbb75));
        // 00 03A1
        gbc.setState(0x76c0, 0x2270, 0x5970, 0x7ff2, 0xbde6, 0xe2a, 0x1, 0x1);
        gbc.writeMem(0x76c0, { 0x0 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x2270, gbc.sp());
        EXPECT(0x76c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03A2
        gbc.setState(0x5f1a, 0x7c54, 0x7620, 0xb31d, 0xac59, 0x2ce0, 0x1, 0x0);
        gbc.writeMem(0x5f1a, { 0x0 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x7c54, gbc.sp());
        EXPECT(0x5f1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03A3
        gbc.setState(0xa229, 0xd86b, 0xfe90, 0x8262, 0x5ed0, 0xf799, 0x0, 0x0);
        gbc.writeMem(0xa229, { 0x0 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd86b, gbc.sp());
        EXPECT(0xa22a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa229));
        // 00 03A4
        gbc.setState(0x34cc, 0xb39c, 0xb470, 0x4b5d, 0x52d7, 0xf558, 0x0, 0x0);
        gbc.writeMem(0x34cc, { 0x0 });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xb39c, gbc.sp());
        EXPECT(0x34cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03A5
        gbc.setState(0x595c, 0xf271, 0x1400, 0x69b3, 0x365f, 0x62c7, 0x1, 0x0);
        gbc.writeMem(0x595c, { 0x0 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf271, gbc.sp());
        EXPECT(0x595d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03A6
        gbc.setState(0x3b64, 0xc537, 0xb560, 0x1130, 0x3ae4, 0x113a, 0x1, 0x0);
        gbc.writeMem(0x3b64, { 0x0 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc537, gbc.sp());
        EXPECT(0x3b65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03A7
        gbc.setState(0x175d, 0xdea0, 0xf040, 0x4bbc, 0x4c79, 0x21da, 0x0, 0x1);
        gbc.writeMem(0x175d, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xdea0, gbc.sp());
        EXPECT(0x175e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03A8
        gbc.setState(0x3196, 0xf1f2, 0x6e90, 0xab0b, 0xf428, 0x1a38, 0x0, 0x1);
        gbc.writeMem(0x3196, { 0x0 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf1f2, gbc.sp());
        EXPECT(0x3197, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03A9
        gbc.setState(0x3aa1, 0xba4b, 0x130, 0xb3dc, 0x36b7, 0xe4f5, 0x0, 0x0);
        gbc.writeMem(0x3aa1, { 0x0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xba4b, gbc.sp());
        EXPECT(0x3aa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03AA
        gbc.setState(0x2f9e, 0xd213, 0x7730, 0xdf3e, 0x4fe2, 0xb62f, 0x0, 0x1);
        gbc.writeMem(0x2f9e, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xd213, gbc.sp());
        EXPECT(0x2f9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03AB
        gbc.setState(0x72a0, 0xad40, 0xe110, 0x39fb, 0x87ff, 0xf3ac, 0x1, 0x1);
        gbc.writeMem(0x72a0, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xad40, gbc.sp());
        EXPECT(0x72a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03AC
        gbc.setState(0x647a, 0x6755, 0xb7b0, 0xbe45, 0xafed, 0xa438, 0x1, 0x1);
        gbc.writeMem(0x647a, { 0x0 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x6755, gbc.sp());
        EXPECT(0x647b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03AD
        gbc.setState(0x52ac, 0x1634, 0x8f30, 0xe06a, 0xf3f0, 0xd72, 0x0, 0x1);
        gbc.writeMem(0x52ac, { 0x0 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x1634, gbc.sp());
        EXPECT(0x52ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03AE
        gbc.setState(0x7365, 0xe8bf, 0x620, 0xc355, 0xc4f6, 0x2b90, 0x0, 0x0);
        gbc.writeMem(0x7365, { 0x0 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xe8bf, gbc.sp());
        EXPECT(0x7366, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03AF
        gbc.setState(0x53dd, 0x5724, 0x350, 0xc418, 0xc99e, 0x59e5, 0x1, 0x1);
        gbc.writeMem(0x53dd, { 0x0 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5724, gbc.sp());
        EXPECT(0x53de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03B0
        gbc.setState(0x10e1, 0xece8, 0x63c0, 0x6aa9, 0x164a, 0x6cce, 0x1, 0x1);
        gbc.writeMem(0x10e1, { 0x0 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xece8, gbc.sp());
        EXPECT(0x10e2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03B1
        gbc.setState(0xae5b, 0xadd5, 0xd0b0, 0x5f5b, 0xe1ee, 0x640e, 0x0, 0x1);
        gbc.writeMem(0xae5b, { 0x0 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xadd5, gbc.sp());
        EXPECT(0xae5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xae5b));
        // 00 03B2
        gbc.setState(0xef9, 0x25e0, 0x6010, 0x1734, 0xb811, 0xa232, 0x1, 0x1);
        gbc.writeMem(0xef9, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x25e0, gbc.sp());
        EXPECT(0xefa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03B3
        gbc.setState(0x7c4d, 0xbf22, 0x56e0, 0xaa91, 0x1f25, 0x3e9d, 0x1, 0x1);
        gbc.writeMem(0x7c4d, { 0x0 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xbf22, gbc.sp());
        EXPECT(0x7c4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03B4
        gbc.setState(0xba03, 0x44a2, 0x8c70, 0xb9f9, 0x39d5, 0x908c, 0x0, 0x0);
        gbc.writeMem(0xba03, { 0x0 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x44a2, gbc.sp());
        EXPECT(0xba04, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xba03));
        // 00 03B5
        gbc.setState(0xab4f, 0x4d99, 0x4c60, 0xabf7, 0x68d, 0xf7e3, 0x1, 0x1);
        gbc.writeMem(0xab4f, { 0x0 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x4d99, gbc.sp());
        EXPECT(0xab50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xab4f));
        // 00 03B6
        gbc.setState(0xc2d7, 0x47a6, 0x61f0, 0x348f, 0xeb65, 0xc27, 0x1, 0x0);
        gbc.writeMem(0xc2d7, { 0x0 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x47a6, gbc.sp());
        EXPECT(0xc2d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc2d7));
        // 00 03B7
        gbc.setState(0x90ec, 0x2920, 0xe830, 0x5776, 0x91c3, 0xd997, 0x1, 0x0);
        gbc.writeMem(0x90ec, { 0x0 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2920, gbc.sp());
        EXPECT(0x90ed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x90ec));
        // 00 03B8
        gbc.setState(0x8506, 0x7df9, 0x35b0, 0x465a, 0x4e03, 0xa3e3, 0x0, 0x0);
        gbc.writeMem(0x8506, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x7df9, gbc.sp());
        EXPECT(0x8507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8506));
        // 00 03B9
        gbc.setState(0xbe13, 0xfd06, 0x9a20, 0xa92, 0x46f, 0x91b0, 0x0, 0x0);
        gbc.writeMem(0xbe13, { 0x0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xfd06, gbc.sp());
        EXPECT(0xbe14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xbe13));
        // 00 03BA
        gbc.setState(0xdf38, 0x7a26, 0x9670, 0xacc, 0x76c1, 0xca5, 0x1, 0x1);
        gbc.writeMem(0xdf38, { 0x0 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x7a26, gbc.sp());
        EXPECT(0xdf39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xdf38));
        // 00 03BB
        gbc.setState(0x57bf, 0x8b9, 0x3ea0, 0x19ec, 0xa00c, 0x8b65, 0x1, 0x0);
        gbc.writeMem(0x57bf, { 0x0 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x8b9, gbc.sp());
        EXPECT(0x57c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03BC
        gbc.setState(0xd719, 0x653c, 0x6850, 0x980a, 0x1a45, 0xb706, 0x0, 0x1);
        gbc.writeMem(0xd719, { 0x0 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x653c, gbc.sp());
        EXPECT(0xd71a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd719));
        // 00 03BD
        gbc.setState(0xce5f, 0x6b5b, 0xe90, 0xf403, 0x6c95, 0x19f9, 0x0, 0x0);
        gbc.writeMem(0xce5f, { 0x0 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x6b5b, gbc.sp());
        EXPECT(0xce60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xce5f));
        // 00 03BE
        gbc.setState(0x1215, 0x39fc, 0x1a80, 0x9202, 0x440c, 0xfb13, 0x1, 0x1);
        gbc.writeMem(0x1215, { 0x0 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x39fc, gbc.sp());
        EXPECT(0x1216, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03BF
        gbc.setState(0x54af, 0x51c9, 0x6020, 0xdb68, 0x1419, 0xcaa0, 0x0, 0x0);
        gbc.writeMem(0x54af, { 0x0 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x51c9, gbc.sp());
        EXPECT(0x54b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03C0
        gbc.setState(0x382, 0xf53e, 0x5a80, 0x1f79, 0x61de, 0x50ca, 0x1, 0x1);
        gbc.writeMem(0x382, { 0x0 });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xf53e, gbc.sp());
        EXPECT(0x383, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03C1
        gbc.setState(0x519, 0x414c, 0x2990, 0x9491, 0x8fec, 0xceba, 0x1, 0x0);
        gbc.writeMem(0x519, { 0x0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x414c, gbc.sp());
        EXPECT(0x51a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03C2
        gbc.setState(0xc178, 0x8ff0, 0x4210, 0x579c, 0xbd20, 0x3537, 0x1, 0x0);
        gbc.writeMem(0xc178, { 0x0 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x8ff0, gbc.sp());
        EXPECT(0xc179, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xc178));
        // 00 03C3
        gbc.setState(0x9bbe, 0x695, 0xdc00, 0x836f, 0x2d79, 0x7d88, 0x1, 0x0);
        gbc.writeMem(0x9bbe, { 0x0 });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x695, gbc.sp());
        EXPECT(0x9bbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9bbe));
        // 00 03C4
        gbc.setState(0x1077, 0xa999, 0xc50, 0xb434, 0x6167, 0xa0e4, 0x1, 0x0);
        gbc.writeMem(0x1077, { 0x0 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa999, gbc.sp());
        EXPECT(0x1078, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03C5
        gbc.setState(0xd6d7, 0x35e, 0x1620, 0xdf7e, 0x25b2, 0x8629, 0x0, 0x0);
        gbc.writeMem(0xd6d7, { 0x0 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x35e, gbc.sp());
        EXPECT(0xd6d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd6d7));
        // 00 03C6
        gbc.setState(0x90d2, 0xc6bc, 0xfca0, 0xc347, 0x9038, 0xde47, 0x0, 0x1);
        gbc.writeMem(0x90d2, { 0x0 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xc6bc, gbc.sp());
        EXPECT(0x90d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x90d2));
        // 00 03C7
        gbc.setState(0x85e2, 0x7ead, 0xe660, 0x5606, 0xd506, 0xe2f7, 0x1, 0x0);
        gbc.writeMem(0x85e2, { 0x0 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x7ead, gbc.sp());
        EXPECT(0x85e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x85e2));
        // 00 03C8
        gbc.setState(0xd32c, 0x50a3, 0xf3f0, 0x5673, 0x58d5, 0xff95, 0x1, 0x0);
        gbc.writeMem(0xd32c, { 0x0 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x50a3, gbc.sp());
        EXPECT(0xd32d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd32c));
        // 00 03C9
        gbc.setState(0xa209, 0x1c71, 0x9d20, 0xaa03, 0x49b0, 0x876, 0x1, 0x1);
        gbc.writeMem(0xa209, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x1c71, gbc.sp());
        EXPECT(0xa20a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa209));
        // 00 03CA
        gbc.setState(0x43a4, 0xf642, 0xa0a0, 0xbcb3, 0xe6cf, 0xf7a9, 0x0, 0x0);
        gbc.writeMem(0x43a4, { 0x0 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf642, gbc.sp());
        EXPECT(0x43a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03CC
        gbc.setState(0x40d2, 0x599f, 0xa690, 0x5907, 0x342b, 0xb404, 0x0, 0x1);
        gbc.writeMem(0x40d2, { 0x0 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x599f, gbc.sp());
        EXPECT(0x40d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03CD
        gbc.setState(0x44d6, 0x8d74, 0x6c90, 0x74b0, 0x4c50, 0x3cb6, 0x0, 0x0);
        gbc.writeMem(0x44d6, { 0x0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x8d74, gbc.sp());
        EXPECT(0x44d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03CE
        gbc.setState(0x7bbf, 0x63cf, 0x5d90, 0xeadc, 0xc2a0, 0x17d0, 0x0, 0x0);
        gbc.writeMem(0x7bbf, { 0x0 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x63cf, gbc.sp());
        EXPECT(0x7bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03CF
        gbc.setState(0x7776, 0xcca, 0xefd0, 0x351, 0xc7ee, 0xbd13, 0x0, 0x1);
        gbc.writeMem(0x7776, { 0x0 });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xcca, gbc.sp());
        EXPECT(0x7777, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03D1
        gbc.setState(0x7de4, 0x60f2, 0xfb60, 0xb1c, 0xa87d, 0x30c5, 0x0, 0x1);
        gbc.writeMem(0x7de4, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x60f2, gbc.sp());
        EXPECT(0x7de5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03D2
        gbc.setState(0x3efd, 0xbd5c, 0x45d0, 0xd97a, 0x2355, 0xda4b, 0x1, 0x0);
        gbc.writeMem(0x3efd, { 0x0 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbd5c, gbc.sp());
        EXPECT(0x3efe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03D3
        gbc.setState(0xa38f, 0x88a8, 0xf6d0, 0x1010, 0x29b1, 0xdea8, 0x0, 0x0);
        gbc.writeMem(0xa38f, { 0x0 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x88a8, gbc.sp());
        EXPECT(0xa390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xa38f));
        // 00 03D4
        gbc.setState(0x6833, 0xe8da, 0xc080, 0x523f, 0xd635, 0x51e, 0x1, 0x1);
        gbc.writeMem(0x6833, { 0x0 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe8da, gbc.sp());
        EXPECT(0x6834, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03D5
        gbc.setState(0x8531, 0xf8a2, 0xd240, 0xbf2d, 0xf592, 0x6544, 0x1, 0x1);
        gbc.writeMem(0x8531, { 0x0 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xf8a2, gbc.sp());
        EXPECT(0x8532, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8531));
        // 00 03D7
        gbc.setState(0xcde5, 0x1ab7, 0x35d0, 0x93cb, 0x7b75, 0xdb85, 0x1, 0x0);
        gbc.writeMem(0xcde5, { 0x0 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x1ab7, gbc.sp());
        EXPECT(0xcde6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcde5));
        // 00 03D8
        gbc.setState(0x7c60, 0xae91, 0x3f50, 0xfe10, 0xb6db, 0x106b, 0x1, 0x0);
        gbc.writeMem(0x7c60, { 0x0 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xae91, gbc.sp());
        EXPECT(0x7c61, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03D9
        gbc.setState(0x8015, 0x1860, 0xc580, 0x59ae, 0xf063, 0x260b, 0x0, 0x1);
        gbc.writeMem(0x8015, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x1860, gbc.sp());
        EXPECT(0x8016, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x8015));
        // 00 03DA
        gbc.setState(0x9a2b, 0xbc2f, 0xc5a0, 0x43de, 0xfe7d, 0xb2c4, 0x0, 0x0);
        gbc.writeMem(0x9a2b, { 0x0 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xbc2f, gbc.sp());
        EXPECT(0x9a2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9a2b));
        // 00 03DB
        gbc.setState(0xad1f, 0xee06, 0xd7d0, 0xf020, 0xd6b8, 0x1973, 0x0, 0x1);
        gbc.writeMem(0xad1f, { 0x0 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xee06, gbc.sp());
        EXPECT(0xad20, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xad1f));
        // 00 03DC
        gbc.setState(0x9cc0, 0x3a84, 0xfbe0, 0x3d2e, 0xede4, 0x2a62, 0x1, 0x1);
        gbc.writeMem(0x9cc0, { 0x0 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x3a84, gbc.sp());
        EXPECT(0x9cc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9cc0));
        // 00 03DD
        gbc.setState(0x1ada, 0x9c37, 0xbb80, 0xd284, 0x7c1c, 0xa3d6, 0x0, 0x1);
        gbc.writeMem(0x1ada, { 0x0 });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x9c37, gbc.sp());
        EXPECT(0x1adb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03DE
        gbc.setState(0x9e4b, 0x477c, 0xe110, 0x83d8, 0xda03, 0x7096, 0x1, 0x1);
        gbc.writeMem(0x9e4b, { 0x0 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x477c, gbc.sp());
        EXPECT(0x9e4c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0x9e4b));
        // 00 03DF
        gbc.setState(0x42f, 0x1490, 0x7740, 0xeb3a, 0xba27, 0xee89, 0x0, 0x1);
        gbc.writeMem(0x42f, { 0x0 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x1490, gbc.sp());
        EXPECT(0x430, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03E0
        gbc.setState(0x3f22, 0x4a77, 0xb260, 0xb7a1, 0xfb99, 0x7863, 0x1, 0x0);
        gbc.writeMem(0x3f22, { 0x0 });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4a77, gbc.sp());
        EXPECT(0x3f23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03E1
        gbc.setState(0xcb18, 0x456f, 0x9df0, 0x2a80, 0x5f94, 0x771f, 0x1, 0x0);
        gbc.writeMem(0xcb18, { 0x0 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x456f, gbc.sp());
        EXPECT(0xcb19, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xcb18));
        // 00 03E2
        gbc.setState(0xd0a7, 0x45f1, 0x90d0, 0x45be, 0xf6de, 0xebe9, 0x0, 0x1);
        gbc.writeMem(0xd0a7, { 0x0 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x45f1, gbc.sp());
        EXPECT(0xd0a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x0, gbc.readMem(0xd0a7));
        // 00 03E3
        gbc.setState(0x2797, 0xc377, 0x9430, 0x1bfc, 0x5f01, 0x63fc, 0x0, 0x1);
        gbc.writeMem(0x2797, { 0x0 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xc377, gbc.sp());
        EXPECT(0x2798, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03E4
        gbc.setState(0x6962, 0xd52, 0xba20, 0x9749, 0x9a75, 0x5007, 0x1, 0x1);
        gbc.writeMem(0x6962, { 0x0 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xd52, gbc.sp());
        EXPECT(0x6963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 00 03E5
        gbc.setState(0x2327, 0x7572, 0x3cb0, 0x2f51, 0x7ed3, 0x8d3e, 0x1, 0x1);
        gbc.writeMem(0x2327, { 0x0 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x7572, gbc.sp());
        EXPECT(0x2328, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 00 03E7
        gbc.setState(0x1bbf, 0x637c, 0xd820, 0xb6a0, 0x5d7f, 0x86de, 0x0, 0x1);
        gbc.writeMem(0x1bbf, { 0x0 });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x637c, gbc.sp());
        EXPECT(0x1bc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
    }
