#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_71)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_71) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 71 0000
        gbc.setState(0x6618, 0x16f8, 0x3670, 0x46a3, 0xc9ee, 0xc8dc, 0x1, 0x0);
        gbc.writeMem(0x6618, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x16f8);
        EXPECT(gbc.pc(), 0x661a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0001
        gbc.setState(0x6434, 0x6232, 0x6a80, 0x8c67, 0x37fe, 0xb041, 0x1, 0x0);
        gbc.writeMem(0x6434, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6232);
        EXPECT(gbc.pc(), 0x6436);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0002
        gbc.setState(0x2577, 0x3cb7, 0x71e0, 0x4581, 0x5444, 0x63f1, 0x0, 0x1);
        gbc.writeMem(0x2577, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3cb7);
        EXPECT(gbc.pc(), 0x2579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0003
        gbc.setState(0x78e1, 0xcb07, 0x9b50, 0x28cf, 0xfdc2, 0x270b, 0x1, 0x0);
        gbc.writeMem(0x78e1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xcb07);
        EXPECT(gbc.pc(), 0x78e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0005
        gbc.setState(0xbb27, 0xe538, 0x7dc0, 0xa7d6, 0xd020, 0x110b, 0x0, 0x1);
        gbc.writeMem(0xbb27, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe538);
        EXPECT(gbc.pc(), 0xbb29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb27), 0xcb);
        EXPECT(gbc.readMem(0xbb28), 0x71);
        // CB 71 0006
        gbc.setState(0x8727, 0x744e, 0x8480, 0xe6b0, 0xda62, 0x4605, 0x0, 0x1);
        gbc.writeMem(0x8727, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x744e);
        EXPECT(gbc.pc(), 0x8729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8727), 0xcb);
        EXPECT(gbc.readMem(0x8728), 0x71);
        // CB 71 0007
        gbc.setState(0xdbe7, 0x2893, 0x8bd0, 0x4507, 0x619c, 0x77b5, 0x1, 0x0);
        gbc.writeMem(0xdbe7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2893);
        EXPECT(gbc.pc(), 0xdbe9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbe7), 0xcb);
        EXPECT(gbc.readMem(0xdbe8), 0x71);
        // CB 71 0008
        gbc.setState(0x6dc5, 0x2785, 0xe590, 0x5bd7, 0xc45d, 0xc7a1, 0x1, 0x0);
        gbc.writeMem(0x6dc5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x2785);
        EXPECT(gbc.pc(), 0x6dc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0009
        gbc.setState(0xc6b6, 0x285b, 0xfea0, 0xec5, 0x8d1c, 0x66d8, 0x0, 0x1);
        gbc.writeMem(0xc6b6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x285b);
        EXPECT(gbc.pc(), 0xc6b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6b6), 0xcb);
        EXPECT(gbc.readMem(0xc6b7), 0x71);
        // CB 71 000A
        gbc.setState(0x7bd0, 0x455a, 0x2b50, 0xe40, 0x2b07, 0xfc0b, 0x0, 0x0);
        gbc.writeMem(0x7bd0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x455a);
        EXPECT(gbc.pc(), 0x7bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 000B
        gbc.setState(0x1d07, 0x7c4e, 0x3a60, 0x4bcd, 0xda92, 0x9339, 0x0, 0x0);
        gbc.writeMem(0x1d07, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x7c4e);
        EXPECT(gbc.pc(), 0x1d09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 000C
        gbc.setState(0x58da, 0x7562, 0x8db0, 0x8382, 0xeaae, 0xb73d, 0x0, 0x1);
        gbc.writeMem(0x58da, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x7562);
        EXPECT(gbc.pc(), 0x58dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 000D
        gbc.setState(0xb979, 0xe5ff, 0x9100, 0xa872, 0xee1d, 0xf40e, 0x0, 0x0);
        gbc.writeMem(0xb979, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe5ff);
        EXPECT(gbc.pc(), 0xb97b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb979), 0xcb);
        EXPECT(gbc.readMem(0xb97a), 0x71);
        // CB 71 000E
        gbc.setState(0xcb4, 0xe704, 0xcb70, 0xc6ee, 0xab5c, 0xba5a, 0x0, 0x1);
        gbc.writeMem(0xcb4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xe704);
        EXPECT(gbc.pc(), 0xcb6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 000F
        gbc.setState(0x8ba2, 0x8cc, 0xf270, 0x82bb, 0x1956, 0x6dfd, 0x1, 0x0);
        gbc.writeMem(0x8ba2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x8cc);
        EXPECT(gbc.pc(), 0x8ba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ba2), 0xcb);
        EXPECT(gbc.readMem(0x8ba3), 0x71);
        // CB 71 0010
        gbc.setState(0x1b64, 0xce12, 0x6f90, 0xc034, 0xad91, 0x5e8, 0x0, 0x0);
        gbc.writeMem(0x1b64, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xce12);
        EXPECT(gbc.pc(), 0x1b66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0011
        gbc.setState(0x832, 0x5010, 0xc640, 0x656c, 0xbe01, 0x4421, 0x1, 0x1);
        gbc.writeMem(0x832, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5010);
        EXPECT(gbc.pc(), 0x834);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0012
        gbc.setState(0x1e97, 0xa96c, 0x480, 0xf0a1, 0x1461, 0x6538, 0x0, 0x1);
        gbc.writeMem(0x1e97, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa96c);
        EXPECT(gbc.pc(), 0x1e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0013
        gbc.setState(0x3ee9, 0x13ce, 0xdca0, 0x1c66, 0xfce6, 0x57f5, 0x0, 0x1);
        gbc.writeMem(0x3ee9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x13ce);
        EXPECT(gbc.pc(), 0x3eeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0014
        gbc.setState(0xb42a, 0xa8a1, 0x8520, 0xe1ea, 0xf997, 0x15fb, 0x0, 0x1);
        gbc.writeMem(0xb42a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xa8a1);
        EXPECT(gbc.pc(), 0xb42c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb42a), 0xcb);
        EXPECT(gbc.readMem(0xb42b), 0x71);
        // CB 71 0015
        gbc.setState(0x9190, 0xc6ad, 0xbc40, 0x64a, 0x388e, 0x601e, 0x0, 0x0);
        gbc.writeMem(0x9190, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xc6ad);
        EXPECT(gbc.pc(), 0x9192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9190), 0xcb);
        EXPECT(gbc.readMem(0x9191), 0x71);
        // CB 71 0016
        gbc.setState(0xb348, 0x2b90, 0x96d0, 0x56f4, 0xe968, 0x2432, 0x0, 0x1);
        gbc.writeMem(0xb348, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x2b90);
        EXPECT(gbc.pc(), 0xb34a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb348), 0xcb);
        EXPECT(gbc.readMem(0xb349), 0x71);
        // CB 71 0017
        gbc.setState(0x703b, 0xab8b, 0xb600, 0x384a, 0xc27, 0xfaf0, 0x1, 0x0);
        gbc.writeMem(0x703b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xab8b);
        EXPECT(gbc.pc(), 0x703d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0018
        gbc.setState(0x4813, 0x9016, 0x2fe0, 0x7e46, 0xbc12, 0x7453, 0x0, 0x0);
        gbc.writeMem(0x4813, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9016);
        EXPECT(gbc.pc(), 0x4815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0019
        gbc.setState(0x15d, 0x18ec, 0x5c30, 0x1c4b, 0x9ae4, 0xb38, 0x1, 0x1);
        gbc.writeMem(0x15d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x18ec);
        EXPECT(gbc.pc(), 0x15f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 001A
        gbc.setState(0xa535, 0x879, 0xfa30, 0x7746, 0x693e, 0xf997, 0x0, 0x0);
        gbc.writeMem(0xa535, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x879);
        EXPECT(gbc.pc(), 0xa537);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa535), 0xcb);
        EXPECT(gbc.readMem(0xa536), 0x71);
        // CB 71 001B
        gbc.setState(0x111f, 0x27bc, 0xe180, 0x2bd4, 0x8bef, 0xbe04, 0x0, 0x0);
        gbc.writeMem(0x111f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x27bc);
        EXPECT(gbc.pc(), 0x1121);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 001C
        gbc.setState(0x1325, 0xbbc5, 0x6a30, 0x9fd3, 0xcbf6, 0x7411, 0x1, 0x1);
        gbc.writeMem(0x1325, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbbc5);
        EXPECT(gbc.pc(), 0x1327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 001D
        gbc.setState(0xcdb0, 0x12dc, 0x5210, 0xbe40, 0x9389, 0xff81, 0x0, 0x0);
        gbc.writeMem(0xcdb0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x12dc);
        EXPECT(gbc.pc(), 0xcdb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdb0), 0xcb);
        EXPECT(gbc.readMem(0xcdb1), 0x71);
        // CB 71 001E
        gbc.setState(0xe176, 0xbd0b, 0xb050, 0xaa57, 0xecab, 0xeee, 0x1, 0x0);
        gbc.writeMem(0xe176, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xbd0b);
        EXPECT(gbc.pc(), 0xe178);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe176), 0xcb);
        EXPECT(gbc.readMem(0xe177), 0x71);
        // CB 71 001F
        gbc.setState(0x608d, 0x6478, 0x8830, 0xbc34, 0xd7cf, 0x3c53, 0x1, 0x1);
        gbc.writeMem(0x608d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6478);
        EXPECT(gbc.pc(), 0x608f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0020
        gbc.setState(0xb4fd, 0x6a22, 0x1bb0, 0x4b78, 0x3a91, 0xf586, 0x0, 0x0);
        gbc.writeMem(0xb4fd, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6a22);
        EXPECT(gbc.pc(), 0xb4ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4fd), 0xcb);
        EXPECT(gbc.readMem(0xb4fe), 0x71);
        // CB 71 0021
        gbc.setState(0x40ab, 0xb492, 0x5f50, 0xf316, 0x3e63, 0x5bc, 0x0, 0x1);
        gbc.writeMem(0x40ab, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xb492);
        EXPECT(gbc.pc(), 0x40ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0022
        gbc.setState(0xe245, 0x978, 0xcc80, 0x704b, 0x248d, 0xe33b, 0x1, 0x0);
        gbc.writeMem(0xe245, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x978);
        EXPECT(gbc.pc(), 0xe247);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe245), 0xcb);
        EXPECT(gbc.readMem(0xe246), 0x71);
        // CB 71 0023
        gbc.setState(0xb9ef, 0x4180, 0x9310, 0xd63f, 0x3b18, 0xdd14, 0x1, 0x1);
        gbc.writeMem(0xb9ef, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x4180);
        EXPECT(gbc.pc(), 0xb9f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9ef), 0xcb);
        EXPECT(gbc.readMem(0xb9f0), 0x71);
        // CB 71 0024
        gbc.setState(0x923d, 0x2fb4, 0xefd0, 0x69e8, 0xc022, 0x93bc, 0x1, 0x0);
        gbc.writeMem(0x923d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2fb4);
        EXPECT(gbc.pc(), 0x923f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x923d), 0xcb);
        EXPECT(gbc.readMem(0x923e), 0x71);
        // CB 71 0025
        gbc.setState(0x5056, 0xc8d1, 0x7020, 0xbcac, 0x94a1, 0x896a, 0x0, 0x0);
        gbc.writeMem(0x5056, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xc8d1);
        EXPECT(gbc.pc(), 0x5058);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0026
        gbc.setState(0x6a39, 0xd592, 0xd200, 0x8fd2, 0x7a7e, 0x8ddd, 0x0, 0x1);
        gbc.writeMem(0x6a39, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd592);
        EXPECT(gbc.pc(), 0x6a3b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0027
        gbc.setState(0x5f77, 0xa6f7, 0xe160, 0x836b, 0xfadd, 0xee18, 0x0, 0x1);
        gbc.writeMem(0x5f77, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xa6f7);
        EXPECT(gbc.pc(), 0x5f79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0028
        gbc.setState(0x16c7, 0x7ac8, 0x4160, 0xf6e7, 0x7375, 0xf1b1, 0x0, 0x0);
        gbc.writeMem(0x16c7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x7ac8);
        EXPECT(gbc.pc(), 0x16c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0029
        gbc.setState(0x375f, 0x2dec, 0x7130, 0xdb2c, 0x9198, 0x9bdf, 0x1, 0x1);
        gbc.writeMem(0x375f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2dec);
        EXPECT(gbc.pc(), 0x3761);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 002B
        gbc.setState(0xdedf, 0x75be, 0xc2f0, 0xf1d, 0x3e84, 0xb55f, 0x0, 0x1);
        gbc.writeMem(0xdedf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x75be);
        EXPECT(gbc.pc(), 0xdee1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdedf), 0xcb);
        EXPECT(gbc.readMem(0xdee0), 0x71);
        // CB 71 002C
        gbc.setState(0x7e45, 0x7f17, 0x9020, 0xeab4, 0x1b68, 0xfedd, 0x1, 0x1);
        gbc.writeMem(0x7e45, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7f17);
        EXPECT(gbc.pc(), 0x7e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 002D
        gbc.setState(0x5e07, 0xb878, 0x1200, 0xe41, 0x4474, 0xee56, 0x1, 0x1);
        gbc.writeMem(0x5e07, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb878);
        EXPECT(gbc.pc(), 0x5e09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 002E
        gbc.setState(0x36cd, 0xf1be, 0x8ed0, 0xd377, 0xa3dc, 0x5b86, 0x1, 0x1);
        gbc.writeMem(0x36cd, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xf1be);
        EXPECT(gbc.pc(), 0x36cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 002F
        gbc.setState(0x6912, 0xa365, 0xa730, 0x41be, 0x27ea, 0x175f, 0x0, 0x0);
        gbc.writeMem(0x6912, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xa365);
        EXPECT(gbc.pc(), 0x6914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0030
        gbc.setState(0x5dce, 0xa58, 0x6470, 0xaa5b, 0x326a, 0x1335, 0x0, 0x0);
        gbc.writeMem(0x5dce, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa58);
        EXPECT(gbc.pc(), 0x5dd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0031
        gbc.setState(0xecec, 0x98cb, 0xa7b0, 0x50e0, 0x2458, 0x5fb1, 0x0, 0x0);
        gbc.writeMem(0xecec, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x98cb);
        EXPECT(gbc.pc(), 0xecee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecec), 0xcb);
        EXPECT(gbc.readMem(0xeced), 0x71);
        // CB 71 0032
        gbc.setState(0xc68d, 0x6da, 0x29a0, 0x270a, 0xb7a1, 0x7e54, 0x0, 0x1);
        gbc.writeMem(0xc68d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x6da);
        EXPECT(gbc.pc(), 0xc68f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc68d), 0xcb);
        EXPECT(gbc.readMem(0xc68e), 0x71);
        // CB 71 0033
        gbc.setState(0x2f33, 0x73e7, 0x1de0, 0xd68e, 0xef85, 0x810e, 0x1, 0x1);
        gbc.writeMem(0x2f33, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x73e7);
        EXPECT(gbc.pc(), 0x2f35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0034
        gbc.setState(0x92a1, 0xb7f7, 0x6e40, 0xb5f4, 0x9459, 0x3542, 0x0, 0x1);
        gbc.writeMem(0x92a1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xb7f7);
        EXPECT(gbc.pc(), 0x92a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92a1), 0xcb);
        EXPECT(gbc.readMem(0x92a2), 0x71);
        // CB 71 0035
        gbc.setState(0x6a1d, 0x8516, 0xee20, 0x81ef, 0x58d, 0x9cc, 0x0, 0x1);
        gbc.writeMem(0x6a1d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8516);
        EXPECT(gbc.pc(), 0x6a1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0036
        gbc.setState(0x71ab, 0xc503, 0xa090, 0xac65, 0x84ec, 0x9b5e, 0x0, 0x0);
        gbc.writeMem(0x71ab, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc503);
        EXPECT(gbc.pc(), 0x71ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0037
        gbc.setState(0xe8e9, 0x89c0, 0x8070, 0x8911, 0xe7ca, 0xfc4d, 0x1, 0x1);
        gbc.writeMem(0xe8e9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x89c0);
        EXPECT(gbc.pc(), 0xe8eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8e9), 0xcb);
        EXPECT(gbc.readMem(0xe8ea), 0x71);
        // CB 71 0038
        gbc.setState(0xab09, 0x578a, 0x5790, 0xdfba, 0x276a, 0xad7f, 0x0, 0x0);
        gbc.writeMem(0xab09, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x578a);
        EXPECT(gbc.pc(), 0xab0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab09), 0xcb);
        EXPECT(gbc.readMem(0xab0a), 0x71);
        // CB 71 0039
        gbc.setState(0x9eb7, 0x9bf0, 0xbab0, 0x7983, 0xf945, 0x5a2, 0x0, 0x0);
        gbc.writeMem(0x9eb7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9bf0);
        EXPECT(gbc.pc(), 0x9eb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb7), 0xcb);
        EXPECT(gbc.readMem(0x9eb8), 0x71);
        // CB 71 003A
        gbc.setState(0x2e34, 0x86be, 0x1dc0, 0x165d, 0xdafb, 0xaab4, 0x0, 0x1);
        gbc.writeMem(0x2e34, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x86be);
        EXPECT(gbc.pc(), 0x2e36);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 003B
        gbc.setState(0x7175, 0x9881, 0x9e30, 0xef2a, 0x5947, 0xa7c5, 0x1, 0x0);
        gbc.writeMem(0x7175, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x9881);
        EXPECT(gbc.pc(), 0x7177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 003C
        gbc.setState(0xcc4b, 0xf084, 0xc4f0, 0x533d, 0x1b07, 0x40e3, 0x0, 0x1);
        gbc.writeMem(0xcc4b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xf084);
        EXPECT(gbc.pc(), 0xcc4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc4b), 0xcb);
        EXPECT(gbc.readMem(0xcc4c), 0x71);
        // CB 71 003D
        gbc.setState(0x5334, 0xcb22, 0x6410, 0xcb27, 0x6a1a, 0xeaec, 0x1, 0x1);
        gbc.writeMem(0x5334, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xcb22);
        EXPECT(gbc.pc(), 0x5336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 003E
        gbc.setState(0x21ca, 0x192b, 0x2200, 0xf29a, 0xad23, 0x45d9, 0x0, 0x0);
        gbc.writeMem(0x21ca, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x192b);
        EXPECT(gbc.pc(), 0x21cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 003F
        gbc.setState(0xa798, 0x18f4, 0x1d50, 0x2f8a, 0x4587, 0x59df, 0x1, 0x0);
        gbc.writeMem(0xa798, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x18f4);
        EXPECT(gbc.pc(), 0xa79a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa798), 0xcb);
        EXPECT(gbc.readMem(0xa799), 0x71);
        // CB 71 0041
        gbc.setState(0xad7b, 0x41a, 0xb7c0, 0xc999, 0x1c55, 0x2965, 0x1, 0x1);
        gbc.writeMem(0xad7b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x41a);
        EXPECT(gbc.pc(), 0xad7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad7b), 0xcb);
        EXPECT(gbc.readMem(0xad7c), 0x71);
        // CB 71 0042
        gbc.setState(0xec0d, 0xa078, 0xa70, 0x2565, 0xaef9, 0xf77c, 0x1, 0x1);
        gbc.writeMem(0xec0d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa078);
        EXPECT(gbc.pc(), 0xec0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec0d), 0xcb);
        EXPECT(gbc.readMem(0xec0e), 0x71);
        // CB 71 0043
        gbc.setState(0xe5f, 0x702a, 0x5a90, 0x8d08, 0xcf3f, 0x5d9, 0x1, 0x1);
        gbc.writeMem(0xe5f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x702a);
        EXPECT(gbc.pc(), 0xe61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0044
        gbc.setState(0xc81e, 0x7110, 0xd0f0, 0x8c05, 0xf674, 0xf4b7, 0x1, 0x1);
        gbc.writeMem(0xc81e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7110);
        EXPECT(gbc.pc(), 0xc820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc81e), 0xcb);
        EXPECT(gbc.readMem(0xc81f), 0x71);
        // CB 71 0045
        gbc.setState(0xce11, 0x4e3f, 0x9270, 0xdd6e, 0x51a6, 0xfba2, 0x1, 0x0);
        gbc.writeMem(0xce11, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x4e3f);
        EXPECT(gbc.pc(), 0xce13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce11), 0xcb);
        EXPECT(gbc.readMem(0xce12), 0x71);
        // CB 71 0046
        gbc.setState(0x1d19, 0x438a, 0x2cf0, 0x7591, 0xd1fb, 0xb6b6, 0x1, 0x1);
        gbc.writeMem(0x1d19, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x438a);
        EXPECT(gbc.pc(), 0x1d1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0047
        gbc.setState(0x308b, 0xd069, 0x4500, 0x8e4b, 0x4f7c, 0x775b, 0x0, 0x0);
        gbc.writeMem(0x308b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd069);
        EXPECT(gbc.pc(), 0x308d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0048
        gbc.setState(0x8eb7, 0xca28, 0x6ef0, 0x9be4, 0x1db1, 0x432b, 0x1, 0x1);
        gbc.writeMem(0x8eb7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xca28);
        EXPECT(gbc.pc(), 0x8eb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb7), 0xcb);
        EXPECT(gbc.readMem(0x8eb8), 0x71);
        // CB 71 0049
        gbc.setState(0xd7a3, 0x5385, 0x7520, 0x5b1, 0x38c5, 0x5b4b, 0x0, 0x1);
        gbc.writeMem(0xd7a3, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x5385);
        EXPECT(gbc.pc(), 0xd7a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7a3), 0xcb);
        EXPECT(gbc.readMem(0xd7a4), 0x71);
        // CB 71 004A
        gbc.setState(0x57ba, 0xf151, 0x6e30, 0xd419, 0x882f, 0x71c1, 0x0, 0x0);
        gbc.writeMem(0x57ba, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf151);
        EXPECT(gbc.pc(), 0x57bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 004B
        gbc.setState(0x4eb5, 0xcf14, 0xb760, 0x9e2d, 0x9ed1, 0xde34, 0x1, 0x1);
        gbc.writeMem(0x4eb5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xcf14);
        EXPECT(gbc.pc(), 0x4eb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 004C
        gbc.setState(0xc251, 0x5b7e, 0x4320, 0x45dd, 0xa8cf, 0xdfbf, 0x1, 0x1);
        gbc.writeMem(0xc251, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x5b7e);
        EXPECT(gbc.pc(), 0xc253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc251), 0xcb);
        EXPECT(gbc.readMem(0xc252), 0x71);
        // CB 71 004D
        gbc.setState(0x67c2, 0xe8b3, 0x2c80, 0xb3e6, 0x7311, 0x9d26, 0x0, 0x0);
        gbc.writeMem(0x67c2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xe8b3);
        EXPECT(gbc.pc(), 0x67c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 004E
        gbc.setState(0x9738, 0xc3d3, 0xcb0, 0x6071, 0x8cf0, 0x33cc, 0x1, 0x1);
        gbc.writeMem(0x9738, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc3d3);
        EXPECT(gbc.pc(), 0x973a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9738), 0xcb);
        EXPECT(gbc.readMem(0x9739), 0x71);
        // CB 71 004F
        gbc.setState(0x67e8, 0x70f5, 0x8de0, 0x2a33, 0x61ac, 0x9e20, 0x1, 0x0);
        gbc.writeMem(0x67e8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x70f5);
        EXPECT(gbc.pc(), 0x67ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0050
        gbc.setState(0x5ddf, 0x7583, 0xa580, 0x23db, 0x1416, 0xbbf, 0x0, 0x1);
        gbc.writeMem(0x5ddf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7583);
        EXPECT(gbc.pc(), 0x5de1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0051
        gbc.setState(0xd568, 0x282d, 0xef40, 0xd9d7, 0x7a36, 0xfbdf, 0x1, 0x1);
        gbc.writeMem(0xd568, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x282d);
        EXPECT(gbc.pc(), 0xd56a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd568), 0xcb);
        EXPECT(gbc.readMem(0xd569), 0x71);
        // CB 71 0052
        gbc.setState(0x2121, 0xb180, 0x1de0, 0xf543, 0xe3c9, 0xbb6b, 0x1, 0x0);
        gbc.writeMem(0x2121, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xb180);
        EXPECT(gbc.pc(), 0x2123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0053
        gbc.setState(0x78aa, 0xaaf3, 0x3910, 0x1616, 0x4f4c, 0x4bd3, 0x1, 0x0);
        gbc.writeMem(0x78aa, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xaaf3);
        EXPECT(gbc.pc(), 0x78ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0054
        gbc.setState(0xbaed, 0xfd5f, 0xc700, 0x15e9, 0xb69d, 0xf16, 0x1, 0x0);
        gbc.writeMem(0xbaed, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfd5f);
        EXPECT(gbc.pc(), 0xbaef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbaed), 0xcb);
        EXPECT(gbc.readMem(0xbaee), 0x71);
        // CB 71 0055
        gbc.setState(0xae62, 0xd17d, 0x6780, 0x41d8, 0xd8ea, 0xc25a, 0x1, 0x0);
        gbc.writeMem(0xae62, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd17d);
        EXPECT(gbc.pc(), 0xae64);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae62), 0xcb);
        EXPECT(gbc.readMem(0xae63), 0x71);
        // CB 71 0056
        gbc.setState(0x567, 0xd2ad, 0x78f0, 0x13d3, 0x9c1e, 0x6a69, 0x0, 0x0);
        gbc.writeMem(0x567, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd2ad);
        EXPECT(gbc.pc(), 0x569);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0057
        gbc.setState(0xcf30, 0xa0e2, 0x7630, 0xbac8, 0x17d4, 0x6630, 0x0, 0x0);
        gbc.writeMem(0xcf30, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xa0e2);
        EXPECT(gbc.pc(), 0xcf32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf30), 0xcb);
        EXPECT(gbc.readMem(0xcf31), 0x71);
        // CB 71 0058
        gbc.setState(0x97c, 0x3ef2, 0xabe0, 0x5b5d, 0x53b, 0x8ebc, 0x1, 0x0);
        gbc.writeMem(0x97c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x3ef2);
        EXPECT(gbc.pc(), 0x97e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0059
        gbc.setState(0x7fb5, 0x4ea2, 0xa690, 0xb35, 0x1ab0, 0xd320, 0x1, 0x1);
        gbc.writeMem(0x7fb5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x4ea2);
        EXPECT(gbc.pc(), 0x7fb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 005A
        gbc.setState(0x5b4f, 0xcde8, 0xa440, 0x90c0, 0x49c0, 0x9dab, 0x0, 0x1);
        gbc.writeMem(0x5b4f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xcde8);
        EXPECT(gbc.pc(), 0x5b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 005B
        gbc.setState(0xe60b, 0x44be, 0x6790, 0x7a5c, 0x68f, 0xa6c9, 0x0, 0x1);
        gbc.writeMem(0xe60b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x44be);
        EXPECT(gbc.pc(), 0xe60d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe60b), 0xcb);
        EXPECT(gbc.readMem(0xe60c), 0x71);
        // CB 71 005C
        gbc.setState(0x99e3, 0x83bf, 0x1a80, 0x934, 0xb570, 0xa5a4, 0x0, 0x1);
        gbc.writeMem(0x99e3, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x83bf);
        EXPECT(gbc.pc(), 0x99e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99e3), 0xcb);
        EXPECT(gbc.readMem(0x99e4), 0x71);
        // CB 71 005D
        gbc.setState(0xbf72, 0x5b30, 0x68c0, 0x9435, 0xb224, 0x5650, 0x1, 0x1);
        gbc.writeMem(0xbf72, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5b30);
        EXPECT(gbc.pc(), 0xbf74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf72), 0xcb);
        EXPECT(gbc.readMem(0xbf73), 0x71);
        // CB 71 005E
        gbc.setState(0x323e, 0xd60a, 0x86d0, 0x9efa, 0x28ed, 0xc50f, 0x0, 0x0);
        gbc.writeMem(0x323e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xd60a);
        EXPECT(gbc.pc(), 0x3240);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 005F
        gbc.setState(0x154f, 0x34b3, 0x5c70, 0xb31d, 0xd7e7, 0x84b6, 0x0, 0x0);
        gbc.writeMem(0x154f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x34b3);
        EXPECT(gbc.pc(), 0x1551);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0060
        gbc.setState(0xbdae, 0x823f, 0x7e80, 0x9e31, 0xbc07, 0xd7c4, 0x0, 0x0);
        gbc.writeMem(0xbdae, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x823f);
        EXPECT(gbc.pc(), 0xbdb0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbdae), 0xcb);
        EXPECT(gbc.readMem(0xbdaf), 0x71);
        // CB 71 0061
        gbc.setState(0xd897, 0xc857, 0x9f90, 0xc9be, 0xe38b, 0xde7e, 0x0, 0x1);
        gbc.writeMem(0xd897, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc857);
        EXPECT(gbc.pc(), 0xd899);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd897), 0xcb);
        EXPECT(gbc.readMem(0xd898), 0x71);
        // CB 71 0062
        gbc.setState(0xcf05, 0x7429, 0xee60, 0xeb93, 0xdfd1, 0xb7b3, 0x1, 0x1);
        gbc.writeMem(0xcf05, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7429);
        EXPECT(gbc.pc(), 0xcf07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf05), 0xcb);
        EXPECT(gbc.readMem(0xcf06), 0x71);
        // CB 71 0063
        gbc.setState(0xe24e, 0x1669, 0xc520, 0xee11, 0x3a7b, 0x3576, 0x0, 0x1);
        gbc.writeMem(0xe24e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x1669);
        EXPECT(gbc.pc(), 0xe250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe24e), 0xcb);
        EXPECT(gbc.readMem(0xe24f), 0x71);
        // CB 71 0064
        gbc.setState(0x8c89, 0x6863, 0x4e0, 0xd3a6, 0x79f, 0x3f08, 0x0, 0x0);
        gbc.writeMem(0x8c89, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x6863);
        EXPECT(gbc.pc(), 0x8c8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c89), 0xcb);
        EXPECT(gbc.readMem(0x8c8a), 0x71);
        // CB 71 0065
        gbc.setState(0x5635, 0x3378, 0x50d0, 0x3fb0, 0x406b, 0x1c34, 0x0, 0x1);
        gbc.writeMem(0x5635, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x3378);
        EXPECT(gbc.pc(), 0x5637);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0066
        gbc.setState(0xd40, 0x4df8, 0x8240, 0x2b65, 0x1d68, 0xe3dd, 0x0, 0x1);
        gbc.writeMem(0xd40, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4df8);
        EXPECT(gbc.pc(), 0xd42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0067
        gbc.setState(0x3d7e, 0x5d8f, 0xbb60, 0x5604, 0x5ee0, 0x8172, 0x0, 0x0);
        gbc.writeMem(0x3d7e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x5d8f);
        EXPECT(gbc.pc(), 0x3d80);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0068
        gbc.setState(0x6824, 0xdc72, 0x1360, 0x25e7, 0xc1d4, 0x72f4, 0x1, 0x1);
        gbc.writeMem(0x6824, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdc72);
        EXPECT(gbc.pc(), 0x6826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0069
        gbc.setState(0x8ca7, 0x7a, 0x9280, 0xb184, 0x18e1, 0xc266, 0x1, 0x0);
        gbc.writeMem(0x8ca7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7a);
        EXPECT(gbc.pc(), 0x8ca9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca7), 0xcb);
        EXPECT(gbc.readMem(0x8ca8), 0x71);
        // CB 71 006A
        gbc.setState(0x4a1f, 0xcf80, 0xeab0, 0xf939, 0xe95, 0xddee, 0x0, 0x0);
        gbc.writeMem(0x4a1f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xcf80);
        EXPECT(gbc.pc(), 0x4a21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 006B
        gbc.setState(0x9e0e, 0x7a8c, 0x8100, 0xb7d9, 0xb39, 0x19bd, 0x1, 0x1);
        gbc.writeMem(0x9e0e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x7a8c);
        EXPECT(gbc.pc(), 0x9e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e0e), 0xcb);
        EXPECT(gbc.readMem(0x9e0f), 0x71);
        // CB 71 006C
        gbc.setState(0xad44, 0xa4f9, 0x5530, 0x1c82, 0x2fdf, 0x5ac1, 0x0, 0x0);
        gbc.writeMem(0xad44, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xa4f9);
        EXPECT(gbc.pc(), 0xad46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad44), 0xcb);
        EXPECT(gbc.readMem(0xad45), 0x71);
        // CB 71 006D
        gbc.setState(0x962c, 0x2fc8, 0x6950, 0x85c6, 0xbc98, 0x3f7a, 0x1, 0x0);
        gbc.writeMem(0x962c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x2fc8);
        EXPECT(gbc.pc(), 0x962e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x962c), 0xcb);
        EXPECT(gbc.readMem(0x962d), 0x71);
        // CB 71 006E
        gbc.setState(0x911a, 0xf384, 0x6c40, 0x5722, 0xd3b3, 0x2a67, 0x1, 0x0);
        gbc.writeMem(0x911a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf384);
        EXPECT(gbc.pc(), 0x911c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x911a), 0xcb);
        EXPECT(gbc.readMem(0x911b), 0x71);
        // CB 71 006F
        gbc.setState(0x2f59, 0x852a, 0x55f0, 0x55c7, 0xaa92, 0x7055, 0x0, 0x1);
        gbc.writeMem(0x2f59, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x852a);
        EXPECT(gbc.pc(), 0x2f5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0070
        gbc.setState(0x5844, 0x9d8f, 0xe40, 0xe6b0, 0xcecf, 0xa631, 0x0, 0x1);
        gbc.writeMem(0x5844, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9d8f);
        EXPECT(gbc.pc(), 0x5846);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0071
        gbc.setState(0xba01, 0x12f5, 0x65f0, 0x2029, 0x2437, 0xbbe, 0x0, 0x0);
        gbc.writeMem(0xba01, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x12f5);
        EXPECT(gbc.pc(), 0xba03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba01), 0xcb);
        EXPECT(gbc.readMem(0xba02), 0x71);
        // CB 71 0072
        gbc.setState(0xb39c, 0xf145, 0x9d50, 0xfc23, 0x8f48, 0xd961, 0x1, 0x0);
        gbc.writeMem(0xb39c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xf145);
        EXPECT(gbc.pc(), 0xb39e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb39c), 0xcb);
        EXPECT(gbc.readMem(0xb39d), 0x71);
        // CB 71 0073
        gbc.setState(0xa195, 0x1bd4, 0x7af0, 0xf335, 0xd901, 0x9105, 0x1, 0x0);
        gbc.writeMem(0xa195, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1bd4);
        EXPECT(gbc.pc(), 0xa197);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa195), 0xcb);
        EXPECT(gbc.readMem(0xa196), 0x71);
        // CB 71 0074
        gbc.setState(0xebe, 0xc978, 0x5cd0, 0x89d8, 0xe1f2, 0x6618, 0x0, 0x1);
        gbc.writeMem(0xebe, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc978);
        EXPECT(gbc.pc(), 0xec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0075
        gbc.setState(0x3e4e, 0x3bb1, 0x20, 0x5314, 0x3a9b, 0x1a7f, 0x0, 0x0);
        gbc.writeMem(0x3e4e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x3bb1);
        EXPECT(gbc.pc(), 0x3e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0076
        gbc.setState(0x7c90, 0xb6c1, 0x4cd0, 0xe30b, 0x31e7, 0x4d2, 0x0, 0x1);
        gbc.writeMem(0x7c90, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xb6c1);
        EXPECT(gbc.pc(), 0x7c92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0077
        gbc.setState(0x9f22, 0xb97b, 0xe690, 0x9249, 0x5f16, 0x134, 0x1, 0x0);
        gbc.writeMem(0x9f22, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xb97b);
        EXPECT(gbc.pc(), 0x9f24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9f22), 0xcb);
        EXPECT(gbc.readMem(0x9f23), 0x71);
        // CB 71 0078
        gbc.setState(0x2b4f, 0x2463, 0xe650, 0x9c0d, 0x7090, 0x4663, 0x0, 0x1);
        gbc.writeMem(0x2b4f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2463);
        EXPECT(gbc.pc(), 0x2b51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0079
        gbc.setState(0x13a2, 0x5229, 0x6860, 0x8bde, 0xd9a3, 0x5d03, 0x1, 0x0);
        gbc.writeMem(0x13a2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x5229);
        EXPECT(gbc.pc(), 0x13a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 007A
        gbc.setState(0xa2a5, 0x3582, 0x5b40, 0xa80, 0xfbe6, 0x8346, 0x1, 0x0);
        gbc.writeMem(0xa2a5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x3582);
        EXPECT(gbc.pc(), 0xa2a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2a5), 0xcb);
        EXPECT(gbc.readMem(0xa2a6), 0x71);
        // CB 71 007B
        gbc.setState(0x9b58, 0x4ec5, 0xc9a0, 0xc99d, 0xce54, 0xed15, 0x0, 0x1);
        gbc.writeMem(0x9b58, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4ec5);
        EXPECT(gbc.pc(), 0x9b5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b58), 0xcb);
        EXPECT(gbc.readMem(0x9b59), 0x71);
        // CB 71 007C
        gbc.setState(0x450f, 0xaa15, 0xdc0, 0x6645, 0xaa86, 0x112b, 0x1, 0x0);
        gbc.writeMem(0x450f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xaa15);
        EXPECT(gbc.pc(), 0x4511);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 007D
        gbc.setState(0x71cf, 0xf21e, 0xf030, 0x5e24, 0xeea7, 0x9364, 0x0, 0x0);
        gbc.writeMem(0x71cf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xf21e);
        EXPECT(gbc.pc(), 0x71d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 007E
        gbc.setState(0x1e9c, 0x1c8c, 0x4460, 0x49ad, 0xf44b, 0x3060, 0x0, 0x0);
        gbc.writeMem(0x1e9c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x1c8c);
        EXPECT(gbc.pc(), 0x1e9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0080
        gbc.setState(0x6eb, 0x2607, 0x7650, 0x7ceb, 0xc97f, 0xd982, 0x0, 0x0);
        gbc.writeMem(0x6eb, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2607);
        EXPECT(gbc.pc(), 0x6ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0081
        gbc.setState(0xcc84, 0xa0cc, 0xdd00, 0xd5af, 0x2cd9, 0x455d, 0x0, 0x1);
        gbc.writeMem(0xcc84, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xa0cc);
        EXPECT(gbc.pc(), 0xcc86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc84), 0xcb);
        EXPECT(gbc.readMem(0xcc85), 0x71);
        // CB 71 0082
        gbc.setState(0x9fec, 0x8c14, 0x6b20, 0xf0c9, 0x98da, 0xcb3a, 0x0, 0x0);
        gbc.writeMem(0x9fec, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8c14);
        EXPECT(gbc.pc(), 0x9fee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fec), 0xcb);
        EXPECT(gbc.readMem(0x9fed), 0x71);
        // CB 71 0083
        gbc.setState(0xa135, 0x1763, 0x7140, 0xf105, 0x91fa, 0x9bd0, 0x1, 0x0);
        gbc.writeMem(0xa135, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x1763);
        EXPECT(gbc.pc(), 0xa137);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa135), 0xcb);
        EXPECT(gbc.readMem(0xa136), 0x71);
        // CB 71 0084
        gbc.setState(0xca14, 0xbcc0, 0x7260, 0x4b46, 0x6cb6, 0x3527, 0x0, 0x1);
        gbc.writeMem(0xca14, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbcc0);
        EXPECT(gbc.pc(), 0xca16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xca14), 0xcb);
        EXPECT(gbc.readMem(0xca15), 0x71);
        // CB 71 0085
        gbc.setState(0xcd53, 0x949e, 0x50d0, 0xe79b, 0x257, 0xa840, 0x0, 0x0);
        gbc.writeMem(0xcd53, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x949e);
        EXPECT(gbc.pc(), 0xcd55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd53), 0xcb);
        EXPECT(gbc.readMem(0xcd54), 0x71);
        // CB 71 0086
        gbc.setState(0x463f, 0xc351, 0x7330, 0x5744, 0xbf96, 0xa15a, 0x0, 0x0);
        gbc.writeMem(0x463f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc351);
        EXPECT(gbc.pc(), 0x4641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0087
        gbc.setState(0xc31a, 0xe28, 0xbfe0, 0xe1eb, 0x4587, 0xebc5, 0x1, 0x1);
        gbc.writeMem(0xc31a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xe28);
        EXPECT(gbc.pc(), 0xc31c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc31a), 0xcb);
        EXPECT(gbc.readMem(0xc31b), 0x71);
        // CB 71 0088
        gbc.setState(0xd04d, 0xdfd7, 0x5d90, 0xc87d, 0xb3f, 0x1c66, 0x1, 0x0);
        gbc.writeMem(0xd04d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xdfd7);
        EXPECT(gbc.pc(), 0xd04f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd04d), 0xcb);
        EXPECT(gbc.readMem(0xd04e), 0x71);
        // CB 71 0089
        gbc.setState(0x48a0, 0xd5c, 0xd640, 0x4220, 0x1035, 0x8595, 0x1, 0x0);
        gbc.writeMem(0x48a0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd5c);
        EXPECT(gbc.pc(), 0x48a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 008A
        gbc.setState(0xb04c, 0x9536, 0x2c30, 0x28ff, 0xdc2d, 0xb19a, 0x0, 0x1);
        gbc.writeMem(0xb04c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x9536);
        EXPECT(gbc.pc(), 0xb04e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb04c), 0xcb);
        EXPECT(gbc.readMem(0xb04d), 0x71);
        // CB 71 008B
        gbc.setState(0x243e, 0x5454, 0x10a0, 0x93ff, 0xf809, 0x2502, 0x1, 0x1);
        gbc.writeMem(0x243e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x5454);
        EXPECT(gbc.pc(), 0x2440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 008C
        gbc.setState(0x30d8, 0x2e14, 0x53b0, 0x674a, 0x775c, 0x75f4, 0x1, 0x1);
        gbc.writeMem(0x30d8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2e14);
        EXPECT(gbc.pc(), 0x30da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 008D
        gbc.setState(0xb661, 0x43eb, 0xf0, 0xc53, 0x7449, 0x5235, 0x1, 0x0);
        gbc.writeMem(0xb661, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x43eb);
        EXPECT(gbc.pc(), 0xb663);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb661), 0xcb);
        EXPECT(gbc.readMem(0xb662), 0x71);
        // CB 71 008E
        gbc.setState(0x20d2, 0xd010, 0xd750, 0x3d80, 0xcdb6, 0x101e, 0x1, 0x1);
        gbc.writeMem(0x20d2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xd010);
        EXPECT(gbc.pc(), 0x20d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 008F
        gbc.setState(0x884c, 0x6be7, 0xbff0, 0xe23b, 0x283, 0x5fd4, 0x1, 0x0);
        gbc.writeMem(0x884c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x6be7);
        EXPECT(gbc.pc(), 0x884e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x884c), 0xcb);
        EXPECT(gbc.readMem(0x884d), 0x71);
        // CB 71 0090
        gbc.setState(0xe4d1, 0xa540, 0x38e0, 0xf3c2, 0xded7, 0x5261, 0x1, 0x0);
        gbc.writeMem(0xe4d1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xa540);
        EXPECT(gbc.pc(), 0xe4d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4d1), 0xcb);
        EXPECT(gbc.readMem(0xe4d2), 0x71);
        // CB 71 0091
        gbc.setState(0x4ada, 0x7f26, 0x67c0, 0x5587, 0x814b, 0x1cbe, 0x1, 0x0);
        gbc.writeMem(0x4ada, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x7f26);
        EXPECT(gbc.pc(), 0x4adc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0092
        gbc.setState(0x4ea4, 0x5c3e, 0x99a0, 0xbce, 0x1e78, 0x3125, 0x0, 0x0);
        gbc.writeMem(0x4ea4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5c3e);
        EXPECT(gbc.pc(), 0x4ea6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0093
        gbc.setState(0xb803, 0x8955, 0xfde0, 0x9014, 0xd988, 0xb7b6, 0x0, 0x0);
        gbc.writeMem(0xb803, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x8955);
        EXPECT(gbc.pc(), 0xb805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb803), 0xcb);
        EXPECT(gbc.readMem(0xb804), 0x71);
        // CB 71 0094
        gbc.setState(0x438, 0x306c, 0x4b00, 0xb428, 0x901b, 0x3bbf, 0x0, 0x0);
        gbc.writeMem(0x438, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x306c);
        EXPECT(gbc.pc(), 0x43a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0095
        gbc.setState(0x1606, 0x1dd5, 0x4a10, 0xc8ca, 0x51fe, 0x1dc6, 0x0, 0x1);
        gbc.writeMem(0x1606, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x1dd5);
        EXPECT(gbc.pc(), 0x1608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0096
        gbc.setState(0xcbd1, 0x2641, 0x69e0, 0x1b10, 0x879c, 0x812c, 0x1, 0x0);
        gbc.writeMem(0xcbd1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x2641);
        EXPECT(gbc.pc(), 0xcbd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbd1), 0xcb);
        EXPECT(gbc.readMem(0xcbd2), 0x71);
        // CB 71 0097
        gbc.setState(0xd5ea, 0x36ce, 0x6760, 0x3d92, 0xb270, 0x50bf, 0x0, 0x0);
        gbc.writeMem(0xd5ea, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x36ce);
        EXPECT(gbc.pc(), 0xd5ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ea), 0xcb);
        EXPECT(gbc.readMem(0xd5eb), 0x71);
        // CB 71 0098
        gbc.setState(0x68a1, 0x486, 0x4d30, 0xd76e, 0x3675, 0x631e, 0x0, 0x0);
        gbc.writeMem(0x68a1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x486);
        EXPECT(gbc.pc(), 0x68a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0099
        gbc.setState(0x51e5, 0xc37d, 0x26a0, 0x9547, 0xee9e, 0x20f4, 0x1, 0x0);
        gbc.writeMem(0x51e5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc37d);
        EXPECT(gbc.pc(), 0x51e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 009A
        gbc.setState(0xa543, 0x4403, 0x9d40, 0x26fd, 0x7f12, 0x406a, 0x0, 0x1);
        gbc.writeMem(0xa543, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x4403);
        EXPECT(gbc.pc(), 0xa545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa543), 0xcb);
        EXPECT(gbc.readMem(0xa544), 0x71);
        // CB 71 009B
        gbc.setState(0xd254, 0x4dae, 0xa320, 0x5712, 0x737d, 0xfebc, 0x1, 0x1);
        gbc.writeMem(0xd254, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4dae);
        EXPECT(gbc.pc(), 0xd256);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd254), 0xcb);
        EXPECT(gbc.readMem(0xd255), 0x71);
        // CB 71 009C
        gbc.setState(0x6731, 0x1cd0, 0x20e0, 0xa4ab, 0xe0d4, 0xcde8, 0x1, 0x1);
        gbc.writeMem(0x6731, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x1cd0);
        EXPECT(gbc.pc(), 0x6733);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 009D
        gbc.setState(0x78ab, 0xe1f6, 0xdd30, 0x9770, 0xab14, 0x97f2, 0x1, 0x1);
        gbc.writeMem(0x78ab, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xe1f6);
        EXPECT(gbc.pc(), 0x78ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 009E
        gbc.setState(0x47e6, 0xff2d, 0x3fd0, 0xbf55, 0x4732, 0x5c0c, 0x0, 0x1);
        gbc.writeMem(0x47e6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xff2d);
        EXPECT(gbc.pc(), 0x47e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 009F
        gbc.setState(0xb14, 0x6c5, 0x65d0, 0x76b5, 0x949a, 0x6ddb, 0x1, 0x0);
        gbc.writeMem(0xb14, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x6c5);
        EXPECT(gbc.pc(), 0xb16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00A0
        gbc.setState(0x16e0, 0xe79, 0x4960, 0xa5c, 0x9843, 0xef4, 0x1, 0x1);
        gbc.writeMem(0x16e0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xe79);
        EXPECT(gbc.pc(), 0x16e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00A1
        gbc.setState(0x2e81, 0xd2a9, 0x8b90, 0x25ca, 0x2711, 0x52ec, 0x0, 0x0);
        gbc.writeMem(0x2e81, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xd2a9);
        EXPECT(gbc.pc(), 0x2e83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00A2
        gbc.setState(0x4d62, 0x742a, 0x1b80, 0x5c55, 0x9035, 0x7ff0, 0x0, 0x0);
        gbc.writeMem(0x4d62, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x742a);
        EXPECT(gbc.pc(), 0x4d64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00A3
        gbc.setState(0x56cb, 0xe462, 0x5ff0, 0x3398, 0x64fc, 0x3ffa, 0x1, 0x1);
        gbc.writeMem(0x56cb, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xe462);
        EXPECT(gbc.pc(), 0x56cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00A4
        gbc.setState(0x16e5, 0x6b7c, 0x8680, 0xb0e1, 0xd5f8, 0xf563, 0x0, 0x0);
        gbc.writeMem(0x16e5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6b7c);
        EXPECT(gbc.pc(), 0x16e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00A5
        gbc.setState(0x272, 0xd04c, 0xaee0, 0xa69, 0x7025, 0x392f, 0x0, 0x0);
        gbc.writeMem(0x272, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xd04c);
        EXPECT(gbc.pc(), 0x274);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00A7
        gbc.setState(0x61b5, 0xa565, 0x620, 0x3816, 0x1e18, 0x4a32, 0x0, 0x0);
        gbc.writeMem(0x61b5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa565);
        EXPECT(gbc.pc(), 0x61b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00A9
        gbc.setState(0xd6b8, 0x14bb, 0x78e0, 0x799c, 0x490e, 0xc06c, 0x1, 0x0);
        gbc.writeMem(0xd6b8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x14bb);
        EXPECT(gbc.pc(), 0xd6ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b8), 0xcb);
        EXPECT(gbc.readMem(0xd6b9), 0x71);
        // CB 71 00AA
        gbc.setState(0xc307, 0x1934, 0x81c0, 0xfd82, 0xbae7, 0x5b61, 0x1, 0x1);
        gbc.writeMem(0xc307, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x1934);
        EXPECT(gbc.pc(), 0xc309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc307), 0xcb);
        EXPECT(gbc.readMem(0xc308), 0x71);
        // CB 71 00AC
        gbc.setState(0x7767, 0x48fe, 0xc120, 0x5c8f, 0xdb8c, 0x1d8c, 0x0, 0x1);
        gbc.writeMem(0x7767, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x48fe);
        EXPECT(gbc.pc(), 0x7769);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00AD
        gbc.setState(0xaa36, 0xcfcd, 0xab40, 0x230e, 0x91af, 0x8991, 0x1, 0x0);
        gbc.writeMem(0xaa36, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xcfcd);
        EXPECT(gbc.pc(), 0xaa38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa36), 0xcb);
        EXPECT(gbc.readMem(0xaa37), 0x71);
        // CB 71 00AF
        gbc.setState(0x7f8d, 0x1bbe, 0xc170, 0x2bf2, 0x70be, 0x6294, 0x1, 0x0);
        gbc.writeMem(0x7f8d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1bbe);
        EXPECT(gbc.pc(), 0x7f8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00B0
        gbc.setState(0xc1a3, 0x24dc, 0x6010, 0x4d37, 0x4c55, 0x202c, 0x0, 0x1);
        gbc.writeMem(0xc1a3, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x24dc);
        EXPECT(gbc.pc(), 0xc1a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1a3), 0xcb);
        EXPECT(gbc.readMem(0xc1a4), 0x71);
        // CB 71 00B1
        gbc.setState(0x59b, 0xb7e9, 0xbb70, 0x81d2, 0x5159, 0x611d, 0x0, 0x1);
        gbc.writeMem(0x59b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb7e9);
        EXPECT(gbc.pc(), 0x59d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00B2
        gbc.setState(0x720d, 0x8cee, 0x9e70, 0xcaef, 0xfb54, 0x4de8, 0x1, 0x1);
        gbc.writeMem(0x720d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x8cee);
        EXPECT(gbc.pc(), 0x720f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00B3
        gbc.setState(0xd33, 0x43d8, 0xcfa0, 0x80ef, 0x214a, 0xcd82, 0x0, 0x0);
        gbc.writeMem(0xd33, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x43d8);
        EXPECT(gbc.pc(), 0xd35);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00B4
        gbc.setState(0x990f, 0xd0f6, 0x190, 0x4105, 0x371a, 0x6d4b, 0x1, 0x0);
        gbc.writeMem(0x990f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xd0f6);
        EXPECT(gbc.pc(), 0x9911);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x990f), 0xcb);
        EXPECT(gbc.readMem(0x9910), 0x71);
        // CB 71 00B5
        gbc.setState(0x3c2, 0xd661, 0x5d70, 0x1ec0, 0xd8a2, 0xf49c, 0x0, 0x0);
        gbc.writeMem(0x3c2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xd661);
        EXPECT(gbc.pc(), 0x3c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00B6
        gbc.setState(0x45d5, 0xaf6a, 0x7950, 0xc7f, 0x8b50, 0xb4cc, 0x0, 0x0);
        gbc.writeMem(0x45d5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xaf6a);
        EXPECT(gbc.pc(), 0x45d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00B7
        gbc.setState(0x8e8b, 0xfa18, 0x72c0, 0x168e, 0x8ff4, 0x8339, 0x1, 0x1);
        gbc.writeMem(0x8e8b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xfa18);
        EXPECT(gbc.pc(), 0x8e8d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e8b), 0xcb);
        EXPECT(gbc.readMem(0x8e8c), 0x71);
        // CB 71 00B8
        gbc.setState(0x4fe4, 0x4a60, 0x96b0, 0xb0c1, 0xb13f, 0x30b0, 0x0, 0x1);
        gbc.writeMem(0x4fe4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x4a60);
        EXPECT(gbc.pc(), 0x4fe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00B9
        gbc.setState(0xa8ac, 0x9e5f, 0xe960, 0x13ab, 0x70d6, 0x6c58, 0x1, 0x1);
        gbc.writeMem(0xa8ac, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x9e5f);
        EXPECT(gbc.pc(), 0xa8ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8ac), 0xcb);
        EXPECT(gbc.readMem(0xa8ad), 0x71);
        // CB 71 00BA
        gbc.setState(0x15, 0xfdd6, 0x4ef0, 0x7403, 0x313d, 0x975f, 0x1, 0x0);
        gbc.writeMem(0x15, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xfdd6);
        EXPECT(gbc.pc(), 0x17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00BB
        gbc.setState(0x907d, 0xf92f, 0x4b0, 0xed6, 0x98d2, 0x7abd, 0x1, 0x1);
        gbc.writeMem(0x907d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xf92f);
        EXPECT(gbc.pc(), 0x907f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x907d), 0xcb);
        EXPECT(gbc.readMem(0x907e), 0x71);
        // CB 71 00BC
        gbc.setState(0x50d9, 0x7015, 0xec30, 0x8003, 0x5134, 0x52c6, 0x0, 0x0);
        gbc.writeMem(0x50d9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x7015);
        EXPECT(gbc.pc(), 0x50db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00BD
        gbc.setState(0xb8cf, 0x63fe, 0xe1c0, 0xfe52, 0xcc59, 0x6c13, 0x1, 0x0);
        gbc.writeMem(0xb8cf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x63fe);
        EXPECT(gbc.pc(), 0xb8d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8cf), 0xcb);
        EXPECT(gbc.readMem(0xb8d0), 0x71);
        // CB 71 00BE
        gbc.setState(0x6e58, 0xdc37, 0x280, 0x40fd, 0x29c9, 0x4aeb, 0x1, 0x0);
        gbc.writeMem(0x6e58, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xdc37);
        EXPECT(gbc.pc(), 0x6e5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00BF
        gbc.setState(0x1b66, 0x5400, 0x9eb0, 0x5b24, 0xd1a6, 0xaf0c, 0x1, 0x1);
        gbc.writeMem(0x1b66, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5400);
        EXPECT(gbc.pc(), 0x1b68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00C0
        gbc.setState(0x6864, 0x4594, 0x99d0, 0x207b, 0x87b8, 0xa616, 0x0, 0x1);
        gbc.writeMem(0x6864, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x4594);
        EXPECT(gbc.pc(), 0x6866);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00C1
        gbc.setState(0x8e1e, 0xae10, 0xe550, 0x461d, 0xded5, 0xfaef, 0x0, 0x0);
        gbc.writeMem(0x8e1e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xae10);
        EXPECT(gbc.pc(), 0x8e20);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e1e), 0xcb);
        EXPECT(gbc.readMem(0x8e1f), 0x71);
        // CB 71 00C2
        gbc.setState(0x9e03, 0x27b0, 0x2230, 0xb4ea, 0x5c19, 0xa187, 0x1, 0x1);
        gbc.writeMem(0x9e03, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x27b0);
        EXPECT(gbc.pc(), 0x9e05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e03), 0xcb);
        EXPECT(gbc.readMem(0x9e04), 0x71);
        // CB 71 00C3
        gbc.setState(0x8ca1, 0xad07, 0xeda0, 0x9c05, 0xc049, 0xd31a, 0x1, 0x0);
        gbc.writeMem(0x8ca1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xad07);
        EXPECT(gbc.pc(), 0x8ca3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ca1), 0xcb);
        EXPECT(gbc.readMem(0x8ca2), 0x71);
        // CB 71 00C5
        gbc.setState(0x8a44, 0xf404, 0x1a80, 0x11d0, 0x1e18, 0x1d6, 0x0, 0x0);
        gbc.writeMem(0x8a44, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xf404);
        EXPECT(gbc.pc(), 0x8a46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a44), 0xcb);
        EXPECT(gbc.readMem(0x8a45), 0x71);
        // CB 71 00C6
        gbc.setState(0xb642, 0x9a22, 0x8be0, 0xe787, 0x3d0, 0x7470, 0x1, 0x0);
        gbc.writeMem(0xb642, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x9a22);
        EXPECT(gbc.pc(), 0xb644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb642), 0xcb);
        EXPECT(gbc.readMem(0xb643), 0x71);
        // CB 71 00C7
        gbc.setState(0x1ab8, 0x6fc, 0xaa10, 0x8e41, 0x5524, 0xacfa, 0x0, 0x1);
        gbc.writeMem(0x1ab8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6fc);
        EXPECT(gbc.pc(), 0x1aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00C8
        gbc.setState(0x1c75, 0x81a2, 0x610, 0xbcb5, 0xaa8b, 0x3347, 0x0, 0x0);
        gbc.writeMem(0x1c75, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x81a2);
        EXPECT(gbc.pc(), 0x1c77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00CA
        gbc.setState(0xace1, 0x4f91, 0xee30, 0x2e6b, 0x4e7, 0x995a, 0x1, 0x0);
        gbc.writeMem(0xace1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x4f91);
        EXPECT(gbc.pc(), 0xace3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xace1), 0xcb);
        EXPECT(gbc.readMem(0xace2), 0x71);
        // CB 71 00CB
        gbc.setState(0x88da, 0x99fb, 0x72c0, 0xaa4c, 0x3eba, 0x7817, 0x0, 0x1);
        gbc.writeMem(0x88da, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x99fb);
        EXPECT(gbc.pc(), 0x88dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88da), 0xcb);
        EXPECT(gbc.readMem(0x88db), 0x71);
        // CB 71 00CC
        gbc.setState(0x7388, 0xa617, 0xd770, 0xe186, 0xc5e9, 0xf22c, 0x0, 0x0);
        gbc.writeMem(0x7388, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa617);
        EXPECT(gbc.pc(), 0x738a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00CD
        gbc.setState(0x76e5, 0x3ce9, 0x1af0, 0x47c2, 0x73d5, 0x9b82, 0x1, 0x1);
        gbc.writeMem(0x76e5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x3ce9);
        EXPECT(gbc.pc(), 0x76e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00CE
        gbc.setState(0x6969, 0xb685, 0x27b0, 0x201d, 0x944, 0x325e, 0x1, 0x1);
        gbc.writeMem(0x6969, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb685);
        EXPECT(gbc.pc(), 0x696b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00CF
        gbc.setState(0xd7c8, 0xfbb6, 0x9270, 0x657c, 0xb3c3, 0x859e, 0x1, 0x1);
        gbc.writeMem(0xd7c8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xfbb6);
        EXPECT(gbc.pc(), 0xd7ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7c8), 0xcb);
        EXPECT(gbc.readMem(0xd7c9), 0x71);
        // CB 71 00D1
        gbc.setState(0x2bc0, 0x8b7a, 0xb700, 0xf811, 0x1f1d, 0x1303, 0x1, 0x1);
        gbc.writeMem(0x2bc0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8b7a);
        EXPECT(gbc.pc(), 0x2bc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00D2
        gbc.setState(0x570f, 0xa496, 0xc520, 0x5591, 0xbc08, 0x6323, 0x0, 0x1);
        gbc.writeMem(0x570f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xa496);
        EXPECT(gbc.pc(), 0x5711);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00D3
        gbc.setState(0xf07, 0xf7d9, 0xef70, 0x4f75, 0x989a, 0x975c, 0x1, 0x0);
        gbc.writeMem(0xf07, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xf7d9);
        EXPECT(gbc.pc(), 0xf09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00D4
        gbc.setState(0x8813, 0xa8db, 0x2820, 0x7e16, 0x1b2e, 0x3a6c, 0x1, 0x1);
        gbc.writeMem(0x8813, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xa8db);
        EXPECT(gbc.pc(), 0x8815);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8813), 0xcb);
        EXPECT(gbc.readMem(0x8814), 0x71);
        // CB 71 00D5
        gbc.setState(0xb4a9, 0x7ae8, 0xe810, 0x88a3, 0x1abe, 0xa546, 0x0, 0x1);
        gbc.writeMem(0xb4a9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x7ae8);
        EXPECT(gbc.pc(), 0xb4ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4a9), 0xcb);
        EXPECT(gbc.readMem(0xb4aa), 0x71);
        // CB 71 00D6
        gbc.setState(0x811e, 0xad20, 0x9da0, 0xde9e, 0x1f84, 0x4aef, 0x0, 0x1);
        gbc.writeMem(0x811e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xad20);
        EXPECT(gbc.pc(), 0x8120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x811e), 0xcb);
        EXPECT(gbc.readMem(0x811f), 0x71);
        // CB 71 00D7
        gbc.setState(0x9eb, 0x79fb, 0x7f30, 0xed5b, 0xe5f2, 0xfc7c, 0x1, 0x1);
        gbc.writeMem(0x9eb, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x79fb);
        EXPECT(gbc.pc(), 0x9ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00D8
        gbc.setState(0x2a32, 0x2774, 0xb1c0, 0xb18, 0x4111, 0x5d82, 0x0, 0x1);
        gbc.writeMem(0x2a32, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x2774);
        EXPECT(gbc.pc(), 0x2a34);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00D9
        gbc.setState(0xe0f, 0xc1df, 0x80c0, 0x1eba, 0x332, 0xb2c0, 0x0, 0x0);
        gbc.writeMem(0xe0f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xc1df);
        EXPECT(gbc.pc(), 0xe11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00DA
        gbc.setState(0x64fd, 0xae7a, 0x3c70, 0x699b, 0x61a4, 0xd5a7, 0x1, 0x0);
        gbc.writeMem(0x64fd, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xae7a);
        EXPECT(gbc.pc(), 0x64ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00DB
        gbc.setState(0x34ab, 0x3a63, 0xac90, 0xee41, 0xf2ab, 0x3251, 0x0, 0x1);
        gbc.writeMem(0x34ab, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x3a63);
        EXPECT(gbc.pc(), 0x34ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00DC
        gbc.setState(0x125d, 0x9b6d, 0xcff0, 0x106b, 0x2186, 0x91fb, 0x0, 0x1);
        gbc.writeMem(0x125d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9b6d);
        EXPECT(gbc.pc(), 0x125f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00DD
        gbc.setState(0xd336, 0xe2e8, 0x48a0, 0x47e8, 0xeacd, 0x3629, 0x0, 0x0);
        gbc.writeMem(0xd336, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe2e8);
        EXPECT(gbc.pc(), 0xd338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd336), 0xcb);
        EXPECT(gbc.readMem(0xd337), 0x71);
        // CB 71 00DE
        gbc.setState(0x9932, 0x1bfe, 0x6d80, 0xcc38, 0x7c17, 0xf2ac, 0x0, 0x1);
        gbc.writeMem(0x9932, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1bfe);
        EXPECT(gbc.pc(), 0x9934);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9932), 0xcb);
        EXPECT(gbc.readMem(0x9933), 0x71);
        // CB 71 00DF
        gbc.setState(0xc582, 0xf08, 0xec40, 0xb1b5, 0x5fee, 0x3ace, 0x0, 0x0);
        gbc.writeMem(0xc582, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf08);
        EXPECT(gbc.pc(), 0xc584);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc582), 0xcb);
        EXPECT(gbc.readMem(0xc583), 0x71);
        // CB 71 00E0
        gbc.setState(0x3fff, 0xa6ff, 0x6fa0, 0xa590, 0xd22f, 0x6a9a, 0x1, 0x1);
        gbc.writeMem(0x3fff, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa6ff);
        EXPECT(gbc.pc(), 0x4001);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00E1
        gbc.setState(0xe2ae, 0x35f4, 0x2260, 0x3172, 0xd43e, 0xd232, 0x1, 0x0);
        gbc.writeMem(0xe2ae, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x35f4);
        EXPECT(gbc.pc(), 0xe2b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2ae), 0xcb);
        EXPECT(gbc.readMem(0xe2af), 0x71);
        // CB 71 00E3
        gbc.setState(0x3c7d, 0xfa01, 0x1ce0, 0xe1db, 0xd64e, 0x958, 0x1, 0x1);
        gbc.writeMem(0x3c7d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xfa01);
        EXPECT(gbc.pc(), 0x3c7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00E4
        gbc.setState(0xb899, 0x4cf, 0xe7b0, 0x8a9f, 0x9b02, 0x2de5, 0x1, 0x1);
        gbc.writeMem(0xb899, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4cf);
        EXPECT(gbc.pc(), 0xb89b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb899), 0xcb);
        EXPECT(gbc.readMem(0xb89a), 0x71);
        // CB 71 00E5
        gbc.setState(0x3d1c, 0xeb1f, 0x8c10, 0x6fd8, 0xa4d9, 0xa5ba, 0x0, 0x1);
        gbc.writeMem(0x3d1c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xeb1f);
        EXPECT(gbc.pc(), 0x3d1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00E6
        gbc.setState(0x72a8, 0x755c, 0x4350, 0xfbb7, 0x354c, 0xec77, 0x1, 0x0);
        gbc.writeMem(0x72a8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x755c);
        EXPECT(gbc.pc(), 0x72aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00E7
        gbc.setState(0x95e3, 0x6e70, 0x6060, 0x54ec, 0xbe8d, 0xbf23, 0x0, 0x0);
        gbc.writeMem(0x95e3, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x6e70);
        EXPECT(gbc.pc(), 0x95e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e3), 0xcb);
        EXPECT(gbc.readMem(0x95e4), 0x71);
        // CB 71 00E8
        gbc.setState(0xd304, 0xe05b, 0xd8a0, 0x7cf9, 0xe4f6, 0xb222, 0x0, 0x0);
        gbc.writeMem(0xd304, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe05b);
        EXPECT(gbc.pc(), 0xd306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd304), 0xcb);
        EXPECT(gbc.readMem(0xd305), 0x71);
        // CB 71 00E9
        gbc.setState(0x40ed, 0x1c8d, 0x1370, 0xa8d9, 0x2152, 0x9da2, 0x0, 0x0);
        gbc.writeMem(0x40ed, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x1c8d);
        EXPECT(gbc.pc(), 0x40ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00EA
        gbc.setState(0xd1bd, 0x5cfe, 0x6a10, 0x1ed6, 0x5f70, 0xffcf, 0x1, 0x0);
        gbc.writeMem(0xd1bd, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x5cfe);
        EXPECT(gbc.pc(), 0xd1bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1bd), 0xcb);
        EXPECT(gbc.readMem(0xd1be), 0x71);
        // CB 71 00EB
        gbc.setState(0xda98, 0xa963, 0x1060, 0xbf6e, 0xbf9d, 0xa6bb, 0x0, 0x1);
        gbc.writeMem(0xda98, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa963);
        EXPECT(gbc.pc(), 0xda9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda98), 0xcb);
        EXPECT(gbc.readMem(0xda99), 0x71);
        // CB 71 00EC
        gbc.setState(0xc9aa, 0xb40f, 0x3860, 0xfd66, 0x317c, 0xd9a0, 0x0, 0x1);
        gbc.writeMem(0xc9aa, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb40f);
        EXPECT(gbc.pc(), 0xc9ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9aa), 0xcb);
        EXPECT(gbc.readMem(0xc9ab), 0x71);
        // CB 71 00ED
        gbc.setState(0x9869, 0x912e, 0x3910, 0x76fe, 0x6718, 0xd02a, 0x0, 0x1);
        gbc.writeMem(0x9869, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x912e);
        EXPECT(gbc.pc(), 0x986b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9869), 0xcb);
        EXPECT(gbc.readMem(0x986a), 0x71);
        // CB 71 00EE
        gbc.setState(0x9e16, 0x770a, 0x71c0, 0x3383, 0xe03c, 0x8e7, 0x0, 0x1);
        gbc.writeMem(0x9e16, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x770a);
        EXPECT(gbc.pc(), 0x9e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e16), 0xcb);
        EXPECT(gbc.readMem(0x9e17), 0x71);
        // CB 71 00EF
        gbc.setState(0xbc53, 0x8393, 0x7cc0, 0x6ca3, 0x8ea5, 0xdc72, 0x1, 0x1);
        gbc.writeMem(0xbc53, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8393);
        EXPECT(gbc.pc(), 0xbc55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc53), 0xcb);
        EXPECT(gbc.readMem(0xbc54), 0x71);
        // CB 71 00F0
        gbc.setState(0x44be, 0xa9f8, 0xa990, 0x5f21, 0xe425, 0xfea3, 0x1, 0x1);
        gbc.writeMem(0x44be, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xa9f8);
        EXPECT(gbc.pc(), 0x44c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00F1
        gbc.setState(0x7c27, 0x8ac7, 0x4620, 0x3c87, 0x1c21, 0x2524, 0x1, 0x1);
        gbc.writeMem(0x7c27, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8ac7);
        EXPECT(gbc.pc(), 0x7c29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00F2
        gbc.setState(0x830a, 0xd52, 0x4ce0, 0x5c6e, 0x7a8c, 0x7b6a, 0x1, 0x1);
        gbc.writeMem(0x830a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xd52);
        EXPECT(gbc.pc(), 0x830c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x830a), 0xcb);
        EXPECT(gbc.readMem(0x830b), 0x71);
        // CB 71 00F3
        gbc.setState(0xad9d, 0x10c9, 0x3580, 0x18a3, 0x9f4f, 0xcc50, 0x0, 0x0);
        gbc.writeMem(0xad9d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x10c9);
        EXPECT(gbc.pc(), 0xad9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad9d), 0xcb);
        EXPECT(gbc.readMem(0xad9e), 0x71);
        // CB 71 00F4
        gbc.setState(0x67f7, 0x86ce, 0xc30, 0xb32c, 0xa422, 0xe20e, 0x0, 0x1);
        gbc.writeMem(0x67f7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x86ce);
        EXPECT(gbc.pc(), 0x67f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00F5
        gbc.setState(0x295f, 0xfe02, 0xa730, 0x36f3, 0x8c41, 0x835, 0x0, 0x0);
        gbc.writeMem(0x295f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xfe02);
        EXPECT(gbc.pc(), 0x2961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00F6
        gbc.setState(0xd0d7, 0xc217, 0xd4d0, 0xf335, 0x5b85, 0xf43a, 0x1, 0x0);
        gbc.writeMem(0xd0d7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc217);
        EXPECT(gbc.pc(), 0xd0d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0d7), 0xcb);
        EXPECT(gbc.readMem(0xd0d8), 0x71);
        // CB 71 00F7
        gbc.setState(0x9a81, 0x42f8, 0xdcb0, 0x6810, 0x89b4, 0xdc72, 0x1, 0x0);
        gbc.writeMem(0x9a81, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x42f8);
        EXPECT(gbc.pc(), 0x9a83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a81), 0xcb);
        EXPECT(gbc.readMem(0x9a82), 0x71);
        // CB 71 00F8
        gbc.setState(0x3f1, 0xe65, 0x5df0, 0xebf0, 0xa4a2, 0xd63e, 0x0, 0x0);
        gbc.writeMem(0x3f1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xe65);
        EXPECT(gbc.pc(), 0x3f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00F9
        gbc.setState(0x13d4, 0x666f, 0x1280, 0xb415, 0x5bb0, 0x9a4d, 0x0, 0x1);
        gbc.writeMem(0x13d4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x666f);
        EXPECT(gbc.pc(), 0x13d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 00FA
        gbc.setState(0x32aa, 0xe85c, 0x5cf0, 0xf09e, 0x36c3, 0x5025, 0x1, 0x0);
        gbc.writeMem(0x32aa, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe85c);
        EXPECT(gbc.pc(), 0x32ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00FB
        gbc.setState(0xd929, 0x5741, 0x1bb0, 0xf046, 0xea3e, 0x8b32, 0x1, 0x0);
        gbc.writeMem(0xd929, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5741);
        EXPECT(gbc.pc(), 0xd92b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd929), 0xcb);
        EXPECT(gbc.readMem(0xd92a), 0x71);
        // CB 71 00FC
        gbc.setState(0x370f, 0xfb3e, 0xcfb0, 0xbfaf, 0xd748, 0xa4b, 0x1, 0x1);
        gbc.writeMem(0x370f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xfb3e);
        EXPECT(gbc.pc(), 0x3711);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 00FD
        gbc.setState(0xe81e, 0x3717, 0x88e0, 0xa26b, 0xc4eb, 0x3362, 0x1, 0x0);
        gbc.writeMem(0xe81e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3717);
        EXPECT(gbc.pc(), 0xe820);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe81e), 0xcb);
        EXPECT(gbc.readMem(0xe81f), 0x71);
        // CB 71 00FE
        gbc.setState(0xeca3, 0xca6, 0x10, 0x14b4, 0x9556, 0x19de, 0x0, 0x1);
        gbc.writeMem(0xeca3, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xca6);
        EXPECT(gbc.pc(), 0xeca5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeca3), 0xcb);
        EXPECT(gbc.readMem(0xeca4), 0x71);
        // CB 71 00FF
        gbc.setState(0x6bca, 0x1b0, 0xa1a0, 0x106b, 0xab61, 0xb91c, 0x1, 0x0);
        gbc.writeMem(0x6bca, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x1b0);
        EXPECT(gbc.pc(), 0x6bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0100
        gbc.setState(0xe6f0, 0x801, 0x3080, 0x6631, 0xb9a, 0xe4be, 0x1, 0x0);
        gbc.writeMem(0xe6f0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x801);
        EXPECT(gbc.pc(), 0xe6f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6f0), 0xcb);
        EXPECT(gbc.readMem(0xe6f1), 0x71);
        // CB 71 0101
        gbc.setState(0x147e, 0x9377, 0x1b20, 0xd1ca, 0x5829, 0x8d8c, 0x1, 0x1);
        gbc.writeMem(0x147e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9377);
        EXPECT(gbc.pc(), 0x1480);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0102
        gbc.setState(0x1e37, 0xa88, 0x1960, 0x172a, 0xe263, 0xd86a, 0x1, 0x1);
        gbc.writeMem(0x1e37, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xa88);
        EXPECT(gbc.pc(), 0x1e39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0103
        gbc.setState(0x3e26, 0x3148, 0x4dc0, 0x1d33, 0x201f, 0xfb28, 0x0, 0x1);
        gbc.writeMem(0x3e26, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x3148);
        EXPECT(gbc.pc(), 0x3e28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0105
        gbc.setState(0xc954, 0x7d7, 0x7760, 0xc568, 0x4d72, 0x8bc8, 0x1, 0x0);
        gbc.writeMem(0xc954, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x7d7);
        EXPECT(gbc.pc(), 0xc956);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc954), 0xcb);
        EXPECT(gbc.readMem(0xc955), 0x71);
        // CB 71 0106
        gbc.setState(0xcc17, 0x33ec, 0xad80, 0x7cc4, 0xeb0d, 0x341d, 0x1, 0x0);
        gbc.writeMem(0xcc17, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x33ec);
        EXPECT(gbc.pc(), 0xcc19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc17), 0xcb);
        EXPECT(gbc.readMem(0xcc18), 0x71);
        // CB 71 0107
        gbc.setState(0x2fcd, 0x1510, 0x7430, 0x60f1, 0x3652, 0x7753, 0x1, 0x0);
        gbc.writeMem(0x2fcd, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x1510);
        EXPECT(gbc.pc(), 0x2fcf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0108
        gbc.setState(0x7d4e, 0x748, 0xc390, 0x859a, 0x5620, 0x29d2, 0x0, 0x1);
        gbc.writeMem(0x7d4e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x748);
        EXPECT(gbc.pc(), 0x7d50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0109
        gbc.setState(0x4210, 0x83de, 0x38f0, 0x49cf, 0x4cd2, 0xff36, 0x0, 0x0);
        gbc.writeMem(0x4210, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x83de);
        EXPECT(gbc.pc(), 0x4212);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 010A
        gbc.setState(0xa056, 0x37d4, 0x4cd0, 0xaa85, 0x1995, 0x1acd, 0x1, 0x1);
        gbc.writeMem(0xa056, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x37d4);
        EXPECT(gbc.pc(), 0xa058);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa056), 0xcb);
        EXPECT(gbc.readMem(0xa057), 0x71);
        // CB 71 010B
        gbc.setState(0x9333, 0x3841, 0xdca0, 0xb811, 0xd2c7, 0x76fa, 0x0, 0x1);
        gbc.writeMem(0x9333, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3841);
        EXPECT(gbc.pc(), 0x9335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9333), 0xcb);
        EXPECT(gbc.readMem(0x9334), 0x71);
        // CB 71 010C
        gbc.setState(0x18d8, 0xe6d8, 0x7470, 0x403e, 0x3cbb, 0x84ab, 0x0, 0x0);
        gbc.writeMem(0x18d8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe6d8);
        EXPECT(gbc.pc(), 0x18da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 010D
        gbc.setState(0xc876, 0xd5e6, 0xe50, 0x1fa, 0x7138, 0x69f0, 0x1, 0x1);
        gbc.writeMem(0xc876, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd5e6);
        EXPECT(gbc.pc(), 0xc878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc876), 0xcb);
        EXPECT(gbc.readMem(0xc877), 0x71);
        // CB 71 010F
        gbc.setState(0x4ac0, 0x2875, 0xa070, 0xc5, 0x65b6, 0x896f, 0x0, 0x0);
        gbc.writeMem(0x4ac0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x2875);
        EXPECT(gbc.pc(), 0x4ac2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0110
        gbc.setState(0x332, 0xb720, 0x8b70, 0x1b0, 0xa825, 0xe995, 0x1, 0x1);
        gbc.writeMem(0x332, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb720);
        EXPECT(gbc.pc(), 0x334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0111
        gbc.setState(0x1de4, 0x1f13, 0xc180, 0x76e0, 0x45a4, 0xb698, 0x1, 0x1);
        gbc.writeMem(0x1de4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x1f13);
        EXPECT(gbc.pc(), 0x1de6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0112
        gbc.setState(0x1f7a, 0xd9da, 0x4a30, 0x8e53, 0x26ed, 0x4355, 0x1, 0x0);
        gbc.writeMem(0x1f7a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xd9da);
        EXPECT(gbc.pc(), 0x1f7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0113
        gbc.setState(0x3a00, 0xeb05, 0xd920, 0x54aa, 0xdea8, 0xabba, 0x0, 0x1);
        gbc.writeMem(0x3a00, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xeb05);
        EXPECT(gbc.pc(), 0x3a02);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0114
        gbc.setState(0x986a, 0xf65a, 0x97f0, 0xadde, 0xed22, 0x9951, 0x0, 0x0);
        gbc.writeMem(0x986a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf65a);
        EXPECT(gbc.pc(), 0x986c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x986a), 0xcb);
        EXPECT(gbc.readMem(0x986b), 0x71);
        // CB 71 0115
        gbc.setState(0x7a96, 0xbd09, 0x6040, 0x48a6, 0x1d5b, 0xd7a7, 0x1, 0x1);
        gbc.writeMem(0x7a96, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xbd09);
        EXPECT(gbc.pc(), 0x7a98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0116
        gbc.setState(0xd4b7, 0x1910, 0xcf90, 0x7beb, 0x1315, 0xd47b, 0x0, 0x1);
        gbc.writeMem(0xd4b7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x1910);
        EXPECT(gbc.pc(), 0xd4b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4b7), 0xcb);
        EXPECT(gbc.readMem(0xd4b8), 0x71);
        // CB 71 0117
        gbc.setState(0x654f, 0xcee5, 0x6d90, 0xcad8, 0x443d, 0x147d, 0x1, 0x1);
        gbc.writeMem(0x654f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xcee5);
        EXPECT(gbc.pc(), 0x6551);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0118
        gbc.setState(0x7c42, 0xb425, 0x8c50, 0x8e6a, 0x65dc, 0x40fe, 0x0, 0x1);
        gbc.writeMem(0x7c42, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xb425);
        EXPECT(gbc.pc(), 0x7c44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0119
        gbc.setState(0x9e83, 0x8dff, 0x2500, 0x533, 0xb568, 0x212b, 0x1, 0x0);
        gbc.writeMem(0x9e83, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8dff);
        EXPECT(gbc.pc(), 0x9e85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e83), 0xcb);
        EXPECT(gbc.readMem(0x9e84), 0x71);
        // CB 71 011A
        gbc.setState(0x42aa, 0xb6d3, 0xa480, 0xfd00, 0xd4da, 0x8bcb, 0x0, 0x0);
        gbc.writeMem(0x42aa, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xb6d3);
        EXPECT(gbc.pc(), 0x42ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 011C
        gbc.setState(0x62bb, 0x1073, 0x7940, 0x3bca, 0xce2f, 0x5087, 0x0, 0x1);
        gbc.writeMem(0x62bb, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x1073);
        EXPECT(gbc.pc(), 0x62bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 011D
        gbc.setState(0x5ed7, 0xccba, 0x3f40, 0x40ac, 0x3273, 0xfdf9, 0x0, 0x1);
        gbc.writeMem(0x5ed7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xccba);
        EXPECT(gbc.pc(), 0x5ed9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 011E
        gbc.setState(0xd42a, 0x2dc7, 0x47d0, 0x6cbc, 0x3472, 0xbf4f, 0x0, 0x0);
        gbc.writeMem(0xd42a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2dc7);
        EXPECT(gbc.pc(), 0xd42c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd42a), 0xcb);
        EXPECT(gbc.readMem(0xd42b), 0x71);
        // CB 71 0120
        gbc.setState(0x30e5, 0x6e23, 0x9c70, 0x6bfa, 0xf8a4, 0xa951, 0x0, 0x1);
        gbc.writeMem(0x30e5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x6e23);
        EXPECT(gbc.pc(), 0x30e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0121
        gbc.setState(0x1a83, 0x8561, 0xa6c0, 0xc17c, 0xabf2, 0x53a, 0x0, 0x1);
        gbc.writeMem(0x1a83, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8561);
        EXPECT(gbc.pc(), 0x1a85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0122
        gbc.setState(0x15a5, 0x6f6b, 0xfb80, 0x3005, 0x2613, 0x78ec, 0x1, 0x0);
        gbc.writeMem(0x15a5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6f6b);
        EXPECT(gbc.pc(), 0x15a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0123
        gbc.setState(0x96b1, 0x9da8, 0xadb0, 0x1478, 0xbe2e, 0xa3fb, 0x0, 0x0);
        gbc.writeMem(0x96b1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9da8);
        EXPECT(gbc.pc(), 0x96b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96b1), 0xcb);
        EXPECT(gbc.readMem(0x96b2), 0x71);
        // CB 71 0124
        gbc.setState(0xa307, 0xd0a9, 0xdb40, 0x9243, 0x269c, 0x6413, 0x1, 0x1);
        gbc.writeMem(0xa307, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd0a9);
        EXPECT(gbc.pc(), 0xa309);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa307), 0xcb);
        EXPECT(gbc.readMem(0xa308), 0x71);
        // CB 71 0125
        gbc.setState(0x7f28, 0x74d4, 0xf460, 0xc365, 0x7b57, 0x57ad, 0x1, 0x0);
        gbc.writeMem(0x7f28, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x74d4);
        EXPECT(gbc.pc(), 0x7f2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0126
        gbc.setState(0x81ec, 0x5aa9, 0xd980, 0xa290, 0xe866, 0x97fa, 0x0, 0x0);
        gbc.writeMem(0x81ec, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x5aa9);
        EXPECT(gbc.pc(), 0x81ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81ec), 0xcb);
        EXPECT(gbc.readMem(0x81ed), 0x71);
        // CB 71 0127
        gbc.setState(0x1215, 0x766a, 0x60e0, 0x8df1, 0x82a7, 0xaed2, 0x1, 0x0);
        gbc.writeMem(0x1215, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x766a);
        EXPECT(gbc.pc(), 0x1217);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0128
        gbc.setState(0xe405, 0x1339, 0x200, 0x24e0, 0x793f, 0xc2b6, 0x1, 0x0);
        gbc.writeMem(0xe405, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x1339);
        EXPECT(gbc.pc(), 0xe407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe405), 0xcb);
        EXPECT(gbc.readMem(0xe406), 0x71);
        // CB 71 0129
        gbc.setState(0x5486, 0x1a6e, 0x1130, 0xc86b, 0x53e0, 0xc4ac, 0x1, 0x0);
        gbc.writeMem(0x5486, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x1a6e);
        EXPECT(gbc.pc(), 0x5488);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 012A
        gbc.setState(0x6ebc, 0xfb58, 0xb950, 0xb9b2, 0x81c9, 0x5206, 0x0, 0x1);
        gbc.writeMem(0x6ebc, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xfb58);
        EXPECT(gbc.pc(), 0x6ebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 012B
        gbc.setState(0xb731, 0x44a6, 0x3ef0, 0xe801, 0xc6f8, 0x27f9, 0x1, 0x1);
        gbc.writeMem(0xb731, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x44a6);
        EXPECT(gbc.pc(), 0xb733);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb731), 0xcb);
        EXPECT(gbc.readMem(0xb732), 0x71);
        // CB 71 012C
        gbc.setState(0x6283, 0x15d1, 0x40c0, 0xd979, 0x673e, 0xbf6a, 0x1, 0x1);
        gbc.writeMem(0x6283, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x15d1);
        EXPECT(gbc.pc(), 0x6285);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 012D
        gbc.setState(0x2660, 0xa801, 0x9750, 0x997b, 0x6bc2, 0x24d2, 0x0, 0x0);
        gbc.writeMem(0x2660, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xa801);
        EXPECT(gbc.pc(), 0x2662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 012E
        gbc.setState(0x7f45, 0x7eb0, 0x7610, 0xe799, 0x23d9, 0xc91b, 0x1, 0x0);
        gbc.writeMem(0x7f45, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7eb0);
        EXPECT(gbc.pc(), 0x7f47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 012F
        gbc.setState(0x749e, 0xa0b7, 0x70c0, 0x29f4, 0x5aa, 0xc809, 0x0, 0x0);
        gbc.writeMem(0x749e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xa0b7);
        EXPECT(gbc.pc(), 0x74a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0130
        gbc.setState(0x3086, 0xf860, 0xd260, 0x30f0, 0xe4b9, 0xfd48, 0x1, 0x1);
        gbc.writeMem(0x3086, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf860);
        EXPECT(gbc.pc(), 0x3088);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0131
        gbc.setState(0xd364, 0xca7c, 0xc1d0, 0x5247, 0xe4af, 0x23df, 0x1, 0x0);
        gbc.writeMem(0xd364, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xca7c);
        EXPECT(gbc.pc(), 0xd366);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd364), 0xcb);
        EXPECT(gbc.readMem(0xd365), 0x71);
        // CB 71 0132
        gbc.setState(0x31d8, 0x2e0e, 0x5380, 0xe663, 0x6224, 0x49b4, 0x1, 0x0);
        gbc.writeMem(0x31d8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2e0e);
        EXPECT(gbc.pc(), 0x31da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0133
        gbc.setState(0xbe61, 0xa126, 0x2220, 0x29a0, 0xc414, 0x43b6, 0x1, 0x1);
        gbc.writeMem(0xbe61, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xa126);
        EXPECT(gbc.pc(), 0xbe63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe61), 0xcb);
        EXPECT(gbc.readMem(0xbe62), 0x71);
        // CB 71 0134
        gbc.setState(0x8095, 0x3871, 0xd770, 0x2519, 0x88e6, 0xdade, 0x1, 0x1);
        gbc.writeMem(0x8095, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x3871);
        EXPECT(gbc.pc(), 0x8097);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8095), 0xcb);
        EXPECT(gbc.readMem(0x8096), 0x71);
        // CB 71 0135
        gbc.setState(0x1b27, 0xb258, 0x56b0, 0xed4c, 0xcead, 0x7a1e, 0x0, 0x1);
        gbc.writeMem(0x1b27, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb258);
        EXPECT(gbc.pc(), 0x1b29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0136
        gbc.setState(0x59f2, 0x14d9, 0x1aa0, 0xd533, 0x92e0, 0x4767, 0x0, 0x0);
        gbc.writeMem(0x59f2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x14d9);
        EXPECT(gbc.pc(), 0x59f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0137
        gbc.setState(0x4c9a, 0x47cf, 0x3730, 0x41a2, 0x52a2, 0xb4b0, 0x1, 0x1);
        gbc.writeMem(0x4c9a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x47cf);
        EXPECT(gbc.pc(), 0x4c9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0138
        gbc.setState(0xa1c5, 0xfe37, 0x8020, 0x7124, 0x8aed, 0xf680, 0x0, 0x0);
        gbc.writeMem(0xa1c5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xfe37);
        EXPECT(gbc.pc(), 0xa1c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1c5), 0xcb);
        EXPECT(gbc.readMem(0xa1c6), 0x71);
        // CB 71 0139
        gbc.setState(0xef44, 0xdf58, 0xf0d0, 0x2176, 0x81db, 0xd62b, 0x0, 0x0);
        gbc.writeMem(0xef44, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xdf58);
        EXPECT(gbc.pc(), 0xef46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef44), 0xcb);
        EXPECT(gbc.readMem(0xef45), 0x71);
        // CB 71 013A
        gbc.setState(0x6502, 0xf4a5, 0xdb20, 0x598b, 0xaf50, 0xd5cf, 0x1, 0x1);
        gbc.writeMem(0x6502, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xf4a5);
        EXPECT(gbc.pc(), 0x6504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 013C
        gbc.setState(0xe41d, 0x99da, 0xbf00, 0xa85b, 0x5270, 0x255b, 0x0, 0x1);
        gbc.writeMem(0xe41d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x99da);
        EXPECT(gbc.pc(), 0xe41f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe41d), 0xcb);
        EXPECT(gbc.readMem(0xe41e), 0x71);
        // CB 71 013D
        gbc.setState(0x4d77, 0x923, 0x1210, 0xa5ae, 0x2e2b, 0x8a62, 0x0, 0x1);
        gbc.writeMem(0x4d77, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x923);
        EXPECT(gbc.pc(), 0x4d79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 013E
        gbc.setState(0x3f51, 0x877c, 0x57e0, 0x9a26, 0x1178, 0xa381, 0x1, 0x1);
        gbc.writeMem(0x3f51, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x877c);
        EXPECT(gbc.pc(), 0x3f53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 013F
        gbc.setState(0xc6c0, 0x462a, 0x2be0, 0xe6a9, 0xadfd, 0x249c, 0x0, 0x0);
        gbc.writeMem(0xc6c0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x462a);
        EXPECT(gbc.pc(), 0xc6c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c0), 0xcb);
        EXPECT(gbc.readMem(0xc6c1), 0x71);
        // CB 71 0140
        gbc.setState(0x5ffc, 0x9bd4, 0x8dd0, 0xf4fa, 0xc830, 0xda59, 0x0, 0x0);
        gbc.writeMem(0x5ffc, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9bd4);
        EXPECT(gbc.pc(), 0x5ffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0141
        gbc.setState(0x9985, 0x1b3c, 0xe980, 0x6507, 0xa325, 0xb593, 0x0, 0x1);
        gbc.writeMem(0x9985, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x1b3c);
        EXPECT(gbc.pc(), 0x9987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9985), 0xcb);
        EXPECT(gbc.readMem(0x9986), 0x71);
        // CB 71 0142
        gbc.setState(0xbcc7, 0xdf68, 0x9050, 0xdb25, 0xadda, 0x81b8, 0x1, 0x0);
        gbc.writeMem(0xbcc7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xdf68);
        EXPECT(gbc.pc(), 0xbcc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcc7), 0xcb);
        EXPECT(gbc.readMem(0xbcc8), 0x71);
        // CB 71 0143
        gbc.setState(0x72ce, 0x8b75, 0x6f0, 0x2c78, 0xf67f, 0x94bf, 0x0, 0x0);
        gbc.writeMem(0x72ce, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x8b75);
        EXPECT(gbc.pc(), 0x72d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0144
        gbc.setState(0x6bb4, 0xe9ef, 0x98c0, 0x29ad, 0x9852, 0xccd0, 0x1, 0x0);
        gbc.writeMem(0x6bb4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xe9ef);
        EXPECT(gbc.pc(), 0x6bb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0146
        gbc.setState(0xe014, 0x5f0e, 0xa1b0, 0x5f8d, 0xdc1e, 0xaa3f, 0x0, 0x1);
        gbc.writeMem(0xe014, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x5f0e);
        EXPECT(gbc.pc(), 0xe016);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe014), 0xcb);
        EXPECT(gbc.readMem(0xe015), 0x71);
        // CB 71 0147
        gbc.setState(0xe75d, 0x4a4f, 0x9ce0, 0xd991, 0x5870, 0x6ee0, 0x0, 0x0);
        gbc.writeMem(0xe75d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x4a4f);
        EXPECT(gbc.pc(), 0xe75f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75d), 0xcb);
        EXPECT(gbc.readMem(0xe75e), 0x71);
        // CB 71 0148
        gbc.setState(0xc8ac, 0xf5db, 0x8720, 0x1809, 0x3d6c, 0xec07, 0x0, 0x0);
        gbc.writeMem(0xc8ac, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xf5db);
        EXPECT(gbc.pc(), 0xc8ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ac), 0xcb);
        EXPECT(gbc.readMem(0xc8ad), 0x71);
        // CB 71 0149
        gbc.setState(0x3203, 0xea02, 0x1230, 0xa19d, 0xafa1, 0x10ff, 0x0, 0x1);
        gbc.writeMem(0x3203, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xea02);
        EXPECT(gbc.pc(), 0x3205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 014A
        gbc.setState(0x18cf, 0xa49, 0x16b0, 0x64db, 0x985b, 0x6469, 0x1, 0x1);
        gbc.writeMem(0x18cf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xa49);
        EXPECT(gbc.pc(), 0x18d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 014B
        gbc.setState(0xde6, 0x969d, 0x5070, 0x2f3, 0xdd9b, 0xd5e2, 0x0, 0x0);
        gbc.writeMem(0xde6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x969d);
        EXPECT(gbc.pc(), 0xde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 014C
        gbc.setState(0x907, 0xdc97, 0xae40, 0x83ee, 0xc703, 0x3c27, 0x0, 0x0);
        gbc.writeMem(0x907, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xdc97);
        EXPECT(gbc.pc(), 0x909);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 014D
        gbc.setState(0x6e9f, 0x2965, 0x91d0, 0xa632, 0xc2be, 0xc591, 0x0, 0x0);
        gbc.writeMem(0x6e9f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2965);
        EXPECT(gbc.pc(), 0x6ea1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 014E
        gbc.setState(0x5386, 0xf2f3, 0xbfb0, 0x85c0, 0x670a, 0x2c44, 0x0, 0x0);
        gbc.writeMem(0x5386, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xf2f3);
        EXPECT(gbc.pc(), 0x5388);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 014F
        gbc.setState(0xb208, 0xde3b, 0x5e10, 0x2d0c, 0xa932, 0xe286, 0x1, 0x0);
        gbc.writeMem(0xb208, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xde3b);
        EXPECT(gbc.pc(), 0xb20a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb208), 0xcb);
        EXPECT(gbc.readMem(0xb209), 0x71);
        // CB 71 0150
        gbc.setState(0x35c2, 0x850d, 0xe2b0, 0xcd68, 0x5a8e, 0x1313, 0x0, 0x1);
        gbc.writeMem(0x35c2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x850d);
        EXPECT(gbc.pc(), 0x35c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0151
        gbc.setState(0x4251, 0x17b5, 0x5980, 0xb69c, 0x8132, 0xb492, 0x1, 0x1);
        gbc.writeMem(0x4251, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x17b5);
        EXPECT(gbc.pc(), 0x4253);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0152
        gbc.setState(0x9a6d, 0xbbb5, 0x9e10, 0x2557, 0xf501, 0xc9d5, 0x1, 0x0);
        gbc.writeMem(0x9a6d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xbbb5);
        EXPECT(gbc.pc(), 0x9a6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a6d), 0xcb);
        EXPECT(gbc.readMem(0x9a6e), 0x71);
        // CB 71 0153
        gbc.setState(0xb389, 0x61de, 0xa5f0, 0x5def, 0xaa7b, 0xa39, 0x1, 0x0);
        gbc.writeMem(0xb389, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x61de);
        EXPECT(gbc.pc(), 0xb38b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb389), 0xcb);
        EXPECT(gbc.readMem(0xb38a), 0x71);
        // CB 71 0154
        gbc.setState(0x3079, 0x5f18, 0x9270, 0xb936, 0xe5e1, 0x8eec, 0x0, 0x0);
        gbc.writeMem(0x3079, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x5f18);
        EXPECT(gbc.pc(), 0x307b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0155
        gbc.setState(0x1f7b, 0x24f1, 0x31e0, 0x336c, 0xb17b, 0xf837, 0x1, 0x1);
        gbc.writeMem(0x1f7b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x24f1);
        EXPECT(gbc.pc(), 0x1f7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0156
        gbc.setState(0x3002, 0xcc4a, 0xf0b0, 0x6433, 0x5821, 0xa79d, 0x0, 0x0);
        gbc.writeMem(0x3002, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xcc4a);
        EXPECT(gbc.pc(), 0x3004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0157
        gbc.setState(0xbe80, 0x539f, 0x9240, 0x601b, 0xad4e, 0xce3f, 0x0, 0x0);
        gbc.writeMem(0xbe80, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x539f);
        EXPECT(gbc.pc(), 0xbe82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe80), 0xcb);
        EXPECT(gbc.readMem(0xbe81), 0x71);
        // CB 71 0158
        gbc.setState(0x6eca, 0xff5b, 0xb6c0, 0xe492, 0x306e, 0x9a7, 0x1, 0x1);
        gbc.writeMem(0x6eca, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xff5b);
        EXPECT(gbc.pc(), 0x6ecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0159
        gbc.setState(0xab19, 0xafe6, 0x3140, 0x52ea, 0xb3b3, 0x15ef, 0x0, 0x0);
        gbc.writeMem(0xab19, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xafe6);
        EXPECT(gbc.pc(), 0xab1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab19), 0xcb);
        EXPECT(gbc.readMem(0xab1a), 0x71);
        // CB 71 015A
        gbc.setState(0x5f54, 0xdc65, 0x1e30, 0x90c5, 0xd115, 0xa98a, 0x1, 0x1);
        gbc.writeMem(0x5f54, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xdc65);
        EXPECT(gbc.pc(), 0x5f56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 015B
        gbc.setState(0xcab6, 0x425e, 0xd8f0, 0xf373, 0xe031, 0x2a8a, 0x1, 0x0);
        gbc.writeMem(0xcab6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x425e);
        EXPECT(gbc.pc(), 0xcab8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcab6), 0xcb);
        EXPECT(gbc.readMem(0xcab7), 0x71);
        // CB 71 015C
        gbc.setState(0x4d1f, 0xc142, 0xeb0, 0x13d1, 0xf8f5, 0x691a, 0x1, 0x0);
        gbc.writeMem(0x4d1f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xc142);
        EXPECT(gbc.pc(), 0x4d21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 015D
        gbc.setState(0xe013, 0xd57a, 0x930, 0x84c, 0x8be1, 0x3ebf, 0x1, 0x0);
        gbc.writeMem(0xe013, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xd57a);
        EXPECT(gbc.pc(), 0xe015);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe013), 0xcb);
        EXPECT(gbc.readMem(0xe014), 0x71);
        // CB 71 015E
        gbc.setState(0x3a85, 0x5a73, 0xe070, 0xbfbf, 0x5c29, 0xdceb, 0x0, 0x0);
        gbc.writeMem(0x3a85, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5a73);
        EXPECT(gbc.pc(), 0x3a87);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 015F
        gbc.setState(0x23a6, 0x871d, 0xc4d0, 0x398f, 0x71e2, 0x38b3, 0x1, 0x0);
        gbc.writeMem(0x23a6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x871d);
        EXPECT(gbc.pc(), 0x23a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0161
        gbc.setState(0xaf35, 0x44be, 0x4260, 0x3b3, 0x24c3, 0xab45, 0x0, 0x0);
        gbc.writeMem(0xaf35, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x44be);
        EXPECT(gbc.pc(), 0xaf37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf35), 0xcb);
        EXPECT(gbc.readMem(0xaf36), 0x71);
        // CB 71 0162
        gbc.setState(0x7ce0, 0xc5a1, 0x43c0, 0x1925, 0x45b0, 0x32d5, 0x0, 0x1);
        gbc.writeMem(0x7ce0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xc5a1);
        EXPECT(gbc.pc(), 0x7ce2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0163
        gbc.setState(0x5cdd, 0xfae8, 0x7b0, 0x363f, 0xf163, 0x5ef4, 0x1, 0x0);
        gbc.writeMem(0x5cdd, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfae8);
        EXPECT(gbc.pc(), 0x5cdf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0164
        gbc.setState(0x15b8, 0xd08f, 0x8cc0, 0x35cd, 0x5bbc, 0x77d2, 0x0, 0x1);
        gbc.writeMem(0x15b8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd08f);
        EXPECT(gbc.pc(), 0x15ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0165
        gbc.setState(0x34e8, 0xbb0f, 0xf900, 0xfa6b, 0x2abf, 0x35ce, 0x0, 0x0);
        gbc.writeMem(0x34e8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xbb0f);
        EXPECT(gbc.pc(), 0x34ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0166
        gbc.setState(0x8c96, 0x5e42, 0x6230, 0xd11c, 0x8ed8, 0x9c19, 0x1, 0x1);
        gbc.writeMem(0x8c96, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x5e42);
        EXPECT(gbc.pc(), 0x8c98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c96), 0xcb);
        EXPECT(gbc.readMem(0x8c97), 0x71);
        // CB 71 0167
        gbc.setState(0xcdaf, 0x8a4d, 0xda70, 0x8d9e, 0x3c03, 0x6714, 0x0, 0x0);
        gbc.writeMem(0xcdaf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x8a4d);
        EXPECT(gbc.pc(), 0xcdb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcdaf), 0xcb);
        EXPECT(gbc.readMem(0xcdb0), 0x71);
        // CB 71 0168
        gbc.setState(0x7643, 0x5ca3, 0x66b0, 0xcd49, 0x157f, 0xf08, 0x1, 0x1);
        gbc.writeMem(0x7643, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x5ca3);
        EXPECT(gbc.pc(), 0x7645);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0169
        gbc.setState(0x1531, 0x3af, 0xecc0, 0x744a, 0x29df, 0xf2a0, 0x1, 0x0);
        gbc.writeMem(0x1531, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x3af);
        EXPECT(gbc.pc(), 0x1533);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 016A
        gbc.setState(0x8444, 0x8aa, 0x9d70, 0xf213, 0x6ec6, 0x89a8, 0x0, 0x0);
        gbc.writeMem(0x8444, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8aa);
        EXPECT(gbc.pc(), 0x8446);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8444), 0xcb);
        EXPECT(gbc.readMem(0x8445), 0x71);
        // CB 71 016B
        gbc.setState(0x564d, 0xe1c7, 0xbe80, 0x2826, 0xd152, 0x838b, 0x0, 0x1);
        gbc.writeMem(0x564d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xe1c7);
        EXPECT(gbc.pc(), 0x564f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 016C
        gbc.setState(0x2241, 0x54aa, 0x93a0, 0x3167, 0x280, 0xed34, 0x0, 0x1);
        gbc.writeMem(0x2241, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x54aa);
        EXPECT(gbc.pc(), 0x2243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 016D
        gbc.setState(0x848a, 0x878a, 0xe810, 0xc987, 0x90b0, 0xde09, 0x1, 0x0);
        gbc.writeMem(0x848a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x878a);
        EXPECT(gbc.pc(), 0x848c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x848a), 0xcb);
        EXPECT(gbc.readMem(0x848b), 0x71);
        // CB 71 016E
        gbc.setState(0x8fe1, 0xda82, 0xe2a0, 0xd186, 0x82c3, 0x89b8, 0x0, 0x0);
        gbc.writeMem(0x8fe1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xda82);
        EXPECT(gbc.pc(), 0x8fe3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fe1), 0xcb);
        EXPECT(gbc.readMem(0x8fe2), 0x71);
        // CB 71 016F
        gbc.setState(0x4d5, 0xd5fc, 0xb890, 0x232, 0xb87b, 0x2cbd, 0x1, 0x0);
        gbc.writeMem(0x4d5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd5fc);
        EXPECT(gbc.pc(), 0x4d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0171
        gbc.setState(0x76a5, 0x6e82, 0x7f60, 0xad81, 0x610, 0x14e8, 0x1, 0x1);
        gbc.writeMem(0x76a5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x6e82);
        EXPECT(gbc.pc(), 0x76a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0172
        gbc.setState(0xebed, 0xb76f, 0xb510, 0xc388, 0x3ac, 0xef04, 0x1, 0x0);
        gbc.writeMem(0xebed, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xb76f);
        EXPECT(gbc.pc(), 0xebef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xebed), 0xcb);
        EXPECT(gbc.readMem(0xebee), 0x71);
        // CB 71 0173
        gbc.setState(0x3b20, 0xa192, 0x26b0, 0xad30, 0x885a, 0x9f5e, 0x0, 0x1);
        gbc.writeMem(0x3b20, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xa192);
        EXPECT(gbc.pc(), 0x3b22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0174
        gbc.setState(0xeb51, 0x84a0, 0xb4c0, 0x856b, 0xfe28, 0x41e3, 0x0, 0x0);
        gbc.writeMem(0xeb51, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x84a0);
        EXPECT(gbc.pc(), 0xeb53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb51), 0xcb);
        EXPECT(gbc.readMem(0xeb52), 0x71);
        // CB 71 0175
        gbc.setState(0x8e0e, 0xcc5a, 0x9520, 0x1dc6, 0xefc5, 0x55da, 0x1, 0x1);
        gbc.writeMem(0x8e0e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcc5a);
        EXPECT(gbc.pc(), 0x8e10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8e0e), 0xcb);
        EXPECT(gbc.readMem(0x8e0f), 0x71);
        // CB 71 0176
        gbc.setState(0x3815, 0x9b8d, 0xfde0, 0xc951, 0xd7cd, 0x8628, 0x1, 0x0);
        gbc.writeMem(0x3815, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9b8d);
        EXPECT(gbc.pc(), 0x3817);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0178
        gbc.setState(0xe58e, 0x4a92, 0xe5b0, 0x991c, 0x7e4f, 0x9172, 0x0, 0x1);
        gbc.writeMem(0xe58e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x4a92);
        EXPECT(gbc.pc(), 0xe590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe58e), 0xcb);
        EXPECT(gbc.readMem(0xe58f), 0x71);
        // CB 71 0179
        gbc.setState(0x9bf6, 0x352c, 0xeca0, 0xb61b, 0x54e3, 0x4902, 0x1, 0x1);
        gbc.writeMem(0x9bf6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x352c);
        EXPECT(gbc.pc(), 0x9bf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bf6), 0xcb);
        EXPECT(gbc.readMem(0x9bf7), 0x71);
        // CB 71 017A
        gbc.setState(0x46f8, 0x391d, 0xed90, 0x8c75, 0x6049, 0x48eb, 0x0, 0x1);
        gbc.writeMem(0x46f8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x391d);
        EXPECT(gbc.pc(), 0x46fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 017B
        gbc.setState(0x2783, 0xcfc4, 0x9f0, 0xfb86, 0x7495, 0x9489, 0x1, 0x1);
        gbc.writeMem(0x2783, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xcfc4);
        EXPECT(gbc.pc(), 0x2785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 017C
        gbc.setState(0x811, 0xfac3, 0x7920, 0x7e66, 0x9388, 0xfe55, 0x0, 0x0);
        gbc.writeMem(0x811, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xfac3);
        EXPECT(gbc.pc(), 0x813);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 017D
        gbc.setState(0x1916, 0xb448, 0xb510, 0xf6ac, 0xb894, 0xe42d, 0x1, 0x0);
        gbc.writeMem(0x1916, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xb448);
        EXPECT(gbc.pc(), 0x1918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 017E
        gbc.setState(0x3108, 0x8106, 0xd0d0, 0x40fe, 0x6081, 0x8247, 0x1, 0x0);
        gbc.writeMem(0x3108, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x8106);
        EXPECT(gbc.pc(), 0x310a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 017F
        gbc.setState(0x9cb9, 0xc543, 0xab50, 0xc0ec, 0x3b40, 0x2ef7, 0x0, 0x0);
        gbc.writeMem(0x9cb9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xc543);
        EXPECT(gbc.pc(), 0x9cbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb9), 0xcb);
        EXPECT(gbc.readMem(0x9cba), 0x71);
        // CB 71 0180
        gbc.setState(0x8c05, 0x4a96, 0xffb0, 0x88a8, 0xe2c7, 0x78be, 0x1, 0x1);
        gbc.writeMem(0x8c05, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4a96);
        EXPECT(gbc.pc(), 0x8c07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c05), 0xcb);
        EXPECT(gbc.readMem(0x8c06), 0x71);
        // CB 71 0181
        gbc.setState(0x8a77, 0x5d38, 0x66d0, 0xe9a9, 0x529a, 0x5088, 0x0, 0x1);
        gbc.writeMem(0x8a77, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5d38);
        EXPECT(gbc.pc(), 0x8a79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a77), 0xcb);
        EXPECT(gbc.readMem(0x8a78), 0x71);
        // CB 71 0182
        gbc.setState(0xb1c2, 0x8b0a, 0x6c60, 0xfb4d, 0x5caa, 0x22b7, 0x0, 0x1);
        gbc.writeMem(0xb1c2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8b0a);
        EXPECT(gbc.pc(), 0xb1c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb1c2), 0xcb);
        EXPECT(gbc.readMem(0xb1c3), 0x71);
        // CB 71 0183
        gbc.setState(0xe04e, 0xaeec, 0x5410, 0xe213, 0x1cf1, 0x347, 0x0, 0x0);
        gbc.writeMem(0xe04e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xaeec);
        EXPECT(gbc.pc(), 0xe050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe04e), 0xcb);
        EXPECT(gbc.readMem(0xe04f), 0x71);
        // CB 71 0184
        gbc.setState(0x7304, 0x86b6, 0x9800, 0x66a4, 0x934a, 0x2fb3, 0x1, 0x0);
        gbc.writeMem(0x7304, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x86b6);
        EXPECT(gbc.pc(), 0x7306);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0185
        gbc.setState(0x9c45, 0xaf92, 0xd390, 0x523, 0x3800, 0x2c55, 0x1, 0x1);
        gbc.writeMem(0x9c45, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xaf92);
        EXPECT(gbc.pc(), 0x9c47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c45), 0xcb);
        EXPECT(gbc.readMem(0x9c46), 0x71);
        // CB 71 0187
        gbc.setState(0x2720, 0x6157, 0xb540, 0xa42e, 0x3efa, 0xafc6, 0x1, 0x0);
        gbc.writeMem(0x2720, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x6157);
        EXPECT(gbc.pc(), 0x2722);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0188
        gbc.setState(0x5830, 0x55fd, 0x1ad0, 0x4bde, 0xdb00, 0xc5a9, 0x0, 0x0);
        gbc.writeMem(0x5830, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x55fd);
        EXPECT(gbc.pc(), 0x5832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0189
        gbc.setState(0x52f8, 0x31af, 0xc5d0, 0x5dfb, 0x3834, 0x9bac, 0x1, 0x0);
        gbc.writeMem(0x52f8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x31af);
        EXPECT(gbc.pc(), 0x52fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 018A
        gbc.setState(0xed55, 0x63a6, 0x3740, 0x3096, 0x8526, 0x634f, 0x0, 0x0);
        gbc.writeMem(0xed55, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x63a6);
        EXPECT(gbc.pc(), 0xed57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed55), 0xcb);
        EXPECT(gbc.readMem(0xed56), 0x71);
        // CB 71 018B
        gbc.setState(0x1daa, 0x50f4, 0x8640, 0xb32d, 0x6128, 0x2491, 0x0, 0x1);
        gbc.writeMem(0x1daa, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x50f4);
        EXPECT(gbc.pc(), 0x1dac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 018C
        gbc.setState(0xd56e, 0x39f5, 0x2b40, 0xc333, 0x16e0, 0x5d1d, 0x1, 0x0);
        gbc.writeMem(0xd56e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x39f5);
        EXPECT(gbc.pc(), 0xd570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd56e), 0xcb);
        EXPECT(gbc.readMem(0xd56f), 0x71);
        // CB 71 018D
        gbc.setState(0x34df, 0x9273, 0x80f0, 0x995, 0x96a8, 0x4036, 0x1, 0x0);
        gbc.writeMem(0x34df, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x9273);
        EXPECT(gbc.pc(), 0x34e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 018E
        gbc.setState(0x84e2, 0x179e, 0x4e50, 0xf493, 0x60aa, 0x34ca, 0x1, 0x1);
        gbc.writeMem(0x84e2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x179e);
        EXPECT(gbc.pc(), 0x84e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e2), 0xcb);
        EXPECT(gbc.readMem(0x84e3), 0x71);
        // CB 71 018F
        gbc.setState(0xc8f1, 0x4045, 0xc520, 0x88fb, 0x71b6, 0x8084, 0x0, 0x0);
        gbc.writeMem(0xc8f1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4045);
        EXPECT(gbc.pc(), 0xc8f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8f1), 0xcb);
        EXPECT(gbc.readMem(0xc8f2), 0x71);
        // CB 71 0190
        gbc.setState(0xe87f, 0xd223, 0x7600, 0xe7b6, 0x2174, 0x3ee8, 0x1, 0x1);
        gbc.writeMem(0xe87f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xd223);
        EXPECT(gbc.pc(), 0xe881);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe87f), 0xcb);
        EXPECT(gbc.readMem(0xe880), 0x71);
        // CB 71 0191
        gbc.setState(0x44f0, 0xc886, 0xb480, 0xfd27, 0x55e9, 0x7fd2, 0x0, 0x1);
        gbc.writeMem(0x44f0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc886);
        EXPECT(gbc.pc(), 0x44f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0192
        gbc.setState(0x887c, 0x39a0, 0xac0, 0xd989, 0xeddc, 0xde87, 0x0, 0x0);
        gbc.writeMem(0x887c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x39a0);
        EXPECT(gbc.pc(), 0x887e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x887c), 0xcb);
        EXPECT(gbc.readMem(0x887d), 0x71);
        // CB 71 0193
        gbc.setState(0x2544, 0xe108, 0x9950, 0x4bb3, 0xa0aa, 0x632d, 0x1, 0x1);
        gbc.writeMem(0x2544, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe108);
        EXPECT(gbc.pc(), 0x2546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0194
        gbc.setState(0xb146, 0x1197, 0xd870, 0x851a, 0x4371, 0xe41f, 0x0, 0x1);
        gbc.writeMem(0xb146, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1197);
        EXPECT(gbc.pc(), 0xb148);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb146), 0xcb);
        EXPECT(gbc.readMem(0xb147), 0x71);
        // CB 71 0195
        gbc.setState(0xe388, 0xcb9c, 0xb770, 0x6021, 0xb72f, 0xe8d6, 0x0, 0x1);
        gbc.writeMem(0xe388, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xcb9c);
        EXPECT(gbc.pc(), 0xe38a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe388), 0xcb);
        EXPECT(gbc.readMem(0xe389), 0x71);
        // CB 71 0196
        gbc.setState(0xa523, 0xe463, 0xaa60, 0xd890, 0x454b, 0xd819, 0x1, 0x0);
        gbc.writeMem(0xa523, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xe463);
        EXPECT(gbc.pc(), 0xa525);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa523), 0xcb);
        EXPECT(gbc.readMem(0xa524), 0x71);
        // CB 71 0197
        gbc.setState(0x36f0, 0x3e47, 0x1ee0, 0x9496, 0x677, 0x1af, 0x1, 0x0);
        gbc.writeMem(0x36f0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x3e47);
        EXPECT(gbc.pc(), 0x36f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0198
        gbc.setState(0xbe41, 0x561e, 0x5aa0, 0xc558, 0x2821, 0x8548, 0x0, 0x1);
        gbc.writeMem(0xbe41, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x561e);
        EXPECT(gbc.pc(), 0xbe43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe41), 0xcb);
        EXPECT(gbc.readMem(0xbe42), 0x71);
        // CB 71 0199
        gbc.setState(0x456b, 0x40e2, 0x5390, 0x9703, 0xb4c8, 0x2faf, 0x1, 0x0);
        gbc.writeMem(0x456b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x40e2);
        EXPECT(gbc.pc(), 0x456d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 019B
        gbc.setState(0x1b18, 0xb5b2, 0x5fc0, 0xb71d, 0x2e10, 0xb591, 0x1, 0x0);
        gbc.writeMem(0x1b18, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xb5b2);
        EXPECT(gbc.pc(), 0x1b1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 019C
        gbc.setState(0x257c, 0x893c, 0xf480, 0xe9f2, 0xe6d7, 0x410d, 0x0, 0x0);
        gbc.writeMem(0x257c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x893c);
        EXPECT(gbc.pc(), 0x257e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 019D
        gbc.setState(0xdc40, 0xccd5, 0x7a30, 0x398, 0x7892, 0xbb6, 0x1, 0x0);
        gbc.writeMem(0xdc40, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xccd5);
        EXPECT(gbc.pc(), 0xdc42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc40), 0xcb);
        EXPECT(gbc.readMem(0xdc41), 0x71);
        // CB 71 019F
        gbc.setState(0x57bb, 0x7675, 0x8ed0, 0xc4f, 0x3731, 0x20b3, 0x0, 0x0);
        gbc.writeMem(0x57bb, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7675);
        EXPECT(gbc.pc(), 0x57bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01A0
        gbc.setState(0xdb6, 0xb64c, 0x5b40, 0xe8d3, 0xc1a7, 0x7ce, 0x1, 0x0);
        gbc.writeMem(0xdb6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb64c);
        EXPECT(gbc.pc(), 0xdb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01A1
        gbc.setState(0x6351, 0x2281, 0xf650, 0x721a, 0xb706, 0x98, 0x1, 0x0);
        gbc.writeMem(0x6351, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2281);
        EXPECT(gbc.pc(), 0x6353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01A2
        gbc.setState(0xdf29, 0xda8f, 0x8950, 0x61b2, 0x6c5f, 0xe1c0, 0x0, 0x0);
        gbc.writeMem(0xdf29, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xda8f);
        EXPECT(gbc.pc(), 0xdf2b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf29), 0xcb);
        EXPECT(gbc.readMem(0xdf2a), 0x71);
        // CB 71 01A3
        gbc.setState(0x7e4e, 0xd609, 0x1a20, 0x2578, 0x3fe7, 0x282a, 0x0, 0x0);
        gbc.writeMem(0x7e4e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd609);
        EXPECT(gbc.pc(), 0x7e50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01A4
        gbc.setState(0xb376, 0xdeeb, 0xbe30, 0xc708, 0xb160, 0x41f0, 0x0, 0x0);
        gbc.writeMem(0xb376, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xdeeb);
        EXPECT(gbc.pc(), 0xb378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb376), 0xcb);
        EXPECT(gbc.readMem(0xb377), 0x71);
        // CB 71 01A5
        gbc.setState(0x4cf1, 0xf2a3, 0xe130, 0x2064, 0x9677, 0xa37e, 0x0, 0x1);
        gbc.writeMem(0x4cf1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xf2a3);
        EXPECT(gbc.pc(), 0x4cf3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01A6
        gbc.setState(0x55a0, 0x17c1, 0xc530, 0x637e, 0xdc5d, 0x14b6, 0x1, 0x0);
        gbc.writeMem(0x55a0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x17c1);
        EXPECT(gbc.pc(), 0x55a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01A7
        gbc.setState(0xc797, 0x86c1, 0xff30, 0x2175, 0xec3f, 0x2582, 0x0, 0x1);
        gbc.writeMem(0xc797, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x86c1);
        EXPECT(gbc.pc(), 0xc799);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc797), 0xcb);
        EXPECT(gbc.readMem(0xc798), 0x71);
        // CB 71 01A9
        gbc.setState(0xe964, 0x9d4f, 0x4bf0, 0x6ec4, 0x8f4a, 0x1bda, 0x1, 0x0);
        gbc.writeMem(0xe964, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9d4f);
        EXPECT(gbc.pc(), 0xe966);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe964), 0xcb);
        EXPECT(gbc.readMem(0xe965), 0x71);
        // CB 71 01AB
        gbc.setState(0x9594, 0x1977, 0xbf00, 0x1d5f, 0x6497, 0x48b, 0x0, 0x1);
        gbc.writeMem(0x9594, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1977);
        EXPECT(gbc.pc(), 0x9596);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9594), 0xcb);
        EXPECT(gbc.readMem(0x9595), 0x71);
        // CB 71 01AC
        gbc.setState(0xe735, 0xc8fd, 0xeb00, 0xd73a, 0x1b23, 0x2397, 0x1, 0x0);
        gbc.writeMem(0xe735, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc8fd);
        EXPECT(gbc.pc(), 0xe737);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe735), 0xcb);
        EXPECT(gbc.readMem(0xe736), 0x71);
        // CB 71 01AD
        gbc.setState(0xa941, 0x329e, 0xe00, 0xfd1f, 0xd2c1, 0x4840, 0x1, 0x1);
        gbc.writeMem(0xa941, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x329e);
        EXPECT(gbc.pc(), 0xa943);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa941), 0xcb);
        EXPECT(gbc.readMem(0xa942), 0x71);
        // CB 71 01AE
        gbc.setState(0xd95f, 0xb002, 0x5800, 0x6d37, 0x5780, 0x8969, 0x0, 0x1);
        gbc.writeMem(0xd95f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xb002);
        EXPECT(gbc.pc(), 0xd961);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd95f), 0xcb);
        EXPECT(gbc.readMem(0xd960), 0x71);
        // CB 71 01AF
        gbc.setState(0x489c, 0x43d8, 0xe6e0, 0xa2f, 0xa2cd, 0x6d22, 0x0, 0x1);
        gbc.writeMem(0x489c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x43d8);
        EXPECT(gbc.pc(), 0x489e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01B0
        gbc.setState(0x2164, 0x69d8, 0x4ce0, 0x2814, 0xb794, 0x1604, 0x0, 0x1);
        gbc.writeMem(0x2164, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x69d8);
        EXPECT(gbc.pc(), 0x2166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01B1
        gbc.setState(0x6ee, 0xba1f, 0x1890, 0xd235, 0xfe52, 0x8e83, 0x1, 0x1);
        gbc.writeMem(0x6ee, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xba1f);
        EXPECT(gbc.pc(), 0x6f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01B2
        gbc.setState(0xc6e3, 0x6531, 0x67f0, 0x439a, 0x9c52, 0xbb9f, 0x1, 0x1);
        gbc.writeMem(0xc6e3, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x6531);
        EXPECT(gbc.pc(), 0xc6e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc6e3), 0xcb);
        EXPECT(gbc.readMem(0xc6e4), 0x71);
        // CB 71 01B3
        gbc.setState(0x3128, 0xf880, 0xfdb0, 0xd63d, 0xef22, 0xb175, 0x1, 0x1);
        gbc.writeMem(0x3128, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xf880);
        EXPECT(gbc.pc(), 0x312a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01B4
        gbc.setState(0x9135, 0x6f82, 0x8370, 0xcdb3, 0x5c99, 0xa9ff, 0x1, 0x1);
        gbc.writeMem(0x9135, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x6f82);
        EXPECT(gbc.pc(), 0x9137);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9135), 0xcb);
        EXPECT(gbc.readMem(0x9136), 0x71);
        // CB 71 01B5
        gbc.setState(0xb42d, 0xd541, 0x7440, 0x553a, 0x8b3f, 0x7df, 0x0, 0x1);
        gbc.writeMem(0xb42d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xd541);
        EXPECT(gbc.pc(), 0xb42f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb42d), 0xcb);
        EXPECT(gbc.readMem(0xb42e), 0x71);
        // CB 71 01B6
        gbc.setState(0x40f7, 0xfdf5, 0xe660, 0xb488, 0xe742, 0xdbf1, 0x0, 0x0);
        gbc.writeMem(0x40f7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xfdf5);
        EXPECT(gbc.pc(), 0x40f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01B7
        gbc.setState(0xeee9, 0x38f0, 0x1a0, 0xcaca, 0x2db9, 0x8d6d, 0x1, 0x0);
        gbc.writeMem(0xeee9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x38f0);
        EXPECT(gbc.pc(), 0xeeeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeee9), 0xcb);
        EXPECT(gbc.readMem(0xeeea), 0x71);
        // CB 71 01B8
        gbc.setState(0x6d, 0x1993, 0xa340, 0x7d0f, 0x4619, 0xc3a0, 0x1, 0x1);
        gbc.writeMem(0x6d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1993);
        EXPECT(gbc.pc(), 0x6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01B9
        gbc.setState(0xd924, 0x8cd7, 0xfdf0, 0xd657, 0xe214, 0x88a8, 0x0, 0x1);
        gbc.writeMem(0xd924, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x8cd7);
        EXPECT(gbc.pc(), 0xd926);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd924), 0xcb);
        EXPECT(gbc.readMem(0xd925), 0x71);
        // CB 71 01BA
        gbc.setState(0x26b4, 0xa418, 0x6cc0, 0x51a9, 0x4665, 0x3784, 0x1, 0x1);
        gbc.writeMem(0x26b4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xa418);
        EXPECT(gbc.pc(), 0x26b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01BB
        gbc.setState(0xc471, 0x609b, 0x9f00, 0xe2f2, 0xb5f7, 0x842b, 0x1, 0x0);
        gbc.writeMem(0xc471, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x609b);
        EXPECT(gbc.pc(), 0xc473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc471), 0xcb);
        EXPECT(gbc.readMem(0xc472), 0x71);
        // CB 71 01BD
        gbc.setState(0x4ea, 0x7fe3, 0x8540, 0x1ba0, 0xf4c2, 0x7ea8, 0x1, 0x0);
        gbc.writeMem(0x4ea, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x7fe3);
        EXPECT(gbc.pc(), 0x4ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01BE
        gbc.setState(0x8efc, 0xb886, 0x2260, 0x74c7, 0x116f, 0x8456, 0x1, 0x1);
        gbc.writeMem(0x8efc, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb886);
        EXPECT(gbc.pc(), 0x8efe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8efc), 0xcb);
        EXPECT(gbc.readMem(0x8efd), 0x71);
        // CB 71 01BF
        gbc.setState(0x3c19, 0xd53f, 0xd50, 0xe31, 0xe406, 0x8180, 0x1, 0x0);
        gbc.writeMem(0x3c19, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd53f);
        EXPECT(gbc.pc(), 0x3c1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01C0
        gbc.setState(0x2915, 0x9199, 0x4e20, 0x58ab, 0xb651, 0x21c3, 0x1, 0x1);
        gbc.writeMem(0x2915, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x9199);
        EXPECT(gbc.pc(), 0x2917);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01C1
        gbc.setState(0x53f1, 0x94c5, 0x9760, 0x96ac, 0x5b3c, 0xaeaa, 0x0, 0x1);
        gbc.writeMem(0x53f1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x94c5);
        EXPECT(gbc.pc(), 0x53f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01C2
        gbc.setState(0x719c, 0xb106, 0x94b0, 0x47e2, 0x69a7, 0xe7d8, 0x1, 0x0);
        gbc.writeMem(0x719c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0xb106);
        EXPECT(gbc.pc(), 0x719e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01C3
        gbc.setState(0x124, 0x1ecd, 0x28f0, 0xfdd2, 0x828, 0xa8d, 0x0, 0x0);
        gbc.writeMem(0x124, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x1ecd);
        EXPECT(gbc.pc(), 0x126);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01C5
        gbc.setState(0x9ea7, 0x5362, 0x8240, 0x2395, 0x2717, 0x5982, 0x0, 0x0);
        gbc.writeMem(0x9ea7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5362);
        EXPECT(gbc.pc(), 0x9ea9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ea7), 0xcb);
        EXPECT(gbc.readMem(0x9ea8), 0x71);
        // CB 71 01C6
        gbc.setState(0x3e41, 0xf9e2, 0xb960, 0xfca7, 0xd71e, 0x6638, 0x0, 0x0);
        gbc.writeMem(0x3e41, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf9e2);
        EXPECT(gbc.pc(), 0x3e43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01C8
        gbc.setState(0x1938, 0x441a, 0x71c0, 0x6c7c, 0xba5e, 0xbb65, 0x1, 0x0);
        gbc.writeMem(0x1938, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x441a);
        EXPECT(gbc.pc(), 0x193a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01C9
        gbc.setState(0x9af1, 0xa77e, 0xc4a0, 0x7c36, 0xfb06, 0x562c, 0x0, 0x1);
        gbc.writeMem(0x9af1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xa77e);
        EXPECT(gbc.pc(), 0x9af3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af1), 0xcb);
        EXPECT(gbc.readMem(0x9af2), 0x71);
        // CB 71 01CA
        gbc.setState(0x4e64, 0xcb6b, 0x47a0, 0x9b7c, 0x382e, 0x2920, 0x1, 0x0);
        gbc.writeMem(0x4e64, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xcb6b);
        EXPECT(gbc.pc(), 0x4e66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01CB
        gbc.setState(0x2bb1, 0xaa7f, 0x2420, 0xe829, 0xbd20, 0xa67d, 0x0, 0x1);
        gbc.writeMem(0x2bb1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xaa7f);
        EXPECT(gbc.pc(), 0x2bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01CC
        gbc.setState(0xbf28, 0x83d8, 0xc7c0, 0x2d06, 0xd33a, 0x61a, 0x1, 0x1);
        gbc.writeMem(0xbf28, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x83d8);
        EXPECT(gbc.pc(), 0xbf2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf28), 0xcb);
        EXPECT(gbc.readMem(0xbf29), 0x71);
        // CB 71 01CD
        gbc.setState(0x6db1, 0xf0a, 0xf990, 0xd59e, 0xefc, 0xf4ef, 0x1, 0x0);
        gbc.writeMem(0x6db1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xf0a);
        EXPECT(gbc.pc(), 0x6db3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01CE
        gbc.setState(0x9443, 0xc1e0, 0xf50, 0x5f3a, 0x9d74, 0xf407, 0x0, 0x0);
        gbc.writeMem(0x9443, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc1e0);
        EXPECT(gbc.pc(), 0x9445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9443), 0xcb);
        EXPECT(gbc.readMem(0x9444), 0x71);
        // CB 71 01CF
        gbc.setState(0xe8c8, 0x5343, 0xfa00, 0x52e5, 0x3be, 0xa83d, 0x1, 0x0);
        gbc.writeMem(0xe8c8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x5343);
        EXPECT(gbc.pc(), 0xe8ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8c8), 0xcb);
        EXPECT(gbc.readMem(0xe8c9), 0x71);
        // CB 71 01D0
        gbc.setState(0x6337, 0xe955, 0x9560, 0x4eaf, 0x6998, 0x4eda, 0x0, 0x0);
        gbc.writeMem(0x6337, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe955);
        EXPECT(gbc.pc(), 0x6339);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01D1
        gbc.setState(0x1b5e, 0xb2d, 0x49b0, 0x863b, 0x58aa, 0xe19a, 0x1, 0x1);
        gbc.writeMem(0x1b5e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xb2d);
        EXPECT(gbc.pc(), 0x1b60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01D2
        gbc.setState(0x53fd, 0xd744, 0xff30, 0x1cb5, 0xb70f, 0x66d2, 0x0, 0x1);
        gbc.writeMem(0x53fd, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xd744);
        EXPECT(gbc.pc(), 0x53ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01D3
        gbc.setState(0x72f4, 0x2727, 0xef00, 0x5421, 0x925c, 0x8298, 0x1, 0x0);
        gbc.writeMem(0x72f4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x2727);
        EXPECT(gbc.pc(), 0x72f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01D4
        gbc.setState(0xec5b, 0xd887, 0xb940, 0xf086, 0xa10, 0x3a6e, 0x0, 0x0);
        gbc.writeMem(0xec5b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xd887);
        EXPECT(gbc.pc(), 0xec5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec5b), 0xcb);
        EXPECT(gbc.readMem(0xec5c), 0x71);
        // CB 71 01D6
        gbc.setState(0xabca, 0xe98d, 0x4b40, 0x74f3, 0xb2d1, 0xa5aa, 0x0, 0x0);
        gbc.writeMem(0xabca, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe98d);
        EXPECT(gbc.pc(), 0xabcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabca), 0xcb);
        EXPECT(gbc.readMem(0xabcb), 0x71);
        // CB 71 01D8
        gbc.setState(0x6761, 0x1b2d, 0x4cc0, 0xdcc8, 0xdd1e, 0x3105, 0x0, 0x0);
        gbc.writeMem(0x6761, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x1b2d);
        EXPECT(gbc.pc(), 0x6763);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01D9
        gbc.setState(0x57c7, 0xbf61, 0x7510, 0xdd3f, 0xc782, 0x1b17, 0x0, 0x1);
        gbc.writeMem(0x57c7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xbf61);
        EXPECT(gbc.pc(), 0x57c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01DA
        gbc.setState(0xd89b, 0x10bc, 0x10f0, 0x172c, 0x9ba2, 0x43f6, 0x0, 0x0);
        gbc.writeMem(0xd89b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x10bc);
        EXPECT(gbc.pc(), 0xd89d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd89b), 0xcb);
        EXPECT(gbc.readMem(0xd89c), 0x71);
        // CB 71 01DB
        gbc.setState(0x2352, 0x129c, 0x4c0, 0x56e1, 0x4fb8, 0xe8db, 0x1, 0x1);
        gbc.writeMem(0x2352, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x129c);
        EXPECT(gbc.pc(), 0x2354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01DC
        gbc.setState(0xa2d0, 0xd8e7, 0x31e0, 0x29db, 0x7258, 0x4896, 0x1, 0x0);
        gbc.writeMem(0xa2d0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xd8e7);
        EXPECT(gbc.pc(), 0xa2d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2d0), 0xcb);
        EXPECT(gbc.readMem(0xa2d1), 0x71);
        // CB 71 01DD
        gbc.setState(0x10c7, 0x7a35, 0xe7a0, 0x71f3, 0xe557, 0xf3, 0x0, 0x0);
        gbc.writeMem(0x10c7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x7a35);
        EXPECT(gbc.pc(), 0x10c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01DE
        gbc.setState(0x7f8e, 0x87b2, 0xc620, 0x3786, 0x2ae1, 0x9ac4, 0x1, 0x1);
        gbc.writeMem(0x7f8e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x87b2);
        EXPECT(gbc.pc(), 0x7f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01DF
        gbc.setState(0x5172, 0xe741, 0xfea0, 0x313a, 0xfdb7, 0x351f, 0x0, 0x0);
        gbc.writeMem(0x5172, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xe741);
        EXPECT(gbc.pc(), 0x5174);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01E0
        gbc.setState(0x164e, 0xc89c, 0x5850, 0x24a7, 0x23cf, 0x4ba3, 0x0, 0x1);
        gbc.writeMem(0x164e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xc89c);
        EXPECT(gbc.pc(), 0x1650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01E1
        gbc.setState(0x7336, 0x4bba, 0x1640, 0xb87d, 0x4003, 0xde96, 0x0, 0x0);
        gbc.writeMem(0x7336, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4bba);
        EXPECT(gbc.pc(), 0x7338);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01E2
        gbc.setState(0xb151, 0xd70c, 0x7e40, 0x3d30, 0x9d2c, 0x58a8, 0x1, 0x0);
        gbc.writeMem(0xb151, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xd70c);
        EXPECT(gbc.pc(), 0xb153);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb151), 0xcb);
        EXPECT(gbc.readMem(0xb152), 0x71);
        // CB 71 01E3
        gbc.setState(0xcc93, 0xba2e, 0x86c0, 0xc144, 0x576e, 0x54be, 0x0, 0x0);
        gbc.writeMem(0xcc93, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xba2e);
        EXPECT(gbc.pc(), 0xcc95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc93), 0xcb);
        EXPECT(gbc.readMem(0xcc94), 0x71);
        // CB 71 01E4
        gbc.setState(0x29fa, 0x2b84, 0x85a0, 0xa841, 0x95ac, 0x5b40, 0x0, 0x1);
        gbc.writeMem(0x29fa, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x2b84);
        EXPECT(gbc.pc(), 0x29fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01E5
        gbc.setState(0xc761, 0x20c7, 0x76a0, 0x6335, 0x57cd, 0x2aa, 0x1, 0x1);
        gbc.writeMem(0xc761, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x20c7);
        EXPECT(gbc.pc(), 0xc763);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc761), 0xcb);
        EXPECT(gbc.readMem(0xc762), 0x71);
        // CB 71 01E7
        gbc.setState(0x8902, 0xa494, 0xaa90, 0xcb48, 0x5c5f, 0x16a5, 0x0, 0x1);
        gbc.writeMem(0x8902, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xa494);
        EXPECT(gbc.pc(), 0x8904);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8902), 0xcb);
        EXPECT(gbc.readMem(0x8903), 0x71);
        // CB 71 01E8
        gbc.setState(0xd511, 0xd80b, 0x8420, 0xec04, 0x4565, 0xb774, 0x1, 0x0);
        gbc.writeMem(0xd511, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd80b);
        EXPECT(gbc.pc(), 0xd513);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd511), 0xcb);
        EXPECT(gbc.readMem(0xd512), 0x71);
        // CB 71 01E9
        gbc.setState(0x369, 0x1790, 0x2500, 0xe56e, 0xcb62, 0x218b, 0x1, 0x0);
        gbc.writeMem(0x369, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x1790);
        EXPECT(gbc.pc(), 0x36b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01EA
        gbc.setState(0xd2f7, 0xd825, 0xf330, 0xc680, 0x350, 0x5a8b, 0x0, 0x0);
        gbc.writeMem(0xd2f7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xd825);
        EXPECT(gbc.pc(), 0xd2f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2f7), 0xcb);
        EXPECT(gbc.readMem(0xd2f8), 0x71);
        // CB 71 01EB
        gbc.setState(0xe04b, 0xa9c4, 0x62f0, 0x79a9, 0x8f27, 0x5200, 0x0, 0x1);
        gbc.writeMem(0xe04b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa9c4);
        EXPECT(gbc.pc(), 0xe04d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe04b), 0xcb);
        EXPECT(gbc.readMem(0xe04c), 0x71);
        // CB 71 01EC
        gbc.setState(0x9cdc, 0x3e5a, 0x3eb0, 0x83cf, 0xe6eb, 0xe0d3, 0x0, 0x0);
        gbc.writeMem(0x9cdc, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x3e5a);
        EXPECT(gbc.pc(), 0x9cde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cdc), 0xcb);
        EXPECT(gbc.readMem(0x9cdd), 0x71);
        // CB 71 01EE
        gbc.setState(0x7b19, 0xf70c, 0x900, 0x28c8, 0xa22f, 0x45be, 0x0, 0x0);
        gbc.writeMem(0x7b19, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf70c);
        EXPECT(gbc.pc(), 0x7b1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 01EF
        gbc.setState(0xd35a, 0xde99, 0xb630, 0x4727, 0xb763, 0xd311, 0x1, 0x1);
        gbc.writeMem(0xd35a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xde99);
        EXPECT(gbc.pc(), 0xd35c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd35a), 0xcb);
        EXPECT(gbc.readMem(0xd35b), 0x71);
        // CB 71 01F0
        gbc.setState(0xb666, 0x241a, 0xdfd0, 0x958f, 0x3b5c, 0x1983, 0x0, 0x0);
        gbc.writeMem(0xb666, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x241a);
        EXPECT(gbc.pc(), 0xb668);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb666), 0xcb);
        EXPECT(gbc.readMem(0xb667), 0x71);
        // CB 71 01F2
        gbc.setState(0x73ed, 0x60a0, 0x4670, 0xaab4, 0xfe34, 0xea80, 0x1, 0x1);
        gbc.writeMem(0x73ed, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x60a0);
        EXPECT(gbc.pc(), 0x73ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01F3
        gbc.setState(0x2a16, 0xe427, 0x8b0, 0x6ed2, 0x97fe, 0x85d4, 0x1, 0x0);
        gbc.writeMem(0x2a16, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe427);
        EXPECT(gbc.pc(), 0x2a18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01F4
        gbc.setState(0x222b, 0x9589, 0x8bd0, 0x9f26, 0xf9f4, 0x40d1, 0x0, 0x1);
        gbc.writeMem(0x222b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x9589);
        EXPECT(gbc.pc(), 0x222d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01F6
        gbc.setState(0xbcba, 0xa000, 0xd1b0, 0x7bdf, 0x8e59, 0xa9c, 0x0, 0x1);
        gbc.writeMem(0xbcba, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa000);
        EXPECT(gbc.pc(), 0xbcbc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcba), 0xcb);
        EXPECT(gbc.readMem(0xbcbb), 0x71);
        // CB 71 01F7
        gbc.setState(0xcf2a, 0x371b, 0x2580, 0x39ec, 0x645b, 0x2d43, 0x1, 0x0);
        gbc.writeMem(0xcf2a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x371b);
        EXPECT(gbc.pc(), 0xcf2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf2a), 0xcb);
        EXPECT(gbc.readMem(0xcf2b), 0x71);
        // CB 71 01F8
        gbc.setState(0xc349, 0x6c2d, 0x7da0, 0x522f, 0x7ef5, 0xf287, 0x1, 0x0);
        gbc.writeMem(0xc349, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6c2d);
        EXPECT(gbc.pc(), 0xc34b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc349), 0xcb);
        EXPECT(gbc.readMem(0xc34a), 0x71);
        // CB 71 01F9
        gbc.setState(0xe052, 0x1a9e, 0x99b0, 0x7285, 0x64ff, 0xdafb, 0x1, 0x0);
        gbc.writeMem(0xe052, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x1a9e);
        EXPECT(gbc.pc(), 0xe054);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe052), 0xcb);
        EXPECT(gbc.readMem(0xe053), 0x71);
        // CB 71 01FA
        gbc.setState(0xeffe, 0x3621, 0xad90, 0xf676, 0xb0c9, 0xbf66, 0x1, 0x1);
        gbc.writeMem(0xeffe, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x3621);
        EXPECT(gbc.pc(), 0xf000);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeffe), 0xcb);
        EXPECT(gbc.readMem(0xefff), 0x71);
        // CB 71 01FB
        gbc.setState(0x9e5e, 0x490f, 0x23d0, 0x5c72, 0xd12f, 0xb78e, 0x1, 0x1);
        gbc.writeMem(0x9e5e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x490f);
        EXPECT(gbc.pc(), 0x9e60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e5e), 0xcb);
        EXPECT(gbc.readMem(0x9e5f), 0x71);
        // CB 71 01FC
        gbc.setState(0x72d6, 0x88f9, 0x8eb0, 0xff76, 0xf029, 0x5ea5, 0x1, 0x0);
        gbc.writeMem(0x72d6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x88f9);
        EXPECT(gbc.pc(), 0x72d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01FD
        gbc.setState(0xb176, 0xa0fe, 0xa60, 0x1048, 0xfce1, 0x7bc5, 0x0, 0x1);
        gbc.writeMem(0xb176, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xa0fe);
        EXPECT(gbc.pc(), 0xb178);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb176), 0xcb);
        EXPECT(gbc.readMem(0xb177), 0x71);
        // CB 71 01FE
        gbc.setState(0x3c78, 0xae69, 0x89f0, 0x6db9, 0x121d, 0x532e, 0x1, 0x1);
        gbc.writeMem(0x3c78, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xae69);
        EXPECT(gbc.pc(), 0x3c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 01FF
        gbc.setState(0x8a04, 0x85ba, 0x1370, 0x1595, 0xae53, 0xf4, 0x1, 0x0);
        gbc.writeMem(0x8a04, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x85ba);
        EXPECT(gbc.pc(), 0x8a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a04), 0xcb);
        EXPECT(gbc.readMem(0x8a05), 0x71);
        // CB 71 0200
        gbc.setState(0x875c, 0xc1e4, 0x8710, 0x7c71, 0x81e3, 0x7df4, 0x0, 0x1);
        gbc.writeMem(0x875c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc1e4);
        EXPECT(gbc.pc(), 0x875e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x875c), 0xcb);
        EXPECT(gbc.readMem(0x875d), 0x71);
        // CB 71 0201
        gbc.setState(0x3513, 0xcf89, 0xb700, 0xab7d, 0x1f3f, 0x3da, 0x1, 0x0);
        gbc.writeMem(0x3513, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xcf89);
        EXPECT(gbc.pc(), 0x3515);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0203
        gbc.setState(0x56ba, 0x9c75, 0xf5e0, 0xf3d3, 0x83b8, 0x506, 0x1, 0x1);
        gbc.writeMem(0x56ba, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9c75);
        EXPECT(gbc.pc(), 0x56bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0205
        gbc.setState(0x2bff, 0x3ee9, 0x6aa0, 0x8ec2, 0x78e3, 0x7907, 0x1, 0x1);
        gbc.writeMem(0x2bff, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x3ee9);
        EXPECT(gbc.pc(), 0x2c01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0206
        gbc.setState(0xdaa0, 0x52f5, 0x7b80, 0x208d, 0x855, 0x7957, 0x0, 0x1);
        gbc.writeMem(0xdaa0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x52f5);
        EXPECT(gbc.pc(), 0xdaa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdaa0), 0xcb);
        EXPECT(gbc.readMem(0xdaa1), 0x71);
        // CB 71 0207
        gbc.setState(0xeed0, 0x17ff, 0x4170, 0xfb67, 0xc1c2, 0x471e, 0x0, 0x0);
        gbc.writeMem(0xeed0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x17ff);
        EXPECT(gbc.pc(), 0xeed2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeed0), 0xcb);
        EXPECT(gbc.readMem(0xeed1), 0x71);
        // CB 71 0208
        gbc.setState(0x213f, 0xb6ef, 0xc3a0, 0xd884, 0x9fb8, 0xd4a0, 0x1, 0x1);
        gbc.writeMem(0x213f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xb6ef);
        EXPECT(gbc.pc(), 0x2141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 020A
        gbc.setState(0x8f59, 0xf1ac, 0x3d90, 0xd0ce, 0xaec, 0xe7fc, 0x1, 0x1);
        gbc.writeMem(0x8f59, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xf1ac);
        EXPECT(gbc.pc(), 0x8f5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f59), 0xcb);
        EXPECT(gbc.readMem(0x8f5a), 0x71);
        // CB 71 020B
        gbc.setState(0xcf95, 0x36ca, 0x8560, 0x5788, 0xd6c3, 0xf82d, 0x0, 0x1);
        gbc.writeMem(0xcf95, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x36ca);
        EXPECT(gbc.pc(), 0xcf97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf95), 0xcb);
        EXPECT(gbc.readMem(0xcf96), 0x71);
        // CB 71 020C
        gbc.setState(0x2d81, 0x4993, 0x58f0, 0xf05c, 0xbf4a, 0xe47, 0x0, 0x1);
        gbc.writeMem(0x2d81, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x4993);
        EXPECT(gbc.pc(), 0x2d83);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 020D
        gbc.setState(0x313d, 0xb0e5, 0x9100, 0xccb2, 0x9a68, 0x1e09, 0x1, 0x1);
        gbc.writeMem(0x313d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xb0e5);
        EXPECT(gbc.pc(), 0x313f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 020E
        gbc.setState(0xb5ce, 0x263b, 0xf6f0, 0x5314, 0x94b1, 0x33d3, 0x0, 0x1);
        gbc.writeMem(0xb5ce, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x263b);
        EXPECT(gbc.pc(), 0xb5d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5ce), 0xcb);
        EXPECT(gbc.readMem(0xb5cf), 0x71);
        // CB 71 020F
        gbc.setState(0x147, 0x3d57, 0xff80, 0x2348, 0x495f, 0x42b, 0x0, 0x1);
        gbc.writeMem(0x147, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x3d57);
        EXPECT(gbc.pc(), 0x149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0210
        gbc.setState(0x6a00, 0x39e6, 0xc4a0, 0x81ea, 0x2ba7, 0x64f9, 0x1, 0x1);
        gbc.writeMem(0x6a00, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x39e6);
        EXPECT(gbc.pc(), 0x6a02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0211
        gbc.setState(0x1b4e, 0xbfa, 0xdc60, 0xf5f6, 0xd863, 0x618d, 0x1, 0x1);
        gbc.writeMem(0x1b4e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xbfa);
        EXPECT(gbc.pc(), 0x1b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0212
        gbc.setState(0x2706, 0x62a8, 0xba10, 0x282c, 0x9f5b, 0x336c, 0x0, 0x1);
        gbc.writeMem(0x2706, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x62a8);
        EXPECT(gbc.pc(), 0x2708);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0213
        gbc.setState(0x33d4, 0x915b, 0x6c10, 0x6a2f, 0xbbdb, 0xa7c2, 0x1, 0x0);
        gbc.writeMem(0x33d4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x915b);
        EXPECT(gbc.pc(), 0x33d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0214
        gbc.setState(0x402e, 0x1339, 0x6a70, 0xc78a, 0xa3c1, 0x1106, 0x1, 0x0);
        gbc.writeMem(0x402e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1339);
        EXPECT(gbc.pc(), 0x4030);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0215
        gbc.setState(0x9bc, 0xabf, 0x2bd0, 0x4c86, 0x488b, 0x49c7, 0x0, 0x1);
        gbc.writeMem(0x9bc, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xabf);
        EXPECT(gbc.pc(), 0x9be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0216
        gbc.setState(0x3ea0, 0x1e27, 0xe1e0, 0x409b, 0x2409, 0xf0da, 0x0, 0x0);
        gbc.writeMem(0x3ea0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1e27);
        EXPECT(gbc.pc(), 0x3ea2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0217
        gbc.setState(0x4369, 0x7c94, 0x3520, 0xe6f2, 0x49a3, 0x5c18, 0x0, 0x0);
        gbc.writeMem(0x4369, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x7c94);
        EXPECT(gbc.pc(), 0x436b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0218
        gbc.setState(0x5542, 0xd235, 0x8b00, 0x743d, 0xd1ff, 0xa3de, 0x0, 0x0);
        gbc.writeMem(0x5542, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xd235);
        EXPECT(gbc.pc(), 0x5544);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 021A
        gbc.setState(0xb06, 0x5d53, 0xe1e0, 0x9d73, 0x5bf2, 0x7361, 0x1, 0x1);
        gbc.writeMem(0xb06, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5d53);
        EXPECT(gbc.pc(), 0xb08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 021B
        gbc.setState(0x377c, 0x5e7a, 0x7f70, 0x79fd, 0x7926, 0x3188, 0x1, 0x0);
        gbc.writeMem(0x377c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x5e7a);
        EXPECT(gbc.pc(), 0x377e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 021C
        gbc.setState(0x1df5, 0xa58f, 0x1bc0, 0x44f3, 0x5345, 0x3647, 0x0, 0x1);
        gbc.writeMem(0x1df5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xa58f);
        EXPECT(gbc.pc(), 0x1df7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 021D
        gbc.setState(0x5ba0, 0xe79, 0x4af0, 0xd613, 0x2997, 0x680b, 0x0, 0x0);
        gbc.writeMem(0x5ba0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe79);
        EXPECT(gbc.pc(), 0x5ba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 021E
        gbc.setState(0x7d2d, 0x9775, 0x6100, 0x322, 0x9273, 0x762, 0x1, 0x1);
        gbc.writeMem(0x7d2d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9775);
        EXPECT(gbc.pc(), 0x7d2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 021F
        gbc.setState(0x5ac5, 0xf4e, 0xbf90, 0x6ef2, 0xe2a3, 0x1041, 0x0, 0x1);
        gbc.writeMem(0x5ac5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf4e);
        EXPECT(gbc.pc(), 0x5ac7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0220
        gbc.setState(0x8cef, 0x2891, 0x2760, 0xab72, 0x46dc, 0xc0aa, 0x1, 0x0);
        gbc.writeMem(0x8cef, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2891);
        EXPECT(gbc.pc(), 0x8cf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cef), 0xcb);
        EXPECT(gbc.readMem(0x8cf0), 0x71);
        // CB 71 0221
        gbc.setState(0xbe01, 0xdf2c, 0xd540, 0x5db6, 0x7896, 0x5c8, 0x0, 0x1);
        gbc.writeMem(0xbe01, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xdf2c);
        EXPECT(gbc.pc(), 0xbe03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe01), 0xcb);
        EXPECT(gbc.readMem(0xbe02), 0x71);
        // CB 71 0222
        gbc.setState(0x8fd2, 0xa287, 0xe9f0, 0x8360, 0x5f5d, 0x1d98, 0x1, 0x0);
        gbc.writeMem(0x8fd2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xa287);
        EXPECT(gbc.pc(), 0x8fd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd2), 0xcb);
        EXPECT(gbc.readMem(0x8fd3), 0x71);
        // CB 71 0223
        gbc.setState(0x866c, 0xeb14, 0x31c0, 0x1df3, 0x1908, 0xfaab, 0x1, 0x1);
        gbc.writeMem(0x866c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xeb14);
        EXPECT(gbc.pc(), 0x866e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x866c), 0xcb);
        EXPECT(gbc.readMem(0x866d), 0x71);
        // CB 71 0224
        gbc.setState(0xe26a, 0xee97, 0xeaa0, 0xf2d6, 0xf439, 0x990c, 0x1, 0x1);
        gbc.writeMem(0xe26a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xee97);
        EXPECT(gbc.pc(), 0xe26c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe26a), 0xcb);
        EXPECT(gbc.readMem(0xe26b), 0x71);
        // CB 71 0225
        gbc.setState(0xaeca, 0xb594, 0xdbf0, 0x931a, 0x4677, 0xde5e, 0x0, 0x1);
        gbc.writeMem(0xaeca, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xb594);
        EXPECT(gbc.pc(), 0xaecc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeca), 0xcb);
        EXPECT(gbc.readMem(0xaecb), 0x71);
        // CB 71 0226
        gbc.setState(0x8190, 0x1400, 0xafc0, 0xc596, 0xe02, 0x2377, 0x0, 0x0);
        gbc.writeMem(0x8190, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1400);
        EXPECT(gbc.pc(), 0x8192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8190), 0xcb);
        EXPECT(gbc.readMem(0x8191), 0x71);
        // CB 71 0228
        gbc.setState(0xdb3c, 0xc340, 0x26d0, 0x8d28, 0xa409, 0x21bf, 0x1, 0x1);
        gbc.writeMem(0xdb3c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xc340);
        EXPECT(gbc.pc(), 0xdb3e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb3c), 0xcb);
        EXPECT(gbc.readMem(0xdb3d), 0x71);
        // CB 71 0229
        gbc.setState(0xa3c5, 0x2193, 0x6890, 0x621, 0x766c, 0x7927, 0x1, 0x1);
        gbc.writeMem(0xa3c5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x2193);
        EXPECT(gbc.pc(), 0xa3c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3c5), 0xcb);
        EXPECT(gbc.readMem(0xa3c6), 0x71);
        // CB 71 022A
        gbc.setState(0x2233, 0x2e79, 0x9510, 0xb559, 0xe572, 0x5bff, 0x0, 0x0);
        gbc.writeMem(0x2233, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x2e79);
        EXPECT(gbc.pc(), 0x2235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 022B
        gbc.setState(0xd34b, 0xe96a, 0xd230, 0xe61e, 0x3433, 0x9083, 0x1, 0x1);
        gbc.writeMem(0xd34b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xe96a);
        EXPECT(gbc.pc(), 0xd34d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd34b), 0xcb);
        EXPECT(gbc.readMem(0xd34c), 0x71);
        // CB 71 022C
        gbc.setState(0x49a4, 0x8cc4, 0xef00, 0xaf14, 0xa0b7, 0xd8cd, 0x0, 0x0);
        gbc.writeMem(0x49a4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x8cc4);
        EXPECT(gbc.pc(), 0x49a6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 022E
        gbc.setState(0x7f20, 0x77fa, 0xbb60, 0x6044, 0xed79, 0xd77f, 0x0, 0x1);
        gbc.writeMem(0x7f20, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x77fa);
        EXPECT(gbc.pc(), 0x7f22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 022F
        gbc.setState(0xc56e, 0xd96c, 0xc420, 0x5e97, 0xcada, 0x8180, 0x1, 0x0);
        gbc.writeMem(0xc56e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xd96c);
        EXPECT(gbc.pc(), 0xc570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc56e), 0xcb);
        EXPECT(gbc.readMem(0xc56f), 0x71);
        // CB 71 0230
        gbc.setState(0x432d, 0x6b6d, 0xbc90, 0xe6d1, 0x11d8, 0xd486, 0x1, 0x0);
        gbc.writeMem(0x432d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6b6d);
        EXPECT(gbc.pc(), 0x432f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0232
        gbc.setState(0x2f6d, 0x6dc6, 0xe740, 0xfaf9, 0x7152, 0x2d64, 0x1, 0x1);
        gbc.writeMem(0x2f6d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x6dc6);
        EXPECT(gbc.pc(), 0x2f6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0233
        gbc.setState(0xccbe, 0x1d70, 0x40f0, 0xcba4, 0x1ea2, 0x8897, 0x0, 0x0);
        gbc.writeMem(0xccbe, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x1d70);
        EXPECT(gbc.pc(), 0xccc0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xccbe), 0xcb);
        EXPECT(gbc.readMem(0xccbf), 0x71);
        // CB 71 0234
        gbc.setState(0x217d, 0x2032, 0xc8f0, 0x9354, 0x6fb6, 0xaf1a, 0x0, 0x1);
        gbc.writeMem(0x217d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x2032);
        EXPECT(gbc.pc(), 0x217f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0235
        gbc.setState(0x3af7, 0xeb52, 0x6310, 0x428a, 0x46af, 0x81ee, 0x1, 0x0);
        gbc.writeMem(0x3af7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xeb52);
        EXPECT(gbc.pc(), 0x3af9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0236
        gbc.setState(0x6d89, 0x5a33, 0xd6b0, 0x5b59, 0x4d55, 0x5f38, 0x1, 0x1);
        gbc.writeMem(0x6d89, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5a33);
        EXPECT(gbc.pc(), 0x6d8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0237
        gbc.setState(0x755b, 0x4dda, 0x1e40, 0xa967, 0x8719, 0xa29, 0x0, 0x0);
        gbc.writeMem(0x755b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x4dda);
        EXPECT(gbc.pc(), 0x755d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0238
        gbc.setState(0x658f, 0x34c3, 0x81a0, 0x106c, 0x3e45, 0x1249, 0x1, 0x0);
        gbc.writeMem(0x658f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x34c3);
        EXPECT(gbc.pc(), 0x6591);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0239
        gbc.setState(0x7e45, 0x43c4, 0x96a0, 0x6bab, 0xe931, 0x2d75, 0x1, 0x1);
        gbc.writeMem(0x7e45, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x43c4);
        EXPECT(gbc.pc(), 0x7e47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 023A
        gbc.setState(0x3325, 0x4ccb, 0xf1c0, 0x970d, 0x45ac, 0xe7b8, 0x1, 0x1);
        gbc.writeMem(0x3325, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x4ccb);
        EXPECT(gbc.pc(), 0x3327);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 023C
        gbc.setState(0x2cd0, 0x810d, 0xc3b0, 0x9e74, 0x4626, 0x20b4, 0x1, 0x1);
        gbc.writeMem(0x2cd0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x810d);
        EXPECT(gbc.pc(), 0x2cd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 023D
        gbc.setState(0x7d9a, 0xccc2, 0x9850, 0x24e1, 0x2639, 0x7e44, 0x1, 0x0);
        gbc.writeMem(0x7d9a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xccc2);
        EXPECT(gbc.pc(), 0x7d9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 023E
        gbc.setState(0xea59, 0x1248, 0x7bc0, 0xd98c, 0xda8d, 0xcf4d, 0x0, 0x0);
        gbc.writeMem(0xea59, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x1248);
        EXPECT(gbc.pc(), 0xea5b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea59), 0xcb);
        EXPECT(gbc.readMem(0xea5a), 0x71);
        // CB 71 023F
        gbc.setState(0x5fd6, 0xf208, 0xbf20, 0x4f3f, 0xb955, 0xa485, 0x0, 0x1);
        gbc.writeMem(0x5fd6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xf208);
        EXPECT(gbc.pc(), 0x5fd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0240
        gbc.setState(0x7cc8, 0xfd1c, 0x2770, 0xde93, 0x561e, 0x4da, 0x1, 0x0);
        gbc.writeMem(0x7cc8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xfd1c);
        EXPECT(gbc.pc(), 0x7cca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0243
        gbc.setState(0x9c0d, 0xb58f, 0x1f0, 0x1781, 0x98ea, 0x859, 0x0, 0x0);
        gbc.writeMem(0x9c0d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb58f);
        EXPECT(gbc.pc(), 0x9c0f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c0d), 0xcb);
        EXPECT(gbc.readMem(0x9c0e), 0x71);
        // CB 71 0244
        gbc.setState(0xc606, 0x2746, 0xdc80, 0xe3fb, 0x5432, 0x1766, 0x0, 0x1);
        gbc.writeMem(0xc606, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x2746);
        EXPECT(gbc.pc(), 0xc608);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc606), 0xcb);
        EXPECT(gbc.readMem(0xc607), 0x71);
        // CB 71 0245
        gbc.setState(0x3694, 0xd020, 0xfed0, 0x11e4, 0x8651, 0x812a, 0x1, 0x1);
        gbc.writeMem(0x3694, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xd020);
        EXPECT(gbc.pc(), 0x3696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0246
        gbc.setState(0x8a04, 0x5d5, 0xc910, 0xcb3a, 0x38e4, 0x7e7, 0x0, 0x0);
        gbc.writeMem(0x8a04, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5d5);
        EXPECT(gbc.pc(), 0x8a06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a04), 0xcb);
        EXPECT(gbc.readMem(0x8a05), 0x71);
        // CB 71 0247
        gbc.setState(0xcd84, 0x6464, 0xfed0, 0x2832, 0xbf6c, 0xcd13, 0x0, 0x1);
        gbc.writeMem(0xcd84, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6464);
        EXPECT(gbc.pc(), 0xcd86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd84), 0xcb);
        EXPECT(gbc.readMem(0xcd85), 0x71);
        // CB 71 0248
        gbc.setState(0xa768, 0x1521, 0xa010, 0x99fe, 0xb061, 0x4981, 0x0, 0x1);
        gbc.writeMem(0xa768, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x1521);
        EXPECT(gbc.pc(), 0xa76a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa768), 0xcb);
        EXPECT(gbc.readMem(0xa769), 0x71);
        // CB 71 0249
        gbc.setState(0x11fe, 0xef4b, 0xcee0, 0x961c, 0x7a5a, 0xc04b, 0x1, 0x0);
        gbc.writeMem(0x11fe, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xef4b);
        EXPECT(gbc.pc(), 0x1200);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 024A
        gbc.setState(0x40bb, 0x33ba, 0xe4d0, 0xd378, 0xaba1, 0x8a2, 0x0, 0x1);
        gbc.writeMem(0x40bb, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x33ba);
        EXPECT(gbc.pc(), 0x40bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 024B
        gbc.setState(0x9a1b, 0x56d, 0x9800, 0x78d6, 0x4, 0x6798, 0x0, 0x1);
        gbc.writeMem(0x9a1b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x56d);
        EXPECT(gbc.pc(), 0x9a1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1b), 0xcb);
        EXPECT(gbc.readMem(0x9a1c), 0x71);
        // CB 71 024C
        gbc.setState(0x7dbb, 0xd848, 0xfa20, 0x755b, 0x2600, 0x57ce, 0x0, 0x0);
        gbc.writeMem(0x7dbb, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xd848);
        EXPECT(gbc.pc(), 0x7dbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 024E
        gbc.setState(0x7292, 0xb125, 0x7820, 0xa295, 0x9cee, 0x7b94, 0x0, 0x1);
        gbc.writeMem(0x7292, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb125);
        EXPECT(gbc.pc(), 0x7294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 024F
        gbc.setState(0xb2e6, 0xd420, 0x6990, 0x808e, 0x4dd9, 0xec79, 0x0, 0x1);
        gbc.writeMem(0xb2e6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd420);
        EXPECT(gbc.pc(), 0xb2e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2e6), 0xcb);
        EXPECT(gbc.readMem(0xb2e7), 0x71);
        // CB 71 0250
        gbc.setState(0xe490, 0xaf0f, 0xb760, 0xb878, 0x22d4, 0x8cdf, 0x1, 0x1);
        gbc.writeMem(0xe490, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xaf0f);
        EXPECT(gbc.pc(), 0xe492);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe490), 0xcb);
        EXPECT(gbc.readMem(0xe491), 0x71);
        // CB 71 0251
        gbc.setState(0x6060, 0xe34d, 0x8e30, 0x95ae, 0xa928, 0xc260, 0x1, 0x1);
        gbc.writeMem(0x6060, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xe34d);
        EXPECT(gbc.pc(), 0x6062);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0252
        gbc.setState(0xa04, 0x85e7, 0x330, 0xe70, 0xd3ce, 0x6a2b, 0x1, 0x1);
        gbc.writeMem(0xa04, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x85e7);
        EXPECT(gbc.pc(), 0xa06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0253
        gbc.setState(0x34db, 0x941d, 0x7100, 0x9074, 0x1cbb, 0xcfb4, 0x1, 0x1);
        gbc.writeMem(0x34db, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x941d);
        EXPECT(gbc.pc(), 0x34dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0254
        gbc.setState(0x8410, 0x772, 0x2d80, 0x999, 0xe399, 0xe431, 0x1, 0x0);
        gbc.writeMem(0x8410, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x772);
        EXPECT(gbc.pc(), 0x8412);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8410), 0xcb);
        EXPECT(gbc.readMem(0x8411), 0x71);
        // CB 71 0255
        gbc.setState(0x38cf, 0x5589, 0x8fa0, 0xd734, 0xe1c8, 0xcbb9, 0x1, 0x1);
        gbc.writeMem(0x38cf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x5589);
        EXPECT(gbc.pc(), 0x38d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0257
        gbc.setState(0x2ab8, 0xaef4, 0xe310, 0x1af3, 0xe316, 0x702f, 0x0, 0x1);
        gbc.writeMem(0x2ab8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xaef4);
        EXPECT(gbc.pc(), 0x2aba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0258
        gbc.setState(0xa39a, 0xd06e, 0x87a0, 0x7b75, 0x1126, 0x702b, 0x0, 0x1);
        gbc.writeMem(0xa39a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd06e);
        EXPECT(gbc.pc(), 0xa39c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa39a), 0xcb);
        EXPECT(gbc.readMem(0xa39b), 0x71);
        // CB 71 0259
        gbc.setState(0xdc6b, 0x59c, 0x9490, 0x7a8, 0x96e0, 0xc5a5, 0x0, 0x1);
        gbc.writeMem(0xdc6b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x59c);
        EXPECT(gbc.pc(), 0xdc6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc6b), 0xcb);
        EXPECT(gbc.readMem(0xdc6c), 0x71);
        // CB 71 025A
        gbc.setState(0x926e, 0x6e6d, 0xee50, 0xb480, 0xb536, 0xb52b, 0x1, 0x1);
        gbc.writeMem(0x926e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x6e6d);
        EXPECT(gbc.pc(), 0x9270);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x926e), 0xcb);
        EXPECT(gbc.readMem(0x926f), 0x71);
        // CB 71 025B
        gbc.setState(0x4a52, 0x686d, 0xec90, 0x913b, 0xd06c, 0x562b, 0x1, 0x0);
        gbc.writeMem(0x4a52, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x686d);
        EXPECT(gbc.pc(), 0x4a54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 025C
        gbc.setState(0x9c9f, 0x5a7c, 0x8840, 0x3e3b, 0x71bd, 0x4584, 0x0, 0x1);
        gbc.writeMem(0x9c9f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x5a7c);
        EXPECT(gbc.pc(), 0x9ca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c9f), 0xcb);
        EXPECT(gbc.readMem(0x9ca0), 0x71);
        // CB 71 025D
        gbc.setState(0xb4c4, 0xedb2, 0x2f40, 0x997b, 0xf16b, 0xd11, 0x1, 0x0);
        gbc.writeMem(0xb4c4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xedb2);
        EXPECT(gbc.pc(), 0xb4c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4c4), 0xcb);
        EXPECT(gbc.readMem(0xb4c5), 0x71);
        // CB 71 025E
        gbc.setState(0x100a, 0x136c, 0x91a0, 0xc7d5, 0x3fbb, 0xd46, 0x1, 0x0);
        gbc.writeMem(0x100a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x136c);
        EXPECT(gbc.pc(), 0x100c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 025F
        gbc.setState(0x8b3, 0x90ce, 0xa4d0, 0xc1d7, 0x4ab1, 0x56a5, 0x0, 0x0);
        gbc.writeMem(0x8b3, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x90ce);
        EXPECT(gbc.pc(), 0x8b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0260
        gbc.setState(0xdba2, 0x39d9, 0xd2b0, 0x7526, 0x3d3e, 0xa91f, 0x1, 0x1);
        gbc.writeMem(0xdba2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x39d9);
        EXPECT(gbc.pc(), 0xdba4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdba2), 0xcb);
        EXPECT(gbc.readMem(0xdba3), 0x71);
        // CB 71 0261
        gbc.setState(0x5785, 0x2e9e, 0x8450, 0x178, 0x5814, 0xfa6c, 0x0, 0x0);
        gbc.writeMem(0x5785, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x2e9e);
        EXPECT(gbc.pc(), 0x5787);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0262
        gbc.setState(0xeef, 0xb6c6, 0x5e00, 0x8e8d, 0x7561, 0xbcac, 0x0, 0x0);
        gbc.writeMem(0xeef, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb6c6);
        EXPECT(gbc.pc(), 0xef1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0263
        gbc.setState(0x3fc, 0xc6ea, 0xb040, 0x64b8, 0xcfda, 0x525a, 0x1, 0x1);
        gbc.writeMem(0x3fc, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xc6ea);
        EXPECT(gbc.pc(), 0x3fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0264
        gbc.setState(0x3c28, 0xf83b, 0xb110, 0xa262, 0x69f9, 0x324f, 0x1, 0x0);
        gbc.writeMem(0x3c28, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xf83b);
        EXPECT(gbc.pc(), 0x3c2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0265
        gbc.setState(0x71c8, 0xc43, 0xdc10, 0x59c3, 0x521a, 0x4083, 0x1, 0x1);
        gbc.writeMem(0x71c8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xc43);
        EXPECT(gbc.pc(), 0x71ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0266
        gbc.setState(0x30e, 0x9389, 0xa2b0, 0x2891, 0xe6d8, 0x5215, 0x1, 0x1);
        gbc.writeMem(0x30e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x9389);
        EXPECT(gbc.pc(), 0x310);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0267
        gbc.setState(0x4402, 0xd330, 0x5e60, 0xdbf1, 0x8c0e, 0x55d0, 0x0, 0x1);
        gbc.writeMem(0x4402, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xd330);
        EXPECT(gbc.pc(), 0x4404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0268
        gbc.setState(0x7783, 0x2e86, 0x76f0, 0xd6a4, 0x63c7, 0xa98f, 0x1, 0x0);
        gbc.writeMem(0x7783, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2e86);
        EXPECT(gbc.pc(), 0x7785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0269
        gbc.setState(0x4466, 0x313b, 0x3200, 0xb214, 0x68a, 0x889e, 0x0, 0x1);
        gbc.writeMem(0x4466, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x313b);
        EXPECT(gbc.pc(), 0x4468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 026A
        gbc.setState(0x1a5, 0xd303, 0x1760, 0x8c15, 0x98c4, 0x537d, 0x1, 0x1);
        gbc.writeMem(0x1a5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd303);
        EXPECT(gbc.pc(), 0x1a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 026B
        gbc.setState(0x2252, 0x1b85, 0xdd40, 0xdca3, 0xb11, 0x2e0e, 0x0, 0x0);
        gbc.writeMem(0x2252, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x1b85);
        EXPECT(gbc.pc(), 0x2254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 026C
        gbc.setState(0x3217, 0x5fdd, 0x6e50, 0xe7ae, 0xe77, 0xe999, 0x0, 0x1);
        gbc.writeMem(0x3217, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x5fdd);
        EXPECT(gbc.pc(), 0x3219);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 026F
        gbc.setState(0x7d70, 0x8363, 0x2f0, 0xf195, 0x3f0f, 0x71c1, 0x1, 0x0);
        gbc.writeMem(0x7d70, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8363);
        EXPECT(gbc.pc(), 0x7d72);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0270
        gbc.setState(0x352c, 0xb2c1, 0xbcd0, 0x8348, 0xab6f, 0xa58d, 0x1, 0x0);
        gbc.writeMem(0x352c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb2c1);
        EXPECT(gbc.pc(), 0x352e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0272
        gbc.setState(0xe7e, 0x5e3, 0x2e20, 0x67cc, 0x2acd, 0x38e, 0x1, 0x1);
        gbc.writeMem(0xe7e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x5e3);
        EXPECT(gbc.pc(), 0xe80);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0273
        gbc.setState(0x9ffa, 0xfd75, 0x78a0, 0x7b27, 0xc391, 0xd494, 0x0, 0x1);
        gbc.writeMem(0x9ffa, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xfd75);
        EXPECT(gbc.pc(), 0x9ffc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ffa), 0xcb);
        EXPECT(gbc.readMem(0x9ffb), 0x71);
        // CB 71 0274
        gbc.setState(0x5e77, 0x6120, 0x17d0, 0x659c, 0xc31e, 0x5e43, 0x0, 0x1);
        gbc.writeMem(0x5e77, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x6120);
        EXPECT(gbc.pc(), 0x5e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0275
        gbc.setState(0x69b3, 0xcacb, 0xe8a0, 0x7fea, 0xb643, 0x75ba, 0x0, 0x1);
        gbc.writeMem(0x69b3, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xcacb);
        EXPECT(gbc.pc(), 0x69b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0276
        gbc.setState(0xd3ff, 0x3adf, 0xbb70, 0x97c5, 0xc5ef, 0x70a7, 0x0, 0x0);
        gbc.writeMem(0xd3ff, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x3adf);
        EXPECT(gbc.pc(), 0xd401);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3ff), 0xcb);
        EXPECT(gbc.readMem(0xd400), 0x71);
        // CB 71 0277
        gbc.setState(0x9b7b, 0x65ae, 0x9ec0, 0xa579, 0xfc81, 0x19fe, 0x1, 0x0);
        gbc.writeMem(0x9b7b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x65ae);
        EXPECT(gbc.pc(), 0x9b7d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b7b), 0xcb);
        EXPECT(gbc.readMem(0x9b7c), 0x71);
        // CB 71 0279
        gbc.setState(0xd811, 0x4c48, 0x25a0, 0x663b, 0x48e6, 0x39a9, 0x1, 0x0);
        gbc.writeMem(0xd811, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4c48);
        EXPECT(gbc.pc(), 0xd813);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd811), 0xcb);
        EXPECT(gbc.readMem(0xd812), 0x71);
        // CB 71 027A
        gbc.setState(0xbbc6, 0x6606, 0xcb40, 0x6690, 0x3e91, 0x2a47, 0x0, 0x1);
        gbc.writeMem(0xbbc6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6606);
        EXPECT(gbc.pc(), 0xbbc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbc6), 0xcb);
        EXPECT(gbc.readMem(0xbbc7), 0x71);
        // CB 71 027B
        gbc.setState(0x6fc0, 0x271a, 0xf570, 0x9e47, 0xe383, 0xccba, 0x0, 0x1);
        gbc.writeMem(0x6fc0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x271a);
        EXPECT(gbc.pc(), 0x6fc2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 027C
        gbc.setState(0x576f, 0xbcf7, 0x4d0, 0xdad6, 0x98a6, 0x6aa, 0x0, 0x1);
        gbc.writeMem(0x576f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xbcf7);
        EXPECT(gbc.pc(), 0x5771);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 027D
        gbc.setState(0xc591, 0x7f65, 0x7d60, 0x5b9d, 0x4b97, 0x10ff, 0x0, 0x1);
        gbc.writeMem(0xc591, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x7f65);
        EXPECT(gbc.pc(), 0xc593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc591), 0xcb);
        EXPECT(gbc.readMem(0xc592), 0x71);
        // CB 71 027E
        gbc.setState(0x3b4e, 0x1567, 0x8650, 0xa56b, 0x9c28, 0xcfab, 0x1, 0x1);
        gbc.writeMem(0x3b4e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x1567);
        EXPECT(gbc.pc(), 0x3b50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 027F
        gbc.setState(0xc127, 0xb2b0, 0x70b0, 0xdcab, 0x76c5, 0x54da, 0x1, 0x1);
        gbc.writeMem(0xc127, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb2b0);
        EXPECT(gbc.pc(), 0xc129);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc127), 0xcb);
        EXPECT(gbc.readMem(0xc128), 0x71);
        // CB 71 0280
        gbc.setState(0x2367, 0x1829, 0x6660, 0xc5d6, 0xd0d, 0x8c0d, 0x1, 0x1);
        gbc.writeMem(0x2367, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1829);
        EXPECT(gbc.pc(), 0x2369);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0281
        gbc.setState(0x843, 0x9a89, 0xb00, 0x2c9b, 0x86eb, 0x2207, 0x0, 0x1);
        gbc.writeMem(0x843, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9a89);
        EXPECT(gbc.pc(), 0x845);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0282
        gbc.setState(0xbaea, 0x36b0, 0xd2d0, 0x683, 0xdf72, 0xb5e3, 0x0, 0x0);
        gbc.writeMem(0xbaea, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x36b0);
        EXPECT(gbc.pc(), 0xbaec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbaea), 0xcb);
        EXPECT(gbc.readMem(0xbaeb), 0x71);
        // CB 71 0283
        gbc.setState(0x90c5, 0xcf4b, 0xe790, 0x7678, 0x2bf8, 0xd5a6, 0x1, 0x1);
        gbc.writeMem(0x90c5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xcf4b);
        EXPECT(gbc.pc(), 0x90c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90c5), 0xcb);
        EXPECT(gbc.readMem(0x90c6), 0x71);
        // CB 71 0284
        gbc.setState(0x33cf, 0x8709, 0x5ae0, 0x147e, 0xdf70, 0xc47a, 0x1, 0x0);
        gbc.writeMem(0x33cf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x8709);
        EXPECT(gbc.pc(), 0x33d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0285
        gbc.setState(0x6ed9, 0xe36d, 0x54e0, 0x9daa, 0x9c78, 0xe146, 0x0, 0x1);
        gbc.writeMem(0x6ed9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xe36d);
        EXPECT(gbc.pc(), 0x6edb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0287
        gbc.setState(0xc241, 0x6d3, 0x4ff0, 0x98a8, 0x577c, 0xfc7c, 0x0, 0x0);
        gbc.writeMem(0xc241, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x6d3);
        EXPECT(gbc.pc(), 0xc243);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc241), 0xcb);
        EXPECT(gbc.readMem(0xc242), 0x71);
        // CB 71 0288
        gbc.setState(0x3c3b, 0xb2e, 0x7790, 0x4913, 0x67b5, 0x141e, 0x0, 0x0);
        gbc.writeMem(0x3c3b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xb2e);
        EXPECT(gbc.pc(), 0x3c3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0289
        gbc.setState(0xc2a0, 0xfed7, 0x4720, 0xab6e, 0xa879, 0xcd8a, 0x1, 0x0);
        gbc.writeMem(0xc2a0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfed7);
        EXPECT(gbc.pc(), 0xc2a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2a0), 0xcb);
        EXPECT(gbc.readMem(0xc2a1), 0x71);
        // CB 71 028A
        gbc.setState(0x13d7, 0x9d1a, 0xfed0, 0x8ac3, 0x1974, 0x2820, 0x1, 0x1);
        gbc.writeMem(0x13d7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x9d1a);
        EXPECT(gbc.pc(), 0x13d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 028B
        gbc.setState(0x837a, 0x774c, 0x460, 0x2ae2, 0xf98b, 0x33e, 0x1, 0x1);
        gbc.writeMem(0x837a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x774c);
        EXPECT(gbc.pc(), 0x837c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x837a), 0xcb);
        EXPECT(gbc.readMem(0x837b), 0x71);
        // CB 71 028C
        gbc.setState(0xa304, 0x6cb2, 0x5410, 0xdf0, 0x65, 0xbf12, 0x0, 0x0);
        gbc.writeMem(0xa304, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x6cb2);
        EXPECT(gbc.pc(), 0xa306);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa304), 0xcb);
        EXPECT(gbc.readMem(0xa305), 0x71);
        // CB 71 028D
        gbc.setState(0xd4e1, 0x5670, 0x4e10, 0x3a22, 0x4da8, 0xf8e2, 0x1, 0x0);
        gbc.writeMem(0xd4e1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x5670);
        EXPECT(gbc.pc(), 0xd4e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd4e1), 0xcb);
        EXPECT(gbc.readMem(0xd4e2), 0x71);
        // CB 71 028E
        gbc.setState(0xa690, 0x8680, 0x1f80, 0x1904, 0x2c4a, 0xcd6a, 0x1, 0x1);
        gbc.writeMem(0xa690, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x8680);
        EXPECT(gbc.pc(), 0xa692);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa690), 0xcb);
        EXPECT(gbc.readMem(0xa691), 0x71);
        // CB 71 028F
        gbc.setState(0xaee0, 0x796e, 0x2d70, 0xfec5, 0x1d37, 0x708e, 0x0, 0x1);
        gbc.writeMem(0xaee0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x796e);
        EXPECT(gbc.pc(), 0xaee2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaee0), 0xcb);
        EXPECT(gbc.readMem(0xaee1), 0x71);
        // CB 71 0290
        gbc.setState(0x87f4, 0xfe19, 0xaba0, 0xcaa6, 0x1dbe, 0x3f45, 0x1, 0x1);
        gbc.writeMem(0x87f4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xfe19);
        EXPECT(gbc.pc(), 0x87f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87f4), 0xcb);
        EXPECT(gbc.readMem(0x87f5), 0x71);
        // CB 71 0291
        gbc.setState(0xb1f9, 0xc5f3, 0x2df0, 0xf554, 0x69ea, 0xfea5, 0x1, 0x0);
        gbc.writeMem(0xb1f9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xc5f3);
        EXPECT(gbc.pc(), 0xb1fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1f9), 0xcb);
        EXPECT(gbc.readMem(0xb1fa), 0x71);
        // CB 71 0292
        gbc.setState(0x7052, 0x5529, 0x3270, 0x38b0, 0xf778, 0xb242, 0x0, 0x0);
        gbc.writeMem(0x7052, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x5529);
        EXPECT(gbc.pc(), 0x7054);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0293
        gbc.setState(0x41f3, 0xd70e, 0x3d70, 0x8184, 0x6e87, 0x556b, 0x0, 0x1);
        gbc.writeMem(0x41f3, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xd70e);
        EXPECT(gbc.pc(), 0x41f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0294
        gbc.setState(0x72ce, 0xe3aa, 0x5570, 0x859d, 0xc8ff, 0xb02a, 0x1, 0x0);
        gbc.writeMem(0x72ce, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe3aa);
        EXPECT(gbc.pc(), 0x72d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0295
        gbc.setState(0x434b, 0x5eb3, 0x2800, 0xdcc7, 0xa43, 0x41be, 0x1, 0x0);
        gbc.writeMem(0x434b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x5eb3);
        EXPECT(gbc.pc(), 0x434d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0296
        gbc.setState(0x656a, 0xefc8, 0xeff0, 0x7fa8, 0xa697, 0xddfd, 0x1, 0x0);
        gbc.writeMem(0x656a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xefc8);
        EXPECT(gbc.pc(), 0x656c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0297
        gbc.setState(0xd297, 0x17fb, 0xecd0, 0xfc6c, 0x44cc, 0x3c11, 0x0, 0x0);
        gbc.writeMem(0xd297, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x17fb);
        EXPECT(gbc.pc(), 0xd299);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd297), 0xcb);
        EXPECT(gbc.readMem(0xd298), 0x71);
        // CB 71 0298
        gbc.setState(0xc849, 0xfa91, 0x8c80, 0x5467, 0x24d8, 0x5b0d, 0x1, 0x1);
        gbc.writeMem(0xc849, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xfa91);
        EXPECT(gbc.pc(), 0xc84b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc849), 0xcb);
        EXPECT(gbc.readMem(0xc84a), 0x71);
        // CB 71 0299
        gbc.setState(0x67a7, 0xf561, 0x8b10, 0xb3cb, 0x7a83, 0x831b, 0x1, 0x1);
        gbc.writeMem(0x67a7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xf561);
        EXPECT(gbc.pc(), 0x67a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 029A
        gbc.setState(0x5de9, 0x30d0, 0xdc0, 0xe0e4, 0x6b50, 0x6085, 0x1, 0x1);
        gbc.writeMem(0x5de9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x30d0);
        EXPECT(gbc.pc(), 0x5deb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 029B
        gbc.setState(0xdbb, 0xce5a, 0xd600, 0x4b1d, 0x1c12, 0x3b25, 0x0, 0x0);
        gbc.writeMem(0xdbb, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xce5a);
        EXPECT(gbc.pc(), 0xdbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 029C
        gbc.setState(0x8efa, 0xc3b4, 0x8c50, 0xdd07, 0xd503, 0x359a, 0x0, 0x0);
        gbc.writeMem(0x8efa, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xc3b4);
        EXPECT(gbc.pc(), 0x8efc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8efa), 0xcb);
        EXPECT(gbc.readMem(0x8efb), 0x71);
        // CB 71 029D
        gbc.setState(0xde4b, 0xe116, 0x96e0, 0x3310, 0x37f0, 0xb789, 0x0, 0x1);
        gbc.writeMem(0xde4b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xe116);
        EXPECT(gbc.pc(), 0xde4d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde4b), 0xcb);
        EXPECT(gbc.readMem(0xde4c), 0x71);
        // CB 71 029E
        gbc.setState(0xe758, 0x28f5, 0x4550, 0x6e09, 0x7953, 0xe0e9, 0x1, 0x0);
        gbc.writeMem(0xe758, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x28f5);
        EXPECT(gbc.pc(), 0xe75a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe758), 0xcb);
        EXPECT(gbc.readMem(0xe759), 0x71);
        // CB 71 029F
        gbc.setState(0xe034, 0xfab8, 0x5480, 0x2d61, 0x5532, 0x8a40, 0x1, 0x1);
        gbc.writeMem(0xe034, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xfab8);
        EXPECT(gbc.pc(), 0xe036);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe034), 0xcb);
        EXPECT(gbc.readMem(0xe035), 0x71);
        // CB 71 02A0
        gbc.setState(0x3524, 0x990a, 0x5f10, 0x306a, 0x5ed7, 0xbc46, 0x0, 0x1);
        gbc.writeMem(0x3524, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x990a);
        EXPECT(gbc.pc(), 0x3526);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02A1
        gbc.setState(0x6d41, 0xe707, 0xde20, 0xc332, 0x6ab8, 0x2fb1, 0x1, 0x0);
        gbc.writeMem(0x6d41, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xe707);
        EXPECT(gbc.pc(), 0x6d43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02A2
        gbc.setState(0x30a6, 0xb763, 0x5e50, 0xeac8, 0x8349, 0x3c17, 0x0, 0x1);
        gbc.writeMem(0x30a6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb763);
        EXPECT(gbc.pc(), 0x30a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02A3
        gbc.setState(0x1815, 0xeff4, 0x33e0, 0xe9bb, 0x8a94, 0xce64, 0x0, 0x0);
        gbc.writeMem(0x1815, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xeff4);
        EXPECT(gbc.pc(), 0x1817);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02A4
        gbc.setState(0x6055, 0x5072, 0xb780, 0xbe2, 0x77a6, 0xfcd1, 0x1, 0x1);
        gbc.writeMem(0x6055, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x5072);
        EXPECT(gbc.pc(), 0x6057);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02A5
        gbc.setState(0xa09c, 0xfd8f, 0x5c90, 0x2b60, 0xe322, 0x2c07, 0x0, 0x0);
        gbc.writeMem(0xa09c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xfd8f);
        EXPECT(gbc.pc(), 0xa09e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa09c), 0xcb);
        EXPECT(gbc.readMem(0xa09d), 0x71);
        // CB 71 02A6
        gbc.setState(0xa778, 0x2656, 0x3560, 0x42d1, 0xa63c, 0xbae2, 0x1, 0x0);
        gbc.writeMem(0xa778, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x2656);
        EXPECT(gbc.pc(), 0xa77a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa778), 0xcb);
        EXPECT(gbc.readMem(0xa779), 0x71);
        // CB 71 02A7
        gbc.setState(0x5e2a, 0x5a87, 0xad00, 0xb5bc, 0xb86f, 0xa4b1, 0x1, 0x0);
        gbc.writeMem(0x5e2a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5a87);
        EXPECT(gbc.pc(), 0x5e2c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02A8
        gbc.setState(0x5e31, 0x6f8, 0xdef0, 0x6b84, 0x2176, 0xc18f, 0x1, 0x0);
        gbc.writeMem(0x5e31, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x6f8);
        EXPECT(gbc.pc(), 0x5e33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02A9
        gbc.setState(0x9c80, 0x2504, 0x34d0, 0x3575, 0xa059, 0x9263, 0x0, 0x0);
        gbc.writeMem(0x9c80, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2504);
        EXPECT(gbc.pc(), 0x9c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c80), 0xcb);
        EXPECT(gbc.readMem(0x9c81), 0x71);
        // CB 71 02AA
        gbc.setState(0x6ef6, 0x4a31, 0x4860, 0x90a2, 0xf36e, 0xda68, 0x0, 0x0);
        gbc.writeMem(0x6ef6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x4a31);
        EXPECT(gbc.pc(), 0x6ef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02AB
        gbc.setState(0xcee9, 0x874b, 0x2730, 0xf97e, 0x7280, 0xbaa1, 0x1, 0x1);
        gbc.writeMem(0xcee9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x874b);
        EXPECT(gbc.pc(), 0xceeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcee9), 0xcb);
        EXPECT(gbc.readMem(0xceea), 0x71);
        // CB 71 02AC
        gbc.setState(0x7a, 0x98ad, 0x7210, 0x4ae, 0x552, 0x832a, 0x1, 0x0);
        gbc.writeMem(0x7a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x98ad);
        EXPECT(gbc.pc(), 0x7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02AD
        gbc.setState(0x1935, 0x2b4e, 0x8b30, 0x4a08, 0x4eab, 0xdb8d, 0x1, 0x1);
        gbc.writeMem(0x1935, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x2b4e);
        EXPECT(gbc.pc(), 0x1937);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02AE
        gbc.setState(0x2d70, 0x2552, 0x29a0, 0xcdf3, 0xb44d, 0xe5b9, 0x0, 0x0);
        gbc.writeMem(0x2d70, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x2552);
        EXPECT(gbc.pc(), 0x2d72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02AF
        gbc.setState(0x464, 0xcf82, 0xcbf0, 0xd9b, 0xf976, 0x2b9d, 0x1, 0x0);
        gbc.writeMem(0x464, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xcf82);
        EXPECT(gbc.pc(), 0x466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02B0
        gbc.setState(0x2b8a, 0x926f, 0xd4d0, 0x1685, 0x1cd2, 0xb1be, 0x1, 0x1);
        gbc.writeMem(0x2b8a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x926f);
        EXPECT(gbc.pc(), 0x2b8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02B1
        gbc.setState(0x863d, 0x9f2d, 0x47b0, 0x5361, 0x20e7, 0x6d8c, 0x1, 0x0);
        gbc.writeMem(0x863d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9f2d);
        EXPECT(gbc.pc(), 0x863f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x863d), 0xcb);
        EXPECT(gbc.readMem(0x863e), 0x71);
        // CB 71 02B2
        gbc.setState(0x6bd6, 0x9312, 0xe840, 0xdc7d, 0xec0, 0xcd8f, 0x0, 0x1);
        gbc.writeMem(0x6bd6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x9312);
        EXPECT(gbc.pc(), 0x6bd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02B3
        gbc.setState(0xda36, 0xd980, 0x37a0, 0x8b64, 0xd60d, 0x8184, 0x1, 0x0);
        gbc.writeMem(0xda36, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xd980);
        EXPECT(gbc.pc(), 0xda38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda36), 0xcb);
        EXPECT(gbc.readMem(0xda37), 0x71);
        // CB 71 02B4
        gbc.setState(0xcd6b, 0x2678, 0x87d0, 0xc178, 0x649c, 0xe163, 0x1, 0x1);
        gbc.writeMem(0xcd6b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x2678);
        EXPECT(gbc.pc(), 0xcd6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd6b), 0xcb);
        EXPECT(gbc.readMem(0xcd6c), 0x71);
        // CB 71 02B5
        gbc.setState(0x3118, 0x8d8e, 0x8b0, 0x6e4b, 0x9050, 0x7b72, 0x0, 0x1);
        gbc.writeMem(0x3118, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x8d8e);
        EXPECT(gbc.pc(), 0x311a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02B6
        gbc.setState(0x4549, 0xee21, 0x1130, 0xa87b, 0xb122, 0xc027, 0x1, 0x1);
        gbc.writeMem(0x4549, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xee21);
        EXPECT(gbc.pc(), 0x454b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02B7
        gbc.setState(0x297c, 0x7ed9, 0x8850, 0x17a4, 0x930f, 0xb998, 0x1, 0x1);
        gbc.writeMem(0x297c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x7ed9);
        EXPECT(gbc.pc(), 0x297e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02B8
        gbc.setState(0x12bf, 0x8de, 0x8230, 0x8074, 0x4191, 0x62bd, 0x0, 0x0);
        gbc.writeMem(0x12bf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8de);
        EXPECT(gbc.pc(), 0x12c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02B9
        gbc.setState(0x913a, 0xf4e1, 0x71c0, 0x35c2, 0x1beb, 0x68e, 0x0, 0x0);
        gbc.writeMem(0x913a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf4e1);
        EXPECT(gbc.pc(), 0x913c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x913a), 0xcb);
        EXPECT(gbc.readMem(0x913b), 0x71);
        // CB 71 02BA
        gbc.setState(0x776a, 0x88f7, 0xd7f0, 0xd9cb, 0xe8da, 0x806e, 0x0, 0x1);
        gbc.writeMem(0x776a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x88f7);
        EXPECT(gbc.pc(), 0x776c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02BB
        gbc.setState(0xaad5, 0x6f0, 0xf00, 0x19d8, 0x32dd, 0x76c1, 0x1, 0x1);
        gbc.writeMem(0xaad5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6f0);
        EXPECT(gbc.pc(), 0xaad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaad5), 0xcb);
        EXPECT(gbc.readMem(0xaad6), 0x71);
        // CB 71 02BD
        gbc.setState(0xa0d9, 0xabbd, 0x53a0, 0x503a, 0x127f, 0xf254, 0x1, 0x0);
        gbc.writeMem(0xa0d9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xabbd);
        EXPECT(gbc.pc(), 0xa0db);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0d9), 0xcb);
        EXPECT(gbc.readMem(0xa0da), 0x71);
        // CB 71 02BF
        gbc.setState(0x6d61, 0x2dad, 0x9450, 0x6656, 0xfb43, 0x789f, 0x0, 0x0);
        gbc.writeMem(0x6d61, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2dad);
        EXPECT(gbc.pc(), 0x6d63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02C1
        gbc.setState(0xd12d, 0xe21c, 0xb470, 0xb93f, 0xb5ef, 0x6a31, 0x0, 0x1);
        gbc.writeMem(0xd12d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xe21c);
        EXPECT(gbc.pc(), 0xd12f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd12d), 0xcb);
        EXPECT(gbc.readMem(0xd12e), 0x71);
        // CB 71 02C2
        gbc.setState(0x6c7d, 0xea23, 0x4520, 0x673a, 0x6110, 0x8d6, 0x1, 0x0);
        gbc.writeMem(0x6c7d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xea23);
        EXPECT(gbc.pc(), 0x6c7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02C3
        gbc.setState(0x7299, 0xb0f5, 0x200, 0x7826, 0x3056, 0x701d, 0x0, 0x0);
        gbc.writeMem(0x7299, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xb0f5);
        EXPECT(gbc.pc(), 0x729b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02C4
        gbc.setState(0xa34a, 0x6cbb, 0x2700, 0x22a2, 0xe10a, 0x9fd1, 0x0, 0x1);
        gbc.writeMem(0xa34a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6cbb);
        EXPECT(gbc.pc(), 0xa34c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa34a), 0xcb);
        EXPECT(gbc.readMem(0xa34b), 0x71);
        // CB 71 02C5
        gbc.setState(0x198e, 0xfdbb, 0xeba0, 0x7f41, 0x7dd4, 0x2b08, 0x0, 0x1);
        gbc.writeMem(0x198e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xfdbb);
        EXPECT(gbc.pc(), 0x1990);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02C6
        gbc.setState(0xa335, 0xa25, 0xbf20, 0x74c3, 0x6769, 0x703f, 0x1, 0x0);
        gbc.writeMem(0xa335, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xa25);
        EXPECT(gbc.pc(), 0xa337);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa335), 0xcb);
        EXPECT(gbc.readMem(0xa336), 0x71);
        // CB 71 02C7
        gbc.setState(0x32a2, 0xb703, 0xe820, 0xb3b2, 0x93f3, 0x7dc, 0x1, 0x0);
        gbc.writeMem(0x32a2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb703);
        EXPECT(gbc.pc(), 0x32a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02C8
        gbc.setState(0x5a25, 0x8bcc, 0xf7d0, 0x2a7b, 0xbf83, 0x3c2b, 0x1, 0x1);
        gbc.writeMem(0x5a25, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8bcc);
        EXPECT(gbc.pc(), 0x5a27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02C9
        gbc.setState(0x16f1, 0x1e21, 0xecc0, 0x52c3, 0x38cf, 0x1cff, 0x0, 0x0);
        gbc.writeMem(0x16f1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1e21);
        EXPECT(gbc.pc(), 0x16f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02CA
        gbc.setState(0x66c4, 0xdd60, 0x8b00, 0x319f, 0x80e, 0x8898, 0x1, 0x0);
        gbc.writeMem(0x66c4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xdd60);
        EXPECT(gbc.pc(), 0x66c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02CB
        gbc.setState(0x765c, 0x9434, 0x6950, 0x724, 0xda22, 0x47c4, 0x0, 0x0);
        gbc.writeMem(0x765c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x9434);
        EXPECT(gbc.pc(), 0x765e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02CC
        gbc.setState(0x53a1, 0xc9dd, 0x7fd0, 0x9381, 0x5100, 0x8e32, 0x1, 0x0);
        gbc.writeMem(0x53a1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc9dd);
        EXPECT(gbc.pc(), 0x53a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02CD
        gbc.setState(0x30e6, 0x6022, 0xb8b0, 0x7707, 0xd59c, 0x6b13, 0x1, 0x1);
        gbc.writeMem(0x30e6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x6022);
        EXPECT(gbc.pc(), 0x30e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02CE
        gbc.setState(0xc729, 0x2571, 0xef40, 0xf7c6, 0xa9f, 0x5a2a, 0x1, 0x0);
        gbc.writeMem(0xc729, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2571);
        EXPECT(gbc.pc(), 0xc72b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc729), 0xcb);
        EXPECT(gbc.readMem(0xc72a), 0x71);
        // CB 71 02CF
        gbc.setState(0x4556, 0x5390, 0xa090, 0xac51, 0xb9e0, 0x5f82, 0x1, 0x0);
        gbc.writeMem(0x4556, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5390);
        EXPECT(gbc.pc(), 0x4558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02D0
        gbc.setState(0x1c4a, 0x1641, 0x4b40, 0xd40b, 0x2500, 0x9748, 0x0, 0x0);
        gbc.writeMem(0x1c4a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x1641);
        EXPECT(gbc.pc(), 0x1c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02D1
        gbc.setState(0xbac4, 0xf01e, 0xbed0, 0x31c9, 0xa24, 0x3f4d, 0x0, 0x0);
        gbc.writeMem(0xbac4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xf01e);
        EXPECT(gbc.pc(), 0xbac6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbac4), 0xcb);
        EXPECT(gbc.readMem(0xbac5), 0x71);
        // CB 71 02D2
        gbc.setState(0x2c7d, 0x38e, 0x5ed0, 0x48f7, 0x491, 0x69fe, 0x0, 0x1);
        gbc.writeMem(0x2c7d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x38e);
        EXPECT(gbc.pc(), 0x2c7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02D3
        gbc.setState(0xa605, 0xa624, 0xf070, 0xd8e3, 0x1b56, 0x849f, 0x0, 0x1);
        gbc.writeMem(0xa605, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa624);
        EXPECT(gbc.pc(), 0xa607);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa605), 0xcb);
        EXPECT(gbc.readMem(0xa606), 0x71);
        // CB 71 02D4
        gbc.setState(0xdb4c, 0xcd8c, 0x4b20, 0x81fc, 0xb08d, 0x16bf, 0x1, 0x1);
        gbc.writeMem(0xdb4c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xcd8c);
        EXPECT(gbc.pc(), 0xdb4e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb4c), 0xcb);
        EXPECT(gbc.readMem(0xdb4d), 0x71);
        // CB 71 02D5
        gbc.setState(0xb251, 0xdf86, 0x5df0, 0x892d, 0xbf65, 0xb63e, 0x0, 0x0);
        gbc.writeMem(0xb251, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xdf86);
        EXPECT(gbc.pc(), 0xb253);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb251), 0xcb);
        EXPECT(gbc.readMem(0xb252), 0x71);
        // CB 71 02D6
        gbc.setState(0x97f4, 0x8f90, 0x8820, 0x1286, 0x8bc1, 0x7ce4, 0x0, 0x1);
        gbc.writeMem(0x97f4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8f90);
        EXPECT(gbc.pc(), 0x97f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97f4), 0xcb);
        EXPECT(gbc.readMem(0x97f5), 0x71);
        // CB 71 02D7
        gbc.setState(0x1c33, 0x3539, 0xbad0, 0x86d7, 0x3e13, 0xac69, 0x1, 0x0);
        gbc.writeMem(0x1c33, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3539);
        EXPECT(gbc.pc(), 0x1c35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02D8
        gbc.setState(0x722d, 0x971c, 0x8190, 0xc7de, 0xcb7c, 0xf70b, 0x0, 0x0);
        gbc.writeMem(0x722d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x971c);
        EXPECT(gbc.pc(), 0x722f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02D9
        gbc.setState(0x30f0, 0xd46c, 0xfef0, 0x8834, 0xf424, 0x30cb, 0x1, 0x1);
        gbc.writeMem(0x30f0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xd46c);
        EXPECT(gbc.pc(), 0x30f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02DA
        gbc.setState(0xc3eb, 0x16ee, 0x9f60, 0x648c, 0x45a1, 0x58, 0x1, 0x1);
        gbc.writeMem(0xc3eb, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x16ee);
        EXPECT(gbc.pc(), 0xc3ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3eb), 0xcb);
        EXPECT(gbc.readMem(0xc3ec), 0x71);
        // CB 71 02DB
        gbc.setState(0x64b0, 0x9c8c, 0x5970, 0x646c, 0x7bb7, 0x60cc, 0x0, 0x1);
        gbc.writeMem(0x64b0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x9c8c);
        EXPECT(gbc.pc(), 0x64b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02DC
        gbc.setState(0xe43d, 0xf539, 0xf910, 0x2479, 0xd2fa, 0xd22e, 0x1, 0x0);
        gbc.writeMem(0xe43d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xf539);
        EXPECT(gbc.pc(), 0xe43f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe43d), 0xcb);
        EXPECT(gbc.readMem(0xe43e), 0x71);
        // CB 71 02DD
        gbc.setState(0x7a1e, 0xc65b, 0xfc90, 0x2a3f, 0x3abc, 0x97cb, 0x1, 0x1);
        gbc.writeMem(0x7a1e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xc65b);
        EXPECT(gbc.pc(), 0x7a20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02DE
        gbc.setState(0xc9c9, 0x1054, 0xaac0, 0x9ec, 0xf88a, 0xda6, 0x1, 0x0);
        gbc.writeMem(0xc9c9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1054);
        EXPECT(gbc.pc(), 0xc9cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9c9), 0xcb);
        EXPECT(gbc.readMem(0xc9ca), 0x71);
        // CB 71 02DF
        gbc.setState(0x6909, 0x8bef, 0xff0, 0xe7bf, 0x62a1, 0xd271, 0x1, 0x1);
        gbc.writeMem(0x6909, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x8bef);
        EXPECT(gbc.pc(), 0x690b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02E0
        gbc.setState(0x416c, 0xc0cf, 0xba30, 0x813, 0x4111, 0x641d, 0x0, 0x1);
        gbc.writeMem(0x416c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xc0cf);
        EXPECT(gbc.pc(), 0x416e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02E1
        gbc.setState(0xb214, 0x1f75, 0x7a00, 0x7192, 0x53d0, 0x72b8, 0x0, 0x1);
        gbc.writeMem(0xb214, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x1f75);
        EXPECT(gbc.pc(), 0xb216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb214), 0xcb);
        EXPECT(gbc.readMem(0xb215), 0x71);
        // CB 71 02E2
        gbc.setState(0x4b44, 0xab9e, 0x8ba0, 0x6d7e, 0x15f1, 0xd1de, 0x1, 0x0);
        gbc.writeMem(0x4b44, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xab9e);
        EXPECT(gbc.pc(), 0x4b46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02E3
        gbc.setState(0x280a, 0x2c88, 0xcb90, 0xe634, 0x8e5c, 0xc991, 0x1, 0x1);
        gbc.writeMem(0x280a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x2c88);
        EXPECT(gbc.pc(), 0x280c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02E4
        gbc.setState(0x9bb3, 0xd778, 0xb90, 0x2939, 0x7b7a, 0xcb98, 0x1, 0x1);
        gbc.writeMem(0x9bb3, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xd778);
        EXPECT(gbc.pc(), 0x9bb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bb3), 0xcb);
        EXPECT(gbc.readMem(0x9bb4), 0x71);
        // CB 71 02E5
        gbc.setState(0xa0bb, 0x49d9, 0xb620, 0x2fee, 0xebf1, 0x31ca, 0x0, 0x0);
        gbc.writeMem(0xa0bb, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x49d9);
        EXPECT(gbc.pc(), 0xa0bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0bb), 0xcb);
        EXPECT(gbc.readMem(0xa0bc), 0x71);
        // CB 71 02E6
        gbc.setState(0x28c6, 0x8693, 0x5e50, 0x845e, 0x21d9, 0x31df, 0x0, 0x0);
        gbc.writeMem(0x28c6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x8693);
        EXPECT(gbc.pc(), 0x28c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02E7
        gbc.setState(0x43c5, 0xd822, 0x530, 0xe45b, 0x78ba, 0x5fb6, 0x1, 0x1);
        gbc.writeMem(0x43c5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xd822);
        EXPECT(gbc.pc(), 0x43c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02E8
        gbc.setState(0x101d, 0x55b2, 0x660, 0x3be8, 0x755, 0xe930, 0x1, 0x0);
        gbc.writeMem(0x101d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x55b2);
        EXPECT(gbc.pc(), 0x101f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02E9
        gbc.setState(0x9aa6, 0x351e, 0xf640, 0x4e47, 0xf99d, 0xec23, 0x1, 0x0);
        gbc.writeMem(0x9aa6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x351e);
        EXPECT(gbc.pc(), 0x9aa8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9aa6), 0xcb);
        EXPECT(gbc.readMem(0x9aa7), 0x71);
        // CB 71 02EA
        gbc.setState(0x8054, 0x9089, 0xa050, 0x8d68, 0x7d9b, 0x9f3b, 0x1, 0x0);
        gbc.writeMem(0x8054, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x9089);
        EXPECT(gbc.pc(), 0x8056);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8054), 0xcb);
        EXPECT(gbc.readMem(0x8055), 0x71);
        // CB 71 02EB
        gbc.setState(0x120e, 0xc2f1, 0x1df0, 0xcb2b, 0xa1d4, 0xfa01, 0x1, 0x1);
        gbc.writeMem(0x120e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc2f1);
        EXPECT(gbc.pc(), 0x1210);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02EC
        gbc.setState(0xb244, 0xe2f3, 0xe060, 0xfbf5, 0x1420, 0xef2f, 0x1, 0x1);
        gbc.writeMem(0xb244, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe2f3);
        EXPECT(gbc.pc(), 0xb246);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb244), 0xcb);
        EXPECT(gbc.readMem(0xb245), 0x71);
        // CB 71 02ED
        gbc.setState(0xab1b, 0xbc19, 0xa740, 0x6eaf, 0x416c, 0x4cbb, 0x0, 0x1);
        gbc.writeMem(0xab1b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xbc19);
        EXPECT(gbc.pc(), 0xab1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab1b), 0xcb);
        EXPECT(gbc.readMem(0xab1c), 0x71);
        // CB 71 02EE
        gbc.setState(0xeb15, 0x1a34, 0xe610, 0xbe42, 0xdecd, 0x13e6, 0x0, 0x0);
        gbc.writeMem(0xeb15, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x1a34);
        EXPECT(gbc.pc(), 0xeb17);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb15), 0xcb);
        EXPECT(gbc.readMem(0xeb16), 0x71);
        // CB 71 02EF
        gbc.setState(0x8c2e, 0xc287, 0xf4a0, 0xa7b7, 0xc677, 0x9094, 0x0, 0x1);
        gbc.writeMem(0x8c2e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xc287);
        EXPECT(gbc.pc(), 0x8c30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c2e), 0xcb);
        EXPECT(gbc.readMem(0x8c2f), 0x71);
        // CB 71 02F0
        gbc.setState(0x9465, 0x11ad, 0x78b0, 0x5aa7, 0xf7ac, 0x13f0, 0x0, 0x0);
        gbc.writeMem(0x9465, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x11ad);
        EXPECT(gbc.pc(), 0x9467);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9465), 0xcb);
        EXPECT(gbc.readMem(0x9466), 0x71);
        // CB 71 02F1
        gbc.setState(0xdf42, 0xc0f6, 0x25e0, 0x62c3, 0x5688, 0x47f4, 0x1, 0x0);
        gbc.writeMem(0xdf42, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc0f6);
        EXPECT(gbc.pc(), 0xdf44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf42), 0xcb);
        EXPECT(gbc.readMem(0xdf43), 0x71);
        // CB 71 02F2
        gbc.setState(0x2fe6, 0xb176, 0x7300, 0xa29e, 0xf6a2, 0x506f, 0x1, 0x1);
        gbc.writeMem(0x2fe6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xb176);
        EXPECT(gbc.pc(), 0x2fe8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02F3
        gbc.setState(0x1485, 0xf362, 0x26c0, 0x1e93, 0xe12a, 0xa022, 0x1, 0x0);
        gbc.writeMem(0x1485, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xf362);
        EXPECT(gbc.pc(), 0x1487);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02F4
        gbc.setState(0x17f4, 0xf00b, 0x3b50, 0xe6b6, 0x8f64, 0xc8e1, 0x0, 0x0);
        gbc.writeMem(0x17f4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf00b);
        EXPECT(gbc.pc(), 0x17f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02F5
        gbc.setState(0xa11c, 0x3662, 0xb460, 0x9169, 0xb08, 0x9bf1, 0x0, 0x0);
        gbc.writeMem(0xa11c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3662);
        EXPECT(gbc.pc(), 0xa11e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa11c), 0xcb);
        EXPECT(gbc.readMem(0xa11d), 0x71);
        // CB 71 02F6
        gbc.setState(0x4818, 0x1e7f, 0x7240, 0x3611, 0x7158, 0x1380, 0x1, 0x1);
        gbc.writeMem(0x4818, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1e7f);
        EXPECT(gbc.pc(), 0x481a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02F7
        gbc.setState(0x6aed, 0x3993, 0xec70, 0x406d, 0x5024, 0x5dc1, 0x1, 0x0);
        gbc.writeMem(0x6aed, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x3993);
        EXPECT(gbc.pc(), 0x6aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 02F8
        gbc.setState(0x9aff, 0x40de, 0xda10, 0x8558, 0x5d22, 0xee44, 0x1, 0x1);
        gbc.writeMem(0x9aff, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x40de);
        EXPECT(gbc.pc(), 0x9b01);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aff), 0xcb);
        EXPECT(gbc.readMem(0x9b00), 0x71);
        // CB 71 02F9
        gbc.setState(0xa22c, 0xdd55, 0x2020, 0x41e1, 0x1476, 0x3b30, 0x0, 0x1);
        gbc.writeMem(0xa22c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xdd55);
        EXPECT(gbc.pc(), 0xa22e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa22c), 0xcb);
        EXPECT(gbc.readMem(0xa22d), 0x71);
        // CB 71 02FA
        gbc.setState(0x85c2, 0x94f0, 0x6350, 0xc8d8, 0x786, 0xab0, 0x1, 0x0);
        gbc.writeMem(0x85c2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x94f0);
        EXPECT(gbc.pc(), 0x85c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x85c2), 0xcb);
        EXPECT(gbc.readMem(0x85c3), 0x71);
        // CB 71 02FB
        gbc.setState(0x8b30, 0xbc1, 0x4560, 0x47f4, 0x8892, 0x3b0d, 0x0, 0x1);
        gbc.writeMem(0x8b30, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xbc1);
        EXPECT(gbc.pc(), 0x8b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b30), 0xcb);
        EXPECT(gbc.readMem(0x8b31), 0x71);
        // CB 71 02FD
        gbc.setState(0x9eae, 0x6944, 0xc5a0, 0x95c1, 0xbb13, 0x6241, 0x1, 0x0);
        gbc.writeMem(0x9eae, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6944);
        EXPECT(gbc.pc(), 0x9eb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9eae), 0xcb);
        EXPECT(gbc.readMem(0x9eaf), 0x71);
        // CB 71 02FE
        gbc.setState(0x23ae, 0xc357, 0xe960, 0xd17c, 0xf3e5, 0x43b1, 0x0, 0x0);
        gbc.writeMem(0x23ae, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xc357);
        EXPECT(gbc.pc(), 0x23b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 02FF
        gbc.setState(0x1fed, 0x9235, 0x1f00, 0xc64a, 0x42b7, 0x2d06, 0x1, 0x0);
        gbc.writeMem(0x1fed, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x9235);
        EXPECT(gbc.pc(), 0x1fef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0300
        gbc.setState(0x9b8e, 0x951, 0xbfb0, 0x89e5, 0xecaa, 0x18e8, 0x1, 0x1);
        gbc.writeMem(0x9b8e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x951);
        EXPECT(gbc.pc(), 0x9b90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b8e), 0xcb);
        EXPECT(gbc.readMem(0x9b8f), 0x71);
        // CB 71 0301
        gbc.setState(0x7746, 0x4107, 0xb3e0, 0x9c7, 0x28f7, 0xaa81, 0x0, 0x1);
        gbc.writeMem(0x7746, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x4107);
        EXPECT(gbc.pc(), 0x7748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0302
        gbc.setState(0x9ff4, 0x62e2, 0xe240, 0xcfc5, 0xadd7, 0x83bd, 0x0, 0x0);
        gbc.writeMem(0x9ff4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x62e2);
        EXPECT(gbc.pc(), 0x9ff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ff4), 0xcb);
        EXPECT(gbc.readMem(0x9ff5), 0x71);
        // CB 71 0303
        gbc.setState(0xe86a, 0xb4a1, 0x96b0, 0x3986, 0xc458, 0x324d, 0x1, 0x0);
        gbc.writeMem(0xe86a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xb4a1);
        EXPECT(gbc.pc(), 0xe86c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe86a), 0xcb);
        EXPECT(gbc.readMem(0xe86b), 0x71);
        // CB 71 0304
        gbc.setState(0x624b, 0x6166, 0xc0e0, 0x3d54, 0x89b1, 0x1811, 0x0, 0x0);
        gbc.writeMem(0x624b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x6166);
        EXPECT(gbc.pc(), 0x624d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0305
        gbc.setState(0x89d8, 0x1e0a, 0xe4f0, 0x9566, 0x9e88, 0x58f6, 0x0, 0x0);
        gbc.writeMem(0x89d8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1e0a);
        EXPECT(gbc.pc(), 0x89da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89d8), 0xcb);
        EXPECT(gbc.readMem(0x89d9), 0x71);
        // CB 71 0306
        gbc.setState(0x54b4, 0x823e, 0x3e30, 0x1f59, 0xa3cb, 0xc2b, 0x0, 0x0);
        gbc.writeMem(0x54b4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x823e);
        EXPECT(gbc.pc(), 0x54b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0307
        gbc.setState(0x53de, 0xd25b, 0x7120, 0x70f5, 0x63b1, 0x7ad3, 0x1, 0x0);
        gbc.writeMem(0x53de, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd25b);
        EXPECT(gbc.pc(), 0x53e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0308
        gbc.setState(0x736b, 0xf896, 0xff70, 0x227a, 0xaa9a, 0x9e35, 0x0, 0x0);
        gbc.writeMem(0x736b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xf896);
        EXPECT(gbc.pc(), 0x736d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0309
        gbc.setState(0x236c, 0x5182, 0x7310, 0x16d0, 0x3ac, 0x42b5, 0x0, 0x0);
        gbc.writeMem(0x236c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x5182);
        EXPECT(gbc.pc(), 0x236e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 030A
        gbc.setState(0x3ac2, 0x1130, 0x2d60, 0xa719, 0xf5f, 0xd3d1, 0x1, 0x1);
        gbc.writeMem(0x3ac2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x1130);
        EXPECT(gbc.pc(), 0x3ac4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 030B
        gbc.setState(0x5922, 0x4bef, 0x34b0, 0xe8b6, 0xf429, 0x7959, 0x0, 0x0);
        gbc.writeMem(0x5922, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4bef);
        EXPECT(gbc.pc(), 0x5924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 030C
        gbc.setState(0xbd99, 0x6305, 0x6540, 0xc0f6, 0x3606, 0x7acb, 0x0, 0x1);
        gbc.writeMem(0xbd99, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x6305);
        EXPECT(gbc.pc(), 0xbd9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd99), 0xcb);
        EXPECT(gbc.readMem(0xbd9a), 0x71);
        // CB 71 030D
        gbc.setState(0xd9d8, 0xa1e7, 0xf320, 0x5f5c, 0x32f2, 0x159a, 0x0, 0x0);
        gbc.writeMem(0xd9d8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa1e7);
        EXPECT(gbc.pc(), 0xd9da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d8), 0xcb);
        EXPECT(gbc.readMem(0xd9d9), 0x71);
        // CB 71 030E
        gbc.setState(0x5cf, 0x819a, 0x34d0, 0x4dd8, 0xac6a, 0xb5d5, 0x0, 0x1);
        gbc.writeMem(0x5cf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x819a);
        EXPECT(gbc.pc(), 0x5d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 030F
        gbc.setState(0xac77, 0xe72, 0x3c50, 0xdeae, 0x713d, 0x461, 0x0, 0x0);
        gbc.writeMem(0xac77, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe72);
        EXPECT(gbc.pc(), 0xac79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac77), 0xcb);
        EXPECT(gbc.readMem(0xac78), 0x71);
        // CB 71 0310
        gbc.setState(0x511c, 0x1c39, 0xf8d0, 0x16b8, 0xacd8, 0xe015, 0x0, 0x0);
        gbc.writeMem(0x511c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x1c39);
        EXPECT(gbc.pc(), 0x511e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0311
        gbc.setState(0x3b6d, 0x6e47, 0x4d10, 0x2e31, 0x7a79, 0x7cc9, 0x0, 0x0);
        gbc.writeMem(0x3b6d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x6e47);
        EXPECT(gbc.pc(), 0x3b6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0312
        gbc.setState(0x8d4c, 0x3177, 0xd350, 0x83d7, 0x137d, 0x5f57, 0x0, 0x0);
        gbc.writeMem(0x8d4c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x3177);
        EXPECT(gbc.pc(), 0x8d4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d4c), 0xcb);
        EXPECT(gbc.readMem(0x8d4d), 0x71);
        // CB 71 0313
        gbc.setState(0x7789, 0xa946, 0x62f0, 0xd837, 0xa37a, 0x95bf, 0x1, 0x0);
        gbc.writeMem(0x7789, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xa946);
        EXPECT(gbc.pc(), 0x778b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0314
        gbc.setState(0x6323, 0xd944, 0xfab0, 0x9355, 0x8af3, 0xc75d, 0x1, 0x0);
        gbc.writeMem(0x6323, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xd944);
        EXPECT(gbc.pc(), 0x6325);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0315
        gbc.setState(0xa546, 0x2474, 0x1000, 0x3336, 0x2d1, 0xa9e0, 0x1, 0x0);
        gbc.writeMem(0xa546, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x2474);
        EXPECT(gbc.pc(), 0xa548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa546), 0xcb);
        EXPECT(gbc.readMem(0xa547), 0x71);
        // CB 71 0316
        gbc.setState(0xc7b5, 0x1d5a, 0xa530, 0x525e, 0xc59c, 0xb24b, 0x0, 0x0);
        gbc.writeMem(0xc7b5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x1d5a);
        EXPECT(gbc.pc(), 0xc7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b5), 0xcb);
        EXPECT(gbc.readMem(0xc7b6), 0x71);
        // CB 71 0317
        gbc.setState(0x62a4, 0xd481, 0xc230, 0xb5a5, 0xd40c, 0x29f3, 0x1, 0x0);
        gbc.writeMem(0x62a4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xd481);
        EXPECT(gbc.pc(), 0x62a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0318
        gbc.setState(0x20c6, 0xa11f, 0x8f70, 0xa239, 0x8334, 0x2807, 0x1, 0x0);
        gbc.writeMem(0x20c6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xa11f);
        EXPECT(gbc.pc(), 0x20c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0319
        gbc.setState(0x8f5e, 0x85a3, 0x36a0, 0xb0a7, 0xbd5b, 0x5cc6, 0x0, 0x1);
        gbc.writeMem(0x8f5e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x85a3);
        EXPECT(gbc.pc(), 0x8f60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f5e), 0xcb);
        EXPECT(gbc.readMem(0x8f5f), 0x71);
        // CB 71 031A
        gbc.setState(0x63ac, 0xe192, 0xca10, 0xf6df, 0x63c1, 0xdceb, 0x0, 0x0);
        gbc.writeMem(0x63ac, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xe192);
        EXPECT(gbc.pc(), 0x63ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 031B
        gbc.setState(0x8427, 0xdb2f, 0x720, 0xb87e, 0x5be6, 0xcb8b, 0x1, 0x0);
        gbc.writeMem(0x8427, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xdb2f);
        EXPECT(gbc.pc(), 0x8429);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8427), 0xcb);
        EXPECT(gbc.readMem(0x8428), 0x71);
        // CB 71 031C
        gbc.setState(0x438a, 0x5818, 0xe780, 0xa690, 0x7e8e, 0x91b1, 0x0, 0x0);
        gbc.writeMem(0x438a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x5818);
        EXPECT(gbc.pc(), 0x438c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 031D
        gbc.setState(0xc118, 0xccf, 0x8e30, 0x523b, 0x68b8, 0x6032, 0x1, 0x1);
        gbc.writeMem(0xc118, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xccf);
        EXPECT(gbc.pc(), 0xc11a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc118), 0xcb);
        EXPECT(gbc.readMem(0xc119), 0x71);
        // CB 71 031E
        gbc.setState(0x7bbf, 0x8c87, 0xbb70, 0xe0f2, 0xad85, 0xb41b, 0x0, 0x0);
        gbc.writeMem(0x7bbf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x8c87);
        EXPECT(gbc.pc(), 0x7bc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 031F
        gbc.setState(0x2754, 0x67f3, 0xe030, 0x5085, 0x4d3b, 0x2c5a, 0x1, 0x0);
        gbc.writeMem(0x2754, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x67f3);
        EXPECT(gbc.pc(), 0x2756);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0320
        gbc.setState(0x6824, 0xec8f, 0xa410, 0x7da1, 0x8c35, 0x75ee, 0x1, 0x0);
        gbc.writeMem(0x6824, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xec8f);
        EXPECT(gbc.pc(), 0x6826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0321
        gbc.setState(0x2ded, 0x731e, 0x9b90, 0xd91e, 0x6c46, 0xb32d, 0x1, 0x0);
        gbc.writeMem(0x2ded, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x731e);
        EXPECT(gbc.pc(), 0x2def);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0322
        gbc.setState(0x57a6, 0x9162, 0x1720, 0x7d20, 0x7f20, 0xe3e7, 0x1, 0x0);
        gbc.writeMem(0x57a6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x9162);
        EXPECT(gbc.pc(), 0x57a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0323
        gbc.setState(0xe03c, 0x8474, 0x1630, 0x1ec0, 0x1ab7, 0x784b, 0x0, 0x1);
        gbc.writeMem(0xe03c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8474);
        EXPECT(gbc.pc(), 0xe03e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe03c), 0xcb);
        EXPECT(gbc.readMem(0xe03d), 0x71);
        // CB 71 0325
        gbc.setState(0xb9e5, 0x4d69, 0xe080, 0x2839, 0x92c7, 0x9cbc, 0x1, 0x1);
        gbc.writeMem(0xb9e5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x4d69);
        EXPECT(gbc.pc(), 0xb9e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e5), 0xcb);
        EXPECT(gbc.readMem(0xb9e6), 0x71);
        // CB 71 0326
        gbc.setState(0x1ce7, 0x6816, 0x5ec0, 0x6e61, 0x837b, 0xa325, 0x1, 0x1);
        gbc.writeMem(0x1ce7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x6816);
        EXPECT(gbc.pc(), 0x1ce9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0327
        gbc.setState(0x49fe, 0x8f8c, 0xcb80, 0xc374, 0xa1f8, 0x4986, 0x0, 0x0);
        gbc.writeMem(0x49fe, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8f8c);
        EXPECT(gbc.pc(), 0x4a00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0328
        gbc.setState(0xbb45, 0xdba3, 0xefa0, 0x4f03, 0x28ca, 0x4b5a, 0x1, 0x0);
        gbc.writeMem(0xbb45, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xdba3);
        EXPECT(gbc.pc(), 0xbb47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb45), 0xcb);
        EXPECT(gbc.readMem(0xbb46), 0x71);
        // CB 71 0329
        gbc.setState(0xbb7d, 0x5c36, 0x3110, 0x6f31, 0xfa1b, 0x3d4d, 0x0, 0x1);
        gbc.writeMem(0xbb7d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x5c36);
        EXPECT(gbc.pc(), 0xbb7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb7d), 0xcb);
        EXPECT(gbc.readMem(0xbb7e), 0x71);
        // CB 71 032A
        gbc.setState(0x67bd, 0xc7d6, 0x9fe0, 0xb0cf, 0x6468, 0xf0b3, 0x1, 0x1);
        gbc.writeMem(0x67bd, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xc7d6);
        EXPECT(gbc.pc(), 0x67bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 032B
        gbc.setState(0x6b09, 0xce9b, 0x900, 0xa402, 0x253d, 0x787d, 0x1, 0x1);
        gbc.writeMem(0x6b09, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xce9b);
        EXPECT(gbc.pc(), 0x6b0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 032C
        gbc.setState(0x6c14, 0x2a08, 0xf500, 0x956c, 0x93c0, 0xba6, 0x0, 0x1);
        gbc.writeMem(0x6c14, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x2a08);
        EXPECT(gbc.pc(), 0x6c16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 032D
        gbc.setState(0x140e, 0x107d, 0x8190, 0x4546, 0x2ec0, 0x712f, 0x0, 0x0);
        gbc.writeMem(0x140e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x107d);
        EXPECT(gbc.pc(), 0x1410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 032E
        gbc.setState(0xe631, 0x26fb, 0xe100, 0x3040, 0xb425, 0xf0db, 0x0, 0x1);
        gbc.writeMem(0xe631, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x26fb);
        EXPECT(gbc.pc(), 0xe633);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe631), 0xcb);
        EXPECT(gbc.readMem(0xe632), 0x71);
        // CB 71 032F
        gbc.setState(0x9208, 0xdef1, 0xbcf0, 0x737c, 0xeaa4, 0x8a38, 0x1, 0x1);
        gbc.writeMem(0x9208, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xdef1);
        EXPECT(gbc.pc(), 0x920a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9208), 0xcb);
        EXPECT(gbc.readMem(0x9209), 0x71);
        // CB 71 0330
        gbc.setState(0x36d7, 0x41d1, 0x39d0, 0x3e7c, 0x860e, 0xba0a, 0x1, 0x1);
        gbc.writeMem(0x36d7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x41d1);
        EXPECT(gbc.pc(), 0x36d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0331
        gbc.setState(0xb826, 0x7b9c, 0xb540, 0x6d95, 0xbc04, 0x32f2, 0x0, 0x1);
        gbc.writeMem(0xb826, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x7b9c);
        EXPECT(gbc.pc(), 0xb828);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb826), 0xcb);
        EXPECT(gbc.readMem(0xb827), 0x71);
        // CB 71 0332
        gbc.setState(0xbc49, 0xaa1e, 0xc9a0, 0x4e38, 0x2304, 0x9b6b, 0x0, 0x0);
        gbc.writeMem(0xbc49, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xaa1e);
        EXPECT(gbc.pc(), 0xbc4b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc49), 0xcb);
        EXPECT(gbc.readMem(0xbc4a), 0x71);
        // CB 71 0333
        gbc.setState(0x7904, 0x6c75, 0x3830, 0xd919, 0x596, 0x6129, 0x1, 0x0);
        gbc.writeMem(0x7904, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6c75);
        EXPECT(gbc.pc(), 0x7906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0334
        gbc.setState(0x1353, 0x5c1e, 0x73e0, 0xe579, 0xe74d, 0x932c, 0x0, 0x1);
        gbc.writeMem(0x1353, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5c1e);
        EXPECT(gbc.pc(), 0x1355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0335
        gbc.setState(0xdd59, 0xaf6e, 0xa050, 0x41db, 0x10a4, 0xcc1b, 0x1, 0x0);
        gbc.writeMem(0xdd59, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xaf6e);
        EXPECT(gbc.pc(), 0xdd5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd59), 0xcb);
        EXPECT(gbc.readMem(0xdd5a), 0x71);
        // CB 71 0336
        gbc.setState(0xb352, 0x3360, 0x88d0, 0xf3a4, 0x2cab, 0x2092, 0x1, 0x1);
        gbc.writeMem(0xb352, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x3360);
        EXPECT(gbc.pc(), 0xb354);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb352), 0xcb);
        EXPECT(gbc.readMem(0xb353), 0x71);
        // CB 71 0337
        gbc.setState(0xc813, 0xb681, 0x6ad0, 0x97f2, 0xa644, 0x20d3, 0x0, 0x0);
        gbc.writeMem(0xc813, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb681);
        EXPECT(gbc.pc(), 0xc815);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc813), 0xcb);
        EXPECT(gbc.readMem(0xc814), 0x71);
        // CB 71 0338
        gbc.setState(0x31d3, 0x3a76, 0xf0c0, 0xa435, 0xa59, 0x578d, 0x1, 0x0);
        gbc.writeMem(0x31d3, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x3a76);
        EXPECT(gbc.pc(), 0x31d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0339
        gbc.setState(0x9ef4, 0x6c75, 0xf000, 0xbee8, 0x56aa, 0x2a74, 0x0, 0x1);
        gbc.writeMem(0x9ef4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x6c75);
        EXPECT(gbc.pc(), 0x9ef6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ef4), 0xcb);
        EXPECT(gbc.readMem(0x9ef5), 0x71);
        // CB 71 033A
        gbc.setState(0x3003, 0x7a3e, 0xf90, 0x82af, 0xe9b4, 0x90b7, 0x0, 0x1);
        gbc.writeMem(0x3003, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7a3e);
        EXPECT(gbc.pc(), 0x3005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 033C
        gbc.setState(0xbf31, 0x92b, 0x5960, 0x30e1, 0x5945, 0x99a9, 0x0, 0x1);
        gbc.writeMem(0xbf31, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x92b);
        EXPECT(gbc.pc(), 0xbf33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf31), 0xcb);
        EXPECT(gbc.readMem(0xbf32), 0x71);
        // CB 71 033D
        gbc.setState(0x6c46, 0xcade, 0xe2d0, 0xcc63, 0x98dd, 0x8e28, 0x0, 0x0);
        gbc.writeMem(0x6c46, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xcade);
        EXPECT(gbc.pc(), 0x6c48);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 033E
        gbc.setState(0x2dc7, 0x78a5, 0x54e0, 0x1db7, 0x59eb, 0xe6b7, 0x0, 0x1);
        gbc.writeMem(0x2dc7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x78a5);
        EXPECT(gbc.pc(), 0x2dc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 033F
        gbc.setState(0x376a, 0x47e1, 0xa1a0, 0xa4d6, 0x59, 0xc739, 0x0, 0x0);
        gbc.writeMem(0x376a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x47e1);
        EXPECT(gbc.pc(), 0x376c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0340
        gbc.setState(0xc727, 0x9ae5, 0x1730, 0x5fed, 0x49a2, 0xb18c, 0x0, 0x1);
        gbc.writeMem(0xc727, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9ae5);
        EXPECT(gbc.pc(), 0xc729);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc727), 0xcb);
        EXPECT(gbc.readMem(0xc728), 0x71);
        // CB 71 0341
        gbc.setState(0x1c9c, 0x52b9, 0x9cc0, 0x62f1, 0xc080, 0x6941, 0x1, 0x1);
        gbc.writeMem(0x1c9c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x52b9);
        EXPECT(gbc.pc(), 0x1c9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0342
        gbc.setState(0x91cc, 0x9d6f, 0xa2d0, 0x8b66, 0xc6c6, 0x49f5, 0x1, 0x0);
        gbc.writeMem(0x91cc, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x9d6f);
        EXPECT(gbc.pc(), 0x91ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91cc), 0xcb);
        EXPECT(gbc.readMem(0x91cd), 0x71);
        // CB 71 0343
        gbc.setState(0xd2ca, 0xdabf, 0xa410, 0xd4df, 0xadd0, 0xdf78, 0x0, 0x0);
        gbc.writeMem(0xd2ca, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xdabf);
        EXPECT(gbc.pc(), 0xd2cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2ca), 0xcb);
        EXPECT(gbc.readMem(0xd2cb), 0x71);
        // CB 71 0344
        gbc.setState(0x8655, 0xe5b0, 0x7880, 0xfd66, 0x3d53, 0xb74d, 0x1, 0x1);
        gbc.writeMem(0x8655, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe5b0);
        EXPECT(gbc.pc(), 0x8657);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8655), 0xcb);
        EXPECT(gbc.readMem(0x8656), 0x71);
        // CB 71 0345
        gbc.setState(0x264c, 0x40c7, 0xa740, 0x84d2, 0x23dd, 0xb6fe, 0x0, 0x1);
        gbc.writeMem(0x264c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x40c7);
        EXPECT(gbc.pc(), 0x264e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0346
        gbc.setState(0x5794, 0x62d3, 0xbd00, 0xd3d0, 0xa53f, 0x53a1, 0x0, 0x1);
        gbc.writeMem(0x5794, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x62d3);
        EXPECT(gbc.pc(), 0x5796);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0347
        gbc.setState(0x542f, 0x26a3, 0x9bf0, 0x8e01, 0xa81f, 0x70d1, 0x1, 0x1);
        gbc.writeMem(0x542f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x26a3);
        EXPECT(gbc.pc(), 0x5431);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0348
        gbc.setState(0x311e, 0x9ee1, 0xd910, 0x6158, 0x6107, 0xba75, 0x1, 0x0);
        gbc.writeMem(0x311e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9ee1);
        EXPECT(gbc.pc(), 0x3120);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0349
        gbc.setState(0x8477, 0x36fc, 0x7060, 0xea47, 0x75d2, 0x6aac, 0x0, 0x1);
        gbc.writeMem(0x8477, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x36fc);
        EXPECT(gbc.pc(), 0x8479);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8477), 0xcb);
        EXPECT(gbc.readMem(0x8478), 0x71);
        // CB 71 034A
        gbc.setState(0x4e1d, 0x1d8b, 0x3010, 0x813b, 0x630d, 0xa139, 0x0, 0x1);
        gbc.writeMem(0x4e1d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x1d8b);
        EXPECT(gbc.pc(), 0x4e1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 034B
        gbc.setState(0xa32b, 0xba38, 0x3d00, 0xe4eb, 0xc47, 0x2c8c, 0x0, 0x0);
        gbc.writeMem(0xa32b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xba38);
        EXPECT(gbc.pc(), 0xa32d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa32b), 0xcb);
        EXPECT(gbc.readMem(0xa32c), 0x71);
        // CB 71 034C
        gbc.setState(0x4057, 0xebe3, 0x9610, 0x6a2c, 0x5400, 0xc814, 0x0, 0x0);
        gbc.writeMem(0x4057, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xebe3);
        EXPECT(gbc.pc(), 0x4059);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 034D
        gbc.setState(0x4050, 0xe363, 0x39d0, 0x5764, 0xf37e, 0x31ab, 0x0, 0x0);
        gbc.writeMem(0x4050, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe363);
        EXPECT(gbc.pc(), 0x4052);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 034E
        gbc.setState(0x2437, 0xe804, 0xd7d0, 0x91b3, 0x202b, 0x28ec, 0x1, 0x0);
        gbc.writeMem(0x2437, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xe804);
        EXPECT(gbc.pc(), 0x2439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 034F
        gbc.setState(0xd8b2, 0x655d, 0xad0, 0x458e, 0x8325, 0x676c, 0x0, 0x1);
        gbc.writeMem(0xd8b2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x655d);
        EXPECT(gbc.pc(), 0xd8b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd8b2), 0xcb);
        EXPECT(gbc.readMem(0xd8b3), 0x71);
        // CB 71 0350
        gbc.setState(0xa0fc, 0x98f8, 0x1be0, 0x4ac, 0xb0ad, 0x4158, 0x1, 0x1);
        gbc.writeMem(0xa0fc, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x98f8);
        EXPECT(gbc.pc(), 0xa0fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0fc), 0xcb);
        EXPECT(gbc.readMem(0xa0fd), 0x71);
        // CB 71 0351
        gbc.setState(0xed1f, 0xb8ac, 0x24c0, 0xdfa6, 0xedf9, 0x7f8d, 0x1, 0x0);
        gbc.writeMem(0xed1f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xb8ac);
        EXPECT(gbc.pc(), 0xed21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed1f), 0xcb);
        EXPECT(gbc.readMem(0xed20), 0x71);
        // CB 71 0352
        gbc.setState(0x1234, 0x75ef, 0x5f90, 0x6793, 0xdf10, 0x4dbd, 0x0, 0x1);
        gbc.writeMem(0x1234, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x75ef);
        EXPECT(gbc.pc(), 0x1236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0353
        gbc.setState(0x5a0e, 0x60bb, 0x4480, 0x102a, 0x9d89, 0xea66, 0x0, 0x1);
        gbc.writeMem(0x5a0e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x60bb);
        EXPECT(gbc.pc(), 0x5a10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0354
        gbc.setState(0x111, 0xae7b, 0xfb10, 0x653c, 0x1663, 0x4915, 0x1, 0x1);
        gbc.writeMem(0x111, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xae7b);
        EXPECT(gbc.pc(), 0x113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0355
        gbc.setState(0xe6cf, 0xb4ae, 0x4e00, 0xd14c, 0xfb87, 0xa4ba, 0x1, 0x0);
        gbc.writeMem(0xe6cf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb4ae);
        EXPECT(gbc.pc(), 0xe6d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6cf), 0xcb);
        EXPECT(gbc.readMem(0xe6d0), 0x71);
        // CB 71 0356
        gbc.setState(0xac90, 0xb4b1, 0x3cb0, 0xbe6, 0x7f7f, 0xcd8f, 0x1, 0x0);
        gbc.writeMem(0xac90, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xb4b1);
        EXPECT(gbc.pc(), 0xac92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac90), 0xcb);
        EXPECT(gbc.readMem(0xac91), 0x71);
        // CB 71 0357
        gbc.setState(0x1bd9, 0xf398, 0xb210, 0x421b, 0x24f9, 0xe471, 0x1, 0x0);
        gbc.writeMem(0x1bd9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xf398);
        EXPECT(gbc.pc(), 0x1bdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0358
        gbc.setState(0x9fa0, 0x3c91, 0x1750, 0x92ee, 0x662e, 0x4f21, 0x1, 0x1);
        gbc.writeMem(0x9fa0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x3c91);
        EXPECT(gbc.pc(), 0x9fa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa0), 0xcb);
        EXPECT(gbc.readMem(0x9fa1), 0x71);
        // CB 71 0359
        gbc.setState(0xb038, 0x46c9, 0x7ac0, 0x67b7, 0xe757, 0x3bbe, 0x0, 0x1);
        gbc.writeMem(0xb038, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x46c9);
        EXPECT(gbc.pc(), 0xb03a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb038), 0xcb);
        EXPECT(gbc.readMem(0xb039), 0x71);
        // CB 71 035A
        gbc.setState(0xbffa, 0x9f53, 0x8f50, 0x74c9, 0x7dc4, 0x95e9, 0x1, 0x1);
        gbc.writeMem(0xbffa, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x9f53);
        EXPECT(gbc.pc(), 0xbffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbffa), 0xcb);
        EXPECT(gbc.readMem(0xbffb), 0x71);
        // CB 71 035C
        gbc.setState(0xd032, 0xd372, 0x7670, 0x3a0a, 0xc8b7, 0x885e, 0x0, 0x0);
        gbc.writeMem(0xd032, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xd372);
        EXPECT(gbc.pc(), 0xd034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd032), 0xcb);
        EXPECT(gbc.readMem(0xd033), 0x71);
        // CB 71 035D
        gbc.setState(0xac26, 0xfa9b, 0x7850, 0x55cd, 0xe732, 0x6c0d, 0x0, 0x0);
        gbc.writeMem(0xac26, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xfa9b);
        EXPECT(gbc.pc(), 0xac28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac26), 0xcb);
        EXPECT(gbc.readMem(0xac27), 0x71);
        // CB 71 035E
        gbc.setState(0xb389, 0x2861, 0xd600, 0x7da4, 0x81ab, 0xbacf, 0x1, 0x1);
        gbc.writeMem(0xb389, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2861);
        EXPECT(gbc.pc(), 0xb38b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb389), 0xcb);
        EXPECT(gbc.readMem(0xb38a), 0x71);
        // CB 71 035F
        gbc.setState(0x33b7, 0xfa67, 0x4bf0, 0x347b, 0xf126, 0x7353, 0x1, 0x0);
        gbc.writeMem(0x33b7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xfa67);
        EXPECT(gbc.pc(), 0x33b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0360
        gbc.setState(0x477e, 0xdc62, 0x2090, 0xf97f, 0x63be, 0xc676, 0x0, 0x0);
        gbc.writeMem(0x477e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xdc62);
        EXPECT(gbc.pc(), 0x4780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0361
        gbc.setState(0xbc58, 0x8c0a, 0x3f40, 0x617c, 0x6fe8, 0xb598, 0x0, 0x0);
        gbc.writeMem(0xbc58, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x8c0a);
        EXPECT(gbc.pc(), 0xbc5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc58), 0xcb);
        EXPECT(gbc.readMem(0xbc59), 0x71);
        // CB 71 0362
        gbc.setState(0xc6c4, 0x6fc7, 0x93a0, 0x1b54, 0xf83c, 0xc6ca, 0x0, 0x0);
        gbc.writeMem(0xc6c4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x6fc7);
        EXPECT(gbc.pc(), 0xc6c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c4), 0xcb);
        EXPECT(gbc.readMem(0xc6c5), 0x71);
        // CB 71 0363
        gbc.setState(0x2243, 0xdf9a, 0x80c0, 0x88db, 0x112d, 0xc2d7, 0x1, 0x1);
        gbc.writeMem(0x2243, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0xdf9a);
        EXPECT(gbc.pc(), 0x2245);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0364
        gbc.setState(0xb2b, 0x79c2, 0xd110, 0xb7d5, 0xc962, 0xafc0, 0x1, 0x1);
        gbc.writeMem(0xb2b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x79c2);
        EXPECT(gbc.pc(), 0xb2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0365
        gbc.setState(0x12d4, 0x1ed3, 0x8680, 0x2f74, 0xdb08, 0x5c77, 0x0, 0x0);
        gbc.writeMem(0x12d4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x1ed3);
        EXPECT(gbc.pc(), 0x12d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0366
        gbc.setState(0x3a73, 0xdbce, 0x7330, 0xff08, 0xc788, 0xc3b6, 0x1, 0x1);
        gbc.writeMem(0x3a73, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xdbce);
        EXPECT(gbc.pc(), 0x3a75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0367
        gbc.setState(0xc191, 0xef31, 0x3940, 0xda62, 0x775d, 0x4455, 0x0, 0x0);
        gbc.writeMem(0xc191, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xef31);
        EXPECT(gbc.pc(), 0xc193);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc191), 0xcb);
        EXPECT(gbc.readMem(0xc192), 0x71);
        // CB 71 0368
        gbc.setState(0x870b, 0x83fc, 0xa750, 0x5f0b, 0xf658, 0x6ed4, 0x1, 0x1);
        gbc.writeMem(0x870b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x83fc);
        EXPECT(gbc.pc(), 0x870d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x870b), 0xcb);
        EXPECT(gbc.readMem(0x870c), 0x71);
        // CB 71 0369
        gbc.setState(0xb93a, 0xd40b, 0x1a60, 0xa8e2, 0xacd7, 0x35e1, 0x1, 0x0);
        gbc.writeMem(0xb93a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xd40b);
        EXPECT(gbc.pc(), 0xb93c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb93a), 0xcb);
        EXPECT(gbc.readMem(0xb93b), 0x71);
        // CB 71 036A
        gbc.setState(0x3bd0, 0x6a5e, 0x95c0, 0xd049, 0xb3fd, 0xa2ac, 0x0, 0x1);
        gbc.writeMem(0x3bd0, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6a5e);
        EXPECT(gbc.pc(), 0x3bd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 036B
        gbc.setState(0xc7ae, 0xdcb8, 0xf340, 0xa909, 0xafc4, 0x6b6a, 0x0, 0x1);
        gbc.writeMem(0xc7ae, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdcb8);
        EXPECT(gbc.pc(), 0xc7b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ae), 0xcb);
        EXPECT(gbc.readMem(0xc7af), 0x71);
        // CB 71 036C
        gbc.setState(0x157b, 0x9dc9, 0xdff0, 0x3986, 0x39be, 0x144e, 0x0, 0x0);
        gbc.writeMem(0x157b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x9dc9);
        EXPECT(gbc.pc(), 0x157d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 036D
        gbc.setState(0x1be2, 0x4f2a, 0x70d0, 0x8eaf, 0xcc51, 0xb74a, 0x0, 0x1);
        gbc.writeMem(0x1be2, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x4f2a);
        EXPECT(gbc.pc(), 0x1be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 036E
        gbc.setState(0x97c6, 0x7e85, 0x5430, 0xc1ca, 0x7bc0, 0x53e2, 0x0, 0x1);
        gbc.writeMem(0x97c6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7e85);
        EXPECT(gbc.pc(), 0x97c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c6), 0xcb);
        EXPECT(gbc.readMem(0x97c7), 0x71);
        // CB 71 036F
        gbc.setState(0x1a71, 0x29c4, 0x9de0, 0xf0d2, 0x6c44, 0xcd, 0x0, 0x0);
        gbc.writeMem(0x1a71, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x29c4);
        EXPECT(gbc.pc(), 0x1a73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0370
        gbc.setState(0xabd8, 0xba6d, 0xfa80, 0x9e64, 0x8075, 0x8d0f, 0x0, 0x1);
        gbc.writeMem(0xabd8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xba6d);
        EXPECT(gbc.pc(), 0xabda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabd8), 0xcb);
        EXPECT(gbc.readMem(0xabd9), 0x71);
        // CB 71 0371
        gbc.setState(0xa896, 0xea02, 0xbe0, 0x504d, 0x2005, 0xad06, 0x0, 0x1);
        gbc.writeMem(0xa896, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xea02);
        EXPECT(gbc.pc(), 0xa898);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa896), 0xcb);
        EXPECT(gbc.readMem(0xa897), 0x71);
        // CB 71 0372
        gbc.setState(0x47ae, 0x62f2, 0x2180, 0x349e, 0x8ca0, 0x2166, 0x0, 0x0);
        gbc.writeMem(0x47ae, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x62f2);
        EXPECT(gbc.pc(), 0x47b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0373
        gbc.setState(0x8c25, 0x40e4, 0xf680, 0x67cd, 0x77f0, 0x723f, 0x0, 0x1);
        gbc.writeMem(0x8c25, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x40e4);
        EXPECT(gbc.pc(), 0x8c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c25), 0xcb);
        EXPECT(gbc.readMem(0x8c26), 0x71);
        // CB 71 0374
        gbc.setState(0x6f4c, 0x33c3, 0x9f40, 0xc02, 0xc3d9, 0xd498, 0x0, 0x0);
        gbc.writeMem(0x6f4c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x33c3);
        EXPECT(gbc.pc(), 0x6f4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0375
        gbc.setState(0x1563, 0x5292, 0xb630, 0x25bf, 0x1cb0, 0x38fe, 0x0, 0x1);
        gbc.writeMem(0x1563, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x5292);
        EXPECT(gbc.pc(), 0x1565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0376
        gbc.setState(0x3f80, 0xa70b, 0xc0b0, 0x7dce, 0xd73a, 0x8652, 0x0, 0x0);
        gbc.writeMem(0x3f80, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xa70b);
        EXPECT(gbc.pc(), 0x3f82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0377
        gbc.setState(0xebf, 0x6066, 0x4840, 0xc183, 0x95a9, 0xf0cf, 0x0, 0x1);
        gbc.writeMem(0xebf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x6066);
        EXPECT(gbc.pc(), 0xec1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0378
        gbc.setState(0xc6c6, 0xfd7a, 0xd820, 0x5dd2, 0xc3da, 0xa9fa, 0x1, 0x0);
        gbc.writeMem(0xc6c6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xfd7a);
        EXPECT(gbc.pc(), 0xc6c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c6), 0xcb);
        EXPECT(gbc.readMem(0xc6c7), 0x71);
        // CB 71 0379
        gbc.setState(0x88c1, 0x478c, 0x7090, 0x3d6, 0x4aeb, 0x3b08, 0x0, 0x1);
        gbc.writeMem(0x88c1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x478c);
        EXPECT(gbc.pc(), 0x88c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c1), 0xcb);
        EXPECT(gbc.readMem(0x88c2), 0x71);
        // CB 71 037A
        gbc.setState(0xee1a, 0x3320, 0x1420, 0x1e6a, 0x6374, 0x99f1, 0x0, 0x0);
        gbc.writeMem(0xee1a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x3320);
        EXPECT(gbc.pc(), 0xee1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee1a), 0xcb);
        EXPECT(gbc.readMem(0xee1b), 0x71);
        // CB 71 037B
        gbc.setState(0x8f1f, 0x8485, 0xc0c0, 0xb7d3, 0x5678, 0x499a, 0x1, 0x0);
        gbc.writeMem(0x8f1f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8485);
        EXPECT(gbc.pc(), 0x8f21);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f1f), 0xcb);
        EXPECT(gbc.readMem(0x8f20), 0x71);
        // CB 71 037C
        gbc.setState(0x8155, 0xd039, 0x9960, 0x557b, 0x4957, 0xcb99, 0x1, 0x0);
        gbc.writeMem(0x8155, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd039);
        EXPECT(gbc.pc(), 0x8157);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8155), 0xcb);
        EXPECT(gbc.readMem(0x8156), 0x71);
        // CB 71 037D
        gbc.setState(0x9268, 0x16f, 0x7400, 0xba69, 0xeda6, 0xb0cb, 0x0, 0x1);
        gbc.writeMem(0x9268, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x16f);
        EXPECT(gbc.pc(), 0x926a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9268), 0xcb);
        EXPECT(gbc.readMem(0x9269), 0x71);
        // CB 71 037E
        gbc.setState(0xda89, 0xbb56, 0xdbf0, 0x5a5d, 0xcc21, 0x83b5, 0x0, 0x1);
        gbc.writeMem(0xda89, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xbb56);
        EXPECT(gbc.pc(), 0xda8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda89), 0xcb);
        EXPECT(gbc.readMem(0xda8a), 0x71);
        // CB 71 037F
        gbc.setState(0x9356, 0xb422, 0xaa0, 0x97ed, 0x9f2c, 0x458, 0x0, 0x1);
        gbc.writeMem(0x9356, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xb422);
        EXPECT(gbc.pc(), 0x9358);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9356), 0xcb);
        EXPECT(gbc.readMem(0x9357), 0x71);
        // CB 71 0380
        gbc.setState(0xd156, 0xabe, 0xa8d0, 0xc788, 0x613e, 0x5cae, 0x0, 0x1);
        gbc.writeMem(0xd156, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xabe);
        EXPECT(gbc.pc(), 0xd158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd156), 0xcb);
        EXPECT(gbc.readMem(0xd157), 0x71);
        // CB 71 0381
        gbc.setState(0x88bf, 0xef11, 0xc0, 0x829d, 0xb6f1, 0xd29e, 0x1, 0x0);
        gbc.writeMem(0x88bf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xef11);
        EXPECT(gbc.pc(), 0x88c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88bf), 0xcb);
        EXPECT(gbc.readMem(0x88c0), 0x71);
        // CB 71 0382
        gbc.setState(0x4338, 0x4133, 0x77b0, 0x8fbc, 0x45ac, 0x6822, 0x0, 0x0);
        gbc.writeMem(0x4338, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4133);
        EXPECT(gbc.pc(), 0x433a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0383
        gbc.setState(0x4d35, 0xa89d, 0x2b60, 0xf205, 0x6450, 0x6db8, 0x1, 0x1);
        gbc.writeMem(0x4d35, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xa89d);
        EXPECT(gbc.pc(), 0x4d37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0384
        gbc.setState(0x1463, 0x568e, 0x1440, 0x9e9c, 0x758b, 0xe8f0, 0x0, 0x0);
        gbc.writeMem(0x1463, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x568e);
        EXPECT(gbc.pc(), 0x1465);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0385
        gbc.setState(0x3cb5, 0xe022, 0x7e00, 0x208e, 0x1bb1, 0x703a, 0x1, 0x1);
        gbc.writeMem(0x3cb5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xe022);
        EXPECT(gbc.pc(), 0x3cb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0386
        gbc.setState(0x6543, 0x6e14, 0x5120, 0xb592, 0x165d, 0xe384, 0x0, 0x0);
        gbc.writeMem(0x6543, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x6e14);
        EXPECT(gbc.pc(), 0x6545);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0387
        gbc.setState(0x8209, 0x2de1, 0x4140, 0x1512, 0x8f28, 0x734c, 0x0, 0x0);
        gbc.writeMem(0x8209, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x2de1);
        EXPECT(gbc.pc(), 0x820b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8209), 0xcb);
        EXPECT(gbc.readMem(0x820a), 0x71);
        // CB 71 0388
        gbc.setState(0x45d4, 0xd7d4, 0x10e0, 0x93a4, 0x87bc, 0x1d06, 0x0, 0x0);
        gbc.writeMem(0x45d4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd7d4);
        EXPECT(gbc.pc(), 0x45d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0389
        gbc.setState(0xe56b, 0xdf42, 0x2070, 0x8050, 0x9c09, 0xee53, 0x1, 0x0);
        gbc.writeMem(0xe56b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdf42);
        EXPECT(gbc.pc(), 0xe56d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe56b), 0xcb);
        EXPECT(gbc.readMem(0xe56c), 0x71);
        // CB 71 038A
        gbc.setState(0x30b6, 0x5cd4, 0xf3f0, 0x1045, 0x873f, 0xbad6, 0x1, 0x0);
        gbc.writeMem(0x30b6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x5cd4);
        EXPECT(gbc.pc(), 0x30b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 038B
        gbc.setState(0x4353, 0x2530, 0x9d30, 0x16ce, 0xfca0, 0x7f1, 0x0, 0x0);
        gbc.writeMem(0x4353, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x2530);
        EXPECT(gbc.pc(), 0x4355);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 038C
        gbc.setState(0xbffc, 0xa5b2, 0x6710, 0x3e19, 0x1d81, 0x1289, 0x0, 0x1);
        gbc.writeMem(0xbffc, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xa5b2);
        EXPECT(gbc.pc(), 0xbffe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbffc), 0xcb);
        EXPECT(gbc.readMem(0xbffd), 0x71);
        // CB 71 038D
        gbc.setState(0x167e, 0x2e2c, 0x7500, 0x20e5, 0xc56d, 0xf0, 0x0, 0x0);
        gbc.writeMem(0x167e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x2e2c);
        EXPECT(gbc.pc(), 0x1680);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 038E
        gbc.setState(0xbb0e, 0xa0a2, 0xce90, 0x4641, 0xf698, 0x23c9, 0x0, 0x1);
        gbc.writeMem(0xbb0e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa0a2);
        EXPECT(gbc.pc(), 0xbb10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb0e), 0xcb);
        EXPECT(gbc.readMem(0xbb0f), 0x71);
        // CB 71 038F
        gbc.setState(0x958, 0x87f4, 0x3060, 0xeb93, 0x3602, 0x9a8c, 0x0, 0x0);
        gbc.writeMem(0x958, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x87f4);
        EXPECT(gbc.pc(), 0x95a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0390
        gbc.setState(0x94f5, 0xc10a, 0x98e0, 0xa812, 0x58dd, 0xb1db, 0x0, 0x1);
        gbc.writeMem(0x94f5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xc10a);
        EXPECT(gbc.pc(), 0x94f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94f5), 0xcb);
        EXPECT(gbc.readMem(0x94f6), 0x71);
        // CB 71 0391
        gbc.setState(0xa23f, 0x8d7, 0x15d0, 0xda36, 0x19a6, 0xbb60, 0x1, 0x0);
        gbc.writeMem(0xa23f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x8d7);
        EXPECT(gbc.pc(), 0xa241);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa23f), 0xcb);
        EXPECT(gbc.readMem(0xa240), 0x71);
        // CB 71 0392
        gbc.setState(0x1016, 0x37e6, 0x52f0, 0x1e05, 0xc49, 0xcca0, 0x1, 0x1);
        gbc.writeMem(0x1016, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x37e6);
        EXPECT(gbc.pc(), 0x1018);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0393
        gbc.setState(0x6ad1, 0xa80f, 0xc2c0, 0xdf71, 0xd532, 0x662a, 0x0, 0x0);
        gbc.writeMem(0x6ad1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa80f);
        EXPECT(gbc.pc(), 0x6ad3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0394
        gbc.setState(0xd794, 0x4ea5, 0xbae0, 0x8c7d, 0x359d, 0x48d2, 0x1, 0x0);
        gbc.writeMem(0xd794, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x4ea5);
        EXPECT(gbc.pc(), 0xd796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd794), 0xcb);
        EXPECT(gbc.readMem(0xd795), 0x71);
        // CB 71 0395
        gbc.setState(0x3f2c, 0xb626, 0xcbc0, 0xadfe, 0x56be, 0x7515, 0x0, 0x1);
        gbc.writeMem(0x3f2c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xb626);
        EXPECT(gbc.pc(), 0x3f2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 0396
        gbc.setState(0x168, 0x238e, 0x9eb0, 0x56f, 0x8a7f, 0xc528, 0x1, 0x0);
        gbc.writeMem(0x168, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x238e);
        EXPECT(gbc.pc(), 0x16a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0397
        gbc.setState(0x5943, 0xe9b0, 0x4fb0, 0x857e, 0x7a54, 0xf138, 0x0, 0x0);
        gbc.writeMem(0x5943, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xe9b0);
        EXPECT(gbc.pc(), 0x5945);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 0398
        gbc.setState(0x8ea5, 0xab72, 0x3d30, 0x85c9, 0x22d6, 0x356b, 0x0, 0x0);
        gbc.writeMem(0x8ea5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0xab72);
        EXPECT(gbc.pc(), 0x8ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea5), 0xcb);
        EXPECT(gbc.readMem(0x8ea6), 0x71);
        // CB 71 0399
        gbc.setState(0x4202, 0x8c32, 0xb8a0, 0xc26e, 0x3a0e, 0xaa04, 0x1, 0x1);
        gbc.writeMem(0x4202, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8c32);
        EXPECT(gbc.pc(), 0x4204);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 039A
        gbc.setState(0xe001, 0xf05c, 0x9350, 0x6a90, 0xac08, 0x8d7c, 0x1, 0x1);
        gbc.writeMem(0xe001, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf05c);
        EXPECT(gbc.pc(), 0xe003);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe001), 0xcb);
        EXPECT(gbc.readMem(0xe002), 0x71);
        // CB 71 039B
        gbc.setState(0x689b, 0xcd4, 0x8840, 0xfe82, 0x7374, 0x69f7, 0x1, 0x1);
        gbc.writeMem(0x689b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xcd4);
        EXPECT(gbc.pc(), 0x689d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 039C
        gbc.setState(0x50ba, 0xd098, 0x4480, 0x3ae8, 0x6e1, 0x6fa, 0x0, 0x0);
        gbc.writeMem(0x50ba, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xd098);
        EXPECT(gbc.pc(), 0x50bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 039D
        gbc.setState(0x64a1, 0xb53d, 0x7890, 0xc423, 0x1d9f, 0xa57d, 0x0, 0x1);
        gbc.writeMem(0x64a1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xb53d);
        EXPECT(gbc.pc(), 0x64a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 039E
        gbc.setState(0xe3d, 0x923, 0x5d80, 0x31b8, 0x2f59, 0x3dd1, 0x1, 0x1);
        gbc.writeMem(0xe3d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x923);
        EXPECT(gbc.pc(), 0xe3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 039F
        gbc.setState(0x96b5, 0x50d1, 0xc300, 0xc507, 0xa500, 0x1b05, 0x0, 0x1);
        gbc.writeMem(0x96b5, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x50d1);
        EXPECT(gbc.pc(), 0x96b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x96b5), 0xcb);
        EXPECT(gbc.readMem(0x96b6), 0x71);
        // CB 71 03A1
        gbc.setState(0x4591, 0x729e, 0x8670, 0x6557, 0x3899, 0xda14, 0x0, 0x0);
        gbc.writeMem(0x4591, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x729e);
        EXPECT(gbc.pc(), 0x4593);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03A2
        gbc.setState(0x20bd, 0xd035, 0x30c0, 0xeb1d, 0xb329, 0x3c3c, 0x1, 0x0);
        gbc.writeMem(0x20bd, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd035);
        EXPECT(gbc.pc(), 0x20bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03A3
        gbc.setState(0x7360, 0xae19, 0xb5e0, 0x2917, 0x6691, 0x74c9, 0x0, 0x1);
        gbc.writeMem(0x7360, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xae19);
        EXPECT(gbc.pc(), 0x7362);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03A4
        gbc.setState(0x33a1, 0x5b85, 0xfa0, 0xd44d, 0xeba9, 0x2bd8, 0x1, 0x0);
        gbc.writeMem(0x33a1, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x5b85);
        EXPECT(gbc.pc(), 0x33a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03A5
        gbc.setState(0x5ec9, 0x994e, 0xb3e0, 0x9ed7, 0xfa7b, 0xa12f, 0x1, 0x0);
        gbc.writeMem(0x5ec9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x994e);
        EXPECT(gbc.pc(), 0x5ecb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03A6
        gbc.setState(0x45f7, 0xe1e9, 0x4310, 0x2a1, 0xb489, 0xa0bf, 0x0, 0x1);
        gbc.writeMem(0x45f7, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xe1e9);
        EXPECT(gbc.pc(), 0x45f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03A7
        gbc.setState(0x458d, 0x3e9, 0x4f80, 0xf30f, 0x4749, 0xbf13, 0x0, 0x1);
        gbc.writeMem(0x458d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0x3e9);
        EXPECT(gbc.pc(), 0x458f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03A8
        gbc.setState(0xa3f8, 0xb4a2, 0xcfa0, 0x733b, 0x332a, 0xc64f, 0x1, 0x0);
        gbc.writeMem(0xa3f8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xb4a2);
        EXPECT(gbc.pc(), 0xa3fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa3f8), 0xcb);
        EXPECT(gbc.readMem(0xa3f9), 0x71);
        // CB 71 03A9
        gbc.setState(0xa366, 0x8d34, 0xb380, 0xf2b3, 0x903a, 0xcc24, 0x1, 0x1);
        gbc.writeMem(0xa366, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8d34);
        EXPECT(gbc.pc(), 0xa368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa366), 0xcb);
        EXPECT(gbc.readMem(0xa367), 0x71);
        // CB 71 03AA
        gbc.setState(0xaf36, 0x457e, 0xd5b0, 0x8e85, 0x9cce, 0x68b6, 0x1, 0x1);
        gbc.writeMem(0xaf36, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x457e);
        EXPECT(gbc.pc(), 0xaf38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf36), 0xcb);
        EXPECT(gbc.readMem(0xaf37), 0x71);
        // CB 71 03AB
        gbc.setState(0xe7f3, 0xb072, 0xc9a0, 0x4ae4, 0x3561, 0x96dd, 0x1, 0x1);
        gbc.writeMem(0xe7f3, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb072);
        EXPECT(gbc.pc(), 0xe7f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe7f3), 0xcb);
        EXPECT(gbc.readMem(0xe7f4), 0x71);
        // CB 71 03AC
        gbc.setState(0x3a3b, 0x92ec, 0x6c90, 0x586e, 0xc440, 0x9a06, 0x0, 0x0);
        gbc.writeMem(0x3a3b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x92ec);
        EXPECT(gbc.pc(), 0x3a3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03AD
        gbc.setState(0x866d, 0xa84f, 0xfba0, 0x2749, 0xbbe8, 0x481, 0x1, 0x0);
        gbc.writeMem(0x866d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa84f);
        EXPECT(gbc.pc(), 0x866f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x866d), 0xcb);
        EXPECT(gbc.readMem(0x866e), 0x71);
        // CB 71 03AE
        gbc.setState(0xa99e, 0x24c7, 0xf4a0, 0xbd6d, 0x3406, 0x870, 0x0, 0x1);
        gbc.writeMem(0xa99e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x24c7);
        EXPECT(gbc.pc(), 0xa9a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa99e), 0xcb);
        EXPECT(gbc.readMem(0xa99f), 0x71);
        // CB 71 03AF
        gbc.setState(0x3727, 0x7581, 0x2880, 0xecde, 0xceef, 0xdbe7, 0x1, 0x0);
        gbc.writeMem(0x3727, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7581);
        EXPECT(gbc.pc(), 0x3729);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03B0
        gbc.setState(0xd5fa, 0xd7e6, 0x4400, 0xfe71, 0xabae, 0xe051, 0x1, 0x0);
        gbc.writeMem(0xd5fa, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xd7e6);
        EXPECT(gbc.pc(), 0xd5fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5fa), 0xcb);
        EXPECT(gbc.readMem(0xd5fb), 0x71);
        // CB 71 03B1
        gbc.setState(0x9b48, 0xe73f, 0x4930, 0x24c0, 0x94b0, 0x35aa, 0x0, 0x1);
        gbc.writeMem(0x9b48, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xe73f);
        EXPECT(gbc.pc(), 0x9b4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b48), 0xcb);
        EXPECT(gbc.readMem(0x9b49), 0x71);
        // CB 71 03B2
        gbc.setState(0xcbd9, 0x6c96, 0xc050, 0x852a, 0x4190, 0xd87e, 0x0, 0x1);
        gbc.writeMem(0xcbd9, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x6c96);
        EXPECT(gbc.pc(), 0xcbdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbd9), 0xcb);
        EXPECT(gbc.readMem(0xcbda), 0x71);
        // CB 71 03B3
        gbc.setState(0x187b, 0xcbe6, 0x5bc0, 0x6029, 0xb7d9, 0x2549, 0x1, 0x0);
        gbc.writeMem(0x187b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xcbe6);
        EXPECT(gbc.pc(), 0x187d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03B4
        gbc.setState(0x404d, 0x2340, 0xd0a0, 0x3e79, 0x57ef, 0x6ef4, 0x1, 0x1);
        gbc.writeMem(0x404d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x2340);
        EXPECT(gbc.pc(), 0x404f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03B5
        gbc.setState(0x5b18, 0x60e8, 0x5de0, 0xa50b, 0xefd7, 0x26d8, 0x0, 0x1);
        gbc.writeMem(0x5b18, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x60e8);
        EXPECT(gbc.pc(), 0x5b1a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03B6
        gbc.setState(0x759d, 0xe74a, 0x7f70, 0x4dcf, 0x38af, 0x7f71, 0x0, 0x0);
        gbc.writeMem(0x759d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe74a);
        EXPECT(gbc.pc(), 0x759f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03B7
        gbc.setState(0xa383, 0xde76, 0x4180, 0xa6e6, 0xf539, 0x3324, 0x0, 0x1);
        gbc.writeMem(0xa383, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xde76);
        EXPECT(gbc.pc(), 0xa385);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa383), 0xcb);
        EXPECT(gbc.readMem(0xa384), 0x71);
        // CB 71 03B8
        gbc.setState(0x5f71, 0x7a01, 0x2a50, 0x966c, 0x1ea0, 0xafb7, 0x0, 0x0);
        gbc.writeMem(0x5f71, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7a01);
        EXPECT(gbc.pc(), 0x5f73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03B9
        gbc.setState(0x47cf, 0xdc09, 0x6fe0, 0xd565, 0x7c19, 0xeef8, 0x1, 0x0);
        gbc.writeMem(0x47cf, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xdc09);
        EXPECT(gbc.pc(), 0x47d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03BA
        gbc.setState(0x8802, 0xa9a, 0xa160, 0x8e02, 0xd15a, 0xdc03, 0x0, 0x1);
        gbc.writeMem(0x8802, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xa9a);
        EXPECT(gbc.pc(), 0x8804);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8802), 0xcb);
        EXPECT(gbc.readMem(0x8803), 0x71);
        // CB 71 03BB
        gbc.setState(0x497e, 0xa968, 0x7180, 0x4afa, 0x9736, 0x9f90, 0x0, 0x1);
        gbc.writeMem(0x497e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa968);
        EXPECT(gbc.pc(), 0x4980);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03BC
        gbc.setState(0x7b44, 0x3a, 0x3890, 0x579a, 0x485f, 0x9a35, 0x1, 0x0);
        gbc.writeMem(0x7b44, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3a);
        EXPECT(gbc.pc(), 0x7b46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03BD
        gbc.setState(0x1e9d, 0x33ec, 0x2b60, 0xad5a, 0x4b74, 0x9fe1, 0x0, 0x1);
        gbc.writeMem(0x1e9d, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x33ec);
        EXPECT(gbc.pc(), 0x1e9f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03BE
        gbc.setState(0x320b, 0xf570, 0xb4c0, 0xf20c, 0xc7f0, 0xa4c6, 0x0, 0x1);
        gbc.writeMem(0x320b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xf570);
        EXPECT(gbc.pc(), 0x320d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03BF
        gbc.setState(0x17d6, 0x3200, 0xde10, 0xeee7, 0x364b, 0x5e35, 0x1, 0x1);
        gbc.writeMem(0x17d6, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x3200);
        EXPECT(gbc.pc(), 0x17d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03C0
        gbc.setState(0x1075, 0x1e6a, 0xd7a0, 0x98a2, 0x3f28, 0x27f6, 0x0, 0x1);
        gbc.writeMem(0x1075, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x1e6a);
        EXPECT(gbc.pc(), 0x1077);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03C2
        gbc.setState(0xc79c, 0xdbce, 0xdac0, 0x96b2, 0x5566, 0x4da9, 0x1, 0x1);
        gbc.writeMem(0xc79c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xdbce);
        EXPECT(gbc.pc(), 0xc79e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc79c), 0xcb);
        EXPECT(gbc.readMem(0xc79d), 0x71);
        // CB 71 03C4
        gbc.setState(0xc097, 0xb4bf, 0x3e00, 0x1f82, 0xb055, 0xba3d, 0x0, 0x1);
        gbc.writeMem(0xc097, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xb4bf);
        EXPECT(gbc.pc(), 0xc099);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc097), 0xcb);
        EXPECT(gbc.readMem(0xc098), 0x71);
        // CB 71 03C5
        gbc.setState(0xa34, 0xff99, 0x94b0, 0xf03b, 0x4eee, 0xa1, 0x1, 0x0);
        gbc.writeMem(0xa34, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xff99);
        EXPECT(gbc.pc(), 0xa36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03C6
        gbc.setState(0x3289, 0xf668, 0x1820, 0xf874, 0x9094, 0x220f, 0x0, 0x0);
        gbc.writeMem(0x3289, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf668);
        EXPECT(gbc.pc(), 0x328b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03C7
        gbc.setState(0xb249, 0x9243, 0x6610, 0x8722, 0xe3e8, 0xcb77, 0x0, 0x1);
        gbc.writeMem(0xb249, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x9243);
        EXPECT(gbc.pc(), 0xb24b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb249), 0xcb);
        EXPECT(gbc.readMem(0xb24a), 0x71);
        // CB 71 03C8
        gbc.setState(0x549, 0x8220, 0x6560, 0x85bf, 0xfc62, 0xd462, 0x1, 0x1);
        gbc.writeMem(0x549, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x8220);
        EXPECT(gbc.pc(), 0x54b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03C9
        gbc.setState(0x708, 0x7bb5, 0x4fa0, 0x796f, 0x60fb, 0xcbca, 0x1, 0x1);
        gbc.writeMem(0x708, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x7bb5);
        EXPECT(gbc.pc(), 0x70a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03CA
        gbc.setState(0xba28, 0x31df, 0xa600, 0x1e80, 0x9f67, 0x9202, 0x0, 0x1);
        gbc.writeMem(0xba28, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x31df);
        EXPECT(gbc.pc(), 0xba2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba28), 0xcb);
        EXPECT(gbc.readMem(0xba29), 0x71);
        // CB 71 03CB
        gbc.setState(0x8ecd, 0x6f01, 0xf290, 0xc454, 0xb962, 0x9ac4, 0x0, 0x0);
        gbc.writeMem(0x8ecd, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x6f01);
        EXPECT(gbc.pc(), 0x8ecf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ecd), 0xcb);
        EXPECT(gbc.readMem(0x8ece), 0x71);
        // CB 71 03CC
        gbc.setState(0x9182, 0xf756, 0x7e00, 0x2621, 0x7d7, 0xbee6, 0x1, 0x0);
        gbc.writeMem(0x9182, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf756);
        EXPECT(gbc.pc(), 0x9184);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9182), 0xcb);
        EXPECT(gbc.readMem(0x9183), 0x71);
        // CB 71 03CD
        gbc.setState(0x4597, 0x3240, 0x25e0, 0xff2f, 0x4079, 0x4d8b, 0x1, 0x0);
        gbc.writeMem(0x4597, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x3240);
        EXPECT(gbc.pc(), 0x4599);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03CE
        gbc.setState(0x8717, 0x20e7, 0x2d10, 0xed16, 0x3935, 0xceea, 0x1, 0x1);
        gbc.writeMem(0x8717, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x20e7);
        EXPECT(gbc.pc(), 0x8719);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8717), 0xcb);
        EXPECT(gbc.readMem(0x8718), 0x71);
        // CB 71 03CF
        gbc.setState(0x7d27, 0xbd93, 0x7d80, 0x2793, 0x93b0, 0x9e72, 0x0, 0x0);
        gbc.writeMem(0x7d27, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xbd93);
        EXPECT(gbc.pc(), 0x7d29);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03D0
        gbc.setState(0xecce, 0x46c2, 0x3960, 0xa64f, 0x4345, 0xadaa, 0x0, 0x1);
        gbc.writeMem(0xecce, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x46c2);
        EXPECT(gbc.pc(), 0xecd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecce), 0xcb);
        EXPECT(gbc.readMem(0xeccf), 0x71);
        // CB 71 03D1
        gbc.setState(0x5e71, 0x48f2, 0xe910, 0x156f, 0xea1e, 0x47dc, 0x1, 0x0);
        gbc.writeMem(0x5e71, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x48f2);
        EXPECT(gbc.pc(), 0x5e73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03D2
        gbc.setState(0x377e, 0x7f8f, 0xe890, 0x469f, 0x7192, 0xdd92, 0x0, 0x1);
        gbc.writeMem(0x377e, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x7f8f);
        EXPECT(gbc.pc(), 0x3780);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03D3
        gbc.setState(0xc2ce, 0x2af3, 0x8940, 0x3a19, 0xdda5, 0x8b34, 0x0, 0x1);
        gbc.writeMem(0xc2ce, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0x2af3);
        EXPECT(gbc.pc(), 0xc2d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2ce), 0xcb);
        EXPECT(gbc.readMem(0xc2cf), 0x71);
        // CB 71 03D4
        gbc.setState(0xe141, 0xac87, 0xcfd0, 0xa1c1, 0x5e99, 0x4f42, 0x0, 0x0);
        gbc.writeMem(0xe141, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xac87);
        EXPECT(gbc.pc(), 0xe143);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe141), 0xcb);
        EXPECT(gbc.readMem(0xe142), 0x71);
        // CB 71 03D5
        gbc.setState(0x337f, 0xbde8, 0xade0, 0x5a2f, 0xf972, 0x39b6, 0x1, 0x1);
        gbc.writeMem(0x337f, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xbde8);
        EXPECT(gbc.pc(), 0x3381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03D6
        gbc.setState(0x6e83, 0x4a65, 0xf040, 0xb1ba, 0x2d5c, 0x81a4, 0x1, 0x1);
        gbc.writeMem(0x6e83, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x4a65);
        EXPECT(gbc.pc(), 0x6e85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03D7
        gbc.setState(0xbd5a, 0x8d7f, 0x4590, 0x5cfa, 0x77c3, 0x9c9b, 0x0, 0x1);
        gbc.writeMem(0xbd5a, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8d7f);
        EXPECT(gbc.pc(), 0xbd5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd5a), 0xcb);
        EXPECT(gbc.readMem(0xbd5b), 0x71);
        // CB 71 03D8
        gbc.setState(0x268b, 0xbeb7, 0xf8a0, 0x5044, 0xee85, 0xde3c, 0x0, 0x0);
        gbc.writeMem(0x268b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xbeb7);
        EXPECT(gbc.pc(), 0x268d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03D9
        gbc.setState(0x7e7c, 0x473c, 0x3bf0, 0x65ef, 0x2dd8, 0x912f, 0x0, 0x1);
        gbc.writeMem(0x7e7c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x473c);
        EXPECT(gbc.pc(), 0x7e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03DB
        gbc.setState(0x1796, 0x1c86, 0x5a10, 0x5da, 0x9a4d, 0xe1ae, 0x1, 0x0);
        gbc.writeMem(0x1796, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x1c86);
        EXPECT(gbc.pc(), 0x1798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03DC
        gbc.setState(0x2808, 0xee62, 0xe570, 0xabe5, 0x6ece, 0xd253, 0x0, 0x0);
        gbc.writeMem(0x2808, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xee62);
        EXPECT(gbc.pc(), 0x280a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03DD
        gbc.setState(0xa54b, 0xa426, 0xa700, 0x37f2, 0xe15d, 0x312e, 0x0, 0x1);
        gbc.writeMem(0xa54b, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xa426);
        EXPECT(gbc.pc(), 0xa54d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa54b), 0xcb);
        EXPECT(gbc.readMem(0xa54c), 0x71);
        // CB 71 03DE
        gbc.setState(0xe413, 0x6435, 0x4d90, 0x9600, 0x6045, 0xfa6c, 0x0, 0x1);
        gbc.writeMem(0xe413, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x6435);
        EXPECT(gbc.pc(), 0xe415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe413), 0xcb);
        EXPECT(gbc.readMem(0xe414), 0x71);
        // CB 71 03DF
        gbc.setState(0x730c, 0x2df9, 0xfe00, 0x2fa6, 0xe844, 0xd753, 0x1, 0x0);
        gbc.writeMem(0x730c, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2df9);
        EXPECT(gbc.pc(), 0x730e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03E0
        gbc.setState(0x9695, 0x5281, 0x5040, 0xd77e, 0x290, 0x92f9, 0x0, 0x1);
        gbc.writeMem(0x9695, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x5281);
        EXPECT(gbc.pc(), 0x9697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9695), 0xcb);
        EXPECT(gbc.readMem(0x9696), 0x71);
        // CB 71 03E1
        gbc.setState(0x55f4, 0xb7e2, 0xcb50, 0x8d39, 0x7c50, 0xf645, 0x1, 0x0);
        gbc.writeMem(0x55f4, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xb7e2);
        EXPECT(gbc.pc(), 0x55f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03E2
        gbc.setState(0xe9ad, 0xf03f, 0xe060, 0xab6c, 0xc100, 0xb35e, 0x0, 0x1);
        gbc.writeMem(0xe9ad, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf03f);
        EXPECT(gbc.pc(), 0xe9af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ad), 0xcb);
        EXPECT(gbc.readMem(0xe9ae), 0x71);
        // CB 71 03E3
        gbc.setState(0xdf67, 0x3b04, 0xdb00, 0xfe50, 0x8c45, 0xb89c, 0x1, 0x0);
        gbc.writeMem(0xdf67, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3b04);
        EXPECT(gbc.pc(), 0xdf69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf67), 0xcb);
        EXPECT(gbc.readMem(0xdf68), 0x71);
        // CB 71 03E4
        gbc.setState(0x41b3, 0xc1e8, 0xec80, 0xc497, 0x7332, 0x7b32, 0x1, 0x0);
        gbc.writeMem(0x41b3, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xc1e8);
        EXPECT(gbc.pc(), 0x41b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 71 03E5
        gbc.setState(0x7c25, 0xfa25, 0xb90, 0x8d91, 0xf075, 0x1bf8, 0x1, 0x0);
        gbc.writeMem(0x7c25, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfa25);
        EXPECT(gbc.pc(), 0x7c27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 71 03E6
        gbc.setState(0xde51, 0xbcaf, 0xdfd0, 0x26c3, 0x23d, 0xbdd1, 0x0, 0x1);
        gbc.writeMem(0xde51, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xbcaf);
        EXPECT(gbc.pc(), 0xde53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde51), 0xcb);
        EXPECT(gbc.readMem(0xde52), 0x71);
        // CB 71 03E7
        gbc.setState(0xe9f8, 0xb15, 0x7090, 0xd9e6, 0xac25, 0x6e2a, 0x0, 0x0);
        gbc.writeMem(0xe9f8, { 0xcb, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xb15);
        EXPECT(gbc.pc(), 0xe9fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9f8), 0xcb);
        EXPECT(gbc.readMem(0xe9f9), 0x71);
    }
}
#endif
