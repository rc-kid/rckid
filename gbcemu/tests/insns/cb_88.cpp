#include "../gbctests_insns.h"
#if (defined GBCEMU_INSNS_TESTS_ALL) || (defined GBCEMU_INSNS_TESTS_cb_88)
#include "../gbctests.h"

namespace rckid::gbcemu {

    TEST(gbcemu, opcode_cb_88) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB 88 0000
        gbc.setState(0x98da, 0x2502, 0xed0, 0xdf97, 0x2d3, 0xfc5d, 0x1, 0x1);
        gbc.writeMem(0x98da, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x2502);
        EXPECT(gbc.pc(), 0x98dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98da), 0xcb);
        EXPECT(gbc.readMem(0x98db), 0x88);
        // CB 88 0001
        gbc.setState(0xa84, 0x3f98, 0xd0f0, 0x814c, 0xee97, 0x1a91, 0x0, 0x0);
        gbc.writeMem(0xa84, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x3f98);
        EXPECT(gbc.pc(), 0xa86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0002
        gbc.setState(0x9364, 0x8c7f, 0x6980, 0x3607, 0x357c, 0xf042, 0x0, 0x1);
        gbc.writeMem(0x9364, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8c7f);
        EXPECT(gbc.pc(), 0x9366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9364), 0xcb);
        EXPECT(gbc.readMem(0x9365), 0x88);
        // CB 88 0003
        gbc.setState(0xd116, 0x57b6, 0xb40, 0x1967, 0x93d8, 0x1741, 0x0, 0x0);
        gbc.writeMem(0xd116, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x57b6);
        EXPECT(gbc.pc(), 0xd118);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd116), 0xcb);
        EXPECT(gbc.readMem(0xd117), 0x88);
        // CB 88 0005
        gbc.setState(0x1c2b, 0x2f36, 0xf0c0, 0xd094, 0x60d8, 0xb72d, 0x0, 0x1);
        gbc.writeMem(0x1c2b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x2f36);
        EXPECT(gbc.pc(), 0x1c2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0006
        gbc.setState(0xe243, 0xfc84, 0xa490, 0x78e5, 0x43c3, 0x5f1b, 0x0, 0x1);
        gbc.writeMem(0xe243, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xfc84);
        EXPECT(gbc.pc(), 0xe245);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe243), 0xcb);
        EXPECT(gbc.readMem(0xe244), 0x88);
        // CB 88 0007
        gbc.setState(0x337c, 0x6c9d, 0xf4b0, 0xb0f9, 0x7ab8, 0x4e20, 0x0, 0x1);
        gbc.writeMem(0x337c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x6c9d);
        EXPECT(gbc.pc(), 0x337e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0008
        gbc.setState(0x4200, 0x6c6, 0xab70, 0x9114, 0xaaa6, 0xc232, 0x1, 0x0);
        gbc.writeMem(0x4200, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x6c6);
        EXPECT(gbc.pc(), 0x4202);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0009
        gbc.setState(0x5667, 0xc4d6, 0xc9d0, 0xdd89, 0xcf86, 0xc4b9, 0x0, 0x1);
        gbc.writeMem(0x5667, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xc4d6);
        EXPECT(gbc.pc(), 0x5669);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 000A
        gbc.setState(0x9959, 0xa7c9, 0xd1f0, 0x467b, 0xe30e, 0x6fa7, 0x1, 0x1);
        gbc.writeMem(0x9959, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa7c9);
        EXPECT(gbc.pc(), 0x995b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9959), 0xcb);
        EXPECT(gbc.readMem(0x995a), 0x88);
        // CB 88 000B
        gbc.setState(0x5583, 0x24a6, 0xb6c0, 0x515f, 0x1668, 0x872b, 0x1, 0x0);
        gbc.writeMem(0x5583, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x24a6);
        EXPECT(gbc.pc(), 0x5585);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 000C
        gbc.setState(0xcf03, 0x1b29, 0x5720, 0x3a79, 0x2239, 0xfecc, 0x0, 0x1);
        gbc.writeMem(0xcf03, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x1b29);
        EXPECT(gbc.pc(), 0xcf05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf03), 0xcb);
        EXPECT(gbc.readMem(0xcf04), 0x88);
        // CB 88 000D
        gbc.setState(0x34cf, 0xd6c9, 0xb360, 0x3386, 0x6267, 0x2ad1, 0x1, 0x1);
        gbc.writeMem(0x34cf, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xd6c9);
        EXPECT(gbc.pc(), 0x34d1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 000E
        gbc.setState(0x8845, 0xccd9, 0x440, 0x3bfa, 0xdc58, 0x5d76, 0x0, 0x1);
        gbc.writeMem(0x8845, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xccd9);
        EXPECT(gbc.pc(), 0x8847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8845), 0xcb);
        EXPECT(gbc.readMem(0x8846), 0x88);
        // CB 88 000F
        gbc.setState(0xc1c5, 0x8897, 0x1290, 0x41ea, 0x2f87, 0xa549, 0x1, 0x1);
        gbc.writeMem(0xc1c5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8897);
        EXPECT(gbc.pc(), 0xc1c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1c5), 0xcb);
        EXPECT(gbc.readMem(0xc1c6), 0x88);
        // CB 88 0010
        gbc.setState(0x30b, 0xdbe9, 0xcb80, 0x3d85, 0xd3af, 0x804f, 0x1, 0x0);
        gbc.writeMem(0x30b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xdbe9);
        EXPECT(gbc.pc(), 0x30d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0011
        gbc.setState(0x57ba, 0x575f, 0x34b0, 0x2795, 0x2f60, 0x2aa3, 0x1, 0x1);
        gbc.writeMem(0x57ba, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x575f);
        EXPECT(gbc.pc(), 0x57bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0012
        gbc.setState(0xc122, 0xeffa, 0xbc00, 0x759d, 0xb9c2, 0x9804, 0x0, 0x0);
        gbc.writeMem(0xc122, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xeffa);
        EXPECT(gbc.pc(), 0xc124);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc122), 0xcb);
        EXPECT(gbc.readMem(0xc123), 0x88);
        // CB 88 0013
        gbc.setState(0xeb22, 0xe360, 0xf750, 0x65af, 0xc1e1, 0x49f9, 0x1, 0x1);
        gbc.writeMem(0xeb22, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe360);
        EXPECT(gbc.pc(), 0xeb24);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb22), 0xcb);
        EXPECT(gbc.readMem(0xeb23), 0x88);
        // CB 88 0014
        gbc.setState(0x98d1, 0xf468, 0x37e0, 0xd670, 0xa332, 0x8609, 0x0, 0x1);
        gbc.writeMem(0x98d1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf468);
        EXPECT(gbc.pc(), 0x98d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98d1), 0xcb);
        EXPECT(gbc.readMem(0x98d2), 0x88);
        // CB 88 0015
        gbc.setState(0x865a, 0x70b4, 0xc0d0, 0xd8e8, 0x355a, 0xc041, 0x1, 0x1);
        gbc.writeMem(0x865a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x70b4);
        EXPECT(gbc.pc(), 0x865c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x865a), 0xcb);
        EXPECT(gbc.readMem(0x865b), 0x88);
        // CB 88 0016
        gbc.setState(0xf53, 0xe4e3, 0x2510, 0x4a8b, 0x2d08, 0x8fb8, 0x1, 0x0);
        gbc.writeMem(0xf53, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xe4e3);
        EXPECT(gbc.pc(), 0xf55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0017
        gbc.setState(0x32a2, 0x1a, 0x23a0, 0x2910, 0xbd94, 0x86a0, 0x0, 0x1);
        gbc.writeMem(0x32a2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1a);
        EXPECT(gbc.pc(), 0x32a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0018
        gbc.setState(0x1563, 0x62a4, 0x7180, 0x3f05, 0x64bf, 0x9d8e, 0x0, 0x1);
        gbc.writeMem(0x1563, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x62a4);
        EXPECT(gbc.pc(), 0x1565);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0019
        gbc.setState(0x3993, 0xbfe4, 0xf4b0, 0x80b8, 0x57bc, 0x661a, 0x0, 0x0);
        gbc.writeMem(0x3993, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbfe4);
        EXPECT(gbc.pc(), 0x3995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 001A
        gbc.setState(0x18c7, 0xc9e4, 0x2a40, 0xfdc3, 0x43b3, 0xe25b, 0x1, 0x1);
        gbc.writeMem(0x18c7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xc9e4);
        EXPECT(gbc.pc(), 0x18c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 001B
        gbc.setState(0x9267, 0x5d1, 0x6c40, 0x9b75, 0x9eb3, 0x9b43, 0x1, 0x1);
        gbc.writeMem(0x9267, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x5d1);
        EXPECT(gbc.pc(), 0x9269);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9267), 0xcb);
        EXPECT(gbc.readMem(0x9268), 0x88);
        // CB 88 001C
        gbc.setState(0xd181, 0x6cc2, 0x5070, 0x2bc4, 0x9be1, 0x760e, 0x1, 0x1);
        gbc.writeMem(0xd181, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x6cc2);
        EXPECT(gbc.pc(), 0xd183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd181), 0xcb);
        EXPECT(gbc.readMem(0xd182), 0x88);
        // CB 88 001E
        gbc.setState(0xd5c9, 0x2a9c, 0x7cb0, 0x1c51, 0x6cdc, 0x16bf, 0x0, 0x0);
        gbc.writeMem(0xd5c9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2a9c);
        EXPECT(gbc.pc(), 0xd5cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5c9), 0xcb);
        EXPECT(gbc.readMem(0xd5ca), 0x88);
        // CB 88 001F
        gbc.setState(0x1865, 0x77b4, 0x1ee0, 0x69ea, 0x9454, 0x971, 0x1, 0x1);
        gbc.writeMem(0x1865, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x77b4);
        EXPECT(gbc.pc(), 0x1867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0020
        gbc.setState(0x28b2, 0xa78a, 0xfd30, 0xb453, 0x389, 0x45a0, 0x1, 0x0);
        gbc.writeMem(0x28b2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa78a);
        EXPECT(gbc.pc(), 0x28b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0021
        gbc.setState(0x56f2, 0xea4c, 0x1b70, 0x4ed1, 0xc157, 0x83e6, 0x0, 0x1);
        gbc.writeMem(0x56f2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xea4c);
        EXPECT(gbc.pc(), 0x56f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0022
        gbc.setState(0x416d, 0x2706, 0x3f50, 0xdbea, 0x1245, 0xf3ca, 0x0, 0x1);
        gbc.writeMem(0x416d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x2706);
        EXPECT(gbc.pc(), 0x416f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0023
        gbc.setState(0x1a47, 0xbe71, 0xb740, 0xbe12, 0x4f82, 0x2f7b, 0x1, 0x1);
        gbc.writeMem(0x1a47, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xbe71);
        EXPECT(gbc.pc(), 0x1a49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0024
        gbc.setState(0x2053, 0xfa51, 0xa140, 0x9ad, 0xc379, 0xce8a, 0x1, 0x0);
        gbc.writeMem(0x2053, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xfa51);
        EXPECT(gbc.pc(), 0x2055);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0025
        gbc.setState(0xe074, 0xfba, 0xf350, 0x5ca2, 0x163e, 0xc950, 0x1, 0x0);
        gbc.writeMem(0xe074, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xfba);
        EXPECT(gbc.pc(), 0xe076);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe074), 0xcb);
        EXPECT(gbc.readMem(0xe075), 0x88);
        // CB 88 0026
        gbc.setState(0xcc95, 0xda1, 0x4ac0, 0x36eb, 0x1dbc, 0xd535, 0x1, 0x1);
        gbc.writeMem(0xcc95, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xda1);
        EXPECT(gbc.pc(), 0xcc97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc95), 0xcb);
        EXPECT(gbc.readMem(0xcc96), 0x88);
        // CB 88 0027
        gbc.setState(0x4382, 0x7c1c, 0xcf80, 0x2396, 0x4a3f, 0x4559, 0x0, 0x1);
        gbc.writeMem(0x4382, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x7c1c);
        EXPECT(gbc.pc(), 0x4384);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0028
        gbc.setState(0x48b6, 0x9dfa, 0xf3c0, 0xd8e, 0xaf4d, 0x7a04, 0x1, 0x0);
        gbc.writeMem(0x48b6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x9dfa);
        EXPECT(gbc.pc(), 0x48b8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0029
        gbc.setState(0x73, 0xd5df, 0xcba0, 0x750c, 0x34a, 0xcf0a, 0x1, 0x1);
        gbc.writeMem(0x73, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xd5df);
        EXPECT(gbc.pc(), 0x75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 002A
        gbc.setState(0xdbc7, 0x718a, 0x6b70, 0x45ac, 0xe770, 0x947e, 0x1, 0x1);
        gbc.writeMem(0xdbc7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x718a);
        EXPECT(gbc.pc(), 0xdbc9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbc7), 0xcb);
        EXPECT(gbc.readMem(0xdbc8), 0x88);
        // CB 88 002B
        gbc.setState(0xa888, 0x5fb8, 0xbff0, 0xfc6c, 0x15af, 0x260c, 0x0, 0x0);
        gbc.writeMem(0xa888, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x5fb8);
        EXPECT(gbc.pc(), 0xa88a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa888), 0xcb);
        EXPECT(gbc.readMem(0xa889), 0x88);
        // CB 88 002C
        gbc.setState(0xed5c, 0x275c, 0x3b20, 0xa4d9, 0x7a1a, 0x8715, 0x0, 0x1);
        gbc.writeMem(0xed5c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x275c);
        EXPECT(gbc.pc(), 0xed5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed5c), 0xcb);
        EXPECT(gbc.readMem(0xed5d), 0x88);
        // CB 88 002D
        gbc.setState(0x466, 0xaa1e, 0x7110, 0x95, 0xbb35, 0x2b2e, 0x0, 0x0);
        gbc.writeMem(0x466, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xaa1e);
        EXPECT(gbc.pc(), 0x468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 002E
        gbc.setState(0x722b, 0xa126, 0x3130, 0xb245, 0x1d56, 0x5cc8, 0x1, 0x1);
        gbc.writeMem(0x722b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xa126);
        EXPECT(gbc.pc(), 0x722d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 002F
        gbc.setState(0x9fe7, 0x4b5, 0xd610, 0x413f, 0x449e, 0x5a84, 0x0, 0x0);
        gbc.writeMem(0x9fe7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x4b5);
        EXPECT(gbc.pc(), 0x9fe9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fe7), 0xcb);
        EXPECT(gbc.readMem(0x9fe8), 0x88);
        // CB 88 0030
        gbc.setState(0xab89, 0xdffe, 0x7330, 0x68f4, 0xd2f4, 0xa360, 0x0, 0x1);
        gbc.writeMem(0xab89, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdffe);
        EXPECT(gbc.pc(), 0xab8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab89), 0xcb);
        EXPECT(gbc.readMem(0xab8a), 0x88);
        // CB 88 0031
        gbc.setState(0x5eb, 0xc049, 0xfd80, 0xdc5e, 0xf23a, 0x808b, 0x1, 0x1);
        gbc.writeMem(0x5eb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xc049);
        EXPECT(gbc.pc(), 0x5ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0032
        gbc.setState(0x9fd0, 0xfb57, 0xa3a0, 0x5fa1, 0x70f, 0x9b2a, 0x0, 0x0);
        gbc.writeMem(0x9fd0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xfb57);
        EXPECT(gbc.pc(), 0x9fd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9fd0), 0xcb);
        EXPECT(gbc.readMem(0x9fd1), 0x88);
        // CB 88 0033
        gbc.setState(0xa52c, 0xdedb, 0x3f50, 0xed72, 0xcdcb, 0xffe4, 0x1, 0x1);
        gbc.writeMem(0xa52c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xdedb);
        EXPECT(gbc.pc(), 0xa52e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa52c), 0xcb);
        EXPECT(gbc.readMem(0xa52d), 0x88);
        // CB 88 0034
        gbc.setState(0x1a90, 0x53df, 0x5e00, 0x731, 0x3ec8, 0x78e5, 0x0, 0x1);
        gbc.writeMem(0x1a90, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x53df);
        EXPECT(gbc.pc(), 0x1a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0035
        gbc.setState(0x926a, 0x7b9f, 0x5740, 0xeb62, 0x4979, 0x2d2, 0x1, 0x0);
        gbc.writeMem(0x926a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0x7b9f);
        EXPECT(gbc.pc(), 0x926c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x926a), 0xcb);
        EXPECT(gbc.readMem(0x926b), 0x88);
        // CB 88 0036
        gbc.setState(0x21db, 0x2684, 0x81c0, 0x3657, 0xe470, 0xd7f5, 0x1, 0x0);
        gbc.writeMem(0x21db, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x2684);
        EXPECT(gbc.pc(), 0x21dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0037
        gbc.setState(0x9421, 0xfc23, 0xbe30, 0xff37, 0x192b, 0xdc08, 0x0, 0x0);
        gbc.writeMem(0x9421, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xfc23);
        EXPECT(gbc.pc(), 0x9423);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9421), 0xcb);
        EXPECT(gbc.readMem(0x9422), 0x88);
        // CB 88 0038
        gbc.setState(0xb993, 0xb3f, 0x7f80, 0x5e37, 0x3727, 0x80e0, 0x1, 0x1);
        gbc.writeMem(0xb993, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xb3f);
        EXPECT(gbc.pc(), 0xb995);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb993), 0xcb);
        EXPECT(gbc.readMem(0xb994), 0x88);
        // CB 88 0039
        gbc.setState(0x8c68, 0x171a, 0xcc50, 0x5d31, 0xf548, 0x7d4e, 0x0, 0x0);
        gbc.writeMem(0x8c68, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x171a);
        EXPECT(gbc.pc(), 0x8c6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c68), 0xcb);
        EXPECT(gbc.readMem(0x8c69), 0x88);
        // CB 88 003A
        gbc.setState(0xdbaf, 0x3836, 0x9ec0, 0x2b0b, 0xaf16, 0xb95d, 0x0, 0x0);
        gbc.writeMem(0xdbaf, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x3836);
        EXPECT(gbc.pc(), 0xdbb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbaf), 0xcb);
        EXPECT(gbc.readMem(0xdbb0), 0x88);
        // CB 88 003B
        gbc.setState(0x8e1c, 0x7014, 0x5210, 0xa048, 0x4e21, 0xf2aa, 0x0, 0x0);
        gbc.writeMem(0x8e1c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x7014);
        EXPECT(gbc.pc(), 0x8e1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e1c), 0xcb);
        EXPECT(gbc.readMem(0x8e1d), 0x88);
        // CB 88 003C
        gbc.setState(0x28e, 0xe8e2, 0xa1a0, 0x987b, 0xec36, 0x1e76, 0x1, 0x0);
        gbc.writeMem(0x28e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe8e2);
        EXPECT(gbc.pc(), 0x290);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 003D
        gbc.setState(0xb7ee, 0x9457, 0x4730, 0x4280, 0x34e7, 0x2fc8, 0x1, 0x1);
        gbc.writeMem(0xb7ee, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9457);
        EXPECT(gbc.pc(), 0xb7f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb7ee), 0xcb);
        EXPECT(gbc.readMem(0xb7ef), 0x88);
        // CB 88 003F
        gbc.setState(0x9666, 0xbea7, 0xc0c0, 0x2587, 0xaa83, 0xe9fc, 0x1, 0x0);
        gbc.writeMem(0x9666, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xbea7);
        EXPECT(gbc.pc(), 0x9668);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9666), 0xcb);
        EXPECT(gbc.readMem(0x9667), 0x88);
        // CB 88 0040
        gbc.setState(0xfe9, 0x36d1, 0x3340, 0xbe4f, 0xeb3e, 0x6544, 0x1, 0x0);
        gbc.writeMem(0xfe9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x36d1);
        EXPECT(gbc.pc(), 0xfeb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0041
        gbc.setState(0xae35, 0x6131, 0xf380, 0xf934, 0x4080, 0x2f4f, 0x1, 0x0);
        gbc.writeMem(0xae35, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x6131);
        EXPECT(gbc.pc(), 0xae37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae35), 0xcb);
        EXPECT(gbc.readMem(0xae36), 0x88);
        // CB 88 0042
        gbc.setState(0x26ba, 0xb51, 0x6ec0, 0x8430, 0xaa71, 0xc9ba, 0x1, 0x0);
        gbc.writeMem(0x26ba, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xb51);
        EXPECT(gbc.pc(), 0x26bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0043
        gbc.setState(0x4cca, 0x6460, 0x9050, 0xd5d9, 0x1e7b, 0x11d, 0x0, 0x0);
        gbc.writeMem(0x4cca, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x6460);
        EXPECT(gbc.pc(), 0x4ccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0044
        gbc.setState(0xee3f, 0x5c5, 0x34d0, 0xc5d1, 0xece8, 0x9786, 0x1, 0x1);
        gbc.writeMem(0xee3f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x5c5);
        EXPECT(gbc.pc(), 0xee41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee3f), 0xcb);
        EXPECT(gbc.readMem(0xee40), 0x88);
        // CB 88 0045
        gbc.setState(0xa663, 0x9ad6, 0x1500, 0x49a8, 0xef08, 0xd8a2, 0x1, 0x1);
        gbc.writeMem(0xa663, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9ad6);
        EXPECT(gbc.pc(), 0xa665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa663), 0xcb);
        EXPECT(gbc.readMem(0xa664), 0x88);
        // CB 88 0046
        gbc.setState(0x8788, 0x8abc, 0x7d60, 0x9efe, 0xf7bf, 0xfe8f, 0x1, 0x1);
        gbc.writeMem(0x8788, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8abc);
        EXPECT(gbc.pc(), 0x878a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8788), 0xcb);
        EXPECT(gbc.readMem(0x8789), 0x88);
        // CB 88 0047
        gbc.setState(0xb747, 0xa459, 0xade0, 0xfed1, 0x3abc, 0xbb26, 0x0, 0x1);
        gbc.writeMem(0xb747, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xa459);
        EXPECT(gbc.pc(), 0xb749);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb747), 0xcb);
        EXPECT(gbc.readMem(0xb748), 0x88);
        // CB 88 0048
        gbc.setState(0x3143, 0xd4fb, 0xc0a0, 0x6c99, 0x4914, 0x5083, 0x1, 0x1);
        gbc.writeMem(0x3143, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd4fb);
        EXPECT(gbc.pc(), 0x3145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0049
        gbc.setState(0xea5d, 0x5b7a, 0xc700, 0x1028, 0xc202, 0xf462, 0x1, 0x1);
        gbc.writeMem(0xea5d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x5b7a);
        EXPECT(gbc.pc(), 0xea5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea5d), 0xcb);
        EXPECT(gbc.readMem(0xea5e), 0x88);
        // CB 88 004A
        gbc.setState(0xa70d, 0x7387, 0xe510, 0x42, 0xbc0e, 0xcffc, 0x1, 0x0);
        gbc.writeMem(0xa70d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7387);
        EXPECT(gbc.pc(), 0xa70f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa70d), 0xcb);
        EXPECT(gbc.readMem(0xa70e), 0x88);
        // CB 88 004B
        gbc.setState(0xdad5, 0xcd50, 0x3d10, 0x50f3, 0x202a, 0x5472, 0x1, 0x1);
        gbc.writeMem(0xdad5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xcd50);
        EXPECT(gbc.pc(), 0xdad7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdad5), 0xcb);
        EXPECT(gbc.readMem(0xdad6), 0x88);
        // CB 88 004D
        gbc.setState(0x2968, 0x7eeb, 0x9300, 0x8bfd, 0x7c8a, 0x2a97, 0x0, 0x1);
        gbc.writeMem(0x2968, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x7eeb);
        EXPECT(gbc.pc(), 0x296a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 004E
        gbc.setState(0x294a, 0x676b, 0x9ec0, 0x92c6, 0xdc09, 0x737d, 0x1, 0x0);
        gbc.writeMem(0x294a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x676b);
        EXPECT(gbc.pc(), 0x294c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 004F
        gbc.setState(0x2a16, 0xdd8c, 0xb650, 0xd738, 0x475f, 0x9f22, 0x0, 0x0);
        gbc.writeMem(0x2a16, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xdd8c);
        EXPECT(gbc.pc(), 0x2a18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0050
        gbc.setState(0x196b, 0xbac9, 0x4160, 0x4abb, 0x1212, 0x1d7f, 0x1, 0x1);
        gbc.writeMem(0x196b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xbac9);
        EXPECT(gbc.pc(), 0x196d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0051
        gbc.setState(0x819d, 0x562e, 0xbbc0, 0x5f06, 0xc86b, 0xd6f0, 0x1, 0x0);
        gbc.writeMem(0x819d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x562e);
        EXPECT(gbc.pc(), 0x819f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x819d), 0xcb);
        EXPECT(gbc.readMem(0x819e), 0x88);
        // CB 88 0052
        gbc.setState(0xebd6, 0x87d5, 0x3560, 0xf62a, 0x56d0, 0xc4ca, 0x1, 0x1);
        gbc.writeMem(0xebd6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x87d5);
        EXPECT(gbc.pc(), 0xebd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebd6), 0xcb);
        EXPECT(gbc.readMem(0xebd7), 0x88);
        // CB 88 0053
        gbc.setState(0xc222, 0x76d9, 0x4240, 0x502a, 0x1258, 0xb27f, 0x1, 0x0);
        gbc.writeMem(0xc222, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x76d9);
        EXPECT(gbc.pc(), 0xc224);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc222), 0xcb);
        EXPECT(gbc.readMem(0xc223), 0x88);
        // CB 88 0054
        gbc.setState(0xc918, 0x9253, 0x91e0, 0xca10, 0xeda, 0x84d7, 0x0, 0x0);
        gbc.writeMem(0xc918, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x9253);
        EXPECT(gbc.pc(), 0xc91a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc918), 0xcb);
        EXPECT(gbc.readMem(0xc919), 0x88);
        // CB 88 0056
        gbc.setState(0xc0bd, 0x1fad, 0xc8e0, 0x9eb9, 0xcd15, 0x677d, 0x0, 0x1);
        gbc.writeMem(0xc0bd, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1fad);
        EXPECT(gbc.pc(), 0xc0bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0bd), 0xcb);
        EXPECT(gbc.readMem(0xc0be), 0x88);
        // CB 88 0057
        gbc.setState(0x2d6c, 0x7527, 0x9560, 0x9cb9, 0x59bb, 0x4129, 0x0, 0x1);
        gbc.writeMem(0x2d6c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x7527);
        EXPECT(gbc.pc(), 0x2d6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0058
        gbc.setState(0x8998, 0x1769, 0xadc0, 0x1400, 0x88ee, 0xa268, 0x1, 0x0);
        gbc.writeMem(0x8998, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x1769);
        EXPECT(gbc.pc(), 0x899a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8998), 0xcb);
        EXPECT(gbc.readMem(0x8999), 0x88);
        // CB 88 0059
        gbc.setState(0xca7f, 0x108f, 0xba70, 0x95b3, 0x9e71, 0x538c, 0x1, 0x1);
        gbc.writeMem(0xca7f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x108f);
        EXPECT(gbc.pc(), 0xca81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca7f), 0xcb);
        EXPECT(gbc.readMem(0xca80), 0x88);
        // CB 88 005A
        gbc.setState(0x7af8, 0x23e2, 0x94d0, 0xa5b0, 0x19a, 0x98fe, 0x1, 0x0);
        gbc.writeMem(0x7af8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x23e2);
        EXPECT(gbc.pc(), 0x7afa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 005B
        gbc.setState(0xc466, 0xc750, 0xcfc0, 0x40fa, 0x5060, 0xe729, 0x0, 0x0);
        gbc.writeMem(0xc466, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xc750);
        EXPECT(gbc.pc(), 0xc468);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc466), 0xcb);
        EXPECT(gbc.readMem(0xc467), 0x88);
        // CB 88 005C
        gbc.setState(0xd334, 0x1967, 0x9f30, 0x7477, 0x7a1f, 0xd189, 0x0, 0x0);
        gbc.writeMem(0xd334, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1967);
        EXPECT(gbc.pc(), 0xd336);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd334), 0xcb);
        EXPECT(gbc.readMem(0xd335), 0x88);
        // CB 88 005E
        gbc.setState(0x6c59, 0x198c, 0x66b0, 0xbcf9, 0x7bcb, 0xe4fb, 0x1, 0x0);
        gbc.writeMem(0x6c59, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x198c);
        EXPECT(gbc.pc(), 0x6c5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 005F
        gbc.setState(0x79ea, 0x266a, 0x90e0, 0x6ac5, 0x130e, 0xdbe7, 0x0, 0x0);
        gbc.writeMem(0x79ea, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x266a);
        EXPECT(gbc.pc(), 0x79ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0060
        gbc.setState(0x55a7, 0x19cd, 0x39e0, 0x765e, 0x117c, 0x9811, 0x0, 0x0);
        gbc.writeMem(0x55a7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x19cd);
        EXPECT(gbc.pc(), 0x55a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0061
        gbc.setState(0x1801, 0x26c3, 0x8fb0, 0x3383, 0xa3e8, 0x8a45, 0x0, 0x1);
        gbc.writeMem(0x1801, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x26c3);
        EXPECT(gbc.pc(), 0x1803);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0064
        gbc.setState(0xc5de, 0x60ce, 0xfe60, 0xacbb, 0x13c7, 0x5b99, 0x0, 0x1);
        gbc.writeMem(0xc5de, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x60ce);
        EXPECT(gbc.pc(), 0xc5e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5de), 0xcb);
        EXPECT(gbc.readMem(0xc5df), 0x88);
        // CB 88 0065
        gbc.setState(0xc3e5, 0x4609, 0xc600, 0x7139, 0xed36, 0x5a56, 0x0, 0x1);
        gbc.writeMem(0xc3e5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x4609);
        EXPECT(gbc.pc(), 0xc3e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e5), 0xcb);
        EXPECT(gbc.readMem(0xc3e6), 0x88);
        // CB 88 0066
        gbc.setState(0xa5cb, 0x54f6, 0x61b0, 0xba5, 0xa156, 0xf739, 0x1, 0x0);
        gbc.writeMem(0xa5cb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x54f6);
        EXPECT(gbc.pc(), 0xa5cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5cb), 0xcb);
        EXPECT(gbc.readMem(0xa5cc), 0x88);
        // CB 88 0067
        gbc.setState(0x6c98, 0xf90e, 0x84a0, 0xbcf8, 0xdb0f, 0x4b91, 0x0, 0x0);
        gbc.writeMem(0x6c98, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xf90e);
        EXPECT(gbc.pc(), 0x6c9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0068
        gbc.setState(0x6680, 0x1598, 0xb160, 0x6703, 0x5d15, 0x815b, 0x0, 0x1);
        gbc.writeMem(0x6680, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x1598);
        EXPECT(gbc.pc(), 0x6682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0069
        gbc.setState(0xa2c, 0xa708, 0x23e0, 0x95b0, 0x796f, 0x54dc, 0x0, 0x0);
        gbc.writeMem(0xa2c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xa708);
        EXPECT(gbc.pc(), 0xa2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 006A
        gbc.setState(0x2d96, 0x4b23, 0xc620, 0x9e0e, 0x1725, 0x9d54, 0x0, 0x1);
        gbc.writeMem(0x2d96, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x4b23);
        EXPECT(gbc.pc(), 0x2d98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 006B
        gbc.setState(0xcf37, 0x6852, 0x7600, 0x1f4e, 0x8812, 0x5d0, 0x0, 0x0);
        gbc.writeMem(0xcf37, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6852);
        EXPECT(gbc.pc(), 0xcf39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf37), 0xcb);
        EXPECT(gbc.readMem(0xcf38), 0x88);
        // CB 88 006C
        gbc.setState(0xdbf9, 0xe317, 0xe660, 0x2d23, 0xd74b, 0x9f51, 0x0, 0x0);
        gbc.writeMem(0xdbf9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe317);
        EXPECT(gbc.pc(), 0xdbfb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf9), 0xcb);
        EXPECT(gbc.readMem(0xdbfa), 0x88);
        // CB 88 006D
        gbc.setState(0x5951, 0xcfe5, 0x7750, 0x7ee9, 0x1609, 0x86ae, 0x1, 0x1);
        gbc.writeMem(0x5951, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xcfe5);
        EXPECT(gbc.pc(), 0x5953);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 006E
        gbc.setState(0x7879, 0xe717, 0x5e80, 0x3d3d, 0x6ed5, 0x7be9, 0x1, 0x1);
        gbc.writeMem(0x7879, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xe717);
        EXPECT(gbc.pc(), 0x787b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 006F
        gbc.setState(0x9e9a, 0x6aa3, 0xb780, 0x9b98, 0xeb4e, 0xd4ef, 0x0, 0x1);
        gbc.writeMem(0x9e9a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6aa3);
        EXPECT(gbc.pc(), 0x9e9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e9a), 0xcb);
        EXPECT(gbc.readMem(0x9e9b), 0x88);
        // CB 88 0070
        gbc.setState(0x23b3, 0x5c27, 0xae10, 0xa264, 0xdb50, 0xe4d3, 0x1, 0x0);
        gbc.writeMem(0x23b3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5c27);
        EXPECT(gbc.pc(), 0x23b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0071
        gbc.setState(0x1e19, 0x535b, 0x1390, 0x5edc, 0x3503, 0xd0d0, 0x1, 0x1);
        gbc.writeMem(0x1e19, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x535b);
        EXPECT(gbc.pc(), 0x1e1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0072
        gbc.setState(0x2dec, 0x2441, 0x71b0, 0x28ca, 0x702, 0xec06, 0x0, 0x1);
        gbc.writeMem(0x2dec, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x2441);
        EXPECT(gbc.pc(), 0x2dee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0073
        gbc.setState(0x5720, 0x848f, 0xbfb0, 0x3f56, 0xa54c, 0x6d59, 0x0, 0x0);
        gbc.writeMem(0x5720, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x848f);
        EXPECT(gbc.pc(), 0x5722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0074
        gbc.setState(0xd413, 0x6516, 0xdef0, 0xb286, 0x1a3c, 0x2ced, 0x0, 0x0);
        gbc.writeMem(0xd413, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x6516);
        EXPECT(gbc.pc(), 0xd415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd413), 0xcb);
        EXPECT(gbc.readMem(0xd414), 0x88);
        // CB 88 0075
        gbc.setState(0xc9a2, 0x6929, 0x2c00, 0x1160, 0x4913, 0xfead, 0x0, 0x0);
        gbc.writeMem(0xc9a2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6929);
        EXPECT(gbc.pc(), 0xc9a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9a2), 0xcb);
        EXPECT(gbc.readMem(0xc9a3), 0x88);
        // CB 88 0076
        gbc.setState(0xc5d4, 0xe8f1, 0xa680, 0x9d5d, 0x3301, 0x1f58, 0x0, 0x0);
        gbc.writeMem(0xc5d4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xe8f1);
        EXPECT(gbc.pc(), 0xc5d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5d4), 0xcb);
        EXPECT(gbc.readMem(0xc5d5), 0x88);
        // CB 88 0077
        gbc.setState(0xc23c, 0xf267, 0xa330, 0x969f, 0xf7d0, 0x32bc, 0x0, 0x0);
        gbc.writeMem(0xc23c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xf267);
        EXPECT(gbc.pc(), 0xc23e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc23c), 0xcb);
        EXPECT(gbc.readMem(0xc23d), 0x88);
        // CB 88 0078
        gbc.setState(0x629a, 0x35c6, 0xc8a0, 0xdaa2, 0x63a3, 0xdc91, 0x0, 0x1);
        gbc.writeMem(0x629a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x35c6);
        EXPECT(gbc.pc(), 0x629c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0079
        gbc.setState(0x3e7c, 0x29a3, 0xc100, 0x9348, 0x6864, 0xa814, 0x0, 0x0);
        gbc.writeMem(0x3e7c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x29a3);
        EXPECT(gbc.pc(), 0x3e7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 007A
        gbc.setState(0xd5cf, 0xaa9c, 0xcb90, 0x4933, 0x8347, 0xe3f7, 0x0, 0x0);
        gbc.writeMem(0xd5cf, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0xaa9c);
        EXPECT(gbc.pc(), 0xd5d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5cf), 0xcb);
        EXPECT(gbc.readMem(0xd5d0), 0x88);
        // CB 88 007B
        gbc.setState(0x3ba0, 0x4013, 0x6870, 0x9e7a, 0xf464, 0xeab2, 0x1, 0x0);
        gbc.writeMem(0x3ba0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x4013);
        EXPECT(gbc.pc(), 0x3ba2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 007C
        gbc.setState(0xe9ed, 0xafb8, 0x6df0, 0xba7d, 0xdde7, 0x41d6, 0x0, 0x1);
        gbc.writeMem(0xe9ed, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xafb8);
        EXPECT(gbc.pc(), 0xe9ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9ed), 0xcb);
        EXPECT(gbc.readMem(0xe9ee), 0x88);
        // CB 88 007D
        gbc.setState(0x9720, 0x2745, 0xe6d0, 0x733, 0x1503, 0xdba7, 0x0, 0x1);
        gbc.writeMem(0x9720, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x2745);
        EXPECT(gbc.pc(), 0x9722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9720), 0xcb);
        EXPECT(gbc.readMem(0x9721), 0x88);
        // CB 88 007E
        gbc.setState(0xae16, 0x6af0, 0x3eb0, 0x4a5f, 0xd4ae, 0x8f6f, 0x0, 0x1);
        gbc.writeMem(0xae16, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x6af0);
        EXPECT(gbc.pc(), 0xae18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae16), 0xcb);
        EXPECT(gbc.readMem(0xae17), 0x88);
        // CB 88 007F
        gbc.setState(0xb718, 0xaadf, 0x1db0, 0xef84, 0x8b03, 0xbf1e, 0x0, 0x1);
        gbc.writeMem(0xb718, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xaadf);
        EXPECT(gbc.pc(), 0xb71a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb718), 0xcb);
        EXPECT(gbc.readMem(0xb719), 0x88);
        // CB 88 0080
        gbc.setState(0xe5ba, 0x9739, 0xa890, 0x890d, 0xdd44, 0x291f, 0x1, 0x0);
        gbc.writeMem(0xe5ba, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9739);
        EXPECT(gbc.pc(), 0xe5bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5ba), 0xcb);
        EXPECT(gbc.readMem(0xe5bb), 0x88);
        // CB 88 0081
        gbc.setState(0xc391, 0xa870, 0xe2d0, 0x9e42, 0x4dbe, 0x2744, 0x0, 0x0);
        gbc.writeMem(0xc391, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xa870);
        EXPECT(gbc.pc(), 0xc393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc391), 0xcb);
        EXPECT(gbc.readMem(0xc392), 0x88);
        // CB 88 0082
        gbc.setState(0xa539, 0x745d, 0x4350, 0xd17e, 0x3042, 0xef3e, 0x1, 0x1);
        gbc.writeMem(0xa539, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x745d);
        EXPECT(gbc.pc(), 0xa53b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa539), 0xcb);
        EXPECT(gbc.readMem(0xa53a), 0x88);
        // CB 88 0083
        gbc.setState(0x5f34, 0x43e, 0x6a10, 0xc3bb, 0x5e6d, 0x64a7, 0x1, 0x1);
        gbc.writeMem(0x5f34, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x43e);
        EXPECT(gbc.pc(), 0x5f36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0084
        gbc.setState(0x51fd, 0x3a64, 0xc000, 0x43a0, 0x693e, 0x4c7a, 0x1, 0x1);
        gbc.writeMem(0x51fd, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x3a64);
        EXPECT(gbc.pc(), 0x51ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0085
        gbc.setState(0x5cfb, 0xeb6, 0xfbb0, 0x9299, 0xf619, 0xc4f1, 0x0, 0x1);
        gbc.writeMem(0x5cfb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xeb6);
        EXPECT(gbc.pc(), 0x5cfd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0086
        gbc.setState(0xb1a2, 0x2512, 0x1670, 0xd3be, 0x3579, 0x15ef, 0x0, 0x0);
        gbc.writeMem(0xb1a2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2512);
        EXPECT(gbc.pc(), 0xb1a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb1a2), 0xcb);
        EXPECT(gbc.readMem(0xb1a3), 0x88);
        // CB 88 0087
        gbc.setState(0x36c8, 0xe31b, 0x2ff0, 0x4413, 0xd8e6, 0xb7e4, 0x1, 0x0);
        gbc.writeMem(0x36c8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe31b);
        EXPECT(gbc.pc(), 0x36ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0088
        gbc.setState(0x437c, 0x18a4, 0x1d30, 0x1507, 0x1dbb, 0x3e7f, 0x0, 0x1);
        gbc.writeMem(0x437c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x18a4);
        EXPECT(gbc.pc(), 0x437e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0089
        gbc.setState(0x2d96, 0xb1a9, 0x37b0, 0xec7e, 0x761e, 0x381, 0x1, 0x0);
        gbc.writeMem(0x2d96, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xb1a9);
        EXPECT(gbc.pc(), 0x2d98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 008B
        gbc.setState(0x1648, 0xe305, 0x810, 0xf734, 0x5171, 0x9804, 0x1, 0x0);
        gbc.writeMem(0x1648, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xe305);
        EXPECT(gbc.pc(), 0x164a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 008C
        gbc.setState(0x62d, 0x9f1f, 0xbc40, 0x5192, 0x429b, 0xb297, 0x1, 0x0);
        gbc.writeMem(0x62d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9f1f);
        EXPECT(gbc.pc(), 0x62f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 008D
        gbc.setState(0x3841, 0x6049, 0x8dd0, 0x2ba5, 0x1221, 0x7329, 0x1, 0x0);
        gbc.writeMem(0x3841, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x6049);
        EXPECT(gbc.pc(), 0x3843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 008E
        gbc.setState(0x7883, 0x99f8, 0x3170, 0x9bb1, 0x306f, 0xc286, 0x1, 0x0);
        gbc.writeMem(0x7883, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x99f8);
        EXPECT(gbc.pc(), 0x7885);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 008F
        gbc.setState(0xcdb, 0x6b9b, 0x3760, 0x6d41, 0x2e71, 0x479, 0x0, 0x1);
        gbc.writeMem(0xcdb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x6b9b);
        EXPECT(gbc.pc(), 0xcdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0090
        gbc.setState(0x73d, 0x209f, 0x6ae0, 0x24e5, 0xdb8e, 0x5081, 0x1, 0x1);
        gbc.writeMem(0x73d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x209f);
        EXPECT(gbc.pc(), 0x73f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0091
        gbc.setState(0xd0ca, 0xb93e, 0xbfd0, 0xba87, 0x94b7, 0xb4bf, 0x0, 0x1);
        gbc.writeMem(0xd0ca, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xb93e);
        EXPECT(gbc.pc(), 0xd0cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0ca), 0xcb);
        EXPECT(gbc.readMem(0xd0cb), 0x88);
        // CB 88 0092
        gbc.setState(0x40cc, 0xeeda, 0x30e0, 0x496, 0x356e, 0x57df, 0x1, 0x0);
        gbc.writeMem(0x40cc, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xeeda);
        EXPECT(gbc.pc(), 0x40ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0093
        gbc.setState(0x3c02, 0x82ff, 0xd610, 0xb396, 0x65b4, 0xf9a2, 0x1, 0x0);
        gbc.writeMem(0x3c02, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x82ff);
        EXPECT(gbc.pc(), 0x3c04);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0094
        gbc.setState(0x8de5, 0x755b, 0x75b0, 0x20fe, 0xf95, 0x80b8, 0x0, 0x1);
        gbc.writeMem(0x8de5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x755b);
        EXPECT(gbc.pc(), 0x8de7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8de5), 0xcb);
        EXPECT(gbc.readMem(0x8de6), 0x88);
        // CB 88 0095
        gbc.setState(0xa5bc, 0xb539, 0xbd60, 0xed50, 0xe053, 0x6136, 0x0, 0x1);
        gbc.writeMem(0xa5bc, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb539);
        EXPECT(gbc.pc(), 0xa5be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5bc), 0xcb);
        EXPECT(gbc.readMem(0xa5bd), 0x88);
        // CB 88 0097
        gbc.setState(0xd23d, 0xd2d7, 0x2400, 0x5b0e, 0x536f, 0xc63a, 0x0, 0x0);
        gbc.writeMem(0xd23d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xd2d7);
        EXPECT(gbc.pc(), 0xd23f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd23d), 0xcb);
        EXPECT(gbc.readMem(0xd23e), 0x88);
        // CB 88 0098
        gbc.setState(0x4dbc, 0xfe74, 0x5570, 0x55f8, 0x5fd8, 0x52c, 0x0, 0x0);
        gbc.writeMem(0x4dbc, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfe74);
        EXPECT(gbc.pc(), 0x4dbe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0099
        gbc.setState(0xd3f0, 0x1f80, 0x7d10, 0xe090, 0xe849, 0x546c, 0x1, 0x0);
        gbc.writeMem(0xd3f0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x1f80);
        EXPECT(gbc.pc(), 0xd3f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3f0), 0xcb);
        EXPECT(gbc.readMem(0xd3f1), 0x88);
        // CB 88 009A
        gbc.setState(0xb568, 0x7ee7, 0x1e50, 0xaf68, 0x7eae, 0x280c, 0x0, 0x0);
        gbc.writeMem(0xb568, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x7ee7);
        EXPECT(gbc.pc(), 0xb56a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb568), 0xcb);
        EXPECT(gbc.readMem(0xb569), 0x88);
        // CB 88 009B
        gbc.setState(0x6159, 0x1e6c, 0x1ce0, 0xcb00, 0xca2c, 0x581d, 0x1, 0x1);
        gbc.writeMem(0x6159, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1e6c);
        EXPECT(gbc.pc(), 0x615b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 009C
        gbc.setState(0x7362, 0xdf88, 0x3dc0, 0x1c6, 0xd9fc, 0x1bd4, 0x1, 0x0);
        gbc.writeMem(0x7362, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xdf88);
        EXPECT(gbc.pc(), 0x7364);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 009D
        gbc.setState(0x9f4a, 0xcc0d, 0x3700, 0x52e3, 0xf46c, 0x9156, 0x1, 0x1);
        gbc.writeMem(0x9f4a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xcc0d);
        EXPECT(gbc.pc(), 0x9f4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f4a), 0xcb);
        EXPECT(gbc.readMem(0x9f4b), 0x88);
        // CB 88 009E
        gbc.setState(0x2389, 0xc394, 0xd6a0, 0xe8ec, 0xd56e, 0xe0b2, 0x1, 0x0);
        gbc.writeMem(0x2389, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xc394);
        EXPECT(gbc.pc(), 0x238b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 009F
        gbc.setState(0x6002, 0x5280, 0x1940, 0xa05a, 0x4d1d, 0xb75c, 0x1, 0x1);
        gbc.writeMem(0x6002, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x5280);
        EXPECT(gbc.pc(), 0x6004);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00A0
        gbc.setState(0xcbed, 0xe544, 0xe6b0, 0xfd5f, 0x6181, 0x46de, 0x0, 0x0);
        gbc.writeMem(0xcbed, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xe544);
        EXPECT(gbc.pc(), 0xcbef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbed), 0xcb);
        EXPECT(gbc.readMem(0xcbee), 0x88);
        // CB 88 00A1
        gbc.setState(0xb47f, 0x65e6, 0x87f0, 0x9ae0, 0x613e, 0xc4a3, 0x1, 0x1);
        gbc.writeMem(0xb47f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x65e6);
        EXPECT(gbc.pc(), 0xb481);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb47f), 0xcb);
        EXPECT(gbc.readMem(0xb480), 0x88);
        // CB 88 00A2
        gbc.setState(0xac64, 0x4307, 0x8c60, 0xab7c, 0x6318, 0x594e, 0x1, 0x0);
        gbc.writeMem(0xac64, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x4307);
        EXPECT(gbc.pc(), 0xac66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac64), 0xcb);
        EXPECT(gbc.readMem(0xac65), 0x88);
        // CB 88 00A3
        gbc.setState(0x6e62, 0xddf8, 0x88b0, 0x8601, 0x7877, 0xe712, 0x0, 0x1);
        gbc.writeMem(0x6e62, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xddf8);
        EXPECT(gbc.pc(), 0x6e64);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00A4
        gbc.setState(0xc4b4, 0xe0f1, 0xa6e0, 0xbf2b, 0x8137, 0xf5b9, 0x1, 0x1);
        gbc.writeMem(0xc4b4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xe0f1);
        EXPECT(gbc.pc(), 0xc4b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4b4), 0xcb);
        EXPECT(gbc.readMem(0xc4b5), 0x88);
        // CB 88 00A5
        gbc.setState(0xe630, 0xe984, 0x9df0, 0x51b1, 0xdb6f, 0x6678, 0x1, 0x1);
        gbc.writeMem(0xe630, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe984);
        EXPECT(gbc.pc(), 0xe632);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe630), 0xcb);
        EXPECT(gbc.readMem(0xe631), 0x88);
        // CB 88 00A6
        gbc.setState(0x5f35, 0x887c, 0x6800, 0xfee, 0x4434, 0x1d8, 0x1, 0x0);
        gbc.writeMem(0x5f35, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x887c);
        EXPECT(gbc.pc(), 0x5f37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00A7
        gbc.setState(0x340e, 0x8e04, 0x5990, 0xc215, 0x190b, 0x9b35, 0x0, 0x1);
        gbc.writeMem(0x340e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x8e04);
        EXPECT(gbc.pc(), 0x3410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00A8
        gbc.setState(0xe546, 0x1007, 0x8d70, 0x4d52, 0x6780, 0x9b23, 0x1, 0x1);
        gbc.writeMem(0xe546, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x1007);
        EXPECT(gbc.pc(), 0xe548);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe546), 0xcb);
        EXPECT(gbc.readMem(0xe547), 0x88);
        // CB 88 00A9
        gbc.setState(0x4df3, 0xf5d4, 0xb2e0, 0x8538, 0x5420, 0x42aa, 0x1, 0x1);
        gbc.writeMem(0x4df3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xf5d4);
        EXPECT(gbc.pc(), 0x4df5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00AA
        gbc.setState(0x237d, 0x3d0b, 0x6430, 0xee94, 0xd85f, 0xaace, 0x0, 0x0);
        gbc.writeMem(0x237d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x3d0b);
        EXPECT(gbc.pc(), 0x237f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00AB
        gbc.setState(0x7515, 0x5761, 0x7350, 0x3bba, 0x4fbf, 0x2baf, 0x1, 0x0);
        gbc.writeMem(0x7515, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x5761);
        EXPECT(gbc.pc(), 0x7517);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00AC
        gbc.setState(0x6534, 0xac53, 0x29a0, 0x387d, 0x2a6d, 0xc3a6, 0x0, 0x0);
        gbc.writeMem(0x6534, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xac53);
        EXPECT(gbc.pc(), 0x6536);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00AD
        gbc.setState(0x3912, 0x82fc, 0x7c90, 0x4d09, 0xfb77, 0xe57c, 0x0, 0x0);
        gbc.writeMem(0x3912, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x82fc);
        EXPECT(gbc.pc(), 0x3914);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00AE
        gbc.setState(0xb1e, 0x4044, 0x2990, 0xbcbe, 0x9b6f, 0x11a1, 0x1, 0x1);
        gbc.writeMem(0xb1e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x4044);
        EXPECT(gbc.pc(), 0xb20);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00AF
        gbc.setState(0xb45d, 0xf528, 0x9c70, 0xecab, 0xbe98, 0x5d4b, 0x0, 0x0);
        gbc.writeMem(0xb45d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf528);
        EXPECT(gbc.pc(), 0xb45f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb45d), 0xcb);
        EXPECT(gbc.readMem(0xb45e), 0x88);
        // CB 88 00B0
        gbc.setState(0x70f2, 0xb5e6, 0x4a70, 0xea03, 0xde6c, 0x2811, 0x0, 0x0);
        gbc.writeMem(0x70f2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb5e6);
        EXPECT(gbc.pc(), 0x70f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00B1
        gbc.setState(0xa371, 0x5db4, 0x6b80, 0x5570, 0xa21e, 0x9280, 0x1, 0x1);
        gbc.writeMem(0xa371, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x5db4);
        EXPECT(gbc.pc(), 0xa373);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa371), 0xcb);
        EXPECT(gbc.readMem(0xa372), 0x88);
        // CB 88 00B3
        gbc.setState(0x1fdd, 0x336c, 0x4370, 0xf385, 0xa4e4, 0x9f99, 0x0, 0x0);
        gbc.writeMem(0x1fdd, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x336c);
        EXPECT(gbc.pc(), 0x1fdf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00B4
        gbc.setState(0x2b6, 0xee81, 0x5010, 0x4674, 0xa360, 0xd0ad, 0x0, 0x0);
        gbc.writeMem(0x2b6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xee81);
        EXPECT(gbc.pc(), 0x2b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00B5
        gbc.setState(0xd149, 0x1f96, 0x8be0, 0x5f, 0xd9d, 0x61f, 0x0, 0x0);
        gbc.writeMem(0xd149, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1f96);
        EXPECT(gbc.pc(), 0xd14b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd149), 0xcb);
        EXPECT(gbc.readMem(0xd14a), 0x88);
        // CB 88 00B6
        gbc.setState(0x8f61, 0x1a6c, 0x530, 0xe97f, 0x91c4, 0x6ddf, 0x0, 0x1);
        gbc.writeMem(0x8f61, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x1a6c);
        EXPECT(gbc.pc(), 0x8f63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f61), 0xcb);
        EXPECT(gbc.readMem(0x8f62), 0x88);
        // CB 88 00B7
        gbc.setState(0x7e90, 0xb852, 0xe780, 0x8139, 0x7d75, 0xaa60, 0x0, 0x0);
        gbc.writeMem(0x7e90, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xb852);
        EXPECT(gbc.pc(), 0x7e92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00B9
        gbc.setState(0x973d, 0xdc0f, 0x7250, 0x362a, 0x4aa, 0x3f6c, 0x0, 0x0);
        gbc.writeMem(0x973d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xdc0f);
        EXPECT(gbc.pc(), 0x973f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x973d), 0xcb);
        EXPECT(gbc.readMem(0x973e), 0x88);
        // CB 88 00BA
        gbc.setState(0x47a3, 0x943c, 0xcfe0, 0xbddf, 0x20cd, 0xf338, 0x1, 0x0);
        gbc.writeMem(0x47a3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x943c);
        EXPECT(gbc.pc(), 0x47a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00BB
        gbc.setState(0x9c56, 0x3d1a, 0x910, 0xa3ec, 0xac6b, 0xa56d, 0x1, 0x1);
        gbc.writeMem(0x9c56, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3d1a);
        EXPECT(gbc.pc(), 0x9c58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c56), 0xcb);
        EXPECT(gbc.readMem(0x9c57), 0x88);
        // CB 88 00BC
        gbc.setState(0xd0c3, 0xb3b9, 0x8880, 0x22bc, 0x759f, 0x3219, 0x1, 0x1);
        gbc.writeMem(0xd0c3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xb3b9);
        EXPECT(gbc.pc(), 0xd0c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0c3), 0xcb);
        EXPECT(gbc.readMem(0xd0c4), 0x88);
        // CB 88 00BD
        gbc.setState(0xeb78, 0xccfe, 0xa700, 0x56f6, 0x7722, 0x388e, 0x0, 0x0);
        gbc.writeMem(0xeb78, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xccfe);
        EXPECT(gbc.pc(), 0xeb7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb78), 0xcb);
        EXPECT(gbc.readMem(0xeb79), 0x88);
        // CB 88 00BF
        gbc.setState(0xabb2, 0x624f, 0x75e0, 0x150b, 0x1f66, 0x3691, 0x0, 0x1);
        gbc.writeMem(0xabb2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x624f);
        EXPECT(gbc.pc(), 0xabb4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb2), 0xcb);
        EXPECT(gbc.readMem(0xabb3), 0x88);
        // CB 88 00C0
        gbc.setState(0x4cce, 0x11c2, 0x8e40, 0x9f5, 0x4aa2, 0x548d, 0x0, 0x1);
        gbc.writeMem(0x4cce, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x11c2);
        EXPECT(gbc.pc(), 0x4cd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00C1
        gbc.setState(0x3320, 0xfa74, 0x1090, 0xbc50, 0x6db8, 0x9401, 0x1, 0x1);
        gbc.writeMem(0x3320, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xfa74);
        EXPECT(gbc.pc(), 0x3322);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00C2
        gbc.setState(0x8b5c, 0xcd9b, 0x7320, 0x1b59, 0xcd29, 0x3af1, 0x1, 0x1);
        gbc.writeMem(0x8b5c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcd9b);
        EXPECT(gbc.pc(), 0x8b5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b5c), 0xcb);
        EXPECT(gbc.readMem(0x8b5d), 0x88);
        // CB 88 00C4
        gbc.setState(0xe19e, 0xa9ea, 0x8f0, 0xdc02, 0x284c, 0x2f41, 0x1, 0x1);
        gbc.writeMem(0xe19e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa9ea);
        EXPECT(gbc.pc(), 0xe1a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe19e), 0xcb);
        EXPECT(gbc.readMem(0xe19f), 0x88);
        // CB 88 00C5
        gbc.setState(0xd1c0, 0x4a20, 0x93c0, 0xca70, 0x577b, 0xe65d, 0x0, 0x1);
        gbc.writeMem(0xd1c0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x4a20);
        EXPECT(gbc.pc(), 0xd1c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1c0), 0xcb);
        EXPECT(gbc.readMem(0xd1c1), 0x88);
        // CB 88 00C6
        gbc.setState(0x151a, 0x1e89, 0xd340, 0xf07e, 0x3043, 0x1d89, 0x0, 0x1);
        gbc.writeMem(0x151a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x1e89);
        EXPECT(gbc.pc(), 0x151c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00C7
        gbc.setState(0x83c4, 0xf346, 0xfe20, 0x48b0, 0xbd3f, 0xfadc, 0x0, 0x1);
        gbc.writeMem(0x83c4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf346);
        EXPECT(gbc.pc(), 0x83c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83c4), 0xcb);
        EXPECT(gbc.readMem(0x83c5), 0x88);
        // CB 88 00C9
        gbc.setState(0x8aee, 0x6196, 0x41f0, 0xfe7f, 0xbd3e, 0xc422, 0x0, 0x0);
        gbc.writeMem(0x8aee, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x6196);
        EXPECT(gbc.pc(), 0x8af0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8aee), 0xcb);
        EXPECT(gbc.readMem(0x8aef), 0x88);
        // CB 88 00CA
        gbc.setState(0xecf4, 0x1edc, 0xd110, 0x7d3a, 0x26f9, 0x6b5f, 0x0, 0x1);
        gbc.writeMem(0xecf4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x1edc);
        EXPECT(gbc.pc(), 0xecf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecf4), 0xcb);
        EXPECT(gbc.readMem(0xecf5), 0x88);
        // CB 88 00CB
        gbc.setState(0xbbb7, 0x71db, 0x56c0, 0xa8e2, 0x1cf6, 0xf12b, 0x1, 0x0);
        gbc.writeMem(0xbbb7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x71db);
        EXPECT(gbc.pc(), 0xbbb9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb7), 0xcb);
        EXPECT(gbc.readMem(0xbbb8), 0x88);
        // CB 88 00CC
        gbc.setState(0x312d, 0x53c1, 0xb2a0, 0x79fa, 0xe7a, 0x4fe8, 0x1, 0x1);
        gbc.writeMem(0x312d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x53c1);
        EXPECT(gbc.pc(), 0x312f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00CD
        gbc.setState(0x57a7, 0x88ce, 0x9cc0, 0xb5a6, 0x6219, 0x9e61, 0x0, 0x0);
        gbc.writeMem(0x57a7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x88ce);
        EXPECT(gbc.pc(), 0x57a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00CE
        gbc.setState(0x3c89, 0xcb0b, 0x1570, 0x3af9, 0x7a77, 0xfc5a, 0x0, 0x0);
        gbc.writeMem(0x3c89, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xcb0b);
        EXPECT(gbc.pc(), 0x3c8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00CF
        gbc.setState(0xcb1, 0xf48f, 0x470, 0xfb6c, 0x2a5a, 0xa87, 0x0, 0x1);
        gbc.writeMem(0xcb1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf48f);
        EXPECT(gbc.pc(), 0xcb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00D0
        gbc.setState(0x985e, 0x4552, 0x40a0, 0xfacf, 0xd866, 0x4b40, 0x0, 0x0);
        gbc.writeMem(0x985e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4552);
        EXPECT(gbc.pc(), 0x9860);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x985e), 0xcb);
        EXPECT(gbc.readMem(0x985f), 0x88);
        // CB 88 00D1
        gbc.setState(0x685, 0xaa4, 0x9ca0, 0xda4d, 0x6e4b, 0xfb44, 0x0, 0x0);
        gbc.writeMem(0x685, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xaa4);
        EXPECT(gbc.pc(), 0x687);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00D2
        gbc.setState(0xc164, 0x943c, 0x4260, 0x67b2, 0xaaf4, 0x9b49, 0x0, 0x1);
        gbc.writeMem(0xc164, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x943c);
        EXPECT(gbc.pc(), 0xc166);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc164), 0xcb);
        EXPECT(gbc.readMem(0xc165), 0x88);
        // CB 88 00D3
        gbc.setState(0xa171, 0x1513, 0x3ef0, 0x4ab8, 0x9e29, 0x8516, 0x1, 0x0);
        gbc.writeMem(0xa171, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x1513);
        EXPECT(gbc.pc(), 0xa173);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa171), 0xcb);
        EXPECT(gbc.readMem(0xa172), 0x88);
        // CB 88 00D5
        gbc.setState(0x4d73, 0xd195, 0x5a40, 0x91bc, 0x4960, 0x7f81, 0x0, 0x1);
        gbc.writeMem(0x4d73, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd195);
        EXPECT(gbc.pc(), 0x4d75);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00D6
        gbc.setState(0x6214, 0x83dd, 0x6080, 0x9f49, 0x4099, 0xe1b5, 0x0, 0x1);
        gbc.writeMem(0x6214, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x83dd);
        EXPECT(gbc.pc(), 0x6216);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00D7
        gbc.setState(0x8b79, 0x9ffb, 0x820, 0x301c, 0x4926, 0xf486, 0x1, 0x1);
        gbc.writeMem(0x8b79, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x9ffb);
        EXPECT(gbc.pc(), 0x8b7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b79), 0xcb);
        EXPECT(gbc.readMem(0x8b7a), 0x88);
        // CB 88 00D8
        gbc.setState(0xbef5, 0x663c, 0xc4f0, 0x445b, 0x3d49, 0x7255, 0x1, 0x0);
        gbc.writeMem(0xbef5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x663c);
        EXPECT(gbc.pc(), 0xbef7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef5), 0xcb);
        EXPECT(gbc.readMem(0xbef6), 0x88);
        // CB 88 00DA
        gbc.setState(0x5e3f, 0x7f85, 0x51a0, 0x2d6e, 0x8f13, 0x7a44, 0x0, 0x1);
        gbc.writeMem(0x5e3f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x7f85);
        EXPECT(gbc.pc(), 0x5e41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00DB
        gbc.setState(0x4d68, 0x20c9, 0xa650, 0xb2f7, 0xa8de, 0x143f, 0x0, 0x0);
        gbc.writeMem(0x4d68, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x20c9);
        EXPECT(gbc.pc(), 0x4d6a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00DC
        gbc.setState(0x3641, 0x319e, 0xfb00, 0x8b1f, 0x3a6d, 0x9fe8, 0x0, 0x1);
        gbc.writeMem(0x3641, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x319e);
        EXPECT(gbc.pc(), 0x3643);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00DD
        gbc.setState(0xa0f1, 0xbb07, 0xff60, 0x7108, 0x74d8, 0x6750, 0x0, 0x0);
        gbc.writeMem(0xa0f1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xbb07);
        EXPECT(gbc.pc(), 0xa0f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0f1), 0xcb);
        EXPECT(gbc.readMem(0xa0f2), 0x88);
        // CB 88 00DE
        gbc.setState(0xcc53, 0xa752, 0xa4e0, 0x8cde, 0x5e0e, 0xef29, 0x1, 0x1);
        gbc.writeMem(0xcc53, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xa752);
        EXPECT(gbc.pc(), 0xcc55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc53), 0xcb);
        EXPECT(gbc.readMem(0xcc54), 0x88);
        // CB 88 00DF
        gbc.setState(0x346e, 0x7804, 0x8200, 0x725d, 0x113d, 0x7819, 0x0, 0x1);
        gbc.writeMem(0x346e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7804);
        EXPECT(gbc.pc(), 0x3470);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00E0
        gbc.setState(0x4de7, 0x7de4, 0x1740, 0xa71, 0xd318, 0xd557, 0x1, 0x1);
        gbc.writeMem(0x4de7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x7de4);
        EXPECT(gbc.pc(), 0x4de9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00E1
        gbc.setState(0x3780, 0x3e9f, 0x3a60, 0x2a0b, 0xcc1e, 0x3c, 0x1, 0x1);
        gbc.writeMem(0x3780, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x3e9f);
        EXPECT(gbc.pc(), 0x3782);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00E2
        gbc.setState(0x40d3, 0xbb1, 0x1400, 0x60bc, 0xa1c8, 0xec61, 0x1, 0x0);
        gbc.writeMem(0x40d3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xbb1);
        EXPECT(gbc.pc(), 0x40d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00E3
        gbc.setState(0xd904, 0xc0fa, 0x45f0, 0xdf41, 0x4dfb, 0x8b5c, 0x1, 0x0);
        gbc.writeMem(0xd904, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xc0fa);
        EXPECT(gbc.pc(), 0xd906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd904), 0xcb);
        EXPECT(gbc.readMem(0xd905), 0x88);
        // CB 88 00E4
        gbc.setState(0x5e6d, 0xb9ea, 0xb4e0, 0x3dc4, 0x4455, 0x88ee, 0x1, 0x0);
        gbc.writeMem(0x5e6d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb9ea);
        EXPECT(gbc.pc(), 0x5e6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00E5
        gbc.setState(0x3f04, 0x4d59, 0xec20, 0xc955, 0x266f, 0x139b, 0x1, 0x0);
        gbc.writeMem(0x3f04, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x4d59);
        EXPECT(gbc.pc(), 0x3f06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00E6
        gbc.setState(0x5b0a, 0xee78, 0xd250, 0x1be8, 0x9cf8, 0xd944, 0x1, 0x1);
        gbc.writeMem(0x5b0a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0xee78);
        EXPECT(gbc.pc(), 0x5b0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00E7
        gbc.setState(0x1660, 0x3736, 0x2d20, 0x922c, 0x1136, 0x40b8, 0x0, 0x1);
        gbc.writeMem(0x1660, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x3736);
        EXPECT(gbc.pc(), 0x1662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00E8
        gbc.setState(0x63d1, 0x6935, 0x2640, 0xd009, 0x9a39, 0x749a, 0x0, 0x0);
        gbc.writeMem(0x63d1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x6935);
        EXPECT(gbc.pc(), 0x63d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00E9
        gbc.setState(0x7ffb, 0x6b1d, 0xa130, 0x59de, 0x2da4, 0x335b, 0x1, 0x1);
        gbc.writeMem(0x7ffb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x6b1d);
        EXPECT(gbc.pc(), 0x7ffd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00EA
        gbc.setState(0x332c, 0xb4f4, 0x6680, 0xa605, 0x20e3, 0x238e, 0x1, 0x1);
        gbc.writeMem(0x332c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xb4f4);
        EXPECT(gbc.pc(), 0x332e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00EB
        gbc.setState(0xb8ee, 0x28f1, 0xda0, 0x2ec0, 0x568, 0x9cf2, 0x1, 0x0);
        gbc.writeMem(0xb8ee, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x28f1);
        EXPECT(gbc.pc(), 0xb8f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8ee), 0xcb);
        EXPECT(gbc.readMem(0xb8ef), 0x88);
        // CB 88 00EC
        gbc.setState(0xb3dc, 0x8268, 0xa000, 0xb85a, 0x205d, 0x2804, 0x1, 0x0);
        gbc.writeMem(0xb3dc, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8268);
        EXPECT(gbc.pc(), 0xb3de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3dc), 0xcb);
        EXPECT(gbc.readMem(0xb3dd), 0x88);
        // CB 88 00ED
        gbc.setState(0x3441, 0x8b6, 0x1290, 0x4c59, 0xc739, 0x3824, 0x1, 0x0);
        gbc.writeMem(0x3441, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8b6);
        EXPECT(gbc.pc(), 0x3443);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00EE
        gbc.setState(0x4e92, 0x66e8, 0xcb70, 0xa9cc, 0x45b3, 0xd36f, 0x0, 0x0);
        gbc.writeMem(0x4e92, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x66e8);
        EXPECT(gbc.pc(), 0x4e94);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00F0
        gbc.setState(0x23f1, 0x5cc5, 0x2440, 0xb3c6, 0x25ed, 0xe42c, 0x1, 0x0);
        gbc.writeMem(0x23f1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x5cc5);
        EXPECT(gbc.pc(), 0x23f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00F1
        gbc.setState(0x6660, 0xeec9, 0x2750, 0xc35, 0xb38d, 0x601c, 0x0, 0x0);
        gbc.writeMem(0x6660, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xeec9);
        EXPECT(gbc.pc(), 0x6662);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00F2
        gbc.setState(0xb201, 0x6010, 0x9a40, 0x3665, 0x61d9, 0x5ee4, 0x1, 0x1);
        gbc.writeMem(0xb201, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6010);
        EXPECT(gbc.pc(), 0xb203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb201), 0xcb);
        EXPECT(gbc.readMem(0xb202), 0x88);
        // CB 88 00F3
        gbc.setState(0x487d, 0xc7b9, 0xa980, 0xc249, 0x86b2, 0x9286, 0x0, 0x1);
        gbc.writeMem(0x487d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xc7b9);
        EXPECT(gbc.pc(), 0x487f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00F4
        gbc.setState(0x3824, 0xb61d, 0x4ea0, 0x91e3, 0x27a, 0xebd, 0x1, 0x1);
        gbc.writeMem(0x3824, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xb61d);
        EXPECT(gbc.pc(), 0x3826);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00F5
        gbc.setState(0xc529, 0xd9c1, 0xd330, 0x5e1, 0x19a, 0xbafe, 0x0, 0x1);
        gbc.writeMem(0xc529, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd9c1);
        EXPECT(gbc.pc(), 0xc52b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc529), 0xcb);
        EXPECT(gbc.readMem(0xc52a), 0x88);
        // CB 88 00F6
        gbc.setState(0x6ed8, 0xc00, 0x3c0, 0xb3b0, 0x2d34, 0x56f6, 0x0, 0x0);
        gbc.writeMem(0x6ed8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xc00);
        EXPECT(gbc.pc(), 0x6eda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00F7
        gbc.setState(0x7314, 0x95d9, 0x3c30, 0xea65, 0x6a89, 0x294c, 0x1, 0x0);
        gbc.writeMem(0x7314, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x95d9);
        EXPECT(gbc.pc(), 0x7316);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00F8
        gbc.setState(0xa3eb, 0xaef5, 0x63b0, 0x3070, 0x3d8c, 0x8de0, 0x0, 0x1);
        gbc.writeMem(0xa3eb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xaef5);
        EXPECT(gbc.pc(), 0xa3ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3eb), 0xcb);
        EXPECT(gbc.readMem(0xa3ec), 0x88);
        // CB 88 00FA
        gbc.setState(0x79c4, 0x5866, 0x85b0, 0x3d8a, 0x9074, 0x4a82, 0x0, 0x1);
        gbc.writeMem(0x79c4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x5866);
        EXPECT(gbc.pc(), 0x79c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00FB
        gbc.setState(0x32c9, 0x5350, 0xd80, 0xd63f, 0xc1d0, 0xaa5b, 0x1, 0x0);
        gbc.writeMem(0x32c9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5350);
        EXPECT(gbc.pc(), 0x32cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 00FD
        gbc.setState(0xf08, 0xbd4e, 0xa4b0, 0x29f4, 0x18b6, 0x88ba, 0x0, 0x0);
        gbc.writeMem(0xf08, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xbd4e);
        EXPECT(gbc.pc(), 0xf0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 00FE
        gbc.setState(0xed63, 0xd9ed, 0xd450, 0x3e70, 0x22fe, 0xc6dd, 0x1, 0x0);
        gbc.writeMem(0xed63, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xd9ed);
        EXPECT(gbc.pc(), 0xed65);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed63), 0xcb);
        EXPECT(gbc.readMem(0xed64), 0x88);
        // CB 88 00FF
        gbc.setState(0xecea, 0x3e35, 0x9b20, 0x9a37, 0x82d3, 0x8c0e, 0x0, 0x0);
        gbc.writeMem(0xecea, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x3e35);
        EXPECT(gbc.pc(), 0xecec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecea), 0xcb);
        EXPECT(gbc.readMem(0xeceb), 0x88);
        // CB 88 0100
        gbc.setState(0x670d, 0x959a, 0x4700, 0xfbeb, 0x72bc, 0x96a7, 0x1, 0x1);
        gbc.writeMem(0x670d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x959a);
        EXPECT(gbc.pc(), 0x670f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0101
        gbc.setState(0x348f, 0x6d5, 0x5860, 0x3b75, 0x64bf, 0xe158, 0x0, 0x1);
        gbc.writeMem(0x348f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6d5);
        EXPECT(gbc.pc(), 0x3491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0102
        gbc.setState(0x6624, 0xacc4, 0xa540, 0x5e49, 0x7742, 0xc15e, 0x0, 0x0);
        gbc.writeMem(0x6624, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xacc4);
        EXPECT(gbc.pc(), 0x6626);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0103
        gbc.setState(0xb694, 0x12f5, 0x9f20, 0x21b2, 0xa893, 0xa558, 0x1, 0x1);
        gbc.writeMem(0xb694, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x12f5);
        EXPECT(gbc.pc(), 0xb696);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb694), 0xcb);
        EXPECT(gbc.readMem(0xb695), 0x88);
        // CB 88 0104
        gbc.setState(0x73d5, 0xb744, 0x5f70, 0x326d, 0x2451, 0x47dd, 0x1, 0x1);
        gbc.writeMem(0x73d5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xb744);
        EXPECT(gbc.pc(), 0x73d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0106
        gbc.setState(0xb00c, 0xfc24, 0x47a0, 0xf5e, 0xd2f, 0xaba6, 0x0, 0x0);
        gbc.writeMem(0xb00c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xfc24);
        EXPECT(gbc.pc(), 0xb00e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb00c), 0xcb);
        EXPECT(gbc.readMem(0xb00d), 0x88);
        // CB 88 0107
        gbc.setState(0x4803, 0xc7ff, 0x65a0, 0x5bbd, 0x2c49, 0xd4a, 0x0, 0x0);
        gbc.writeMem(0x4803, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xc7ff);
        EXPECT(gbc.pc(), 0x4805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0108
        gbc.setState(0x808a, 0x337c, 0xd290, 0x2c98, 0x9ff5, 0x6a0a, 0x0, 0x1);
        gbc.writeMem(0x808a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x337c);
        EXPECT(gbc.pc(), 0x808c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x808a), 0xcb);
        EXPECT(gbc.readMem(0x808b), 0x88);
        // CB 88 0109
        gbc.setState(0xc3ba, 0x9393, 0xc860, 0x91aa, 0xa783, 0x441d, 0x0, 0x0);
        gbc.writeMem(0xc3ba, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x9393);
        EXPECT(gbc.pc(), 0xc3bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3ba), 0xcb);
        EXPECT(gbc.readMem(0xc3bb), 0x88);
        // CB 88 010A
        gbc.setState(0x16ac, 0x2ccf, 0xc2d0, 0xc628, 0x45ff, 0x73cf, 0x0, 0x0);
        gbc.writeMem(0x16ac, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x2ccf);
        EXPECT(gbc.pc(), 0x16ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 010B
        gbc.setState(0x6b6e, 0x2ff4, 0x4190, 0x31f7, 0x66c2, 0xd7df, 0x0, 0x1);
        gbc.writeMem(0x6b6e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x2ff4);
        EXPECT(gbc.pc(), 0x6b70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 010C
        gbc.setState(0xdc95, 0x97f7, 0x3520, 0x1235, 0x77fd, 0xecd5, 0x1, 0x0);
        gbc.writeMem(0xdc95, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x97f7);
        EXPECT(gbc.pc(), 0xdc97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc95), 0xcb);
        EXPECT(gbc.readMem(0xdc96), 0x88);
        // CB 88 010D
        gbc.setState(0x45a7, 0xa109, 0x7c20, 0x5e15, 0xfc35, 0xd60b, 0x0, 0x1);
        gbc.writeMem(0x45a7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xa109);
        EXPECT(gbc.pc(), 0x45a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 010E
        gbc.setState(0x95e6, 0xe26a, 0xf0e0, 0xd5a5, 0xb5d5, 0xe76, 0x0, 0x0);
        gbc.writeMem(0x95e6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe26a);
        EXPECT(gbc.pc(), 0x95e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x95e6), 0xcb);
        EXPECT(gbc.readMem(0x95e7), 0x88);
        // CB 88 010F
        gbc.setState(0xb705, 0x32d1, 0x9780, 0xc265, 0xa64e, 0xb76a, 0x0, 0x0);
        gbc.writeMem(0xb705, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x32d1);
        EXPECT(gbc.pc(), 0xb707);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb705), 0xcb);
        EXPECT(gbc.readMem(0xb706), 0x88);
        // CB 88 0110
        gbc.setState(0xd754, 0x87b7, 0xfee0, 0x294, 0xc3aa, 0x8edb, 0x0, 0x1);
        gbc.writeMem(0xd754, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x87b7);
        EXPECT(gbc.pc(), 0xd756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd754), 0xcb);
        EXPECT(gbc.readMem(0xd755), 0x88);
        // CB 88 0111
        gbc.setState(0x404d, 0x49d2, 0xe2d0, 0x93f7, 0xd64e, 0xb3f8, 0x0, 0x0);
        gbc.writeMem(0x404d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x49d2);
        EXPECT(gbc.pc(), 0x404f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0112
        gbc.setState(0x6e61, 0x9778, 0x7c10, 0x2080, 0x5370, 0xa001, 0x0, 0x0);
        gbc.writeMem(0x6e61, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x9778);
        EXPECT(gbc.pc(), 0x6e63);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0113
        gbc.setState(0x7a2c, 0x4be5, 0x6460, 0x5b5a, 0x7ea9, 0xe626, 0x1, 0x0);
        gbc.writeMem(0x7a2c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4be5);
        EXPECT(gbc.pc(), 0x7a2e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0114
        gbc.setState(0x8a78, 0x9641, 0x5300, 0xf40b, 0xc064, 0x4bba, 0x1, 0x0);
        gbc.writeMem(0x8a78, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x9641);
        EXPECT(gbc.pc(), 0x8a7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a78), 0xcb);
        EXPECT(gbc.readMem(0x8a79), 0x88);
        // CB 88 0115
        gbc.setState(0xe211, 0xa04c, 0xdfa0, 0x4333, 0x50a9, 0x16a7, 0x1, 0x0);
        gbc.writeMem(0xe211, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xa04c);
        EXPECT(gbc.pc(), 0xe213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe211), 0xcb);
        EXPECT(gbc.readMem(0xe212), 0x88);
        // CB 88 0116
        gbc.setState(0xedf6, 0x21ba, 0x900, 0xb083, 0x4b02, 0x1eb0, 0x0, 0x1);
        gbc.writeMem(0xedf6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x21ba);
        EXPECT(gbc.pc(), 0xedf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedf6), 0xcb);
        EXPECT(gbc.readMem(0xedf7), 0x88);
        // CB 88 0117
        gbc.setState(0xecef, 0x7911, 0x6960, 0xb516, 0x1730, 0x54c7, 0x1, 0x0);
        gbc.writeMem(0xecef, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x7911);
        EXPECT(gbc.pc(), 0xecf1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecef), 0xcb);
        EXPECT(gbc.readMem(0xecf0), 0x88);
        // CB 88 0118
        gbc.setState(0x498c, 0x5f9e, 0x1cb0, 0xc8b0, 0x44ec, 0x38df, 0x0, 0x1);
        gbc.writeMem(0x498c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x5f9e);
        EXPECT(gbc.pc(), 0x498e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0119
        gbc.setState(0x9f66, 0x6f7e, 0xf2c0, 0x9850, 0x2da7, 0x738a, 0x0, 0x1);
        gbc.writeMem(0x9f66, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x6f7e);
        EXPECT(gbc.pc(), 0x9f68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f66), 0xcb);
        EXPECT(gbc.readMem(0x9f67), 0x88);
        // CB 88 011A
        gbc.setState(0x4d5, 0x7245, 0x63a0, 0x68f9, 0xf415, 0x75cc, 0x1, 0x0);
        gbc.writeMem(0x4d5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x7245);
        EXPECT(gbc.pc(), 0x4d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 011B
        gbc.setState(0xf53, 0x4dfa, 0x3940, 0xf20f, 0xc5b1, 0xc08b, 0x0, 0x1);
        gbc.writeMem(0xf53, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x4dfa);
        EXPECT(gbc.pc(), 0xf55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 011C
        gbc.setState(0xdb77, 0x78a5, 0x8630, 0x2970, 0xdc79, 0x41ff, 0x1, 0x0);
        gbc.writeMem(0xdb77, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x78a5);
        EXPECT(gbc.pc(), 0xdb79);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb77), 0xcb);
        EXPECT(gbc.readMem(0xdb78), 0x88);
        // CB 88 011D
        gbc.setState(0xedd5, 0x385a, 0x6500, 0xeeb0, 0x3a68, 0x4677, 0x1, 0x1);
        gbc.writeMem(0xedd5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x385a);
        EXPECT(gbc.pc(), 0xedd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedd5), 0xcb);
        EXPECT(gbc.readMem(0xedd6), 0x88);
        // CB 88 011E
        gbc.setState(0xd2d5, 0xa73b, 0x7ee0, 0xbc5d, 0x7fa, 0x2be5, 0x1, 0x1);
        gbc.writeMem(0xd2d5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xa73b);
        EXPECT(gbc.pc(), 0xd2d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2d5), 0xcb);
        EXPECT(gbc.readMem(0xd2d6), 0x88);
        // CB 88 011F
        gbc.setState(0x678f, 0x453c, 0x830, 0xaf70, 0x1a0, 0x1797, 0x0, 0x0);
        gbc.writeMem(0x678f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x453c);
        EXPECT(gbc.pc(), 0x6791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0120
        gbc.setState(0x82af, 0x4068, 0x2fb0, 0x1db8, 0x5ea2, 0xf7, 0x0, 0x0);
        gbc.writeMem(0x82af, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x4068);
        EXPECT(gbc.pc(), 0x82b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82af), 0xcb);
        EXPECT(gbc.readMem(0x82b0), 0x88);
        // CB 88 0121
        gbc.setState(0x1366, 0x3134, 0xef40, 0x4557, 0x3d7a, 0x5f20, 0x0, 0x1);
        gbc.writeMem(0x1366, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x3134);
        EXPECT(gbc.pc(), 0x1368);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0122
        gbc.setState(0xa9f0, 0xfdbc, 0xabb0, 0x5c22, 0x8737, 0x23f8, 0x0, 0x0);
        gbc.writeMem(0xa9f0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xfdbc);
        EXPECT(gbc.pc(), 0xa9f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9f0), 0xcb);
        EXPECT(gbc.readMem(0xa9f1), 0x88);
        // CB 88 0123
        gbc.setState(0x343, 0x70a9, 0x88c0, 0x35d6, 0x36d, 0xb97, 0x1, 0x1);
        gbc.writeMem(0x343, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x70a9);
        EXPECT(gbc.pc(), 0x345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0124
        gbc.setState(0x836d, 0xf5e7, 0x9d80, 0x9611, 0x9f24, 0x31a7, 0x1, 0x0);
        gbc.writeMem(0x836d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xf5e7);
        EXPECT(gbc.pc(), 0x836f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x836d), 0xcb);
        EXPECT(gbc.readMem(0x836e), 0x88);
        // CB 88 0125
        gbc.setState(0x97d3, 0xface, 0x5150, 0x56fe, 0x764b, 0xbb50, 0x0, 0x0);
        gbc.writeMem(0x97d3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xface);
        EXPECT(gbc.pc(), 0x97d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97d3), 0xcb);
        EXPECT(gbc.readMem(0x97d4), 0x88);
        // CB 88 0126
        gbc.setState(0x424a, 0xe591, 0x3b0, 0xe733, 0x5cec, 0x587b, 0x1, 0x1);
        gbc.writeMem(0x424a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xe591);
        EXPECT(gbc.pc(), 0x424c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0127
        gbc.setState(0x23ab, 0xe312, 0xa450, 0xf42b, 0x6ac0, 0x7c87, 0x0, 0x1);
        gbc.writeMem(0x23ab, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xe312);
        EXPECT(gbc.pc(), 0x23ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0128
        gbc.setState(0x9011, 0xefb6, 0x44c0, 0xfdba, 0xfadb, 0x6f64, 0x1, 0x0);
        gbc.writeMem(0x9011, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xefb6);
        EXPECT(gbc.pc(), 0x9013);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9011), 0xcb);
        EXPECT(gbc.readMem(0x9012), 0x88);
        // CB 88 0129
        gbc.setState(0xb764, 0x51b1, 0x48b0, 0xa4bd, 0x6e8, 0xcc6a, 0x0, 0x1);
        gbc.writeMem(0xb764, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x51b1);
        EXPECT(gbc.pc(), 0xb766);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb764), 0xcb);
        EXPECT(gbc.readMem(0xb765), 0x88);
        // CB 88 012A
        gbc.setState(0xe6ea, 0xcb7e, 0x4850, 0xf9df, 0x1555, 0x9f60, 0x1, 0x0);
        gbc.writeMem(0xe6ea, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xcb7e);
        EXPECT(gbc.pc(), 0xe6ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6ea), 0xcb);
        EXPECT(gbc.readMem(0xe6eb), 0x88);
        // CB 88 012B
        gbc.setState(0xc3d9, 0xac3e, 0x5ae0, 0xbb8d, 0x1bc9, 0x10ad, 0x0, 0x0);
        gbc.writeMem(0xc3d9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xac3e);
        EXPECT(gbc.pc(), 0xc3db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3d9), 0xcb);
        EXPECT(gbc.readMem(0xc3da), 0x88);
        // CB 88 012C
        gbc.setState(0xa1db, 0x6a88, 0xc320, 0x816a, 0xf165, 0x3595, 0x0, 0x1);
        gbc.writeMem(0xa1db, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6a88);
        EXPECT(gbc.pc(), 0xa1dd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1db), 0xcb);
        EXPECT(gbc.readMem(0xa1dc), 0x88);
        // CB 88 012E
        gbc.setState(0xdb57, 0x4cba, 0xc480, 0x48eb, 0xcddc, 0x10e2, 0x1, 0x1);
        gbc.writeMem(0xdb57, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x4cba);
        EXPECT(gbc.pc(), 0xdb59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb57), 0xcb);
        EXPECT(gbc.readMem(0xdb58), 0x88);
        // CB 88 012F
        gbc.setState(0xb8c2, 0x1d16, 0x8330, 0xfdd2, 0x5ab7, 0x28bf, 0x0, 0x1);
        gbc.writeMem(0xb8c2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x1d16);
        EXPECT(gbc.pc(), 0xb8c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8c2), 0xcb);
        EXPECT(gbc.readMem(0xb8c3), 0x88);
        // CB 88 0130
        gbc.setState(0x995d, 0xbdbd, 0x1ee0, 0x436e, 0x65d6, 0xcb3d, 0x0, 0x0);
        gbc.writeMem(0x995d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbdbd);
        EXPECT(gbc.pc(), 0x995f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x995d), 0xcb);
        EXPECT(gbc.readMem(0x995e), 0x88);
        // CB 88 0131
        gbc.setState(0xbf28, 0xd894, 0x4ff0, 0xfc24, 0x5906, 0x5343, 0x1, 0x1);
        gbc.writeMem(0xbf28, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd894);
        EXPECT(gbc.pc(), 0xbf2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf28), 0xcb);
        EXPECT(gbc.readMem(0xbf29), 0x88);
        // CB 88 0132
        gbc.setState(0xed64, 0x3c7e, 0xa440, 0x61c2, 0xb24f, 0xd5c0, 0x1, 0x1);
        gbc.writeMem(0xed64, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3c7e);
        EXPECT(gbc.pc(), 0xed66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed64), 0xcb);
        EXPECT(gbc.readMem(0xed65), 0x88);
        // CB 88 0133
        gbc.setState(0x586f, 0xb8c4, 0xb300, 0xb695, 0x60e6, 0xed03, 0x0, 0x0);
        gbc.writeMem(0x586f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb8c4);
        EXPECT(gbc.pc(), 0x5871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0134
        gbc.setState(0x6d20, 0x6893, 0xc280, 0xafd1, 0x917e, 0xab5, 0x0, 0x0);
        gbc.writeMem(0x6d20, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x6893);
        EXPECT(gbc.pc(), 0x6d22);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0135
        gbc.setState(0x1a83, 0x295e, 0xd90, 0x8fa0, 0x2bb1, 0xa669, 0x1, 0x0);
        gbc.writeMem(0x1a83, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x295e);
        EXPECT(gbc.pc(), 0x1a85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0136
        gbc.setState(0xdc9b, 0x258e, 0xca70, 0x9a81, 0xf301, 0x2060, 0x1, 0x0);
        gbc.writeMem(0xdc9b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x258e);
        EXPECT(gbc.pc(), 0xdc9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc9b), 0xcb);
        EXPECT(gbc.readMem(0xdc9c), 0x88);
        // CB 88 0137
        gbc.setState(0xaa13, 0x2029, 0xea0, 0x2514, 0x5a93, 0x8577, 0x1, 0x1);
        gbc.writeMem(0xaa13, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x2029);
        EXPECT(gbc.pc(), 0xaa15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa13), 0xcb);
        EXPECT(gbc.readMem(0xaa14), 0x88);
        // CB 88 0138
        gbc.setState(0xf2e, 0xe80d, 0x3150, 0x62ad, 0x7a23, 0x6151, 0x0, 0x0);
        gbc.writeMem(0xf2e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xe80d);
        EXPECT(gbc.pc(), 0xf30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0139
        gbc.setState(0xe9d2, 0x5cf6, 0x1570, 0xbbc2, 0x11ff, 0xce7, 0x1, 0x0);
        gbc.writeMem(0xe9d2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x5cf6);
        EXPECT(gbc.pc(), 0xe9d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9d2), 0xcb);
        EXPECT(gbc.readMem(0xe9d3), 0x88);
        // CB 88 013A
        gbc.setState(0xb09a, 0x661f, 0xd7e0, 0x6d3a, 0xee10, 0xa3f, 0x1, 0x0);
        gbc.writeMem(0xb09a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0x661f);
        EXPECT(gbc.pc(), 0xb09c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb09a), 0xcb);
        EXPECT(gbc.readMem(0xb09b), 0x88);
        // CB 88 013B
        gbc.setState(0x4618, 0xe5fd, 0x8b20, 0xf8c3, 0x8319, 0x430e, 0x1, 0x1);
        gbc.writeMem(0x4618, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xe5fd);
        EXPECT(gbc.pc(), 0x461a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 013C
        gbc.setState(0x7245, 0x5d9b, 0x5c20, 0xc75, 0xdde6, 0xaf4, 0x0, 0x1);
        gbc.writeMem(0x7245, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x5d9b);
        EXPECT(gbc.pc(), 0x7247);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 013D
        gbc.setState(0xd71b, 0x596b, 0x9750, 0x3f1b, 0x239, 0x9a44, 0x0, 0x1);
        gbc.writeMem(0xd71b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x596b);
        EXPECT(gbc.pc(), 0xd71d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd71b), 0xcb);
        EXPECT(gbc.readMem(0xd71c), 0x88);
        // CB 88 013E
        gbc.setState(0x1ae0, 0x6d36, 0x5ac0, 0x305e, 0x692d, 0xc01e, 0x0, 0x1);
        gbc.writeMem(0x1ae0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6d36);
        EXPECT(gbc.pc(), 0x1ae2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 013F
        gbc.setState(0x7b6c, 0xceac, 0xc610, 0x9b82, 0x6a35, 0x53f4, 0x1, 0x1);
        gbc.writeMem(0x7b6c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xceac);
        EXPECT(gbc.pc(), 0x7b6e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0140
        gbc.setState(0x903, 0x69a2, 0x88e0, 0x4441, 0x106, 0x3ba6, 0x0, 0x0);
        gbc.writeMem(0x903, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x69a2);
        EXPECT(gbc.pc(), 0x905);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0141
        gbc.setState(0xaff6, 0xe215, 0x9e50, 0x53d0, 0xe994, 0xbe5e, 0x0, 0x0);
        gbc.writeMem(0xaff6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xe215);
        EXPECT(gbc.pc(), 0xaff8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff6), 0xcb);
        EXPECT(gbc.readMem(0xaff7), 0x88);
        // CB 88 0142
        gbc.setState(0xe9bd, 0x3617, 0x190, 0x5ad2, 0xba23, 0x9660, 0x0, 0x1);
        gbc.writeMem(0xe9bd, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x3617);
        EXPECT(gbc.pc(), 0xe9bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9bd), 0xcb);
        EXPECT(gbc.readMem(0xe9be), 0x88);
        // CB 88 0143
        gbc.setState(0x740e, 0x2d1e, 0x1e30, 0xdcd9, 0xa40e, 0xd03d, 0x0, 0x0);
        gbc.writeMem(0x740e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x2d1e);
        EXPECT(gbc.pc(), 0x7410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0144
        gbc.setState(0x50d3, 0xbf31, 0xffd0, 0x6e72, 0xdb0f, 0xc051, 0x1, 0x1);
        gbc.writeMem(0x50d3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xbf31);
        EXPECT(gbc.pc(), 0x50d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0145
        gbc.setState(0x61eb, 0x6cb6, 0x3580, 0x6f2b, 0xd321, 0x500c, 0x1, 0x1);
        gbc.writeMem(0x61eb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x6cb6);
        EXPECT(gbc.pc(), 0x61ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0147
        gbc.setState(0x292f, 0xaa59, 0xf790, 0xd891, 0x457d, 0xfc4c, 0x0, 0x0);
        gbc.writeMem(0x292f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xaa59);
        EXPECT(gbc.pc(), 0x2931);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0148
        gbc.setState(0xcbe8, 0x5650, 0xc480, 0x9088, 0xd5e8, 0x3c2a, 0x1, 0x1);
        gbc.writeMem(0xcbe8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x5650);
        EXPECT(gbc.pc(), 0xcbea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbe8), 0xcb);
        EXPECT(gbc.readMem(0xcbe9), 0x88);
        // CB 88 0149
        gbc.setState(0x6369, 0xc3c, 0xae30, 0x30ac, 0xc425, 0xf86e, 0x1, 0x0);
        gbc.writeMem(0x6369, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xc3c);
        EXPECT(gbc.pc(), 0x636b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 014A
        gbc.setState(0x9527, 0x7028, 0x7ea0, 0xfa7b, 0xd4fb, 0x9254, 0x0, 0x0);
        gbc.writeMem(0x9527, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x7028);
        EXPECT(gbc.pc(), 0x9529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9527), 0xcb);
        EXPECT(gbc.readMem(0x9528), 0x88);
        // CB 88 014B
        gbc.setState(0x3433, 0x353c, 0x2630, 0xd1f8, 0x776f, 0x945c, 0x1, 0x1);
        gbc.writeMem(0x3433, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x353c);
        EXPECT(gbc.pc(), 0x3435);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 014C
        gbc.setState(0xeabc, 0xca9, 0x60a0, 0x48aa, 0x22e7, 0xe1b, 0x0, 0x0);
        gbc.writeMem(0xeabc, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xca9);
        EXPECT(gbc.pc(), 0xeabe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeabc), 0xcb);
        EXPECT(gbc.readMem(0xeabd), 0x88);
        // CB 88 014D
        gbc.setState(0xd5df, 0xb83d, 0x8c0, 0x9faf, 0xae6e, 0x2777, 0x1, 0x0);
        gbc.writeMem(0xd5df, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb83d);
        EXPECT(gbc.pc(), 0xd5e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5df), 0xcb);
        EXPECT(gbc.readMem(0xd5e0), 0x88);
        // CB 88 014E
        gbc.setState(0xa163, 0x51fc, 0x5c0, 0xd9ab, 0xaacf, 0x761d, 0x1, 0x0);
        gbc.writeMem(0xa163, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x51fc);
        EXPECT(gbc.pc(), 0xa165);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa163), 0xcb);
        EXPECT(gbc.readMem(0xa164), 0x88);
        // CB 88 014F
        gbc.setState(0x95b, 0x20fc, 0x23c0, 0x6380, 0xd596, 0x8643, 0x0, 0x0);
        gbc.writeMem(0x95b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x20fc);
        EXPECT(gbc.pc(), 0x95d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0150
        gbc.setState(0x9f45, 0x1883, 0x49e0, 0x8ff6, 0x8d67, 0x2a7d, 0x0, 0x0);
        gbc.writeMem(0x9f45, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x1883);
        EXPECT(gbc.pc(), 0x9f47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f45), 0xcb);
        EXPECT(gbc.readMem(0x9f46), 0x88);
        // CB 88 0151
        gbc.setState(0x9131, 0xf8b8, 0xb980, 0x429c, 0x3522, 0x6e3a, 0x0, 0x0);
        gbc.writeMem(0x9131, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xf8b8);
        EXPECT(gbc.pc(), 0x9133);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9131), 0xcb);
        EXPECT(gbc.readMem(0x9132), 0x88);
        // CB 88 0152
        gbc.setState(0xaff1, 0x780f, 0x93e0, 0x6864, 0x3dc1, 0x82ea, 0x1, 0x0);
        gbc.writeMem(0xaff1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x780f);
        EXPECT(gbc.pc(), 0xaff3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaff1), 0xcb);
        EXPECT(gbc.readMem(0xaff2), 0x88);
        // CB 88 0153
        gbc.setState(0xa51a, 0xa60e, 0xd860, 0x7383, 0x7532, 0xe6a9, 0x1, 0x0);
        gbc.writeMem(0xa51a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xa60e);
        EXPECT(gbc.pc(), 0xa51c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa51a), 0xcb);
        EXPECT(gbc.readMem(0xa51b), 0x88);
        // CB 88 0154
        gbc.setState(0xab20, 0xbb3d, 0x8c10, 0x5dcf, 0x96ec, 0xdcac, 0x1, 0x0);
        gbc.writeMem(0xab20, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xbb3d);
        EXPECT(gbc.pc(), 0xab22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab20), 0xcb);
        EXPECT(gbc.readMem(0xab21), 0x88);
        // CB 88 0155
        gbc.setState(0x2b40, 0xe722, 0xd730, 0x81a7, 0xea41, 0xfafe, 0x0, 0x0);
        gbc.writeMem(0x2b40, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xe722);
        EXPECT(gbc.pc(), 0x2b42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0156
        gbc.setState(0x960b, 0x65b8, 0xd740, 0x1eda, 0xb0cd, 0x2c0d, 0x0, 0x1);
        gbc.writeMem(0x960b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x65b8);
        EXPECT(gbc.pc(), 0x960d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x960b), 0xcb);
        EXPECT(gbc.readMem(0x960c), 0x88);
        // CB 88 0157
        gbc.setState(0xa592, 0xc51e, 0x83f0, 0x10b8, 0x5231, 0x1c3e, 0x0, 0x0);
        gbc.writeMem(0xa592, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc51e);
        EXPECT(gbc.pc(), 0xa594);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa592), 0xcb);
        EXPECT(gbc.readMem(0xa593), 0x88);
        // CB 88 0158
        gbc.setState(0x507a, 0x2b4a, 0xba20, 0x2bcd, 0x5b0f, 0xb446, 0x0, 0x1);
        gbc.writeMem(0x507a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x2b4a);
        EXPECT(gbc.pc(), 0x507c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0159
        gbc.setState(0x8442, 0xe07b, 0x83f0, 0x595e, 0x2161, 0xf6da, 0x1, 0x1);
        gbc.writeMem(0x8442, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xe07b);
        EXPECT(gbc.pc(), 0x8444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8442), 0xcb);
        EXPECT(gbc.readMem(0x8443), 0x88);
        // CB 88 015A
        gbc.setState(0x1d17, 0x8b89, 0x52f0, 0xcd1c, 0x25d1, 0xce05, 0x1, 0x0);
        gbc.writeMem(0x1d17, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x8b89);
        EXPECT(gbc.pc(), 0x1d19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 015B
        gbc.setState(0x3048, 0x7f11, 0x8ac0, 0x2845, 0x671d, 0xecf8, 0x1, 0x0);
        gbc.writeMem(0x3048, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7f11);
        EXPECT(gbc.pc(), 0x304a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 015C
        gbc.setState(0x6a04, 0xc056, 0x77a0, 0xd77e, 0xfa37, 0x937c, 0x1, 0x1);
        gbc.writeMem(0x6a04, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc056);
        EXPECT(gbc.pc(), 0x6a06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 015D
        gbc.setState(0xcf43, 0xb4d9, 0xa870, 0x4f01, 0x47a4, 0x6603, 0x1, 0x0);
        gbc.writeMem(0xcf43, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0xb4d9);
        EXPECT(gbc.pc(), 0xcf45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf43), 0xcb);
        EXPECT(gbc.readMem(0xcf44), 0x88);
        // CB 88 015E
        gbc.setState(0x1afe, 0xccc9, 0xfdf0, 0xffa0, 0x734d, 0xd621, 0x0, 0x1);
        gbc.writeMem(0x1afe, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xccc9);
        EXPECT(gbc.pc(), 0x1b00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 015F
        gbc.setState(0x7f96, 0x6ce5, 0xd5d0, 0x6621, 0x2aa0, 0x975d, 0x0, 0x1);
        gbc.writeMem(0x7f96, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x6ce5);
        EXPECT(gbc.pc(), 0x7f98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0160
        gbc.setState(0xd115, 0xa31f, 0xd920, 0x545b, 0x3ec9, 0x5981, 0x0, 0x1);
        gbc.writeMem(0xd115, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xa31f);
        EXPECT(gbc.pc(), 0xd117);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd115), 0xcb);
        EXPECT(gbc.readMem(0xd116), 0x88);
        // CB 88 0161
        gbc.setState(0x137f, 0xf4be, 0x58d0, 0xc881, 0x4197, 0xf42f, 0x1, 0x1);
        gbc.writeMem(0x137f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xf4be);
        EXPECT(gbc.pc(), 0x1381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0162
        gbc.setState(0x96c0, 0x29d9, 0xc530, 0xfa3a, 0x841b, 0xc6bb, 0x0, 0x0);
        gbc.writeMem(0x96c0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x29d9);
        EXPECT(gbc.pc(), 0x96c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96c0), 0xcb);
        EXPECT(gbc.readMem(0x96c1), 0x88);
        // CB 88 0164
        gbc.setState(0x581d, 0x4195, 0x1110, 0x54d, 0x1812, 0xc2be, 0x1, 0x1);
        gbc.writeMem(0x581d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x4195);
        EXPECT(gbc.pc(), 0x581f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0165
        gbc.setState(0x46dd, 0x4326, 0x9330, 0x6bf2, 0x6b92, 0x10e7, 0x1, 0x0);
        gbc.writeMem(0x46dd, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x4326);
        EXPECT(gbc.pc(), 0x46df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0166
        gbc.setState(0xe07a, 0xc4a4, 0x4900, 0x2b8a, 0x5e2d, 0xab67, 0x0, 0x1);
        gbc.writeMem(0xe07a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc4a4);
        EXPECT(gbc.pc(), 0xe07c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe07a), 0xcb);
        EXPECT(gbc.readMem(0xe07b), 0x88);
        // CB 88 0168
        gbc.setState(0x302f, 0xff80, 0x9570, 0x11c, 0x6037, 0x149, 0x1, 0x0);
        gbc.writeMem(0x302f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xff80);
        EXPECT(gbc.pc(), 0x3031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0169
        gbc.setState(0xed42, 0xaff4, 0x3230, 0xa2df, 0x9c20, 0x493d, 0x1, 0x1);
        gbc.writeMem(0xed42, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xaff4);
        EXPECT(gbc.pc(), 0xed44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed42), 0xcb);
        EXPECT(gbc.readMem(0xed43), 0x88);
        // CB 88 016A
        gbc.setState(0x8f9, 0x67ea, 0x64c0, 0x1729, 0x837f, 0x940e, 0x1, 0x0);
        gbc.writeMem(0x8f9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x67ea);
        EXPECT(gbc.pc(), 0x8fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 016B
        gbc.setState(0xd1c9, 0x7903, 0x1b20, 0x3fc2, 0x1ff4, 0x2db7, 0x1, 0x1);
        gbc.writeMem(0xd1c9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7903);
        EXPECT(gbc.pc(), 0xd1cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1c9), 0xcb);
        EXPECT(gbc.readMem(0xd1ca), 0x88);
        // CB 88 016C
        gbc.setState(0x98b4, 0x1596, 0x5620, 0x7da4, 0x9135, 0xceb0, 0x0, 0x1);
        gbc.writeMem(0x98b4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x1596);
        EXPECT(gbc.pc(), 0x98b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98b4), 0xcb);
        EXPECT(gbc.readMem(0x98b5), 0x88);
        // CB 88 016D
        gbc.setState(0x50a0, 0x2a25, 0x5c40, 0x1468, 0xb55c, 0x454e, 0x1, 0x1);
        gbc.writeMem(0x50a0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x2a25);
        EXPECT(gbc.pc(), 0x50a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 016F
        gbc.setState(0x17ed, 0x4bfd, 0xbc00, 0x3369, 0x372d, 0xa3d7, 0x1, 0x0);
        gbc.writeMem(0x17ed, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x4bfd);
        EXPECT(gbc.pc(), 0x17ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0170
        gbc.setState(0x6380, 0x3a2d, 0x9280, 0x392d, 0x6753, 0x884c, 0x0, 0x0);
        gbc.writeMem(0x6380, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x3a2d);
        EXPECT(gbc.pc(), 0x6382);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0171
        gbc.setState(0xde2b, 0xb040, 0x32e0, 0x9c4d, 0x969, 0xff79, 0x1, 0x1);
        gbc.writeMem(0xde2b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb040);
        EXPECT(gbc.pc(), 0xde2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde2b), 0xcb);
        EXPECT(gbc.readMem(0xde2c), 0x88);
        // CB 88 0173
        gbc.setState(0xdaf, 0xc165, 0x8e80, 0xa723, 0xa8ae, 0xe638, 0x0, 0x0);
        gbc.writeMem(0xdaf, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc165);
        EXPECT(gbc.pc(), 0xdb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0174
        gbc.setState(0xab28, 0xcb74, 0xe1d0, 0xea63, 0xdf79, 0x5d24, 0x0, 0x0);
        gbc.writeMem(0xab28, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xcb74);
        EXPECT(gbc.pc(), 0xab2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab28), 0xcb);
        EXPECT(gbc.readMem(0xab29), 0x88);
        // CB 88 0175
        gbc.setState(0x8fea, 0xb3e5, 0x7680, 0x3b5b, 0xfb86, 0xd92b, 0x1, 0x1);
        gbc.writeMem(0x8fea, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xb3e5);
        EXPECT(gbc.pc(), 0x8fec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fea), 0xcb);
        EXPECT(gbc.readMem(0x8feb), 0x88);
        // CB 88 0176
        gbc.setState(0x943c, 0xc683, 0xa0d0, 0xa2dc, 0x7100, 0xeed6, 0x1, 0x0);
        gbc.writeMem(0x943c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xc683);
        EXPECT(gbc.pc(), 0x943e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x943c), 0xcb);
        EXPECT(gbc.readMem(0x943d), 0x88);
        // CB 88 0177
        gbc.setState(0x29be, 0xa9d4, 0x4970, 0xb64, 0x1522, 0x73df, 0x0, 0x1);
        gbc.writeMem(0x29be, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xa9d4);
        EXPECT(gbc.pc(), 0x29c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0178
        gbc.setState(0xcc1c, 0xf285, 0xfbb0, 0x69b2, 0x31b0, 0x7c14, 0x0, 0x1);
        gbc.writeMem(0xcc1c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xf285);
        EXPECT(gbc.pc(), 0xcc1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc1c), 0xcb);
        EXPECT(gbc.readMem(0xcc1d), 0x88);
        // CB 88 0179
        gbc.setState(0xc5bb, 0xfd42, 0x8460, 0xa012, 0xb9cb, 0xa0d4, 0x1, 0x1);
        gbc.writeMem(0xc5bb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xfd42);
        EXPECT(gbc.pc(), 0xc5bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5bb), 0xcb);
        EXPECT(gbc.readMem(0xc5bc), 0x88);
        // CB 88 017A
        gbc.setState(0x7271, 0x3112, 0xba0, 0xfcaf, 0x4eee, 0x4dab, 0x0, 0x0);
        gbc.writeMem(0x7271, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x3112);
        EXPECT(gbc.pc(), 0x7273);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 017B
        gbc.setState(0x73a9, 0xeb0d, 0x8370, 0xa0bf, 0x9b22, 0xf225, 0x0, 0x0);
        gbc.writeMem(0x73a9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xeb0d);
        EXPECT(gbc.pc(), 0x73ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 017C
        gbc.setState(0x568c, 0xdb64, 0x74f0, 0x36e8, 0xabee, 0x6aa8, 0x1, 0x0);
        gbc.writeMem(0x568c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xdb64);
        EXPECT(gbc.pc(), 0x568e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 017D
        gbc.setState(0x3a21, 0x5c2b, 0x72f0, 0x2cfc, 0x3449, 0xdfc0, 0x1, 0x0);
        gbc.writeMem(0x3a21, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x5c2b);
        EXPECT(gbc.pc(), 0x3a23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 017E
        gbc.setState(0xcb5a, 0x8f4a, 0x4bc0, 0xa2d3, 0xf9b2, 0x94e4, 0x1, 0x1);
        gbc.writeMem(0xcb5a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8f4a);
        EXPECT(gbc.pc(), 0xcb5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb5a), 0xcb);
        EXPECT(gbc.readMem(0xcb5b), 0x88);
        // CB 88 017F
        gbc.setState(0xe70a, 0x617b, 0x6bb0, 0xceed, 0x8ef, 0x53f4, 0x1, 0x0);
        gbc.writeMem(0xe70a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x617b);
        EXPECT(gbc.pc(), 0xe70c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe70a), 0xcb);
        EXPECT(gbc.readMem(0xe70b), 0x88);
        // CB 88 0180
        gbc.setState(0x1a7f, 0x6590, 0xff30, 0x4cbd, 0x5e02, 0x7cef, 0x0, 0x1);
        gbc.writeMem(0x1a7f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6590);
        EXPECT(gbc.pc(), 0x1a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0181
        gbc.setState(0x87cb, 0x1296, 0x22e0, 0x3737, 0x81b5, 0x8bf7, 0x1, 0x1);
        gbc.writeMem(0x87cb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x1296);
        EXPECT(gbc.pc(), 0x87cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87cb), 0xcb);
        EXPECT(gbc.readMem(0x87cc), 0x88);
        // CB 88 0182
        gbc.setState(0x4c48, 0x96d9, 0x4f30, 0xb862, 0x4f14, 0x2d16, 0x1, 0x0);
        gbc.writeMem(0x4c48, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x96d9);
        EXPECT(gbc.pc(), 0x4c4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0183
        gbc.setState(0x5e63, 0x690a, 0x3270, 0xf413, 0x5a43, 0xc8a0, 0x0, 0x0);
        gbc.writeMem(0x5e63, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x690a);
        EXPECT(gbc.pc(), 0x5e65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0184
        gbc.setState(0x3cc9, 0xb170, 0x6f60, 0x2d5b, 0x9815, 0xa936, 0x0, 0x0);
        gbc.writeMem(0x3cc9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb170);
        EXPECT(gbc.pc(), 0x3ccb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0185
        gbc.setState(0xa8e6, 0x1441, 0x770, 0xa972, 0xac99, 0x9122, 0x1, 0x0);
        gbc.writeMem(0xa8e6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1441);
        EXPECT(gbc.pc(), 0xa8e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa8e6), 0xcb);
        EXPECT(gbc.readMem(0xa8e7), 0x88);
        // CB 88 0186
        gbc.setState(0x47b1, 0xe8be, 0xa140, 0x22b0, 0xccce, 0xad13, 0x0, 0x0);
        gbc.writeMem(0x47b1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xe8be);
        EXPECT(gbc.pc(), 0x47b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0188
        gbc.setState(0x4753, 0x6427, 0xbe30, 0xc45b, 0x3413, 0x72e7, 0x1, 0x1);
        gbc.writeMem(0x4753, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x6427);
        EXPECT(gbc.pc(), 0x4755);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0189
        gbc.setState(0x52cb, 0x6d65, 0x4190, 0xe232, 0xf49b, 0x3575, 0x0, 0x1);
        gbc.writeMem(0x52cb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x6d65);
        EXPECT(gbc.pc(), 0x52cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 018A
        gbc.setState(0x9732, 0xad37, 0xed70, 0x87d8, 0x8894, 0x53d, 0x0, 0x0);
        gbc.writeMem(0x9732, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xad37);
        EXPECT(gbc.pc(), 0x9734);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9732), 0xcb);
        EXPECT(gbc.readMem(0x9733), 0x88);
        // CB 88 018B
        gbc.setState(0x4ac1, 0x670c, 0x40a0, 0x65e1, 0x1b2c, 0xc92d, 0x1, 0x0);
        gbc.writeMem(0x4ac1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x670c);
        EXPECT(gbc.pc(), 0x4ac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 018C
        gbc.setState(0x5d37, 0x81c1, 0x3000, 0xe61c, 0x9ae9, 0x2e3e, 0x1, 0x1);
        gbc.writeMem(0x5d37, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x81c1);
        EXPECT(gbc.pc(), 0x5d39);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 018D
        gbc.setState(0x6e0, 0x9ded, 0x3800, 0x9c3a, 0x1243, 0x6869, 0x1, 0x1);
        gbc.writeMem(0x6e0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x9ded);
        EXPECT(gbc.pc(), 0x6e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 018E
        gbc.setState(0x3f4f, 0x9f92, 0x63f0, 0x4704, 0x452d, 0x656f, 0x1, 0x1);
        gbc.writeMem(0x3f4f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9f92);
        EXPECT(gbc.pc(), 0x3f51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 018F
        gbc.setState(0x1ed, 0xd1a6, 0x64b0, 0x1d2, 0x39a6, 0x9b01, 0x1, 0x1);
        gbc.writeMem(0x1ed, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd1a6);
        EXPECT(gbc.pc(), 0x1ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0190
        gbc.setState(0xd84, 0xf997, 0xcd0, 0x1dd0, 0x8971, 0x7b9e, 0x1, 0x0);
        gbc.writeMem(0xd84, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xf997);
        EXPECT(gbc.pc(), 0xd86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0191
        gbc.setState(0xe34d, 0x3c3e, 0x830, 0x2789, 0xf552, 0xd218, 0x1, 0x0);
        gbc.writeMem(0xe34d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x3c3e);
        EXPECT(gbc.pc(), 0xe34f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe34d), 0xcb);
        EXPECT(gbc.readMem(0xe34e), 0x88);
        // CB 88 0192
        gbc.setState(0xd31, 0xf212, 0x4040, 0x5d74, 0x9eb8, 0x70f6, 0x0, 0x1);
        gbc.writeMem(0xd31, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xf212);
        EXPECT(gbc.pc(), 0xd33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0193
        gbc.setState(0x850a, 0x39e7, 0x6c10, 0x8208, 0xf11e, 0x9f20, 0x0, 0x1);
        gbc.writeMem(0x850a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x39e7);
        EXPECT(gbc.pc(), 0x850c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x850a), 0xcb);
        EXPECT(gbc.readMem(0x850b), 0x88);
        // CB 88 0194
        gbc.setState(0x58ad, 0x5c33, 0xd8e0, 0xfa3e, 0xd42a, 0xdba5, 0x0, 0x1);
        gbc.writeMem(0x58ad, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5c33);
        EXPECT(gbc.pc(), 0x58af);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0195
        gbc.setState(0xb94f, 0xf8ee, 0xc200, 0xb852, 0xb673, 0x3151, 0x0, 0x1);
        gbc.writeMem(0xb94f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xf8ee);
        EXPECT(gbc.pc(), 0xb951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb94f), 0xcb);
        EXPECT(gbc.readMem(0xb950), 0x88);
        // CB 88 0196
        gbc.setState(0x45c2, 0x636e, 0x44c0, 0xfe7c, 0x2078, 0x5b04, 0x0, 0x0);
        gbc.writeMem(0x45c2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x636e);
        EXPECT(gbc.pc(), 0x45c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0197
        gbc.setState(0x5b5c, 0x307, 0xada0, 0x2b90, 0xedd7, 0x2b39, 0x1, 0x1);
        gbc.writeMem(0x5b5c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x307);
        EXPECT(gbc.pc(), 0x5b5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0198
        gbc.setState(0xb260, 0x6f45, 0xd90, 0xd329, 0x9add, 0xbe85, 0x1, 0x1);
        gbc.writeMem(0xb260, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x6f45);
        EXPECT(gbc.pc(), 0xb262);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb260), 0xcb);
        EXPECT(gbc.readMem(0xb261), 0x88);
        // CB 88 0199
        gbc.setState(0x2efc, 0x87f3, 0x5c00, 0x5ac, 0xe69, 0xdfdc, 0x1, 0x0);
        gbc.writeMem(0x2efc, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x87f3);
        EXPECT(gbc.pc(), 0x2efe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 019A
        gbc.setState(0x843, 0x403e, 0x2490, 0x9b0a, 0xafb2, 0xcf8a, 0x1, 0x0);
        gbc.writeMem(0x843, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x403e);
        EXPECT(gbc.pc(), 0x845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 019B
        gbc.setState(0xc459, 0x224e, 0xcd10, 0x3588, 0x93d4, 0xbb28, 0x1, 0x1);
        gbc.writeMem(0xc459, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x224e);
        EXPECT(gbc.pc(), 0xc45b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc459), 0xcb);
        EXPECT(gbc.readMem(0xc45a), 0x88);
        // CB 88 019C
        gbc.setState(0x5825, 0x39b2, 0x6d0, 0x185e, 0xfc23, 0xf854, 0x0, 0x1);
        gbc.writeMem(0x5825, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x39b2);
        EXPECT(gbc.pc(), 0x5827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 019D
        gbc.setState(0x15de, 0xe579, 0x5580, 0xf998, 0x942e, 0x3522, 0x0, 0x0);
        gbc.writeMem(0x15de, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xe579);
        EXPECT(gbc.pc(), 0x15e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 019E
        gbc.setState(0xd067, 0xe358, 0x390, 0x1066, 0x2409, 0x1cba, 0x0, 0x0);
        gbc.writeMem(0xd067, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xe358);
        EXPECT(gbc.pc(), 0xd069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd067), 0xcb);
        EXPECT(gbc.readMem(0xd068), 0x88);
        // CB 88 019F
        gbc.setState(0x86d5, 0x87c6, 0x37d0, 0x1eb, 0xf0ae, 0xf957, 0x1, 0x0);
        gbc.writeMem(0x86d5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x87c6);
        EXPECT(gbc.pc(), 0x86d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d5), 0xcb);
        EXPECT(gbc.readMem(0x86d6), 0x88);
        // CB 88 01A0
        gbc.setState(0xae50, 0xa418, 0x3af0, 0x57f3, 0x13e6, 0xfb33, 0x1, 0x1);
        gbc.writeMem(0xae50, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xa418);
        EXPECT(gbc.pc(), 0xae52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae50), 0xcb);
        EXPECT(gbc.readMem(0xae51), 0x88);
        // CB 88 01A1
        gbc.setState(0x29f0, 0x487f, 0xdc50, 0x961, 0xde16, 0x50ae, 0x1, 0x0);
        gbc.writeMem(0x29f0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x487f);
        EXPECT(gbc.pc(), 0x29f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01A2
        gbc.setState(0xd7e2, 0xa540, 0x27a0, 0x25e2, 0xa19e, 0xd0f, 0x0, 0x0);
        gbc.writeMem(0xd7e2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xa540);
        EXPECT(gbc.pc(), 0xd7e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd7e2), 0xcb);
        EXPECT(gbc.readMem(0xd7e3), 0x88);
        // CB 88 01A3
        gbc.setState(0x320f, 0x6c47, 0x4020, 0xdd1c, 0x205d, 0x3417, 0x1, 0x1);
        gbc.writeMem(0x320f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x6c47);
        EXPECT(gbc.pc(), 0x3211);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01A4
        gbc.setState(0x9c66, 0x1e78, 0xac50, 0xd072, 0x6f43, 0x74de, 0x0, 0x1);
        gbc.writeMem(0x9c66, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x1e78);
        EXPECT(gbc.pc(), 0x9c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c66), 0xcb);
        EXPECT(gbc.readMem(0x9c67), 0x88);
        // CB 88 01A5
        gbc.setState(0xee5e, 0x5f54, 0x2bd0, 0x87d, 0x4a1b, 0x20b, 0x0, 0x0);
        gbc.writeMem(0xee5e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x5f54);
        EXPECT(gbc.pc(), 0xee60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee5e), 0xcb);
        EXPECT(gbc.readMem(0xee5f), 0x88);
        // CB 88 01A6
        gbc.setState(0x8b93, 0xd92, 0x5030, 0xff71, 0x10b4, 0x4b39, 0x1, 0x0);
        gbc.writeMem(0x8b93, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd92);
        EXPECT(gbc.pc(), 0x8b95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b93), 0xcb);
        EXPECT(gbc.readMem(0x8b94), 0x88);
        // CB 88 01A7
        gbc.setState(0x9449, 0x8de9, 0x8140, 0x25c2, 0xcedf, 0xb69e, 0x1, 0x0);
        gbc.writeMem(0x9449, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x8de9);
        EXPECT(gbc.pc(), 0x944b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9449), 0xcb);
        EXPECT(gbc.readMem(0x944a), 0x88);
        // CB 88 01A8
        gbc.setState(0xad2e, 0x440f, 0x9080, 0x9093, 0xda6a, 0xefc2, 0x1, 0x0);
        gbc.writeMem(0xad2e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x440f);
        EXPECT(gbc.pc(), 0xad30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad2e), 0xcb);
        EXPECT(gbc.readMem(0xad2f), 0x88);
        // CB 88 01A9
        gbc.setState(0x50bb, 0x4f7b, 0x4c70, 0xdbd7, 0x888d, 0x6b76, 0x0, 0x1);
        gbc.writeMem(0x50bb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x4f7b);
        EXPECT(gbc.pc(), 0x50bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01AA
        gbc.setState(0xeaa3, 0xee30, 0x150, 0x576a, 0xf37d, 0xb8be, 0x1, 0x0);
        gbc.writeMem(0xeaa3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xee30);
        EXPECT(gbc.pc(), 0xeaa5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaa3), 0xcb);
        EXPECT(gbc.readMem(0xeaa4), 0x88);
        // CB 88 01AB
        gbc.setState(0xd473, 0xcd2d, 0x4510, 0x24db, 0x59aa, 0x68f4, 0x0, 0x0);
        gbc.writeMem(0xd473, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xcd2d);
        EXPECT(gbc.pc(), 0xd475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd473), 0xcb);
        EXPECT(gbc.readMem(0xd474), 0x88);
        // CB 88 01AC
        gbc.setState(0x7ac7, 0xfaf8, 0xe7e0, 0x5424, 0x84f9, 0x9f67, 0x1, 0x0);
        gbc.writeMem(0x7ac7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xfaf8);
        EXPECT(gbc.pc(), 0x7ac9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01AD
        gbc.setState(0xb4ba, 0x7ca6, 0xa030, 0x87dd, 0xee6a, 0x19c3, 0x0, 0x0);
        gbc.writeMem(0xb4ba, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x7ca6);
        EXPECT(gbc.pc(), 0xb4bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4ba), 0xcb);
        EXPECT(gbc.readMem(0xb4bb), 0x88);
        // CB 88 01AE
        gbc.setState(0x90e4, 0xaabb, 0x7910, 0x3ade, 0xb3e2, 0x732f, 0x1, 0x0);
        gbc.writeMem(0x90e4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xaabb);
        EXPECT(gbc.pc(), 0x90e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90e4), 0xcb);
        EXPECT(gbc.readMem(0x90e5), 0x88);
        // CB 88 01AF
        gbc.setState(0x3ab8, 0xd479, 0xed90, 0xfc05, 0x564a, 0x91bb, 0x1, 0x1);
        gbc.writeMem(0x3ab8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xd479);
        EXPECT(gbc.pc(), 0x3aba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01B0
        gbc.setState(0x1040, 0xf47f, 0x5630, 0x4e0a, 0x298f, 0xa454, 0x0, 0x1);
        gbc.writeMem(0x1040, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf47f);
        EXPECT(gbc.pc(), 0x1042);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01B1
        gbc.setState(0xc609, 0x6bc2, 0xd930, 0x8d0e, 0xc71f, 0xfcbf, 0x0, 0x1);
        gbc.writeMem(0xc609, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6bc2);
        EXPECT(gbc.pc(), 0xc60b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc609), 0xcb);
        EXPECT(gbc.readMem(0xc60a), 0x88);
        // CB 88 01B2
        gbc.setState(0xe107, 0xbdc4, 0xca0, 0xf72c, 0xacf7, 0x17f9, 0x1, 0x0);
        gbc.writeMem(0xe107, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbdc4);
        EXPECT(gbc.pc(), 0xe109);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe107), 0xcb);
        EXPECT(gbc.readMem(0xe108), 0x88);
        // CB 88 01B3
        gbc.setState(0x77f2, 0x3393, 0x78b0, 0x9233, 0x9681, 0xb9a8, 0x0, 0x0);
        gbc.writeMem(0x77f2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3393);
        EXPECT(gbc.pc(), 0x77f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01B4
        gbc.setState(0xe71c, 0x17c0, 0x11a0, 0xcbb9, 0x654d, 0xf250, 0x0, 0x1);
        gbc.writeMem(0xe71c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x17c0);
        EXPECT(gbc.pc(), 0xe71e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe71c), 0xcb);
        EXPECT(gbc.readMem(0xe71d), 0x88);
        // CB 88 01B5
        gbc.setState(0x37ef, 0xccfb, 0xd70, 0x33f4, 0x817b, 0xc67e, 0x0, 0x0);
        gbc.writeMem(0x37ef, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xccfb);
        EXPECT(gbc.pc(), 0x37f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01B7
        gbc.setState(0x98e6, 0xf215, 0x1500, 0x7cbc, 0xabdb, 0x281a, 0x0, 0x1);
        gbc.writeMem(0x98e6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf215);
        EXPECT(gbc.pc(), 0x98e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e6), 0xcb);
        EXPECT(gbc.readMem(0x98e7), 0x88);
        // CB 88 01B8
        gbc.setState(0xae9, 0x2907, 0x5ac0, 0x9e3f, 0xa08f, 0x90bb, 0x0, 0x0);
        gbc.writeMem(0xae9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x2907);
        EXPECT(gbc.pc(), 0xaeb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01B9
        gbc.setState(0x3916, 0xcfbb, 0x3df0, 0xd1c2, 0xcc2a, 0x7494, 0x1, 0x0);
        gbc.writeMem(0x3916, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcfbb);
        EXPECT(gbc.pc(), 0x3918);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01BA
        gbc.setState(0x1183, 0x4d32, 0x2650, 0x4d49, 0x86fc, 0x2a38, 0x0, 0x1);
        gbc.writeMem(0x1183, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x4d32);
        EXPECT(gbc.pc(), 0x1185);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01BB
        gbc.setState(0x3e2b, 0xec8c, 0x49a0, 0xfc47, 0x3eee, 0xa87a, 0x1, 0x1);
        gbc.writeMem(0x3e2b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xec8c);
        EXPECT(gbc.pc(), 0x3e2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01BC
        gbc.setState(0x6b02, 0x3f9b, 0x770, 0x4d66, 0xe721, 0x74b1, 0x0, 0x0);
        gbc.writeMem(0x6b02, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x3f9b);
        EXPECT(gbc.pc(), 0x6b04);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01BD
        gbc.setState(0xd7ed, 0xb60d, 0x1b30, 0xf5cb, 0x45a0, 0xbad1, 0x1, 0x0);
        gbc.writeMem(0xd7ed, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xb60d);
        EXPECT(gbc.pc(), 0xd7ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7ed), 0xcb);
        EXPECT(gbc.readMem(0xd7ee), 0x88);
        // CB 88 01BE
        gbc.setState(0x6491, 0xfa92, 0xac30, 0x9086, 0xaebe, 0x2277, 0x0, 0x1);
        gbc.writeMem(0x6491, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xfa92);
        EXPECT(gbc.pc(), 0x6493);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01BF
        gbc.setState(0x61b9, 0xf012, 0x8a00, 0x764, 0x97db, 0xaeb5, 0x0, 0x0);
        gbc.writeMem(0x61b9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xf012);
        EXPECT(gbc.pc(), 0x61bb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01C0
        gbc.setState(0x219a, 0xbe28, 0xa1a0, 0xa5dc, 0x38a0, 0xeaf1, 0x1, 0x0);
        gbc.writeMem(0x219a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xbe28);
        EXPECT(gbc.pc(), 0x219c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01C1
        gbc.setState(0xd401, 0x6bc0, 0x1ab0, 0x5480, 0xe5ce, 0x4216, 0x0, 0x0);
        gbc.writeMem(0xd401, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0x6bc0);
        EXPECT(gbc.pc(), 0xd403);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd401), 0xcb);
        EXPECT(gbc.readMem(0xd402), 0x88);
        // CB 88 01C2
        gbc.setState(0xe2d1, 0x124a, 0xca30, 0xdf90, 0x11ed, 0x6fd4, 0x0, 0x0);
        gbc.writeMem(0xe2d1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x124a);
        EXPECT(gbc.pc(), 0xe2d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d1), 0xcb);
        EXPECT(gbc.readMem(0xe2d2), 0x88);
        // CB 88 01C3
        gbc.setState(0xa2ca, 0xbbdb, 0x4b80, 0xd30f, 0xbbb6, 0xc404, 0x1, 0x1);
        gbc.writeMem(0xa2ca, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xbbdb);
        EXPECT(gbc.pc(), 0xa2cc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2ca), 0xcb);
        EXPECT(gbc.readMem(0xa2cb), 0x88);
        // CB 88 01C4
        gbc.setState(0x2c93, 0x1ec0, 0x8b50, 0x73ed, 0x2b77, 0x3bc7, 0x1, 0x0);
        gbc.writeMem(0x2c93, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x1ec0);
        EXPECT(gbc.pc(), 0x2c95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01C5
        gbc.setState(0xa5e0, 0x7247, 0xa980, 0xa5c9, 0x2f18, 0x3136, 0x1, 0x1);
        gbc.writeMem(0xa5e0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x7247);
        EXPECT(gbc.pc(), 0xa5e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5e0), 0xcb);
        EXPECT(gbc.readMem(0xa5e1), 0x88);
        // CB 88 01C6
        gbc.setState(0x7fc3, 0x640b, 0xf270, 0x64b3, 0xb44b, 0xd01e, 0x0, 0x0);
        gbc.writeMem(0x7fc3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x640b);
        EXPECT(gbc.pc(), 0x7fc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01C7
        gbc.setState(0xeb18, 0xc18, 0xe130, 0xa0aa, 0x1229, 0x9e3b, 0x1, 0x0);
        gbc.writeMem(0xeb18, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xc18);
        EXPECT(gbc.pc(), 0xeb1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb18), 0xcb);
        EXPECT(gbc.readMem(0xeb19), 0x88);
        // CB 88 01C8
        gbc.setState(0x92aa, 0xa430, 0x14e0, 0x72b2, 0xc7ce, 0x413e, 0x0, 0x1);
        gbc.writeMem(0x92aa, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xa430);
        EXPECT(gbc.pc(), 0x92ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92aa), 0xcb);
        EXPECT(gbc.readMem(0x92ab), 0x88);
        // CB 88 01C9
        gbc.setState(0x5ba, 0x9432, 0xd210, 0x8d66, 0x442b, 0xa74c, 0x0, 0x0);
        gbc.writeMem(0x5ba, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9432);
        EXPECT(gbc.pc(), 0x5bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01CA
        gbc.setState(0xc0f7, 0x31b7, 0x45a0, 0x9a63, 0xa249, 0x8f5c, 0x1, 0x0);
        gbc.writeMem(0xc0f7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x31b7);
        EXPECT(gbc.pc(), 0xc0f9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0f7), 0xcb);
        EXPECT(gbc.readMem(0xc0f8), 0x88);
        // CB 88 01CB
        gbc.setState(0xb4de, 0x362a, 0x72a0, 0xb49a, 0x815c, 0x9d32, 0x0, 0x1);
        gbc.writeMem(0xb4de, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x362a);
        EXPECT(gbc.pc(), 0xb4e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4de), 0xcb);
        EXPECT(gbc.readMem(0xb4df), 0x88);
        // CB 88 01CC
        gbc.setState(0x100, 0x82db, 0x9be0, 0x8239, 0xc9ac, 0xb5a4, 0x1, 0x0);
        gbc.writeMem(0x100, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x82db);
        EXPECT(gbc.pc(), 0x102);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01CE
        gbc.setState(0x84ff, 0x2f05, 0xc7d0, 0x70cc, 0x520f, 0x71e7, 0x1, 0x0);
        gbc.writeMem(0x84ff, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x2f05);
        EXPECT(gbc.pc(), 0x8501);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84ff), 0xcb);
        EXPECT(gbc.readMem(0x8500), 0x88);
        // CB 88 01CF
        gbc.setState(0x7234, 0x58cc, 0x7e90, 0xe931, 0xa68, 0x3c46, 0x0, 0x0);
        gbc.writeMem(0x7234, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x58cc);
        EXPECT(gbc.pc(), 0x7236);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01D1
        gbc.setState(0xa3e2, 0x20cf, 0xc210, 0x5d55, 0xd79c, 0x360b, 0x1, 0x0);
        gbc.writeMem(0xa3e2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x20cf);
        EXPECT(gbc.pc(), 0xa3e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e2), 0xcb);
        EXPECT(gbc.readMem(0xa3e3), 0x88);
        // CB 88 01D2
        gbc.setState(0xd175, 0x8dfc, 0xa430, 0xfe98, 0x11cf, 0xe5a7, 0x1, 0x1);
        gbc.writeMem(0xd175, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8dfc);
        EXPECT(gbc.pc(), 0xd177);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd175), 0xcb);
        EXPECT(gbc.readMem(0xd176), 0x88);
        // CB 88 01D3
        gbc.setState(0x277d, 0xf18f, 0x4f40, 0xe974, 0xd445, 0x919d, 0x0, 0x0);
        gbc.writeMem(0x277d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xf18f);
        EXPECT(gbc.pc(), 0x277f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01D4
        gbc.setState(0x5eaf, 0x1fa7, 0x6390, 0x9d69, 0x9b49, 0x82d8, 0x1, 0x1);
        gbc.writeMem(0x5eaf, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1fa7);
        EXPECT(gbc.pc(), 0x5eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01D5
        gbc.setState(0xe817, 0x36b8, 0x51e0, 0xc8a9, 0x5317, 0xe0ba, 0x0, 0x0);
        gbc.writeMem(0xe817, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x36b8);
        EXPECT(gbc.pc(), 0xe819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe817), 0xcb);
        EXPECT(gbc.readMem(0xe818), 0x88);
        // CB 88 01D6
        gbc.setState(0x6568, 0x119b, 0x8e00, 0x6f77, 0xb8b1, 0x348e, 0x1, 0x0);
        gbc.writeMem(0x6568, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x119b);
        EXPECT(gbc.pc(), 0x656a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01D7
        gbc.setState(0x5403, 0x7bf1, 0x6b80, 0xdc36, 0x6bfd, 0x3811, 0x1, 0x0);
        gbc.writeMem(0x5403, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x7bf1);
        EXPECT(gbc.pc(), 0x5405);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01D8
        gbc.setState(0x9c80, 0x6e8b, 0x7db0, 0x2a72, 0xfe63, 0xa2b7, 0x0, 0x0);
        gbc.writeMem(0x9c80, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6e8b);
        EXPECT(gbc.pc(), 0x9c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c80), 0xcb);
        EXPECT(gbc.readMem(0x9c81), 0x88);
        // CB 88 01D9
        gbc.setState(0x7a8c, 0x8a4e, 0xdbb0, 0xf080, 0xf6c, 0xc49, 0x1, 0x0);
        gbc.writeMem(0x7a8c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x8a4e);
        EXPECT(gbc.pc(), 0x7a8e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01DA
        gbc.setState(0x5807, 0x7dd2, 0x3030, 0xbf4, 0x810b, 0xd02f, 0x0, 0x1);
        gbc.writeMem(0x5807, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x7dd2);
        EXPECT(gbc.pc(), 0x5809);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01DB
        gbc.setState(0x3fc6, 0x3e1a, 0xdc80, 0x33f2, 0x7c89, 0x441f, 0x1, 0x1);
        gbc.writeMem(0x3fc6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3e1a);
        EXPECT(gbc.pc(), 0x3fc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01DC
        gbc.setState(0xe817, 0x7011, 0x5df0, 0x340c, 0x313d, 0xc05, 0x1, 0x0);
        gbc.writeMem(0xe817, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x7011);
        EXPECT(gbc.pc(), 0xe819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe817), 0xcb);
        EXPECT(gbc.readMem(0xe818), 0x88);
        // CB 88 01DD
        gbc.setState(0x72b5, 0xd724, 0xeaa0, 0x390c, 0x8072, 0x35bd, 0x0, 0x1);
        gbc.writeMem(0x72b5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xd724);
        EXPECT(gbc.pc(), 0x72b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01DE
        gbc.setState(0x600b, 0xd358, 0x4360, 0x5d89, 0xed89, 0x227d, 0x1, 0x0);
        gbc.writeMem(0x600b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xd358);
        EXPECT(gbc.pc(), 0x600d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01DF
        gbc.setState(0x5301, 0x1bbf, 0x4210, 0x8b14, 0x9bae, 0x9ba6, 0x1, 0x1);
        gbc.writeMem(0x5301, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x1bbf);
        EXPECT(gbc.pc(), 0x5303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01E0
        gbc.setState(0x58d4, 0xa92, 0xd450, 0x96b5, 0xe720, 0xbfcc, 0x0, 0x0);
        gbc.writeMem(0x58d4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xa92);
        EXPECT(gbc.pc(), 0x58d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01E1
        gbc.setState(0x478e, 0x89c3, 0x8da0, 0x88cf, 0xf7a3, 0xef7d, 0x0, 0x1);
        gbc.writeMem(0x478e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x89c3);
        EXPECT(gbc.pc(), 0x4790);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01E2
        gbc.setState(0x6aa7, 0x56ea, 0x7160, 0x413d, 0x527a, 0x1b3d, 0x1, 0x0);
        gbc.writeMem(0x6aa7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x56ea);
        EXPECT(gbc.pc(), 0x6aa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01E3
        gbc.setState(0x995e, 0xf52f, 0x8590, 0x83fa, 0x8abb, 0x985e, 0x0, 0x1);
        gbc.writeMem(0x995e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xf52f);
        EXPECT(gbc.pc(), 0x9960);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x995e), 0xcb);
        EXPECT(gbc.readMem(0x995f), 0x88);
        // CB 88 01E4
        gbc.setState(0x12ba, 0x9d8f, 0xe930, 0xac30, 0x20bd, 0x77e2, 0x0, 0x1);
        gbc.writeMem(0x12ba, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9d8f);
        EXPECT(gbc.pc(), 0x12bc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01E5
        gbc.setState(0x900c, 0x9ac7, 0xb0, 0xaaa9, 0x9733, 0x5e62, 0x0, 0x1);
        gbc.writeMem(0x900c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x9ac7);
        EXPECT(gbc.pc(), 0x900e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x900c), 0xcb);
        EXPECT(gbc.readMem(0x900d), 0x88);
        // CB 88 01E6
        gbc.setState(0x2e86, 0x7632, 0x2b70, 0x17db, 0x121c, 0x2d67, 0x0, 0x0);
        gbc.writeMem(0x2e86, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x7632);
        EXPECT(gbc.pc(), 0x2e88);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01E7
        gbc.setState(0x1a5f, 0x7586, 0x8d10, 0x8ed6, 0x9e9b, 0xc3bf, 0x0, 0x1);
        gbc.writeMem(0x1a5f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x7586);
        EXPECT(gbc.pc(), 0x1a61);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01E8
        gbc.setState(0x9534, 0xda0, 0x6a30, 0xe3d4, 0x10b1, 0xba35, 0x1, 0x1);
        gbc.writeMem(0x9534, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xda0);
        EXPECT(gbc.pc(), 0x9536);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9534), 0xcb);
        EXPECT(gbc.readMem(0x9535), 0x88);
        // CB 88 01EA
        gbc.setState(0x4925, 0x32cd, 0x16f0, 0x49ef, 0xf7b9, 0xb50c, 0x0, 0x1);
        gbc.writeMem(0x4925, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x32cd);
        EXPECT(gbc.pc(), 0x4927);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01EB
        gbc.setState(0x4628, 0x16fb, 0xb900, 0x1d65, 0x641, 0x5efa, 0x1, 0x1);
        gbc.writeMem(0x4628, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x16fb);
        EXPECT(gbc.pc(), 0x462a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01ED
        gbc.setState(0xa736, 0x78d8, 0xdb90, 0x27e8, 0x867d, 0x6001, 0x1, 0x1);
        gbc.writeMem(0xa736, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x78d8);
        EXPECT(gbc.pc(), 0xa738);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa736), 0xcb);
        EXPECT(gbc.readMem(0xa737), 0x88);
        // CB 88 01EE
        gbc.setState(0x9a2e, 0xf0cd, 0x9ed0, 0xea25, 0x8913, 0xc8c2, 0x0, 0x0);
        gbc.writeMem(0x9a2e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xf0cd);
        EXPECT(gbc.pc(), 0x9a30);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a2e), 0xcb);
        EXPECT(gbc.readMem(0x9a2f), 0x88);
        // CB 88 01EF
        gbc.setState(0xadfd, 0x939b, 0xba40, 0xbc7c, 0x4fa3, 0x9cb7, 0x1, 0x1);
        gbc.writeMem(0xadfd, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x939b);
        EXPECT(gbc.pc(), 0xadff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xadfd), 0xcb);
        EXPECT(gbc.readMem(0xadfe), 0x88);
        // CB 88 01F0
        gbc.setState(0x672d, 0x63ac, 0xacc0, 0xa6d6, 0xe657, 0x77ee, 0x0, 0x0);
        gbc.writeMem(0x672d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x63ac);
        EXPECT(gbc.pc(), 0x672f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01F1
        gbc.setState(0xbf5c, 0x890, 0xf430, 0xf318, 0xbb69, 0x4133, 0x0, 0x0);
        gbc.writeMem(0xbf5c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x890);
        EXPECT(gbc.pc(), 0xbf5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf5c), 0xcb);
        EXPECT(gbc.readMem(0xbf5d), 0x88);
        // CB 88 01F2
        gbc.setState(0xbb25, 0xd4d8, 0x4200, 0xbbb6, 0x121a, 0x2634, 0x0, 0x1);
        gbc.writeMem(0xbb25, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd4d8);
        EXPECT(gbc.pc(), 0xbb27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb25), 0xcb);
        EXPECT(gbc.readMem(0xbb26), 0x88);
        // CB 88 01F3
        gbc.setState(0x7ee6, 0x6f8c, 0x3fa0, 0x833e, 0xf8f4, 0x36f8, 0x1, 0x0);
        gbc.writeMem(0x7ee6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x6f8c);
        EXPECT(gbc.pc(), 0x7ee8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01F4
        gbc.setState(0x9b1d, 0x4916, 0xb5a0, 0x7034, 0x4476, 0xd52b, 0x1, 0x0);
        gbc.writeMem(0x9b1d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4916);
        EXPECT(gbc.pc(), 0x9b1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b1d), 0xcb);
        EXPECT(gbc.readMem(0x9b1e), 0x88);
        // CB 88 01F5
        gbc.setState(0x1b54, 0x3334, 0xb010, 0x376f, 0x6b17, 0xa0cf, 0x1, 0x0);
        gbc.writeMem(0x1b54, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3334);
        EXPECT(gbc.pc(), 0x1b56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01F6
        gbc.setState(0xcad7, 0xf103, 0x14c0, 0x79d6, 0xfc4f, 0xe65f, 0x0, 0x0);
        gbc.writeMem(0xcad7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xf103);
        EXPECT(gbc.pc(), 0xcad9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcad7), 0xcb);
        EXPECT(gbc.readMem(0xcad8), 0x88);
        // CB 88 01F7
        gbc.setState(0x3a90, 0x51a7, 0x9f60, 0xa1ac, 0xd6d1, 0xc72c, 0x1, 0x1);
        gbc.writeMem(0x3a90, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x51a7);
        EXPECT(gbc.pc(), 0x3a92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 01F8
        gbc.setState(0xa7de, 0xd904, 0xbc90, 0x7d60, 0xfa0, 0x725a, 0x0, 0x1);
        gbc.writeMem(0xa7de, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xd904);
        EXPECT(gbc.pc(), 0xa7e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7de), 0xcb);
        EXPECT(gbc.readMem(0xa7df), 0x88);
        // CB 88 01F9
        gbc.setState(0xb0d4, 0xc41a, 0xca30, 0x966, 0x99ee, 0xa27e, 0x0, 0x0);
        gbc.writeMem(0xb0d4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc41a);
        EXPECT(gbc.pc(), 0xb0d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0d4), 0xcb);
        EXPECT(gbc.readMem(0xb0d5), 0x88);
        // CB 88 01FA
        gbc.setState(0xb58e, 0xba91, 0xff10, 0x2e34, 0x7690, 0xe7bc, 0x0, 0x0);
        gbc.writeMem(0xb58e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xba91);
        EXPECT(gbc.pc(), 0xb590);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb58e), 0xcb);
        EXPECT(gbc.readMem(0xb58f), 0x88);
        // CB 88 01FC
        gbc.setState(0x879d, 0x2939, 0x150, 0x5a24, 0x26ee, 0xb83a, 0x1, 0x0);
        gbc.writeMem(0x879d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x2939);
        EXPECT(gbc.pc(), 0x879f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x879d), 0xcb);
        EXPECT(gbc.readMem(0x879e), 0x88);
        // CB 88 01FD
        gbc.setState(0xa3e4, 0x6c9c, 0x1190, 0xfa50, 0xe848, 0x8fec, 0x0, 0x1);
        gbc.writeMem(0xa3e4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x6c9c);
        EXPECT(gbc.pc(), 0xa3e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e4), 0xcb);
        EXPECT(gbc.readMem(0xa3e5), 0x88);
        // CB 88 01FE
        gbc.setState(0x6d9c, 0x6777, 0x9b50, 0x165, 0x203d, 0xe071, 0x0, 0x1);
        gbc.writeMem(0x6d9c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6777);
        EXPECT(gbc.pc(), 0x6d9e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 01FF
        gbc.setState(0x1a89, 0xe651, 0x54a0, 0x6f45, 0xc31b, 0x3943, 0x0, 0x0);
        gbc.writeMem(0x1a89, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xe651);
        EXPECT(gbc.pc(), 0x1a8b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0200
        gbc.setState(0x4412, 0x458d, 0x4d10, 0xac4, 0x851c, 0x1964, 0x1, 0x1);
        gbc.writeMem(0x4412, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x458d);
        EXPECT(gbc.pc(), 0x4414);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0201
        gbc.setState(0xe58f, 0xd94b, 0x8900, 0xf1af, 0x4c93, 0x245c, 0x0, 0x1);
        gbc.writeMem(0xe58f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xd94b);
        EXPECT(gbc.pc(), 0xe591);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe58f), 0xcb);
        EXPECT(gbc.readMem(0xe590), 0x88);
        // CB 88 0202
        gbc.setState(0xc209, 0x354f, 0xf9c0, 0xa88b, 0x8907, 0xbd27, 0x1, 0x0);
        gbc.writeMem(0xc209, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x354f);
        EXPECT(gbc.pc(), 0xc20b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc209), 0xcb);
        EXPECT(gbc.readMem(0xc20a), 0x88);
        // CB 88 0203
        gbc.setState(0xb772, 0x4719, 0xfa10, 0x2f5d, 0xf90f, 0xceeb, 0x0, 0x0);
        gbc.writeMem(0xb772, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x4719);
        EXPECT(gbc.pc(), 0xb774);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb772), 0xcb);
        EXPECT(gbc.readMem(0xb773), 0x88);
        // CB 88 0204
        gbc.setState(0x16e1, 0x10c6, 0x9340, 0x1507, 0x84c, 0x1a47, 0x0, 0x1);
        gbc.writeMem(0x16e1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x10c6);
        EXPECT(gbc.pc(), 0x16e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0205
        gbc.setState(0x1ff7, 0x3373, 0x560, 0xbc73, 0xb52a, 0x1990, 0x1, 0x1);
        gbc.writeMem(0x1ff7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x3373);
        EXPECT(gbc.pc(), 0x1ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0206
        gbc.setState(0x724e, 0x7598, 0x1d20, 0x7a68, 0x6e99, 0xa6cf, 0x0, 0x0);
        gbc.writeMem(0x724e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x7598);
        EXPECT(gbc.pc(), 0x7250);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0207
        gbc.setState(0x9cb9, 0x47e7, 0x6a50, 0xe869, 0x9e37, 0xc24c, 0x0, 0x0);
        gbc.writeMem(0x9cb9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x47e7);
        EXPECT(gbc.pc(), 0x9cbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9cb9), 0xcb);
        EXPECT(gbc.readMem(0x9cba), 0x88);
        // CB 88 0208
        gbc.setState(0x9c9f, 0x2829, 0xe7f0, 0xf304, 0x153b, 0xdff7, 0x0, 0x1);
        gbc.writeMem(0x9c9f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x2829);
        EXPECT(gbc.pc(), 0x9ca1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c9f), 0xcb);
        EXPECT(gbc.readMem(0x9ca0), 0x88);
        // CB 88 0209
        gbc.setState(0x659b, 0x9353, 0x2ea0, 0x207f, 0xe534, 0x7924, 0x1, 0x0);
        gbc.writeMem(0x659b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x9353);
        EXPECT(gbc.pc(), 0x659d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 020A
        gbc.setState(0xcbb9, 0x9bf3, 0x2250, 0x92a1, 0x1deb, 0x6675, 0x0, 0x0);
        gbc.writeMem(0xcbb9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x9bf3);
        EXPECT(gbc.pc(), 0xcbbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbb9), 0xcb);
        EXPECT(gbc.readMem(0xcbba), 0x88);
        // CB 88 020B
        gbc.setState(0xbe6b, 0x7235, 0x9350, 0x7cc2, 0x5455, 0xb38d, 0x1, 0x1);
        gbc.writeMem(0xbe6b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7235);
        EXPECT(gbc.pc(), 0xbe6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe6b), 0xcb);
        EXPECT(gbc.readMem(0xbe6c), 0x88);
        // CB 88 020C
        gbc.setState(0x9845, 0xf426, 0x3540, 0xc744, 0xe63a, 0xff8c, 0x0, 0x1);
        gbc.writeMem(0x9845, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xf426);
        EXPECT(gbc.pc(), 0x9847);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9845), 0xcb);
        EXPECT(gbc.readMem(0x9846), 0x88);
        // CB 88 020D
        gbc.setState(0x7733, 0xbec9, 0xaf30, 0xe3ef, 0x98c0, 0x2ee1, 0x0, 0x0);
        gbc.writeMem(0x7733, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xbec9);
        EXPECT(gbc.pc(), 0x7735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 020E
        gbc.setState(0x6b25, 0x43c4, 0x51e0, 0x3521, 0xc040, 0xa44e, 0x1, 0x0);
        gbc.writeMem(0x6b25, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x43c4);
        EXPECT(gbc.pc(), 0x6b27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 020F
        gbc.setState(0x8059, 0xad99, 0x6210, 0x2ddb, 0xaa06, 0xe94a, 0x1, 0x0);
        gbc.writeMem(0x8059, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xad99);
        EXPECT(gbc.pc(), 0x805b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8059), 0xcb);
        EXPECT(gbc.readMem(0x805a), 0x88);
        // CB 88 0210
        gbc.setState(0xcf69, 0x41a7, 0x160, 0x46fb, 0x8421, 0x4b58, 0x1, 0x1);
        gbc.writeMem(0xcf69, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x41a7);
        EXPECT(gbc.pc(), 0xcf6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf69), 0xcb);
        EXPECT(gbc.readMem(0xcf6a), 0x88);
        // CB 88 0211
        gbc.setState(0xee6e, 0xce30, 0x3d60, 0xbe41, 0x888b, 0x6b1, 0x1, 0x1);
        gbc.writeMem(0xee6e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xce30);
        EXPECT(gbc.pc(), 0xee70);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee6e), 0xcb);
        EXPECT(gbc.readMem(0xee6f), 0x88);
        // CB 88 0212
        gbc.setState(0x4e79, 0xdbdf, 0x1910, 0x31ed, 0xbda1, 0x1e8, 0x1, 0x0);
        gbc.writeMem(0x4e79, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xdbdf);
        EXPECT(gbc.pc(), 0x4e7b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0213
        gbc.setState(0xa017, 0x4169, 0x85e0, 0xdf6a, 0xb2be, 0x7bcb, 0x1, 0x0);
        gbc.writeMem(0xa017, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x4169);
        EXPECT(gbc.pc(), 0xa019);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa017), 0xcb);
        EXPECT(gbc.readMem(0xa018), 0x88);
        // CB 88 0214
        gbc.setState(0x7ca2, 0xab46, 0x1a50, 0xe99, 0x2605, 0x99a, 0x0, 0x1);
        gbc.writeMem(0x7ca2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xab46);
        EXPECT(gbc.pc(), 0x7ca4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0215
        gbc.setState(0x9c75, 0x9a0c, 0xb0a0, 0x63ec, 0x476f, 0xf1fb, 0x1, 0x1);
        gbc.writeMem(0x9c75, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x9a0c);
        EXPECT(gbc.pc(), 0x9c77);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c75), 0xcb);
        EXPECT(gbc.readMem(0x9c76), 0x88);
        // CB 88 0216
        gbc.setState(0xc086, 0x9d41, 0x8300, 0xa361, 0xa3ea, 0x2531, 0x0, 0x1);
        gbc.writeMem(0xc086, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9d41);
        EXPECT(gbc.pc(), 0xc088);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc086), 0xcb);
        EXPECT(gbc.readMem(0xc087), 0x88);
        // CB 88 0217
        gbc.setState(0x4ba0, 0xd383, 0x36f0, 0xcc30, 0xfa41, 0xd69d, 0x0, 0x0);
        gbc.writeMem(0x4ba0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd383);
        EXPECT(gbc.pc(), 0x4ba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0218
        gbc.setState(0xd602, 0xaa07, 0x9220, 0xed61, 0x31f1, 0x4f0a, 0x1, 0x0);
        gbc.writeMem(0xd602, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xaa07);
        EXPECT(gbc.pc(), 0xd604);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd602), 0xcb);
        EXPECT(gbc.readMem(0xd603), 0x88);
        // CB 88 0219
        gbc.setState(0x5ac8, 0xca8, 0x1f80, 0x171a, 0xb8f9, 0x40b, 0x1, 0x0);
        gbc.writeMem(0x5ac8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xca8);
        EXPECT(gbc.pc(), 0x5aca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 021A
        gbc.setState(0xdc8b, 0xe1dc, 0x4550, 0xae09, 0x2886, 0x74f5, 0x0, 0x1);
        gbc.writeMem(0xdc8b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xe1dc);
        EXPECT(gbc.pc(), 0xdc8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc8b), 0xcb);
        EXPECT(gbc.readMem(0xdc8c), 0x88);
        // CB 88 021B
        gbc.setState(0x26b0, 0xbfa1, 0x6a00, 0xaa08, 0x3acc, 0xfe5b, 0x0, 0x0);
        gbc.writeMem(0x26b0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbfa1);
        EXPECT(gbc.pc(), 0x26b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 021C
        gbc.setState(0xa3e2, 0xbc37, 0xd5d0, 0x597f, 0x46a, 0xe991, 0x1, 0x0);
        gbc.writeMem(0xa3e2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbc37);
        EXPECT(gbc.pc(), 0xa3e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e2), 0xcb);
        EXPECT(gbc.readMem(0xa3e3), 0x88);
        // CB 88 021D
        gbc.setState(0x7e67, 0xf485, 0xce30, 0xddd5, 0x698a, 0x3b0e, 0x1, 0x1);
        gbc.writeMem(0x7e67, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf485);
        EXPECT(gbc.pc(), 0x7e69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 021E
        gbc.setState(0x8132, 0x49f9, 0x4520, 0x5787, 0xfb7c, 0xf4b, 0x0, 0x1);
        gbc.writeMem(0x8132, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x49f9);
        EXPECT(gbc.pc(), 0x8134);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8132), 0xcb);
        EXPECT(gbc.readMem(0x8133), 0x88);
        // CB 88 021F
        gbc.setState(0x960, 0x4a48, 0x2820, 0xbd3f, 0xcd52, 0x98e3, 0x0, 0x1);
        gbc.writeMem(0x960, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4a48);
        EXPECT(gbc.pc(), 0x962);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0220
        gbc.setState(0x981a, 0x9808, 0x4fe0, 0x3cc8, 0xe91f, 0xf9ea, 0x1, 0x1);
        gbc.writeMem(0x981a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9808);
        EXPECT(gbc.pc(), 0x981c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x981a), 0xcb);
        EXPECT(gbc.readMem(0x981b), 0x88);
        // CB 88 0221
        gbc.setState(0xa38, 0x4c1b, 0x2810, 0x2b00, 0xeb4b, 0xf1c0, 0x1, 0x1);
        gbc.writeMem(0xa38, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x4c1b);
        EXPECT(gbc.pc(), 0xa3a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0222
        gbc.setState(0x52e9, 0xc0ce, 0x9fe0, 0xf146, 0x3c6f, 0xc2de, 0x0, 0x0);
        gbc.writeMem(0x52e9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xc0ce);
        EXPECT(gbc.pc(), 0x52eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0223
        gbc.setState(0xe706, 0x9452, 0x1dd0, 0xfc57, 0x5387, 0x2629, 0x1, 0x0);
        gbc.writeMem(0xe706, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x9452);
        EXPECT(gbc.pc(), 0xe708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe706), 0xcb);
        EXPECT(gbc.readMem(0xe707), 0x88);
        // CB 88 0224
        gbc.setState(0x3b83, 0xb7b, 0xa830, 0x541e, 0x67ec, 0x8877, 0x0, 0x1);
        gbc.writeMem(0x3b83, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xb7b);
        EXPECT(gbc.pc(), 0x3b85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0225
        gbc.setState(0xd9b5, 0xa752, 0xa7d0, 0x878a, 0x5cba, 0x949b, 0x0, 0x1);
        gbc.writeMem(0xd9b5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xa752);
        EXPECT(gbc.pc(), 0xd9b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9b5), 0xcb);
        EXPECT(gbc.readMem(0xd9b6), 0x88);
        // CB 88 0226
        gbc.setState(0x2cb4, 0x4f5f, 0xb030, 0xf4cd, 0xc0ab, 0x4061, 0x1, 0x0);
        gbc.writeMem(0x2cb4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x4f5f);
        EXPECT(gbc.pc(), 0x2cb6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0227
        gbc.setState(0x593f, 0x6d83, 0x74e0, 0xc773, 0xe447, 0x55f9, 0x1, 0x0);
        gbc.writeMem(0x593f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x6d83);
        EXPECT(gbc.pc(), 0x5941);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0228
        gbc.setState(0xe5d8, 0x7528, 0xb2d0, 0x5062, 0x551f, 0x1419, 0x1, 0x0);
        gbc.writeMem(0xe5d8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x7528);
        EXPECT(gbc.pc(), 0xe5da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5d8), 0xcb);
        EXPECT(gbc.readMem(0xe5d9), 0x88);
        // CB 88 0229
        gbc.setState(0x4ba3, 0xac41, 0xbab0, 0x3dd5, 0x3d66, 0x4a20, 0x0, 0x0);
        gbc.writeMem(0x4ba3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xac41);
        EXPECT(gbc.pc(), 0x4ba5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 022A
        gbc.setState(0x3fe5, 0xa87, 0x8960, 0x5864, 0x9160, 0x7a27, 0x1, 0x1);
        gbc.writeMem(0x3fe5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa87);
        EXPECT(gbc.pc(), 0x3fe7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 022D
        gbc.setState(0xedff, 0xdead, 0x2d90, 0x2fd, 0x1de1, 0x6ead, 0x0, 0x1);
        gbc.writeMem(0xedff, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xdead);
        EXPECT(gbc.pc(), 0xee01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedff), 0xcb);
        EXPECT(gbc.readMem(0xee00), 0x88);
        // CB 88 022E
        gbc.setState(0xa689, 0x2361, 0xd0d0, 0x270b, 0xc921, 0x14ae, 0x0, 0x1);
        gbc.writeMem(0xa689, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x2361);
        EXPECT(gbc.pc(), 0xa68b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa689), 0xcb);
        EXPECT(gbc.readMem(0xa68a), 0x88);
        // CB 88 022F
        gbc.setState(0xcdf0, 0x1484, 0x7c0, 0xb8ee, 0xcc55, 0x1d7e, 0x0, 0x0);
        gbc.writeMem(0xcdf0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1484);
        EXPECT(gbc.pc(), 0xcdf2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcdf0), 0xcb);
        EXPECT(gbc.readMem(0xcdf1), 0x88);
        // CB 88 0230
        gbc.setState(0x4ef8, 0xed31, 0xbe70, 0xa60f, 0xd7fa, 0xea6e, 0x0, 0x1);
        gbc.writeMem(0x4ef8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xed31);
        EXPECT(gbc.pc(), 0x4efa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0231
        gbc.setState(0x4585, 0x4553, 0x5a10, 0xd431, 0xd2c, 0xe3, 0x1, 0x1);
        gbc.writeMem(0x4585, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4553);
        EXPECT(gbc.pc(), 0x4587);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0232
        gbc.setState(0x3bca, 0x48a, 0x6bb0, 0x18c7, 0xbfe4, 0xa78b, 0x0, 0x0);
        gbc.writeMem(0x3bca, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x48a);
        EXPECT(gbc.pc(), 0x3bcc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0233
        gbc.setState(0x9aab, 0x7069, 0xb830, 0x1e5b, 0xf850, 0xe9b3, 0x1, 0x1);
        gbc.writeMem(0x9aab, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7069);
        EXPECT(gbc.pc(), 0x9aad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9aab), 0xcb);
        EXPECT(gbc.readMem(0x9aac), 0x88);
        // CB 88 0234
        gbc.setState(0x45d8, 0xe8a4, 0x7340, 0xc395, 0xb276, 0x85a5, 0x0, 0x1);
        gbc.writeMem(0x45d8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xe8a4);
        EXPECT(gbc.pc(), 0x45da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0235
        gbc.setState(0x24f, 0x4269, 0xb840, 0x5f91, 0xe217, 0x18c8, 0x0, 0x0);
        gbc.writeMem(0x24f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x4269);
        EXPECT(gbc.pc(), 0x251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0236
        gbc.setState(0x6817, 0xbd77, 0x9ec0, 0xdbce, 0x35df, 0xd1be, 0x1, 0x0);
        gbc.writeMem(0x6817, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xbd77);
        EXPECT(gbc.pc(), 0x6819);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0237
        gbc.setState(0x756e, 0x1b45, 0x9fc0, 0x6171, 0xb110, 0x3ee2, 0x1, 0x0);
        gbc.writeMem(0x756e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1b45);
        EXPECT(gbc.pc(), 0x7570);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0238
        gbc.setState(0xe2b4, 0xedf5, 0xced0, 0xd1b1, 0x46, 0x953f, 0x1, 0x0);
        gbc.writeMem(0xe2b4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xedf5);
        EXPECT(gbc.pc(), 0xe2b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2b4), 0xcb);
        EXPECT(gbc.readMem(0xe2b5), 0x88);
        // CB 88 0239
        gbc.setState(0xe489, 0xbca2, 0x1b10, 0xac8e, 0xc289, 0x40dc, 0x1, 0x1);
        gbc.writeMem(0xe489, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xbca2);
        EXPECT(gbc.pc(), 0xe48b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe489), 0xcb);
        EXPECT(gbc.readMem(0xe48a), 0x88);
        // CB 88 023A
        gbc.setState(0xcb99, 0x64b6, 0x9540, 0xb976, 0x7f9, 0x44e1, 0x1, 0x1);
        gbc.writeMem(0xcb99, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x64b6);
        EXPECT(gbc.pc(), 0xcb9b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb99), 0xcb);
        EXPECT(gbc.readMem(0xcb9a), 0x88);
        // CB 88 023B
        gbc.setState(0xce3b, 0xfe9e, 0x10f0, 0xffa, 0xdcc3, 0xadcd, 0x0, 0x1);
        gbc.writeMem(0xce3b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xfe9e);
        EXPECT(gbc.pc(), 0xce3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce3b), 0xcb);
        EXPECT(gbc.readMem(0xce3c), 0x88);
        // CB 88 023C
        gbc.setState(0xbe47, 0x59e8, 0x26d0, 0x584c, 0xfde3, 0x45b7, 0x0, 0x0);
        gbc.writeMem(0xbe47, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x59e8);
        EXPECT(gbc.pc(), 0xbe49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe47), 0xcb);
        EXPECT(gbc.readMem(0xbe48), 0x88);
        // CB 88 023D
        gbc.setState(0x164e, 0x7935, 0xe1c0, 0x5ecc, 0x6e5b, 0x604a, 0x0, 0x0);
        gbc.writeMem(0x164e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7935);
        EXPECT(gbc.pc(), 0x1650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 023E
        gbc.setState(0xe253, 0xc405, 0xc150, 0x655, 0x6413, 0x3fc2, 0x1, 0x1);
        gbc.writeMem(0xe253, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xc405);
        EXPECT(gbc.pc(), 0xe255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe253), 0xcb);
        EXPECT(gbc.readMem(0xe254), 0x88);
        // CB 88 023F
        gbc.setState(0x70c4, 0x6d31, 0x2b40, 0xe8b4, 0xe53d, 0x5795, 0x0, 0x0);
        gbc.writeMem(0x70c4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x6d31);
        EXPECT(gbc.pc(), 0x70c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0240
        gbc.setState(0xa4d1, 0x993e, 0xb5b0, 0x9ea1, 0x310e, 0x4c91, 0x1, 0x0);
        gbc.writeMem(0xa4d1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x993e);
        EXPECT(gbc.pc(), 0xa4d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d1), 0xcb);
        EXPECT(gbc.readMem(0xa4d2), 0x88);
        // CB 88 0241
        gbc.setState(0xb443, 0xb01, 0x5c90, 0x2b7c, 0x2fa6, 0xf4d3, 0x0, 0x1);
        gbc.writeMem(0xb443, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xb01);
        EXPECT(gbc.pc(), 0xb445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb443), 0xcb);
        EXPECT(gbc.readMem(0xb444), 0x88);
        // CB 88 0242
        gbc.setState(0x9a34, 0x3b80, 0x7950, 0x5b17, 0x73cb, 0x4f50, 0x1, 0x1);
        gbc.writeMem(0x9a34, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x3b80);
        EXPECT(gbc.pc(), 0x9a36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a34), 0xcb);
        EXPECT(gbc.readMem(0x9a35), 0x88);
        // CB 88 0243
        gbc.setState(0x8d7f, 0x2f50, 0xc770, 0xd4ad, 0x61df, 0xa89b, 0x0, 0x1);
        gbc.writeMem(0x8d7f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x2f50);
        EXPECT(gbc.pc(), 0x8d81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d7f), 0xcb);
        EXPECT(gbc.readMem(0x8d80), 0x88);
        // CB 88 0244
        gbc.setState(0xd147, 0xc256, 0x9280, 0x983d, 0xc553, 0x804b, 0x0, 0x1);
        gbc.writeMem(0xd147, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc256);
        EXPECT(gbc.pc(), 0xd149);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd147), 0xcb);
        EXPECT(gbc.readMem(0xd148), 0x88);
        // CB 88 0245
        gbc.setState(0xcea, 0xa52e, 0x99c0, 0xf647, 0x4f36, 0xabc, 0x0, 0x0);
        gbc.writeMem(0xcea, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa52e);
        EXPECT(gbc.pc(), 0xcec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0246
        gbc.setState(0x7b9a, 0xf65e, 0x6bc0, 0x3f00, 0x9c64, 0xe24b, 0x0, 0x0);
        gbc.writeMem(0x7b9a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xf65e);
        EXPECT(gbc.pc(), 0x7b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0247
        gbc.setState(0xbc90, 0x67ef, 0x4950, 0x2485, 0xcbdd, 0x4ca, 0x0, 0x1);
        gbc.writeMem(0xbc90, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x67ef);
        EXPECT(gbc.pc(), 0xbc92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc90), 0xcb);
        EXPECT(gbc.readMem(0xbc91), 0x88);
        // CB 88 0248
        gbc.setState(0x796e, 0x8e34, 0x7580, 0xf40, 0xa4fa, 0xfc84, 0x1, 0x1);
        gbc.writeMem(0x796e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x8e34);
        EXPECT(gbc.pc(), 0x7970);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0249
        gbc.setState(0xd1c9, 0xbbc9, 0x2030, 0x939f, 0xc8a8, 0xa1, 0x1, 0x1);
        gbc.writeMem(0xd1c9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xbbc9);
        EXPECT(gbc.pc(), 0xd1cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1c9), 0xcb);
        EXPECT(gbc.readMem(0xd1ca), 0x88);
        // CB 88 024A
        gbc.setState(0x38ea, 0x6706, 0xa330, 0x6f04, 0x4f03, 0x8206, 0x1, 0x0);
        gbc.writeMem(0x38ea, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x6706);
        EXPECT(gbc.pc(), 0x38ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 024B
        gbc.setState(0x8f41, 0x4159, 0xf620, 0x7d13, 0xad3a, 0xfe99, 0x0, 0x0);
        gbc.writeMem(0x8f41, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x4159);
        EXPECT(gbc.pc(), 0x8f43);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f41), 0xcb);
        EXPECT(gbc.readMem(0x8f42), 0x88);
        // CB 88 024C
        gbc.setState(0x7603, 0xc0c8, 0xe490, 0x4ef8, 0x7b92, 0xdef1, 0x1, 0x0);
        gbc.writeMem(0x7603, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xc0c8);
        EXPECT(gbc.pc(), 0x7605);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 024D
        gbc.setState(0xaeee, 0x8db3, 0x3320, 0x3c44, 0x6dd7, 0x20e7, 0x0, 0x1);
        gbc.writeMem(0xaeee, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x8db3);
        EXPECT(gbc.pc(), 0xaef0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeee), 0xcb);
        EXPECT(gbc.readMem(0xaeef), 0x88);
        // CB 88 024E
        gbc.setState(0x5f86, 0x41c9, 0xe000, 0x290c, 0xaccf, 0x7b8b, 0x1, 0x0);
        gbc.writeMem(0x5f86, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x41c9);
        EXPECT(gbc.pc(), 0x5f88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 024F
        gbc.setState(0xec5a, 0x65f3, 0xa5d0, 0x15f6, 0xd33e, 0x808b, 0x0, 0x1);
        gbc.writeMem(0xec5a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x65f3);
        EXPECT(gbc.pc(), 0xec5c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec5a), 0xcb);
        EXPECT(gbc.readMem(0xec5b), 0x88);
        // CB 88 0250
        gbc.setState(0x477c, 0x9b98, 0xaeb0, 0xa482, 0xa198, 0xb22a, 0x0, 0x0);
        gbc.writeMem(0x477c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x9b98);
        EXPECT(gbc.pc(), 0x477e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0251
        gbc.setState(0x2dd8, 0x6dbe, 0x52d0, 0xd035, 0x127e, 0x8cd0, 0x1, 0x1);
        gbc.writeMem(0x2dd8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x6dbe);
        EXPECT(gbc.pc(), 0x2dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0252
        gbc.setState(0x8b06, 0xda0c, 0x76e0, 0x3f9b, 0xa1b8, 0x6785, 0x1, 0x1);
        gbc.writeMem(0x8b06, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xda0c);
        EXPECT(gbc.pc(), 0x8b08);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b06), 0xcb);
        EXPECT(gbc.readMem(0x8b07), 0x88);
        // CB 88 0253
        gbc.setState(0x8549, 0xf3ad, 0xbf50, 0x4eb7, 0x8491, 0x5a31, 0x1, 0x0);
        gbc.writeMem(0x8549, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xf3ad);
        EXPECT(gbc.pc(), 0x854b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8549), 0xcb);
        EXPECT(gbc.readMem(0x854a), 0x88);
        // CB 88 0255
        gbc.setState(0x65d8, 0x84f4, 0x7620, 0x663, 0xa619, 0xc6e8, 0x1, 0x0);
        gbc.writeMem(0x65d8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x84f4);
        EXPECT(gbc.pc(), 0x65da);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0256
        gbc.setState(0x64b5, 0xc589, 0x40f0, 0x7190, 0x2dd2, 0xb9a4, 0x0, 0x1);
        gbc.writeMem(0x64b5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xc589);
        EXPECT(gbc.pc(), 0x64b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0257
        gbc.setState(0x52a4, 0x2c7a, 0x6a70, 0x4058, 0x5e5e, 0x2453, 0x1, 0x1);
        gbc.writeMem(0x52a4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x2c7a);
        EXPECT(gbc.pc(), 0x52a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0258
        gbc.setState(0x1db3, 0x362f, 0x47c0, 0xbe67, 0xde80, 0x462d, 0x0, 0x0);
        gbc.writeMem(0x1db3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x362f);
        EXPECT(gbc.pc(), 0x1db5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0259
        gbc.setState(0x5149, 0x7cf3, 0xc3b0, 0x6f1b, 0x97ba, 0x8fc1, 0x1, 0x0);
        gbc.writeMem(0x5149, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x7cf3);
        EXPECT(gbc.pc(), 0x514b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 025A
        gbc.setState(0xe9e8, 0x8362, 0x4770, 0x5dac, 0x23c0, 0x1b40, 0x0, 0x0);
        gbc.writeMem(0xe9e8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8362);
        EXPECT(gbc.pc(), 0xe9ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9e8), 0xcb);
        EXPECT(gbc.readMem(0xe9e9), 0x88);
        // CB 88 025B
        gbc.setState(0x63bb, 0x81e, 0x3700, 0xdae0, 0xde59, 0x349e, 0x1, 0x1);
        gbc.writeMem(0x63bb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x81e);
        EXPECT(gbc.pc(), 0x63bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 025C
        gbc.setState(0xc7e2, 0x40ea, 0x2070, 0xf4b8, 0xd389, 0xff6c, 0x0, 0x0);
        gbc.writeMem(0xc7e2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x40ea);
        EXPECT(gbc.pc(), 0xc7e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7e2), 0xcb);
        EXPECT(gbc.readMem(0xc7e3), 0x88);
        // CB 88 025D
        gbc.setState(0xaef, 0x959a, 0x5ef0, 0xac1d, 0xba16, 0x4a82, 0x0, 0x1);
        gbc.writeMem(0xaef, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x959a);
        EXPECT(gbc.pc(), 0xaf1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 025E
        gbc.setState(0xb5a3, 0x9a77, 0xdc80, 0xec19, 0x446c, 0x9010, 0x1, 0x1);
        gbc.writeMem(0xb5a3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x9a77);
        EXPECT(gbc.pc(), 0xb5a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a3), 0xcb);
        EXPECT(gbc.readMem(0xb5a4), 0x88);
        // CB 88 025F
        gbc.setState(0xbf96, 0xff7f, 0x51e0, 0x5d34, 0xe4e8, 0xa323, 0x0, 0x0);
        gbc.writeMem(0xbf96, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xff7f);
        EXPECT(gbc.pc(), 0xbf98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf96), 0xcb);
        EXPECT(gbc.readMem(0xbf97), 0x88);
        // CB 88 0260
        gbc.setState(0xed29, 0x9144, 0x9e00, 0xc3b, 0xab74, 0xcb83, 0x1, 0x0);
        gbc.writeMem(0xed29, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x9144);
        EXPECT(gbc.pc(), 0xed2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed29), 0xcb);
        EXPECT(gbc.readMem(0xed2a), 0x88);
        // CB 88 0261
        gbc.setState(0x8582, 0x9a67, 0x9460, 0x8f4a, 0x3680, 0xb8ea, 0x1, 0x1);
        gbc.writeMem(0x8582, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x9a67);
        EXPECT(gbc.pc(), 0x8584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8582), 0xcb);
        EXPECT(gbc.readMem(0x8583), 0x88);
        // CB 88 0262
        gbc.setState(0x3702, 0x492c, 0x6850, 0xbc44, 0x1a48, 0xfe23, 0x0, 0x0);
        gbc.writeMem(0x3702, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x492c);
        EXPECT(gbc.pc(), 0x3704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0263
        gbc.setState(0x47a3, 0x36b3, 0x5300, 0x7a7, 0x68e9, 0xef02, 0x1, 0x1);
        gbc.writeMem(0x47a3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x36b3);
        EXPECT(gbc.pc(), 0x47a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0264
        gbc.setState(0x2031, 0xa311, 0x9860, 0x874b, 0xf6b1, 0xd458, 0x0, 0x0);
        gbc.writeMem(0x2031, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xa311);
        EXPECT(gbc.pc(), 0x2033);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0265
        gbc.setState(0x93f9, 0xf82d, 0x2300, 0x93ba, 0x4873, 0xf81c, 0x0, 0x1);
        gbc.writeMem(0x93f9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xf82d);
        EXPECT(gbc.pc(), 0x93fb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93f9), 0xcb);
        EXPECT(gbc.readMem(0x93fa), 0x88);
        // CB 88 0266
        gbc.setState(0xda05, 0xe7b8, 0xc060, 0x43b0, 0xb09d, 0x2155, 0x1, 0x1);
        gbc.writeMem(0xda05, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xe7b8);
        EXPECT(gbc.pc(), 0xda07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda05), 0xcb);
        EXPECT(gbc.readMem(0xda06), 0x88);
        // CB 88 0267
        gbc.setState(0x5984, 0x1ff7, 0x97c0, 0xea87, 0x6368, 0xccc5, 0x1, 0x0);
        gbc.writeMem(0x5984, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1ff7);
        EXPECT(gbc.pc(), 0x5986);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0268
        gbc.setState(0xe4e0, 0xb4c3, 0x5280, 0x1572, 0xecf7, 0x76f2, 0x0, 0x0);
        gbc.writeMem(0xe4e0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xb4c3);
        EXPECT(gbc.pc(), 0xe4e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe4e0), 0xcb);
        EXPECT(gbc.readMem(0xe4e1), 0x88);
        // CB 88 0269
        gbc.setState(0x6e35, 0x5223, 0xfa20, 0x4cde, 0x97bf, 0xf9a5, 0x0, 0x0);
        gbc.writeMem(0x6e35, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5223);
        EXPECT(gbc.pc(), 0x6e37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 026A
        gbc.setState(0x4a33, 0x702d, 0x600, 0xf5db, 0x7b70, 0x2f52, 0x1, 0x1);
        gbc.writeMem(0x4a33, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x702d);
        EXPECT(gbc.pc(), 0x4a35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 026B
        gbc.setState(0x2081, 0xed16, 0xf7b0, 0xeae1, 0xc208, 0xc0a4, 0x1, 0x0);
        gbc.writeMem(0x2081, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xed16);
        EXPECT(gbc.pc(), 0x2083);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 026C
        gbc.setState(0x2a88, 0x993a, 0x5e60, 0x6308, 0x9bdd, 0x6b0d, 0x1, 0x1);
        gbc.writeMem(0x2a88, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x993a);
        EXPECT(gbc.pc(), 0x2a8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 026D
        gbc.setState(0x1046, 0x628d, 0xbc40, 0x7cc, 0xeff, 0xbcba, 0x0, 0x1);
        gbc.writeMem(0x1046, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x628d);
        EXPECT(gbc.pc(), 0x1048);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 026E
        gbc.setState(0x7c5a, 0xdc21, 0x72b0, 0x9f87, 0x235a, 0xe38e, 0x1, 0x0);
        gbc.writeMem(0x7c5a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdc21);
        EXPECT(gbc.pc(), 0x7c5c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 026F
        gbc.setState(0x6340, 0xc7ca, 0x5600, 0x3960, 0x86c4, 0xd382, 0x1, 0x0);
        gbc.writeMem(0x6340, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xc7ca);
        EXPECT(gbc.pc(), 0x6342);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0270
        gbc.setState(0xed1c, 0x2aeb, 0xace0, 0x4b42, 0xf3f3, 0xee45, 0x0, 0x0);
        gbc.writeMem(0xed1c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0x2aeb);
        EXPECT(gbc.pc(), 0xed1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xed1c), 0xcb);
        EXPECT(gbc.readMem(0xed1d), 0x88);
        // CB 88 0271
        gbc.setState(0x2111, 0x49b0, 0x7d30, 0x43fe, 0x9008, 0x4269, 0x0, 0x1);
        gbc.writeMem(0x2111, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x49b0);
        EXPECT(gbc.pc(), 0x2113);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0272
        gbc.setState(0x17e8, 0xf121, 0x82a0, 0x6a1b, 0xe7e6, 0x44ba, 0x1, 0x1);
        gbc.writeMem(0x17e8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xf121);
        EXPECT(gbc.pc(), 0x17ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0274
        gbc.setState(0x343e, 0xf1c0, 0xf910, 0x7b6, 0x2c56, 0x6818, 0x1, 0x1);
        gbc.writeMem(0x343e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xf1c0);
        EXPECT(gbc.pc(), 0x3440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0275
        gbc.setState(0x96ae, 0xe4d4, 0x7810, 0xb2da, 0xa0b9, 0x6e40, 0x1, 0x1);
        gbc.writeMem(0x96ae, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xe4d4);
        EXPECT(gbc.pc(), 0x96b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96ae), 0xcb);
        EXPECT(gbc.readMem(0x96af), 0x88);
        // CB 88 0276
        gbc.setState(0xd4fa, 0xda5f, 0x22a0, 0x4d7b, 0x3a32, 0x6d56, 0x0, 0x0);
        gbc.writeMem(0xd4fa, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xda5f);
        EXPECT(gbc.pc(), 0xd4fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4fa), 0xcb);
        EXPECT(gbc.readMem(0xd4fb), 0x88);
        // CB 88 0277
        gbc.setState(0x7fd0, 0x6c10, 0xaa40, 0xd823, 0x3ab3, 0x2f4a, 0x1, 0x0);
        gbc.writeMem(0x7fd0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x6c10);
        EXPECT(gbc.pc(), 0x7fd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0278
        gbc.setState(0x21b9, 0xcb5e, 0xd140, 0x6f62, 0x6bcb, 0x679c, 0x1, 0x1);
        gbc.writeMem(0x21b9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xcb5e);
        EXPECT(gbc.pc(), 0x21bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0279
        gbc.setState(0x1374, 0xdfa0, 0x3bb0, 0xf7b3, 0x6490, 0x6c3, 0x0, 0x0);
        gbc.writeMem(0x1374, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xdfa0);
        EXPECT(gbc.pc(), 0x1376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 027A
        gbc.setState(0x992d, 0xd0d3, 0x2c0, 0xf8da, 0xa13a, 0x8506, 0x0, 0x1);
        gbc.writeMem(0x992d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xd0d3);
        EXPECT(gbc.pc(), 0x992f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x992d), 0xcb);
        EXPECT(gbc.readMem(0x992e), 0x88);
        // CB 88 027B
        gbc.setState(0x6c8, 0x9516, 0xc080, 0xda2d, 0x5ed2, 0xa612, 0x1, 0x1);
        gbc.writeMem(0x6c8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x9516);
        EXPECT(gbc.pc(), 0x6ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 027C
        gbc.setState(0xdf37, 0x130, 0x6a30, 0xc078, 0x376f, 0x1c66, 0x0, 0x0);
        gbc.writeMem(0xdf37, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x130);
        EXPECT(gbc.pc(), 0xdf39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf37), 0xcb);
        EXPECT(gbc.readMem(0xdf38), 0x88);
        // CB 88 027D
        gbc.setState(0x264d, 0xfc6b, 0xf870, 0x677e, 0xd59, 0xddfd, 0x1, 0x0);
        gbc.writeMem(0x264d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xfc6b);
        EXPECT(gbc.pc(), 0x264f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 027E
        gbc.setState(0x817a, 0x17e6, 0xd6a0, 0xc5c5, 0xc7ba, 0x13ec, 0x0, 0x1);
        gbc.writeMem(0x817a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x17e6);
        EXPECT(gbc.pc(), 0x817c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x817a), 0xcb);
        EXPECT(gbc.readMem(0x817b), 0x88);
        // CB 88 027F
        gbc.setState(0xcf7c, 0xa3bc, 0x4750, 0x3f67, 0x2e53, 0xfae4, 0x1, 0x1);
        gbc.writeMem(0xcf7c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa3bc);
        EXPECT(gbc.pc(), 0xcf7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf7c), 0xcb);
        EXPECT(gbc.readMem(0xcf7d), 0x88);
        // CB 88 0280
        gbc.setState(0x82af, 0x10ba, 0xe890, 0x7dae, 0xbc33, 0xa340, 0x0, 0x0);
        gbc.writeMem(0x82af, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x10ba);
        EXPECT(gbc.pc(), 0x82b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x82af), 0xcb);
        EXPECT(gbc.readMem(0x82b0), 0x88);
        // CB 88 0281
        gbc.setState(0x38a3, 0x2f81, 0xdce0, 0x49fc, 0xc9f5, 0xa1b4, 0x0, 0x0);
        gbc.writeMem(0x38a3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x2f81);
        EXPECT(gbc.pc(), 0x38a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0282
        gbc.setState(0x859f, 0x85f5, 0xd060, 0xbc5, 0x2b1, 0x7a3, 0x1, 0x0);
        gbc.writeMem(0x859f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x85f5);
        EXPECT(gbc.pc(), 0x85a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x859f), 0xcb);
        EXPECT(gbc.readMem(0x85a0), 0x88);
        // CB 88 0283
        gbc.setState(0xe967, 0x6bee, 0xb9c0, 0x23c9, 0xc301, 0x4255, 0x1, 0x0);
        gbc.writeMem(0xe967, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6bee);
        EXPECT(gbc.pc(), 0xe969);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe967), 0xcb);
        EXPECT(gbc.readMem(0xe968), 0x88);
        // CB 88 0284
        gbc.setState(0xaa6d, 0x4f29, 0xf7f0, 0xf78b, 0xa85c, 0x611c, 0x0, 0x1);
        gbc.writeMem(0xaa6d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x4f29);
        EXPECT(gbc.pc(), 0xaa6f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa6d), 0xcb);
        EXPECT(gbc.readMem(0xaa6e), 0x88);
        // CB 88 0285
        gbc.setState(0xa544, 0x729e, 0x55b0, 0xf3fe, 0xcc, 0x16f3, 0x1, 0x0);
        gbc.writeMem(0xa544, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x729e);
        EXPECT(gbc.pc(), 0xa546);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa544), 0xcb);
        EXPECT(gbc.readMem(0xa545), 0x88);
        // CB 88 0286
        gbc.setState(0x90f5, 0x95b6, 0x9830, 0x495b, 0x3f03, 0xd02a, 0x0, 0x0);
        gbc.writeMem(0x90f5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x95b6);
        EXPECT(gbc.pc(), 0x90f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90f5), 0xcb);
        EXPECT(gbc.readMem(0x90f6), 0x88);
        // CB 88 0287
        gbc.setState(0xd0cd, 0x63e0, 0x8860, 0x4b7a, 0x2589, 0x4c97, 0x1, 0x1);
        gbc.writeMem(0xd0cd, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x63e0);
        EXPECT(gbc.pc(), 0xd0cf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0cd), 0xcb);
        EXPECT(gbc.readMem(0xd0ce), 0x88);
        // CB 88 0288
        gbc.setState(0xe754, 0x36c2, 0xf470, 0xf0e2, 0x5aa0, 0xb726, 0x1, 0x0);
        gbc.writeMem(0xe754, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x36c2);
        EXPECT(gbc.pc(), 0xe756);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe754), 0xcb);
        EXPECT(gbc.readMem(0xe755), 0x88);
        // CB 88 0289
        gbc.setState(0x94bc, 0xc374, 0xeb50, 0xc941, 0xb53e, 0x2330, 0x1, 0x1);
        gbc.writeMem(0x94bc, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc374);
        EXPECT(gbc.pc(), 0x94be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94bc), 0xcb);
        EXPECT(gbc.readMem(0x94bd), 0x88);
        // CB 88 028A
        gbc.setState(0xc6c9, 0x34d2, 0xa040, 0x78d4, 0x6d9c, 0x7177, 0x1, 0x1);
        gbc.writeMem(0xc6c9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x34d2);
        EXPECT(gbc.pc(), 0xc6cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c9), 0xcb);
        EXPECT(gbc.readMem(0xc6ca), 0x88);
        // CB 88 028B
        gbc.setState(0x7504, 0x36b7, 0x6e50, 0xd382, 0xef7d, 0xa4eb, 0x0, 0x0);
        gbc.writeMem(0x7504, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x36b7);
        EXPECT(gbc.pc(), 0x7506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 028C
        gbc.setState(0xdf8f, 0xd7e, 0xfcf0, 0x8e5a, 0x4e5a, 0xdfc8, 0x0, 0x1);
        gbc.writeMem(0xdf8f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xd7e);
        EXPECT(gbc.pc(), 0xdf91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdf8f), 0xcb);
        EXPECT(gbc.readMem(0xdf90), 0x88);
        // CB 88 028D
        gbc.setState(0xc46b, 0xc7c7, 0xd840, 0xdd7a, 0x5659, 0xf557, 0x1, 0x1);
        gbc.writeMem(0xc46b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc7c7);
        EXPECT(gbc.pc(), 0xc46d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc46b), 0xcb);
        EXPECT(gbc.readMem(0xc46c), 0x88);
        // CB 88 028E
        gbc.setState(0x5027, 0x793d, 0xab20, 0x7b98, 0x5e3e, 0xbf6c, 0x1, 0x0);
        gbc.writeMem(0x5027, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x793d);
        EXPECT(gbc.pc(), 0x5029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 028F
        gbc.setState(0xe976, 0xeaaa, 0x4270, 0xed89, 0xee07, 0x54c, 0x0, 0x0);
        gbc.writeMem(0xe976, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xeaaa);
        EXPECT(gbc.pc(), 0xe978);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe976), 0xcb);
        EXPECT(gbc.readMem(0xe977), 0x88);
        // CB 88 0291
        gbc.setState(0x9cb1, 0xa65b, 0x8720, 0x406, 0xd749, 0x4d38, 0x0, 0x0);
        gbc.writeMem(0x9cb1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa65b);
        EXPECT(gbc.pc(), 0x9cb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9cb1), 0xcb);
        EXPECT(gbc.readMem(0x9cb2), 0x88);
        // CB 88 0293
        gbc.setState(0x57df, 0x847b, 0x27c0, 0x74e3, 0x62fb, 0x89b6, 0x0, 0x1);
        gbc.writeMem(0x57df, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x847b);
        EXPECT(gbc.pc(), 0x57e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0294
        gbc.setState(0x695d, 0xd80c, 0x290, 0xcf53, 0x74ec, 0x2a57, 0x1, 0x1);
        gbc.writeMem(0x695d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xd80c);
        EXPECT(gbc.pc(), 0x695f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0295
        gbc.setState(0x80d3, 0x20fd, 0x4cd0, 0x27f6, 0xb292, 0x7e05, 0x0, 0x0);
        gbc.writeMem(0x80d3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x20fd);
        EXPECT(gbc.pc(), 0x80d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80d3), 0xcb);
        EXPECT(gbc.readMem(0x80d4), 0x88);
        // CB 88 0296
        gbc.setState(0xae09, 0x9c96, 0x4410, 0xc0f, 0xcd73, 0x42e2, 0x1, 0x1);
        gbc.writeMem(0xae09, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9c96);
        EXPECT(gbc.pc(), 0xae0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae09), 0xcb);
        EXPECT(gbc.readMem(0xae0a), 0x88);
        // CB 88 0297
        gbc.setState(0x43cd, 0x4114, 0x78c0, 0x3e00, 0x2a0b, 0x29e3, 0x0, 0x1);
        gbc.writeMem(0x43cd, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0x4114);
        EXPECT(gbc.pc(), 0x43cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0298
        gbc.setState(0x70c4, 0x96fd, 0x19f0, 0xa597, 0xb3e, 0x7dc0, 0x1, 0x1);
        gbc.writeMem(0x70c4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x96fd);
        EXPECT(gbc.pc(), 0x70c6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0299
        gbc.setState(0x5744, 0xe423, 0x9f40, 0xc5ab, 0x58a9, 0xc009, 0x1, 0x1);
        gbc.writeMem(0x5744, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe423);
        EXPECT(gbc.pc(), 0x5746);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 029A
        gbc.setState(0xb5d8, 0xd882, 0xbb70, 0x3edc, 0x897a, 0xcca6, 0x0, 0x1);
        gbc.writeMem(0xb5d8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd882);
        EXPECT(gbc.pc(), 0xb5da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb5d8), 0xcb);
        EXPECT(gbc.readMem(0xb5d9), 0x88);
        // CB 88 029B
        gbc.setState(0xba91, 0xaec9, 0xe700, 0x8580, 0xff37, 0x86d6, 0x1, 0x1);
        gbc.writeMem(0xba91, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xaec9);
        EXPECT(gbc.pc(), 0xba93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba91), 0xcb);
        EXPECT(gbc.readMem(0xba92), 0x88);
        // CB 88 029C
        gbc.setState(0xc1ab, 0x60db, 0xec0, 0x7f62, 0x7854, 0xa662, 0x1, 0x0);
        gbc.writeMem(0xc1ab, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x60db);
        EXPECT(gbc.pc(), 0xc1ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1ab), 0xcb);
        EXPECT(gbc.readMem(0xc1ac), 0x88);
        // CB 88 029D
        gbc.setState(0x5d1c, 0x69d3, 0x35d0, 0xb443, 0x902d, 0x3259, 0x0, 0x1);
        gbc.writeMem(0x5d1c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x69d3);
        EXPECT(gbc.pc(), 0x5d1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 029E
        gbc.setState(0xe33a, 0x8084, 0xcd10, 0xaa8e, 0xdb53, 0x5752, 0x1, 0x1);
        gbc.writeMem(0xe33a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x8084);
        EXPECT(gbc.pc(), 0xe33c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33a), 0xcb);
        EXPECT(gbc.readMem(0xe33b), 0x88);
        // CB 88 029F
        gbc.setState(0xad51, 0xb7da, 0x9c40, 0x290c, 0x51c1, 0x746c, 0x0, 0x1);
        gbc.writeMem(0xad51, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0xb7da);
        EXPECT(gbc.pc(), 0xad53);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad51), 0xcb);
        EXPECT(gbc.readMem(0xad52), 0x88);
        // CB 88 02A0
        gbc.setState(0xe8f3, 0x1c55, 0x55e0, 0xc869, 0x9725, 0x83e4, 0x0, 0x0);
        gbc.writeMem(0xe8f3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x1c55);
        EXPECT(gbc.pc(), 0xe8f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8f3), 0xcb);
        EXPECT(gbc.readMem(0xe8f4), 0x88);
        // CB 88 02A1
        gbc.setState(0xd2fe, 0xb108, 0x51d0, 0xaf4b, 0xd34d, 0x89ac, 0x0, 0x1);
        gbc.writeMem(0xd2fe, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb108);
        EXPECT(gbc.pc(), 0xd300);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd2fe), 0xcb);
        EXPECT(gbc.readMem(0xd2ff), 0x88);
        // CB 88 02A2
        gbc.setState(0xb408, 0x8132, 0x7990, 0x732d, 0x273a, 0x8d57, 0x1, 0x1);
        gbc.writeMem(0xb408, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x8132);
        EXPECT(gbc.pc(), 0xb40a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb408), 0xcb);
        EXPECT(gbc.readMem(0xb409), 0x88);
        // CB 88 02A3
        gbc.setState(0x655a, 0x8007, 0xeb40, 0x9005, 0xb0ea, 0x6189, 0x1, 0x1);
        gbc.writeMem(0x655a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x8007);
        EXPECT(gbc.pc(), 0x655c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02A4
        gbc.setState(0x9a83, 0x631a, 0x700, 0xf453, 0x7047, 0x1421, 0x0, 0x0);
        gbc.writeMem(0x9a83, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x631a);
        EXPECT(gbc.pc(), 0x9a85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a83), 0xcb);
        EXPECT(gbc.readMem(0x9a84), 0x88);
        // CB 88 02A5
        gbc.setState(0xe391, 0x3ab9, 0xa070, 0x8013, 0x3680, 0x676d, 0x0, 0x0);
        gbc.writeMem(0xe391, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3ab9);
        EXPECT(gbc.pc(), 0xe393);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe391), 0xcb);
        EXPECT(gbc.readMem(0xe392), 0x88);
        // CB 88 02A6
        gbc.setState(0x1c61, 0x56a4, 0x6a30, 0x4c09, 0x8409, 0xc038, 0x1, 0x1);
        gbc.writeMem(0x1c61, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x56a4);
        EXPECT(gbc.pc(), 0x1c63);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02A7
        gbc.setState(0xa43, 0x6294, 0x4c90, 0x5415, 0x7af9, 0x9f80, 0x0, 0x0);
        gbc.writeMem(0xa43, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x6294);
        EXPECT(gbc.pc(), 0xa45);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02A9
        gbc.setState(0x35d3, 0x853e, 0x1000, 0xf418, 0x55ae, 0xd289, 0x0, 0x0);
        gbc.writeMem(0x35d3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x853e);
        EXPECT(gbc.pc(), 0x35d5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02AA
        gbc.setState(0xbd8, 0xb8f6, 0x5df0, 0x70da, 0xdfcb, 0x4eac, 0x1, 0x0);
        gbc.writeMem(0xbd8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xb8f6);
        EXPECT(gbc.pc(), 0xbda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02AC
        gbc.setState(0xd33b, 0xc5a4, 0xbc40, 0x3eea, 0xc1eb, 0xcaa6, 0x1, 0x0);
        gbc.writeMem(0xd33b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xc5a4);
        EXPECT(gbc.pc(), 0xd33d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd33b), 0xcb);
        EXPECT(gbc.readMem(0xd33c), 0x88);
        // CB 88 02AD
        gbc.setState(0xecaa, 0x4ee9, 0x7f70, 0x6772, 0xc76, 0xb6a5, 0x0, 0x0);
        gbc.writeMem(0xecaa, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x4ee9);
        EXPECT(gbc.pc(), 0xecac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xecaa), 0xcb);
        EXPECT(gbc.readMem(0xecab), 0x88);
        // CB 88 02AE
        gbc.setState(0x5d53, 0xcf8d, 0x3220, 0x7eb3, 0x37ba, 0x96a0, 0x1, 0x0);
        gbc.writeMem(0x5d53, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcf8d);
        EXPECT(gbc.pc(), 0x5d55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02AF
        gbc.setState(0x658b, 0x7662, 0x5cf0, 0x1c3e, 0xf6f, 0xe76f, 0x1, 0x1);
        gbc.writeMem(0x658b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7662);
        EXPECT(gbc.pc(), 0x658d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02B0
        gbc.setState(0x2287, 0xa143, 0x2ad0, 0xc54b, 0xd8a6, 0x2b95, 0x0, 0x0);
        gbc.writeMem(0x2287, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xa143);
        EXPECT(gbc.pc(), 0x2289);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02B1
        gbc.setState(0x367b, 0x764b, 0x6840, 0x6d8b, 0xe3, 0x3d05, 0x0, 0x1);
        gbc.writeMem(0x367b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x764b);
        EXPECT(gbc.pc(), 0x367d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02B2
        gbc.setState(0x402e, 0x4968, 0x90e0, 0xfdec, 0xf86, 0x40c5, 0x0, 0x1);
        gbc.writeMem(0x402e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x4968);
        EXPECT(gbc.pc(), 0x4030);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02B3
        gbc.setState(0x37f1, 0x2ecf, 0xae0, 0x762f, 0x4ad1, 0xae89, 0x1, 0x0);
        gbc.writeMem(0x37f1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x2ecf);
        EXPECT(gbc.pc(), 0x37f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02B4
        gbc.setState(0x9e16, 0x6f79, 0xa670, 0x4cc, 0xd73d, 0xc3ac, 0x0, 0x1);
        gbc.writeMem(0x9e16, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x6f79);
        EXPECT(gbc.pc(), 0x9e18);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e16), 0xcb);
        EXPECT(gbc.readMem(0x9e17), 0x88);
        // CB 88 02B5
        gbc.setState(0x84b1, 0x3552, 0xb0f0, 0xe774, 0xe16d, 0xd99, 0x0, 0x1);
        gbc.writeMem(0x84b1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x3552);
        EXPECT(gbc.pc(), 0x84b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b1), 0xcb);
        EXPECT(gbc.readMem(0x84b2), 0x88);
        // CB 88 02B6
        gbc.setState(0x1b8, 0xd02, 0x6490, 0x8bbb, 0x7de3, 0x5efd, 0x1, 0x0);
        gbc.writeMem(0x1b8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xd02);
        EXPECT(gbc.pc(), 0x1ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02B8
        gbc.setState(0x5c53, 0xfa40, 0xa320, 0xd12b, 0xe072, 0x29d0, 0x1, 0x0);
        gbc.writeMem(0x5c53, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xfa40);
        EXPECT(gbc.pc(), 0x5c55);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02B9
        gbc.setState(0x4858, 0xe588, 0x1790, 0x2b0e, 0xe969, 0x48dd, 0x0, 0x1);
        gbc.writeMem(0x4858, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe588);
        EXPECT(gbc.pc(), 0x485a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02BA
        gbc.setState(0x1a72, 0x250b, 0xa5b0, 0xcb11, 0x9137, 0xc3c8, 0x1, 0x1);
        gbc.writeMem(0x1a72, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x250b);
        EXPECT(gbc.pc(), 0x1a74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02BB
        gbc.setState(0x1010, 0x9c85, 0x52b0, 0xf888, 0xd00f, 0xed17, 0x1, 0x0);
        gbc.writeMem(0x1010, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x9c85);
        EXPECT(gbc.pc(), 0x1012);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02BC
        gbc.setState(0x2df, 0x54b3, 0xe70, 0xe8f1, 0x19f0, 0x6ebc, 0x1, 0x0);
        gbc.writeMem(0x2df, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x54b3);
        EXPECT(gbc.pc(), 0x2e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02BD
        gbc.setState(0x8b30, 0x912d, 0x6ce0, 0xfcfc, 0x9c43, 0x121d, 0x0, 0x0);
        gbc.writeMem(0x8b30, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x912d);
        EXPECT(gbc.pc(), 0x8b32);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b30), 0xcb);
        EXPECT(gbc.readMem(0x8b31), 0x88);
        // CB 88 02BE
        gbc.setState(0x5f00, 0x9ffc, 0xec60, 0xbb93, 0xf3d2, 0xf563, 0x1, 0x1);
        gbc.writeMem(0x5f00, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9ffc);
        EXPECT(gbc.pc(), 0x5f02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02BF
        gbc.setState(0xce9e, 0x66bf, 0xc030, 0xc6bd, 0xa57f, 0xe9d9, 0x0, 0x1);
        gbc.writeMem(0xce9e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x66bf);
        EXPECT(gbc.pc(), 0xcea0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce9e), 0xcb);
        EXPECT(gbc.readMem(0xce9f), 0x88);
        // CB 88 02C0
        gbc.setState(0xde8, 0x2d05, 0x4ef0, 0xf10b, 0x879b, 0xd03c, 0x0, 0x0);
        gbc.writeMem(0xde8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2d05);
        EXPECT(gbc.pc(), 0xdea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02C1
        gbc.setState(0xd6a8, 0xb5b3, 0xcf0, 0x58af, 0x56e8, 0x1365, 0x0, 0x1);
        gbc.writeMem(0xd6a8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb5b3);
        EXPECT(gbc.pc(), 0xd6aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6a8), 0xcb);
        EXPECT(gbc.readMem(0xd6a9), 0x88);
        // CB 88 02C2
        gbc.setState(0x6718, 0x343f, 0xcd0, 0x28ea, 0x367f, 0xa5b8, 0x0, 0x1);
        gbc.writeMem(0x6718, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x343f);
        EXPECT(gbc.pc(), 0x671a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02C3
        gbc.setState(0xd62a, 0xcbe4, 0xff10, 0xaf1f, 0xef9b, 0x5a7e, 0x1, 0x0);
        gbc.writeMem(0xd62a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xcbe4);
        EXPECT(gbc.pc(), 0xd62c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd62a), 0xcb);
        EXPECT(gbc.readMem(0xd62b), 0x88);
        // CB 88 02C4
        gbc.setState(0x1502, 0x5644, 0x8040, 0xaf66, 0x7737, 0x8c65, 0x1, 0x0);
        gbc.writeMem(0x1502, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5644);
        EXPECT(gbc.pc(), 0x1504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02C5
        gbc.setState(0x4cad, 0x3672, 0xa00, 0x79b4, 0x3133, 0x58f9, 0x1, 0x0);
        gbc.writeMem(0x4cad, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x3672);
        EXPECT(gbc.pc(), 0x4caf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02C6
        gbc.setState(0x43a, 0x31f9, 0x43c0, 0xb592, 0xaa3e, 0x199e, 0x1, 0x1);
        gbc.writeMem(0x43a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x31f9);
        EXPECT(gbc.pc(), 0x43c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02C7
        gbc.setState(0x955e, 0xfa97, 0x14b0, 0x4e43, 0xff11, 0xb3cd, 0x1, 0x1);
        gbc.writeMem(0x955e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xfa97);
        EXPECT(gbc.pc(), 0x9560);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x955e), 0xcb);
        EXPECT(gbc.readMem(0x955f), 0x88);
        // CB 88 02C8
        gbc.setState(0x87cb, 0xf399, 0x1580, 0x1920, 0xb373, 0x2667, 0x1, 0x0);
        gbc.writeMem(0x87cb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xf399);
        EXPECT(gbc.pc(), 0x87cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87cb), 0xcb);
        EXPECT(gbc.readMem(0x87cc), 0x88);
        // CB 88 02C9
        gbc.setState(0x2b3a, 0x4ed, 0x5500, 0x6d43, 0xfa43, 0xd0a9, 0x1, 0x1);
        gbc.writeMem(0x2b3a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x4ed);
        EXPECT(gbc.pc(), 0x2b3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02CA
        gbc.setState(0xeffb, 0x223c, 0x1b90, 0x347a, 0x4bbb, 0xe78f, 0x0, 0x1);
        gbc.writeMem(0xeffb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x223c);
        EXPECT(gbc.pc(), 0xeffd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeffb), 0xcb);
        EXPECT(gbc.readMem(0xeffc), 0x88);
        // CB 88 02CB
        gbc.setState(0x85c, 0x18ab, 0x7780, 0xd9, 0x9993, 0x3d57, 0x1, 0x0);
        gbc.writeMem(0x85c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x18ab);
        EXPECT(gbc.pc(), 0x85e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02CC
        gbc.setState(0x5232, 0x6268, 0xf340, 0xe746, 0x2992, 0x3c8b, 0x0, 0x0);
        gbc.writeMem(0x5232, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x6268);
        EXPECT(gbc.pc(), 0x5234);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02CD
        gbc.setState(0xd1a2, 0x13eb, 0x6900, 0x3d7f, 0x6f2e, 0x26c1, 0x1, 0x1);
        gbc.writeMem(0xd1a2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x13eb);
        EXPECT(gbc.pc(), 0xd1a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd1a2), 0xcb);
        EXPECT(gbc.readMem(0xd1a3), 0x88);
        // CB 88 02CE
        gbc.setState(0x664, 0xb693, 0x9610, 0x46c6, 0xa2b4, 0x39af, 0x1, 0x0);
        gbc.writeMem(0x664, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xb693);
        EXPECT(gbc.pc(), 0x666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02CF
        gbc.setState(0x4ebe, 0x2dcc, 0x8120, 0x2e67, 0x7816, 0x6eaa, 0x0, 0x1);
        gbc.writeMem(0x4ebe, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x2dcc);
        EXPECT(gbc.pc(), 0x4ec0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02D0
        gbc.setState(0x831, 0x23b9, 0xd4f0, 0x8882, 0xdb61, 0x3ad9, 0x1, 0x1);
        gbc.writeMem(0x831, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x23b9);
        EXPECT(gbc.pc(), 0x833);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02D1
        gbc.setState(0x9031, 0xf06, 0xee60, 0xbcd8, 0xb497, 0x43e6, 0x1, 0x1);
        gbc.writeMem(0x9031, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xf06);
        EXPECT(gbc.pc(), 0x9033);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9031), 0xcb);
        EXPECT(gbc.readMem(0x9032), 0x88);
        // CB 88 02D2
        gbc.setState(0x39c, 0xa7d9, 0x4350, 0xd042, 0xc3d3, 0x9500, 0x1, 0x0);
        gbc.writeMem(0x39c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xa7d9);
        EXPECT(gbc.pc(), 0x39e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02D3
        gbc.setState(0xbe66, 0xbeff, 0xe6b0, 0x32ed, 0x29ee, 0x11cb, 0x1, 0x0);
        gbc.writeMem(0xbe66, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xbeff);
        EXPECT(gbc.pc(), 0xbe68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe66), 0xcb);
        EXPECT(gbc.readMem(0xbe67), 0x88);
        // CB 88 02D4
        gbc.setState(0x4301, 0x16d, 0x44f0, 0xf16b, 0xcecd, 0xd81d, 0x1, 0x0);
        gbc.writeMem(0x4301, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x16d);
        EXPECT(gbc.pc(), 0x4303);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02D5
        gbc.setState(0xe13f, 0x6f3b, 0xd880, 0x7ded, 0xf169, 0xdc77, 0x1, 0x1);
        gbc.writeMem(0xe13f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x6f3b);
        EXPECT(gbc.pc(), 0xe141);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe13f), 0xcb);
        EXPECT(gbc.readMem(0xe140), 0x88);
        // CB 88 02D6
        gbc.setState(0x4ce3, 0x8f7e, 0xd270, 0xd14a, 0x6a68, 0x306f, 0x1, 0x0);
        gbc.writeMem(0x4ce3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x8f7e);
        EXPECT(gbc.pc(), 0x4ce5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02D7
        gbc.setState(0x729b, 0xb25c, 0x2b50, 0x78e3, 0x7b5b, 0xed30, 0x1, 0x1);
        gbc.writeMem(0x729b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xb25c);
        EXPECT(gbc.pc(), 0x729d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02D8
        gbc.setState(0xd24, 0x448e, 0xe80, 0x7579, 0x7dcc, 0x1110, 0x0, 0x0);
        gbc.writeMem(0xd24, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x448e);
        EXPECT(gbc.pc(), 0xd26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02DA
        gbc.setState(0x452f, 0x3800, 0x27d0, 0x542a, 0x7f52, 0x3002, 0x0, 0x0);
        gbc.writeMem(0x452f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x3800);
        EXPECT(gbc.pc(), 0x4531);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02DB
        gbc.setState(0x18ce, 0xd1b9, 0x9310, 0xe146, 0x1ca1, 0xcb35, 0x1, 0x1);
        gbc.writeMem(0x18ce, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xd1b9);
        EXPECT(gbc.pc(), 0x18d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02DC
        gbc.setState(0xcb3f, 0x7ec6, 0x8860, 0x7311, 0x8b21, 0x4a91, 0x0, 0x0);
        gbc.writeMem(0xcb3f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x7ec6);
        EXPECT(gbc.pc(), 0xcb41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb3f), 0xcb);
        EXPECT(gbc.readMem(0xcb40), 0x88);
        // CB 88 02DD
        gbc.setState(0x9b90, 0x29af, 0x6d60, 0xb67, 0xdce, 0x58e5, 0x1, 0x1);
        gbc.writeMem(0x9b90, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x29af);
        EXPECT(gbc.pc(), 0x9b92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b90), 0xcb);
        EXPECT(gbc.readMem(0x9b91), 0x88);
        // CB 88 02DE
        gbc.setState(0x3f7d, 0xa99a, 0x8be0, 0xf6a6, 0x3db6, 0x9c3d, 0x0, 0x0);
        gbc.writeMem(0x3f7d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xa99a);
        EXPECT(gbc.pc(), 0x3f7f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02DF
        gbc.setState(0xe920, 0x6940, 0xa4f0, 0x6451, 0x8e2b, 0xbcef, 0x0, 0x0);
        gbc.writeMem(0xe920, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x6940);
        EXPECT(gbc.pc(), 0xe922);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe920), 0xcb);
        EXPECT(gbc.readMem(0xe921), 0x88);
        // CB 88 02E1
        gbc.setState(0x6d83, 0x404e, 0x8960, 0x73a6, 0x7074, 0x948e, 0x1, 0x1);
        gbc.writeMem(0x6d83, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x404e);
        EXPECT(gbc.pc(), 0x6d85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02E2
        gbc.setState(0x63ab, 0xb20a, 0x3c20, 0x67d1, 0xe42f, 0xb994, 0x0, 0x0);
        gbc.writeMem(0x63ab, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xb20a);
        EXPECT(gbc.pc(), 0x63ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02E3
        gbc.setState(0xddc6, 0x3ec1, 0x7e0, 0x46fc, 0x8660, 0x4fe1, 0x1, 0x1);
        gbc.writeMem(0xddc6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x3ec1);
        EXPECT(gbc.pc(), 0xddc8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddc6), 0xcb);
        EXPECT(gbc.readMem(0xddc7), 0x88);
        // CB 88 02E4
        gbc.setState(0x18ca, 0x8e75, 0x8d40, 0x9148, 0xed7e, 0xbac1, 0x0, 0x0);
        gbc.writeMem(0x18ca, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x8e75);
        EXPECT(gbc.pc(), 0x18cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02E5
        gbc.setState(0xc1fe, 0xe605, 0xc270, 0x6593, 0x1f, 0x854e, 0x0, 0x1);
        gbc.writeMem(0xc1fe, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe605);
        EXPECT(gbc.pc(), 0xc200);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc1fe), 0xcb);
        EXPECT(gbc.readMem(0xc1ff), 0x88);
        // CB 88 02E6
        gbc.setState(0x97c1, 0x5d64, 0xbd10, 0x88f9, 0x920e, 0x1fc5, 0x1, 0x0);
        gbc.writeMem(0x97c1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x5d64);
        EXPECT(gbc.pc(), 0x97c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97c1), 0xcb);
        EXPECT(gbc.readMem(0x97c2), 0x88);
        // CB 88 02E7
        gbc.setState(0xe5c8, 0x3777, 0xddd0, 0xfdb6, 0x79a0, 0x5bf, 0x0, 0x0);
        gbc.writeMem(0xe5c8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x3777);
        EXPECT(gbc.pc(), 0xe5ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5c8), 0xcb);
        EXPECT(gbc.readMem(0xe5c9), 0x88);
        // CB 88 02E8
        gbc.setState(0x19b2, 0xd887, 0x6d40, 0xbefb, 0x78bb, 0x255b, 0x1, 0x0);
        gbc.writeMem(0x19b2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xd887);
        EXPECT(gbc.pc(), 0x19b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02E9
        gbc.setState(0x6022, 0x7373, 0x1ca0, 0x7233, 0xe95f, 0x7d68, 0x1, 0x0);
        gbc.writeMem(0x6022, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x7373);
        EXPECT(gbc.pc(), 0x6024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02EA
        gbc.setState(0x8fce, 0x5ce1, 0x6620, 0x85ff, 0x1ea2, 0x6997, 0x1, 0x1);
        gbc.writeMem(0x8fce, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x5ce1);
        EXPECT(gbc.pc(), 0x8fd0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8fce), 0xcb);
        EXPECT(gbc.readMem(0x8fcf), 0x88);
        // CB 88 02EB
        gbc.setState(0x5c83, 0x9209, 0x3e60, 0x4036, 0x7551, 0x339e, 0x1, 0x0);
        gbc.writeMem(0x5c83, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9209);
        EXPECT(gbc.pc(), 0x5c85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02ED
        gbc.setState(0xa0a3, 0x3424, 0xdcc0, 0xf189, 0x30cd, 0xc8f2, 0x0, 0x1);
        gbc.writeMem(0xa0a3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3424);
        EXPECT(gbc.pc(), 0xa0a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0a3), 0xcb);
        EXPECT(gbc.readMem(0xa0a4), 0x88);
        // CB 88 02EE
        gbc.setState(0x3d36, 0x50a7, 0xcf60, 0xfc36, 0x9c06, 0x4012, 0x1, 0x1);
        gbc.writeMem(0x3d36, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x50a7);
        EXPECT(gbc.pc(), 0x3d38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02EF
        gbc.setState(0x5ff0, 0xc9d0, 0xcad0, 0xdc80, 0x574b, 0xb7d2, 0x1, 0x0);
        gbc.writeMem(0x5ff0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xd2);
        EXPECT(gbc.sp(), 0xc9d0);
        EXPECT(gbc.pc(), 0x5ff2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02F0
        gbc.setState(0x9a48, 0xce73, 0xade0, 0x6b56, 0xc2ed, 0x29de, 0x1, 0x1);
        gbc.writeMem(0x9a48, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0xce73);
        EXPECT(gbc.pc(), 0x9a4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a48), 0xcb);
        EXPECT(gbc.readMem(0x9a49), 0x88);
        // CB 88 02F1
        gbc.setState(0x27fa, 0x5053, 0x9f40, 0x4082, 0x513c, 0x1f15, 0x0, 0x0);
        gbc.writeMem(0x27fa, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5053);
        EXPECT(gbc.pc(), 0x27fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02F2
        gbc.setState(0xc74a, 0xa35e, 0x1ef0, 0x2c25, 0x8e8b, 0x8efc, 0x0, 0x0);
        gbc.writeMem(0xc74a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xa35e);
        EXPECT(gbc.pc(), 0xc74c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc74a), 0xcb);
        EXPECT(gbc.readMem(0xc74b), 0x88);
        // CB 88 02F3
        gbc.setState(0x220d, 0xb699, 0x90c0, 0x6380, 0x7a10, 0x96a3, 0x0, 0x1);
        gbc.writeMem(0x220d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xb699);
        EXPECT(gbc.pc(), 0x220f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02F4
        gbc.setState(0x2627, 0x2f74, 0xe10, 0x71f5, 0x53b2, 0xff3c, 0x0, 0x1);
        gbc.writeMem(0x2627, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x2f74);
        EXPECT(gbc.pc(), 0x2629);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02F5
        gbc.setState(0x2c34, 0x4195, 0xbdb0, 0x5f87, 0xde72, 0xef4, 0x1, 0x0);
        gbc.writeMem(0x2c34, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4195);
        EXPECT(gbc.pc(), 0x2c36);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02F6
        gbc.setState(0x41b, 0x564e, 0xc80, 0xfd10, 0xd638, 0x8004, 0x1, 0x1);
        gbc.writeMem(0x41b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x564e);
        EXPECT(gbc.pc(), 0x41d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02F7
        gbc.setState(0x990a, 0xc96e, 0xa160, 0x5751, 0xca52, 0xcb17, 0x1, 0x0);
        gbc.writeMem(0x990a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc96e);
        EXPECT(gbc.pc(), 0x990c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x990a), 0xcb);
        EXPECT(gbc.readMem(0x990b), 0x88);
        // CB 88 02F8
        gbc.setState(0x1885, 0x896, 0x9d90, 0x94c7, 0x7418, 0xe543, 0x0, 0x1);
        gbc.writeMem(0x1885, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x896);
        EXPECT(gbc.pc(), 0x1887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02F9
        gbc.setState(0x14b9, 0x5260, 0x5c30, 0x6920, 0xf266, 0x3af0, 0x1, 0x0);
        gbc.writeMem(0x14b9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x5260);
        EXPECT(gbc.pc(), 0x14bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02FA
        gbc.setState(0x4d11, 0xda97, 0xf6d0, 0x1aec, 0xc243, 0x6323, 0x1, 0x1);
        gbc.writeMem(0x4d11, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xda97);
        EXPECT(gbc.pc(), 0x4d13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02FB
        gbc.setState(0x3395, 0xbf11, 0xae0, 0x97ff, 0x32ca, 0xe99c, 0x1, 0x0);
        gbc.writeMem(0x3395, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xbf11);
        EXPECT(gbc.pc(), 0x3397);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 02FC
        gbc.setState(0x2cc5, 0x84a, 0xa150, 0x8eb0, 0x6ddc, 0x31ab, 0x1, 0x1);
        gbc.writeMem(0x2cc5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x84a);
        EXPECT(gbc.pc(), 0x2cc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 02FD
        gbc.setState(0xaddb, 0x5172, 0x76f0, 0xe1e2, 0xb6a7, 0x8dae, 0x1, 0x0);
        gbc.writeMem(0xaddb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x5172);
        EXPECT(gbc.pc(), 0xaddd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaddb), 0xcb);
        EXPECT(gbc.readMem(0xaddc), 0x88);
        // CB 88 02FE
        gbc.setState(0xeca0, 0x2f88, 0xfb80, 0xfb4d, 0x56d, 0x5db1, 0x0, 0x1);
        gbc.writeMem(0xeca0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2f88);
        EXPECT(gbc.pc(), 0xeca2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeca0), 0xcb);
        EXPECT(gbc.readMem(0xeca1), 0x88);
        // CB 88 02FF
        gbc.setState(0x26d0, 0x93e7, 0x5930, 0x8da2, 0x9fb0, 0x2cc8, 0x1, 0x0);
        gbc.writeMem(0x26d0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x93e7);
        EXPECT(gbc.pc(), 0x26d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0300
        gbc.setState(0x1378, 0x650f, 0xc3c0, 0xe1ea, 0xd1c9, 0x899c, 0x1, 0x0);
        gbc.writeMem(0x1378, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x650f);
        EXPECT(gbc.pc(), 0x137a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0301
        gbc.setState(0x78cc, 0x9635, 0x2550, 0xbe0, 0x7bc5, 0xb8df, 0x1, 0x0);
        gbc.writeMem(0x78cc, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x9635);
        EXPECT(gbc.pc(), 0x78ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0302
        gbc.setState(0x8a10, 0x26b9, 0xcf40, 0x6ca9, 0xe518, 0xec41, 0x1, 0x0);
        gbc.writeMem(0x8a10, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x26b9);
        EXPECT(gbc.pc(), 0x8a12);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a10), 0xcb);
        EXPECT(gbc.readMem(0x8a11), 0x88);
        // CB 88 0303
        gbc.setState(0x2b5c, 0x52b1, 0xdf30, 0x275b, 0xb358, 0x3c24, 0x1, 0x1);
        gbc.writeMem(0x2b5c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x52b1);
        EXPECT(gbc.pc(), 0x2b5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0304
        gbc.setState(0xbbbb, 0x7240, 0xc430, 0x3aa0, 0x1add, 0xf293, 0x1, 0x1);
        gbc.writeMem(0xbbbb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x7240);
        EXPECT(gbc.pc(), 0xbbbd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbbb), 0xcb);
        EXPECT(gbc.readMem(0xbbbc), 0x88);
        // CB 88 0305
        gbc.setState(0xc29f, 0x1bae, 0xfe90, 0x8148, 0x4da8, 0x601a, 0x1, 0x0);
        gbc.writeMem(0xc29f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x1bae);
        EXPECT(gbc.pc(), 0xc2a1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc29f), 0xcb);
        EXPECT(gbc.readMem(0xc2a0), 0x88);
        // CB 88 0306
        gbc.setState(0xabb2, 0x5e97, 0x8460, 0x43af, 0x4159, 0x2881, 0x1, 0x0);
        gbc.writeMem(0xabb2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x5e97);
        EXPECT(gbc.pc(), 0xabb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabb2), 0xcb);
        EXPECT(gbc.readMem(0xabb3), 0x88);
        // CB 88 0307
        gbc.setState(0xcfa1, 0x8693, 0xe640, 0xbf66, 0x8ad4, 0xdc48, 0x1, 0x1);
        gbc.writeMem(0xcfa1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x8693);
        EXPECT(gbc.pc(), 0xcfa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcfa1), 0xcb);
        EXPECT(gbc.readMem(0xcfa2), 0x88);
        // CB 88 0308
        gbc.setState(0xca9a, 0x4620, 0xbc90, 0x19ac, 0x239f, 0x69fd, 0x0, 0x1);
        gbc.writeMem(0xca9a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xac);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x4620);
        EXPECT(gbc.pc(), 0xca9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca9a), 0xcb);
        EXPECT(gbc.readMem(0xca9b), 0x88);
        // CB 88 0309
        gbc.setState(0x644e, 0x3ed8, 0x1c80, 0x85b8, 0xe5e4, 0x120c, 0x1, 0x1);
        gbc.writeMem(0x644e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x3ed8);
        EXPECT(gbc.pc(), 0x6450);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 030A
        gbc.setState(0xb970, 0xcb06, 0x130, 0x2b82, 0xa50e, 0xb5f8, 0x0, 0x1);
        gbc.writeMem(0xb970, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xcb06);
        EXPECT(gbc.pc(), 0xb972);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb970), 0xcb);
        EXPECT(gbc.readMem(0xb971), 0x88);
        // CB 88 030B
        gbc.setState(0x73b1, 0x9272, 0x8a20, 0x95af, 0x8c58, 0x59fd, 0x1, 0x0);
        gbc.writeMem(0x73b1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x9272);
        EXPECT(gbc.pc(), 0x73b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 030C
        gbc.setState(0x2daf, 0x3ccc, 0xb8f0, 0xb7fb, 0xb1c6, 0x47cf, 0x0, 0x0);
        gbc.writeMem(0x2daf, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x3ccc);
        EXPECT(gbc.pc(), 0x2db1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 030D
        gbc.setState(0xdfe4, 0xb89b, 0x4490, 0xfe28, 0xc0f2, 0x7c56, 0x1, 0x1);
        gbc.writeMem(0xdfe4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xb89b);
        EXPECT(gbc.pc(), 0xdfe6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfe4), 0xcb);
        EXPECT(gbc.readMem(0xdfe5), 0x88);
        // CB 88 030E
        gbc.setState(0xd3b3, 0x5eb9, 0x46d0, 0x333b, 0xca4d, 0xe1c9, 0x0, 0x1);
        gbc.writeMem(0xd3b3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x5eb9);
        EXPECT(gbc.pc(), 0xd3b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd3b3), 0xcb);
        EXPECT(gbc.readMem(0xd3b4), 0x88);
        // CB 88 030F
        gbc.setState(0x5059, 0x5632, 0x2800, 0x56c2, 0x81bd, 0xd89a, 0x0, 0x1);
        gbc.writeMem(0x5059, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x5632);
        EXPECT(gbc.pc(), 0x505b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0310
        gbc.setState(0x3cf5, 0x2a37, 0xa840, 0x854c, 0x1a7d, 0x81ce, 0x0, 0x1);
        gbc.writeMem(0x3cf5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2a37);
        EXPECT(gbc.pc(), 0x3cf7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0311
        gbc.setState(0x920b, 0xb118, 0xfed0, 0xb1ae, 0xa323, 0xbcf9, 0x1, 0x1);
        gbc.writeMem(0x920b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xb118);
        EXPECT(gbc.pc(), 0x920d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x920b), 0xcb);
        EXPECT(gbc.readMem(0x920c), 0x88);
        // CB 88 0312
        gbc.setState(0xd069, 0x81e4, 0xfb80, 0x13, 0xe400, 0xcf17, 0x1, 0x0);
        gbc.writeMem(0xd069, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x81e4);
        EXPECT(gbc.pc(), 0xd06b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd069), 0xcb);
        EXPECT(gbc.readMem(0xd06a), 0x88);
        // CB 88 0313
        gbc.setState(0x18c6, 0x65c7, 0x7dc0, 0x9bf5, 0x3b21, 0x5038, 0x0, 0x0);
        gbc.writeMem(0x18c6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x65c7);
        EXPECT(gbc.pc(), 0x18c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0314
        gbc.setState(0xb192, 0xcd54, 0x9d60, 0x67f2, 0x2e59, 0xa1eb, 0x1, 0x1);
        gbc.writeMem(0xb192, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xcd54);
        EXPECT(gbc.pc(), 0xb194);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb192), 0xcb);
        EXPECT(gbc.readMem(0xb193), 0x88);
        // CB 88 0315
        gbc.setState(0x6c72, 0x742a, 0x49f0, 0xf1ad, 0xd9d, 0xbc3b, 0x1, 0x0);
        gbc.writeMem(0x6c72, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x742a);
        EXPECT(gbc.pc(), 0x6c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0316
        gbc.setState(0x1f54, 0x4d73, 0xd8d0, 0xed1f, 0x6ffe, 0xdf0d, 0x0, 0x0);
        gbc.writeMem(0x1f54, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x4d73);
        EXPECT(gbc.pc(), 0x1f56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0317
        gbc.setState(0x8fd9, 0x368, 0xdd30, 0x25cd, 0xa0ce, 0x5e08, 0x1, 0x0);
        gbc.writeMem(0x8fd9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x368);
        EXPECT(gbc.pc(), 0x8fdb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fd9), 0xcb);
        EXPECT(gbc.readMem(0x8fda), 0x88);
        // CB 88 0318
        gbc.setState(0x8c75, 0xe3a7, 0xfd60, 0xad67, 0x3beb, 0x21e0, 0x0, 0x0);
        gbc.writeMem(0x8c75, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xe3a7);
        EXPECT(gbc.pc(), 0x8c77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c75), 0xcb);
        EXPECT(gbc.readMem(0x8c76), 0x88);
        // CB 88 0319
        gbc.setState(0x960a, 0xcf16, 0xf560, 0xbf1d, 0x9ed8, 0x2674, 0x1, 0x1);
        gbc.writeMem(0x960a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xcf16);
        EXPECT(gbc.pc(), 0x960c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x960a), 0xcb);
        EXPECT(gbc.readMem(0x960b), 0x88);
        // CB 88 031A
        gbc.setState(0xaf45, 0x6e4d, 0x6550, 0xd559, 0xa19b, 0x8fda, 0x1, 0x0);
        gbc.writeMem(0xaf45, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x6e4d);
        EXPECT(gbc.pc(), 0xaf47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf45), 0xcb);
        EXPECT(gbc.readMem(0xaf46), 0x88);
        // CB 88 031B
        gbc.setState(0xc768, 0xca04, 0xe2e0, 0x451d, 0x1066, 0xa9bc, 0x1, 0x1);
        gbc.writeMem(0xc768, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xca04);
        EXPECT(gbc.pc(), 0xc76a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc768), 0xcb);
        EXPECT(gbc.readMem(0xc769), 0x88);
        // CB 88 031C
        gbc.setState(0x3323, 0x2cd8, 0xbe40, 0x7160, 0xe351, 0x802, 0x0, 0x0);
        gbc.writeMem(0x3323, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0x2cd8);
        EXPECT(gbc.pc(), 0x3325);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 031D
        gbc.setState(0x1f7d, 0x4c0, 0x9920, 0x8717, 0xe6dd, 0x478e, 0x1, 0x1);
        gbc.writeMem(0x1f7d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4c0);
        EXPECT(gbc.pc(), 0x1f7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 031E
        gbc.setState(0x21fc, 0x7dce, 0x2350, 0x3320, 0x38bb, 0x4461, 0x1, 0x1);
        gbc.writeMem(0x21fc, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x7dce);
        EXPECT(gbc.pc(), 0x21fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 031F
        gbc.setState(0xb6a8, 0xb613, 0x3970, 0x4638, 0x5d10, 0x12c1, 0x1, 0x0);
        gbc.writeMem(0xb6a8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xb613);
        EXPECT(gbc.pc(), 0xb6aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a8), 0xcb);
        EXPECT(gbc.readMem(0xb6a9), 0x88);
        // CB 88 0320
        gbc.setState(0x374d, 0x7ca1, 0x2aa0, 0xed84, 0xc3d8, 0x8bfa, 0x1, 0x0);
        gbc.writeMem(0x374d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x7ca1);
        EXPECT(gbc.pc(), 0x374f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0321
        gbc.setState(0x3239, 0xd3c1, 0x7930, 0xd3df, 0xefdb, 0x78b1, 0x1, 0x1);
        gbc.writeMem(0x3239, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xd3c1);
        EXPECT(gbc.pc(), 0x323b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0322
        gbc.setState(0xe5ad, 0x3f05, 0x2690, 0x6d41, 0xc05d, 0xa929, 0x1, 0x1);
        gbc.writeMem(0xe5ad, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x3f05);
        EXPECT(gbc.pc(), 0xe5af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5ad), 0xcb);
        EXPECT(gbc.readMem(0xe5ae), 0x88);
        // CB 88 0325
        gbc.setState(0xa7ac, 0x3711, 0x95c0, 0x96b4, 0x3513, 0x143a, 0x1, 0x0);
        gbc.writeMem(0xa7ac, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3711);
        EXPECT(gbc.pc(), 0xa7ae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa7ac), 0xcb);
        EXPECT(gbc.readMem(0xa7ad), 0x88);
        // CB 88 0327
        gbc.setState(0x824f, 0xdbd7, 0x8db0, 0x4b5f, 0xf081, 0x42be, 0x0, 0x0);
        gbc.writeMem(0x824f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xdbd7);
        EXPECT(gbc.pc(), 0x8251);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x824f), 0xcb);
        EXPECT(gbc.readMem(0x8250), 0x88);
        // CB 88 0328
        gbc.setState(0x78fd, 0xcbde, 0x2790, 0x951, 0x6436, 0x2667, 0x1, 0x0);
        gbc.writeMem(0x78fd, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xcbde);
        EXPECT(gbc.pc(), 0x78ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0329
        gbc.setState(0xdf2f, 0x9917, 0x3ce0, 0x938d, 0x51db, 0x7ea0, 0x1, 0x1);
        gbc.writeMem(0xdf2f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x9917);
        EXPECT(gbc.pc(), 0xdf31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf2f), 0xcb);
        EXPECT(gbc.readMem(0xdf30), 0x88);
        // CB 88 032A
        gbc.setState(0x344c, 0xde1a, 0xa7a0, 0x87, 0x4f0e, 0x7ef5, 0x1, 0x1);
        gbc.writeMem(0x344c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xde1a);
        EXPECT(gbc.pc(), 0x344e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 032B
        gbc.setState(0xb789, 0xc613, 0xc180, 0x3e7, 0x1665, 0xa02f, 0x0, 0x1);
        gbc.writeMem(0xb789, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xc613);
        EXPECT(gbc.pc(), 0xb78b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb789), 0xcb);
        EXPECT(gbc.readMem(0xb78a), 0x88);
        // CB 88 032C
        gbc.setState(0x2499, 0x24c6, 0xeb90, 0xe2b8, 0x709, 0xac96, 0x1, 0x0);
        gbc.writeMem(0x2499, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x24c6);
        EXPECT(gbc.pc(), 0x249b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 032D
        gbc.setState(0xd262, 0x5925, 0x7c80, 0xb4b, 0xba6b, 0x9d6d, 0x1, 0x1);
        gbc.writeMem(0xd262, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5925);
        EXPECT(gbc.pc(), 0xd264);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd262), 0xcb);
        EXPECT(gbc.readMem(0xd263), 0x88);
        // CB 88 032E
        gbc.setState(0x6b2c, 0x30bf, 0xba60, 0xd519, 0x6f6d, 0xebc7, 0x0, 0x0);
        gbc.writeMem(0x6b2c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x30bf);
        EXPECT(gbc.pc(), 0x6b2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 032F
        gbc.setState(0x136f, 0x3f6e, 0xdcb0, 0xf30e, 0xef46, 0x490b, 0x1, 0x0);
        gbc.writeMem(0x136f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x3f6e);
        EXPECT(gbc.pc(), 0x1371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0330
        gbc.setState(0x896d, 0x4d9d, 0x4d80, 0x93eb, 0xd4c7, 0x92e4, 0x1, 0x1);
        gbc.writeMem(0x896d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x4d9d);
        EXPECT(gbc.pc(), 0x896f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x896d), 0xcb);
        EXPECT(gbc.readMem(0x896e), 0x88);
        // CB 88 0331
        gbc.setState(0x8644, 0x76dd, 0x79b0, 0xa762, 0x5e5f, 0xca37, 0x0, 0x0);
        gbc.writeMem(0x8644, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x76dd);
        EXPECT(gbc.pc(), 0x8646);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8644), 0xcb);
        EXPECT(gbc.readMem(0x8645), 0x88);
        // CB 88 0332
        gbc.setState(0x2186, 0xcc45, 0x860, 0x8619, 0x9277, 0xd338, 0x0, 0x1);
        gbc.writeMem(0x2186, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xcc45);
        EXPECT(gbc.pc(), 0x2188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0333
        gbc.setState(0x2de3, 0x326f, 0x2350, 0xf5fd, 0xdb59, 0xba2f, 0x1, 0x1);
        gbc.writeMem(0x2de3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x326f);
        EXPECT(gbc.pc(), 0x2de5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0334
        gbc.setState(0x6dac, 0xee5d, 0xb5e0, 0xbe8b, 0xcf2a, 0xf68d, 0x1, 0x0);
        gbc.writeMem(0x6dac, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xee5d);
        EXPECT(gbc.pc(), 0x6dae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0335
        gbc.setState(0xc73a, 0x7479, 0x6340, 0xf353, 0xbe71, 0xb15f, 0x1, 0x0);
        gbc.writeMem(0xc73a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x7479);
        EXPECT(gbc.pc(), 0xc73c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc73a), 0xcb);
        EXPECT(gbc.readMem(0xc73b), 0x88);
        // CB 88 0336
        gbc.setState(0x9c22, 0xa6a6, 0xcb70, 0x2dfc, 0x12d8, 0xb6c7, 0x0, 0x1);
        gbc.writeMem(0x9c22, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xa6a6);
        EXPECT(gbc.pc(), 0x9c24);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9c22), 0xcb);
        EXPECT(gbc.readMem(0x9c23), 0x88);
        // CB 88 0337
        gbc.setState(0x7bca, 0x4131, 0x4da0, 0xe1e6, 0xd926, 0xb312, 0x1, 0x0);
        gbc.writeMem(0x7bca, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4131);
        EXPECT(gbc.pc(), 0x7bcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0338
        gbc.setState(0x89e0, 0xe118, 0x8a00, 0x8943, 0x56f1, 0x23e8, 0x0, 0x0);
        gbc.writeMem(0x89e0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0xe118);
        EXPECT(gbc.pc(), 0x89e2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89e0), 0xcb);
        EXPECT(gbc.readMem(0x89e1), 0x88);
        // CB 88 0339
        gbc.setState(0xe783, 0xa10e, 0x7950, 0x25cd, 0x9ce3, 0x4ef0, 0x0, 0x0);
        gbc.writeMem(0xe783, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xa10e);
        EXPECT(gbc.pc(), 0xe785);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe783), 0xcb);
        EXPECT(gbc.readMem(0xe784), 0x88);
        // CB 88 033A
        gbc.setState(0xb8fb, 0xdc5e, 0x7080, 0x13cb, 0xd7a2, 0x2bdb, 0x0, 0x1);
        gbc.writeMem(0xb8fb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xdc5e);
        EXPECT(gbc.pc(), 0xb8fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb8fb), 0xcb);
        EXPECT(gbc.readMem(0xb8fc), 0x88);
        // CB 88 033B
        gbc.setState(0xdc9c, 0x2608, 0xef80, 0xb08a, 0x85a, 0x6c6, 0x1, 0x0);
        gbc.writeMem(0xdc9c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2608);
        EXPECT(gbc.pc(), 0xdc9e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc9c), 0xcb);
        EXPECT(gbc.readMem(0xdc9d), 0x88);
        // CB 88 033C
        gbc.setState(0xa2c1, 0x5970, 0x6750, 0x44ca, 0xce86, 0xc0b0, 0x1, 0x0);
        gbc.writeMem(0xa2c1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x5970);
        EXPECT(gbc.pc(), 0xa2c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa2c1), 0xcb);
        EXPECT(gbc.readMem(0xa2c2), 0x88);
        // CB 88 033D
        gbc.setState(0xeeaa, 0xf62a, 0xb970, 0xded4, 0x1209, 0xa609, 0x1, 0x0);
        gbc.writeMem(0xeeaa, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xf62a);
        EXPECT(gbc.pc(), 0xeeac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeeaa), 0xcb);
        EXPECT(gbc.readMem(0xeeab), 0x88);
        // CB 88 033E
        gbc.setState(0x6825, 0x5a1b, 0x74c0, 0x8a47, 0x831d, 0x36b2, 0x0, 0x0);
        gbc.writeMem(0x6825, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x5a1b);
        EXPECT(gbc.pc(), 0x6827);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 033F
        gbc.setState(0x7d71, 0xe98b, 0xd340, 0x2bc3, 0x9594, 0xe464, 0x0, 0x0);
        gbc.writeMem(0x7d71, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xe98b);
        EXPECT(gbc.pc(), 0x7d73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0340
        gbc.setState(0x250f, 0x9706, 0x9d20, 0x7917, 0xb42c, 0xa0b1, 0x0, 0x1);
        gbc.writeMem(0x250f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9706);
        EXPECT(gbc.pc(), 0x2511);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0341
        gbc.setState(0xcf85, 0xc96e, 0x4370, 0xc898, 0x9c99, 0x2658, 0x1, 0x1);
        gbc.writeMem(0xcf85, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xc96e);
        EXPECT(gbc.pc(), 0xcf87);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf85), 0xcb);
        EXPECT(gbc.readMem(0xcf86), 0x88);
        // CB 88 0342
        gbc.setState(0x787e, 0x1cac, 0xad00, 0x2e01, 0x400a, 0xcb79, 0x1, 0x1);
        gbc.writeMem(0x787e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x1cac);
        EXPECT(gbc.pc(), 0x7880);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0343
        gbc.setState(0x198f, 0xfd73, 0xdd0, 0x5986, 0x196d, 0x1811, 0x0, 0x0);
        gbc.writeMem(0x198f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xfd73);
        EXPECT(gbc.pc(), 0x1991);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0344
        gbc.setState(0x25ca, 0x1d69, 0x7000, 0x72f7, 0xd154, 0x17ec, 0x0, 0x1);
        gbc.writeMem(0x25ca, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0x1d69);
        EXPECT(gbc.pc(), 0x25cc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0345
        gbc.setState(0xc98c, 0x106e, 0xb190, 0x7053, 0x395d, 0xa0b6, 0x0, 0x0);
        gbc.writeMem(0xc98c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x106e);
        EXPECT(gbc.pc(), 0xc98e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98c), 0xcb);
        EXPECT(gbc.readMem(0xc98d), 0x88);
        // CB 88 0347
        gbc.setState(0x499e, 0x9ef0, 0xe060, 0xea76, 0xcd4e, 0x34f7, 0x1, 0x1);
        gbc.writeMem(0x499e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x9ef0);
        EXPECT(gbc.pc(), 0x49a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0348
        gbc.setState(0x2cd4, 0x5fb7, 0x3c90, 0x5ddd, 0x1c31, 0xcaa9, 0x0, 0x0);
        gbc.writeMem(0x2cd4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x5fb7);
        EXPECT(gbc.pc(), 0x2cd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 034A
        gbc.setState(0x38da, 0xdf8c, 0x8f50, 0x441c, 0x20f2, 0xd8fb, 0x0, 0x1);
        gbc.writeMem(0x38da, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xdf8c);
        EXPECT(gbc.pc(), 0x38dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 034B
        gbc.setState(0x1415, 0x1ee1, 0xdfc0, 0x94b7, 0xdf90, 0xb9a7, 0x0, 0x0);
        gbc.writeMem(0x1415, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x1ee1);
        EXPECT(gbc.pc(), 0x1417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 034C
        gbc.setState(0xe6bd, 0xb361, 0xc8e0, 0x22ff, 0xbf18, 0x3411, 0x0, 0x1);
        gbc.writeMem(0xe6bd, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xb361);
        EXPECT(gbc.pc(), 0xe6bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6bd), 0xcb);
        EXPECT(gbc.readMem(0xe6be), 0x88);
        // CB 88 034D
        gbc.setState(0x3dc, 0x245f, 0x7f40, 0x258a, 0x9bea, 0x410a, 0x0, 0x1);
        gbc.writeMem(0x3dc, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x245f);
        EXPECT(gbc.pc(), 0x3de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 034E
        gbc.setState(0xd2b6, 0xb3bb, 0xc3a0, 0x990c, 0xe98, 0xa65, 0x0, 0x1);
        gbc.writeMem(0xd2b6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xb3bb);
        EXPECT(gbc.pc(), 0xd2b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2b6), 0xcb);
        EXPECT(gbc.readMem(0xd2b7), 0x88);
        // CB 88 034F
        gbc.setState(0x8c43, 0x64c0, 0xe710, 0x61e4, 0x3cc8, 0x4a66, 0x1, 0x0);
        gbc.writeMem(0x8c43, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x64c0);
        EXPECT(gbc.pc(), 0x8c45);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c43), 0xcb);
        EXPECT(gbc.readMem(0x8c44), 0x88);
        // CB 88 0350
        gbc.setState(0x55b9, 0xaa0f, 0x9350, 0xb7ea, 0x4f6c, 0x7e6a, 0x1, 0x0);
        gbc.writeMem(0x55b9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xaa0f);
        EXPECT(gbc.pc(), 0x55bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0351
        gbc.setState(0x5c12, 0xf5e9, 0x6b0, 0xffc5, 0xf835, 0xaf3b, 0x1, 0x0);
        gbc.writeMem(0x5c12, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xf5e9);
        EXPECT(gbc.pc(), 0x5c14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0352
        gbc.setState(0x2709, 0x698c, 0xf580, 0xd3e9, 0xfdde, 0xf237, 0x0, 0x1);
        gbc.writeMem(0x2709, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x698c);
        EXPECT(gbc.pc(), 0x270b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0353
        gbc.setState(0x6ce5, 0x8844, 0xa80, 0xb147, 0x645a, 0xaf6e, 0x1, 0x1);
        gbc.writeMem(0x6ce5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x8844);
        EXPECT(gbc.pc(), 0x6ce7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0354
        gbc.setState(0x39f5, 0x5617, 0x6280, 0xe792, 0x4163, 0x3d5b, 0x0, 0x0);
        gbc.writeMem(0x39f5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x5617);
        EXPECT(gbc.pc(), 0x39f7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0355
        gbc.setState(0x876, 0x8544, 0x86e0, 0x3095, 0x7b3a, 0x49f7, 0x1, 0x0);
        gbc.writeMem(0x876, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x8544);
        EXPECT(gbc.pc(), 0x878);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0356
        gbc.setState(0x3958, 0xa96b, 0xd940, 0x5b0, 0xea94, 0x3348, 0x1, 0x0);
        gbc.writeMem(0x3958, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xa96b);
        EXPECT(gbc.pc(), 0x395a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0357
        gbc.setState(0x5741, 0xdd0a, 0x81f0, 0xf45e, 0x8281, 0xc402, 0x0, 0x0);
        gbc.writeMem(0x5741, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xdd0a);
        EXPECT(gbc.pc(), 0x5743);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0358
        gbc.setState(0x364d, 0xc86b, 0xade0, 0x8a31, 0x7bfe, 0xa8f, 0x1, 0x1);
        gbc.writeMem(0x364d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xc86b);
        EXPECT(gbc.pc(), 0x364f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0359
        gbc.setState(0x8971, 0x6d13, 0x8dd0, 0x728f, 0x5d59, 0x3d1, 0x1, 0x0);
        gbc.writeMem(0x8971, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x6d13);
        EXPECT(gbc.pc(), 0x8973);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8971), 0xcb);
        EXPECT(gbc.readMem(0x8972), 0x88);
        // CB 88 035A
        gbc.setState(0x253, 0x74c4, 0xd50, 0x14cd, 0xf7e, 0x4607, 0x0, 0x0);
        gbc.writeMem(0x253, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x74c4);
        EXPECT(gbc.pc(), 0x255);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 035B
        gbc.setState(0x1fa1, 0xc957, 0x2650, 0x57c3, 0x7f2c, 0x7f7f, 0x0, 0x1);
        gbc.writeMem(0x1fa1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0xc957);
        EXPECT(gbc.pc(), 0x1fa3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 035C
        gbc.setState(0x572f, 0x3588, 0x7570, 0x34a0, 0xa715, 0xf7e7, 0x1, 0x1);
        gbc.writeMem(0x572f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x3588);
        EXPECT(gbc.pc(), 0x5731);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 035D
        gbc.setState(0x48c8, 0xde06, 0x88f0, 0xf76, 0xeffa, 0xf9eb, 0x0, 0x1);
        gbc.writeMem(0x48c8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xde06);
        EXPECT(gbc.pc(), 0x48ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 035E
        gbc.setState(0x4d32, 0xc8d0, 0x7a40, 0x421d, 0x286a, 0x4f67, 0x1, 0x1);
        gbc.writeMem(0x4d32, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xc8d0);
        EXPECT(gbc.pc(), 0x4d34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 035F
        gbc.setState(0x4325, 0xc4a2, 0x49c0, 0x45dd, 0x7192, 0x240c, 0x0, 0x0);
        gbc.writeMem(0x4325, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xc4a2);
        EXPECT(gbc.pc(), 0x4327);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0360
        gbc.setState(0xc700, 0x7c53, 0x36e0, 0x601e, 0x1b34, 0xd195, 0x1, 0x1);
        gbc.writeMem(0xc700, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x7c53);
        EXPECT(gbc.pc(), 0xc702);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc700), 0xcb);
        EXPECT(gbc.readMem(0xc701), 0x88);
        // CB 88 0361
        gbc.setState(0xe118, 0xe8d4, 0xd280, 0xa318, 0x5355, 0x9e82, 0x0, 0x0);
        gbc.writeMem(0xe118, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xe8d4);
        EXPECT(gbc.pc(), 0xe11a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe118), 0xcb);
        EXPECT(gbc.readMem(0xe119), 0x88);
        // CB 88 0362
        gbc.setState(0x1406, 0x7173, 0x6360, 0x156, 0x82a0, 0xec56, 0x1, 0x1);
        gbc.writeMem(0x1406, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x7173);
        EXPECT(gbc.pc(), 0x1408);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0363
        gbc.setState(0x9846, 0xa408, 0xd0a0, 0x6aba, 0x5f2e, 0x48e4, 0x1, 0x0);
        gbc.writeMem(0x9846, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa408);
        EXPECT(gbc.pc(), 0x9848);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9846), 0xcb);
        EXPECT(gbc.readMem(0x9847), 0x88);
        // CB 88 0364
        gbc.setState(0x9618, 0xdefc, 0x5d90, 0x434d, 0x6e63, 0x3792, 0x1, 0x1);
        gbc.writeMem(0x9618, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xdefc);
        EXPECT(gbc.pc(), 0x961a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9618), 0xcb);
        EXPECT(gbc.readMem(0x9619), 0x88);
        // CB 88 0365
        gbc.setState(0x398e, 0x48a1, 0xb9d0, 0x73d0, 0xc9a5, 0x5ed5, 0x1, 0x1);
        gbc.writeMem(0x398e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x48a1);
        EXPECT(gbc.pc(), 0x3990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0366
        gbc.setState(0x19e8, 0x59a4, 0x70, 0x1f4b, 0x1904, 0xd50a, 0x1, 0x1);
        gbc.writeMem(0x19e8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x59a4);
        EXPECT(gbc.pc(), 0x19ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0367
        gbc.setState(0x7ddc, 0x4674, 0x7030, 0x376d, 0xbd27, 0xb2ce, 0x0, 0x1);
        gbc.writeMem(0x7ddc, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x4674);
        EXPECT(gbc.pc(), 0x7dde);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0368
        gbc.setState(0x274b, 0x7021, 0xc340, 0xd1b0, 0x6bb7, 0x29b6, 0x0, 0x1);
        gbc.writeMem(0x274b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x7021);
        EXPECT(gbc.pc(), 0x274d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0369
        gbc.setState(0xdab1, 0x7f45, 0xaf00, 0xbbed, 0x10e6, 0x6535, 0x1, 0x0);
        gbc.writeMem(0xdab1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x7f45);
        EXPECT(gbc.pc(), 0xdab3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdab1), 0xcb);
        EXPECT(gbc.readMem(0xdab2), 0x88);
        // CB 88 036A
        gbc.setState(0x81bd, 0x5f73, 0x60a0, 0x658e, 0x60d8, 0xa12d, 0x0, 0x0);
        gbc.writeMem(0x81bd, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x5f73);
        EXPECT(gbc.pc(), 0x81bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81bd), 0xcb);
        EXPECT(gbc.readMem(0x81be), 0x88);
        // CB 88 036B
        gbc.setState(0xda50, 0x4113, 0x7cf0, 0xd925, 0xfe0, 0x19e8, 0x1, 0x1);
        gbc.writeMem(0xda50, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4113);
        EXPECT(gbc.pc(), 0xda52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda50), 0xcb);
        EXPECT(gbc.readMem(0xda51), 0x88);
        // CB 88 036C
        gbc.setState(0x1ef, 0xc2ac, 0x4920, 0xd2ab, 0xff68, 0x5798, 0x1, 0x0);
        gbc.writeMem(0x1ef, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0xc2ac);
        EXPECT(gbc.pc(), 0x1f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 036D
        gbc.setState(0xbbbe, 0x66c6, 0x6a30, 0x7aa5, 0xef79, 0x5a53, 0x1, 0x1);
        gbc.writeMem(0xbbbe, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x66c6);
        EXPECT(gbc.pc(), 0xbbc0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbbe), 0xcb);
        EXPECT(gbc.readMem(0xbbbf), 0x88);
        // CB 88 036E
        gbc.setState(0x3364, 0x470f, 0x6fb0, 0xcbf3, 0x74d6, 0x821e, 0x0, 0x0);
        gbc.writeMem(0x3364, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x470f);
        EXPECT(gbc.pc(), 0x3366);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 036F
        gbc.setState(0x3f3, 0x7f87, 0xb950, 0x711e, 0x7be4, 0xdeb3, 0x1, 0x0);
        gbc.writeMem(0x3f3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x7f87);
        EXPECT(gbc.pc(), 0x3f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0370
        gbc.setState(0xd203, 0x65d0, 0x3f50, 0x5dd3, 0xbd52, 0xf32a, 0x1, 0x1);
        gbc.writeMem(0xd203, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x65d0);
        EXPECT(gbc.pc(), 0xd205);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd203), 0xcb);
        EXPECT(gbc.readMem(0xd204), 0x88);
        // CB 88 0371
        gbc.setState(0x3310, 0x9740, 0x9ec0, 0x9fbb, 0xec54, 0x831, 0x0, 0x1);
        gbc.writeMem(0x3310, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9740);
        EXPECT(gbc.pc(), 0x3312);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0373
        gbc.setState(0x5f30, 0x4659, 0x5860, 0xba0e, 0xbb7f, 0x2415, 0x1, 0x0);
        gbc.writeMem(0x5f30, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4659);
        EXPECT(gbc.pc(), 0x5f32);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0374
        gbc.setState(0x7ba6, 0x3ce6, 0x5760, 0x13a1, 0xd94b, 0x50c0, 0x0, 0x1);
        gbc.writeMem(0x7ba6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x3ce6);
        EXPECT(gbc.pc(), 0x7ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0375
        gbc.setState(0x7aa, 0xe0fd, 0x3f00, 0xb2c3, 0x4deb, 0x2f4b, 0x0, 0x1);
        gbc.writeMem(0x7aa, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe0fd);
        EXPECT(gbc.pc(), 0x7ac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0377
        gbc.setState(0x38ce, 0x88f0, 0xe560, 0x843b, 0x6276, 0x2d9f, 0x0, 0x0);
        gbc.writeMem(0x38ce, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x88f0);
        EXPECT(gbc.pc(), 0x38d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0378
        gbc.setState(0xa61c, 0xc6b9, 0xfb0, 0x6a4f, 0xde46, 0x245f, 0x1, 0x1);
        gbc.writeMem(0xa61c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xc6b9);
        EXPECT(gbc.pc(), 0xa61e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa61c), 0xcb);
        EXPECT(gbc.readMem(0xa61d), 0x88);
        // CB 88 0379
        gbc.setState(0x2bf6, 0x789f, 0xcad0, 0xa8a0, 0xe05a, 0x9093, 0x1, 0x1);
        gbc.writeMem(0x2bf6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x789f);
        EXPECT(gbc.pc(), 0x2bf8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 037A
        gbc.setState(0xbb76, 0x7efb, 0x8520, 0x4aa1, 0x8c31, 0x72e7, 0x0, 0x0);
        gbc.writeMem(0xbb76, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0x7efb);
        EXPECT(gbc.pc(), 0xbb78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb76), 0xcb);
        EXPECT(gbc.readMem(0xbb77), 0x88);
        // CB 88 037B
        gbc.setState(0x3a5f, 0x1c23, 0xaa60, 0x3ba7, 0x8dce, 0x3a, 0x1, 0x0);
        gbc.writeMem(0x3a5f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x1c23);
        EXPECT(gbc.pc(), 0x3a61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 037C
        gbc.setState(0x139e, 0xfdbd, 0x8b60, 0xd52a, 0xaad5, 0x1d48, 0x0, 0x0);
        gbc.writeMem(0x139e, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfdbd);
        EXPECT(gbc.pc(), 0x13a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 037D
        gbc.setState(0xf78, 0x8ce7, 0x11c0, 0x246d, 0xd482, 0xcc12, 0x1, 0x1);
        gbc.writeMem(0xf78, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x8ce7);
        EXPECT(gbc.pc(), 0xf7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 037E
        gbc.setState(0x4bcf, 0xb6cb, 0x8d20, 0xdfe5, 0x84d, 0x8555, 0x0, 0x1);
        gbc.writeMem(0x4bcf, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xb6cb);
        EXPECT(gbc.pc(), 0x4bd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 037F
        gbc.setState(0x4299, 0xa650, 0x5830, 0x49f2, 0xe5f7, 0xeb0e, 0x1, 0x0);
        gbc.writeMem(0x4299, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xa650);
        EXPECT(gbc.pc(), 0x429b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0380
        gbc.setState(0x5dec, 0xdf1e, 0xa860, 0x5fa0, 0xdcbf, 0xe4c4, 0x1, 0x0);
        gbc.writeMem(0x5dec, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xdf1e);
        EXPECT(gbc.pc(), 0x5dee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0381
        gbc.setState(0x71d6, 0xeaac, 0x71a0, 0x55a, 0x3c50, 0x4f35, 0x0, 0x1);
        gbc.writeMem(0x71d6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xeaac);
        EXPECT(gbc.pc(), 0x71d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0382
        gbc.setState(0x5022, 0x40b0, 0xc330, 0x314e, 0x4df1, 0x7d32, 0x1, 0x1);
        gbc.writeMem(0x5022, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x40b0);
        EXPECT(gbc.pc(), 0x5024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0383
        gbc.setState(0x72d4, 0x8eac, 0xfaf0, 0xcc82, 0x847c, 0x4b78, 0x1, 0x1);
        gbc.writeMem(0x72d4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8eac);
        EXPECT(gbc.pc(), 0x72d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0384
        gbc.setState(0x8d5, 0x6171, 0xc500, 0xdec2, 0xf393, 0x6b26, 0x1, 0x0);
        gbc.writeMem(0x8d5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x6171);
        EXPECT(gbc.pc(), 0x8d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 0385
        gbc.setState(0xdb55, 0x6c28, 0x9670, 0x9287, 0x44a6, 0x8b0b, 0x1, 0x1);
        gbc.writeMem(0xdb55, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6c28);
        EXPECT(gbc.pc(), 0xdb57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb55), 0xcb);
        EXPECT(gbc.readMem(0xdb56), 0x88);
        // CB 88 0386
        gbc.setState(0x45f3, 0x9762, 0x2050, 0x7d1c, 0x2f94, 0x33e2, 0x1, 0x1);
        gbc.writeMem(0x45f3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x9762);
        EXPECT(gbc.pc(), 0x45f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0387
        gbc.setState(0xe1bc, 0x8d18, 0x7800, 0xc24a, 0xa377, 0xf02b, 0x1, 0x1);
        gbc.writeMem(0xe1bc, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x8d18);
        EXPECT(gbc.pc(), 0xe1be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1bc), 0xcb);
        EXPECT(gbc.readMem(0xe1bd), 0x88);
        // CB 88 0388
        gbc.setState(0x3884, 0xdd3f, 0xd10, 0x329d, 0x702b, 0x860, 0x1, 0x1);
        gbc.writeMem(0x3884, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdd3f);
        EXPECT(gbc.pc(), 0x3886);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0389
        gbc.setState(0xd376, 0x6fe9, 0xc2f0, 0x9e80, 0x6012, 0xf647, 0x0, 0x1);
        gbc.writeMem(0xd376, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x6fe9);
        EXPECT(gbc.pc(), 0xd378);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd376), 0xcb);
        EXPECT(gbc.readMem(0xd377), 0x88);
        // CB 88 038A
        gbc.setState(0x5577, 0x2f25, 0xf3d0, 0x4ad9, 0x3bb9, 0xc281, 0x0, 0x1);
        gbc.writeMem(0x5577, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x2f25);
        EXPECT(gbc.pc(), 0x5579);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 038B
        gbc.setState(0xa22b, 0xd5da, 0xeea0, 0x7628, 0x4031, 0xf553, 0x0, 0x0);
        gbc.writeMem(0xa22b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xd5da);
        EXPECT(gbc.pc(), 0xa22d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa22b), 0xcb);
        EXPECT(gbc.readMem(0xa22c), 0x88);
        // CB 88 038C
        gbc.setState(0x9e1a, 0xb0b6, 0xa220, 0x615a, 0x3edd, 0x3a5d, 0x0, 0x0);
        gbc.writeMem(0x9e1a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb0b6);
        EXPECT(gbc.pc(), 0x9e1c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e1a), 0xcb);
        EXPECT(gbc.readMem(0x9e1b), 0x88);
        // CB 88 038D
        gbc.setState(0x2776, 0x6464, 0x5840, 0xb704, 0xa888, 0xa389, 0x1, 0x0);
        gbc.writeMem(0x2776, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x6464);
        EXPECT(gbc.pc(), 0x2778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 038E
        gbc.setState(0x3caa, 0xdb3f, 0xf090, 0x6e60, 0x87f3, 0x5369, 0x0, 0x0);
        gbc.writeMem(0x3caa, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdb3f);
        EXPECT(gbc.pc(), 0x3cac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 038F
        gbc.setState(0x5f50, 0xf67c, 0x7810, 0xe8e9, 0x558e, 0xd9, 0x0, 0x1);
        gbc.writeMem(0x5f50, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xf67c);
        EXPECT(gbc.pc(), 0x5f52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0390
        gbc.setState(0x91a5, 0x1183, 0xda50, 0x54bd, 0x70c7, 0xc3d, 0x0, 0x0);
        gbc.writeMem(0x91a5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0x1183);
        EXPECT(gbc.pc(), 0x91a7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91a5), 0xcb);
        EXPECT(gbc.readMem(0x91a6), 0x88);
        // CB 88 0391
        gbc.setState(0xd229, 0x5046, 0xe640, 0x55bc, 0xc755, 0xa86d, 0x0, 0x0);
        gbc.writeMem(0xd229, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x5046);
        EXPECT(gbc.pc(), 0xd22b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd229), 0xcb);
        EXPECT(gbc.readMem(0xd22a), 0x88);
        // CB 88 0392
        gbc.setState(0x2674, 0x774a, 0xafb0, 0x3017, 0x26c5, 0x40bf, 0x0, 0x1);
        gbc.writeMem(0x2674, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x774a);
        EXPECT(gbc.pc(), 0x2676);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0393
        gbc.setState(0x89f9, 0x4bb6, 0x1bc0, 0x7042, 0x5102, 0xe77, 0x1, 0x0);
        gbc.writeMem(0x89f9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x4bb6);
        EXPECT(gbc.pc(), 0x89fb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f9), 0xcb);
        EXPECT(gbc.readMem(0x89fa), 0x88);
        // CB 88 0394
        gbc.setState(0xb9d4, 0xa69f, 0x1d00, 0x5794, 0x46c1, 0xea9c, 0x0, 0x0);
        gbc.writeMem(0xb9d4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xa69f);
        EXPECT(gbc.pc(), 0xb9d6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9d4), 0xcb);
        EXPECT(gbc.readMem(0xb9d5), 0x88);
        // CB 88 0395
        gbc.setState(0x8723, 0xf403, 0xcd10, 0xd504, 0xda74, 0x410b, 0x0, 0x1);
        gbc.writeMem(0x8723, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf403);
        EXPECT(gbc.pc(), 0x8725);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8723), 0xcb);
        EXPECT(gbc.readMem(0x8724), 0x88);
        // CB 88 0396
        gbc.setState(0x21b3, 0x40e4, 0x4850, 0xcfcb, 0x445, 0xaf6a, 0x0, 0x1);
        gbc.writeMem(0x21b3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x40e4);
        EXPECT(gbc.pc(), 0x21b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0397
        gbc.setState(0xa4db, 0xde66, 0x1c40, 0x1373, 0x70b7, 0xeed0, 0x1, 0x1);
        gbc.writeMem(0xa4db, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xde66);
        EXPECT(gbc.pc(), 0xa4dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4db), 0xcb);
        EXPECT(gbc.readMem(0xa4dc), 0x88);
        // CB 88 0398
        gbc.setState(0x1aea, 0x9319, 0x27b0, 0x926c, 0x2222, 0x2059, 0x0, 0x0);
        gbc.writeMem(0x1aea, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x9319);
        EXPECT(gbc.pc(), 0x1aec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 0399
        gbc.setState(0x63cb, 0x78d6, 0xd9d0, 0x4a95, 0xaf4c, 0xa528, 0x0, 0x1);
        gbc.writeMem(0x63cb, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x78d6);
        EXPECT(gbc.pc(), 0x63cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 039A
        gbc.setState(0x748b, 0x9766, 0x87d0, 0xf05e, 0xad8a, 0xf8e0, 0x1, 0x0);
        gbc.writeMem(0x748b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x9766);
        EXPECT(gbc.pc(), 0x748d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 039B
        gbc.setState(0x75d7, 0x3753, 0x87b0, 0xe7f7, 0x68, 0x4f2f, 0x1, 0x0);
        gbc.writeMem(0x75d7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x3753);
        EXPECT(gbc.pc(), 0x75d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 039C
        gbc.setState(0x98d7, 0x1942, 0x9770, 0xba5f, 0x122f, 0x689b, 0x1, 0x0);
        gbc.writeMem(0x98d7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1942);
        EXPECT(gbc.pc(), 0x98d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98d7), 0xcb);
        EXPECT(gbc.readMem(0x98d8), 0x88);
        // CB 88 039D
        gbc.setState(0x63c8, 0xbc6e, 0x5530, 0xd96b, 0x833c, 0xd434, 0x0, 0x1);
        gbc.writeMem(0x63c8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xbc6e);
        EXPECT(gbc.pc(), 0x63ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 039E
        gbc.setState(0x14e3, 0xd676, 0x1e50, 0x5312, 0x5398, 0x917c, 0x1, 0x0);
        gbc.writeMem(0x14e3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xd676);
        EXPECT(gbc.pc(), 0x14e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 039F
        gbc.setState(0xdb7, 0xd353, 0x4200, 0xef3d, 0x5c93, 0x3b1c, 0x0, 0x0);
        gbc.writeMem(0xdb7, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd353);
        EXPECT(gbc.pc(), 0xdb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03A0
        gbc.setState(0x61ed, 0x7e15, 0xb180, 0x1aca, 0xca2c, 0x1df5, 0x0, 0x0);
        gbc.writeMem(0x61ed, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x7e15);
        EXPECT(gbc.pc(), 0x61ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03A1
        gbc.setState(0x9d54, 0x59a, 0x3110, 0x2672, 0x1ce2, 0xb294, 0x1, 0x0);
        gbc.writeMem(0x9d54, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x59a);
        EXPECT(gbc.pc(), 0x9d56);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d54), 0xcb);
        EXPECT(gbc.readMem(0x9d55), 0x88);
        // CB 88 03A2
        gbc.setState(0xd5ee, 0xbd6, 0x7a50, 0x8ad7, 0x9e36, 0x2d32, 0x0, 0x0);
        gbc.writeMem(0xd5ee, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xbd6);
        EXPECT(gbc.pc(), 0xd5f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd5ee), 0xcb);
        EXPECT(gbc.readMem(0xd5ef), 0x88);
        // CB 88 03A3
        gbc.setState(0x76c9, 0x506a, 0x7140, 0xba5, 0x56f4, 0xadaf, 0x1, 0x1);
        gbc.writeMem(0x76c9, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x506a);
        EXPECT(gbc.pc(), 0x76cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03A4
        gbc.setState(0x422a, 0x469f, 0xa6c0, 0xc5a3, 0x1eb0, 0x289a, 0x0, 0x0);
        gbc.writeMem(0x422a, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x469f);
        EXPECT(gbc.pc(), 0x422c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03A6
        gbc.setState(0x232c, 0xfc24, 0x22c0, 0x6792, 0x90cf, 0x4431, 0x1, 0x1);
        gbc.writeMem(0x232c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xfc24);
        EXPECT(gbc.pc(), 0x232e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03A7
        gbc.setState(0x5290, 0x954a, 0xfea0, 0xc254, 0x3dc4, 0x759c, 0x1, 0x1);
        gbc.writeMem(0x5290, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x954a);
        EXPECT(gbc.pc(), 0x5292);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03A8
        gbc.setState(0x3aa0, 0xe4f8, 0x73d0, 0xb4dd, 0x52a, 0xf7fd, 0x1, 0x1);
        gbc.writeMem(0x3aa0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe4f8);
        EXPECT(gbc.pc(), 0x3aa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03A9
        gbc.setState(0xb73c, 0xb0be, 0x28a0, 0x615, 0x1d6, 0x17db, 0x0, 0x1);
        gbc.writeMem(0xb73c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xb0be);
        EXPECT(gbc.pc(), 0xb73e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb73c), 0xcb);
        EXPECT(gbc.readMem(0xb73d), 0x88);
        // CB 88 03AA
        gbc.setState(0x5d00, 0x3089, 0x9d10, 0x9d11, 0x2301, 0x806d, 0x1, 0x0);
        gbc.writeMem(0x5d00, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x3089);
        EXPECT(gbc.pc(), 0x5d02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03AB
        gbc.setState(0x3359, 0x9f37, 0x98b0, 0x7964, 0x27ac, 0xe0b, 0x1, 0x0);
        gbc.writeMem(0x3359, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x9f37);
        EXPECT(gbc.pc(), 0x335b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03AC
        gbc.setState(0x1fa8, 0x37f2, 0x8f00, 0x14d5, 0x78e1, 0xbeea, 0x0, 0x0);
        gbc.writeMem(0x1fa8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x37f2);
        EXPECT(gbc.pc(), 0x1faa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03AD
        gbc.setState(0x7f28, 0x1833, 0x86b0, 0x879c, 0xd91b, 0x9862, 0x0, 0x1);
        gbc.writeMem(0x7f28, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1833);
        EXPECT(gbc.pc(), 0x7f2a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03AE
        gbc.setState(0x3cd0, 0x5d80, 0x6960, 0x4a7a, 0x6440, 0xe25a, 0x1, 0x0);
        gbc.writeMem(0x3cd0, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x5d80);
        EXPECT(gbc.pc(), 0x3cd2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03AF
        gbc.setState(0xeba6, 0x23, 0x3200, 0xe130, 0xbe27, 0x86f9, 0x0, 0x0);
        gbc.writeMem(0xeba6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x23);
        EXPECT(gbc.pc(), 0xeba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeba6), 0xcb);
        EXPECT(gbc.readMem(0xeba7), 0x88);
        // CB 88 03B0
        gbc.setState(0xca3b, 0x7582, 0x6a90, 0xdcec, 0xa3f9, 0xe1ad, 0x0, 0x0);
        gbc.writeMem(0xca3b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x7582);
        EXPECT(gbc.pc(), 0xca3d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca3b), 0xcb);
        EXPECT(gbc.readMem(0xca3c), 0x88);
        // CB 88 03B1
        gbc.setState(0x48d3, 0xb251, 0x85b0, 0x5429, 0xec06, 0x21ee, 0x1, 0x1);
        gbc.writeMem(0x48d3, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xb251);
        EXPECT(gbc.pc(), 0x48d5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03B2
        gbc.setState(0x63bc, 0xbd66, 0xf250, 0x42ab, 0x877c, 0xcfe, 0x1, 0x1);
        gbc.writeMem(0x63bc, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xbd66);
        EXPECT(gbc.pc(), 0x63be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03B3
        gbc.setState(0xc6c5, 0x5be0, 0x4180, 0x42f0, 0x1f77, 0xdb65, 0x0, 0x0);
        gbc.writeMem(0xc6c5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x5be0);
        EXPECT(gbc.pc(), 0xc6c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc6c5), 0xcb);
        EXPECT(gbc.readMem(0xc6c6), 0x88);
        // CB 88 03B4
        gbc.setState(0x2f91, 0xda64, 0x6100, 0x932f, 0xce5f, 0x7ec, 0x1, 0x0);
        gbc.writeMem(0x2f91, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xda64);
        EXPECT(gbc.pc(), 0x2f93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03B5
        gbc.setState(0xe6de, 0x5698, 0xb710, 0xdf87, 0xde72, 0x1461, 0x1, 0x1);
        gbc.writeMem(0xe6de, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x5698);
        EXPECT(gbc.pc(), 0xe6e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6de), 0xcb);
        EXPECT(gbc.readMem(0xe6df), 0x88);
        // CB 88 03B6
        gbc.setState(0xedf6, 0xe430, 0xd230, 0xaa36, 0xf73f, 0x91e1, 0x0, 0x1);
        gbc.writeMem(0xedf6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe430);
        EXPECT(gbc.pc(), 0xedf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedf6), 0xcb);
        EXPECT(gbc.readMem(0xedf7), 0x88);
        // CB 88 03B7
        gbc.setState(0x81a4, 0x8ce7, 0xde40, 0x9359, 0xfbd9, 0x482a, 0x1, 0x1);
        gbc.writeMem(0x81a4, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x8ce7);
        EXPECT(gbc.pc(), 0x81a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x81a4), 0xcb);
        EXPECT(gbc.readMem(0x81a5), 0x88);
        // CB 88 03B8
        gbc.setState(0x696c, 0x8a4f, 0x6f60, 0x4ff7, 0xe98c, 0xd15f, 0x0, 0x1);
        gbc.writeMem(0x696c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x8a4f);
        EXPECT(gbc.pc(), 0x696e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03B9
        gbc.setState(0x9774, 0x9caf, 0x1f70, 0xbd3d, 0x1c6d, 0x6ada, 0x0, 0x1);
        gbc.writeMem(0x9774, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x9caf);
        EXPECT(gbc.pc(), 0x9776);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9774), 0xcb);
        EXPECT(gbc.readMem(0x9775), 0x88);
        // CB 88 03BA
        gbc.setState(0xe420, 0x43ef, 0x2ce0, 0x1bef, 0x1d5b, 0x7b88, 0x1, 0x0);
        gbc.writeMem(0xe420, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x5b);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x43ef);
        EXPECT(gbc.pc(), 0xe422);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe420), 0xcb);
        EXPECT(gbc.readMem(0xe421), 0x88);
        // CB 88 03BB
        gbc.setState(0x381f, 0x1d02, 0xea20, 0x6ce7, 0x43eb, 0x5d80, 0x0, 0x1);
        gbc.writeMem(0x381f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x1d02);
        EXPECT(gbc.pc(), 0x3821);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03BC
        gbc.setState(0xe83, 0xa039, 0x2e0, 0xc7cc, 0x23fa, 0xbacd, 0x1, 0x0);
        gbc.writeMem(0xe83, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xa039);
        EXPECT(gbc.pc(), 0xe85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03BD
        gbc.setState(0x4990, 0x8efe, 0x7c50, 0x8afc, 0x7667, 0xfe4b, 0x1, 0x1);
        gbc.writeMem(0x4990, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x8efe);
        EXPECT(gbc.pc(), 0x4992);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03BE
        gbc.setState(0x3d55, 0x77ec, 0xe970, 0x7fbd, 0x4afd, 0x1d73, 0x0, 0x1);
        gbc.writeMem(0x3d55, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x77ec);
        EXPECT(gbc.pc(), 0x3d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03BF
        gbc.setState(0x534f, 0x42ec, 0xf2e0, 0x802f, 0x5b6b, 0x5f6e, 0x0, 0x0);
        gbc.writeMem(0x534f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x42ec);
        EXPECT(gbc.pc(), 0x5351);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03C0
        gbc.setState(0xaff8, 0xcfe9, 0xfb30, 0x3b92, 0x3ddd, 0xd2db, 0x0, 0x1);
        gbc.writeMem(0xaff8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xcfe9);
        EXPECT(gbc.pc(), 0xaffa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaff8), 0xcb);
        EXPECT(gbc.readMem(0xaff9), 0x88);
        // CB 88 03C1
        gbc.setState(0x5b4d, 0x2f7f, 0x6c20, 0x4349, 0x8a0a, 0x72bf, 0x1, 0x0);
        gbc.writeMem(0x5b4d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x2f7f);
        EXPECT(gbc.pc(), 0x5b4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03C2
        gbc.setState(0x792, 0x1c5b, 0x4a10, 0xee99, 0x981, 0x5a22, 0x0, 0x0);
        gbc.writeMem(0x792, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1c5b);
        EXPECT(gbc.pc(), 0x794);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03C3
        gbc.setState(0x4413, 0x8a8a, 0xaec0, 0x9364, 0x4ec3, 0xa032, 0x0, 0x0);
        gbc.writeMem(0x4413, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x8a8a);
        EXPECT(gbc.pc(), 0x4415);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03C4
        gbc.setState(0x606, 0xadc5, 0xfe40, 0x68a1, 0xc14c, 0x6308, 0x1, 0x0);
        gbc.writeMem(0x606, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0xadc5);
        EXPECT(gbc.pc(), 0x608);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03C5
        gbc.setState(0x457f, 0xd7aa, 0xc9e0, 0x1ebc, 0x8bc1, 0x808e, 0x0, 0x1);
        gbc.writeMem(0x457f, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd7aa);
        EXPECT(gbc.pc(), 0x4581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03C6
        gbc.setState(0xa889, 0x3825, 0x7f90, 0xf505, 0x6e41, 0x2a62, 0x1, 0x1);
        gbc.writeMem(0xa889, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x3825);
        EXPECT(gbc.pc(), 0xa88b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa889), 0xcb);
        EXPECT(gbc.readMem(0xa88a), 0x88);
        // CB 88 03C7
        gbc.setState(0x1734, 0xb927, 0xe1d0, 0x41e8, 0xb9f0, 0xe25c, 0x1, 0x0);
        gbc.writeMem(0x1734, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xb927);
        EXPECT(gbc.pc(), 0x1736);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03C8
        gbc.setState(0x4d2d, 0x9f47, 0x1120, 0x47ba, 0x3ea9, 0xe142, 0x1, 0x0);
        gbc.writeMem(0x4d2d, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x9f47);
        EXPECT(gbc.pc(), 0x4d2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03C9
        gbc.setState(0x8543, 0x2103, 0xbc00, 0xd536, 0x34f9, 0xe95f, 0x1, 0x0);
        gbc.writeMem(0x8543, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2103);
        EXPECT(gbc.pc(), 0x8545);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8543), 0xcb);
        EXPECT(gbc.readMem(0x8544), 0x88);
        // CB 88 03CA
        gbc.setState(0x5b58, 0x7c4, 0x8560, 0x3700, 0xb41e, 0xa49e, 0x1, 0x1);
        gbc.writeMem(0x5b58, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7c4);
        EXPECT(gbc.pc(), 0x5b5a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03CB
        gbc.setState(0x43b1, 0x9e54, 0x1200, 0x2c6e, 0xa090, 0x1391, 0x1, 0x0);
        gbc.writeMem(0x43b1, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0x9e54);
        EXPECT(gbc.pc(), 0x43b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03CC
        gbc.setState(0xe86c, 0xeeeb, 0xdd10, 0x539, 0xbc0c, 0xd92b, 0x0, 0x0);
        gbc.writeMem(0xe86c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xeeeb);
        EXPECT(gbc.pc(), 0xe86e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe86c), 0xcb);
        EXPECT(gbc.readMem(0xe86d), 0x88);
        // CB 88 03CD
        gbc.setState(0xa50c, 0xc69d, 0xff70, 0xc7b8, 0xa83a, 0x8317, 0x0, 0x0);
        gbc.writeMem(0xa50c, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xc69d);
        EXPECT(gbc.pc(), 0xa50e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa50c), 0xcb);
        EXPECT(gbc.readMem(0xa50d), 0x88);
        // CB 88 03CE
        gbc.setState(0xc52b, 0x8433, 0x9770, 0x4cba, 0x1163, 0x5199, 0x1, 0x1);
        gbc.writeMem(0xc52b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8433);
        EXPECT(gbc.pc(), 0xc52d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc52b), 0xcb);
        EXPECT(gbc.readMem(0xc52c), 0x88);
        // CB 88 03CF
        gbc.setState(0x1eba, 0x6b74, 0x9da0, 0xb35d, 0xe096, 0x927, 0x0, 0x1);
        gbc.writeMem(0x1eba, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x6b74);
        EXPECT(gbc.pc(), 0x1ebc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03D1
        gbc.setState(0x4f2b, 0xf7a, 0xfe0, 0x2cb6, 0xe621, 0xe6f8, 0x1, 0x0);
        gbc.writeMem(0x4f2b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf7a);
        EXPECT(gbc.pc(), 0x4f2d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03D2
        gbc.setState(0xa148, 0x794d, 0xb20, 0xcda7, 0x6fa0, 0x30b3, 0x0, 0x1);
        gbc.writeMem(0xa148, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x794d);
        EXPECT(gbc.pc(), 0xa14a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa148), 0xcb);
        EXPECT(gbc.readMem(0xa149), 0x88);
        // CB 88 03D3
        gbc.setState(0x7b21, 0xeeab, 0xc740, 0x27eb, 0x961, 0x7376, 0x1, 0x0);
        gbc.writeMem(0x7b21, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xeeab);
        EXPECT(gbc.pc(), 0x7b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03D4
        gbc.setState(0x19b, 0xf3e3, 0xf620, 0x6216, 0xa99, 0xdc, 0x0, 0x0);
        gbc.writeMem(0x19b, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xf3e3);
        EXPECT(gbc.pc(), 0x19d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03D5
        gbc.setState(0xe1a5, 0xaf77, 0x3f0, 0xad80, 0xd80f, 0xa8b2, 0x1, 0x1);
        gbc.writeMem(0xe1a5, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xaf77);
        EXPECT(gbc.pc(), 0xe1a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe1a5), 0xcb);
        EXPECT(gbc.readMem(0xe1a6), 0x88);
        // CB 88 03D6
        gbc.setState(0x9d05, 0x21b7, 0xf5a0, 0x56de, 0xa4f0, 0x2760, 0x1, 0x1);
        gbc.writeMem(0x9d05, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x21b7);
        EXPECT(gbc.pc(), 0x9d07);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d05), 0xcb);
        EXPECT(gbc.readMem(0x9d06), 0x88);
        // CB 88 03D7
        gbc.setState(0x5022, 0xa81, 0xa360, 0x13d5, 0x2f83, 0xe8eb, 0x1, 0x0);
        gbc.writeMem(0x5022, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xd5);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xa81);
        EXPECT(gbc.pc(), 0x5024);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03D8
        gbc.setState(0x4733, 0x2df8, 0x4d0, 0x4883, 0x9853, 0x7b51, 0x0, 0x1);
        gbc.writeMem(0x4733, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x2df8);
        EXPECT(gbc.pc(), 0x4735);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03D9
        gbc.setState(0x7b17, 0x1b44, 0x56d0, 0x6108, 0x1ade, 0x1e22, 0x0, 0x1);
        gbc.writeMem(0x7b17, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x1b44);
        EXPECT(gbc.pc(), 0x7b19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03DA
        gbc.setState(0x5e42, 0x8fa8, 0x4370, 0x9379, 0x1b5e, 0xaf24, 0x1, 0x1);
        gbc.writeMem(0x5e42, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x91);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8fa8);
        EXPECT(gbc.pc(), 0x5e44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03DB
        gbc.setState(0x4105, 0x4bcd, 0xbbe0, 0x49e6, 0xf336, 0x9f28, 0x1, 0x1);
        gbc.writeMem(0x4105, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x4bcd);
        EXPECT(gbc.pc(), 0x4107);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03DC
        gbc.setState(0x5403, 0xab4, 0x6380, 0x7711, 0x647e, 0x650a, 0x0, 0x0);
        gbc.writeMem(0x5403, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xab4);
        EXPECT(gbc.pc(), 0x5405);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03DD
        gbc.setState(0x3aa8, 0x43e, 0x820, 0x4609, 0x4f11, 0x2503, 0x1, 0x0);
        gbc.writeMem(0x3aa8, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x43e);
        EXPECT(gbc.pc(), 0x3aaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03DE
        gbc.setState(0x9d64, 0xe0c6, 0x7ce0, 0x27c5, 0x18c6, 0x139d, 0x1, 0x0);
        gbc.writeMem(0x9d64, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe0c6);
        EXPECT(gbc.pc(), 0x9d66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d64), 0xcb);
        EXPECT(gbc.readMem(0x9d65), 0x88);
        // CB 88 03DF
        gbc.setState(0x6faa, 0x9491, 0xafd0, 0x9b73, 0xc324, 0x8780, 0x1, 0x1);
        gbc.writeMem(0x6faa, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x9491);
        EXPECT(gbc.pc(), 0x6fac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // CB 88 03E0
        gbc.setState(0x43de, 0xde12, 0xf820, 0x4e34, 0x342b, 0x6896, 0x1, 0x0);
        gbc.writeMem(0x43de, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xde12);
        EXPECT(gbc.pc(), 0x43e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03E2
        gbc.setState(0x7527, 0x32d9, 0xd280, 0x1d8a, 0xe8f0, 0xe38, 0x0, 0x1);
        gbc.writeMem(0x7527, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xe);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x32d9);
        EXPECT(gbc.pc(), 0x7529);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03E3
        gbc.setState(0xd648, 0x93ad, 0xd8a0, 0x6834, 0xcd75, 0xb501, 0x1, 0x0);
        gbc.writeMem(0xd648, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x93ad);
        EXPECT(gbc.pc(), 0xd64a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd648), 0xcb);
        EXPECT(gbc.readMem(0xd649), 0x88);
        // CB 88 03E4
        gbc.setState(0x5072, 0x31f5, 0x3d00, 0x2305, 0x15d1, 0x33f6, 0x0, 0x0);
        gbc.writeMem(0x5072, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x31f5);
        EXPECT(gbc.pc(), 0x5074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03E5
        gbc.setState(0x8332, 0xef0d, 0x1990, 0x5e56, 0xeb8b, 0xd1ba, 0x1, 0x0);
        gbc.writeMem(0x8332, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xef0d);
        EXPECT(gbc.pc(), 0x8334);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8332), 0xcb);
        EXPECT(gbc.readMem(0x8333), 0x88);
        // CB 88 03E6
        gbc.setState(0x36d2, 0x639c, 0xc840, 0x1441, 0x101c, 0x4a82, 0x0, 0x1);
        gbc.writeMem(0x36d2, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0x639c);
        EXPECT(gbc.pc(), 0x36d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // CB 88 03E7
        gbc.setState(0xe0d6, 0x63c4, 0x3b90, 0x7cb8, 0xae38, 0x506b, 0x0, 0x1);
        gbc.writeMem(0xe0d6, { 0xcb, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x63c4);
        EXPECT(gbc.pc(), 0xe0d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0d6), 0xcb);
        EXPECT(gbc.readMem(0xe0d7), 0x88);
    }
}
#endif
