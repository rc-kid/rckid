    TEST(gbcemu, opcode_dc) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // DC 0000
        gbc.setState(0x5e34, 0x84e4, 0x4b70, 0x51de, 0x9d36, 0x546f, 0x0, 0x1);
        gbc.writeMem(0x5e34, { 0xdc, 0xd3, 0xf0 });
        gbc.writeMem(0x84e2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x84e2);
        EXPECT(gbc.pc(), 0xf0d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84e2), 0x37);
        EXPECT(gbc.readMem(0x84e3), 0x5e);
        // DC 0001
        gbc.setState(0xe3d8, 0xa3f3, 0xac20, 0x319b, 0x1d9, 0x24b7, 0x0, 0x1);
        gbc.writeMem(0xe3d8, { 0xdc, 0xe5, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xa3f3);
        EXPECT(gbc.pc(), 0xe3db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3d8), 0xdc);
        EXPECT(gbc.readMem(0xe3d9), 0xe5);
        EXPECT(gbc.readMem(0xe3da), 0xe9);
        // DC 0002
        gbc.setState(0x8c95, 0xda7, 0x8d20, 0xf01d, 0x930b, 0x4c47, 0x1, 0x0);
        gbc.writeMem(0x8c95, { 0xdc, 0x21, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xda7);
        EXPECT(gbc.pc(), 0x8c98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c95), 0xdc);
        EXPECT(gbc.readMem(0x8c96), 0x21);
        EXPECT(gbc.readMem(0x8c97), 0xb);
        // DC 0003
        gbc.setState(0xd79f, 0x9348, 0x37c0, 0xfee, 0xe9cf, 0x3119, 0x1, 0x1);
        gbc.writeMem(0xd79f, { 0xdc, 0x51, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x9348);
        EXPECT(gbc.pc(), 0xd7a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd79f), 0xdc);
        EXPECT(gbc.readMem(0xd7a0), 0x51);
        EXPECT(gbc.readMem(0xd7a1), 0xe4);
        // DC 0006
        gbc.setState(0xc3dd, 0x872e, 0x9530, 0x1f94, 0x6cbc, 0xc2, 0x0, 0x0);
        gbc.writeMem(0x872c, { 0x0, 0x0 });
        gbc.writeMem(0xc3dd, { 0xdc, 0x2d, 0x27 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x872c);
        EXPECT(gbc.pc(), 0x272d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x872c), 0xe0);
        EXPECT(gbc.readMem(0x872d), 0xc3);
        EXPECT(gbc.readMem(0xc3dd), 0xdc);
        EXPECT(gbc.readMem(0xc3de), 0x2d);
        EXPECT(gbc.readMem(0xc3df), 0x27);
        // DC 0008
        gbc.setState(0xddd7, 0xe7d6, 0x7ba0, 0x4250, 0x8619, 0x3dc1, 0x0, 0x0);
        gbc.writeMem(0xddd7, { 0xdc, 0x53, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe7d6);
        EXPECT(gbc.pc(), 0xddda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddd7), 0xdc);
        EXPECT(gbc.readMem(0xddd8), 0x53);
        EXPECT(gbc.readMem(0xddd9), 0xc3);
        // DC 0009
        gbc.setState(0x90e9, 0xc13f, 0xfd70, 0xd050, 0xfca3, 0x5100, 0x1, 0x0);
        gbc.writeMem(0x90e9, { 0xdc, 0x35, 0xec });
        gbc.writeMem(0xc13d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc13d);
        EXPECT(gbc.pc(), 0xec35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x90e9), 0xdc);
        EXPECT(gbc.readMem(0x90ea), 0x35);
        EXPECT(gbc.readMem(0x90eb), 0xec);
        EXPECT(gbc.readMem(0xc13d), 0xec);
        EXPECT(gbc.readMem(0xc13e), 0x90);
        // DC 000A
        gbc.setState(0xc377, 0xb57b, 0xba80, 0x45a6, 0x5e03, 0x654, 0x0, 0x1);
        gbc.writeMem(0xc377, { 0xdc, 0x1a, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb57b);
        EXPECT(gbc.pc(), 0xc37a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc377), 0xdc);
        EXPECT(gbc.readMem(0xc378), 0x1a);
        EXPECT(gbc.readMem(0xc379), 0x2e);
        // DC 000B
        gbc.setState(0xb2c9, 0xc610, 0xcaf0, 0x530f, 0xdad5, 0x6ab0, 0x1, 0x0);
        gbc.writeMem(0xb2c9, { 0xdc, 0x55, 0x24 });
        gbc.writeMem(0xc60e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xc60e);
        EXPECT(gbc.pc(), 0x2455);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2c9), 0xdc);
        EXPECT(gbc.readMem(0xb2ca), 0x55);
        EXPECT(gbc.readMem(0xb2cb), 0x24);
        EXPECT(gbc.readMem(0xc60e), 0xcc);
        EXPECT(gbc.readMem(0xc60f), 0xb2);
        // DC 000D
        gbc.setState(0x179a, 0x94c7, 0xd420, 0xb06, 0xe373, 0x9e67, 0x0, 0x1);
        gbc.writeMem(0x179a, { 0xdc, 0xa1, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x94c7);
        EXPECT(gbc.pc(), 0x179d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 000F
        gbc.setState(0xc8b8, 0x8f3a, 0xdb00, 0x9bf, 0x6a06, 0x2886, 0x1, 0x1);
        gbc.writeMem(0xc8b8, { 0xdc, 0xd6, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x8f3a);
        EXPECT(gbc.pc(), 0xc8bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8b8), 0xdc);
        EXPECT(gbc.readMem(0xc8b9), 0xd6);
        EXPECT(gbc.readMem(0xc8ba), 0xa1);
        // DC 0012
        gbc.setState(0x437e, 0x9dfb, 0xa2e0, 0xeb68, 0x7a01, 0xcf14, 0x1, 0x1);
        gbc.writeMem(0x437e, { 0xdc, 0xc9, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x9dfb);
        EXPECT(gbc.pc(), 0x4381);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0014
        gbc.setState(0x2b8a, 0xe137, 0x4710, 0xfdd3, 0xb707, 0x8fdd, 0x1, 0x1);
        gbc.writeMem(0x2b8a, { 0xdc, 0xfd, 0x82 });
        gbc.writeMem(0xe135, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe135);
        EXPECT(gbc.pc(), 0x82fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe135), 0x8d);
        EXPECT(gbc.readMem(0xe136), 0x2b);
        // DC 0015
        gbc.setState(0x6981, 0xfa72, 0x3aa0, 0xd5e, 0x43ad, 0x987d, 0x1, 0x1);
        gbc.writeMem(0x6981, { 0xdc, 0x10, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xfa72);
        EXPECT(gbc.pc(), 0x6984);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0018
        gbc.setState(0xe252, 0x2c6c, 0x92c0, 0xcc14, 0xf440, 0x738b, 0x1, 0x0);
        gbc.writeMem(0xe252, { 0xdc, 0xe9, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x2c6c);
        EXPECT(gbc.pc(), 0xe255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe252), 0xdc);
        EXPECT(gbc.readMem(0xe253), 0xe9);
        EXPECT(gbc.readMem(0xe254), 0x7f);
        // DC 0019
        gbc.setState(0x90c3, 0x28b4, 0xa060, 0x4a42, 0xfe8a, 0x7ef1, 0x0, 0x1);
        gbc.writeMem(0x90c3, { 0xdc, 0x3a, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x28b4);
        EXPECT(gbc.pc(), 0x90c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c3), 0xdc);
        EXPECT(gbc.readMem(0x90c4), 0x3a);
        EXPECT(gbc.readMem(0x90c5), 0xb1);
        // DC 001A
        gbc.setState(0xeac1, 0x8605, 0x1f80, 0x29f0, 0x5c31, 0xbc3a, 0x0, 0x0);
        gbc.writeMem(0xeac1, { 0xdc, 0xf5, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x8605);
        EXPECT(gbc.pc(), 0xeac4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeac1), 0xdc);
        EXPECT(gbc.readMem(0xeac2), 0xf5);
        EXPECT(gbc.readMem(0xeac3), 0x72);
        // DC 001B
        gbc.setState(0x620, 0x7d68, 0xea40, 0x447d, 0xdd2e, 0xf5b7, 0x0, 0x1);
        gbc.writeMem(0x620, { 0xdc, 0x63, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x7d68);
        EXPECT(gbc.pc(), 0x623);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 001C
        gbc.setState(0xebae, 0xe54f, 0x480, 0xdfd6, 0xe8b7, 0x63fd, 0x1, 0x0);
        gbc.writeMem(0xebae, { 0xdc, 0xca, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xe54f);
        EXPECT(gbc.pc(), 0xebb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebae), 0xdc);
        EXPECT(gbc.readMem(0xebaf), 0xca);
        EXPECT(gbc.readMem(0xebb0), 0x7c);
        // DC 001E
        gbc.setState(0xd2ea, 0x6401, 0x6c0, 0xaea6, 0x8f83, 0xbc04, 0x0, 0x0);
        gbc.writeMem(0xd2ea, { 0xdc, 0x8, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x6401);
        EXPECT(gbc.pc(), 0xd2ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ea), 0xdc);
        EXPECT(gbc.readMem(0xd2eb), 0x8);
        EXPECT(gbc.readMem(0xd2ec), 0xdf);
        // DC 001F
        gbc.setState(0x41a5, 0xcad7, 0xc8c0, 0x5440, 0x689b, 0xeb80, 0x1, 0x0);
        gbc.writeMem(0x41a5, { 0xdc, 0xa6, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xcad7);
        EXPECT(gbc.pc(), 0x41a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0022
        gbc.setState(0x8130, 0x5d96, 0xaa80, 0xd01f, 0x9f44, 0xba5, 0x1, 0x0);
        gbc.writeMem(0x8130, { 0xdc, 0x93, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x5d96);
        EXPECT(gbc.pc(), 0x8133);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8130), 0xdc);
        EXPECT(gbc.readMem(0x8131), 0x93);
        EXPECT(gbc.readMem(0x8132), 0x20);
        // DC 0023
        gbc.setState(0x3c65, 0xcdcb, 0x4d00, 0x171e, 0x8a6b, 0xf785, 0x0, 0x0);
        gbc.writeMem(0x3c65, { 0xdc, 0xd, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xcdcb);
        EXPECT(gbc.pc(), 0x3c68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0027
        gbc.setState(0x9589, 0xd321, 0x0, 0xbe31, 0x4e06, 0x9147, 0x1, 0x0);
        gbc.writeMem(0x9589, { 0xdc, 0x8e, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xd321);
        EXPECT(gbc.pc(), 0x958c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9589), 0xdc);
        EXPECT(gbc.readMem(0x958a), 0x8e);
        EXPECT(gbc.readMem(0x958b), 0x4);
        // DC 0028
        gbc.setState(0xf65, 0xc4dc, 0xf360, 0x7631, 0x6a2f, 0x72cc, 0x0, 0x0);
        gbc.writeMem(0xf65, { 0xdc, 0xa0, 0xfe });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xc4dc);
        EXPECT(gbc.pc(), 0xf68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0029
        gbc.setState(0x100d, 0x7cc2, 0x85a0, 0x632b, 0xfbb5, 0x6fce, 0x1, 0x0);
        gbc.writeMem(0x100d, { 0xdc, 0x3, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x7cc2);
        EXPECT(gbc.pc(), 0x1010);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 002B
        gbc.setState(0x25fc, 0xcf14, 0xb050, 0x4ef5, 0x2dfb, 0x263b, 0x1, 0x1);
        gbc.writeMem(0x25fc, { 0xdc, 0xe7, 0xb1 });
        gbc.writeMem(0xcf12, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xcf12);
        EXPECT(gbc.pc(), 0xb1e7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf12), 0xff);
        EXPECT(gbc.readMem(0xcf13), 0x25);
        // DC 002C
        gbc.setState(0x43cf, 0x27a8, 0xc560, 0xd7a, 0xc93b, 0x75a9, 0x1, 0x1);
        gbc.writeMem(0x43cf, { 0xdc, 0x18, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x27a8);
        EXPECT(gbc.pc(), 0x43d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 002E
        gbc.setState(0xe8a5, 0xfa4e, 0x6fc0, 0x23f1, 0xbeb8, 0xe0b3, 0x1, 0x0);
        gbc.writeMem(0xe8a5, { 0xdc, 0xf8, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xfa4e);
        EXPECT(gbc.pc(), 0xe8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe8a5), 0xdc);
        EXPECT(gbc.readMem(0xe8a6), 0xf8);
        EXPECT(gbc.readMem(0xe8a7), 0x8d);
        // DC 002F
        gbc.setState(0xabb9, 0x9e2d, 0x7f10, 0x5799, 0x85a5, 0x70c1, 0x1, 0x1);
        gbc.writeMem(0x9e2b, { 0x0, 0x0 });
        gbc.writeMem(0xabb9, { 0xdc, 0xb, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x9e2b);
        EXPECT(gbc.pc(), 0x900b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e2b), 0xbc);
        EXPECT(gbc.readMem(0x9e2c), 0xab);
        EXPECT(gbc.readMem(0xabb9), 0xdc);
        EXPECT(gbc.readMem(0xabba), 0xb);
        EXPECT(gbc.readMem(0xabbb), 0x90);
        // DC 0030
        gbc.setState(0x42d4, 0x34c, 0x1f20, 0xf6aa, 0x9427, 0x154f, 0x0, 0x1);
        gbc.writeMem(0x42d4, { 0xdc, 0x66, 0xf8 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x34c);
        EXPECT(gbc.pc(), 0x42d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0031
        gbc.setState(0xde41, 0x6b18, 0x6020, 0xeae, 0x53bc, 0x54fa, 0x1, 0x0);
        gbc.writeMem(0xde41, { 0xdc, 0x8a, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6b18);
        EXPECT(gbc.pc(), 0xde44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde41), 0xdc);
        EXPECT(gbc.readMem(0xde42), 0x8a);
        EXPECT(gbc.readMem(0xde43), 0xd0);
        // DC 0032
        gbc.setState(0xa49d, 0x6362, 0x3c20, 0xe4b2, 0xd94d, 0xf453, 0x0, 0x1);
        gbc.writeMem(0xa49d, { 0xdc, 0xc0, 0xad });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x6362);
        EXPECT(gbc.pc(), 0xa4a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa49d), 0xdc);
        EXPECT(gbc.readMem(0xa49e), 0xc0);
        EXPECT(gbc.readMem(0xa49f), 0xad);
        // DC 0033
        gbc.setState(0x3bed, 0x1c29, 0xdc20, 0xce44, 0x8751, 0x4d65, 0x0, 0x0);
        gbc.writeMem(0x3bed, { 0xdc, 0xf6, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x1c29);
        EXPECT(gbc.pc(), 0x3bf0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0034
        gbc.setState(0xa6b3, 0xb780, 0x9aa0, 0x8f38, 0x25ce, 0xaef6, 0x1, 0x1);
        gbc.writeMem(0xa6b3, { 0xdc, 0x3d, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xb780);
        EXPECT(gbc.pc(), 0xa6b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6b3), 0xdc);
        EXPECT(gbc.readMem(0xa6b4), 0x3d);
        EXPECT(gbc.readMem(0xa6b5), 0xb7);
        // DC 0035
        gbc.setState(0x5264, 0xb83a, 0xa700, 0x2902, 0x6954, 0x5c68, 0x0, 0x1);
        gbc.writeMem(0x5264, { 0xdc, 0x53, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb83a);
        EXPECT(gbc.pc(), 0x5267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0037
        gbc.setState(0x7a6a, 0xccd1, 0xa4b0, 0x6b30, 0x437, 0xe2f2, 0x0, 0x0);
        gbc.writeMem(0x7a6a, { 0xdc, 0x2f, 0xb2 });
        gbc.writeMem(0xcccf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xcccf);
        EXPECT(gbc.pc(), 0xb22f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcccf), 0x6d);
        EXPECT(gbc.readMem(0xccd0), 0x7a);
        // DC 0038
        gbc.setState(0x2ea, 0xc293, 0x10e0, 0xdd3d, 0x16f0, 0x52ec, 0x0, 0x0);
        gbc.writeMem(0x2ea, { 0xdc, 0xf5, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xc293);
        EXPECT(gbc.pc(), 0x2ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0039
        gbc.setState(0xafa0, 0xa987, 0x77c0, 0x9203, 0xc476, 0xcb9e, 0x1, 0x0);
        gbc.writeMem(0xafa0, { 0xdc, 0xcf, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa987);
        EXPECT(gbc.pc(), 0xafa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xafa0), 0xdc);
        EXPECT(gbc.readMem(0xafa1), 0xcf);
        EXPECT(gbc.readMem(0xafa2), 0x7c);
        // DC 003A
        gbc.setState(0xa82d, 0xef5a, 0x89c0, 0xfef9, 0xfb1b, 0xe737, 0x0, 0x1);
        gbc.writeMem(0xa82d, { 0xdc, 0x17, 0xe2 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xef5a);
        EXPECT(gbc.pc(), 0xa830);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa82d), 0xdc);
        EXPECT(gbc.readMem(0xa82e), 0x17);
        EXPECT(gbc.readMem(0xa82f), 0xe2);
        // DC 003B
        gbc.setState(0xdb3e, 0xf718, 0x5a0, 0x6a7e, 0x3b91, 0xb46f, 0x0, 0x1);
        gbc.writeMem(0xdb3e, { 0xdc, 0xce, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xf718);
        EXPECT(gbc.pc(), 0xdb41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb3e), 0xdc);
        EXPECT(gbc.readMem(0xdb3f), 0xce);
        EXPECT(gbc.readMem(0xdb40), 0xd8);
        // DC 003C
        gbc.setState(0x63ca, 0x2178, 0x6be0, 0x4ef4, 0x5719, 0x8b5b, 0x1, 0x0);
        gbc.writeMem(0x63ca, { 0xdc, 0xdc, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x2178);
        EXPECT(gbc.pc(), 0x63cd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 003E
        gbc.setState(0x142d, 0xfe4d, 0x8dd0, 0xdb98, 0x1a2c, 0xb5c8, 0x1, 0x0);
        gbc.writeMem(0x142d, { 0xdc, 0xd3, 0xcc });
        gbc.writeMem(0xfe4b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xfe4b);
        EXPECT(gbc.pc(), 0xccd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfe4b), 0x30);
        EXPECT(gbc.readMem(0xfe4c), 0x14);
        // DC 003F
        gbc.setState(0x54b6, 0x79e6, 0xfd40, 0x38d6, 0xbce, 0xedd3, 0x0, 0x0);
        gbc.writeMem(0x54b6, { 0xdc, 0xb3, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x79e6);
        EXPECT(gbc.pc(), 0x54b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0040
        gbc.setState(0xb555, 0xfee8, 0x6b40, 0xef7a, 0x830, 0xe6c5, 0x1, 0x1);
        gbc.writeMem(0xb555, { 0xdc, 0xb5, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfee8);
        EXPECT(gbc.pc(), 0xb558);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb555), 0xdc);
        EXPECT(gbc.readMem(0xb556), 0xb5);
        EXPECT(gbc.readMem(0xb557), 0x4c);
        // DC 0041
        gbc.setState(0x46cc, 0xc829, 0x7d40, 0x281e, 0x9e71, 0x66ba, 0x0, 0x1);
        gbc.writeMem(0x46cc, { 0xdc, 0x91, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0xc829);
        EXPECT(gbc.pc(), 0x46cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0042
        gbc.setState(0x7bf4, 0xe4c2, 0xf0, 0x31cb, 0x998c, 0x4059, 0x1, 0x1);
        gbc.writeMem(0x7bf4, { 0xdc, 0x45, 0x38 });
        gbc.writeMem(0xe4c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xe4c0);
        EXPECT(gbc.pc(), 0x3845);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4c0), 0xf7);
        EXPECT(gbc.readMem(0xe4c1), 0x7b);
        // DC 0043
        gbc.setState(0x90, 0xc14a, 0x91c0, 0x3592, 0x8f87, 0x2e1, 0x1, 0x0);
        gbc.writeMem(0x90, { 0xdc, 0x73, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc14a);
        EXPECT(gbc.pc(), 0x93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0044
        gbc.setState(0x32d3, 0xe62d, 0x2e20, 0x534, 0x8cd7, 0xa7ef, 0x1, 0x1);
        gbc.writeMem(0x32d3, { 0xdc, 0x55, 0xde });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xe62d);
        EXPECT(gbc.pc(), 0x32d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0045
        gbc.setState(0xa822, 0x2e58, 0xfd80, 0x2265, 0xa0ce, 0xacc6, 0x1, 0x0);
        gbc.writeMem(0xa822, { 0xdc, 0x16, 0x16 });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x2e58);
        EXPECT(gbc.pc(), 0xa825);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa822), 0xdc);
        EXPECT(gbc.readMem(0xa823), 0x16);
        EXPECT(gbc.readMem(0xa824), 0x16);
        // DC 0046
        gbc.setState(0x5c4, 0x9a72, 0x99c0, 0xdfc6, 0xb93b, 0x1c68, 0x1, 0x1);
        gbc.writeMem(0x5c4, { 0xdc, 0x2e, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9a72);
        EXPECT(gbc.pc(), 0x5c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0047
        gbc.setState(0x9db8, 0xcf3a, 0x3f90, 0x8c7d, 0x2260, 0x868b, 0x0, 0x0);
        gbc.writeMem(0x9db8, { 0xdc, 0xa1, 0xb9 });
        gbc.writeMem(0xcf38, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xcf38);
        EXPECT(gbc.pc(), 0xb9a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9db8), 0xdc);
        EXPECT(gbc.readMem(0x9db9), 0xa1);
        EXPECT(gbc.readMem(0x9dba), 0xb9);
        EXPECT(gbc.readMem(0xcf38), 0xbb);
        EXPECT(gbc.readMem(0xcf39), 0x9d);
        // DC 004A
        gbc.setState(0x4d79, 0x3307, 0x38e0, 0x22ec, 0xd15f, 0x9f55, 0x1, 0x1);
        gbc.writeMem(0x4d79, { 0xdc, 0xe7, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x3307);
        EXPECT(gbc.pc(), 0x4d7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 004C
        gbc.setState(0x7bbf, 0x13d3, 0x7260, 0x9dbd, 0xe5dc, 0x327, 0x1, 0x1);
        gbc.writeMem(0x7bbf, { 0xdc, 0x35, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x13d3);
        EXPECT(gbc.pc(), 0x7bc2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 004D
        gbc.setState(0xd651, 0xb570, 0x85a0, 0xa40f, 0x7b43, 0x45fc, 0x0, 0x0);
        gbc.writeMem(0xd651, { 0xdc, 0x24, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0xb570);
        EXPECT(gbc.pc(), 0xd654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd651), 0xdc);
        EXPECT(gbc.readMem(0xd652), 0x24);
        EXPECT(gbc.readMem(0xd653), 0x23);
        // DC 004E
        gbc.setState(0x1f3, 0x3cd9, 0x4840, 0xe1de, 0xcf18, 0x4ef2, 0x1, 0x1);
        gbc.writeMem(0x1f3, { 0xdc, 0xe4, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x3cd9);
        EXPECT(gbc.pc(), 0x1f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 004F
        gbc.setState(0xaddb, 0xbc0c, 0xc970, 0xafd8, 0x79e0, 0x5da9, 0x1, 0x0);
        gbc.writeMem(0xaddb, { 0xdc, 0x84, 0x9a });
        gbc.writeMem(0xbc0a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xbc0a);
        EXPECT(gbc.pc(), 0x9a84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaddb), 0xdc);
        EXPECT(gbc.readMem(0xaddc), 0x84);
        EXPECT(gbc.readMem(0xaddd), 0x9a);
        EXPECT(gbc.readMem(0xbc0a), 0xde);
        EXPECT(gbc.readMem(0xbc0b), 0xad);
        // DC 0050
        gbc.setState(0x75f, 0x3dd4, 0x3380, 0x820f, 0x42b2, 0x85f7, 0x0, 0x0);
        gbc.writeMem(0x75f, { 0xdc, 0xb9, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3dd4);
        EXPECT(gbc.pc(), 0x762);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0051
        gbc.setState(0x687d, 0x21ab, 0x1600, 0xe7dc, 0x7334, 0xc478, 0x0, 0x0);
        gbc.writeMem(0x687d, { 0xdc, 0xf4, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x21ab);
        EXPECT(gbc.pc(), 0x6880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0053
        gbc.setState(0xfab, 0x2158, 0xa460, 0xb807, 0x3dce, 0xc4f, 0x1, 0x0);
        gbc.writeMem(0xfab, { 0xdc, 0xdd, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x2158);
        EXPECT(gbc.pc(), 0xfae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0055
        gbc.setState(0xe2d4, 0xd848, 0x1480, 0xe995, 0xe868, 0xd627, 0x0, 0x1);
        gbc.writeMem(0xe2d4, { 0xdc, 0x95, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xd848);
        EXPECT(gbc.pc(), 0xe2d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2d4), 0xdc);
        EXPECT(gbc.readMem(0xe2d5), 0x95);
        EXPECT(gbc.readMem(0xe2d6), 0x8c);
        // DC 0057
        gbc.setState(0xe0ae, 0x555, 0x8ec0, 0xbabc, 0xb5c9, 0x9c54, 0x0, 0x0);
        gbc.writeMem(0xe0ae, { 0xdc, 0x78, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x555);
        EXPECT(gbc.pc(), 0xe0b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe0ae), 0xdc);
        EXPECT(gbc.readMem(0xe0af), 0x78);
        EXPECT(gbc.readMem(0xe0b0), 0xbb);
        // DC 0058
        gbc.setState(0xa169, 0xcd0a, 0x8b60, 0x825e, 0x38a8, 0x4b1e, 0x0, 0x0);
        gbc.writeMem(0xa169, { 0xdc, 0x83, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xcd0a);
        EXPECT(gbc.pc(), 0xa16c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa169), 0xdc);
        EXPECT(gbc.readMem(0xa16a), 0x83);
        EXPECT(gbc.readMem(0xa16b), 0x83);
        // DC 0059
        gbc.setState(0xeeaf, 0x604b, 0xfa00, 0xa93a, 0xf3d4, 0xf154, 0x0, 0x0);
        gbc.writeMem(0xeeaf, { 0xdc, 0xfe, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x604b);
        EXPECT(gbc.pc(), 0xeeb2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeeaf), 0xdc);
        EXPECT(gbc.readMem(0xeeb0), 0xfe);
        EXPECT(gbc.readMem(0xeeb1), 0x43);
        // DC 005B
        gbc.setState(0x444c, 0x97da, 0xf1c0, 0x2595, 0x1546, 0xd388, 0x0, 0x1);
        gbc.writeMem(0x444c, { 0xdc, 0x16, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x97da);
        EXPECT(gbc.pc(), 0x444f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 005D
        gbc.setState(0x10d7, 0xc5c2, 0xa60, 0x7ea8, 0x3e6b, 0x50fe, 0x0, 0x0);
        gbc.writeMem(0x10d7, { 0xdc, 0x8a, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc5c2);
        EXPECT(gbc.pc(), 0x10da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 005F
        gbc.setState(0x6090, 0x8950, 0x2f00, 0x4130, 0x79b3, 0x17a2, 0x0, 0x0);
        gbc.writeMem(0x6090, { 0xdc, 0xad, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x8950);
        EXPECT(gbc.pc(), 0x6093);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0060
        gbc.setState(0x9909, 0x964f, 0x76a0, 0x4015, 0x9061, 0x7329, 0x1, 0x1);
        gbc.writeMem(0x9909, { 0xdc, 0x4f, 0xac });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x964f);
        EXPECT(gbc.pc(), 0x990c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9909), 0xdc);
        EXPECT(gbc.readMem(0x990a), 0x4f);
        EXPECT(gbc.readMem(0x990b), 0xac);
        // DC 0061
        gbc.setState(0x427f, 0x1418, 0x1640, 0xcd03, 0x9ded, 0x827e, 0x0, 0x1);
        gbc.writeMem(0x427f, { 0xdc, 0x5d, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x1418);
        EXPECT(gbc.pc(), 0x4282);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0064
        gbc.setState(0x5f91, 0x7870, 0xb800, 0x847f, 0xb14a, 0xb8fc, 0x1, 0x1);
        gbc.writeMem(0x5f91, { 0xdc, 0x0, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7870);
        EXPECT(gbc.pc(), 0x5f94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0065
        gbc.setState(0x9cc7, 0x864b, 0x25d0, 0x600b, 0xa0ea, 0xfdd1, 0x1, 0x1);
        gbc.writeMem(0x8649, { 0x0, 0x0 });
        gbc.writeMem(0x9cc7, { 0xdc, 0xa7, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8649);
        EXPECT(gbc.pc(), 0xfaa7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8649), 0xca);
        EXPECT(gbc.readMem(0x864a), 0x9c);
        EXPECT(gbc.readMem(0x9cc7), 0xdc);
        EXPECT(gbc.readMem(0x9cc8), 0xa7);
        EXPECT(gbc.readMem(0x9cc9), 0xfa);
        // DC 0066
        gbc.setState(0x6430, 0xe81e, 0x8ea0, 0xc088, 0xad9, 0x7c3, 0x1, 0x0);
        gbc.writeMem(0x6430, { 0xdc, 0x54, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe81e);
        EXPECT(gbc.pc(), 0x6433);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0067
        gbc.setState(0x4290, 0x4219, 0x400, 0xfc76, 0x1939, 0xd8e6, 0x1, 0x0);
        gbc.writeMem(0x4290, { 0xdc, 0x1b, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x4219);
        EXPECT(gbc.pc(), 0x4293);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0068
        gbc.setState(0xa397, 0x79be, 0x8940, 0xbf7f, 0x7746, 0x5160, 0x1, 0x0);
        gbc.writeMem(0xa397, { 0xdc, 0x46, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x79be);
        EXPECT(gbc.pc(), 0xa39a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa397), 0xdc);
        EXPECT(gbc.readMem(0xa398), 0x46);
        EXPECT(gbc.readMem(0xa399), 0x90);
        // DC 0069
        gbc.setState(0xe079, 0xc7b7, 0x1cb0, 0xe278, 0xe42c, 0xdde1, 0x1, 0x0);
        gbc.writeMem(0xc7b5, { 0x0, 0x0 });
        gbc.writeMem(0xe079, { 0xdc, 0x28, 0x83 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc7b5);
        EXPECT(gbc.pc(), 0x8328);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7b5), 0x7c);
        EXPECT(gbc.readMem(0xc7b6), 0xe0);
        EXPECT(gbc.readMem(0xe079), 0xdc);
        EXPECT(gbc.readMem(0xe07a), 0x28);
        EXPECT(gbc.readMem(0xe07b), 0x83);
        // DC 006A
        gbc.setState(0x884, 0xfa16, 0x78c0, 0xe974, 0x6f62, 0x7def, 0x0, 0x0);
        gbc.writeMem(0x884, { 0xdc, 0xd3, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xfa16);
        EXPECT(gbc.pc(), 0x887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 006C
        gbc.setState(0x6e4e, 0xd9d, 0xfe60, 0x9604, 0x625, 0xa870, 0x1, 0x0);
        gbc.writeMem(0x6e4e, { 0xdc, 0x6b, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd9d);
        EXPECT(gbc.pc(), 0x6e51);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 006D
        gbc.setState(0x5f29, 0x5e23, 0xc4c0, 0xf95b, 0x2672, 0xcbdc, 0x0, 0x1);
        gbc.writeMem(0x5f29, { 0xdc, 0x36, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x5e23);
        EXPECT(gbc.pc(), 0x5f2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 006F
        gbc.setState(0x8736, 0xa5e2, 0xe590, 0x35b2, 0x2f25, 0x4a90, 0x1, 0x1);
        gbc.writeMem(0x8736, { 0xdc, 0xb, 0xd });
        gbc.writeMem(0xa5e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa5e0);
        EXPECT(gbc.pc(), 0xd0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8736), 0xdc);
        EXPECT(gbc.readMem(0x8737), 0xb);
        EXPECT(gbc.readMem(0x8738), 0xd);
        EXPECT(gbc.readMem(0xa5e0), 0x39);
        EXPECT(gbc.readMem(0xa5e1), 0x87);
        // DC 0070
        gbc.setState(0x6da3, 0xc8ce, 0x4960, 0x8186, 0x893b, 0x4c8e, 0x0, 0x0);
        gbc.writeMem(0x6da3, { 0xdc, 0xff, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xc8ce);
        EXPECT(gbc.pc(), 0x6da6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0071
        gbc.setState(0x2e7c, 0x2ad7, 0x5360, 0x6176, 0xa28e, 0xd45f, 0x1, 0x1);
        gbc.writeMem(0x2e7c, { 0xdc, 0x15, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x2ad7);
        EXPECT(gbc.pc(), 0x2e7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0072
        gbc.setState(0x764d, 0xe100, 0x81b0, 0x4128, 0x843f, 0x7c67, 0x0, 0x0);
        gbc.writeMem(0x764d, { 0xdc, 0x7, 0x60 });
        gbc.writeMem(0xe0fe, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xe0fe);
        EXPECT(gbc.pc(), 0x6007);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0fe), 0x50);
        EXPECT(gbc.readMem(0xe0ff), 0x76);
        // DC 0074
        gbc.setState(0x9c09, 0x352, 0xfc0, 0xe944, 0xa09c, 0xdd75, 0x1, 0x1);
        gbc.writeMem(0x9c09, { 0xdc, 0xf4, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x352);
        EXPECT(gbc.pc(), 0x9c0c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c09), 0xdc);
        EXPECT(gbc.readMem(0x9c0a), 0xf4);
        EXPECT(gbc.readMem(0x9c0b), 0x1d);
        // DC 0077
        gbc.setState(0xaaa8, 0xfcd9, 0x5d20, 0x447d, 0x1c56, 0x8c33, 0x0, 0x1);
        gbc.writeMem(0xaaa8, { 0xdc, 0xa8, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfcd9);
        EXPECT(gbc.pc(), 0xaaab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaaa8), 0xdc);
        EXPECT(gbc.readMem(0xaaa9), 0xa8);
        EXPECT(gbc.readMem(0xaaaa), 0xd7);
        // DC 007A
        gbc.setState(0x6e13, 0xf932, 0x4c00, 0xf64e, 0xd54b, 0x209f, 0x1, 0x1);
        gbc.writeMem(0x6e13, { 0xdc, 0xd6, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xf932);
        EXPECT(gbc.pc(), 0x6e16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 007B
        gbc.setState(0x8b2d, 0xa765, 0x65c0, 0xb53f, 0x4342, 0xad7a, 0x1, 0x1);
        gbc.writeMem(0x8b2d, { 0xdc, 0xf0, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xa765);
        EXPECT(gbc.pc(), 0x8b30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b2d), 0xdc);
        EXPECT(gbc.readMem(0x8b2e), 0xf0);
        EXPECT(gbc.readMem(0x8b2f), 0xc6);
        // DC 007D
        gbc.setState(0x7793, 0x938, 0xc400, 0xde68, 0x7807, 0xaa10, 0x1, 0x1);
        gbc.writeMem(0x7793, { 0xdc, 0xbd, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x938);
        EXPECT(gbc.pc(), 0x7796);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 007F
        gbc.setState(0x46c2, 0xebeb, 0xdc80, 0x2efd, 0xa117, 0x244c, 0x1, 0x0);
        gbc.writeMem(0x46c2, { 0xdc, 0xda, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xebeb);
        EXPECT(gbc.pc(), 0x46c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0080
        gbc.setState(0xd808, 0xc729, 0x5b50, 0x1bb2, 0xbf08, 0xfaa7, 0x0, 0x1);
        gbc.writeMem(0xc727, { 0x0, 0x0 });
        gbc.writeMem(0xd808, { 0xdc, 0xd7, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xc727);
        EXPECT(gbc.pc(), 0x56d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc727), 0xb);
        EXPECT(gbc.readMem(0xc728), 0xd8);
        EXPECT(gbc.readMem(0xd808), 0xdc);
        EXPECT(gbc.readMem(0xd809), 0xd7);
        EXPECT(gbc.readMem(0xd80a), 0x56);
        // DC 0081
        gbc.setState(0x15a8, 0x1904, 0xcce0, 0x25c2, 0x2b54, 0x7e8a, 0x0, 0x0);
        gbc.writeMem(0x15a8, { 0xdc, 0xe6, 0xa4 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x1904);
        EXPECT(gbc.pc(), 0x15ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0082
        gbc.setState(0xd25c, 0xad7d, 0xeef0, 0x7cc0, 0xcdc4, 0x3d5f, 0x0, 0x1);
        gbc.writeMem(0xad7b, { 0x0, 0x0 });
        gbc.writeMem(0xd25c, { 0xdc, 0xce, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xad7b);
        EXPECT(gbc.pc(), 0x5bce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xad7b), 0x5f);
        EXPECT(gbc.readMem(0xad7c), 0xd2);
        EXPECT(gbc.readMem(0xd25c), 0xdc);
        EXPECT(gbc.readMem(0xd25d), 0xce);
        EXPECT(gbc.readMem(0xd25e), 0x5b);
        // DC 0083
        gbc.setState(0x48bb, 0xea19, 0xb890, 0xeadb, 0x9d67, 0xa44d, 0x1, 0x0);
        gbc.writeMem(0x48bb, { 0xdc, 0x2b, 0x16 });
        gbc.writeMem(0xea17, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xea17);
        EXPECT(gbc.pc(), 0x162b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea17), 0xbe);
        EXPECT(gbc.readMem(0xea18), 0x48);
        // DC 0085
        gbc.setState(0xe6d6, 0x41a9, 0x6620, 0x753d, 0xbc39, 0xee4e, 0x0, 0x0);
        gbc.writeMem(0xe6d6, { 0xdc, 0x63, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x41a9);
        EXPECT(gbc.pc(), 0xe6d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6d6), 0xdc);
        EXPECT(gbc.readMem(0xe6d7), 0x63);
        EXPECT(gbc.readMem(0xe6d8), 0x86);
        // DC 0086
        gbc.setState(0x5cd5, 0x8695, 0x68c0, 0x7d59, 0xb963, 0x56cf, 0x1, 0x1);
        gbc.writeMem(0x5cd5, { 0xdc, 0xa4, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x8695);
        EXPECT(gbc.pc(), 0x5cd8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0088
        gbc.setState(0x97db, 0xaa1d, 0xdbe0, 0xd0c8, 0x4455, 0xdcb7, 0x1, 0x1);
        gbc.writeMem(0x97db, { 0xdc, 0xb7, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xaa1d);
        EXPECT(gbc.pc(), 0x97de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x97db), 0xdc);
        EXPECT(gbc.readMem(0x97dc), 0xb7);
        EXPECT(gbc.readMem(0x97dd), 0x30);
        // DC 0089
        gbc.setState(0x12ef, 0x46c5, 0x6b20, 0xb725, 0x4208, 0x475d, 0x0, 0x1);
        gbc.writeMem(0x12ef, { 0xdc, 0x5f, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x46c5);
        EXPECT(gbc.pc(), 0x12f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 008B
        gbc.setState(0xc7eb, 0xeed2, 0x9b0, 0xc7d4, 0x80df, 0xab8f, 0x0, 0x1);
        gbc.writeMem(0xc7eb, { 0xdc, 0x57, 0x9d });
        gbc.writeMem(0xeed0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xeed0);
        EXPECT(gbc.pc(), 0x9d57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc7eb), 0xdc);
        EXPECT(gbc.readMem(0xc7ec), 0x57);
        EXPECT(gbc.readMem(0xc7ed), 0x9d);
        EXPECT(gbc.readMem(0xeed0), 0xee);
        EXPECT(gbc.readMem(0xeed1), 0xc7);
        // DC 008C
        gbc.setState(0x963e, 0xf968, 0xaa20, 0x41c8, 0xdacd, 0x29b, 0x0, 0x0);
        gbc.writeMem(0x963e, { 0xdc, 0x9a, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf968);
        EXPECT(gbc.pc(), 0x9641);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x963e), 0xdc);
        EXPECT(gbc.readMem(0x963f), 0x9a);
        EXPECT(gbc.readMem(0x9640), 0x62);
        // DC 008D
        gbc.setState(0x9baf, 0xdfc8, 0xfa50, 0x9376, 0xb6f6, 0xd214, 0x1, 0x0);
        gbc.writeMem(0x9baf, { 0xdc, 0x4e, 0x54 });
        gbc.writeMem(0xdfc6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xdfc6);
        EXPECT(gbc.pc(), 0x544e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9baf), 0xdc);
        EXPECT(gbc.readMem(0x9bb0), 0x4e);
        EXPECT(gbc.readMem(0x9bb1), 0x54);
        EXPECT(gbc.readMem(0xdfc6), 0xb2);
        EXPECT(gbc.readMem(0xdfc7), 0x9b);
        // DC 008F
        gbc.setState(0xb927, 0xa951, 0x7320, 0xc07c, 0x458d, 0x4bdb, 0x0, 0x1);
        gbc.writeMem(0xb927, { 0xdc, 0x56, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xa951);
        EXPECT(gbc.pc(), 0xb92a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb927), 0xdc);
        EXPECT(gbc.readMem(0xb928), 0x56);
        EXPECT(gbc.readMem(0xb929), 0x8e);
        // DC 0090
        gbc.setState(0x7498, 0xa32e, 0x4f0, 0xfcc5, 0xc135, 0x82a4, 0x1, 0x1);
        gbc.writeMem(0x7498, { 0xdc, 0xc1, 0xc6 });
        gbc.writeMem(0xa32c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0xa32c);
        EXPECT(gbc.pc(), 0xc6c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa32c), 0x9b);
        EXPECT(gbc.readMem(0xa32d), 0x74);
        // DC 0091
        gbc.setState(0x8158, 0xd0f, 0x8e20, 0xe51c, 0xf792, 0xb569, 0x0, 0x1);
        gbc.writeMem(0x8158, { 0xdc, 0x96, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xd0f);
        EXPECT(gbc.pc(), 0x815b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8158), 0xdc);
        EXPECT(gbc.readMem(0x8159), 0x96);
        EXPECT(gbc.readMem(0x815a), 0x4d);
        // DC 0092
        gbc.setState(0x494, 0x777, 0xc620, 0x7935, 0x5d8e, 0xd5a4, 0x1, 0x1);
        gbc.writeMem(0x494, { 0xdc, 0xfa, 0x81 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x777);
        EXPECT(gbc.pc(), 0x497);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0094
        gbc.setState(0xe548, 0xe12d, 0xd50, 0x37a4, 0x116e, 0xae77, 0x1, 0x1);
        gbc.writeMem(0xe12b, { 0x0, 0x0 });
        gbc.writeMem(0xe548, { 0xdc, 0xe1, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xe12b);
        EXPECT(gbc.pc(), 0x39e1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe12b), 0x4b);
        EXPECT(gbc.readMem(0xe12c), 0xe5);
        EXPECT(gbc.readMem(0xe548), 0xdc);
        EXPECT(gbc.readMem(0xe549), 0xe1);
        EXPECT(gbc.readMem(0xe54a), 0x39);
        // DC 0095
        gbc.setState(0x77e2, 0xe3d3, 0xd980, 0x2a5d, 0x162, 0x9ccb, 0x0, 0x1);
        gbc.writeMem(0x77e2, { 0xdc, 0xf2, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xe3d3);
        EXPECT(gbc.pc(), 0x77e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0096
        gbc.setState(0x806c, 0xd55d, 0xcb90, 0xfa14, 0x6e58, 0x7228, 0x1, 0x0);
        gbc.writeMem(0x806c, { 0xdc, 0xb0, 0xe0 });
        gbc.writeMem(0xd55b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xd55b);
        EXPECT(gbc.pc(), 0xe0b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x806c), 0xdc);
        EXPECT(gbc.readMem(0x806d), 0xb0);
        EXPECT(gbc.readMem(0x806e), 0xe0);
        EXPECT(gbc.readMem(0xd55b), 0x6f);
        EXPECT(gbc.readMem(0xd55c), 0x80);
        // DC 0099
        gbc.setState(0x2c3a, 0xa6dd, 0xc690, 0x242, 0x5f7, 0xe296, 0x0, 0x1);
        gbc.writeMem(0x2c3a, { 0xdc, 0xca, 0xad });
        gbc.writeMem(0xa6db, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xa6db);
        EXPECT(gbc.pc(), 0xadca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6db), 0x3d);
        EXPECT(gbc.readMem(0xa6dc), 0x2c);
        // DC 009A
        gbc.setState(0xe705, 0xd9dc, 0x6370, 0x9b4c, 0xd92b, 0x6383, 0x1, 0x1);
        gbc.writeMem(0xd9da, { 0x0, 0x0 });
        gbc.writeMem(0xe705, { 0xdc, 0xd7, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xd9da);
        EXPECT(gbc.pc(), 0x77d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9da), 0x8);
        EXPECT(gbc.readMem(0xd9db), 0xe7);
        EXPECT(gbc.readMem(0xe705), 0xdc);
        EXPECT(gbc.readMem(0xe706), 0xd7);
        EXPECT(gbc.readMem(0xe707), 0x77);
        // DC 009B
        gbc.setState(0x3066, 0xd1a7, 0xfac0, 0x48db, 0xa8ac, 0x6133, 0x1, 0x1);
        gbc.writeMem(0x3066, { 0xdc, 0x93, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd1a7);
        EXPECT(gbc.pc(), 0x3069);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 009E
        gbc.setState(0x29d9, 0xc6d5, 0x52c0, 0x9a84, 0x3c68, 0xffa0, 0x1, 0x1);
        gbc.writeMem(0x29d9, { 0xdc, 0xe3, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xc6d5);
        EXPECT(gbc.pc(), 0x29dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 00A0
        gbc.setState(0xc1a2, 0x55af, 0xd900, 0x563c, 0x1067, 0x418f, 0x1, 0x0);
        gbc.writeMem(0xc1a2, { 0xdc, 0x6d, 0x94 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x55af);
        EXPECT(gbc.pc(), 0xc1a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1a2), 0xdc);
        EXPECT(gbc.readMem(0xc1a3), 0x6d);
        EXPECT(gbc.readMem(0xc1a4), 0x94);
        // DC 00A1
        gbc.setState(0x9161, 0xefd9, 0xe50, 0x55e4, 0x9fcd, 0x409c, 0x1, 0x0);
        gbc.writeMem(0x9161, { 0xdc, 0x8c, 0x2a });
        gbc.writeMem(0xefd7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xefd7);
        EXPECT(gbc.pc(), 0x2a8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9161), 0xdc);
        EXPECT(gbc.readMem(0x9162), 0x8c);
        EXPECT(gbc.readMem(0x9163), 0x2a);
        EXPECT(gbc.readMem(0xefd7), 0x64);
        EXPECT(gbc.readMem(0xefd8), 0x91);
        // DC 00A6
        gbc.setState(0x489a, 0xd334, 0xbb70, 0xb5da, 0x398e, 0xcd4a, 0x1, 0x0);
        gbc.writeMem(0x489a, { 0xdc, 0x93, 0xc1 });
        gbc.writeMem(0xd332, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xd332);
        EXPECT(gbc.pc(), 0xc193);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd332), 0x9d);
        EXPECT(gbc.readMem(0xd333), 0x48);
        // DC 00A7
        gbc.setState(0x3144, 0xa392, 0xbf60, 0x523d, 0x6fd, 0x5dab, 0x1, 0x0);
        gbc.writeMem(0x3144, { 0xdc, 0x63, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xa392);
        EXPECT(gbc.pc(), 0x3147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00A9
        gbc.setState(0x4139, 0xba45, 0xf480, 0x1153, 0x771b, 0x9942, 0x1, 0x0);
        gbc.writeMem(0x4139, { 0xdc, 0x42, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xba45);
        EXPECT(gbc.pc(), 0x413c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 00AA
        gbc.setState(0x4606, 0xf235, 0x4af0, 0x2e8f, 0x23d1, 0xf853, 0x1, 0x0);
        gbc.writeMem(0x4606, { 0xdc, 0x6e, 0x35 });
        gbc.writeMem(0xf233, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xf233);
        EXPECT(gbc.pc(), 0x356e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf233), 0x9);
        EXPECT(gbc.readMem(0xf234), 0x46);
        // DC 00AB
        gbc.setState(0x2445, 0x81c6, 0xa230, 0x85f0, 0xa099, 0x945d, 0x0, 0x0);
        gbc.writeMem(0x2445, { 0xdc, 0x5, 0xf5 });
        gbc.writeMem(0x81c4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x81c4);
        EXPECT(gbc.pc(), 0xf505);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c4), 0x48);
        EXPECT(gbc.readMem(0x81c5), 0x24);
        // DC 00AD
        gbc.setState(0x6332, 0xff93, 0x2af0, 0x1aaa, 0x6b1d, 0x6aa7, 0x0, 0x1);
        gbc.writeMem(0x6332, { 0xdc, 0x93, 0xf });
        gbc.writeMem(0xff91, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xff91);
        EXPECT(gbc.pc(), 0xf93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xff91), 0x35);
        EXPECT(gbc.readMem(0xff92), 0x63);
        // DC 00AF
        gbc.setState(0x3a12, 0xdfe3, 0xd860, 0xac1a, 0xabd0, 0xb39f, 0x1, 0x1);
        gbc.writeMem(0x3a12, { 0xdc, 0x7a, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xdfe3);
        EXPECT(gbc.pc(), 0x3a15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00B0
        gbc.setState(0x2277, 0x98eb, 0x3210, 0xf9ec, 0x60b7, 0xa3a2, 0x1, 0x1);
        gbc.writeMem(0x2277, { 0xdc, 0x31, 0xba });
        gbc.writeMem(0x98e9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x98e9);
        EXPECT(gbc.pc(), 0xba31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98e9), 0x7a);
        EXPECT(gbc.readMem(0x98ea), 0x22);
        // DC 00B1
        gbc.setState(0x8783, 0x5202, 0xfce0, 0x5a6c, 0x77da, 0xda25, 0x0, 0x0);
        gbc.writeMem(0x8783, { 0xdc, 0x5, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5202);
        EXPECT(gbc.pc(), 0x8786);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8783), 0xdc);
        EXPECT(gbc.readMem(0x8784), 0x5);
        EXPECT(gbc.readMem(0x8785), 0x42);
        // DC 00B2
        gbc.setState(0x24f0, 0x121d, 0x73a0, 0xf943, 0x720c, 0xe9b2, 0x0, 0x0);
        gbc.writeMem(0x24f0, { 0xdc, 0x2f, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x121d);
        EXPECT(gbc.pc(), 0x24f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00B3
        gbc.setState(0x899f, 0xab1f, 0xa300, 0x4fd6, 0xec9d, 0xdbe7, 0x1, 0x1);
        gbc.writeMem(0x899f, { 0xdc, 0x88, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xab1f);
        EXPECT(gbc.pc(), 0x89a2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x899f), 0xdc);
        EXPECT(gbc.readMem(0x89a0), 0x88);
        EXPECT(gbc.readMem(0x89a1), 0xa0);
        // DC 00B5
        gbc.setState(0xea94, 0xbdfb, 0xf7e0, 0x5ae7, 0x2201, 0x821a, 0x1, 0x0);
        gbc.writeMem(0xea94, { 0xdc, 0x52, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xbdfb);
        EXPECT(gbc.pc(), 0xea97);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea94), 0xdc);
        EXPECT(gbc.readMem(0xea95), 0x52);
        EXPECT(gbc.readMem(0xea96), 0x2e);
        // DC 00B7
        gbc.setState(0x1b8c, 0x83ca, 0x1920, 0xd5f4, 0x6f60, 0xf623, 0x0, 0x1);
        gbc.writeMem(0x1b8c, { 0xdc, 0x9b, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x83ca);
        EXPECT(gbc.pc(), 0x1b8f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00B8
        gbc.setState(0x75bd, 0xa035, 0x16e0, 0x12db, 0x108f, 0xf186, 0x1, 0x1);
        gbc.writeMem(0x75bd, { 0xdc, 0x1d, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xa035);
        EXPECT(gbc.pc(), 0x75c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00BA
        gbc.setState(0x615d, 0x16af, 0xab80, 0xf0e6, 0xd0c0, 0x9dbd, 0x0, 0x1);
        gbc.writeMem(0x615d, { 0xdc, 0xca, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x16af);
        EXPECT(gbc.pc(), 0x6160);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 00BC
        gbc.setState(0x5323, 0xf5d7, 0x4150, 0xa093, 0x3a4, 0x29b1, 0x0, 0x1);
        gbc.writeMem(0x5323, { 0xdc, 0x2d, 0x85 });
        gbc.writeMem(0xf5d5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf5d5);
        EXPECT(gbc.pc(), 0x852d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf5d5), 0x26);
        EXPECT(gbc.readMem(0xf5d6), 0x53);
        // DC 00BD
        gbc.setState(0x9877, 0xde55, 0x25d0, 0x7bb3, 0xab49, 0x9ee2, 0x1, 0x0);
        gbc.writeMem(0x9877, { 0xdc, 0xd3, 0x2e });
        gbc.writeMem(0xde53, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xde53);
        EXPECT(gbc.pc(), 0x2ed3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9877), 0xdc);
        EXPECT(gbc.readMem(0x9878), 0xd3);
        EXPECT(gbc.readMem(0x9879), 0x2e);
        EXPECT(gbc.readMem(0xde53), 0x7a);
        EXPECT(gbc.readMem(0xde54), 0x98);
        // DC 00C0
        gbc.setState(0x6c2c, 0xcea0, 0x8960, 0x386, 0x8bd0, 0x3794, 0x1, 0x1);
        gbc.writeMem(0x6c2c, { 0xdc, 0x44, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xcea0);
        EXPECT(gbc.pc(), 0x6c2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00C1
        gbc.setState(0x83fb, 0xe7c9, 0x60e0, 0x5fa2, 0x4837, 0xc70c, 0x1, 0x0);
        gbc.writeMem(0x83fb, { 0xdc, 0x67, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xe7c9);
        EXPECT(gbc.pc(), 0x83fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x83fb), 0xdc);
        EXPECT(gbc.readMem(0x83fc), 0x67);
        EXPECT(gbc.readMem(0x83fd), 0x93);
        // DC 00C2
        gbc.setState(0xb5dc, 0x9710, 0xa290, 0x2945, 0x97c8, 0x7348, 0x0, 0x1);
        gbc.writeMem(0x970e, { 0x0, 0x0 });
        gbc.writeMem(0xb5dc, { 0xdc, 0x8c, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x970e);
        EXPECT(gbc.pc(), 0xeb8c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x970e), 0xdf);
        EXPECT(gbc.readMem(0x970f), 0xb5);
        EXPECT(gbc.readMem(0xb5dc), 0xdc);
        EXPECT(gbc.readMem(0xb5dd), 0x8c);
        EXPECT(gbc.readMem(0xb5de), 0xeb);
        // DC 00C3
        gbc.setState(0xdbf5, 0x28b8, 0xcb80, 0x1e4a, 0xf8f3, 0x7e42, 0x0, 0x1);
        gbc.writeMem(0xdbf5, { 0xdc, 0x58, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x28b8);
        EXPECT(gbc.pc(), 0xdbf8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdbf5), 0xdc);
        EXPECT(gbc.readMem(0xdbf6), 0x58);
        EXPECT(gbc.readMem(0xdbf7), 0xce);
        // DC 00C4
        gbc.setState(0xb3bd, 0x2333, 0xbca0, 0x81fc, 0x8711, 0x3823, 0x1, 0x0);
        gbc.writeMem(0xb3bd, { 0xdc, 0xf0, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x2333);
        EXPECT(gbc.pc(), 0xb3c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3bd), 0xdc);
        EXPECT(gbc.readMem(0xb3be), 0xf0);
        EXPECT(gbc.readMem(0xb3bf), 0x4f);
        // DC 00C5
        gbc.setState(0x8532, 0xc557, 0x9320, 0xa1e1, 0x1459, 0xf49d, 0x0, 0x0);
        gbc.writeMem(0x8532, { 0xdc, 0x23, 0x38 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xc557);
        EXPECT(gbc.pc(), 0x8535);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8532), 0xdc);
        EXPECT(gbc.readMem(0x8533), 0x23);
        EXPECT(gbc.readMem(0x8534), 0x38);
        // DC 00C6
        gbc.setState(0xa921, 0x9677, 0xfa0, 0x6450, 0xf72b, 0x6b8c, 0x0, 0x0);
        gbc.writeMem(0xa921, { 0xdc, 0x3b, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x9677);
        EXPECT(gbc.pc(), 0xa924);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa921), 0xdc);
        EXPECT(gbc.readMem(0xa922), 0x3b);
        EXPECT(gbc.readMem(0xa923), 0xd3);
        // DC 00C7
        gbc.setState(0xec97, 0x2827, 0xbc0, 0x1b93, 0xd65, 0x7fbc, 0x1, 0x0);
        gbc.writeMem(0xec97, { 0xdc, 0xa8, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x2827);
        EXPECT(gbc.pc(), 0xec9a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec97), 0xdc);
        EXPECT(gbc.readMem(0xec98), 0xa8);
        EXPECT(gbc.readMem(0xec99), 0xf9);
        // DC 00C8
        gbc.setState(0x565a, 0x3299, 0xb0e0, 0xa05b, 0x6628, 0xd1f6, 0x0, 0x1);
        gbc.writeMem(0x565a, { 0xdc, 0xf0, 0x39 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3299);
        EXPECT(gbc.pc(), 0x565d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00C9
        gbc.setState(0xb2af, 0xc757, 0xd110, 0xea11, 0x3e79, 0x162d, 0x0, 0x0);
        gbc.writeMem(0xb2af, { 0xdc, 0x22, 0xc7 });
        gbc.writeMem(0xc755, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xc755);
        EXPECT(gbc.pc(), 0xc722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2af), 0xdc);
        EXPECT(gbc.readMem(0xb2b0), 0x22);
        EXPECT(gbc.readMem(0xb2b1), 0xc7);
        EXPECT(gbc.readMem(0xc755), 0xb2);
        EXPECT(gbc.readMem(0xc756), 0xb2);
        // DC 00CA
        gbc.setState(0x8291, 0xa99d, 0x6ae0, 0xb462, 0xcaeb, 0x7993, 0x0, 0x0);
        gbc.writeMem(0x8291, { 0xdc, 0x5c, 0xe7 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xa99d);
        EXPECT(gbc.pc(), 0x8294);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8291), 0xdc);
        EXPECT(gbc.readMem(0x8292), 0x5c);
        EXPECT(gbc.readMem(0x8293), 0xe7);
        // DC 00CD
        gbc.setState(0x92f, 0xa0ec, 0x37a0, 0x35e5, 0x281f, 0x71d6, 0x1, 0x0);
        gbc.writeMem(0x92f, { 0xdc, 0x54, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xa0ec);
        EXPECT(gbc.pc(), 0x932);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00CF
        gbc.setState(0x60ac, 0xb384, 0x9550, 0xde51, 0x277e, 0xd693, 0x0, 0x0);
        gbc.writeMem(0x60ac, { 0xdc, 0x82, 0x96 });
        gbc.writeMem(0xb382, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xb382);
        EXPECT(gbc.pc(), 0x9682);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb382), 0xaf);
        EXPECT(gbc.readMem(0xb383), 0x60);
        // DC 00D1
        gbc.setState(0xcc24, 0xac59, 0xd0f0, 0x33c0, 0x53b4, 0x2086, 0x0, 0x0);
        gbc.writeMem(0xac57, { 0x0, 0x0 });
        gbc.writeMem(0xcc24, { 0xdc, 0xc7, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0xac57);
        EXPECT(gbc.pc(), 0x4cc7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac57), 0x27);
        EXPECT(gbc.readMem(0xac58), 0xcc);
        EXPECT(gbc.readMem(0xcc24), 0xdc);
        EXPECT(gbc.readMem(0xcc25), 0xc7);
        EXPECT(gbc.readMem(0xcc26), 0x4c);
        // DC 00D8
        gbc.setState(0x909a, 0x2ad2, 0x8ea0, 0x502c, 0xcd30, 0x50b1, 0x0, 0x0);
        gbc.writeMem(0x909a, { 0xdc, 0x29, 0xfb });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x2ad2);
        EXPECT(gbc.pc(), 0x909d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x909a), 0xdc);
        EXPECT(gbc.readMem(0x909b), 0x29);
        EXPECT(gbc.readMem(0x909c), 0xfb);
        // DC 00D9
        gbc.setState(0x38af, 0xa80f, 0x2020, 0x2fb7, 0x902, 0x621b, 0x0, 0x1);
        gbc.writeMem(0x38af, { 0xdc, 0x57, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xa80f);
        EXPECT(gbc.pc(), 0x38b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00DA
        gbc.setState(0x5383, 0x4c98, 0xf420, 0xd235, 0xba0f, 0x8474, 0x1, 0x0);
        gbc.writeMem(0x5383, { 0xdc, 0x87, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x4c98);
        EXPECT(gbc.pc(), 0x5386);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00DD
        gbc.setState(0xa9cf, 0xe91a, 0x9300, 0xb47e, 0xd8ad, 0xb74b, 0x1, 0x0);
        gbc.writeMem(0xa9cf, { 0xdc, 0x45, 0x36 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xe91a);
        EXPECT(gbc.pc(), 0xa9d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9cf), 0xdc);
        EXPECT(gbc.readMem(0xa9d0), 0x45);
        EXPECT(gbc.readMem(0xa9d1), 0x36);
        // DC 00DE
        gbc.setState(0x2068, 0xe184, 0x4730, 0xa0b1, 0x8dd2, 0x3878, 0x0, 0x1);
        gbc.writeMem(0x2068, { 0xdc, 0xec, 0x43 });
        gbc.writeMem(0xe182, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xe182);
        EXPECT(gbc.pc(), 0x43ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe182), 0x6b);
        EXPECT(gbc.readMem(0xe183), 0x20);
        // DC 00DF
        gbc.setState(0x746, 0x815c, 0xd30, 0xc5cb, 0xbe77, 0x98cf, 0x1, 0x1);
        gbc.writeMem(0x746, { 0xdc, 0x54, 0xba });
        gbc.writeMem(0x815a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x815a);
        EXPECT(gbc.pc(), 0xba54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x815a), 0x49);
        EXPECT(gbc.readMem(0x815b), 0x7);
        // DC 00E0
        gbc.setState(0x587f, 0x9433, 0xaa10, 0x6d63, 0xf1cb, 0xeb63, 0x1, 0x1);
        gbc.writeMem(0x587f, { 0xdc, 0xaf, 0xf4 });
        gbc.writeMem(0x9431, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x63);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9431);
        EXPECT(gbc.pc(), 0xf4af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9431), 0x82);
        EXPECT(gbc.readMem(0x9432), 0x58);
        // DC 00E2
        gbc.setState(0x167f, 0x1c2b, 0xbcc0, 0xd317, 0x2408, 0x8cb, 0x1, 0x1);
        gbc.writeMem(0x167f, { 0xdc, 0x93, 0x44 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0x1c2b);
        EXPECT(gbc.pc(), 0x1682);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 00E3
        gbc.setState(0x96a6, 0xdf8f, 0xae70, 0xb132, 0xd3f4, 0x436a, 0x1, 0x1);
        gbc.writeMem(0x96a6, { 0xdc, 0xc4, 0x91 });
        gbc.writeMem(0xdf8d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xdf8d);
        EXPECT(gbc.pc(), 0x91c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96a6), 0xdc);
        EXPECT(gbc.readMem(0x96a7), 0xc4);
        EXPECT(gbc.readMem(0x96a8), 0x91);
        EXPECT(gbc.readMem(0xdf8d), 0xa9);
        EXPECT(gbc.readMem(0xdf8e), 0x96);
        // DC 00E4
        gbc.setState(0xa48e, 0xc6c7, 0x6000, 0xd5b2, 0x648d, 0xb7a, 0x0, 0x1);
        gbc.writeMem(0xa48e, { 0xdc, 0x12, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc6c7);
        EXPECT(gbc.pc(), 0xa491);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa48e), 0xdc);
        EXPECT(gbc.readMem(0xa48f), 0x12);
        EXPECT(gbc.readMem(0xa490), 0xd2);
        // DC 00E5
        gbc.setState(0x4843, 0x3a31, 0x21e0, 0xe8f, 0x96b, 0x7e30, 0x1, 0x0);
        gbc.writeMem(0x4843, { 0xdc, 0x4, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x3a31);
        EXPECT(gbc.pc(), 0x4846);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00E6
        gbc.setState(0x662a, 0x63b5, 0x9260, 0xd8fc, 0xdcc1, 0xf58e, 0x1, 0x0);
        gbc.writeMem(0x662a, { 0xdc, 0x75, 0x1b });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x63b5);
        EXPECT(gbc.pc(), 0x662d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00E7
        gbc.setState(0x67d0, 0xd914, 0x4f60, 0x7e60, 0xfbb4, 0xc68e, 0x0, 0x1);
        gbc.writeMem(0x67d0, { 0xdc, 0xba, 0xf4 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd914);
        EXPECT(gbc.pc(), 0x67d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00E8
        gbc.setState(0x4eec, 0xb249, 0x9280, 0xff10, 0x5e1b, 0x9ec5, 0x0, 0x0);
        gbc.writeMem(0x4eec, { 0xdc, 0xa4, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xb249);
        EXPECT(gbc.pc(), 0x4eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 00E9
        gbc.setState(0x10f2, 0xe8e0, 0xd9d0, 0xcf27, 0x8935, 0x27f9, 0x0, 0x0);
        gbc.writeMem(0x10f2, { 0xdc, 0xfc, 0x71 });
        gbc.writeMem(0xe8de, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xe8de);
        EXPECT(gbc.pc(), 0x71fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8de), 0xf5);
        EXPECT(gbc.readMem(0xe8df), 0x10);
        // DC 00EA
        gbc.setState(0x3d0f, 0xb848, 0xe930, 0x5b5f, 0x1601, 0x3148, 0x0, 0x0);
        gbc.writeMem(0x3d0f, { 0xdc, 0x37, 0xd });
        gbc.writeMem(0xb846, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xb846);
        EXPECT(gbc.pc(), 0xd37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb846), 0x12);
        EXPECT(gbc.readMem(0xb847), 0x3d);
        // DC 00EC
        gbc.setState(0x7c22, 0x7e63, 0xf4a0, 0xe23e, 0x55b1, 0xd82a, 0x1, 0x0);
        gbc.writeMem(0x7c22, { 0xdc, 0xe9, 0x63 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x7e63);
        EXPECT(gbc.pc(), 0x7c25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00ED
        gbc.setState(0x1136, 0x1852, 0xdb20, 0xb4c3, 0x9610, 0xa2d8, 0x1, 0x0);
        gbc.writeMem(0x1136, { 0xdc, 0xd1, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x1852);
        EXPECT(gbc.pc(), 0x1139);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00EE
        gbc.setState(0xaf5f, 0xe3c2, 0xf4d0, 0xa75e, 0xef72, 0x7d0a, 0x0, 0x1);
        gbc.writeMem(0xaf5f, { 0xdc, 0x1b, 0xcd });
        gbc.writeMem(0xe3c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xe3c0);
        EXPECT(gbc.pc(), 0xcd1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf5f), 0xdc);
        EXPECT(gbc.readMem(0xaf60), 0x1b);
        EXPECT(gbc.readMem(0xaf61), 0xcd);
        EXPECT(gbc.readMem(0xe3c0), 0x62);
        EXPECT(gbc.readMem(0xe3c1), 0xaf);
        // DC 00EF
        gbc.setState(0xb21b, 0xc99a, 0x6f00, 0x7128, 0x9d5c, 0x689c, 0x0, 0x0);
        gbc.writeMem(0xb21b, { 0xdc, 0x43, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0xc99a);
        EXPECT(gbc.pc(), 0xb21e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb21b), 0xdc);
        EXPECT(gbc.readMem(0xb21c), 0x43);
        EXPECT(gbc.readMem(0xb21d), 0xb8);
        // DC 00F0
        gbc.setState(0x224a, 0x1da6, 0x2c40, 0xc7f4, 0x5902, 0x2adb, 0x1, 0x1);
        gbc.writeMem(0x224a, { 0xdc, 0x42, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1da6);
        EXPECT(gbc.pc(), 0x224d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 00F1
        gbc.setState(0x718, 0x31da, 0x4e40, 0x7479, 0xca30, 0xf8e5, 0x1, 0x0);
        gbc.writeMem(0x718, { 0xdc, 0x13, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x31da);
        EXPECT(gbc.pc(), 0x71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 00F2
        gbc.setState(0xde54, 0xf0cc, 0x9500, 0x90ca, 0x3609, 0x9668, 0x0, 0x1);
        gbc.writeMem(0xde54, { 0xdc, 0xd, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xf0cc);
        EXPECT(gbc.pc(), 0xde57);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde54), 0xdc);
        EXPECT(gbc.readMem(0xde55), 0xd);
        EXPECT(gbc.readMem(0xde56), 0x25);
        // DC 00F3
        gbc.setState(0x9e6f, 0x8ee9, 0x3c80, 0x2228, 0xa341, 0x6f8e, 0x0, 0x1);
        gbc.writeMem(0x9e6f, { 0xdc, 0xc3, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8ee9);
        EXPECT(gbc.pc(), 0x9e72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e6f), 0xdc);
        EXPECT(gbc.readMem(0x9e70), 0xc3);
        EXPECT(gbc.readMem(0x9e71), 0x8f);
        // DC 00F4
        gbc.setState(0x45fb, 0x4a60, 0x29e0, 0x43bc, 0x42d6, 0xf442, 0x0, 0x0);
        gbc.writeMem(0x45fb, { 0xdc, 0xd3, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x4a60);
        EXPECT(gbc.pc(), 0x45fe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00F5
        gbc.setState(0x1b37, 0xc4b2, 0xf390, 0x77e, 0x71dc, 0x6b97, 0x0, 0x0);
        gbc.writeMem(0x1b37, { 0xdc, 0xf2, 0xd1 });
        gbc.writeMem(0xc4b0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xc4b0);
        EXPECT(gbc.pc(), 0xd1f2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4b0), 0x3a);
        EXPECT(gbc.readMem(0xc4b1), 0x1b);
        // DC 00F6
        gbc.setState(0xd263, 0x7253, 0x1140, 0xb9e4, 0xebf3, 0x5903, 0x0, 0x1);
        gbc.writeMem(0xd263, { 0xdc, 0xe, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7253);
        EXPECT(gbc.pc(), 0xd266);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd263), 0xdc);
        EXPECT(gbc.readMem(0xd264), 0xe);
        EXPECT(gbc.readMem(0xd265), 0x90);
        // DC 00F7
        gbc.setState(0xe2cb, 0x876f, 0x6710, 0xd4e0, 0x2506, 0xaaf9, 0x0, 0x1);
        gbc.writeMem(0x876d, { 0x0, 0x0 });
        gbc.writeMem(0xe2cb, { 0xdc, 0xe0, 0x75 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x876d);
        EXPECT(gbc.pc(), 0x75e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x876d), 0xce);
        EXPECT(gbc.readMem(0x876e), 0xe2);
        EXPECT(gbc.readMem(0xe2cb), 0xdc);
        EXPECT(gbc.readMem(0xe2cc), 0xe0);
        EXPECT(gbc.readMem(0xe2cd), 0x75);
        // DC 00F8
        gbc.setState(0xa8e2, 0x8c72, 0x5500, 0x7c35, 0xdec, 0xcb39, 0x1, 0x1);
        gbc.writeMem(0xa8e2, { 0xdc, 0x12, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x8c72);
        EXPECT(gbc.pc(), 0xa8e5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa8e2), 0xdc);
        EXPECT(gbc.readMem(0xa8e3), 0x12);
        EXPECT(gbc.readMem(0xa8e4), 0xc8);
        // DC 00FB
        gbc.setState(0x19b8, 0x98bf, 0x7fe0, 0x96ff, 0xf8d1, 0x7bbe, 0x1, 0x1);
        gbc.writeMem(0x19b8, { 0xdc, 0xd, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x98bf);
        EXPECT(gbc.pc(), 0x19bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 00FC
        gbc.setState(0x13b2, 0xd833, 0xeb10, 0xb477, 0xde64, 0x1d3e, 0x1, 0x0);
        gbc.writeMem(0x13b2, { 0xdc, 0xc7, 0xe6 });
        gbc.writeMem(0xd831, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd831);
        EXPECT(gbc.pc(), 0xe6c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd831), 0xb5);
        EXPECT(gbc.readMem(0xd832), 0x13);
        // DC 00FF
        gbc.setState(0xc2d1, 0xf539, 0xbdc0, 0x63b6, 0x3ef3, 0x2077, 0x0, 0x0);
        gbc.writeMem(0xc2d1, { 0xdc, 0x99, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xf539);
        EXPECT(gbc.pc(), 0xc2d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2d1), 0xdc);
        EXPECT(gbc.readMem(0xc2d2), 0x99);
        EXPECT(gbc.readMem(0xc2d3), 0x91);
        // DC 0100
        gbc.setState(0xacf3, 0x1af2, 0xe100, 0x7943, 0x1a0d, 0x3486, 0x0, 0x1);
        gbc.writeMem(0xacf3, { 0xdc, 0x82, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x1af2);
        EXPECT(gbc.pc(), 0xacf6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacf3), 0xdc);
        EXPECT(gbc.readMem(0xacf4), 0x82);
        EXPECT(gbc.readMem(0xacf5), 0x95);
        // DC 0102
        gbc.setState(0xb694, 0xa964, 0xf4c0, 0xeb19, 0x7e6, 0xc8c4, 0x0, 0x1);
        gbc.writeMem(0xb694, { 0xdc, 0xb6, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xe6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xa964);
        EXPECT(gbc.pc(), 0xb697);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb694), 0xdc);
        EXPECT(gbc.readMem(0xb695), 0xb6);
        EXPECT(gbc.readMem(0xb696), 0x14);
        // DC 0103
        gbc.setState(0x29b7, 0x86d6, 0xd290, 0x7248, 0xb2b5, 0x1c3b, 0x0, 0x0);
        gbc.writeMem(0x29b7, { 0xdc, 0x70, 0x5c });
        gbc.writeMem(0x86d4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x86d4);
        EXPECT(gbc.pc(), 0x5c70);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86d4), 0xba);
        EXPECT(gbc.readMem(0x86d5), 0x29);
        // DC 0104
        gbc.setState(0xcbe8, 0xdcb1, 0x1870, 0x3c90, 0x969e, 0x41d3, 0x0, 0x1);
        gbc.writeMem(0xcbe8, { 0xdc, 0x8e, 0x9e });
        gbc.writeMem(0xdcaf, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xdcaf);
        EXPECT(gbc.pc(), 0x9e8e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcbe8), 0xdc);
        EXPECT(gbc.readMem(0xcbe9), 0x8e);
        EXPECT(gbc.readMem(0xcbea), 0x9e);
        EXPECT(gbc.readMem(0xdcaf), 0xeb);
        EXPECT(gbc.readMem(0xdcb0), 0xcb);
        // DC 0105
        gbc.setState(0x2ce5, 0x3a31, 0xdec0, 0xe082, 0x176, 0x4212, 0x1, 0x1);
        gbc.writeMem(0x2ce5, { 0xdc, 0xf6, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x3a31);
        EXPECT(gbc.pc(), 0x2ce8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0107
        gbc.setState(0xa47c, 0xe774, 0xf050, 0x9b20, 0xbf5a, 0x1f36, 0x1, 0x0);
        gbc.writeMem(0xa47c, { 0xdc, 0x86, 0x2d });
        gbc.writeMem(0xe772, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xe772);
        EXPECT(gbc.pc(), 0x2d86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa47c), 0xdc);
        EXPECT(gbc.readMem(0xa47d), 0x86);
        EXPECT(gbc.readMem(0xa47e), 0x2d);
        EXPECT(gbc.readMem(0xe772), 0x7f);
        EXPECT(gbc.readMem(0xe773), 0xa4);
        // DC 0108
        gbc.setState(0x7b5c, 0xb3a9, 0x3b10, 0x745f, 0xe5d7, 0xb4ff, 0x1, 0x0);
        gbc.writeMem(0x7b5c, { 0xdc, 0xbf, 0xe1 });
        gbc.writeMem(0xb3a7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb3a7);
        EXPECT(gbc.pc(), 0xe1bf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3a7), 0x5f);
        EXPECT(gbc.readMem(0xb3a8), 0x7b);
        // DC 010B
        gbc.setState(0x6f43, 0x817f, 0x5300, 0x6630, 0x120b, 0x3c0, 0x1, 0x0);
        gbc.writeMem(0x6f43, { 0xdc, 0x85, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x817f);
        EXPECT(gbc.pc(), 0x6f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 010D
        gbc.setState(0xa56a, 0xf8d8, 0xfc0, 0xcac1, 0x5dcb, 0x6593, 0x0, 0x1);
        gbc.writeMem(0xa56a, { 0xdc, 0x39, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0xf8d8);
        EXPECT(gbc.pc(), 0xa56d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa56a), 0xdc);
        EXPECT(gbc.readMem(0xa56b), 0x39);
        EXPECT(gbc.readMem(0xa56c), 0xb1);
        // DC 010E
        gbc.setState(0x3c86, 0x8b37, 0x3bc0, 0xbd91, 0x6f1b, 0x46c, 0x1, 0x1);
        gbc.writeMem(0x3c86, { 0xdc, 0x62, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x8b37);
        EXPECT(gbc.pc(), 0x3c89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 010F
        gbc.setState(0xcb58, 0xae08, 0xab0, 0x337c, 0x7e2d, 0x5e42, 0x0, 0x0);
        gbc.writeMem(0xae06, { 0x0, 0x0 });
        gbc.writeMem(0xcb58, { 0xdc, 0xc, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xae06);
        EXPECT(gbc.pc(), 0x210c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae06), 0x5b);
        EXPECT(gbc.readMem(0xae07), 0xcb);
        EXPECT(gbc.readMem(0xcb58), 0xdc);
        EXPECT(gbc.readMem(0xcb59), 0xc);
        EXPECT(gbc.readMem(0xcb5a), 0x21);
        // DC 0110
        gbc.setState(0x2c89, 0x432b, 0xb460, 0xc0e0, 0xd67b, 0xadd4, 0x1, 0x0);
        gbc.writeMem(0x2c89, { 0xdc, 0x2e, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x432b);
        EXPECT(gbc.pc(), 0x2c8c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0112
        gbc.setState(0x5a62, 0xb0f3, 0x9550, 0xae8c, 0xe5eb, 0x9716, 0x1, 0x0);
        gbc.writeMem(0x5a62, { 0xdc, 0xbb, 0x5 });
        gbc.writeMem(0xb0f1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xb0f1);
        EXPECT(gbc.pc(), 0x5bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb0f1), 0x65);
        EXPECT(gbc.readMem(0xb0f2), 0x5a);
        // DC 0114
        gbc.setState(0xbf95, 0x22de, 0x6a0, 0xd3f2, 0x29b4, 0xb490, 0x1, 0x1);
        gbc.writeMem(0xbf95, { 0xdc, 0xa2, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x22de);
        EXPECT(gbc.pc(), 0xbf98);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf95), 0xdc);
        EXPECT(gbc.readMem(0xbf96), 0xa2);
        EXPECT(gbc.readMem(0xbf97), 0xd1);
        // DC 0115
        gbc.setState(0xba1b, 0xd0bb, 0x29e0, 0xc739, 0x98d, 0x36e7, 0x1, 0x0);
        gbc.writeMem(0xba1b, { 0xdc, 0x88, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd0bb);
        EXPECT(gbc.pc(), 0xba1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba1b), 0xdc);
        EXPECT(gbc.readMem(0xba1c), 0x88);
        EXPECT(gbc.readMem(0xba1d), 0x93);
        // DC 0116
        gbc.setState(0x99b1, 0x8432, 0xe90, 0x2361, 0x81d4, 0x903e, 0x0, 0x0);
        gbc.writeMem(0x8430, { 0x0, 0x0 });
        gbc.writeMem(0x99b1, { 0xdc, 0xec, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8430);
        EXPECT(gbc.pc(), 0x93ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8430), 0xb4);
        EXPECT(gbc.readMem(0x8431), 0x99);
        EXPECT(gbc.readMem(0x99b1), 0xdc);
        EXPECT(gbc.readMem(0x99b2), 0xec);
        EXPECT(gbc.readMem(0x99b3), 0x93);
        // DC 0117
        gbc.setState(0xca5b, 0xe73c, 0xf2d0, 0x9956, 0x5ff6, 0x3b09, 0x0, 0x1);
        gbc.writeMem(0xca5b, { 0xdc, 0x87, 0xd1 });
        gbc.writeMem(0xe73a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0xe73a);
        EXPECT(gbc.pc(), 0xd187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca5b), 0xdc);
        EXPECT(gbc.readMem(0xca5c), 0x87);
        EXPECT(gbc.readMem(0xca5d), 0xd1);
        EXPECT(gbc.readMem(0xe73a), 0x5e);
        EXPECT(gbc.readMem(0xe73b), 0xca);
        // DC 0118
        gbc.setState(0xbff3, 0x974f, 0x17e0, 0xd522, 0x80e, 0x850d, 0x0, 0x0);
        gbc.writeMem(0xbff3, { 0xdc, 0x52, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x974f);
        EXPECT(gbc.pc(), 0xbff6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbff3), 0xdc);
        EXPECT(gbc.readMem(0xbff4), 0x52);
        EXPECT(gbc.readMem(0xbff5), 0x33);
        // DC 0119
        gbc.setState(0x4d7c, 0x3e9, 0x2ce0, 0x664, 0x8edb, 0xc68f, 0x1, 0x1);
        gbc.writeMem(0x4d7c, { 0xdc, 0xca, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x3e9);
        EXPECT(gbc.pc(), 0x4d7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 011B
        gbc.setState(0x7e99, 0x8792, 0x7f50, 0xbfd0, 0xe109, 0x5363, 0x1, 0x0);
        gbc.writeMem(0x7e99, { 0xdc, 0xc3, 0x28 });
        gbc.writeMem(0x8790, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x8790);
        EXPECT(gbc.pc(), 0x28c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8790), 0x9c);
        EXPECT(gbc.readMem(0x8791), 0x7e);
        // DC 011E
        gbc.setState(0x9a77, 0x11d8, 0xd2c0, 0xd07f, 0xc626, 0x98d7, 0x0, 0x0);
        gbc.writeMem(0x9a77, { 0xdc, 0xd2, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x11d8);
        EXPECT(gbc.pc(), 0x9a7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a77), 0xdc);
        EXPECT(gbc.readMem(0x9a78), 0xd2);
        EXPECT(gbc.readMem(0x9a79), 0x5);
        // DC 011F
        gbc.setState(0x3a50, 0xc22d, 0x4c10, 0xce18, 0xafca, 0x2433, 0x1, 0x0);
        gbc.writeMem(0x3a50, { 0xdc, 0x1f, 0x17 });
        gbc.writeMem(0xc22b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc22b);
        EXPECT(gbc.pc(), 0x171f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc22b), 0x53);
        EXPECT(gbc.readMem(0xc22c), 0x3a);
        // DC 0120
        gbc.setState(0x5399, 0xeecf, 0x1d20, 0xd373, 0xd47, 0x50e, 0x0, 0x0);
        gbc.writeMem(0x5399, { 0xdc, 0x6d, 0x6a });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xeecf);
        EXPECT(gbc.pc(), 0x539c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0121
        gbc.setState(0x5784, 0xe032, 0xb5a0, 0xe6e2, 0x5a3d, 0x435d, 0x1, 0x1);
        gbc.writeMem(0x5784, { 0xdc, 0x5c, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe032);
        EXPECT(gbc.pc(), 0x5787);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0123
        gbc.setState(0x8165, 0xce1e, 0x8cc0, 0x543d, 0x6bcc, 0xd5ff, 0x0, 0x1);
        gbc.writeMem(0x8165, { 0xdc, 0xb5, 0x76 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xce1e);
        EXPECT(gbc.pc(), 0x8168);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8165), 0xdc);
        EXPECT(gbc.readMem(0x8166), 0xb5);
        EXPECT(gbc.readMem(0x8167), 0x76);
        // DC 0124
        gbc.setState(0x5ce9, 0x8d89, 0x7ca0, 0x5422, 0x7a9e, 0xa400, 0x0, 0x1);
        gbc.writeMem(0x5ce9, { 0xdc, 0xda, 0x7b });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x8d89);
        EXPECT(gbc.pc(), 0x5cec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0125
        gbc.setState(0x5007, 0x3caf, 0xb400, 0x1b06, 0x610f, 0x637d, 0x0, 0x0);
        gbc.writeMem(0x5007, { 0xdc, 0xaf, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3caf);
        EXPECT(gbc.pc(), 0x500a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0126
        gbc.setState(0xc7ba, 0xbe17, 0x260, 0xf16, 0xd4ea, 0xe6cd, 0x1, 0x1);
        gbc.writeMem(0xc7ba, { 0xdc, 0xf9, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xbe17);
        EXPECT(gbc.pc(), 0xc7bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7ba), 0xdc);
        EXPECT(gbc.readMem(0xc7bb), 0xf9);
        EXPECT(gbc.readMem(0xc7bc), 0x6);
        // DC 0127
        gbc.setState(0xc14c, 0x569e, 0x3960, 0xc29b, 0xc111, 0x36d3, 0x0, 0x0);
        gbc.writeMem(0xc14c, { 0xdc, 0x9f, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x569e);
        EXPECT(gbc.pc(), 0xc14f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc14c), 0xdc);
        EXPECT(gbc.readMem(0xc14d), 0x9f);
        EXPECT(gbc.readMem(0xc14e), 0xae);
        // DC 0128
        gbc.setState(0x5414, 0x8b24, 0x2ce0, 0xf4a7, 0xc382, 0x97d1, 0x0, 0x0);
        gbc.writeMem(0x5414, { 0xdc, 0x4f, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x8b24);
        EXPECT(gbc.pc(), 0x5417);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 012A
        gbc.setState(0xa81d, 0xe5ce, 0xb570, 0x1904, 0xb8cc, 0xd575, 0x0, 0x1);
        gbc.writeMem(0xa81d, { 0xdc, 0x73, 0xd5 });
        gbc.writeMem(0xe5cc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe5cc);
        EXPECT(gbc.pc(), 0xd573);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa81d), 0xdc);
        EXPECT(gbc.readMem(0xa81e), 0x73);
        EXPECT(gbc.readMem(0xa81f), 0xd5);
        EXPECT(gbc.readMem(0xe5cc), 0x20);
        EXPECT(gbc.readMem(0xe5cd), 0xa8);
        // DC 012C
        gbc.setState(0x8267, 0x5551, 0xdf80, 0x7181, 0xeb10, 0xd5c4, 0x0, 0x0);
        gbc.writeMem(0x8267, { 0xdc, 0x65, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5551);
        EXPECT(gbc.pc(), 0x826a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8267), 0xdc);
        EXPECT(gbc.readMem(0x8268), 0x65);
        EXPECT(gbc.readMem(0x8269), 0x5);
        // DC 012D
        gbc.setState(0x7121, 0xefef, 0xb130, 0x86f2, 0xfa83, 0x4a10, 0x1, 0x1);
        gbc.writeMem(0x7121, { 0xdc, 0xa3, 0x7 });
        gbc.writeMem(0xefed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xefed);
        EXPECT(gbc.pc(), 0x7a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefed), 0x24);
        EXPECT(gbc.readMem(0xefee), 0x71);
        // DC 012E
        gbc.setState(0xe60b, 0xce70, 0x5ba0, 0xcd7a, 0x8695, 0x18d, 0x1, 0x1);
        gbc.writeMem(0xe60b, { 0xdc, 0x48, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xce70);
        EXPECT(gbc.pc(), 0xe60e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe60b), 0xdc);
        EXPECT(gbc.readMem(0xe60c), 0x48);
        EXPECT(gbc.readMem(0xe60d), 0x5e);
        // DC 012F
        gbc.setState(0x3bd1, 0x9fc3, 0x4b00, 0x4736, 0x8dd1, 0x469e, 0x0, 0x1);
        gbc.writeMem(0x3bd1, { 0xdc, 0xe, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x9fc3);
        EXPECT(gbc.pc(), 0x3bd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0130
        gbc.setState(0x4b09, 0xaaf2, 0xe8d0, 0x425c, 0xfa38, 0xbd2e, 0x0, 0x1);
        gbc.writeMem(0x4b09, { 0xdc, 0xc5, 0x9f });
        gbc.writeMem(0xaaf0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xaaf0);
        EXPECT(gbc.pc(), 0x9fc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaf0), 0xc);
        EXPECT(gbc.readMem(0xaaf1), 0x4b);
        // DC 0131
        gbc.setState(0x5204, 0xe455, 0x5d50, 0x50ef, 0xa763, 0xc45f, 0x1, 0x1);
        gbc.writeMem(0x5204, { 0xdc, 0xaf, 0x38 });
        gbc.writeMem(0xe453, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe453);
        EXPECT(gbc.pc(), 0x38af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe453), 0x7);
        EXPECT(gbc.readMem(0xe454), 0x52);
        // DC 0132
        gbc.setState(0xbbfe, 0x8042, 0x4c0, 0x6801, 0xbd4d, 0x9107, 0x0, 0x1);
        gbc.writeMem(0xbbfe, { 0xdc, 0x1c, 0xc6 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x8042);
        EXPECT(gbc.pc(), 0xbc01);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbfe), 0xdc);
        EXPECT(gbc.readMem(0xbbff), 0x1c);
        EXPECT(gbc.readMem(0xbc00), 0xc6);
        // DC 0133
        gbc.setState(0x87e0, 0xb359, 0x3180, 0xa750, 0x961b, 0xc32e, 0x0, 0x1);
        gbc.writeMem(0x87e0, { 0xdc, 0x4f, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xb359);
        EXPECT(gbc.pc(), 0x87e3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x87e0), 0xdc);
        EXPECT(gbc.readMem(0x87e1), 0x4f);
        EXPECT(gbc.readMem(0x87e2), 0xda);
        // DC 0134
        gbc.setState(0x10d5, 0x6497, 0x2ea0, 0x6c4c, 0xeb4b, 0x443c, 0x0, 0x0);
        gbc.writeMem(0x10d5, { 0xdc, 0x48, 0x3f });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x6497);
        EXPECT(gbc.pc(), 0x10d8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0135
        gbc.setState(0x8f43, 0xc103, 0xbb00, 0x6be8, 0xb7fd, 0x314, 0x1, 0x0);
        gbc.writeMem(0x8f43, { 0xdc, 0x74, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0xc103);
        EXPECT(gbc.pc(), 0x8f46);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f43), 0xdc);
        EXPECT(gbc.readMem(0x8f44), 0x74);
        EXPECT(gbc.readMem(0x8f45), 0x34);
        // DC 0136
        gbc.setState(0xc4c6, 0x871e, 0x5930, 0xabba, 0xf4c0, 0x93f5, 0x1, 0x0);
        gbc.writeMem(0x871c, { 0x0, 0x0 });
        gbc.writeMem(0xc4c6, { 0xdc, 0xea, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x871c);
        EXPECT(gbc.pc(), 0x87ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x871c), 0xc9);
        EXPECT(gbc.readMem(0x871d), 0xc4);
        EXPECT(gbc.readMem(0xc4c6), 0xdc);
        EXPECT(gbc.readMem(0xc4c7), 0xea);
        EXPECT(gbc.readMem(0xc4c8), 0x87);
        // DC 0138
        gbc.setState(0xa577, 0x9787, 0x8170, 0x6b9a, 0xb2ae, 0x36db, 0x0, 0x1);
        gbc.writeMem(0x9785, { 0x0, 0x0 });
        gbc.writeMem(0xa577, { 0xdc, 0xad, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x9785);
        EXPECT(gbc.pc(), 0x79ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9785), 0x7a);
        EXPECT(gbc.readMem(0x9786), 0xa5);
        EXPECT(gbc.readMem(0xa577), 0xdc);
        EXPECT(gbc.readMem(0xa578), 0xad);
        EXPECT(gbc.readMem(0xa579), 0x79);
        // DC 0139
        gbc.setState(0x486a, 0xc98e, 0xadb0, 0x4df0, 0xae01, 0x6679, 0x1, 0x0);
        gbc.writeMem(0x486a, { 0xdc, 0x50, 0xf0 });
        gbc.writeMem(0xc98c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc98c);
        EXPECT(gbc.pc(), 0xf050);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc98c), 0x6d);
        EXPECT(gbc.readMem(0xc98d), 0x48);
        // DC 013A
        gbc.setState(0x7ffd, 0xe39, 0xb1c0, 0x6e80, 0x245c, 0x5a71, 0x0, 0x0);
        gbc.writeMem(0x7ffd, { 0xdc, 0x33, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xe39);
        EXPECT(gbc.pc(), 0x8000);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 013D
        gbc.setState(0x14bd, 0xd8d7, 0x14a0, 0xb052, 0x3257, 0xd012, 0x0, 0x0);
        gbc.writeMem(0x14bd, { 0xdc, 0x8d, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xd8d7);
        EXPECT(gbc.pc(), 0x14c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 013F
        gbc.setState(0x4deb, 0xeb6d, 0x3d0, 0xd8b3, 0xa16d, 0xe1a6, 0x0, 0x1);
        gbc.writeMem(0x4deb, { 0xdc, 0x71, 0x6a });
        gbc.writeMem(0xeb6b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xeb6b);
        EXPECT(gbc.pc(), 0x6a71);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb6b), 0xee);
        EXPECT(gbc.readMem(0xeb6c), 0x4d);
        // DC 0141
        gbc.setState(0x874c, 0x3880, 0xaee0, 0x3236, 0x7024, 0x1711, 0x1, 0x0);
        gbc.writeMem(0x874c, { 0xdc, 0x7, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x3880);
        EXPECT(gbc.pc(), 0x874f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x874c), 0xdc);
        EXPECT(gbc.readMem(0x874d), 0x7);
        EXPECT(gbc.readMem(0x874e), 0x9b);
        // DC 0143
        gbc.setState(0x7680, 0xa6b0, 0x8b40, 0x626, 0x28f, 0x9538, 0x1, 0x1);
        gbc.writeMem(0x7680, { 0xdc, 0xb0, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xa6b0);
        EXPECT(gbc.pc(), 0x7683);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0144
        gbc.setState(0x77d0, 0xd37e, 0xe5c0, 0xda6d, 0xd37b, 0xfe58, 0x0, 0x0);
        gbc.writeMem(0x77d0, { 0xdc, 0xca, 0x3a });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0xd37e);
        EXPECT(gbc.pc(), 0x77d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0145
        gbc.setState(0xa83, 0xa37e, 0xf9e0, 0xa373, 0x3ff2, 0x3ecf, 0x0, 0x1);
        gbc.writeMem(0xa83, { 0xdc, 0xd4, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa37e);
        EXPECT(gbc.pc(), 0xa86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0146
        gbc.setState(0x8789, 0xe736, 0x4710, 0x6fcc, 0x4818, 0x6975, 0x0, 0x0);
        gbc.writeMem(0x8789, { 0xdc, 0xcd, 0x40 });
        gbc.writeMem(0xe734, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xe734);
        EXPECT(gbc.pc(), 0x40cd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8789), 0xdc);
        EXPECT(gbc.readMem(0x878a), 0xcd);
        EXPECT(gbc.readMem(0x878b), 0x40);
        EXPECT(gbc.readMem(0xe734), 0x8c);
        EXPECT(gbc.readMem(0xe735), 0x87);
        // DC 0149
        gbc.setState(0x9168, 0xa181, 0x910, 0xc3ca, 0x1703, 0x952a, 0x0, 0x1);
        gbc.writeMem(0x9168, { 0xdc, 0xef, 0x3e });
        gbc.writeMem(0xa17f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa17f);
        EXPECT(gbc.pc(), 0x3eef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9168), 0xdc);
        EXPECT(gbc.readMem(0x9169), 0xef);
        EXPECT(gbc.readMem(0x916a), 0x3e);
        EXPECT(gbc.readMem(0xa17f), 0x6b);
        EXPECT(gbc.readMem(0xa180), 0x91);
        // DC 014A
        gbc.setState(0x2782, 0x96da, 0x5450, 0xba86, 0x1bd8, 0x9dba, 0x0, 0x0);
        gbc.writeMem(0x2782, { 0xdc, 0x5e, 0x5b });
        gbc.writeMem(0x96d8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x96d8);
        EXPECT(gbc.pc(), 0x5b5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96d8), 0x85);
        EXPECT(gbc.readMem(0x96d9), 0x27);
        // DC 014B
        gbc.setState(0x4f47, 0xbd7d, 0x6fc0, 0x7fd2, 0x92aa, 0x5b8e, 0x1, 0x1);
        gbc.writeMem(0x4f47, { 0xdc, 0xb, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xbd7d);
        EXPECT(gbc.pc(), 0x4f4a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 014C
        gbc.setState(0xd383, 0xa5a5, 0xe500, 0xf794, 0xfa51, 0xc671, 0x0, 0x0);
        gbc.writeMem(0xd383, { 0xdc, 0x29, 0xb3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xa5a5);
        EXPECT(gbc.pc(), 0xd386);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd383), 0xdc);
        EXPECT(gbc.readMem(0xd384), 0x29);
        EXPECT(gbc.readMem(0xd385), 0xb3);
        // DC 014E
        gbc.setState(0x7aea, 0xe520, 0x2900, 0x8b06, 0x9090, 0xbe2f, 0x0, 0x0);
        gbc.writeMem(0x7aea, { 0xdc, 0x6e, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xe520);
        EXPECT(gbc.pc(), 0x7aed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 014F
        gbc.setState(0x4d4e, 0xea67, 0xd380, 0x6a33, 0x54d5, 0x79b0, 0x0, 0x1);
        gbc.writeMem(0x4d4e, { 0xdc, 0x8e, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xea67);
        EXPECT(gbc.pc(), 0x4d51);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0150
        gbc.setState(0xa061, 0xbec8, 0x6500, 0x6ede, 0x60bb, 0x839f, 0x1, 0x0);
        gbc.writeMem(0xa061, { 0xdc, 0xba, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xbec8);
        EXPECT(gbc.pc(), 0xa064);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa061), 0xdc);
        EXPECT(gbc.readMem(0xa062), 0xba);
        EXPECT(gbc.readMem(0xa063), 0xeb);
        // DC 0153
        gbc.setState(0xc377, 0xe68c, 0xcca0, 0x3586, 0x3775, 0x629, 0x1, 0x1);
        gbc.writeMem(0xc377, { 0xdc, 0x1a, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xe68c);
        EXPECT(gbc.pc(), 0xc37a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc377), 0xdc);
        EXPECT(gbc.readMem(0xc378), 0x1a);
        EXPECT(gbc.readMem(0xc379), 0x2e);
        // DC 0154
        gbc.setState(0x6252, 0xb22c, 0xd60, 0xe358, 0xf7, 0x6c99, 0x1, 0x0);
        gbc.writeMem(0x6252, { 0xdc, 0xf4, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xb22c);
        EXPECT(gbc.pc(), 0x6255);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0156
        gbc.setState(0x1534, 0x89b8, 0x9150, 0xd0e8, 0xe3bf, 0x3244, 0x1, 0x0);
        gbc.writeMem(0x1534, { 0xdc, 0xb4, 0x6a });
        gbc.writeMem(0x89b6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x89b6);
        EXPECT(gbc.pc(), 0x6ab4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89b6), 0x37);
        EXPECT(gbc.readMem(0x89b7), 0x15);
        // DC 0158
        gbc.setState(0xc394, 0xfbce, 0x31e0, 0xd095, 0x70fe, 0x8b95, 0x0, 0x0);
        gbc.writeMem(0xc394, { 0xdc, 0xaa, 0xce });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xfbce);
        EXPECT(gbc.pc(), 0xc397);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc394), 0xdc);
        EXPECT(gbc.readMem(0xc395), 0xaa);
        EXPECT(gbc.readMem(0xc396), 0xce);
        // DC 015A
        gbc.setState(0x3099, 0xd401, 0x1160, 0x1cdf, 0x6a68, 0xcf0, 0x1, 0x1);
        gbc.writeMem(0x3099, { 0xdc, 0xd5, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xd401);
        EXPECT(gbc.pc(), 0x309c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 015B
        gbc.setState(0x1373, 0xd2b1, 0x7620, 0x682b, 0xef07, 0x3811, 0x0, 0x1);
        gbc.writeMem(0x1373, { 0xdc, 0xfd, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xd2b1);
        EXPECT(gbc.pc(), 0x1376);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 015C
        gbc.setState(0x90c6, 0x3009, 0x1160, 0x8c0d, 0xc19b, 0x357d, 0x0, 0x1);
        gbc.writeMem(0x90c6, { 0xdc, 0xaf, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x3009);
        EXPECT(gbc.pc(), 0x90c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x90c6), 0xdc);
        EXPECT(gbc.readMem(0x90c7), 0xaf);
        EXPECT(gbc.readMem(0x90c8), 0x23);
        // DC 015D
        gbc.setState(0xea8e, 0x4965, 0x83e0, 0xcc0d, 0xd4ad, 0xc7ab, 0x1, 0x0);
        gbc.writeMem(0xea8e, { 0xdc, 0x41, 0x53 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0xd4);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4965);
        EXPECT(gbc.pc(), 0xea91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea8e), 0xdc);
        EXPECT(gbc.readMem(0xea8f), 0x41);
        EXPECT(gbc.readMem(0xea90), 0x53);
        // DC 015E
        gbc.setState(0xbce, 0xd577, 0x5760, 0xb4b7, 0x3f69, 0xf71a, 0x1, 0x0);
        gbc.writeMem(0xbce, { 0xdc, 0x96, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xd577);
        EXPECT(gbc.pc(), 0xbd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 015F
        gbc.setState(0x6d37, 0xbebe, 0x7200, 0x6c7b, 0xeec0, 0xf715, 0x0, 0x1);
        gbc.writeMem(0x6d37, { 0xdc, 0xf4, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xbebe);
        EXPECT(gbc.pc(), 0x6d3a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0160
        gbc.setState(0x8ee, 0x3230, 0x3440, 0xe425, 0xfd4c, 0x6442, 0x1, 0x1);
        gbc.writeMem(0x8ee, { 0xdc, 0x4c, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x3230);
        EXPECT(gbc.pc(), 0x8f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0162
        gbc.setState(0x3d85, 0xe161, 0x2790, 0x6613, 0x868, 0x832c, 0x0, 0x0);
        gbc.writeMem(0x3d85, { 0xdc, 0x67, 0x45 });
        gbc.writeMem(0xe15f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xe15f);
        EXPECT(gbc.pc(), 0x4567);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe15f), 0x88);
        EXPECT(gbc.readMem(0xe160), 0x3d);
        // DC 0165
        gbc.setState(0x8f7a, 0xad40, 0xd540, 0x353e, 0xd1fb, 0xb8d9, 0x0, 0x1);
        gbc.writeMem(0x8f7a, { 0xdc, 0x65, 0x6 });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xad40);
        EXPECT(gbc.pc(), 0x8f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f7a), 0xdc);
        EXPECT(gbc.readMem(0x8f7b), 0x65);
        EXPECT(gbc.readMem(0x8f7c), 0x6);
        // DC 0167
        gbc.setState(0x819d, 0x12f8, 0xcea0, 0xe290, 0xcef4, 0x1d4f, 0x0, 0x0);
        gbc.writeMem(0x819d, { 0xdc, 0x37, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x12f8);
        EXPECT(gbc.pc(), 0x81a0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x819d), 0xdc);
        EXPECT(gbc.readMem(0x819e), 0x37);
        EXPECT(gbc.readMem(0x819f), 0x32);
        // DC 0168
        gbc.setState(0x4a1b, 0x54c8, 0xca80, 0xd22f, 0x7d91, 0x9bf8, 0x1, 0x0);
        gbc.writeMem(0x4a1b, { 0xdc, 0x50, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x54c8);
        EXPECT(gbc.pc(), 0x4a1e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0169
        gbc.setState(0x6eca, 0x8ed9, 0xb490, 0xe5cb, 0xd7a7, 0xee24, 0x0, 0x0);
        gbc.writeMem(0x6eca, { 0xdc, 0x41, 0x39 });
        gbc.writeMem(0x8ed7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x8ed7);
        EXPECT(gbc.pc(), 0x3941);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ed7), 0xcd);
        EXPECT(gbc.readMem(0x8ed8), 0x6e);
        // DC 016A
        gbc.setState(0x9b6c, 0xa262, 0xd9b0, 0x4c25, 0xdd70, 0x53b3, 0x0, 0x0);
        gbc.writeMem(0x9b6c, { 0xdc, 0x22, 0xc2 });
        gbc.writeMem(0xa260, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xa260);
        EXPECT(gbc.pc(), 0xc222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b6c), 0xdc);
        EXPECT(gbc.readMem(0x9b6d), 0x22);
        EXPECT(gbc.readMem(0x9b6e), 0xc2);
        EXPECT(gbc.readMem(0xa260), 0x6f);
        EXPECT(gbc.readMem(0xa261), 0x9b);
        // DC 016C
        gbc.setState(0xec97, 0xaa08, 0xfc60, 0x251a, 0x6618, 0xc92e, 0x0, 0x0);
        gbc.writeMem(0xec97, { 0xdc, 0xa8, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xaa08);
        EXPECT(gbc.pc(), 0xec9a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec97), 0xdc);
        EXPECT(gbc.readMem(0xec98), 0xa8);
        EXPECT(gbc.readMem(0xec99), 0xf9);
        // DC 016D
        gbc.setState(0xdf64, 0x17de, 0x1dc0, 0xb33, 0xfba, 0xcbe8, 0x0, 0x0);
        gbc.writeMem(0xdf64, { 0xdc, 0xc5, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x17de);
        EXPECT(gbc.pc(), 0xdf67);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdf64), 0xdc);
        EXPECT(gbc.readMem(0xdf65), 0xc5);
        EXPECT(gbc.readMem(0xdf66), 0x5e);
        // DC 016E
        gbc.setState(0xa2fa, 0xee88, 0x6c60, 0xdead, 0x217, 0x2313, 0x1, 0x0);
        gbc.writeMem(0xa2fa, { 0xdc, 0x99, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xee88);
        EXPECT(gbc.pc(), 0xa2fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa2fa), 0xdc);
        EXPECT(gbc.readMem(0xa2fb), 0x99);
        EXPECT(gbc.readMem(0xa2fc), 0xea);
        // DC 016F
        gbc.setState(0xaa0b, 0xd92b, 0x5620, 0x560a, 0x3473, 0xa2c7, 0x1, 0x1);
        gbc.writeMem(0xaa0b, { 0xdc, 0xc8, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xd92b);
        EXPECT(gbc.pc(), 0xaa0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa0b), 0xdc);
        EXPECT(gbc.readMem(0xaa0c), 0xc8);
        EXPECT(gbc.readMem(0xaa0d), 0xda);
        // DC 0170
        gbc.setState(0x74da, 0x6a64, 0x3d80, 0xfa83, 0x48ab, 0x7463, 0x1, 0x1);
        gbc.writeMem(0x74da, { 0xdc, 0x3f, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x6a64);
        EXPECT(gbc.pc(), 0x74dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0171
        gbc.setState(0xfb1, 0x80cf, 0x6b50, 0xddf9, 0x6c52, 0x15e4, 0x1, 0x0);
        gbc.writeMem(0xfb1, { 0xdc, 0x52, 0xff });
        gbc.writeMem(0x80cd, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x80cd);
        EXPECT(gbc.pc(), 0xff52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80cd), 0xb4);
        EXPECT(gbc.readMem(0x80ce), 0xf);
        // DC 0172
        gbc.setState(0x50b2, 0xccd9, 0x7980, 0x10cc, 0xb964, 0xf963, 0x0, 0x1);
        gbc.writeMem(0x50b2, { 0xdc, 0x7f, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0xccd9);
        EXPECT(gbc.pc(), 0x50b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0173
        gbc.setState(0x8c4, 0x41ad, 0xdf40, 0x3ca9, 0xa52d, 0xc64, 0x0, 0x1);
        gbc.writeMem(0x8c4, { 0xdc, 0xb3, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x41ad);
        EXPECT(gbc.pc(), 0x8c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0175
        gbc.setState(0x56de, 0xbd32, 0xff70, 0x98fa, 0x6129, 0x56a2, 0x1, 0x1);
        gbc.writeMem(0x56de, { 0xdc, 0xca, 0xc1 });
        gbc.writeMem(0xbd30, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xbd30);
        EXPECT(gbc.pc(), 0xc1ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd30), 0xe1);
        EXPECT(gbc.readMem(0xbd31), 0x56);
        // DC 0176
        gbc.setState(0x7568, 0xb65f, 0x7000, 0x5019, 0x77f4, 0xc638, 0x1, 0x1);
        gbc.writeMem(0x7568, { 0xdc, 0x7, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xb65f);
        EXPECT(gbc.pc(), 0x756b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0178
        gbc.setState(0xe75b, 0x6094, 0xc5a0, 0xe89c, 0x7a9a, 0x3feb, 0x0, 0x0);
        gbc.writeMem(0xe75b, { 0xdc, 0x12, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6094);
        EXPECT(gbc.pc(), 0xe75e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe75b), 0xdc);
        EXPECT(gbc.readMem(0xe75c), 0x12);
        EXPECT(gbc.readMem(0xe75d), 0x9);
        // DC 0179
        gbc.setState(0xb37e, 0x94dd, 0x530, 0xf4b3, 0x2e4e, 0x8c89, 0x1, 0x0);
        gbc.writeMem(0x94db, { 0x0, 0x0 });
        gbc.writeMem(0xb37e, { 0xdc, 0xb5, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x94db);
        EXPECT(gbc.pc(), 0xf1b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x94db), 0x81);
        EXPECT(gbc.readMem(0x94dc), 0xb3);
        EXPECT(gbc.readMem(0xb37e), 0xdc);
        EXPECT(gbc.readMem(0xb37f), 0xb5);
        EXPECT(gbc.readMem(0xb380), 0xf1);
        // DC 017A
        gbc.setState(0x611a, 0xb4f8, 0xa420, 0x49e1, 0x6718, 0x451f, 0x0, 0x0);
        gbc.writeMem(0x611a, { 0xdc, 0x21, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0xb4f8);
        EXPECT(gbc.pc(), 0x611d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 017B
        gbc.setState(0x7612, 0xb1d5, 0x26a0, 0x5a41, 0x4685, 0xbcb3, 0x0, 0x1);
        gbc.writeMem(0x7612, { 0xdc, 0xd7, 0x4f });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xb1d5);
        EXPECT(gbc.pc(), 0x7615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 017C
        gbc.setState(0x129a, 0xda24, 0x1c20, 0x2769, 0x5b4a, 0x2792, 0x1, 0x0);
        gbc.writeMem(0x129a, { 0xdc, 0xec, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xda24);
        EXPECT(gbc.pc(), 0x129d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 017D
        gbc.setState(0x1bb0, 0x86e8, 0xecc0, 0x1ab5, 0xb526, 0x202f, 0x0, 0x1);
        gbc.writeMem(0x1bb0, { 0xdc, 0x36, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x86e8);
        EXPECT(gbc.pc(), 0x1bb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 017E
        gbc.setState(0x11e5, 0xaede, 0xc650, 0x6eb1, 0xd5bb, 0xbc19, 0x1, 0x0);
        gbc.writeMem(0x11e5, { 0xdc, 0x3b, 0x62 });
        gbc.writeMem(0xaedc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xaedc);
        EXPECT(gbc.pc(), 0x623b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaedc), 0xe8);
        EXPECT(gbc.readMem(0xaedd), 0x11);
        // DC 017F
        gbc.setState(0x774b, 0xebb4, 0xd140, 0xdeff, 0x6aff, 0x607e, 0x1, 0x0);
        gbc.writeMem(0x774b, { 0xdc, 0x50, 0x98 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xebb4);
        EXPECT(gbc.pc(), 0x774e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0180
        gbc.setState(0x306d, 0xf4c2, 0xfd0, 0x9c26, 0xe856, 0xdefb, 0x0, 0x0);
        gbc.writeMem(0x306d, { 0xdc, 0x91, 0x16 });
        gbc.writeMem(0xf4c0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xf4c0);
        EXPECT(gbc.pc(), 0x1691);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf4c0), 0x70);
        EXPECT(gbc.readMem(0xf4c1), 0x30);
        // DC 0182
        gbc.setState(0x60c6, 0x8198, 0x28d0, 0xce32, 0x5b29, 0x9fc9, 0x1, 0x1);
        gbc.writeMem(0x60c6, { 0xdc, 0x8e, 0xd6 });
        gbc.writeMem(0x8196, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x8196);
        EXPECT(gbc.pc(), 0xd68e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8196), 0xc9);
        EXPECT(gbc.readMem(0x8197), 0x60);
        // DC 0183
        gbc.setState(0x3feb, 0xd0e2, 0x9cd0, 0x7221, 0x6849, 0xceee, 0x1, 0x1);
        gbc.writeMem(0x3feb, { 0xdc, 0xe, 0x80 });
        gbc.writeMem(0xd0e0, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0xd0e0);
        EXPECT(gbc.pc(), 0x800e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd0e0), 0xee);
        EXPECT(gbc.readMem(0xd0e1), 0x3f);
        // DC 0184
        gbc.setState(0x6398, 0xad81, 0xd680, 0x5a68, 0x1b20, 0xdd2d, 0x1, 0x0);
        gbc.writeMem(0x6398, { 0xdc, 0xf2, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xad81);
        EXPECT(gbc.pc(), 0x639b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0187
        gbc.setState(0x7e11, 0xd76e, 0xac0, 0x31fb, 0x9366, 0x5d6f, 0x1, 0x0);
        gbc.writeMem(0x7e11, { 0xdc, 0x5d, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xd76e);
        EXPECT(gbc.pc(), 0x7e14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 018B
        gbc.setState(0x20ec, 0xa3ba, 0x75f0, 0xc3da, 0xdc28, 0x227e, 0x0, 0x1);
        gbc.writeMem(0x20ec, { 0xdc, 0x1f, 0x70 });
        gbc.writeMem(0xa3b8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xa3b8);
        EXPECT(gbc.pc(), 0x701f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3b8), 0xef);
        EXPECT(gbc.readMem(0xa3b9), 0x20);
        // DC 018C
        gbc.setState(0x5441, 0xab59, 0x71e0, 0x3ba7, 0x4d28, 0x468c, 0x1, 0x0);
        gbc.writeMem(0x5441, { 0xdc, 0xfb, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xab59);
        EXPECT(gbc.pc(), 0x5444);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 018D
        gbc.setState(0x3296, 0xd956, 0xa780, 0x6970, 0x9251, 0xaf59, 0x1, 0x0);
        gbc.writeMem(0x3296, { 0xdc, 0xc9, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xd956);
        EXPECT(gbc.pc(), 0x3299);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 018E
        gbc.setState(0x9086, 0x4cc7, 0xb7e0, 0x5c40, 0x7771, 0x61de, 0x1, 0x0);
        gbc.writeMem(0x9086, { 0xdc, 0x3f, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4cc7);
        EXPECT(gbc.pc(), 0x9089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9086), 0xdc);
        EXPECT(gbc.readMem(0x9087), 0x3f);
        EXPECT(gbc.readMem(0x9088), 0xdb);
        // DC 018F
        gbc.setState(0xda03, 0xc97a, 0x9970, 0xc7a8, 0x6837, 0xa00, 0x1, 0x0);
        gbc.writeMem(0xc978, { 0x0, 0x0 });
        gbc.writeMem(0xda03, { 0xdc, 0xe2, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xc978);
        EXPECT(gbc.pc(), 0x34e2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc978), 0x6);
        EXPECT(gbc.readMem(0xc979), 0xda);
        EXPECT(gbc.readMem(0xda03), 0xdc);
        EXPECT(gbc.readMem(0xda04), 0xe2);
        EXPECT(gbc.readMem(0xda05), 0x34);
        // DC 0190
        gbc.setState(0x7e06, 0xd314, 0x3ca0, 0xa820, 0x3ee1, 0xdd70, 0x0, 0x0);
        gbc.writeMem(0x7e06, { 0xdc, 0x44, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xd314);
        EXPECT(gbc.pc(), 0x7e09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0191
        gbc.setState(0xde5, 0xeb57, 0x2040, 0x2950, 0xb098, 0x8efb, 0x0, 0x1);
        gbc.writeMem(0xde5, { 0xdc, 0xda, 0x2f });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xeb57);
        EXPECT(gbc.pc(), 0xde8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0192
        gbc.setState(0x67d4, 0x7975, 0x960, 0x33a8, 0x2aca, 0x5415, 0x0, 0x1);
        gbc.writeMem(0x67d4, { 0xdc, 0xf6, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x7975);
        EXPECT(gbc.pc(), 0x67d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0193
        gbc.setState(0xa401, 0xdaf5, 0x1d60, 0xb06f, 0x74f0, 0xc760, 0x0, 0x0);
        gbc.writeMem(0xa401, { 0xdc, 0x79, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xdaf5);
        EXPECT(gbc.pc(), 0xa404);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa401), 0xdc);
        EXPECT(gbc.readMem(0xa402), 0x79);
        EXPECT(gbc.readMem(0xa403), 0x70);
        // DC 0196
        gbc.setState(0xc4dc, 0xacf8, 0xf240, 0x6ae, 0xda7b, 0x35f2, 0x1, 0x0);
        gbc.writeMem(0xc4dc, { 0xdc, 0x33, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xacf8);
        EXPECT(gbc.pc(), 0xc4df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4dc), 0xdc);
        EXPECT(gbc.readMem(0xc4dd), 0x33);
        EXPECT(gbc.readMem(0xc4de), 0xca);
        // DC 0197
        gbc.setState(0x2d4d, 0xf21e, 0xd5c0, 0x19ba, 0xe198, 0xfd42, 0x1, 0x1);
        gbc.writeMem(0x2d4d, { 0xdc, 0xd, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xf21e);
        EXPECT(gbc.pc(), 0x2d50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0198
        gbc.setState(0x89f4, 0xe184, 0xd700, 0xa801, 0xecd6, 0xcd66, 0x1, 0x1);
        gbc.writeMem(0x89f4, { 0xdc, 0x14, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xd7);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xe184);
        EXPECT(gbc.pc(), 0x89f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89f4), 0xdc);
        EXPECT(gbc.readMem(0x89f5), 0x14);
        EXPECT(gbc.readMem(0x89f6), 0x6c);
        // DC 0199
        gbc.setState(0x55f0, 0xdd81, 0xcd00, 0xef98, 0x55e1, 0x5492, 0x0, 0x0);
        gbc.writeMem(0x55f0, { 0xdc, 0x24, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xdd81);
        EXPECT(gbc.pc(), 0x55f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 019A
        gbc.setState(0x19d6, 0x4a4d, 0xa320, 0xf14, 0xa7e9, 0xb0de, 0x0, 0x0);
        gbc.writeMem(0x19d6, { 0xdc, 0xbe, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xde);
        EXPECT(gbc.sp(), 0x4a4d);
        EXPECT(gbc.pc(), 0x19d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 019D
        gbc.setState(0x8425, 0xeaa5, 0x57b0, 0xc8da, 0xda44, 0x2559, 0x0, 0x1);
        gbc.writeMem(0x8425, { 0xdc, 0x46, 0x5b });
        gbc.writeMem(0xeaa3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xeaa3);
        EXPECT(gbc.pc(), 0x5b46);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8425), 0xdc);
        EXPECT(gbc.readMem(0x8426), 0x46);
        EXPECT(gbc.readMem(0x8427), 0x5b);
        EXPECT(gbc.readMem(0xeaa3), 0x28);
        EXPECT(gbc.readMem(0xeaa4), 0x84);
        // DC 019E
        gbc.setState(0xe5d3, 0xfc54, 0x93e0, 0xe4fe, 0x2d24, 0xa2f4, 0x1, 0x1);
        gbc.writeMem(0xe5d3, { 0xdc, 0x23, 0x50 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xfc54);
        EXPECT(gbc.pc(), 0xe5d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5d3), 0xdc);
        EXPECT(gbc.readMem(0xe5d4), 0x23);
        EXPECT(gbc.readMem(0xe5d5), 0x50);
        // DC 019F
        gbc.setState(0x5b5, 0xe4b2, 0xe800, 0xe572, 0xe37b, 0x6c33, 0x0, 0x0);
        gbc.writeMem(0x5b5, { 0xdc, 0x59, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xe4b2);
        EXPECT(gbc.pc(), 0x5b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 01A1
        gbc.setState(0xc5ba, 0x124f, 0x7240, 0x7d6e, 0x6326, 0x232e, 0x1, 0x1);
        gbc.writeMem(0xc5ba, { 0xdc, 0xf8, 0xdb });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0x124f);
        EXPECT(gbc.pc(), 0xc5bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc5ba), 0xdc);
        EXPECT(gbc.readMem(0xc5bb), 0xf8);
        EXPECT(gbc.readMem(0xc5bc), 0xdb);
        // DC 01A2
        gbc.setState(0xcfdb, 0xdef4, 0x21f0, 0x7814, 0xe8a5, 0x8795, 0x0, 0x0);
        gbc.writeMem(0xcfdb, { 0xdc, 0xc3, 0xde });
        gbc.writeMem(0xdef2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xdef2);
        EXPECT(gbc.pc(), 0xdec3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfdb), 0xdc);
        EXPECT(gbc.readMem(0xcfdc), 0xc3);
        EXPECT(gbc.readMem(0xcfdd), 0xde);
        EXPECT(gbc.readMem(0xdef2), 0xde);
        EXPECT(gbc.readMem(0xdef3), 0xcf);
        // DC 01A3
        gbc.setState(0xa96, 0xc1d7, 0xeb40, 0x8cc3, 0x3b48, 0x7cd9, 0x1, 0x1);
        gbc.writeMem(0xa96, { 0xdc, 0xe, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xc1d7);
        EXPECT(gbc.pc(), 0xa99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 01A4
        gbc.setState(0xb9e3, 0x1962, 0x4ae0, 0x77ff, 0x4806, 0x50f4, 0x0, 0x1);
        gbc.writeMem(0xb9e3, { 0xdc, 0xf7, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x1962);
        EXPECT(gbc.pc(), 0xb9e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb9e3), 0xdc);
        EXPECT(gbc.readMem(0xb9e4), 0xf7);
        EXPECT(gbc.readMem(0xb9e5), 0x43);
        // DC 01A5
        gbc.setState(0xc62b, 0xf255, 0xe400, 0x997c, 0x8f95, 0xf287, 0x1, 0x1);
        gbc.writeMem(0xc62b, { 0xdc, 0x1a, 0xb7 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0xf255);
        EXPECT(gbc.pc(), 0xc62e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc62b), 0xdc);
        EXPECT(gbc.readMem(0xc62c), 0x1a);
        EXPECT(gbc.readMem(0xc62d), 0xb7);
        // DC 01A7
        gbc.setState(0x6587, 0xcefa, 0x63c0, 0x7ba1, 0xdd2, 0x5e89, 0x1, 0x1);
        gbc.writeMem(0x6587, { 0xdc, 0x67, 0xda });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xcefa);
        EXPECT(gbc.pc(), 0x658a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 01A8
        gbc.setState(0x8717, 0xf048, 0xd600, 0xa243, 0x82d9, 0xfc1e, 0x1, 0x1);
        gbc.writeMem(0x8717, { 0xdc, 0x52, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xf048);
        EXPECT(gbc.pc(), 0x871a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8717), 0xdc);
        EXPECT(gbc.readMem(0x8718), 0x52);
        EXPECT(gbc.readMem(0x8719), 0xeb);
        // DC 01A9
        gbc.setState(0xcb31, 0xd819, 0xdf70, 0xba95, 0x999f, 0x6f1d, 0x0, 0x0);
        gbc.writeMem(0xcb31, { 0xdc, 0xc3, 0x5f });
        gbc.writeMem(0xd817, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xd817);
        EXPECT(gbc.pc(), 0x5fc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb31), 0xdc);
        EXPECT(gbc.readMem(0xcb32), 0xc3);
        EXPECT(gbc.readMem(0xcb33), 0x5f);
        EXPECT(gbc.readMem(0xd817), 0x34);
        EXPECT(gbc.readMem(0xd818), 0xcb);
        // DC 01AA
        gbc.setState(0x4852, 0x9b6f, 0xd20, 0xf918, 0xd8de, 0x86d9, 0x1, 0x1);
        gbc.writeMem(0x4852, { 0xdc, 0xce, 0x2d });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x9b6f);
        EXPECT(gbc.pc(), 0x4855);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 01AB
        gbc.setState(0xe668, 0xb576, 0x1900, 0x2f1c, 0x4dbd, 0xc9e, 0x0, 0x0);
        gbc.writeMem(0xe668, { 0xdc, 0xe0, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb576);
        EXPECT(gbc.pc(), 0xe66b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe668), 0xdc);
        EXPECT(gbc.readMem(0xe669), 0xe0);
        EXPECT(gbc.readMem(0xe66a), 0xe0);
        // DC 01AC
        gbc.setState(0xc62d, 0x980f, 0x79b0, 0x6d1e, 0x98de, 0x2642, 0x0, 0x0);
        gbc.writeMem(0x980d, { 0x0, 0x0 });
        gbc.writeMem(0xc62d, { 0xdc, 0xce, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x980d);
        EXPECT(gbc.pc(), 0x1ece);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x980d), 0x30);
        EXPECT(gbc.readMem(0x980e), 0xc6);
        EXPECT(gbc.readMem(0xc62d), 0xdc);
        EXPECT(gbc.readMem(0xc62e), 0xce);
        EXPECT(gbc.readMem(0xc62f), 0x1e);
        // DC 01AE
        gbc.setState(0x923b, 0xbe02, 0xbb60, 0x983e, 0xa49d, 0xceb5, 0x0, 0x1);
        gbc.writeMem(0x923b, { 0xdc, 0x63, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xbe02);
        EXPECT(gbc.pc(), 0x923e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x923b), 0xdc);
        EXPECT(gbc.readMem(0x923c), 0x63);
        EXPECT(gbc.readMem(0x923d), 0x74);
        // DC 01AF
        gbc.setState(0xc8ce, 0x1781, 0xe880, 0xac0e, 0x749d, 0xde0a, 0x0, 0x1);
        gbc.writeMem(0xc8ce, { 0xdc, 0x1f, 0x26 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x1781);
        EXPECT(gbc.pc(), 0xc8d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8ce), 0xdc);
        EXPECT(gbc.readMem(0xc8cf), 0x1f);
        EXPECT(gbc.readMem(0xc8d0), 0x26);
        // DC 01B0
        gbc.setState(0xb204, 0xba75, 0x530, 0x5456, 0x7132, 0x3220, 0x1, 0x1);
        gbc.writeMem(0xb204, { 0xdc, 0x90, 0x51 });
        gbc.writeMem(0xba73, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xba73);
        EXPECT(gbc.pc(), 0x5190);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb204), 0xdc);
        EXPECT(gbc.readMem(0xb205), 0x90);
        EXPECT(gbc.readMem(0xb206), 0x51);
        EXPECT(gbc.readMem(0xba73), 0x7);
        EXPECT(gbc.readMem(0xba74), 0xb2);
        // DC 01B1
        gbc.setState(0xa853, 0xc36a, 0x78a0, 0x861c, 0x6328, 0xa93e, 0x1, 0x0);
        gbc.writeMem(0xa853, { 0xdc, 0x9a, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xc36a);
        EXPECT(gbc.pc(), 0xa856);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa853), 0xdc);
        EXPECT(gbc.readMem(0xa854), 0x9a);
        EXPECT(gbc.readMem(0xa855), 0x65);
        // DC 01B3
        gbc.setState(0x44cc, 0xf410, 0x9310, 0x94fc, 0x3012, 0x1619, 0x0, 0x0);
        gbc.writeMem(0x44cc, { 0xdc, 0x4c, 0x84 });
        gbc.writeMem(0xf40e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xf40e);
        EXPECT(gbc.pc(), 0x844c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf40e), 0xcf);
        EXPECT(gbc.readMem(0xf40f), 0x44);
        // DC 01B4
        gbc.setState(0xbed4, 0xff4a, 0x2810, 0x98c1, 0x8421, 0xcac, 0x0, 0x0);
        gbc.writeMem(0xbed4, { 0xdc, 0x6e, 0x5b });
        gbc.writeMem(0xff48, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xff48);
        EXPECT(gbc.pc(), 0x5b6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbed4), 0xdc);
        EXPECT(gbc.readMem(0xbed5), 0x6e);
        EXPECT(gbc.readMem(0xbed6), 0x5b);
        EXPECT(gbc.readMem(0xff48), 0xd7);
        EXPECT(gbc.readMem(0xff49), 0xbe);
        // DC 01B5
        gbc.setState(0x4572, 0xc8d1, 0xe2c0, 0xb345, 0x60b, 0xf579, 0x0, 0x1);
        gbc.writeMem(0x4572, { 0xdc, 0x14, 0x91 });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xc8d1);
        EXPECT(gbc.pc(), 0x4575);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 01B6
        gbc.setState(0xc27d, 0x5955, 0x1640, 0xffa3, 0xdd3b, 0x6609, 0x0, 0x0);
        gbc.writeMem(0xc27d, { 0xdc, 0x55, 0x19 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5955);
        EXPECT(gbc.pc(), 0xc280);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc27d), 0xdc);
        EXPECT(gbc.readMem(0xc27e), 0x55);
        EXPECT(gbc.readMem(0xc27f), 0x19);
        // DC 01B7
        gbc.setState(0xb188, 0x4b6b, 0x5500, 0x1093, 0xc070, 0xb823, 0x1, 0x1);
        gbc.writeMem(0xb188, { 0xdc, 0x9f, 0x52 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x4b6b);
        EXPECT(gbc.pc(), 0xb18b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb188), 0xdc);
        EXPECT(gbc.readMem(0xb189), 0x9f);
        EXPECT(gbc.readMem(0xb18a), 0x52);
        // DC 01B8
        gbc.setState(0x306e, 0x19a1, 0x9300, 0x822e, 0x6f70, 0x81cd, 0x1, 0x0);
        gbc.writeMem(0x306e, { 0xdc, 0x16, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x19a1);
        EXPECT(gbc.pc(), 0x3071);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 01B9
        gbc.setState(0x5202, 0x31ee, 0xbfc0, 0xb861, 0xf364, 0xc5ef, 0x0, 0x0);
        gbc.writeMem(0x5202, { 0xdc, 0xc3, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x31ee);
        EXPECT(gbc.pc(), 0x5205);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 01BA
        gbc.setState(0xfda, 0x8e08, 0x3090, 0xfefa, 0xb4fe, 0xd310, 0x0, 0x0);
        gbc.writeMem(0xfda, { 0xdc, 0x6, 0x64 });
        gbc.writeMem(0x8e06, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x8e06);
        EXPECT(gbc.pc(), 0x6406);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e06), 0xdd);
        EXPECT(gbc.readMem(0x8e07), 0xf);
        // DC 01BB
        gbc.setState(0x7103, 0xdebc, 0x2a80, 0x941c, 0x9f38, 0x7fe1, 0x1, 0x1);
        gbc.writeMem(0x7103, { 0xdc, 0xb5, 0x5e });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xdebc);
        EXPECT(gbc.pc(), 0x7106);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 01BD
        gbc.setState(0x286c, 0xdd2b, 0x5980, 0xcb1f, 0xb5e5, 0x106f, 0x0, 0x0);
        gbc.writeMem(0x286c, { 0xdc, 0xbc, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xdd2b);
        EXPECT(gbc.pc(), 0x286f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 01BE
        gbc.setState(0x1972, 0x1214, 0x2420, 0xe1b9, 0xc84a, 0xc70c, 0x0, 0x1);
        gbc.writeMem(0x1972, { 0xdc, 0x8e, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x1214);
        EXPECT(gbc.pc(), 0x1975);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 01BF
        gbc.setState(0xa43d, 0x6f65, 0x44e0, 0x1739, 0x59eb, 0x9ef5, 0x0, 0x1);
        gbc.writeMem(0xa43d, { 0xdc, 0xa4, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x6f65);
        EXPECT(gbc.pc(), 0xa440);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa43d), 0xdc);
        EXPECT(gbc.readMem(0xa43e), 0xa4);
        EXPECT(gbc.readMem(0xa43f), 0xa9);
        // DC 01C1
        gbc.setState(0xb357, 0xe918, 0x3e20, 0xe2c3, 0xff62, 0x712a, 0x0, 0x0);
        gbc.writeMem(0xb357, { 0xdc, 0x24, 0x6e });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xe918);
        EXPECT(gbc.pc(), 0xb35a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb357), 0xdc);
        EXPECT(gbc.readMem(0xb358), 0x24);
        EXPECT(gbc.readMem(0xb359), 0x6e);
        // DC 01C2
        gbc.setState(0xc43, 0x891e, 0x5970, 0xe20, 0x30f4, 0x8bb4, 0x0, 0x0);
        gbc.writeMem(0xc43, { 0xdc, 0x38, 0x45 });
        gbc.writeMem(0x891c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x891c);
        EXPECT(gbc.pc(), 0x4538);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x891c), 0x46);
        EXPECT(gbc.readMem(0x891d), 0xc);
        // DC 01C3
        gbc.setState(0x2817, 0x4acc, 0x29e0, 0x61ff, 0x752d, 0x825, 0x1, 0x0);
        gbc.writeMem(0x2817, { 0xdc, 0xec, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x4acc);
        EXPECT(gbc.pc(), 0x281a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 01C4
        gbc.setState(0xb853, 0xe8a4, 0x1810, 0x1f7b, 0xd244, 0xfd4, 0x0, 0x0);
        gbc.writeMem(0xb853, { 0xdc, 0x2d, 0x1b });
        gbc.writeMem(0xe8a2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xe8a2);
        EXPECT(gbc.pc(), 0x1b2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb853), 0xdc);
        EXPECT(gbc.readMem(0xb854), 0x2d);
        EXPECT(gbc.readMem(0xb855), 0x1b);
        EXPECT(gbc.readMem(0xe8a2), 0x56);
        EXPECT(gbc.readMem(0xe8a3), 0xb8);
        // DC 01C5
        gbc.setState(0x4271, 0xbda4, 0x6b00, 0x165b, 0x1ac6, 0x73d3, 0x1, 0x1);
        gbc.writeMem(0x4271, { 0xdc, 0x12, 0xe8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xbda4);
        EXPECT(gbc.pc(), 0x4274);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 01C7
        gbc.setState(0x1062, 0xb343, 0x82f0, 0xf087, 0x2e97, 0xc6, 0x1, 0x1);
        gbc.writeMem(0x1062, { 0xdc, 0x17, 0x36 });
        gbc.writeMem(0xb341, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb341);
        EXPECT(gbc.pc(), 0x3617);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb341), 0x65);
        EXPECT(gbc.readMem(0xb342), 0x10);
        // DC 01C8
        gbc.setState(0xc213, 0xd97e, 0x8cb0, 0x7b21, 0x5e7f, 0x5a95, 0x1, 0x1);
        gbc.writeMem(0xc213, { 0xdc, 0xb5, 0xc2 });
        gbc.writeMem(0xd97c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xd97c);
        EXPECT(gbc.pc(), 0xc2b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc213), 0xdc);
        EXPECT(gbc.readMem(0xc214), 0xb5);
        EXPECT(gbc.readMem(0xc215), 0xc2);
        EXPECT(gbc.readMem(0xd97c), 0x16);
        EXPECT(gbc.readMem(0xd97d), 0xc2);
        // DC 01C9
        gbc.setState(0x81c4, 0x8652, 0x8210, 0xae, 0x96e4, 0x1e43, 0x1, 0x1);
        gbc.writeMem(0x81c4, { 0xdc, 0xbf, 0x3a });
        gbc.writeMem(0x8650, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0x8650);
        EXPECT(gbc.pc(), 0x3abf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c4), 0xdc);
        EXPECT(gbc.readMem(0x81c5), 0xbf);
        EXPECT(gbc.readMem(0x81c6), 0x3a);
        EXPECT(gbc.readMem(0x8650), 0xc7);
        EXPECT(gbc.readMem(0x8651), 0x81);
        // DC 01CA
        gbc.setState(0x9494, 0x8b6c, 0x32f0, 0xd297, 0xf772, 0xe6db, 0x1, 0x1);
        gbc.writeMem(0x8b6a, { 0x0, 0x0 });
        gbc.writeMem(0x9494, { 0xdc, 0x4f, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8b6a);
        EXPECT(gbc.pc(), 0xc4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b6a), 0x97);
        EXPECT(gbc.readMem(0x8b6b), 0x94);
        EXPECT(gbc.readMem(0x9494), 0xdc);
        EXPECT(gbc.readMem(0x9495), 0x4f);
        EXPECT(gbc.readMem(0x9496), 0xc);
        // DC 01CB
        gbc.setState(0xc0d4, 0xcba7, 0xbd20, 0x8f18, 0x4988, 0x3b19, 0x1, 0x0);
        gbc.writeMem(0xc0d4, { 0xdc, 0x5a, 0xc1 });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xcba7);
        EXPECT(gbc.pc(), 0xc0d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc0d4), 0xdc);
        EXPECT(gbc.readMem(0xc0d5), 0x5a);
        EXPECT(gbc.readMem(0xc0d6), 0xc1);
        // DC 01CF
        gbc.setState(0xe3b6, 0x5726, 0x34a0, 0xd78d, 0x472c, 0x5050, 0x1, 0x0);
        gbc.writeMem(0xe3b6, { 0xdc, 0x78, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x5726);
        EXPECT(gbc.pc(), 0xe3b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3b6), 0xdc);
        EXPECT(gbc.readMem(0xe3b7), 0x78);
        EXPECT(gbc.readMem(0xe3b8), 0x90);
        // DC 01D0
        gbc.setState(0x6daf, 0x92d9, 0x5ea0, 0xb5d, 0xa472, 0xe8, 0x0, 0x1);
        gbc.writeMem(0x6daf, { 0xdc, 0x8d, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x92d9);
        EXPECT(gbc.pc(), 0x6db2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 01D2
        gbc.setState(0x8bfc, 0xfac0, 0xb820, 0x5d86, 0x46b4, 0x148, 0x1, 0x0);
        gbc.writeMem(0x8bfc, { 0xdc, 0x19, 0x3e });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xfac0);
        EXPECT(gbc.pc(), 0x8bff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bfc), 0xdc);
        EXPECT(gbc.readMem(0x8bfd), 0x19);
        EXPECT(gbc.readMem(0x8bfe), 0x3e);
        // DC 01D4
        gbc.setState(0x308e, 0xa984, 0x7b80, 0x298e, 0x60e1, 0xb304, 0x1, 0x0);
        gbc.writeMem(0x308e, { 0xdc, 0xbf, 0xe4 });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xa984);
        EXPECT(gbc.pc(), 0x3091);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 01D6
        gbc.setState(0xb766, 0x432d, 0xce0, 0xa87c, 0xefd7, 0x758, 0x1, 0x0);
        gbc.writeMem(0xb766, { 0xdc, 0x10, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x432d);
        EXPECT(gbc.pc(), 0xb769);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb766), 0xdc);
        EXPECT(gbc.readMem(0xb767), 0x10);
        EXPECT(gbc.readMem(0xb768), 0x9c);
        // DC 01D8
        gbc.setState(0x2a8f, 0xe04e, 0x7820, 0x5d50, 0xf779, 0xa725, 0x0, 0x1);
        gbc.writeMem(0x2a8f, { 0xdc, 0x61, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xe04e);
        EXPECT(gbc.pc(), 0x2a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 01D9
        gbc.setState(0x8048, 0x7b57, 0xc500, 0xfa74, 0x7e8f, 0xf0d8, 0x0, 0x0);
        gbc.writeMem(0x8048, { 0xdc, 0xc0, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x7b57);
        EXPECT(gbc.pc(), 0x804b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8048), 0xdc);
        EXPECT(gbc.readMem(0x8049), 0xc0);
        EXPECT(gbc.readMem(0x804a), 0x56);
        // DC 01DA
        gbc.setState(0xc331, 0xe2ee, 0x5850, 0x1ef0, 0xd756, 0x252d, 0x0, 0x1);
        gbc.writeMem(0xc331, { 0xdc, 0x61, 0xd1 });
        gbc.writeMem(0xe2ec, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x1e);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xe2ec);
        EXPECT(gbc.pc(), 0xd161);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc331), 0xdc);
        EXPECT(gbc.readMem(0xc332), 0x61);
        EXPECT(gbc.readMem(0xc333), 0xd1);
        EXPECT(gbc.readMem(0xe2ec), 0x34);
        EXPECT(gbc.readMem(0xe2ed), 0xc3);
        // DC 01DB
        gbc.setState(0xa088, 0xd3b9, 0x7270, 0x36f1, 0x381d, 0x618, 0x1, 0x0);
        gbc.writeMem(0xa088, { 0xdc, 0x84, 0x98 });
        gbc.writeMem(0xd3b7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd3b7);
        EXPECT(gbc.pc(), 0x9884);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa088), 0xdc);
        EXPECT(gbc.readMem(0xa089), 0x84);
        EXPECT(gbc.readMem(0xa08a), 0x98);
        EXPECT(gbc.readMem(0xd3b7), 0x8b);
        EXPECT(gbc.readMem(0xd3b8), 0xa0);
        // DC 01DD
        gbc.setState(0x16e4, 0xde1f, 0x7780, 0x9a0e, 0xa7c9, 0xda68, 0x0, 0x0);
        gbc.writeMem(0x16e4, { 0xdc, 0xfc, 0x22 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xde1f);
        EXPECT(gbc.pc(), 0x16e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 01DF
        gbc.setState(0xaea, 0x9857, 0xc250, 0x92e8, 0xa865, 0xda28, 0x1, 0x1);
        gbc.writeMem(0xaea, { 0xdc, 0x25, 0x70 });
        gbc.writeMem(0x9855, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x9855);
        EXPECT(gbc.pc(), 0x7025);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9855), 0xed);
        EXPECT(gbc.readMem(0x9856), 0xa);
        // DC 01E0
        gbc.setState(0x9911, 0xa4f0, 0x53a0, 0x311b, 0x46db, 0x90c9, 0x1, 0x0);
        gbc.writeMem(0x9911, { 0xdc, 0x17, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xa4f0);
        EXPECT(gbc.pc(), 0x9914);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9911), 0xdc);
        EXPECT(gbc.readMem(0x9912), 0x17);
        EXPECT(gbc.readMem(0x9913), 0x21);
        // DC 01E2
        gbc.setState(0xd8e1, 0xaf53, 0x51e0, 0x8d15, 0x4281, 0x440e, 0x1, 0x0);
        gbc.writeMem(0xd8e1, { 0xdc, 0x0, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xaf53);
        EXPECT(gbc.pc(), 0xd8e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd8e1), 0xdc);
        EXPECT(gbc.readMem(0xd8e2), 0x0);
        EXPECT(gbc.readMem(0xd8e3), 0xf3);
        // DC 01E3
        gbc.setState(0x6d51, 0x64f9, 0x31a0, 0x3c25, 0x8191, 0xbaa1, 0x0, 0x0);
        gbc.writeMem(0x6d51, { 0xdc, 0xdd, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x64f9);
        EXPECT(gbc.pc(), 0x6d54);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 01E4
        gbc.setState(0x16d4, 0xa681, 0x5b30, 0x34e8, 0xa0db, 0x63f3, 0x1, 0x0);
        gbc.writeMem(0x16d4, { 0xdc, 0x90, 0x3f });
        gbc.writeMem(0xa67f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0xa67f);
        EXPECT(gbc.pc(), 0x3f90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa67f), 0xd7);
        EXPECT(gbc.readMem(0xa680), 0x16);
        // DC 01E6
        gbc.setState(0xb3d0, 0x88cd, 0xe010, 0x7f2c, 0xa36, 0xfd80, 0x1, 0x0);
        gbc.writeMem(0x88cb, { 0x0, 0x0 });
        gbc.writeMem(0xb3d0, { 0xdc, 0xa3, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x88cb);
        EXPECT(gbc.pc(), 0xc9a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88cb), 0xd3);
        EXPECT(gbc.readMem(0x88cc), 0xb3);
        EXPECT(gbc.readMem(0xb3d0), 0xdc);
        EXPECT(gbc.readMem(0xb3d1), 0xa3);
        EXPECT(gbc.readMem(0xb3d2), 0xc9);
        // DC 01E7
        gbc.setState(0x6612, 0xac5e, 0x78e0, 0x78ea, 0xad3d, 0x36fb, 0x0, 0x0);
        gbc.writeMem(0x6612, { 0xdc, 0x8, 0xf });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xac5e);
        EXPECT(gbc.pc(), 0x6615);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 01EB
        gbc.setState(0x2903, 0x77ca, 0x58a0, 0x494c, 0x6e4, 0x289a, 0x1, 0x0);
        gbc.writeMem(0x2903, { 0xdc, 0xfc, 0x6f });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x77ca);
        EXPECT(gbc.pc(), 0x2906);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 01EC
        gbc.setState(0xd388, 0x4909, 0x92a0, 0x3313, 0x8be8, 0xf12, 0x1, 0x0);
        gbc.writeMem(0xd388, { 0xdc, 0x9e, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x4909);
        EXPECT(gbc.pc(), 0xd38b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd388), 0xdc);
        EXPECT(gbc.readMem(0xd389), 0x9e);
        EXPECT(gbc.readMem(0xd38a), 0xef);
        // DC 01ED
        gbc.setState(0xa1ef, 0xedca, 0x4f50, 0xad41, 0xd8c8, 0xc92a, 0x0, 0x0);
        gbc.writeMem(0xa1ef, { 0xdc, 0x14, 0x7d });
        gbc.writeMem(0xedc8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xedc8);
        EXPECT(gbc.pc(), 0x7d14);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1ef), 0xdc);
        EXPECT(gbc.readMem(0xa1f0), 0x14);
        EXPECT(gbc.readMem(0xa1f1), 0x7d);
        EXPECT(gbc.readMem(0xedc8), 0xf2);
        EXPECT(gbc.readMem(0xedc9), 0xa1);
        // DC 01EE
        gbc.setState(0x2850, 0x65b6, 0x4ea0, 0xd294, 0x5244, 0x89b7, 0x1, 0x0);
        gbc.writeMem(0x2850, { 0xdc, 0x6b, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x65b6);
        EXPECT(gbc.pc(), 0x2853);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 01F0
        gbc.setState(0x9ace, 0x3b4d, 0xf020, 0xa184, 0x2d65, 0x9f, 0x0, 0x1);
        gbc.writeMem(0x9ace, { 0xdc, 0xa2, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x84);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3b4d);
        EXPECT(gbc.pc(), 0x9ad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ace), 0xdc);
        EXPECT(gbc.readMem(0x9acf), 0xa2);
        EXPECT(gbc.readMem(0x9ad0), 0x2b);
        // DC 01F2
        gbc.setState(0xb3d0, 0xa3e7, 0xf3d0, 0xa3b1, 0x49c1, 0xf5ae, 0x0, 0x1);
        gbc.writeMem(0xa3e5, { 0x0, 0x0 });
        gbc.writeMem(0xb3d0, { 0xdc, 0xa3, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xa3e5);
        EXPECT(gbc.pc(), 0xc9a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3e5), 0xd3);
        EXPECT(gbc.readMem(0xa3e6), 0xb3);
        EXPECT(gbc.readMem(0xb3d0), 0xdc);
        EXPECT(gbc.readMem(0xb3d1), 0xa3);
        EXPECT(gbc.readMem(0xb3d2), 0xc9);
        // DC 01F4
        gbc.setState(0x55af, 0x8c01, 0x69e0, 0xc127, 0x1465, 0x89c7, 0x0, 0x0);
        gbc.writeMem(0x55af, { 0xdc, 0x6b, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x8c01);
        EXPECT(gbc.pc(), 0x55b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 01F5
        gbc.setState(0x2ef5, 0x2c23, 0x9420, 0xdc3b, 0x9cbd, 0xe267, 0x0, 0x0);
        gbc.writeMem(0x2ef5, { 0xdc, 0x54, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2c23);
        EXPECT(gbc.pc(), 0x2ef8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 01F6
        gbc.setState(0x6c7f, 0x77b1, 0xf360, 0x1f3e, 0xeac5, 0x1012, 0x0, 0x1);
        gbc.writeMem(0x6c7f, { 0xdc, 0xcf, 0xf9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x77b1);
        EXPECT(gbc.pc(), 0x6c82);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 01F8
        gbc.setState(0xc4b5, 0xe5c9, 0x4970, 0xaed, 0x46b8, 0xe3c1, 0x0, 0x1);
        gbc.writeMem(0xc4b5, { 0xdc, 0xe7, 0xf });
        gbc.writeMem(0xe5c7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xe5c7);
        EXPECT(gbc.pc(), 0xfe7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4b5), 0xdc);
        EXPECT(gbc.readMem(0xc4b6), 0xe7);
        EXPECT(gbc.readMem(0xc4b7), 0xf);
        EXPECT(gbc.readMem(0xe5c7), 0xb8);
        EXPECT(gbc.readMem(0xe5c8), 0xc4);
        // DC 01F9
        gbc.setState(0x6782, 0xad09, 0xfb40, 0x8521, 0x6387, 0xca66, 0x1, 0x0);
        gbc.writeMem(0x6782, { 0xdc, 0x5d, 0x79 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xad09);
        EXPECT(gbc.pc(), 0x6785);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 01FA
        gbc.setState(0x9557, 0x95ec, 0x7680, 0xe64c, 0x38b4, 0x9bbb, 0x1, 0x1);
        gbc.writeMem(0x9557, { 0xdc, 0x37, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x95ec);
        EXPECT(gbc.pc(), 0x955a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9557), 0xdc);
        EXPECT(gbc.readMem(0x9558), 0x37);
        EXPECT(gbc.readMem(0x9559), 0x93);
        // DC 01FB
        gbc.setState(0x6079, 0xf59c, 0x6730, 0xd678, 0x5110, 0x98be, 0x1, 0x1);
        gbc.writeMem(0x6079, { 0xdc, 0xbe, 0x2d });
        gbc.writeMem(0xf59a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xf59a);
        EXPECT(gbc.pc(), 0x2dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf59a), 0x7c);
        EXPECT(gbc.readMem(0xf59b), 0x60);
        // DC 01FC
        gbc.setState(0x515f, 0xe517, 0x3db0, 0xb231, 0xad50, 0x2020, 0x1, 0x0);
        gbc.writeMem(0x515f, { 0xdc, 0x28, 0x32 });
        gbc.writeMem(0xe515, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe515);
        EXPECT(gbc.pc(), 0x3228);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe515), 0x62);
        EXPECT(gbc.readMem(0xe516), 0x51);
        // DC 01FD
        gbc.setState(0x782d, 0xd54e, 0x9f60, 0x1360, 0x32ed, 0xca00, 0x1, 0x1);
        gbc.writeMem(0x782d, { 0xdc, 0xdf, 0xf3 });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xd54e);
        EXPECT(gbc.pc(), 0x7830);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 01FE
        gbc.setState(0xa33d, 0x71f1, 0xc400, 0xb546, 0x4a8f, 0xa9fa, 0x0, 0x0);
        gbc.writeMem(0xa33d, { 0xdc, 0x55, 0x9b });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x71f1);
        EXPECT(gbc.pc(), 0xa340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa33d), 0xdc);
        EXPECT(gbc.readMem(0xa33e), 0x55);
        EXPECT(gbc.readMem(0xa33f), 0x9b);
        // DC 0200
        gbc.setState(0xd75f, 0x85a1, 0xddb0, 0xb07d, 0x5d4d, 0x552c, 0x1, 0x0);
        gbc.writeMem(0x859f, { 0x0, 0x0 });
        gbc.writeMem(0xd75f, { 0xdc, 0xa0, 0x45 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x859f);
        EXPECT(gbc.pc(), 0x45a0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x859f), 0x62);
        EXPECT(gbc.readMem(0x85a0), 0xd7);
        EXPECT(gbc.readMem(0xd75f), 0xdc);
        EXPECT(gbc.readMem(0xd760), 0xa0);
        EXPECT(gbc.readMem(0xd761), 0x45);
        // DC 0201
        gbc.setState(0x9a15, 0xe336, 0x6f00, 0x4a8, 0x206f, 0xc0ab, 0x1, 0x0);
        gbc.writeMem(0x9a15, { 0xdc, 0x4a, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xe336);
        EXPECT(gbc.pc(), 0x9a18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a15), 0xdc);
        EXPECT(gbc.readMem(0x9a16), 0x4a);
        EXPECT(gbc.readMem(0x9a17), 0xc5);
        // DC 0202
        gbc.setState(0x8aaf, 0x4600, 0x7780, 0x73cb, 0x2533, 0x85d0, 0x0, 0x1);
        gbc.writeMem(0x8aaf, { 0xdc, 0x50, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x4600);
        EXPECT(gbc.pc(), 0x8ab2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8aaf), 0xdc);
        EXPECT(gbc.readMem(0x8ab0), 0x50);
        EXPECT(gbc.readMem(0x8ab1), 0x96);
        // DC 0203
        gbc.setState(0x807c, 0xfd45, 0xa8e0, 0x496d, 0x2abc, 0x6033, 0x1, 0x0);
        gbc.writeMem(0x807c, { 0xdc, 0x4b, 0x31 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xfd45);
        EXPECT(gbc.pc(), 0x807f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x807c), 0xdc);
        EXPECT(gbc.readMem(0x807d), 0x4b);
        EXPECT(gbc.readMem(0x807e), 0x31);
        // DC 0204
        gbc.setState(0x1fe7, 0x22c1, 0x8fc0, 0x5626, 0x3d66, 0x5238, 0x1, 0x1);
        gbc.writeMem(0x1fe7, { 0xdc, 0xd6, 0x95 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x22c1);
        EXPECT(gbc.pc(), 0x1fea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0206
        gbc.setState(0x9354, 0xaf91, 0xff20, 0x56aa, 0x8ad2, 0x318e, 0x0, 0x0);
        gbc.writeMem(0x9354, { 0xdc, 0x6, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xaf91);
        EXPECT(gbc.pc(), 0x9357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9354), 0xdc);
        EXPECT(gbc.readMem(0x9355), 0x6);
        EXPECT(gbc.readMem(0x9356), 0xab);
        // DC 0207
        gbc.setState(0xa94b, 0xdbbe, 0x2490, 0x6c91, 0x75ca, 0xded3, 0x1, 0x0);
        gbc.writeMem(0xa94b, { 0xdc, 0x20, 0x79 });
        gbc.writeMem(0xdbbc, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xdbbc);
        EXPECT(gbc.pc(), 0x7920);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa94b), 0xdc);
        EXPECT(gbc.readMem(0xa94c), 0x20);
        EXPECT(gbc.readMem(0xa94d), 0x79);
        EXPECT(gbc.readMem(0xdbbc), 0x4e);
        EXPECT(gbc.readMem(0xdbbd), 0xa9);
        // DC 0209
        gbc.setState(0x5d0c, 0xf8e3, 0x2bc0, 0xdef, 0x742a, 0x51a, 0x1, 0x1);
        gbc.writeMem(0x5d0c, { 0xdc, 0x87, 0xaa });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xd);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xf8e3);
        EXPECT(gbc.pc(), 0x5d0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 020A
        gbc.setState(0x61e0, 0xdcf6, 0x8dd0, 0x3d61, 0x1e67, 0x4f9a, 0x0, 0x0);
        gbc.writeMem(0x61e0, { 0xdc, 0xd1, 0x15 });
        gbc.writeMem(0xdcf4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xdcf4);
        EXPECT(gbc.pc(), 0x15d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcf4), 0xe3);
        EXPECT(gbc.readMem(0xdcf5), 0x61);
        // DC 020C
        gbc.setState(0x4232, 0x2730, 0xfdc0, 0x20f1, 0x13d0, 0x1cef, 0x0, 0x1);
        gbc.writeMem(0x4232, { 0xdc, 0x86, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2730);
        EXPECT(gbc.pc(), 0x4235);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 020E
        gbc.setState(0x53eb, 0xc50c, 0x3c50, 0xc3fe, 0x1686, 0x2390, 0x0, 0x1);
        gbc.writeMem(0x53eb, { 0xdc, 0xbf, 0x5c });
        gbc.writeMem(0xc50a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xc50a);
        EXPECT(gbc.pc(), 0x5cbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc50a), 0xee);
        EXPECT(gbc.readMem(0xc50b), 0x53);
        // DC 0210
        gbc.setState(0x262e, 0xcf4f, 0x3e70, 0xee2f, 0x472f, 0x3830, 0x1, 0x1);
        gbc.writeMem(0x262e, { 0xdc, 0xf1, 0x7a });
        gbc.writeMem(0xcf4d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xcf4d);
        EXPECT(gbc.pc(), 0x7af1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcf4d), 0x31);
        EXPECT(gbc.readMem(0xcf4e), 0x26);
        // DC 0211
        gbc.setState(0x80ea, 0xdca0, 0x6f00, 0xc144, 0xda72, 0x9b48, 0x1, 0x1);
        gbc.writeMem(0x80ea, { 0xdc, 0xe5, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xdca0);
        EXPECT(gbc.pc(), 0x80ed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80ea), 0xdc);
        EXPECT(gbc.readMem(0x80eb), 0xe5);
        EXPECT(gbc.readMem(0x80ec), 0x3d);
        // DC 0213
        gbc.setState(0xdfbe, 0x9485, 0xf260, 0x9bf4, 0xa95e, 0x4aae, 0x1, 0x0);
        gbc.writeMem(0xdfbe, { 0xdc, 0xd7, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x9485);
        EXPECT(gbc.pc(), 0xdfc1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfbe), 0xdc);
        EXPECT(gbc.readMem(0xdfbf), 0xd7);
        EXPECT(gbc.readMem(0xdfc0), 0x82);
        // DC 0214
        gbc.setState(0x41f4, 0x9d77, 0x29c0, 0x16de, 0x9704, 0x753, 0x1, 0x0);
        gbc.writeMem(0x41f4, { 0xdc, 0x41, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x9d77);
        EXPECT(gbc.pc(), 0x41f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0215
        gbc.setState(0x7c64, 0xe636, 0x63e0, 0xd912, 0x1bb9, 0xee88, 0x1, 0x0);
        gbc.writeMem(0x7c64, { 0xdc, 0x8f, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xe636);
        EXPECT(gbc.pc(), 0x7c67);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0216
        gbc.setState(0xab, 0x7e4, 0xed40, 0x6caa, 0x16ce, 0xa2a2, 0x0, 0x1);
        gbc.writeMem(0xab, { 0xdc, 0xaf, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x7e4);
        EXPECT(gbc.pc(), 0xae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0217
        gbc.setState(0x161b, 0x98a2, 0x2e60, 0x5496, 0x35d5, 0xd6ea, 0x0, 0x0);
        gbc.writeMem(0x161b, { 0xdc, 0x23, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x98a2);
        EXPECT(gbc.pc(), 0x161e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0219
        gbc.setState(0xed55, 0xb328, 0x4c90, 0x949e, 0xa456, 0xa97e, 0x0, 0x1);
        gbc.writeMem(0xb326, { 0x0, 0x0 });
        gbc.writeMem(0xed55, { 0xdc, 0x77, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xb326);
        EXPECT(gbc.pc(), 0xd877);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb326), 0x58);
        EXPECT(gbc.readMem(0xb327), 0xed);
        EXPECT(gbc.readMem(0xed55), 0xdc);
        EXPECT(gbc.readMem(0xed56), 0x77);
        EXPECT(gbc.readMem(0xed57), 0xd8);
        // DC 021A
        gbc.setState(0x6b1, 0x8cfc, 0x5930, 0x61cc, 0xe5f2, 0xa35a, 0x0, 0x1);
        gbc.writeMem(0x6b1, { 0xdc, 0xf4, 0x19 });
        gbc.writeMem(0x8cfa, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x8cfa);
        EXPECT(gbc.pc(), 0x19f4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cfa), 0xb4);
        EXPECT(gbc.readMem(0x8cfb), 0x6);
        // DC 021B
        gbc.setState(0x1b5d, 0xa631, 0x85d0, 0xc3e8, 0x9c5e, 0xfa0, 0x1, 0x1);
        gbc.writeMem(0x1b5d, { 0xdc, 0x5a, 0xf1 });
        gbc.writeMem(0xa62f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xa62f);
        EXPECT(gbc.pc(), 0xf15a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa62f), 0x60);
        EXPECT(gbc.readMem(0xa630), 0x1b);
        // DC 021C
        gbc.setState(0x8b50, 0x71e1, 0x9260, 0x6aa1, 0x32c5, 0x50d3, 0x1, 0x0);
        gbc.writeMem(0x8b50, { 0xdc, 0xa2, 0x8a });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x71e1);
        EXPECT(gbc.pc(), 0x8b53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b50), 0xdc);
        EXPECT(gbc.readMem(0x8b51), 0xa2);
        EXPECT(gbc.readMem(0x8b52), 0x8a);
        // DC 021F
        gbc.setState(0xb72b, 0x8d6a, 0x1250, 0xd412, 0x4e4e, 0xb19a, 0x0, 0x1);
        gbc.writeMem(0x8d68, { 0x0, 0x0 });
        gbc.writeMem(0xb72b, { 0xdc, 0xbf, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x8d68);
        EXPECT(gbc.pc(), 0x90bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d68), 0x2e);
        EXPECT(gbc.readMem(0x8d69), 0xb7);
        EXPECT(gbc.readMem(0xb72b), 0xdc);
        EXPECT(gbc.readMem(0xb72c), 0xbf);
        EXPECT(gbc.readMem(0xb72d), 0x90);
        // DC 0220
        gbc.setState(0x1c85, 0x9460, 0x21d0, 0x4558, 0xa37a, 0x2d8d, 0x0, 0x1);
        gbc.writeMem(0x1c85, { 0xdc, 0x62, 0x1c });
        gbc.writeMem(0x945e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x945e);
        EXPECT(gbc.pc(), 0x1c62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945e), 0x88);
        EXPECT(gbc.readMem(0x945f), 0x1c);
        // DC 0222
        gbc.setState(0xe33e, 0x9685, 0xb2a0, 0x770d, 0x6883, 0xb57c, 0x1, 0x1);
        gbc.writeMem(0xe33e, { 0xdc, 0x27, 0xd6 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x9685);
        EXPECT(gbc.pc(), 0xe341);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe33e), 0xdc);
        EXPECT(gbc.readMem(0xe33f), 0x27);
        EXPECT(gbc.readMem(0xe340), 0xd6);
        // DC 0224
        gbc.setState(0x5325, 0xeaa3, 0xb550, 0x2595, 0x6954, 0x1ed3, 0x0, 0x0);
        gbc.writeMem(0x5325, { 0xdc, 0x22, 0x32 });
        gbc.writeMem(0xeaa1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xeaa1);
        EXPECT(gbc.pc(), 0x3222);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeaa1), 0x28);
        EXPECT(gbc.readMem(0xeaa2), 0x53);
        // DC 0227
        gbc.setState(0x9b65, 0x50a1, 0x9640, 0xf43d, 0x6d09, 0xd51f, 0x0, 0x0);
        gbc.writeMem(0x9b65, { 0xdc, 0xe1, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x50a1);
        EXPECT(gbc.pc(), 0x9b68);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b65), 0xdc);
        EXPECT(gbc.readMem(0x9b66), 0xe1);
        EXPECT(gbc.readMem(0x9b67), 0xdd);
        // DC 0228
        gbc.setState(0xd78e, 0x6673, 0xec40, 0x11a7, 0x7647, 0x11c2, 0x1, 0x1);
        gbc.writeMem(0xd78e, { 0xdc, 0x61, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x6673);
        EXPECT(gbc.pc(), 0xd791);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd78e), 0xdc);
        EXPECT(gbc.readMem(0xd78f), 0x61);
        EXPECT(gbc.readMem(0xd790), 0xfc);
        // DC 0229
        gbc.setState(0xbc0b, 0x918f, 0x50e0, 0xee98, 0x17d, 0x1365, 0x1, 0x1);
        gbc.writeMem(0xbc0b, { 0xdc, 0x15, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x918f);
        EXPECT(gbc.pc(), 0xbc0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc0b), 0xdc);
        EXPECT(gbc.readMem(0xbc0c), 0x15);
        EXPECT(gbc.readMem(0xbc0d), 0xb5);
        // DC 022A
        gbc.setState(0xc78e, 0xe450, 0x4f80, 0xe4c, 0x2ac0, 0x1b1b, 0x0, 0x1);
        gbc.writeMem(0xc78e, { 0xdc, 0xd3, 0x72 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xe450);
        EXPECT(gbc.pc(), 0xc791);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc78e), 0xdc);
        EXPECT(gbc.readMem(0xc78f), 0xd3);
        EXPECT(gbc.readMem(0xc790), 0x72);
        // DC 022B
        gbc.setState(0x95e7, 0xc1c4, 0xa130, 0x8dfe, 0xd3f7, 0xc67a, 0x1, 0x1);
        gbc.writeMem(0x95e7, { 0xdc, 0xe9, 0x28 });
        gbc.writeMem(0xc1c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xc1c2);
        EXPECT(gbc.pc(), 0x28e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x95e7), 0xdc);
        EXPECT(gbc.readMem(0x95e8), 0xe9);
        EXPECT(gbc.readMem(0x95e9), 0x28);
        EXPECT(gbc.readMem(0xc1c2), 0xea);
        EXPECT(gbc.readMem(0xc1c3), 0x95);
        // DC 022D
        gbc.setState(0x44a7, 0xaeff, 0x6980, 0x45a6, 0xff13, 0x1896, 0x0, 0x1);
        gbc.writeMem(0x44a7, { 0xdc, 0x84, 0x11 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0xaeff);
        EXPECT(gbc.pc(), 0x44aa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 022E
        gbc.setState(0x3b30, 0xc42d, 0x77a0, 0x74ce, 0xa0df, 0x7a78, 0x0, 0x1);
        gbc.writeMem(0x3b30, { 0xdc, 0xfb, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xc42d);
        EXPECT(gbc.pc(), 0x3b33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 022F
        gbc.setState(0x3219, 0x8c1b, 0x6380, 0xbb46, 0x8d20, 0x13e, 0x1, 0x0);
        gbc.writeMem(0x3219, { 0xdc, 0xbc, 0xa8 });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0x8c1b);
        EXPECT(gbc.pc(), 0x321c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0232
        gbc.setState(0x7d57, 0xa2a4, 0x2660, 0x6dc, 0xfd69, 0x3dbc, 0x0, 0x0);
        gbc.writeMem(0x7d57, { 0xdc, 0x24, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x69);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xa2a4);
        EXPECT(gbc.pc(), 0x7d5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0236
        gbc.setState(0xc56, 0xc7a, 0xeee0, 0x98ce, 0x46ac, 0x8a07, 0x0, 0x0);
        gbc.writeMem(0xc56, { 0xdc, 0x26, 0x58 });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xc7a);
        EXPECT(gbc.pc(), 0xc59);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0237
        gbc.setState(0x3fd6, 0xdcd7, 0xc660, 0xf77e, 0x655, 0x5ccb, 0x0, 0x0);
        gbc.writeMem(0x3fd6, { 0xdc, 0xae, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xdcd7);
        EXPECT(gbc.pc(), 0x3fd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0238
        gbc.setState(0x9f0a, 0x16fd, 0x46c0, 0x398c, 0x4bcd, 0x60d3, 0x0, 0x1);
        gbc.writeMem(0x9f0a, { 0xdc, 0xc8, 0xd7 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x16fd);
        EXPECT(gbc.pc(), 0x9f0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f0a), 0xdc);
        EXPECT(gbc.readMem(0x9f0b), 0xc8);
        EXPECT(gbc.readMem(0x9f0c), 0xd7);
        // DC 023A
        gbc.setState(0x330, 0x513a, 0x34e0, 0x21ab, 0x8db2, 0x32c3, 0x0, 0x1);
        gbc.writeMem(0x330, { 0xdc, 0x10, 0xc3 });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x513a);
        EXPECT(gbc.pc(), 0x333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 023B
        gbc.setState(0xd806, 0xe04f, 0x6970, 0xa653, 0x7ffa, 0x460b, 0x1, 0x1);
        gbc.writeMem(0xd806, { 0xdc, 0x4b, 0x3d });
        gbc.writeMem(0xe04d, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xe04d);
        EXPECT(gbc.pc(), 0x3d4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd806), 0xdc);
        EXPECT(gbc.readMem(0xd807), 0x4b);
        EXPECT(gbc.readMem(0xd808), 0x3d);
        EXPECT(gbc.readMem(0xe04d), 0x9);
        EXPECT(gbc.readMem(0xe04e), 0xd8);
        // DC 023D
        gbc.setState(0x877e, 0xc75d, 0x91f0, 0xf38a, 0x8b50, 0xddfe, 0x0, 0x1);
        gbc.writeMem(0x877e, { 0xdc, 0xa1, 0x95 });
        gbc.writeMem(0xc75b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xc75b);
        EXPECT(gbc.pc(), 0x95a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x877e), 0xdc);
        EXPECT(gbc.readMem(0x877f), 0xa1);
        EXPECT(gbc.readMem(0x8780), 0x95);
        EXPECT(gbc.readMem(0xc75b), 0x81);
        EXPECT(gbc.readMem(0xc75c), 0x87);
        // DC 023E
        gbc.setState(0xa4d5, 0xde87, 0x8df0, 0x9d9d, 0xbbef, 0xe055, 0x0, 0x1);
        gbc.writeMem(0xa4d5, { 0xdc, 0x71, 0xc8 });
        gbc.writeMem(0xde85, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0xde85);
        EXPECT(gbc.pc(), 0xc871);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4d5), 0xdc);
        EXPECT(gbc.readMem(0xa4d6), 0x71);
        EXPECT(gbc.readMem(0xa4d7), 0xc8);
        EXPECT(gbc.readMem(0xde85), 0xd8);
        EXPECT(gbc.readMem(0xde86), 0xa4);
        // DC 023F
        gbc.setState(0x6ff6, 0x7bed, 0x7ea0, 0xee4b, 0x85d1, 0xac07, 0x0, 0x1);
        gbc.writeMem(0x6ff6, { 0xdc, 0x32, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x7bed);
        EXPECT(gbc.pc(), 0x6ff9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0240
        gbc.setState(0x7c47, 0xd35a, 0x2a0, 0xbd06, 0x5125, 0x39b, 0x0, 0x0);
        gbc.writeMem(0x7c47, { 0xdc, 0x4e, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd35a);
        EXPECT(gbc.pc(), 0x7c4a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0242
        gbc.setState(0x553a, 0xb884, 0x14b0, 0xdf1a, 0x294d, 0x31fd, 0x1, 0x1);
        gbc.writeMem(0x553a, { 0xdc, 0xd, 0x4a });
        gbc.writeMem(0xb882, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb882);
        EXPECT(gbc.pc(), 0x4a0d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb882), 0x3d);
        EXPECT(gbc.readMem(0xb883), 0x55);
        // DC 0243
        gbc.setState(0x172e, 0xbd06, 0xdc30, 0x9e6d, 0xc949, 0x693a, 0x0, 0x0);
        gbc.writeMem(0x172e, { 0xdc, 0x88, 0x88 });
        gbc.writeMem(0xbd04, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xbd04);
        EXPECT(gbc.pc(), 0x8888);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd04), 0x31);
        EXPECT(gbc.readMem(0xbd05), 0x17);
        // DC 0244
        gbc.setState(0x350, 0xa3d2, 0x2e20, 0x3774, 0xb4c9, 0xe7a1, 0x1, 0x1);
        gbc.writeMem(0x350, { 0xdc, 0xb6, 0xcc });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa3d2);
        EXPECT(gbc.pc(), 0x353);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0247
        gbc.setState(0xd293, 0xd4d, 0x57a0, 0xc892, 0xd0f2, 0x1252, 0x1, 0x0);
        gbc.writeMem(0xd293, { 0xdc, 0xa, 0xb8 });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0xd4d);
        EXPECT(gbc.pc(), 0xd296);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd293), 0xdc);
        EXPECT(gbc.readMem(0xd294), 0xa);
        EXPECT(gbc.readMem(0xd295), 0xb8);
        // DC 0249
        gbc.setState(0xeea0, 0x92be, 0x5610, 0x221, 0xe524, 0x6e9e, 0x0, 0x1);
        gbc.writeMem(0x92bc, { 0x0, 0x0 });
        gbc.writeMem(0xeea0, { 0xdc, 0xbe, 0x1e });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x92bc);
        EXPECT(gbc.pc(), 0x1ebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x92bc), 0xa3);
        EXPECT(gbc.readMem(0x92bd), 0xee);
        EXPECT(gbc.readMem(0xeea0), 0xdc);
        EXPECT(gbc.readMem(0xeea1), 0xbe);
        EXPECT(gbc.readMem(0xeea2), 0x1e);
        // DC 024D
        gbc.setState(0xdecd, 0xd34f, 0x2b00, 0x9272, 0xb19b, 0xee2b, 0x1, 0x1);
        gbc.writeMem(0xdecd, { 0xdc, 0x13, 0x8e });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd34f);
        EXPECT(gbc.pc(), 0xded0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdecd), 0xdc);
        EXPECT(gbc.readMem(0xdece), 0x13);
        EXPECT(gbc.readMem(0xdecf), 0x8e);
        // DC 024E
        gbc.setState(0xb62b, 0xb8fb, 0xb5c0, 0xf64a, 0xbca5, 0x6f89, 0x0, 0x1);
        gbc.writeMem(0xb62b, { 0xdc, 0x20, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xb8fb);
        EXPECT(gbc.pc(), 0xb62e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb62b), 0xdc);
        EXPECT(gbc.readMem(0xb62c), 0x20);
        EXPECT(gbc.readMem(0xb62d), 0x24);
        // DC 024F
        gbc.setState(0x8cbb, 0xffa1, 0x50b0, 0x8aff, 0xf910, 0x23c9, 0x1, 0x0);
        gbc.writeMem(0x8cbb, { 0xdc, 0xb, 0xdd });
        gbc.writeMem(0xff9f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xff9f);
        EXPECT(gbc.pc(), 0xdd0b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8cbb), 0xdc);
        EXPECT(gbc.readMem(0x8cbc), 0xb);
        EXPECT(gbc.readMem(0x8cbd), 0xdd);
        EXPECT(gbc.readMem(0xff9f), 0xbe);
        EXPECT(gbc.readMem(0xffa0), 0x8c);
        // DC 0250
        gbc.setState(0x8b4a, 0xb901, 0x5520, 0x817b, 0x3362, 0x5007, 0x1, 0x1);
        gbc.writeMem(0x8b4a, { 0xdc, 0xe9, 0x3 });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0xb901);
        EXPECT(gbc.pc(), 0x8b4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b4a), 0xdc);
        EXPECT(gbc.readMem(0x8b4b), 0xe9);
        EXPECT(gbc.readMem(0x8b4c), 0x3);
        // DC 0251
        gbc.setState(0xc4a4, 0xff0b, 0x98c0, 0xd2df, 0xda99, 0xae88, 0x1, 0x0);
        gbc.writeMem(0xc4a4, { 0xdc, 0x76, 0xef });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xff0b);
        EXPECT(gbc.pc(), 0xc4a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc4a4), 0xdc);
        EXPECT(gbc.readMem(0xc4a5), 0x76);
        EXPECT(gbc.readMem(0xc4a6), 0xef);
        // DC 0252
        gbc.setState(0xdc0a, 0x80b1, 0xcba0, 0x1507, 0x84b6, 0x4241, 0x0, 0x0);
        gbc.writeMem(0xdc0a, { 0xdc, 0xcc, 0x2c });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x80b1);
        EXPECT(gbc.pc(), 0xdc0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc0a), 0xdc);
        EXPECT(gbc.readMem(0xdc0b), 0xcc);
        EXPECT(gbc.readMem(0xdc0c), 0x2c);
        // DC 0253
        gbc.setState(0x9dd3, 0x6b13, 0xb960, 0xcc8a, 0xfa03, 0xbec1, 0x0, 0x1);
        gbc.writeMem(0x9dd3, { 0xdc, 0x54, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x6b13);
        EXPECT(gbc.pc(), 0x9dd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9dd3), 0xdc);
        EXPECT(gbc.readMem(0x9dd4), 0x54);
        EXPECT(gbc.readMem(0x9dd5), 0x9d);
        // DC 0254
        gbc.setState(0xe3c7, 0x81a8, 0xd4c0, 0x455c, 0x77dd, 0xd976, 0x1, 0x0);
        gbc.writeMem(0xe3c7, { 0xdc, 0xee, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x81a8);
        EXPECT(gbc.pc(), 0xe3ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe3c7), 0xdc);
        EXPECT(gbc.readMem(0xe3c8), 0xee);
        EXPECT(gbc.readMem(0xe3c9), 0x67);
        // DC 0255
        gbc.setState(0x8735, 0x3e57, 0x7a40, 0xf50e, 0xb827, 0x1872, 0x0, 0x1);
        gbc.writeMem(0x8735, { 0xdc, 0xe, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x3e57);
        EXPECT(gbc.pc(), 0x8738);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8735), 0xdc);
        EXPECT(gbc.readMem(0x8736), 0xe);
        EXPECT(gbc.readMem(0x8737), 0xb);
        // DC 0256
        gbc.setState(0x97fd, 0x9199, 0x5db0, 0xc3e4, 0xc846, 0x34ff, 0x0, 0x1);
        gbc.writeMem(0x9197, { 0x0, 0x0 });
        gbc.writeMem(0x97fd, { 0xdc, 0xbb, 0xc });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x9197);
        EXPECT(gbc.pc(), 0xcbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9197), 0x0);
        EXPECT(gbc.readMem(0x9198), 0x98);
        EXPECT(gbc.readMem(0x97fd), 0xdc);
        EXPECT(gbc.readMem(0x97fe), 0xbb);
        EXPECT(gbc.readMem(0x97ff), 0xc);
        // DC 0257
        gbc.setState(0x6c62, 0x97af, 0x3190, 0x1fc0, 0x2364, 0x372f, 0x1, 0x0);
        gbc.writeMem(0x6c62, { 0xdc, 0xf1, 0xb6 });
        gbc.writeMem(0x97ad, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x97ad);
        EXPECT(gbc.pc(), 0xb6f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97ad), 0x65);
        EXPECT(gbc.readMem(0x97ae), 0x6c);
        // DC 0258
        gbc.setState(0x2731, 0x52fc, 0xf660, 0x1380, 0xebe3, 0xc5c4, 0x1, 0x0);
        gbc.writeMem(0x2731, { 0xdc, 0x70, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x52fc);
        EXPECT(gbc.pc(), 0x2734);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 025B
        gbc.setState(0xc683, 0x9a70, 0xe720, 0x811f, 0x229c, 0x22e6, 0x0, 0x0);
        gbc.writeMem(0xc683, { 0xdc, 0xc1, 0x64 });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0x9a70);
        EXPECT(gbc.pc(), 0xc686);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc683), 0xdc);
        EXPECT(gbc.readMem(0xc684), 0xc1);
        EXPECT(gbc.readMem(0xc685), 0x64);
        // DC 025C
        gbc.setState(0x1038, 0xe7eb, 0x6180, 0x5ca3, 0xd097, 0xa95f, 0x1, 0x1);
        gbc.writeMem(0x1038, { 0xdc, 0x1e, 0xb2 });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xe7eb);
        EXPECT(gbc.pc(), 0x103b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0260
        gbc.setState(0x8965, 0xbcdf, 0x8f00, 0xee27, 0x6e64, 0x8206, 0x1, 0x0);
        gbc.writeMem(0x8965, { 0xdc, 0x2b, 0x93 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xbcdf);
        EXPECT(gbc.pc(), 0x8968);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8965), 0xdc);
        EXPECT(gbc.readMem(0x8966), 0x2b);
        EXPECT(gbc.readMem(0x8967), 0x93);
        // DC 0261
        gbc.setState(0x1475, 0xcd29, 0xb1b0, 0xf577, 0x41dd, 0x9937, 0x0, 0x1);
        gbc.writeMem(0x1475, { 0xdc, 0x7a, 0x62 });
        gbc.writeMem(0xcd27, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xcd27);
        EXPECT(gbc.pc(), 0x627a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd27), 0x78);
        EXPECT(gbc.readMem(0xcd28), 0x14);
        // DC 0262
        gbc.setState(0x9d96, 0x9110, 0x6cb0, 0xa43c, 0x657f, 0x197e, 0x1, 0x1);
        gbc.writeMem(0x910e, { 0x0, 0x0 });
        gbc.writeMem(0x9d96, { 0xdc, 0x41, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0x910e);
        EXPECT(gbc.pc(), 0xfa41);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x910e), 0x99);
        EXPECT(gbc.readMem(0x910f), 0x9d);
        EXPECT(gbc.readMem(0x9d96), 0xdc);
        EXPECT(gbc.readMem(0x9d97), 0x41);
        EXPECT(gbc.readMem(0x9d98), 0xfa);
        // DC 0263
        gbc.setState(0xe21d, 0xa220, 0xa090, 0x92f8, 0x12da, 0x9f2d, 0x1, 0x1);
        gbc.writeMem(0xa21e, { 0x0, 0x0 });
        gbc.writeMem(0xe21d, { 0xdc, 0xdf, 0xc0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0xa21e);
        EXPECT(gbc.pc(), 0xc0df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa21e), 0x20);
        EXPECT(gbc.readMem(0xa21f), 0xe2);
        EXPECT(gbc.readMem(0xe21d), 0xdc);
        EXPECT(gbc.readMem(0xe21e), 0xdf);
        EXPECT(gbc.readMem(0xe21f), 0xc0);
        // DC 0266
        gbc.setState(0x3a10, 0xb2b6, 0xf5e0, 0x545f, 0x3749, 0xcedc, 0x0, 0x0);
        gbc.writeMem(0x3a10, { 0xdc, 0x80, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x49);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb2b6);
        EXPECT(gbc.pc(), 0x3a13);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0267
        gbc.setState(0x299e, 0xd6a0, 0xb8b0, 0x7824, 0x6136, 0x84c6, 0x0, 0x1);
        gbc.writeMem(0x299e, { 0xdc, 0x6e, 0xcb });
        gbc.writeMem(0xd69e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd69e);
        EXPECT(gbc.pc(), 0xcb6e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd69e), 0xa1);
        EXPECT(gbc.readMem(0xd69f), 0x29);
        // DC 0268
        gbc.setState(0x3acd, 0x7691, 0x220, 0xa4d8, 0x680d, 0xaf06, 0x1, 0x1);
        gbc.writeMem(0x3acd, { 0xdc, 0x6d, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x7691);
        EXPECT(gbc.pc(), 0x3ad0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 026A
        gbc.setState(0x4fba, 0x81ad, 0xe660, 0x34ee, 0x9e79, 0xfaf3, 0x0, 0x1);
        gbc.writeMem(0x4fba, { 0xdc, 0x70, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x81ad);
        EXPECT(gbc.pc(), 0x4fbd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 026D
        gbc.setState(0x23b9, 0xf7c4, 0x270, 0xc942, 0x5f2c, 0x15e4, 0x0, 0x1);
        gbc.writeMem(0x23b9, { 0xdc, 0xea, 0xd5 });
        gbc.writeMem(0xf7c2, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xf7c2);
        EXPECT(gbc.pc(), 0xd5ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf7c2), 0xbc);
        EXPECT(gbc.readMem(0xf7c3), 0x23);
        // DC 026E
        gbc.setState(0xa264, 0xa77, 0x54c0, 0x9653, 0x413, 0xe80d, 0x0, 0x0);
        gbc.writeMem(0xa264, { 0xdc, 0xb5, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xa77);
        EXPECT(gbc.pc(), 0xa267);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa264), 0xdc);
        EXPECT(gbc.readMem(0xa265), 0xb5);
        EXPECT(gbc.readMem(0xa266), 0x59);
        // DC 0271
        gbc.setState(0x4849, 0xc678, 0x12c0, 0x7f7f, 0x5aef, 0x72d4, 0x1, 0x0);
        gbc.writeMem(0x4849, { 0xdc, 0xd, 0x4d });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0xc678);
        EXPECT(gbc.pc(), 0x484c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0272
        gbc.setState(0x6b8d, 0x337c, 0x2720, 0x9528, 0x5f40, 0x472, 0x1, 0x1);
        gbc.writeMem(0x6b8d, { 0xdc, 0x2, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x337c);
        EXPECT(gbc.pc(), 0x6b90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0273
        gbc.setState(0xded4, 0xe14e, 0xb350, 0x73f9, 0x658a, 0xa1cd, 0x1, 0x0);
        gbc.writeMem(0xded4, { 0xdc, 0xa8, 0xb8 });
        gbc.writeMem(0xe14c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xe14c);
        EXPECT(gbc.pc(), 0xb8a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xded4), 0xdc);
        EXPECT(gbc.readMem(0xded5), 0xa8);
        EXPECT(gbc.readMem(0xded6), 0xb8);
        EXPECT(gbc.readMem(0xe14c), 0xd7);
        EXPECT(gbc.readMem(0xe14d), 0xde);
        // DC 0274
        gbc.setState(0x4b28, 0x2444, 0x3d40, 0x7b10, 0x8c43, 0x2ea4, 0x1, 0x1);
        gbc.writeMem(0x4b28, { 0xdc, 0xfe, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x2444);
        EXPECT(gbc.pc(), 0x4b2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0275
        gbc.setState(0xe436, 0x4681, 0x6000, 0xd039, 0xdff5, 0x3f9c, 0x1, 0x1);
        gbc.writeMem(0xe436, { 0xdc, 0x57, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x4681);
        EXPECT(gbc.pc(), 0xe439);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe436), 0xdc);
        EXPECT(gbc.readMem(0xe437), 0x57);
        EXPECT(gbc.readMem(0xe438), 0x78);
        // DC 0276
        gbc.setState(0x965b, 0x3ac, 0x3720, 0xe366, 0x5e2c, 0x9b1f, 0x0, 0x0);
        gbc.writeMem(0x965b, { 0xdc, 0xb6, 0x71 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x3ac);
        EXPECT(gbc.pc(), 0x965e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x965b), 0xdc);
        EXPECT(gbc.readMem(0x965c), 0xb6);
        EXPECT(gbc.readMem(0x965d), 0x71);
        // DC 0277
        gbc.setState(0x17d9, 0xc542, 0x3260, 0x1993, 0xa803, 0xb357, 0x0, 0x0);
        gbc.writeMem(0x17d9, { 0xdc, 0x9f, 0x24 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xc542);
        EXPECT(gbc.pc(), 0x17dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0278
        gbc.setState(0xa9ff, 0xaf12, 0x53a0, 0x66a2, 0xc80d, 0x5c2e, 0x1, 0x0);
        gbc.writeMem(0xa9ff, { 0xdc, 0x50, 0x15 });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x2e);
        EXPECT(gbc.sp(), 0xaf12);
        EXPECT(gbc.pc(), 0xaa02);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9ff), 0xdc);
        EXPECT(gbc.readMem(0xaa00), 0x50);
        EXPECT(gbc.readMem(0xaa01), 0x15);
        // DC 0279
        gbc.setState(0x7b7b, 0xc413, 0x740, 0xf0c8, 0x2e37, 0x23c4, 0x0, 0x1);
        gbc.writeMem(0x7b7b, { 0xdc, 0xe8, 0x35 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xc413);
        EXPECT(gbc.pc(), 0x7b7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 027A
        gbc.setState(0xe5eb, 0x5f67, 0xb800, 0x9040, 0x60d7, 0x84f7, 0x0, 0x0);
        gbc.writeMem(0xe5eb, { 0xdc, 0xd2, 0xe5 });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x5f67);
        EXPECT(gbc.pc(), 0xe5ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5eb), 0xdc);
        EXPECT(gbc.readMem(0xe5ec), 0xd2);
        EXPECT(gbc.readMem(0xe5ed), 0xe5);
        // DC 027C
        gbc.setState(0x5ace, 0xd0d6, 0xa140, 0x72eb, 0xf6fb, 0xa146, 0x0, 0x1);
        gbc.writeMem(0x5ace, { 0xdc, 0xbe, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xd0d6);
        EXPECT(gbc.pc(), 0x5ad1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 027D
        gbc.setState(0xdd75, 0xc578, 0x58e0, 0xcc22, 0x1862, 0xc812, 0x0, 0x0);
        gbc.writeMem(0xdd75, { 0xdc, 0x84, 0xe });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0xc578);
        EXPECT(gbc.pc(), 0xdd78);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd75), 0xdc);
        EXPECT(gbc.readMem(0xdd76), 0x84);
        EXPECT(gbc.readMem(0xdd77), 0xe);
        // DC 027F
        gbc.setState(0x4d9d, 0xb9a4, 0x6ac0, 0x88a2, 0xaeb5, 0x91b0, 0x0, 0x1);
        gbc.writeMem(0x4d9d, { 0xdc, 0x45, 0xc8 });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0xb9a4);
        EXPECT(gbc.pc(), 0x4da0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0280
        gbc.setState(0x1849, 0x8528, 0x9ec0, 0x581b, 0xffd0, 0x39ae, 0x0, 0x0);
        gbc.writeMem(0x1849, { 0xdc, 0xb8, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x8528);
        EXPECT(gbc.pc(), 0x184c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0281
        gbc.setState(0xdc24, 0x6252, 0x7ae0, 0x58d0, 0xe9b3, 0x8d05, 0x1, 0x0);
        gbc.writeMem(0xdc24, { 0xdc, 0x58, 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x6252);
        EXPECT(gbc.pc(), 0xdc27);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdc24), 0xdc);
        EXPECT(gbc.readMem(0xdc25), 0x58);
        EXPECT(gbc.readMem(0xdc26), 0x8c);
        // DC 0282
        gbc.setState(0x28af, 0x6ee4, 0x38a0, 0x62b6, 0x8d41, 0x8c41, 0x0, 0x1);
        gbc.writeMem(0x28af, { 0xdc, 0xfb, 0x87 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6ee4);
        EXPECT(gbc.pc(), 0x28b2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0283
        gbc.setState(0x99f3, 0x5ca6, 0x1a0, 0x6330, 0xea74, 0x379f, 0x1, 0x1);
        gbc.writeMem(0x99f3, { 0xdc, 0xa6, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x5ca6);
        EXPECT(gbc.pc(), 0x99f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99f3), 0xdc);
        EXPECT(gbc.readMem(0x99f4), 0xa6);
        EXPECT(gbc.readMem(0x99f5), 0xc2);
        // DC 0284
        gbc.setState(0x97f6, 0xb704, 0x4d70, 0xb7b2, 0x8f77, 0xe2fd, 0x0, 0x0);
        gbc.writeMem(0x97f6, { 0xdc, 0x6b, 0x4e });
        gbc.writeMem(0xb702, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb702);
        EXPECT(gbc.pc(), 0x4e6b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x97f6), 0xdc);
        EXPECT(gbc.readMem(0x97f7), 0x6b);
        EXPECT(gbc.readMem(0x97f8), 0x4e);
        EXPECT(gbc.readMem(0xb702), 0xf9);
        EXPECT(gbc.readMem(0xb703), 0x97);
        // DC 0286
        gbc.setState(0x6c1f, 0xfb46, 0xfff0, 0x2a80, 0xd753, 0xf051, 0x0, 0x0);
        gbc.writeMem(0x6c1f, { 0xdc, 0x9c, 0x1c });
        gbc.writeMem(0xfb44, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xfb44);
        EXPECT(gbc.pc(), 0x1c9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xfb44), 0x22);
        EXPECT(gbc.readMem(0xfb45), 0x6c);
        // DC 0287
        gbc.setState(0x5880, 0x3003, 0x6c60, 0xf107, 0xc478, 0x54a9, 0x0, 0x0);
        gbc.writeMem(0x5880, { 0xdc, 0xf4, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x3003);
        EXPECT(gbc.pc(), 0x5883);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 028A
        gbc.setState(0x80cb, 0xb9b7, 0x4790, 0x6f09, 0x3224, 0x2f79, 0x1, 0x0);
        gbc.writeMem(0x80cb, { 0xdc, 0x29, 0xfd });
        gbc.writeMem(0xb9b5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb9b5);
        EXPECT(gbc.pc(), 0xfd29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80cb), 0xdc);
        EXPECT(gbc.readMem(0x80cc), 0x29);
        EXPECT(gbc.readMem(0x80cd), 0xfd);
        EXPECT(gbc.readMem(0xb9b5), 0xce);
        EXPECT(gbc.readMem(0xb9b6), 0x80);
        // DC 028C
        gbc.setState(0x8659, 0x2da0, 0x47a0, 0xb87b, 0xecfd, 0x1344, 0x1, 0x1);
        gbc.writeMem(0x8659, { 0xdc, 0xd3, 0xe6 });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x2da0);
        EXPECT(gbc.pc(), 0x865c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8659), 0xdc);
        EXPECT(gbc.readMem(0x865a), 0xd3);
        EXPECT(gbc.readMem(0x865b), 0xe6);
        // DC 028D
        gbc.setState(0x6a7e, 0xbc86, 0xc140, 0xe0e1, 0x3153, 0xe678, 0x0, 0x1);
        gbc.writeMem(0x6a7e, { 0xdc, 0x1f, 0x9a });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xbc86);
        EXPECT(gbc.pc(), 0x6a81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 028F
        gbc.setState(0x6d1e, 0x7930, 0x3560, 0xf640, 0xfc2d, 0xf31c, 0x0, 0x1);
        gbc.writeMem(0x6d1e, { 0xdc, 0x5b, 0x7a });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x7930);
        EXPECT(gbc.pc(), 0x6d21);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0290
        gbc.setState(0x9d58, 0x267b, 0x2c40, 0x68ec, 0xadc6, 0xdf7f, 0x1, 0x0);
        gbc.writeMem(0x9d58, { 0xdc, 0xa5, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x267b);
        EXPECT(gbc.pc(), 0x9d5b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d58), 0xdc);
        EXPECT(gbc.readMem(0x9d59), 0xa5);
        EXPECT(gbc.readMem(0x9d5a), 0xb);
        // DC 0291
        gbc.setState(0x81a1, 0x8efa, 0xe30, 0xdc57, 0x45ee, 0x2cee, 0x1, 0x1);
        gbc.writeMem(0x81a1, { 0xdc, 0xd, 0x27 });
        gbc.writeMem(0x8ef8, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x8ef8);
        EXPECT(gbc.pc(), 0x270d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81a1), 0xdc);
        EXPECT(gbc.readMem(0x81a2), 0xd);
        EXPECT(gbc.readMem(0x81a3), 0x27);
        EXPECT(gbc.readMem(0x8ef8), 0xa4);
        EXPECT(gbc.readMem(0x8ef9), 0x81);
        // DC 0292
        gbc.setState(0x6581, 0x6758, 0xe060, 0x3f68, 0x4928, 0x2fd5, 0x1, 0x1);
        gbc.writeMem(0x6581, { 0xdc, 0x82, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x6758);
        EXPECT(gbc.pc(), 0x6584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0293
        gbc.setState(0xcc2b, 0x9be3, 0x8940, 0x55d7, 0x6666, 0x3274, 0x0, 0x0);
        gbc.writeMem(0xcc2b, { 0xdc, 0xe8, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x9be3);
        EXPECT(gbc.pc(), 0xcc2e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcc2b), 0xdc);
        EXPECT(gbc.readMem(0xcc2c), 0xe8);
        EXPECT(gbc.readMem(0xcc2d), 0xbc);
        // DC 0294
        gbc.setState(0x793c, 0x7e11, 0x4100, 0x2325, 0xeadf, 0x25fb, 0x0, 0x1);
        gbc.writeMem(0x793c, { 0xdc, 0xbe, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x7e11);
        EXPECT(gbc.pc(), 0x793f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0296
        gbc.setState(0x51c3, 0xedd0, 0x1de0, 0x995a, 0xc3fa, 0x3d32, 0x0, 0x1);
        gbc.writeMem(0x51c3, { 0xdc, 0xea, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xedd0);
        EXPECT(gbc.pc(), 0x51c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0297
        gbc.setState(0x487d, 0x40ef, 0xe0, 0x20c5, 0x4b42, 0xda5b, 0x0, 0x1);
        gbc.writeMem(0x487d, { 0xdc, 0xbe, 0x25 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x40ef);
        EXPECT(gbc.pc(), 0x4880);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 029A
        gbc.setState(0x21fb, 0x19b4, 0x9300, 0x6ad9, 0x1750, 0xb94c, 0x1, 0x1);
        gbc.writeMem(0x21fb, { 0xdc, 0x79, 0x10 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x19b4);
        EXPECT(gbc.pc(), 0x21fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 029B
        gbc.setState(0xbbc7, 0xd5f6, 0x6790, 0x74d2, 0x3715, 0x6c0, 0x1, 0x1);
        gbc.writeMem(0xbbc7, { 0xdc, 0x1b, 0xc0 });
        gbc.writeMem(0xd5f4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xd5f4);
        EXPECT(gbc.pc(), 0xc01b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbc7), 0xdc);
        EXPECT(gbc.readMem(0xbbc8), 0x1b);
        EXPECT(gbc.readMem(0xbbc9), 0xc0);
        EXPECT(gbc.readMem(0xd5f4), 0xca);
        EXPECT(gbc.readMem(0xd5f5), 0xbb);
        // DC 029D
        gbc.setState(0x9540, 0x5898, 0x800, 0x762f, 0x1c70, 0xf132, 0x1, 0x0);
        gbc.writeMem(0x9540, { 0xdc, 0xf, 0x7 });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x5898);
        EXPECT(gbc.pc(), 0x9543);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9540), 0xdc);
        EXPECT(gbc.readMem(0x9541), 0xf);
        EXPECT(gbc.readMem(0x9542), 0x7);
        // DC 029E
        gbc.setState(0xa9ab, 0xd40d, 0xd930, 0x5183, 0xde17, 0x56b8, 0x0, 0x1);
        gbc.writeMem(0xa9ab, { 0xdc, 0x8, 0x9e });
        gbc.writeMem(0xd40b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd40b);
        EXPECT(gbc.pc(), 0x9e08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9ab), 0xdc);
        EXPECT(gbc.readMem(0xa9ac), 0x8);
        EXPECT(gbc.readMem(0xa9ad), 0x9e);
        EXPECT(gbc.readMem(0xd40b), 0xae);
        EXPECT(gbc.readMem(0xd40c), 0xa9);
        // DC 029F
        gbc.setState(0x66b4, 0xa5ef, 0xbeb0, 0xd262, 0x33f7, 0xfcf, 0x0, 0x1);
        gbc.writeMem(0x66b4, { 0xdc, 0xc0, 0x61 });
        gbc.writeMem(0xa5ed, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0xa5ed);
        EXPECT(gbc.pc(), 0x61c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5ed), 0xb7);
        EXPECT(gbc.readMem(0xa5ee), 0x66);
        // DC 02A0
        gbc.setState(0xa255, 0xaa3, 0xebe0, 0x7317, 0x1f22, 0x85b4, 0x0, 0x0);
        gbc.writeMem(0xa255, { 0xdc, 0xa6, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0xaa3);
        EXPECT(gbc.pc(), 0xa258);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa255), 0xdc);
        EXPECT(gbc.readMem(0xa256), 0xa6);
        EXPECT(gbc.readMem(0xa257), 0x77);
        // DC 02A3
        gbc.setState(0x5210, 0x6de1, 0xca00, 0x154, 0xcb8f, 0xd6f0, 0x0, 0x0);
        gbc.writeMem(0x5210, { 0xdc, 0x4e, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x6de1);
        EXPECT(gbc.pc(), 0x5213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02A5
        gbc.setState(0x1a8d, 0xf4a4, 0x23a0, 0xacc9, 0xb28d, 0xfdf4, 0x0, 0x0);
        gbc.writeMem(0x1a8d, { 0xdc, 0xca, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xf4a4);
        EXPECT(gbc.pc(), 0x1a90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 02A6
        gbc.setState(0xa147, 0xb6, 0x620, 0xcc5d, 0x293b, 0x66d6, 0x0, 0x1);
        gbc.writeMem(0xa147, { 0xdc, 0xec, 0x3b });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xb6);
        EXPECT(gbc.pc(), 0xa14a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa147), 0xdc);
        EXPECT(gbc.readMem(0xa148), 0xec);
        EXPECT(gbc.readMem(0xa149), 0x3b);
        // DC 02A8
        gbc.setState(0xec2a, 0x64b2, 0xda40, 0x179, 0xd195, 0x4131, 0x0, 0x0);
        gbc.writeMem(0xec2a, { 0xdc, 0x75, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x64b2);
        EXPECT(gbc.pc(), 0xec2d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec2a), 0xdc);
        EXPECT(gbc.readMem(0xec2b), 0x75);
        EXPECT(gbc.readMem(0xec2c), 0xd0);
        // DC 02AB
        gbc.setState(0xaf1c, 0xae06, 0xd0a0, 0xe362, 0x1fd0, 0x1df1, 0x1, 0x0);
        gbc.writeMem(0xaf1c, { 0xdc, 0x78, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xae06);
        EXPECT(gbc.pc(), 0xaf1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf1c), 0xdc);
        EXPECT(gbc.readMem(0xaf1d), 0x78);
        EXPECT(gbc.readMem(0xaf1e), 0xd1);
        // DC 02AC
        gbc.setState(0x1e07, 0xedd7, 0x410, 0xc717, 0xb787, 0x3f43, 0x0, 0x1);
        gbc.writeMem(0x1e07, { 0xdc, 0xcc, 0xaa });
        gbc.writeMem(0xedd5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xedd5);
        EXPECT(gbc.pc(), 0xaacc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd5), 0xa);
        EXPECT(gbc.readMem(0xedd6), 0x1e);
        // DC 02AD
        gbc.setState(0x745, 0x9689, 0xf20, 0x8c89, 0x7b33, 0xea1f, 0x0, 0x1);
        gbc.writeMem(0x745, { 0xdc, 0x2, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x9689);
        EXPECT(gbc.pc(), 0x748);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 02AE
        gbc.setState(0x4f13, 0x9b63, 0x7200, 0x503c, 0x9ad4, 0x6e47, 0x0, 0x1);
        gbc.writeMem(0x4f13, { 0xdc, 0x2a, 0x43 });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0x9b63);
        EXPECT(gbc.pc(), 0x4f16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02B0
        gbc.setState(0xb190, 0xf5a0, 0xf770, 0x1934, 0xedec, 0xf30b, 0x0, 0x0);
        gbc.writeMem(0xb190, { 0xdc, 0x24, 0xc5 });
        gbc.writeMem(0xf59e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xf59e);
        EXPECT(gbc.pc(), 0xc524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb190), 0xdc);
        EXPECT(gbc.readMem(0xb191), 0x24);
        EXPECT(gbc.readMem(0xb192), 0xc5);
        EXPECT(gbc.readMem(0xf59e), 0x93);
        EXPECT(gbc.readMem(0xf59f), 0xb1);
        // DC 02B1
        gbc.setState(0x98e9, 0x200e, 0xc540, 0x3997, 0xc72f, 0xc414, 0x0, 0x1);
        gbc.writeMem(0x98e9, { 0xdc, 0x15, 0xd1 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x200e);
        EXPECT(gbc.pc(), 0x98ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98e9), 0xdc);
        EXPECT(gbc.readMem(0x98ea), 0x15);
        EXPECT(gbc.readMem(0x98eb), 0xd1);
        // DC 02B2
        gbc.setState(0xcce, 0xe56, 0x3080, 0x1aa1, 0xc006, 0xce72, 0x0, 0x1);
        gbc.writeMem(0xcce, { 0xdc, 0xa1, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xe56);
        EXPECT(gbc.pc(), 0xcd1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02B3
        gbc.setState(0x7f2c, 0x84fd, 0x5e60, 0x6f58, 0x2d71, 0x3192, 0x1, 0x0);
        gbc.writeMem(0x7f2c, { 0xdc, 0x36, 0x9 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x84fd);
        EXPECT(gbc.pc(), 0x7f2f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 02B4
        gbc.setState(0x9e39, 0x5cac, 0x3140, 0x3f8e, 0xb5a8, 0x8ed, 0x0, 0x0);
        gbc.writeMem(0x9e39, { 0xdc, 0x38, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x5cac);
        EXPECT(gbc.pc(), 0x9e3c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e39), 0xdc);
        EXPECT(gbc.readMem(0x9e3a), 0x38);
        EXPECT(gbc.readMem(0x9e3b), 0x33);
        // DC 02B5
        gbc.setState(0x9698, 0xf041, 0xd140, 0x95a8, 0x6cac, 0x7fdf, 0x1, 0x0);
        gbc.writeMem(0x9698, { 0xdc, 0xe4, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0xf041);
        EXPECT(gbc.pc(), 0x969b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9698), 0xdc);
        EXPECT(gbc.readMem(0x9699), 0xe4);
        EXPECT(gbc.readMem(0x969a), 0x48);
        // DC 02B7
        gbc.setState(0xb278, 0x7019, 0x2b60, 0xaf95, 0x3184, 0xb714, 0x0, 0x0);
        gbc.writeMem(0xb278, { 0xdc, 0x9b, 0xdf });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x7019);
        EXPECT(gbc.pc(), 0xb27b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb278), 0xdc);
        EXPECT(gbc.readMem(0xb279), 0x9b);
        EXPECT(gbc.readMem(0xb27a), 0xdf);
        // DC 02B9
        gbc.setState(0xcbf6, 0xf9b7, 0x4ec0, 0x6846, 0x5be9, 0xf178, 0x0, 0x1);
        gbc.writeMem(0xcbf6, { 0xdc, 0xa5, 0x42 });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xf9b7);
        EXPECT(gbc.pc(), 0xcbf9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbf6), 0xdc);
        EXPECT(gbc.readMem(0xcbf7), 0xa5);
        EXPECT(gbc.readMem(0xcbf8), 0x42);
        // DC 02BA
        gbc.setState(0x290c, 0x922f, 0x5ca0, 0x88c1, 0xd941, 0xded6, 0x0, 0x0);
        gbc.writeMem(0x290c, { 0xdc, 0xa3, 0xd8 });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x922f);
        EXPECT(gbc.pc(), 0x290f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 02BC
        gbc.setState(0x55ee, 0xda96, 0xefc0, 0x76fb, 0x5abc, 0x55e0, 0x0, 0x1);
        gbc.writeMem(0x55ee, { 0xdc, 0x30, 0x47 });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xda96);
        EXPECT(gbc.pc(), 0x55f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02BD
        gbc.setState(0x32a5, 0xdc16, 0x8ff0, 0xee4b, 0x6037, 0xf6bc, 0x0, 0x0);
        gbc.writeMem(0x32a5, { 0xdc, 0xd2, 0x59 });
        gbc.writeMem(0xdc14, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0xdc14);
        EXPECT(gbc.pc(), 0x59d2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc14), 0xa8);
        EXPECT(gbc.readMem(0xdc15), 0x32);
        // DC 02BF
        gbc.setState(0x21b3, 0xad4d, 0x9040, 0x8b, 0xf917, 0xfec, 0x0, 0x0);
        gbc.writeMem(0x21b3, { 0xdc, 0x28, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xad4d);
        EXPECT(gbc.pc(), 0x21b6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02C0
        gbc.setState(0x5ef8, 0x45e8, 0x1ae0, 0xb3d2, 0x51bd, 0x8b63, 0x1, 0x0);
        gbc.writeMem(0x5ef8, { 0xdc, 0x30, 0x9c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x45e8);
        EXPECT(gbc.pc(), 0x5efb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 02C1
        gbc.setState(0x7bc7, 0x8704, 0x8d50, 0x30c6, 0x15f4, 0x83bd, 0x0, 0x0);
        gbc.writeMem(0x7bc7, { 0xdc, 0x53, 0x21 });
        gbc.writeMem(0x8702, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x8702);
        EXPECT(gbc.pc(), 0x2153);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8702), 0xca);
        EXPECT(gbc.readMem(0x8703), 0x7b);
        // DC 02C2
        gbc.setState(0xbac0, 0x2586, 0xc3c0, 0x3fe7, 0x4837, 0xf360, 0x1, 0x0);
        gbc.writeMem(0xbac0, { 0xdc, 0xfc, 0xc4 });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x2586);
        EXPECT(gbc.pc(), 0xbac3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbac0), 0xdc);
        EXPECT(gbc.readMem(0xbac1), 0xfc);
        EXPECT(gbc.readMem(0xbac2), 0xc4);
        // DC 02C4
        gbc.setState(0x759c, 0xb365, 0xd050, 0x581e, 0xa1c8, 0x574e, 0x0, 0x1);
        gbc.writeMem(0x759c, { 0xdc, 0x6d, 0xec });
        gbc.writeMem(0xb363, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xb363);
        EXPECT(gbc.pc(), 0xec6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb363), 0x9f);
        EXPECT(gbc.readMem(0xb364), 0x75);
        // DC 02C5
        gbc.setState(0x4d8d, 0xd819, 0x35c0, 0x23c2, 0x1a2d, 0x7d8e, 0x0, 0x1);
        gbc.writeMem(0x4d8d, { 0xdc, 0xe7, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xd819);
        EXPECT(gbc.pc(), 0x4d90);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02C6
        gbc.setState(0xe45b, 0xf883, 0x46e0, 0x799, 0xb633, 0xf6e1, 0x1, 0x0);
        gbc.writeMem(0xe45b, { 0xdc, 0x7d, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xf883);
        EXPECT(gbc.pc(), 0xe45e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe45b), 0xdc);
        EXPECT(gbc.readMem(0xe45c), 0x7d);
        EXPECT(gbc.readMem(0xe45d), 0x29);
        // DC 02C7
        gbc.setState(0x4fe6, 0x8d74, 0x4cb0, 0xd409, 0x778, 0x64c2, 0x1, 0x1);
        gbc.writeMem(0x4fe6, { 0xdc, 0x45, 0x63 });
        gbc.writeMem(0x8d72, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x9);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0x8d72);
        EXPECT(gbc.pc(), 0x6345);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d72), 0xe9);
        EXPECT(gbc.readMem(0x8d73), 0x4f);
        // DC 02C9
        gbc.setState(0xb0ca, 0xa0c6, 0x1230, 0xe31e, 0xe346, 0x8c41, 0x0, 0x1);
        gbc.writeMem(0xa0c4, { 0x0, 0x0 });
        gbc.writeMem(0xb0ca, { 0xdc, 0x38, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa0c4);
        EXPECT(gbc.pc(), 0x2e38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa0c4), 0xcd);
        EXPECT(gbc.readMem(0xa0c5), 0xb0);
        EXPECT(gbc.readMem(0xb0ca), 0xdc);
        EXPECT(gbc.readMem(0xb0cb), 0x38);
        EXPECT(gbc.readMem(0xb0cc), 0x2e);
        // DC 02CA
        gbc.setState(0x16e3, 0xaae, 0xa300, 0x4b48, 0x1951, 0x7528, 0x1, 0x1);
        gbc.writeMem(0x16e3, { 0xdc, 0x42, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xaae);
        EXPECT(gbc.pc(), 0x16e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02CB
        gbc.setState(0x8f6f, 0x9593, 0xbfe0, 0xa5f8, 0xf996, 0x2027, 0x0, 0x0);
        gbc.writeMem(0x8f6f, { 0xdc, 0x50, 0xff });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9593);
        EXPECT(gbc.pc(), 0x8f72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f6f), 0xdc);
        EXPECT(gbc.readMem(0x8f70), 0x50);
        EXPECT(gbc.readMem(0x8f71), 0xff);
        // DC 02CE
        gbc.setState(0xb215, 0xb728, 0xe610, 0xb87e, 0x903c, 0xf55d, 0x0, 0x1);
        gbc.writeMem(0xb215, { 0xdc, 0xc3, 0xb });
        gbc.writeMem(0xb726, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe6);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xb726);
        EXPECT(gbc.pc(), 0xbc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb215), 0xdc);
        EXPECT(gbc.readMem(0xb216), 0xc3);
        EXPECT(gbc.readMem(0xb217), 0xb);
        EXPECT(gbc.readMem(0xb726), 0x18);
        EXPECT(gbc.readMem(0xb727), 0xb2);
        // DC 02CF
        gbc.setState(0x7c49, 0x7fe7, 0xbe40, 0x3b2e, 0x9c21, 0x2e8a, 0x0, 0x0);
        gbc.writeMem(0x7c49, { 0xdc, 0x16, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x7fe7);
        EXPECT(gbc.pc(), 0x7c4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02D0
        gbc.setState(0xe3a2, 0xb024, 0x12f0, 0xdd1c, 0x45d4, 0x4036, 0x0, 0x0);
        gbc.writeMem(0xb022, { 0x0, 0x0 });
        gbc.writeMem(0xe3a2, { 0xdc, 0x84, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0x40);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0xb022);
        EXPECT(gbc.pc(), 0x8684);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb022), 0xa5);
        EXPECT(gbc.readMem(0xb023), 0xe3);
        EXPECT(gbc.readMem(0xe3a2), 0xdc);
        EXPECT(gbc.readMem(0xe3a3), 0x84);
        EXPECT(gbc.readMem(0xe3a4), 0x86);
        // DC 02D1
        gbc.setState(0x2c52, 0xe57c, 0x3830, 0x86, 0xeb17, 0x9aae, 0x1, 0x0);
        gbc.writeMem(0x2c52, { 0xdc, 0x3b, 0xa4 });
        gbc.writeMem(0xe57a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xe57a);
        EXPECT(gbc.pc(), 0xa43b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe57a), 0x55);
        EXPECT(gbc.readMem(0xe57b), 0x2c);
        // DC 02D2
        gbc.setState(0xad0d, 0xb838, 0x5860, 0x4b17, 0xde5a, 0x5e3a, 0x0, 0x1);
        gbc.writeMem(0xad0d, { 0xdc, 0xad, 0x2e });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xb838);
        EXPECT(gbc.pc(), 0xad10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xad0d), 0xdc);
        EXPECT(gbc.readMem(0xad0e), 0xad);
        EXPECT(gbc.readMem(0xad0f), 0x2e);
        // DC 02D3
        gbc.setState(0x9c06, 0xaa4a, 0xdc0, 0x15be, 0x301b, 0xabbe, 0x1, 0x0);
        gbc.writeMem(0x9c06, { 0xdc, 0xce, 0xf2 });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xaa4a);
        EXPECT(gbc.pc(), 0x9c09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c06), 0xdc);
        EXPECT(gbc.readMem(0x9c07), 0xce);
        EXPECT(gbc.readMem(0x9c08), 0xf2);
        // DC 02D4
        gbc.setState(0x1f81, 0x1e12, 0x9960, 0x7bab, 0x7648, 0x61ff, 0x1, 0x0);
        gbc.writeMem(0x1f81, { 0xdc, 0xcb, 0x74 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x1e12);
        EXPECT(gbc.pc(), 0x1f84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 02D5
        gbc.setState(0x7086, 0x9045, 0x8100, 0xc04d, 0x5e89, 0xfd4b, 0x0, 0x0);
        gbc.writeMem(0x7086, { 0xdc, 0x43, 0x34 });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x9045);
        EXPECT(gbc.pc(), 0x7089);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02D8
        gbc.setState(0xe2dd, 0xc02f, 0xf140, 0x4c6e, 0x24d8, 0xaff0, 0x0, 0x1);
        gbc.writeMem(0xe2dd, { 0xdc, 0xc6, 0x69 });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0xc02f);
        EXPECT(gbc.pc(), 0xe2e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2dd), 0xdc);
        EXPECT(gbc.readMem(0xe2de), 0xc6);
        EXPECT(gbc.readMem(0xe2df), 0x69);
        // DC 02D9
        gbc.setState(0xd496, 0x2ae0, 0xc0, 0xd274, 0xbdf, 0x54c1, 0x1, 0x1);
        gbc.writeMem(0xd496, { 0xdc, 0x55, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2ae0);
        EXPECT(gbc.pc(), 0xd499);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd496), 0xdc);
        EXPECT(gbc.readMem(0xd497), 0x55);
        EXPECT(gbc.readMem(0xd498), 0xa9);
        // DC 02DA
        gbc.setState(0xbf16, 0x8131, 0xd300, 0x2374, 0x91df, 0x229b, 0x0, 0x1);
        gbc.writeMem(0xbf16, { 0xdc, 0xd7, 0x56 });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8131);
        EXPECT(gbc.pc(), 0xbf19);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf16), 0xdc);
        EXPECT(gbc.readMem(0xbf17), 0xd7);
        EXPECT(gbc.readMem(0xbf18), 0x56);
        // DC 02DB
        gbc.setState(0x13b, 0xf86f, 0x7080, 0x1f89, 0x5085, 0x2b7d, 0x0, 0x1);
        gbc.writeMem(0x13b, { 0xdc, 0xfd, 0xb0 });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0xf86f);
        EXPECT(gbc.pc(), 0x13e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02DC
        gbc.setState(0x1e5d, 0xd4c9, 0x80, 0x2587, 0x698d, 0x41a1, 0x0, 0x1);
        gbc.writeMem(0x1e5d, { 0xdc, 0x91, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xd4c9);
        EXPECT(gbc.pc(), 0x1e60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02DD
        gbc.setState(0xc46f, 0x2f51, 0xa2e0, 0xb32c, 0xf39e, 0x88ad, 0x1, 0x1);
        gbc.writeMem(0xc46f, { 0xdc, 0x5b, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x2f51);
        EXPECT(gbc.pc(), 0xc472);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc46f), 0xdc);
        EXPECT(gbc.readMem(0xc470), 0x5b);
        EXPECT(gbc.readMem(0xc471), 0xeb);
        // DC 02DE
        gbc.setState(0xdc53, 0xc9cf, 0x9330, 0xb069, 0x26d9, 0xd077, 0x0, 0x0);
        gbc.writeMem(0xc9cd, { 0x0, 0x0 });
        gbc.writeMem(0xdc53, { 0xdc, 0xf6, 0x29 });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xc9cd);
        EXPECT(gbc.pc(), 0x29f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9cd), 0x56);
        EXPECT(gbc.readMem(0xc9ce), 0xdc);
        EXPECT(gbc.readMem(0xdc53), 0xdc);
        EXPECT(gbc.readMem(0xdc54), 0xf6);
        EXPECT(gbc.readMem(0xdc55), 0x29);
        // DC 02DF
        gbc.setState(0x96f1, 0xe36c, 0xfc30, 0x80f1, 0x52f5, 0x8ec8, 0x1, 0x1);
        gbc.writeMem(0x96f1, { 0xdc, 0xc5, 0x3c });
        gbc.writeMem(0xe36a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xe36a);
        EXPECT(gbc.pc(), 0x3cc5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x96f1), 0xdc);
        EXPECT(gbc.readMem(0x96f2), 0xc5);
        EXPECT(gbc.readMem(0x96f3), 0x3c);
        EXPECT(gbc.readMem(0xe36a), 0xf4);
        EXPECT(gbc.readMem(0xe36b), 0x96);
        // DC 02E0
        gbc.setState(0xb3a, 0x661c, 0xa4a0, 0x43b5, 0x13b, 0xba7c, 0x1, 0x0);
        gbc.writeMem(0xb3a, { 0xdc, 0x1c, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x661c);
        EXPECT(gbc.pc(), 0xb3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 02E1
        gbc.setState(0x663d, 0xd1b5, 0x32e0, 0xc0b1, 0x90b7, 0x299b, 0x1, 0x0);
        gbc.writeMem(0x663d, { 0xdc, 0x18, 0xb4 });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xd1b5);
        EXPECT(gbc.pc(), 0x6640);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 02E4
        gbc.setState(0x75a5, 0x54c2, 0xd4c0, 0x7816, 0x23d, 0x7abd, 0x0, 0x1);
        gbc.writeMem(0x75a5, { 0xdc, 0x1d, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x54c2);
        EXPECT(gbc.pc(), 0x75a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02E5
        gbc.setState(0x2e20, 0x9b6, 0xf020, 0x18b, 0x4cd4, 0xd463, 0x0, 0x1);
        gbc.writeMem(0x2e20, { 0xdc, 0x74, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x9b6);
        EXPECT(gbc.pc(), 0x2e23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 02E7
        gbc.setState(0xbdc2, 0xd2ae, 0x2fd0, 0x54c3, 0x52ea, 0x2bd3, 0x1, 0x0);
        gbc.writeMem(0xbdc2, { 0xdc, 0xac, 0x9a });
        gbc.writeMem(0xd2ac, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xd2ac);
        EXPECT(gbc.pc(), 0x9aac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc2), 0xdc);
        EXPECT(gbc.readMem(0xbdc3), 0xac);
        EXPECT(gbc.readMem(0xbdc4), 0x9a);
        EXPECT(gbc.readMem(0xd2ac), 0xc5);
        EXPECT(gbc.readMem(0xd2ad), 0xbd);
        // DC 02E9
        gbc.setState(0xaeb0, 0x9f21, 0xe440, 0x665d, 0x23a3, 0x1231, 0x1, 0x1);
        gbc.writeMem(0xaeb0, { 0xdc, 0xf5, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x9f21);
        EXPECT(gbc.pc(), 0xaeb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaeb0), 0xdc);
        EXPECT(gbc.readMem(0xaeb1), 0xf5);
        EXPECT(gbc.readMem(0xaeb2), 0x8);
        // DC 02EB
        gbc.setState(0xd4f9, 0xa645, 0x3b30, 0x4c3d, 0x613a, 0xcfe0, 0x0, 0x1);
        gbc.writeMem(0xa643, { 0x0, 0x0 });
        gbc.writeMem(0xd4f9, { 0xdc, 0xe0, 0xd4 });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa643);
        EXPECT(gbc.pc(), 0xd4e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa643), 0xfc);
        EXPECT(gbc.readMem(0xa644), 0xd4);
        EXPECT(gbc.readMem(0xd4f9), 0xdc);
        EXPECT(gbc.readMem(0xd4fa), 0xe0);
        EXPECT(gbc.readMem(0xd4fb), 0xd4);
        // DC 02EC
        gbc.setState(0xf7b, 0xde6d, 0x91e0, 0xf729, 0xe6eb, 0x22b2, 0x1, 0x1);
        gbc.writeMem(0xf7b, { 0xdc, 0x31, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xde6d);
        EXPECT(gbc.pc(), 0xf7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 02ED
        gbc.setState(0x31db, 0xeba3, 0x920, 0x8499, 0x98e3, 0xa0b, 0x1, 0x0);
        gbc.writeMem(0x31db, { 0xdc, 0x12, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xeba3);
        EXPECT(gbc.pc(), 0x31de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 02F0
        gbc.setState(0x6c8, 0xa07c, 0xe1c0, 0xbff1, 0x9822, 0xf5cb, 0x0, 0x0);
        gbc.writeMem(0x6c8, { 0xdc, 0x72, 0x14 });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa07c);
        EXPECT(gbc.pc(), 0x6cb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02F1
        gbc.setState(0x858b, 0xedc8, 0xfaa0, 0x50c5, 0xeade, 0xaeac, 0x0, 0x1);
        gbc.writeMem(0x858b, { 0xdc, 0x1b, 0x2b });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xedc8);
        EXPECT(gbc.pc(), 0x858e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x858b), 0xdc);
        EXPECT(gbc.readMem(0x858c), 0x1b);
        EXPECT(gbc.readMem(0x858d), 0x2b);
        // DC 02F2
        gbc.setState(0xac6c, 0xa67b, 0x58c0, 0x20db, 0x5d74, 0xe646, 0x1, 0x1);
        gbc.writeMem(0xac6c, { 0xdc, 0xc4, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0xa67b);
        EXPECT(gbc.pc(), 0xac6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xac6c), 0xdc);
        EXPECT(gbc.readMem(0xac6d), 0xc4);
        EXPECT(gbc.readMem(0xac6e), 0x48);
        // DC 02F3
        gbc.setState(0x2781, 0xc608, 0x4f10, 0xeece, 0x5fd3, 0x2e1b, 0x1, 0x1);
        gbc.writeMem(0x2781, { 0xdc, 0xa6, 0x5e });
        gbc.writeMem(0xc606, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc606);
        EXPECT(gbc.pc(), 0x5ea6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc606), 0x84);
        EXPECT(gbc.readMem(0xc607), 0x27);
        // DC 02F4
        gbc.setState(0x4650, 0xe075, 0xcc00, 0x1506, 0x8a2b, 0x90e6, 0x1, 0x1);
        gbc.writeMem(0x4650, { 0xdc, 0x76, 0x5d });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe075);
        EXPECT(gbc.pc(), 0x4653);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02F5
        gbc.setState(0xca57, 0xbf2c, 0x91f0, 0xe8ed, 0x3202, 0xbe3d, 0x0, 0x0);
        gbc.writeMem(0xbf2a, { 0x0, 0x0 });
        gbc.writeMem(0xca57, { 0xdc, 0xa1, 0xa3 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xbf2a);
        EXPECT(gbc.pc(), 0xa3a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf2a), 0x5a);
        EXPECT(gbc.readMem(0xbf2b), 0xca);
        EXPECT(gbc.readMem(0xca57), 0xdc);
        EXPECT(gbc.readMem(0xca58), 0xa1);
        EXPECT(gbc.readMem(0xca59), 0xa3);
        // DC 02F6
        gbc.setState(0x2d4, 0xbb3, 0x67e0, 0xc00f, 0x232f, 0x25f9, 0x1, 0x1);
        gbc.writeMem(0x2d4, { 0xdc, 0xa6, 0x1 });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xbb3);
        EXPECT(gbc.pc(), 0x2d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 02F7
        gbc.setState(0x33e1, 0xd4f8, 0xe5e0, 0x5cc0, 0x7d2f, 0x8b39, 0x1, 0x1);
        gbc.writeMem(0x33e1, { 0xdc, 0x40, 0x6d });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xd4f8);
        EXPECT(gbc.pc(), 0x33e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 02F8
        gbc.setState(0x612c, 0xaee0, 0x5e90, 0xecdb, 0x7078, 0x4f77, 0x1, 0x0);
        gbc.writeMem(0x612c, { 0xdc, 0xde, 0x66 });
        gbc.writeMem(0xaede, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0xaede);
        EXPECT(gbc.pc(), 0x66de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaede), 0x2f);
        EXPECT(gbc.readMem(0xaedf), 0x61);
        // DC 02F9
        gbc.setState(0x202e, 0xe4fa, 0xee40, 0x1f78, 0x6f1f, 0xd569, 0x1, 0x0);
        gbc.writeMem(0x202e, { 0xdc, 0xf1, 0xea });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xe4fa);
        EXPECT(gbc.pc(), 0x2031);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 02FB
        gbc.setState(0xb5f, 0x8a6b, 0xdb30, 0xe1da, 0xe9f5, 0x14da, 0x0, 0x1);
        gbc.writeMem(0xb5f, { 0xdc, 0x51, 0x80 });
        gbc.writeMem(0x8a69, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x8a69);
        EXPECT(gbc.pc(), 0x8051);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8a69), 0x62);
        EXPECT(gbc.readMem(0x8a6a), 0xb);
        // DC 02FC
        gbc.setState(0xcf20, 0x2e9f, 0x23a0, 0x755b, 0xeb3d, 0x43ac, 0x0, 0x1);
        gbc.writeMem(0xcf20, { 0xdc, 0xec, 0x66 });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x2e9f);
        EXPECT(gbc.pc(), 0xcf23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf20), 0xdc);
        EXPECT(gbc.readMem(0xcf21), 0xec);
        EXPECT(gbc.readMem(0xcf22), 0x66);
        // DC 02FE
        gbc.setState(0xd56b, 0x69a1, 0x37a0, 0x7959, 0xda0, 0xa127, 0x0, 0x0);
        gbc.writeMem(0xd56b, { 0xdc, 0xe, 0x20 });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x69a1);
        EXPECT(gbc.pc(), 0xd56e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd56b), 0xdc);
        EXPECT(gbc.readMem(0xd56c), 0xe);
        EXPECT(gbc.readMem(0xd56d), 0x20);
        // DC 0300
        gbc.setState(0xc2ed, 0xebc3, 0x6ef0, 0xcd06, 0xb036, 0x5db9, 0x0, 0x1);
        gbc.writeMem(0xc2ed, { 0xdc, 0xfc, 0xe3 });
        gbc.writeMem(0xebc1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xebc1);
        EXPECT(gbc.pc(), 0xe3fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc2ed), 0xdc);
        EXPECT(gbc.readMem(0xc2ee), 0xfc);
        EXPECT(gbc.readMem(0xc2ef), 0xe3);
        EXPECT(gbc.readMem(0xebc1), 0xf0);
        EXPECT(gbc.readMem(0xebc2), 0xc2);
        // DC 0301
        gbc.setState(0x9e76, 0x23ef, 0xca60, 0x1ced, 0x40a8, 0x29ed, 0x0, 0x0);
        gbc.writeMem(0x9e76, { 0xdc, 0xe2, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x23ef);
        EXPECT(gbc.pc(), 0x9e79);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e76), 0xdc);
        EXPECT(gbc.readMem(0x9e77), 0xe2);
        EXPECT(gbc.readMem(0x9e78), 0x84);
        // DC 0302
        gbc.setState(0x718, 0x971, 0x9440, 0x7314, 0x98ea, 0xfb03, 0x1, 0x1);
        gbc.writeMem(0x718, { 0xdc, 0x13, 0x1f });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x971);
        EXPECT(gbc.pc(), 0x71b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0304
        gbc.setState(0x7083, 0x6a50, 0x9400, 0x64fd, 0x8b6e, 0x3d33, 0x0, 0x0);
        gbc.writeMem(0x7083, { 0xdc, 0x76, 0x96 });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x6a50);
        EXPECT(gbc.pc(), 0x7086);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0306
        gbc.setState(0xa5a8, 0xdbf5, 0x8e30, 0x3d4d, 0x591f, 0x818e, 0x0, 0x0);
        gbc.writeMem(0xa5a8, { 0xdc, 0xc4, 0x22 });
        gbc.writeMem(0xdbf3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xdbf3);
        EXPECT(gbc.pc(), 0x22c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5a8), 0xdc);
        EXPECT(gbc.readMem(0xa5a9), 0xc4);
        EXPECT(gbc.readMem(0xa5aa), 0x22);
        EXPECT(gbc.readMem(0xdbf3), 0xab);
        EXPECT(gbc.readMem(0xdbf4), 0xa5);
        // DC 0307
        gbc.setState(0xa471, 0x7c24, 0xc820, 0x243, 0x3c8f, 0x4f4b, 0x0, 0x1);
        gbc.writeMem(0xa471, { 0xdc, 0x37, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x7c24);
        EXPECT(gbc.pc(), 0xa474);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa471), 0xdc);
        EXPECT(gbc.readMem(0xa472), 0x37);
        EXPECT(gbc.readMem(0xa473), 0x5f);
        // DC 0308
        gbc.setState(0xea9a, 0x124, 0xcb20, 0x500, 0xf0af, 0x3919, 0x1, 0x1);
        gbc.writeMem(0xea9a, { 0xdc, 0xb6, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x124);
        EXPECT(gbc.pc(), 0xea9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xea9a), 0xdc);
        EXPECT(gbc.readMem(0xea9b), 0xb6);
        EXPECT(gbc.readMem(0xea9c), 0x33);
        // DC 0309
        gbc.setState(0x8c95, 0x33ad, 0x5d40, 0x717c, 0x3094, 0xfa50, 0x0, 0x1);
        gbc.writeMem(0x8c95, { 0xdc, 0x21, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x33ad);
        EXPECT(gbc.pc(), 0x8c98);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c95), 0xdc);
        EXPECT(gbc.readMem(0x8c96), 0x21);
        EXPECT(gbc.readMem(0x8c97), 0xb);
        // DC 030A
        gbc.setState(0xa507, 0x2700, 0x5960, 0x1bc, 0xd83c, 0xe22a, 0x1, 0x1);
        gbc.writeMem(0xa507, { 0xdc, 0xab, 0x1a });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x2700);
        EXPECT(gbc.pc(), 0xa50a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa507), 0xdc);
        EXPECT(gbc.readMem(0xa508), 0xab);
        EXPECT(gbc.readMem(0xa509), 0x1a);
        // DC 030C
        gbc.setState(0x72a8, 0xf5fc, 0x8e00, 0xd15d, 0xa766, 0x198e, 0x1, 0x1);
        gbc.writeMem(0x72a8, { 0xdc, 0x10, 0x33 });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0xf5fc);
        EXPECT(gbc.pc(), 0x72ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 030D
        gbc.setState(0xdf9d, 0xb132, 0x4670, 0x28d3, 0x1d29, 0x99f8, 0x0, 0x0);
        gbc.writeMem(0xb130, { 0x0, 0x0 });
        gbc.writeMem(0xdf9d, { 0xdc, 0x12, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb130);
        EXPECT(gbc.pc(), 0x6012);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb130), 0xa0);
        EXPECT(gbc.readMem(0xb131), 0xdf);
        EXPECT(gbc.readMem(0xdf9d), 0xdc);
        EXPECT(gbc.readMem(0xdf9e), 0x12);
        EXPECT(gbc.readMem(0xdf9f), 0x60);
        // DC 030E
        gbc.setState(0xd066, 0xaa0e, 0x4180, 0x1b7a, 0x2748, 0x7327, 0x0, 0x0);
        gbc.writeMem(0xd066, { 0xdc, 0x4d, 0xdc });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xaa0e);
        EXPECT(gbc.pc(), 0xd069);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd066), 0xdc);
        EXPECT(gbc.readMem(0xd067), 0x4d);
        EXPECT(gbc.readMem(0xd068), 0xdc);
        // DC 030F
        gbc.setState(0xa92f, 0xfb10, 0xa090, 0x8a20, 0x8854, 0xe7c7, 0x0, 0x1);
        gbc.writeMem(0xa92f, { 0xdc, 0x3, 0xdc });
        gbc.writeMem(0xfb0e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xfb0e);
        EXPECT(gbc.pc(), 0xdc03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa92f), 0xdc);
        EXPECT(gbc.readMem(0xa930), 0x3);
        EXPECT(gbc.readMem(0xa931), 0xdc);
        EXPECT(gbc.readMem(0xfb0e), 0x32);
        EXPECT(gbc.readMem(0xfb0f), 0xa9);
        // DC 0310
        gbc.setState(0x513d, 0x6918, 0xbc00, 0x7b76, 0x663e, 0x29fa, 0x1, 0x0);
        gbc.writeMem(0x513d, { 0xdc, 0xb5, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6918);
        EXPECT(gbc.pc(), 0x5140);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0311
        gbc.setState(0x3f3a, 0x5582, 0x7320, 0x583d, 0x91d9, 0xd723, 0x1, 0x0);
        gbc.writeMem(0x3f3a, { 0xdc, 0x2c, 0x9f });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x5582);
        EXPECT(gbc.pc(), 0x3f3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0315
        gbc.setState(0x325e, 0x912d, 0x3c10, 0x818e, 0xf4fa, 0xc2b8, 0x0, 0x0);
        gbc.writeMem(0x325e, { 0xdc, 0xc, 0xbd });
        gbc.writeMem(0x912b, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x912b);
        EXPECT(gbc.pc(), 0xbd0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x912b), 0x61);
        EXPECT(gbc.readMem(0x912c), 0x32);
        // DC 0316
        gbc.setState(0xafdf, 0xa708, 0xde70, 0xcbed, 0x762c, 0x8a73, 0x1, 0x0);
        gbc.writeMem(0xa706, { 0x0, 0x0 });
        gbc.writeMem(0xafdf, { 0xdc, 0xb3, 0x68 });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa706);
        EXPECT(gbc.pc(), 0x68b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa706), 0xe2);
        EXPECT(gbc.readMem(0xa707), 0xaf);
        EXPECT(gbc.readMem(0xafdf), 0xdc);
        EXPECT(gbc.readMem(0xafe0), 0xb3);
        EXPECT(gbc.readMem(0xafe1), 0x68);
        // DC 0317
        gbc.setState(0x99d3, 0x7497, 0xb480, 0x1086, 0xa9ca, 0x4250, 0x1, 0x1);
        gbc.writeMem(0x99d3, { 0xdc, 0x85, 0x54 });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x7497);
        EXPECT(gbc.pc(), 0x99d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x99d3), 0xdc);
        EXPECT(gbc.readMem(0x99d4), 0x85);
        EXPECT(gbc.readMem(0x99d5), 0x54);
        // DC 0318
        gbc.setState(0xc422, 0xaf86, 0x2c60, 0x443e, 0xa804, 0xb0aa, 0x0, 0x1);
        gbc.writeMem(0xc422, { 0xdc, 0xef, 0x48 });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xaf86);
        EXPECT(gbc.pc(), 0xc425);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc422), 0xdc);
        EXPECT(gbc.readMem(0xc423), 0xef);
        EXPECT(gbc.readMem(0xc424), 0x48);
        // DC 0319
        gbc.setState(0xefe3, 0x5ee7, 0xa860, 0x905a, 0x62c8, 0x236e, 0x0, 0x1);
        gbc.writeMem(0xefe3, { 0xdc, 0x71, 0x59 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x5ee7);
        EXPECT(gbc.pc(), 0xefe6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefe3), 0xdc);
        EXPECT(gbc.readMem(0xefe4), 0x71);
        EXPECT(gbc.readMem(0xefe5), 0x59);
        // DC 031A
        gbc.setState(0x761e, 0xacc3, 0xefe0, 0xc31, 0xaac8, 0x154e, 0x1, 0x0);
        gbc.writeMem(0x761e, { 0xdc, 0xc, 0x8b });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xacc3);
        EXPECT(gbc.pc(), 0x7621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 031B
        gbc.setState(0x2969, 0xd1d1, 0x5e00, 0x2492, 0xebac, 0x68ab, 0x0, 0x1);
        gbc.writeMem(0x2969, { 0xdc, 0xd6, 0xa });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd1d1);
        EXPECT(gbc.pc(), 0x296c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 031C
        gbc.setState(0x5c53, 0x7a2c, 0xdf20, 0x4978, 0x9d8c, 0xb866, 0x0, 0x1);
        gbc.writeMem(0x5c53, { 0xdc, 0xda, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x7a2c);
        EXPECT(gbc.pc(), 0x5c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 031F
        gbc.setState(0x982c, 0xd542, 0x46d0, 0x4011, 0xe9c6, 0x573b, 0x0, 0x0);
        gbc.writeMem(0x982c, { 0xdc, 0x42, 0xef });
        gbc.writeMem(0xd540, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xd540);
        EXPECT(gbc.pc(), 0xef42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x982c), 0xdc);
        EXPECT(gbc.readMem(0x982d), 0x42);
        EXPECT(gbc.readMem(0x982e), 0xef);
        EXPECT(gbc.readMem(0xd540), 0x2f);
        EXPECT(gbc.readMem(0xd541), 0x98);
        // DC 0320
        gbc.setState(0x6e68, 0xed6a, 0x40d0, 0xa3ef, 0xfd4d, 0xe4be, 0x1, 0x1);
        gbc.writeMem(0x6e68, { 0xdc, 0xa6, 0xa8 });
        gbc.writeMem(0xed68, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0xfd);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xed68);
        EXPECT(gbc.pc(), 0xa8a6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xed68), 0x6b);
        EXPECT(gbc.readMem(0xed69), 0x6e);
        // DC 0321
        gbc.setState(0xb519, 0x81c6, 0xa990, 0x2f85, 0x39e1, 0x1ac8, 0x0, 0x0);
        gbc.writeMem(0x81c4, { 0x0, 0x0 });
        gbc.writeMem(0xb519, { 0xdc, 0x38, 0x62 });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x81c4);
        EXPECT(gbc.pc(), 0x6238);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81c4), 0x1c);
        EXPECT(gbc.readMem(0x81c5), 0xb5);
        EXPECT(gbc.readMem(0xb519), 0xdc);
        EXPECT(gbc.readMem(0xb51a), 0x38);
        EXPECT(gbc.readMem(0xb51b), 0x62);
        // DC 0323
        gbc.setState(0xcfbc, 0xd1c8, 0x7190, 0xe255, 0xbe64, 0x58a0, 0x1, 0x0);
        gbc.writeMem(0xcfbc, { 0xdc, 0xf9, 0x4f });
        gbc.writeMem(0xd1c6, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x58);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xd1c6);
        EXPECT(gbc.pc(), 0x4ff9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfbc), 0xdc);
        EXPECT(gbc.readMem(0xcfbd), 0xf9);
        EXPECT(gbc.readMem(0xcfbe), 0x4f);
        EXPECT(gbc.readMem(0xd1c6), 0xbf);
        EXPECT(gbc.readMem(0xd1c7), 0xcf);
        // DC 0324
        gbc.setState(0xbe80, 0x8932, 0x52f0, 0x4b1, 0xea11, 0x1303, 0x0, 0x0);
        gbc.writeMem(0x8930, { 0x0, 0x0 });
        gbc.writeMem(0xbe80, { 0xdc, 0x3, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x8930);
        EXPECT(gbc.pc(), 0x1203);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8930), 0x83);
        EXPECT(gbc.readMem(0x8931), 0xbe);
        EXPECT(gbc.readMem(0xbe80), 0xdc);
        EXPECT(gbc.readMem(0xbe81), 0x3);
        EXPECT(gbc.readMem(0xbe82), 0x12);
        // DC 0325
        gbc.setState(0x5fee, 0x1284, 0xf9a0, 0x8a7b, 0xce4e, 0xd5b4, 0x0, 0x1);
        gbc.writeMem(0x5fee, { 0xdc, 0x2d, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0xb4);
        EXPECT(gbc.sp(), 0x1284);
        EXPECT(gbc.pc(), 0x5ff1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0329
        gbc.setState(0x5328, 0x84de, 0xaa00, 0x6383, 0xa5d8, 0xd7ae, 0x1, 0x1);
        gbc.writeMem(0x5328, { 0xdc, 0xb6, 0x49 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0x84de);
        EXPECT(gbc.pc(), 0x532b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 032A
        gbc.setState(0x5296, 0xd6b3, 0xf4f0, 0x62fe, 0x3cd5, 0x49c6, 0x1, 0x0);
        gbc.writeMem(0x5296, { 0xdc, 0x4f, 0xd });
        gbc.writeMem(0xd6b1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xd6b1);
        EXPECT(gbc.pc(), 0xd4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6b1), 0x99);
        EXPECT(gbc.readMem(0xd6b2), 0x52);
        // DC 032C
        gbc.setState(0x57a2, 0x94ee, 0x1b00, 0x462c, 0xbc04, 0xf274, 0x1, 0x0);
        gbc.writeMem(0x57a2, { 0xdc, 0x8, 0xd5 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x94ee);
        EXPECT(gbc.pc(), 0x57a5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 032D
        gbc.setState(0xb729, 0x69e4, 0xc080, 0x6090, 0x46e1, 0x4ed7, 0x1, 0x0);
        gbc.writeMem(0xb729, { 0xdc, 0x4a, 0x8f });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x69e4);
        EXPECT(gbc.pc(), 0xb72c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb729), 0xdc);
        EXPECT(gbc.readMem(0xb72a), 0x4a);
        EXPECT(gbc.readMem(0xb72b), 0x8f);
        // DC 032E
        gbc.setState(0xd355, 0xd662, 0xe900, 0x4601, 0xff04, 0x1f3e, 0x1, 0x1);
        gbc.writeMem(0xd355, { 0xdc, 0x1b, 0x8d });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x3e);
        EXPECT(gbc.sp(), 0xd662);
        EXPECT(gbc.pc(), 0xd358);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd355), 0xdc);
        EXPECT(gbc.readMem(0xd356), 0x1b);
        EXPECT(gbc.readMem(0xd357), 0x8d);
        // DC 032F
        gbc.setState(0xd5ba, 0x4784, 0xc5e0, 0xf4b, 0xaf8, 0x13d5, 0x0, 0x0);
        gbc.writeMem(0xd5ba, { 0xdc, 0x86, 0xb5 });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x4784);
        EXPECT(gbc.pc(), 0xd5bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd5ba), 0xdc);
        EXPECT(gbc.readMem(0xd5bb), 0x86);
        EXPECT(gbc.readMem(0xd5bc), 0xb5);
        // DC 0330
        gbc.setState(0x8a2e, 0x82b2, 0x16c0, 0xc9df, 0xfe39, 0x573b, 0x1, 0x1);
        gbc.writeMem(0x8a2e, { 0xdc, 0xba, 0xba });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x82b2);
        EXPECT(gbc.pc(), 0x8a31);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a2e), 0xdc);
        EXPECT(gbc.readMem(0x8a2f), 0xba);
        EXPECT(gbc.readMem(0x8a30), 0xba);
        // DC 0331
        gbc.setState(0x2ee1, 0x599d, 0xeb40, 0xc451, 0x1227, 0xb865, 0x1, 0x1);
        gbc.writeMem(0x2ee1, { 0xdc, 0x60, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x599d);
        EXPECT(gbc.pc(), 0x2ee4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0332
        gbc.setState(0x6111, 0xd6b3, 0xf0d0, 0x3217, 0x7129, 0x3534, 0x1, 0x1);
        gbc.writeMem(0x6111, { 0xdc, 0x90, 0xe9 });
        gbc.writeMem(0xd6b1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xd6b1);
        EXPECT(gbc.pc(), 0xe990);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd6b1), 0x14);
        EXPECT(gbc.readMem(0xd6b2), 0x61);
        // DC 0333
        gbc.setState(0xccd7, 0x1e0c, 0xdc80, 0xac48, 0x187d, 0xf752, 0x1, 0x0);
        gbc.writeMem(0xccd7, { 0xdc, 0xbb, 0x4e });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x1e0c);
        EXPECT(gbc.pc(), 0xccda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xccd7), 0xdc);
        EXPECT(gbc.readMem(0xccd8), 0xbb);
        EXPECT(gbc.readMem(0xccd9), 0x4e);
        // DC 0334
        gbc.setState(0x53a, 0x635a, 0x9ea0, 0x9ec4, 0x5386, 0x47be, 0x1, 0x1);
        gbc.writeMem(0x53a, { 0xdc, 0xa6, 0x12 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x635a);
        EXPECT(gbc.pc(), 0x53d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0335
        gbc.setState(0x1a, 0x76de, 0xb7c0, 0x9dc0, 0xbf68, 0x5754, 0x1, 0x1);
        gbc.writeMem(0x1a, { 0xdc, 0x5c, 0xf7 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x76de);
        EXPECT(gbc.pc(), 0x1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0336
        gbc.setState(0x4ea4, 0x43de, 0x87c0, 0x9fdd, 0xa2b0, 0x268b, 0x0, 0x0);
        gbc.writeMem(0x4ea4, { 0xdc, 0x93, 0xd2 });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x43de);
        EXPECT(gbc.pc(), 0x4ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0337
        gbc.setState(0xc95f, 0xecbd, 0x790, 0x9a2e, 0x2f93, 0x6c69, 0x1, 0x0);
        gbc.writeMem(0xc95f, { 0xdc, 0xf5, 0x52 });
        gbc.writeMem(0xecbb, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xecbb);
        EXPECT(gbc.pc(), 0x52f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc95f), 0xdc);
        EXPECT(gbc.readMem(0xc960), 0xf5);
        EXPECT(gbc.readMem(0xc961), 0x52);
        EXPECT(gbc.readMem(0xecbb), 0x62);
        EXPECT(gbc.readMem(0xecbc), 0xc9);
        // DC 0338
        gbc.setState(0x76c, 0xa036, 0xbac0, 0x6c14, 0xd15, 0x167, 0x1, 0x0);
        gbc.writeMem(0x76c, { 0xdc, 0x58, 0xa0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0xa036);
        EXPECT(gbc.pc(), 0x76f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0339
        gbc.setState(0x868f, 0x18cd, 0xb0a0, 0xb39c, 0x958a, 0x8974, 0x0, 0x1);
        gbc.writeMem(0x868f, { 0xdc, 0x2b, 0xeb });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x18cd);
        EXPECT(gbc.pc(), 0x8692);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x868f), 0xdc);
        EXPECT(gbc.readMem(0x8690), 0x2b);
        EXPECT(gbc.readMem(0x8691), 0xeb);
        // DC 033A
        gbc.setState(0x858a, 0xe3d5, 0xed30, 0xe783, 0x8307, 0x2456, 0x0, 0x0);
        gbc.writeMem(0x858a, { 0xdc, 0x37, 0x1b });
        gbc.writeMem(0xe3d3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x83);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0xe3d3);
        EXPECT(gbc.pc(), 0x1b37);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x858a), 0xdc);
        EXPECT(gbc.readMem(0x858b), 0x37);
        EXPECT(gbc.readMem(0x858c), 0x1b);
        EXPECT(gbc.readMem(0xe3d3), 0x8d);
        EXPECT(gbc.readMem(0xe3d4), 0x85);
        // DC 033B
        gbc.setState(0x1120, 0x1f78, 0x7600, 0xcf59, 0x52ff, 0x366, 0x1, 0x1);
        gbc.writeMem(0x1120, { 0xdc, 0x3e, 0xd0 });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x1f78);
        EXPECT(gbc.pc(), 0x1123);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 033C
        gbc.setState(0xbd28, 0xaa93, 0xa280, 0xa633, 0xb303, 0x9b0f, 0x1, 0x1);
        gbc.writeMem(0xbd28, { 0xdc, 0x40, 0xe9 });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xaa93);
        EXPECT(gbc.pc(), 0xbd2b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd28), 0xdc);
        EXPECT(gbc.readMem(0xbd29), 0x40);
        EXPECT(gbc.readMem(0xbd2a), 0xe9);
        // DC 033D
        gbc.setState(0xe056, 0x8f73, 0xf200, 0x2bbb, 0x137, 0x620f, 0x1, 0x1);
        gbc.writeMem(0xe056, { 0xdc, 0xc6, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x8f73);
        EXPECT(gbc.pc(), 0xe059);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe056), 0xdc);
        EXPECT(gbc.readMem(0xe057), 0xc6);
        EXPECT(gbc.readMem(0xe058), 0x5);
        // DC 033E
        gbc.setState(0x93b8, 0x2021, 0xb20, 0x7453, 0x156f, 0x4c94, 0x1, 0x0);
        gbc.writeMem(0x93b8, { 0xdc, 0x7a, 0xd9 });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x2021);
        EXPECT(gbc.pc(), 0x93bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93b8), 0xdc);
        EXPECT(gbc.readMem(0x93b9), 0x7a);
        EXPECT(gbc.readMem(0x93ba), 0xd9);
        // DC 033F
        gbc.setState(0xe35f, 0x4ea5, 0xb260, 0xb8d6, 0xf5f6, 0x2635, 0x1, 0x0);
        gbc.writeMem(0xe35f, { 0xdc, 0xcb, 0x28 });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x4ea5);
        EXPECT(gbc.pc(), 0xe362);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe35f), 0xdc);
        EXPECT(gbc.readMem(0xe360), 0xcb);
        EXPECT(gbc.readMem(0xe361), 0x28);
        // DC 0341
        gbc.setState(0xdba8, 0x2d12, 0x9740, 0xcdb0, 0xf295, 0x3769, 0x0, 0x1);
        gbc.writeMem(0xdba8, { 0xdc, 0x3a, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xb0);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x2d12);
        EXPECT(gbc.pc(), 0xdbab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdba8), 0xdc);
        EXPECT(gbc.readMem(0xdba9), 0x3a);
        EXPECT(gbc.readMem(0xdbaa), 0x3c);
        // DC 0342
        gbc.setState(0xb86d, 0x895e, 0xf610, 0x834a, 0x6c1c, 0xf833, 0x0, 0x1);
        gbc.writeMem(0x895c, { 0x0, 0x0 });
        gbc.writeMem(0xb86d, { 0xdc, 0x15, 0xdd });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x895c);
        EXPECT(gbc.pc(), 0xdd15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x895c), 0x70);
        EXPECT(gbc.readMem(0x895d), 0xb8);
        EXPECT(gbc.readMem(0xb86d), 0xdc);
        EXPECT(gbc.readMem(0xb86e), 0x15);
        EXPECT(gbc.readMem(0xb86f), 0xdd);
        // DC 0343
        gbc.setState(0x3cc9, 0xcd88, 0xf9e0, 0x9cab, 0x6a63, 0x257, 0x0, 0x1);
        gbc.writeMem(0x3cc9, { 0xdc, 0xab, 0x5 });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0xcd88);
        EXPECT(gbc.pc(), 0x3ccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0344
        gbc.setState(0xbbf9, 0xcbf3, 0xa8d0, 0x8420, 0x362d, 0x61e7, 0x0, 0x1);
        gbc.writeMem(0xbbf9, { 0xdc, 0x14, 0x97 });
        gbc.writeMem(0xcbf1, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x84);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcbf1);
        EXPECT(gbc.pc(), 0x9714);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbf9), 0xdc);
        EXPECT(gbc.readMem(0xbbfa), 0x14);
        EXPECT(gbc.readMem(0xbbfb), 0x97);
        EXPECT(gbc.readMem(0xcbf1), 0xfc);
        EXPECT(gbc.readMem(0xcbf2), 0xbb);
        // DC 0345
        gbc.setState(0x9bd3, 0x959d, 0x3f50, 0x6d38, 0x4dfc, 0x389f, 0x0, 0x1);
        gbc.writeMem(0x959b, { 0x0, 0x0 });
        gbc.writeMem(0x9bd3, { 0xdc, 0x74, 0xe0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x959b);
        EXPECT(gbc.pc(), 0xe074);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x959b), 0xd6);
        EXPECT(gbc.readMem(0x959c), 0x9b);
        EXPECT(gbc.readMem(0x9bd3), 0xdc);
        EXPECT(gbc.readMem(0x9bd4), 0x74);
        EXPECT(gbc.readMem(0x9bd5), 0xe0);
        // DC 0348
        gbc.setState(0xda58, 0xbc0c, 0x8f70, 0x2a33, 0xf88, 0x62fb, 0x1, 0x0);
        gbc.writeMem(0xbc0a, { 0x0, 0x0 });
        gbc.writeMem(0xda58, { 0xdc, 0xf6, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xbc0a);
        EXPECT(gbc.pc(), 0x5af6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc0a), 0x5b);
        EXPECT(gbc.readMem(0xbc0b), 0xda);
        EXPECT(gbc.readMem(0xda58), 0xdc);
        EXPECT(gbc.readMem(0xda59), 0xf6);
        EXPECT(gbc.readMem(0xda5a), 0x5a);
        // DC 0349
        gbc.setState(0xb29e, 0x83c3, 0x6650, 0x4c70, 0x3aad, 0x9910, 0x1, 0x0);
        gbc.writeMem(0x83c1, { 0x0, 0x0 });
        gbc.writeMem(0xb29e, { 0xdc, 0xed, 0x4a });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x83c1);
        EXPECT(gbc.pc(), 0x4aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83c1), 0xa1);
        EXPECT(gbc.readMem(0x83c2), 0xb2);
        EXPECT(gbc.readMem(0xb29e), 0xdc);
        EXPECT(gbc.readMem(0xb29f), 0xed);
        EXPECT(gbc.readMem(0xb2a0), 0x4a);
        // DC 034A
        gbc.setState(0xcfaa, 0xba9f, 0x5d10, 0xd7d0, 0x206d, 0xfb65, 0x0, 0x0);
        gbc.writeMem(0xba9d, { 0x0, 0x0 });
        gbc.writeMem(0xcfaa, { 0xdc, 0x23, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xba9d);
        EXPECT(gbc.pc(), 0xaf23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba9d), 0xad);
        EXPECT(gbc.readMem(0xba9e), 0xcf);
        EXPECT(gbc.readMem(0xcfaa), 0xdc);
        EXPECT(gbc.readMem(0xcfab), 0x23);
        EXPECT(gbc.readMem(0xcfac), 0xaf);
        // DC 034C
        gbc.setState(0xef74, 0xf6f1, 0xcab0, 0x4c40, 0xe7e0, 0x7b13, 0x0, 0x1);
        gbc.writeMem(0xef74, { 0xdc, 0x2b, 0x23 });
        gbc.writeMem(0xf6ef, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xf6ef);
        EXPECT(gbc.pc(), 0x232b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xef74), 0xdc);
        EXPECT(gbc.readMem(0xef75), 0x2b);
        EXPECT(gbc.readMem(0xef76), 0x23);
        EXPECT(gbc.readMem(0xf6ef), 0x77);
        EXPECT(gbc.readMem(0xf6f0), 0xef);
        // DC 034D
        gbc.setState(0x4d00, 0xc08e, 0x1530, 0x1c, 0x42c, 0x555e, 0x0, 0x1);
        gbc.writeMem(0x4d00, { 0xdc, 0x3e, 0xf });
        gbc.writeMem(0xc08c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0xc08c);
        EXPECT(gbc.pc(), 0xf3e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc08c), 0x3);
        EXPECT(gbc.readMem(0xc08d), 0x4d);
        // DC 034F
        gbc.setState(0x6098, 0xc07e, 0x1850, 0x43e3, 0x26ff, 0x4265, 0x0, 0x1);
        gbc.writeMem(0x6098, { 0xdc, 0xef, 0x23 });
        gbc.writeMem(0xc07c, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0xc07c);
        EXPECT(gbc.pc(), 0x23ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc07c), 0x9b);
        EXPECT(gbc.readMem(0xc07d), 0x60);
        // DC 0352
        gbc.setState(0xe3fd, 0xa7e5, 0x88b0, 0x4046, 0xd6bc, 0x22e6, 0x1, 0x1);
        gbc.writeMem(0xa7e3, { 0x0, 0x0 });
        gbc.writeMem(0xe3fd, { 0xdc, 0xd4, 0x5f });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xa7e3);
        EXPECT(gbc.pc(), 0x5fd4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7e3), 0x0);
        EXPECT(gbc.readMem(0xa7e4), 0xe4);
        EXPECT(gbc.readMem(0xe3fd), 0xdc);
        EXPECT(gbc.readMem(0xe3fe), 0xd4);
        EXPECT(gbc.readMem(0xe3ff), 0x5f);
        // DC 0353
        gbc.setState(0x8da9, 0xf585, 0x8610, 0x13a8, 0x98f8, 0x5680, 0x0, 0x1);
        gbc.writeMem(0x8da9, { 0xdc, 0xc3, 0xe1 });
        gbc.writeMem(0xf583, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xf583);
        EXPECT(gbc.pc(), 0xe1c3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8da9), 0xdc);
        EXPECT(gbc.readMem(0x8daa), 0xc3);
        EXPECT(gbc.readMem(0x8dab), 0xe1);
        EXPECT(gbc.readMem(0xf583), 0xac);
        EXPECT(gbc.readMem(0xf584), 0x8d);
        // DC 0355
        gbc.setState(0x5d76, 0x9da7, 0x6e30, 0x63df, 0x605f, 0x5da2, 0x1, 0x1);
        gbc.writeMem(0x5d76, { 0xdc, 0xba, 0xb2 });
        gbc.writeMem(0x9da5, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0x9da5);
        EXPECT(gbc.pc(), 0xb2ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9da5), 0x79);
        EXPECT(gbc.readMem(0x9da6), 0x5d);
        // DC 0356
        gbc.setState(0x8acb, 0x7b57, 0xa680, 0x957, 0x360c, 0xb075, 0x1, 0x1);
        gbc.writeMem(0x8acb, { 0xdc, 0x3b, 0x17 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x7b57);
        EXPECT(gbc.pc(), 0x8ace);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8acb), 0xdc);
        EXPECT(gbc.readMem(0x8acc), 0x3b);
        EXPECT(gbc.readMem(0x8acd), 0x17);
        // DC 0357
        gbc.setState(0x8948, 0x9d4c, 0xee00, 0xe965, 0xd5a3, 0x6a6a, 0x1, 0x0);
        gbc.writeMem(0x8948, { 0xdc, 0x12, 0x7c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x9d4c);
        EXPECT(gbc.pc(), 0x894b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8948), 0xdc);
        EXPECT(gbc.readMem(0x8949), 0x12);
        EXPECT(gbc.readMem(0x894a), 0x7c);
        // DC 035A
        gbc.setState(0xef00, 0x9a0d, 0x4d00, 0x816, 0xb4ab, 0x7698, 0x0, 0x1);
        gbc.writeMem(0xef00, { 0xdc, 0xb1, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x9a0d);
        EXPECT(gbc.pc(), 0xef03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef00), 0xdc);
        EXPECT(gbc.readMem(0xef01), 0xb1);
        EXPECT(gbc.readMem(0xef02), 0x30);
        // DC 035B
        gbc.setState(0x5e5e, 0x5031, 0x1b20, 0xef60, 0x3515, 0x5500, 0x1, 0x1);
        gbc.writeMem(0x5e5e, { 0xdc, 0x2e, 0x65 });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0xef);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x5031);
        EXPECT(gbc.pc(), 0x5e61);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 035C
        gbc.setState(0x7b16, 0x9984, 0xae10, 0x95e8, 0x2d71, 0x63ef, 0x1, 0x1);
        gbc.writeMem(0x7b16, { 0xdc, 0x42, 0x2f });
        gbc.writeMem(0x9982, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9982);
        EXPECT(gbc.pc(), 0x2f42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9982), 0x19);
        EXPECT(gbc.readMem(0x9983), 0x7b);
        // DC 035D
        gbc.setState(0xd730, 0x8b59, 0x8870, 0xcae6, 0x9d05, 0x7f40, 0x1, 0x0);
        gbc.writeMem(0x8b57, { 0x0, 0x0 });
        gbc.writeMem(0xd730, { 0xdc, 0x75, 0xfc });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x8b57);
        EXPECT(gbc.pc(), 0xfc75);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b57), 0x33);
        EXPECT(gbc.readMem(0x8b58), 0xd7);
        EXPECT(gbc.readMem(0xd730), 0xdc);
        EXPECT(gbc.readMem(0xd731), 0x75);
        EXPECT(gbc.readMem(0xd732), 0xfc);
        // DC 0360
        gbc.setState(0xbd87, 0xa1a7, 0xff20, 0xb26c, 0x2324, 0x81c6, 0x1, 0x0);
        gbc.writeMem(0xbd87, { 0xdc, 0xbe, 0xc9 });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xa1a7);
        EXPECT(gbc.pc(), 0xbd8a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd87), 0xdc);
        EXPECT(gbc.readMem(0xbd88), 0xbe);
        EXPECT(gbc.readMem(0xbd89), 0xc9);
        // DC 0361
        gbc.setState(0xedac, 0x432e, 0xd980, 0x3a2b, 0xb295, 0x9cc0, 0x1, 0x1);
        gbc.writeMem(0xedac, { 0xdc, 0x5b, 0x5b });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x432e);
        EXPECT(gbc.pc(), 0xedaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedac), 0xdc);
        EXPECT(gbc.readMem(0xedad), 0x5b);
        EXPECT(gbc.readMem(0xedae), 0x5b);
        // DC 0362
        gbc.setState(0xbceb, 0x4e9d, 0x5d40, 0x75f3, 0x4d2a, 0x7940, 0x0, 0x1);
        gbc.writeMem(0xbceb, { 0xdc, 0xa2, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x79);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x4e9d);
        EXPECT(gbc.pc(), 0xbcee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbceb), 0xdc);
        EXPECT(gbc.readMem(0xbcec), 0xa2);
        EXPECT(gbc.readMem(0xbced), 0xbb);
        // DC 0363
        gbc.setState(0xe6e7, 0xc4fc, 0xddd0, 0x656c, 0xe082, 0x1930, 0x1, 0x1);
        gbc.writeMem(0xc4fa, { 0x0, 0x0 });
        gbc.writeMem(0xe6e7, { 0xdc, 0xea, 0x80 });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xc4fa);
        EXPECT(gbc.pc(), 0x80ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc4fa), 0xea);
        EXPECT(gbc.readMem(0xc4fb), 0xe6);
        EXPECT(gbc.readMem(0xe6e7), 0xdc);
        EXPECT(gbc.readMem(0xe6e8), 0xea);
        EXPECT(gbc.readMem(0xe6e9), 0x80);
        // DC 0365
        gbc.setState(0x88b7, 0xfa73, 0x9210, 0x86bb, 0x5ffc, 0x21bb, 0x0, 0x1);
        gbc.writeMem(0x88b7, { 0xdc, 0xe5, 0x69 });
        gbc.writeMem(0xfa71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xfa71);
        EXPECT(gbc.pc(), 0x69e5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88b7), 0xdc);
        EXPECT(gbc.readMem(0x88b8), 0xe5);
        EXPECT(gbc.readMem(0x88b9), 0x69);
        EXPECT(gbc.readMem(0xfa71), 0xba);
        EXPECT(gbc.readMem(0xfa72), 0x88);
        // DC 0366
        gbc.setState(0x64f9, 0x94cf, 0xeb60, 0x43, 0xc757, 0xae36, 0x1, 0x0);
        gbc.writeMem(0x64f9, { 0xdc, 0xc3, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x36);
        EXPECT(gbc.sp(), 0x94cf);
        EXPECT(gbc.pc(), 0x64fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0367
        gbc.setState(0xec0d, 0x542c, 0x77c0, 0x58a, 0x2e44, 0x5fc8, 0x0, 0x0);
        gbc.writeMem(0xec0d, { 0xdc, 0x72, 0xc5 });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x542c);
        EXPECT(gbc.pc(), 0xec10);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xec0d), 0xdc);
        EXPECT(gbc.readMem(0xec0e), 0x72);
        EXPECT(gbc.readMem(0xec0f), 0xc5);
        // DC 0368
        gbc.setState(0x4c4d, 0x7210, 0x7120, 0xdfba, 0x970f, 0xce1f, 0x1, 0x0);
        gbc.writeMem(0x4c4d, { 0xdc, 0xcc, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7210);
        EXPECT(gbc.pc(), 0x4c50);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0369
        gbc.setState(0x8b5d, 0xfe9c, 0xcdb0, 0x12f4, 0x7fe4, 0x9f89, 0x0, 0x0);
        gbc.writeMem(0x8b5d, { 0xdc, 0x60, 0xc5 });
        gbc.writeMem(0xfe9a, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x12);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xfe9a);
        EXPECT(gbc.pc(), 0xc560);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b5d), 0xdc);
        EXPECT(gbc.readMem(0x8b5e), 0x60);
        EXPECT(gbc.readMem(0x8b5f), 0xc5);
        EXPECT(gbc.readMem(0xfe9a), 0x60);
        EXPECT(gbc.readMem(0xfe9b), 0x8b);
        // DC 036A
        gbc.setState(0x8b1f, 0x6406, 0xe020, 0x9f0b, 0x1aff, 0xfb35, 0x1, 0x0);
        gbc.writeMem(0x8b1f, { 0xdc, 0xf5, 0x7f });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x6406);
        EXPECT(gbc.pc(), 0x8b22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b1f), 0xdc);
        EXPECT(gbc.readMem(0x8b20), 0xf5);
        EXPECT(gbc.readMem(0x8b21), 0x7f);
        // DC 036B
        gbc.setState(0x63ce, 0x9897, 0x1ee0, 0x4b1b, 0x4e6b, 0xb197, 0x0, 0x0);
        gbc.writeMem(0x63ce, { 0xdc, 0x5b, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x9897);
        EXPECT(gbc.pc(), 0x63d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 036D
        gbc.setState(0x6c8e, 0xf343, 0x83f0, 0xfd64, 0xb69f, 0x6bc5, 0x0, 0x1);
        gbc.writeMem(0x6c8e, { 0xdc, 0x9e, 0x93 });
        gbc.writeMem(0xf341, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xf341);
        EXPECT(gbc.pc(), 0x939e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf341), 0x91);
        EXPECT(gbc.readMem(0xf342), 0x6c);
        // DC 036E
        gbc.setState(0x128e, 0xfb13, 0x6980, 0x7ceb, 0xf36d, 0x51b1, 0x0, 0x1);
        gbc.writeMem(0x128e, { 0xdc, 0x17, 0xd3 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xfb13);
        EXPECT(gbc.pc(), 0x1291);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 036F
        gbc.setState(0x6ca8, 0x417f, 0x3a20, 0x99ef, 0x667a, 0xd95c, 0x1, 0x1);
        gbc.writeMem(0x6ca8, { 0xdc, 0x88, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x417f);
        EXPECT(gbc.pc(), 0x6cab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 0370
        gbc.setState(0x1b44, 0xb2b9, 0x3a10, 0xe221, 0x4a3f, 0x96ca, 0x0, 0x0);
        gbc.writeMem(0x1b44, { 0xdc, 0xfd, 0xb3 });
        gbc.writeMem(0xb2b7, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0xb2b7);
        EXPECT(gbc.pc(), 0xb3fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb2b7), 0x47);
        EXPECT(gbc.readMem(0xb2b8), 0x1b);
        // DC 0371
        gbc.setState(0x2ff8, 0x8461, 0xba10, 0x614b, 0xc73f, 0xeea5, 0x0, 0x0);
        gbc.writeMem(0x2ff8, { 0xdc, 0x44, 0xf4 });
        gbc.writeMem(0x845f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x845f);
        EXPECT(gbc.pc(), 0xf444);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x845f), 0xfb);
        EXPECT(gbc.readMem(0x8460), 0x2f);
        // DC 0373
        gbc.setState(0x3cc4, 0xcb11, 0x91b0, 0x2240, 0x2aac, 0x98e7, 0x1, 0x0);
        gbc.writeMem(0x3cc4, { 0xdc, 0x93, 0x67 });
        gbc.writeMem(0xcb0f, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xcb0f);
        EXPECT(gbc.pc(), 0x6793);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb0f), 0xc7);
        EXPECT(gbc.readMem(0xcb10), 0x3c);
        // DC 0374
        gbc.setState(0x4c69, 0x99fb, 0xbe50, 0xeefa, 0x9f3, 0xff92, 0x0, 0x0);
        gbc.writeMem(0x4c69, { 0xdc, 0x75, 0x4 });
        gbc.writeMem(0x99f9, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x99f9);
        EXPECT(gbc.pc(), 0x475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99f9), 0x6c);
        EXPECT(gbc.readMem(0x99fa), 0x4c);
        // DC 0375
        gbc.setState(0xcba7, 0x41fb, 0x1520, 0x1d41, 0x7cfe, 0xc057, 0x0, 0x1);
        gbc.writeMem(0xcba7, { 0xdc, 0x5b, 0xab });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x41fb);
        EXPECT(gbc.pc(), 0xcbaa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcba7), 0xdc);
        EXPECT(gbc.readMem(0xcba8), 0x5b);
        EXPECT(gbc.readMem(0xcba9), 0xab);
        // DC 0376
        gbc.setState(0x6aa9, 0x9ac5, 0xed90, 0x5ad2, 0x7370, 0xd568, 0x0, 0x0);
        gbc.writeMem(0x6aa9, { 0xdc, 0xcf, 0x8d });
        gbc.writeMem(0x9ac3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xed);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x9ac3);
        EXPECT(gbc.pc(), 0x8dcf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9ac3), 0xac);
        EXPECT(gbc.readMem(0x9ac4), 0x6a);
        // DC 0377
        gbc.setState(0x6ef9, 0x809b, 0xb510, 0xfe27, 0x11ae, 0xc601, 0x1, 0x0);
        gbc.writeMem(0x6ef9, { 0xdc, 0xe9, 0x4e });
        gbc.writeMem(0x8099, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x8099);
        EXPECT(gbc.pc(), 0x4ee9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8099), 0xfc);
        EXPECT(gbc.readMem(0x809a), 0x6e);
        // DC 037A
        gbc.setState(0xc3e1, 0x2fa0, 0x7240, 0x389a, 0x1d2e, 0x4d70, 0x1, 0x1);
        gbc.writeMem(0xc3e1, { 0xdc, 0x59, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0x2fa0);
        EXPECT(gbc.pc(), 0xc3e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3e1), 0xdc);
        EXPECT(gbc.readMem(0xc3e2), 0x59);
        EXPECT(gbc.readMem(0xc3e3), 0x3d);
        // DC 037B
        gbc.setState(0xebb8, 0xe406, 0x2410, 0x553a, 0x3e1c, 0x7bc3, 0x1, 0x0);
        gbc.writeMem(0xe404, { 0x0, 0x0 });
        gbc.writeMem(0xebb8, { 0xdc, 0x14, 0x1d });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0xe404);
        EXPECT(gbc.pc(), 0x1d14);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe404), 0xbb);
        EXPECT(gbc.readMem(0xe405), 0xeb);
        EXPECT(gbc.readMem(0xebb8), 0xdc);
        EXPECT(gbc.readMem(0xebb9), 0x14);
        EXPECT(gbc.readMem(0xebba), 0x1d);
        // DC 037D
        gbc.setState(0x2305, 0x87a7, 0xe320, 0x905c, 0xfa6, 0xd6f9, 0x1, 0x0);
        gbc.writeMem(0x2305, { 0xdc, 0x62, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x87a7);
        EXPECT(gbc.pc(), 0x2308);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 037E
        gbc.setState(0xc49, 0x33f1, 0x9920, 0xda93, 0xfbae, 0x5567, 0x1, 0x1);
        gbc.writeMem(0xc49, { 0xdc, 0xe9, 0x70 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x33f1);
        EXPECT(gbc.pc(), 0xc4c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 037F
        gbc.setState(0xedde, 0xf041, 0xf4c0, 0x2535, 0x22d8, 0x10f8, 0x1, 0x0);
        gbc.writeMem(0xedde, { 0xdc, 0x4f, 0x4 });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x22);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xf041);
        EXPECT(gbc.pc(), 0xede1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedde), 0xdc);
        EXPECT(gbc.readMem(0xeddf), 0x4f);
        EXPECT(gbc.readMem(0xede0), 0x4);
        // DC 0380
        gbc.setState(0xa602, 0xdc23, 0xf610, 0xc0df, 0x6ddb, 0xfcec, 0x1, 0x0);
        gbc.writeMem(0xa602, { 0xdc, 0xdc, 0x8f });
        gbc.writeMem(0xdc21, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xc0);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xdb);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xdc21);
        EXPECT(gbc.pc(), 0x8fdc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa602), 0xdc);
        EXPECT(gbc.readMem(0xa603), 0xdc);
        EXPECT(gbc.readMem(0xa604), 0x8f);
        EXPECT(gbc.readMem(0xdc21), 0x5);
        EXPECT(gbc.readMem(0xdc22), 0xa6);
        // DC 0382
        gbc.setState(0x321d, 0x9c84, 0xd2c0, 0x3008, 0xfa6b, 0x5c4c, 0x0, 0x1);
        gbc.writeMem(0x321d, { 0xdc, 0xb4, 0xca });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x9c84);
        EXPECT(gbc.pc(), 0x3220);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0384
        gbc.setState(0x2a86, 0x728d, 0xcc80, 0x7533, 0x6ad5, 0x688e, 0x1, 0x1);
        gbc.writeMem(0x2a86, { 0xdc, 0xa8, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x728d);
        EXPECT(gbc.pc(), 0x2a89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0385
        gbc.setState(0x7ad1, 0x531b, 0xb740, 0x9df0, 0x8cd6, 0x3684, 0x1, 0x1);
        gbc.writeMem(0x7ad1, { 0xdc, 0x7e, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x531b);
        EXPECT(gbc.pc(), 0x7ad4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0388
        gbc.setState(0x8705, 0x14c6, 0x9000, 0xfce5, 0x234, 0xf6ed, 0x1, 0x1);
        gbc.writeMem(0x8705, { 0xdc, 0x9, 0xb1 });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x14c6);
        EXPECT(gbc.pc(), 0x8708);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8705), 0xdc);
        EXPECT(gbc.readMem(0x8706), 0x9);
        EXPECT(gbc.readMem(0x8707), 0xb1);
        // DC 0389
        gbc.setState(0x4b06, 0x84a0, 0x1ed0, 0x8194, 0xbad3, 0xa889, 0x1, 0x0);
        gbc.writeMem(0x4b06, { 0xdc, 0x43, 0xf8 });
        gbc.writeMem(0x849e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x849e);
        EXPECT(gbc.pc(), 0xf843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x849e), 0x9);
        EXPECT(gbc.readMem(0x849f), 0x4b);
        // DC 038A
        gbc.setState(0xcb68, 0x991e, 0x98c0, 0xd9e8, 0xe100, 0x88b6, 0x1, 0x0);
        gbc.writeMem(0xcb68, { 0xdc, 0xfc, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x991e);
        EXPECT(gbc.pc(), 0xcb6b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb68), 0xdc);
        EXPECT(gbc.readMem(0xcb69), 0xfc);
        EXPECT(gbc.readMem(0xcb6a), 0x5c);
        // DC 038C
        gbc.setState(0x196, 0xbd57, 0xfbf0, 0x6ed1, 0x562f, 0xd027, 0x1, 0x1);
        gbc.writeMem(0x196, { 0xdc, 0xbb, 0xa7 });
        gbc.writeMem(0xbd55, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xbd55);
        EXPECT(gbc.pc(), 0xa7bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd55), 0x99);
        EXPECT(gbc.readMem(0xbd56), 0x1);
        // DC 038D
        gbc.setState(0x36f2, 0x9d65, 0x730, 0x4ff0, 0x1086, 0x72d8, 0x0, 0x0);
        gbc.writeMem(0x36f2, { 0xdc, 0x89, 0x6d });
        gbc.writeMem(0x9d63, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x9d63);
        EXPECT(gbc.pc(), 0x6d89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9d63), 0xf5);
        EXPECT(gbc.readMem(0x9d64), 0x36);
        // DC 038E
        gbc.setState(0x72a9, 0xd648, 0xaeb0, 0x39e6, 0xb6c4, 0x82a5, 0x0, 0x1);
        gbc.writeMem(0x72a9, { 0xdc, 0x33, 0x95 });
        gbc.writeMem(0xd646, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd646);
        EXPECT(gbc.pc(), 0x9533);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd646), 0xac);
        EXPECT(gbc.readMem(0xd647), 0x72);
        // DC 038F
        gbc.setState(0x4b2, 0xe7d0, 0x45b0, 0x3aff, 0x7a3e, 0x81a8, 0x1, 0x1);
        gbc.writeMem(0x4b2, { 0xdc, 0x55, 0xc6 });
        gbc.writeMem(0xe7ce, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0xe7ce);
        EXPECT(gbc.pc(), 0xc655);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe7ce), 0xb5);
        EXPECT(gbc.readMem(0xe7cf), 0x4);
        // DC 0390
        gbc.setState(0xcd7b, 0x686b, 0xb560, 0x86c7, 0x68fa, 0x3d52, 0x0, 0x0);
        gbc.writeMem(0xcd7b, { 0xdc, 0x72, 0xae });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x686b);
        EXPECT(gbc.pc(), 0xcd7e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd7b), 0xdc);
        EXPECT(gbc.readMem(0xcd7c), 0x72);
        EXPECT(gbc.readMem(0xcd7d), 0xae);
        // DC 0392
        gbc.setState(0xef23, 0x2af7, 0x2020, 0xf812, 0xc58d, 0x269f, 0x0, 0x0);
        gbc.writeMem(0xef23, { 0xdc, 0xa2, 0xec });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x2af7);
        EXPECT(gbc.pc(), 0xef26);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef23), 0xdc);
        EXPECT(gbc.readMem(0xef24), 0xa2);
        EXPECT(gbc.readMem(0xef25), 0xec);
        // DC 0393
        gbc.setState(0x903d, 0x8c49, 0x7c20, 0x983e, 0xeed7, 0x2c8f, 0x0, 0x0);
        gbc.writeMem(0x903d, { 0xdc, 0x25, 0x88 });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x8c49);
        EXPECT(gbc.pc(), 0x9040);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x903d), 0xdc);
        EXPECT(gbc.readMem(0x903e), 0x25);
        EXPECT(gbc.readMem(0x903f), 0x88);
        // DC 0394
        gbc.setState(0xe701, 0x594b, 0x1e00, 0xdd22, 0xc453, 0xef0a, 0x0, 0x1);
        gbc.writeMem(0xe701, { 0xdc, 0x49, 0xbd });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x594b);
        EXPECT(gbc.pc(), 0xe704);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe701), 0xdc);
        EXPECT(gbc.readMem(0xe702), 0x49);
        EXPECT(gbc.readMem(0xe703), 0xbd);
        // DC 0395
        gbc.setState(0x5120, 0xdcc5, 0x1610, 0x9999, 0x2a23, 0x3bf4, 0x1, 0x0);
        gbc.writeMem(0x5120, { 0xdc, 0x4b, 0x57 });
        gbc.writeMem(0xdcc3, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xdcc3);
        EXPECT(gbc.pc(), 0x574b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcc3), 0x23);
        EXPECT(gbc.readMem(0xdcc4), 0x51);
        // DC 0398
        gbc.setState(0x4651, 0x6d79, 0xec00, 0x6782, 0x482, 0x6bb7, 0x0, 0x0);
        gbc.writeMem(0x4651, { 0xdc, 0x5d, 0x78 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6d79);
        EXPECT(gbc.pc(), 0x4654);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 0399
        gbc.setState(0x4a75, 0x628c, 0xadc0, 0xd8a0, 0x240a, 0xbcab, 0x1, 0x1);
        gbc.writeMem(0x4a75, { 0xdc, 0x67, 0x60 });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x628c);
        EXPECT(gbc.pc(), 0x4a78);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 039B
        gbc.setState(0xbbb8, 0x7ee5, 0xab40, 0x9f3d, 0xc36d, 0x82c9, 0x1, 0x1);
        gbc.writeMem(0xbbb8, { 0xdc, 0xbb, 0xaf });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x7ee5);
        EXPECT(gbc.pc(), 0xbbbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbbb8), 0xdc);
        EXPECT(gbc.readMem(0xbbb9), 0xbb);
        EXPECT(gbc.readMem(0xbbba), 0xaf);
        // DC 039C
        gbc.setState(0xd575, 0xbdeb, 0xfa20, 0x2549, 0xc153, 0xbe21, 0x0, 0x0);
        gbc.writeMem(0xd575, { 0xdc, 0x29, 0xa1 });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xbdeb);
        EXPECT(gbc.pc(), 0xd578);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd575), 0xdc);
        EXPECT(gbc.readMem(0xd576), 0x29);
        EXPECT(gbc.readMem(0xd577), 0xa1);
        // DC 039D
        gbc.setState(0xa802, 0x9e7, 0x46a0, 0x3c27, 0x11d0, 0x4eed, 0x0, 0x0);
        gbc.writeMem(0xa802, { 0xdc, 0xee, 0xf1 });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x9e7);
        EXPECT(gbc.pc(), 0xa805);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa802), 0xdc);
        EXPECT(gbc.readMem(0xa803), 0xee);
        EXPECT(gbc.readMem(0xa804), 0xf1);
        // DC 039E
        gbc.setState(0x3916, 0xaf6e, 0x9de0, 0x75b6, 0x5c07, 0x159d, 0x0, 0x1);
        gbc.writeMem(0x3916, { 0xdc, 0xb3, 0x21 });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xaf6e);
        EXPECT(gbc.pc(), 0x3919);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 039F
        gbc.setState(0x6342, 0xb741, 0xa760, 0xc911, 0x42a0, 0xbdc0, 0x0, 0x1);
        gbc.writeMem(0x6342, { 0xdc, 0x8e, 0x92 });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0xb741);
        EXPECT(gbc.pc(), 0x6345);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 03A0
        gbc.setState(0xe6d6, 0x7937, 0x3660, 0x629c, 0xbb9a, 0x62db, 0x0, 0x0);
        gbc.writeMem(0xe6d6, { 0xdc, 0x63, 0x86 });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x7937);
        EXPECT(gbc.pc(), 0xe6d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe6d6), 0xdc);
        EXPECT(gbc.readMem(0xe6d7), 0x63);
        EXPECT(gbc.readMem(0xe6d8), 0x86);
        // DC 03A1
        gbc.setState(0xef03, 0x32e2, 0x9c20, 0x9c2a, 0x6f96, 0x6fbf, 0x1, 0x0);
        gbc.writeMem(0xef03, { 0xdc, 0x71, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x32e2);
        EXPECT(gbc.pc(), 0xef06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef03), 0xdc);
        EXPECT(gbc.readMem(0xef04), 0x71);
        EXPECT(gbc.readMem(0xef05), 0xfa);
        // DC 03A3
        gbc.setState(0xb5a6, 0x28fb, 0x2260, 0x46ab, 0x9740, 0x1e79, 0x0, 0x1);
        gbc.writeMem(0xb5a6, { 0xdc, 0xc7, 0x13 });
        gbc.step();
        EXPECT(gbc.a(),  0x22);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x28fb);
        EXPECT(gbc.pc(), 0xb5a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb5a6), 0xdc);
        EXPECT(gbc.readMem(0xb5a7), 0xc7);
        EXPECT(gbc.readMem(0xb5a8), 0x13);
        // DC 03A4
        gbc.setState(0x4d73, 0xa3b1, 0xa120, 0xf320, 0x269c, 0xed9f, 0x0, 0x0);
        gbc.writeMem(0x4d73, { 0xdc, 0x1b, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xa3b1);
        EXPECT(gbc.pc(), 0x4d76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 03A5
        gbc.setState(0xe926, 0x6f3d, 0xf340, 0xa7e6, 0x6d00, 0x9a58, 0x1, 0x0);
        gbc.writeMem(0xe926, { 0xdc, 0x5d, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0xe6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x6f3d);
        EXPECT(gbc.pc(), 0xe929);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe926), 0xdc);
        EXPECT(gbc.readMem(0xe927), 0x5d);
        EXPECT(gbc.readMem(0xe928), 0x77);
        // DC 03A7
        gbc.setState(0x89f2, 0xfe73, 0xef0, 0xe56f, 0x7a7, 0x7d88, 0x0, 0x0);
        gbc.writeMem(0x89f2, { 0xdc, 0x59, 0xa7 });
        gbc.writeMem(0xfe71, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xfe71);
        EXPECT(gbc.pc(), 0xa759);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x89f2), 0xdc);
        EXPECT(gbc.readMem(0x89f3), 0x59);
        EXPECT(gbc.readMem(0x89f4), 0xa7);
        EXPECT(gbc.readMem(0xfe71), 0xf5);
        EXPECT(gbc.readMem(0xfe72), 0x89);
        // DC 03A9
        gbc.setState(0xab49, 0x5b0e, 0xfea0, 0x1d1f, 0x873d, 0x5317, 0x0, 0x0);
        gbc.writeMem(0xab49, { 0xdc, 0x70, 0x77 });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x5b0e);
        EXPECT(gbc.pc(), 0xab4c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xab49), 0xdc);
        EXPECT(gbc.readMem(0xab4a), 0x70);
        EXPECT(gbc.readMem(0xab4b), 0x77);
        // DC 03AB
        gbc.setState(0x8edd, 0xf7c6, 0xb0e0, 0x16d0, 0x9eec, 0x28d, 0x0, 0x1);
        gbc.writeMem(0x8edd, { 0xdc, 0xc7, 0x99 });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xf7c6);
        EXPECT(gbc.pc(), 0x8ee0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8edd), 0xdc);
        EXPECT(gbc.readMem(0x8ede), 0xc7);
        EXPECT(gbc.readMem(0x8edf), 0x99);
        // DC 03AC
        gbc.setState(0xe225, 0x9a0f, 0x69d0, 0xafb5, 0xbce0, 0x6d50, 0x0, 0x0);
        gbc.writeMem(0x9a0d, { 0x0, 0x0 });
        gbc.writeMem(0xe225, { 0xdc, 0x92, 0x8 });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x9a0d);
        EXPECT(gbc.pc(), 0x892);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a0d), 0x28);
        EXPECT(gbc.readMem(0x9a0e), 0xe2);
        EXPECT(gbc.readMem(0xe225), 0xdc);
        EXPECT(gbc.readMem(0xe226), 0x92);
        EXPECT(gbc.readMem(0xe227), 0x8);
        // DC 03AD
        gbc.setState(0x1b13, 0xfe01, 0xa060, 0xbed6, 0xbd07, 0xe216, 0x1, 0x1);
        gbc.writeMem(0x1b13, { 0xdc, 0xd9, 0xfa });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xfe01);
        EXPECT(gbc.pc(), 0x1b16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 03AE
        gbc.setState(0x6a5d, 0x1aa5, 0x9a00, 0x53ed, 0x32ac, 0x4b00, 0x1, 0x1);
        gbc.writeMem(0x6a5d, { 0xdc, 0xbf, 0x30 });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x1aa5);
        EXPECT(gbc.pc(), 0x6a60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 03B0
        gbc.setState(0x9c3a, 0x2713, 0xda80, 0x1647, 0x835, 0xbf73, 0x1, 0x0);
        gbc.writeMem(0x9c3a, { 0xdc, 0x99, 0x5c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2713);
        EXPECT(gbc.pc(), 0x9c3d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9c3a), 0xdc);
        EXPECT(gbc.readMem(0x9c3b), 0x99);
        EXPECT(gbc.readMem(0x9c3c), 0x5c);
        // DC 03B1
        gbc.setState(0xd4e9, 0x6752, 0x9980, 0x9b7e, 0xb1cc, 0xe9bf, 0x1, 0x1);
        gbc.writeMem(0xd4e9, { 0xdc, 0x78, 0xa2 });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x6752);
        EXPECT(gbc.pc(), 0xd4ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4e9), 0xdc);
        EXPECT(gbc.readMem(0xd4ea), 0x78);
        EXPECT(gbc.readMem(0xd4eb), 0xa2);
        // DC 03B2
        gbc.setState(0xd2e7, 0xe7b, 0x3e00, 0xa07f, 0x6055, 0x9370, 0x1, 0x1);
        gbc.writeMem(0xd2e7, { 0xdc, 0x5a, 0x9d });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe7b);
        EXPECT(gbc.pc(), 0xd2ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2e7), 0xdc);
        EXPECT(gbc.readMem(0xd2e8), 0x5a);
        EXPECT(gbc.readMem(0xd2e9), 0x9d);
        // DC 03B3
        gbc.setState(0x9b99, 0x5bd5, 0x5280, 0x2f75, 0xe07d, 0x5ad3, 0x0, 0x0);
        gbc.writeMem(0x9b99, { 0xdc, 0x50, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5bd5);
        EXPECT(gbc.pc(), 0x9b9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9b99), 0xdc);
        EXPECT(gbc.readMem(0x9b9a), 0x50);
        EXPECT(gbc.readMem(0x9b9b), 0x3d);
        // DC 03B5
        gbc.setState(0xa1d3, 0x29dc, 0x10e0, 0x967b, 0x6f67, 0xd01c, 0x1, 0x1);
        gbc.writeMem(0xa1d3, { 0xdc, 0x6e, 0xcd });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x29dc);
        EXPECT(gbc.pc(), 0xa1d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa1d3), 0xdc);
        EXPECT(gbc.readMem(0xa1d4), 0x6e);
        EXPECT(gbc.readMem(0xa1d5), 0xcd);
        // DC 03B6
        gbc.setState(0x9551, 0x90e8, 0x3100, 0x4b76, 0xd283, 0xa2ea, 0x1, 0x0);
        gbc.writeMem(0x9551, { 0xdc, 0x29, 0xb6 });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x76);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x90e8);
        EXPECT(gbc.pc(), 0x9554);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9551), 0xdc);
        EXPECT(gbc.readMem(0x9552), 0x29);
        EXPECT(gbc.readMem(0x9553), 0xb6);
        // DC 03B8
        gbc.setState(0xfb, 0xa290, 0x4be0, 0x50c8, 0x3211, 0xe4b5, 0x0, 0x0);
        gbc.writeMem(0xfb, { 0xdc, 0xa, 0x46 });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa290);
        EXPECT(gbc.pc(), 0xfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 03B9
        gbc.setState(0x5e16, 0x74da, 0xcde0, 0xb248, 0x8bf9, 0xd3a1, 0x1, 0x1);
        gbc.writeMem(0x5e16, { 0xdc, 0x2b, 0x23 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x74da);
        EXPECT(gbc.pc(), 0x5e19);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 03BA
        gbc.setState(0xbbef, 0x86ec, 0x4db0, 0x2ef9, 0x91fc, 0x8620, 0x0, 0x1);
        gbc.writeMem(0x86ea, { 0x0, 0x0 });
        gbc.writeMem(0xbbef, { 0xdc, 0x76, 0x5a });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x86ea);
        EXPECT(gbc.pc(), 0x5a76);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86ea), 0xf2);
        EXPECT(gbc.readMem(0x86eb), 0xbb);
        EXPECT(gbc.readMem(0xbbef), 0xdc);
        EXPECT(gbc.readMem(0xbbf0), 0x76);
        EXPECT(gbc.readMem(0xbbf1), 0x5a);
        // DC 03BB
        gbc.setState(0xde1c, 0x32a3, 0x6ea0, 0x5f5c, 0xa8eb, 0xdabf, 0x1, 0x0);
        gbc.writeMem(0xde1c, { 0xdc, 0x9b, 0x67 });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x32a3);
        EXPECT(gbc.pc(), 0xde1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xde1c), 0xdc);
        EXPECT(gbc.readMem(0xde1d), 0x9b);
        EXPECT(gbc.readMem(0xde1e), 0x67);
        // DC 03BC
        gbc.setState(0x7d66, 0x4884, 0x7c40, 0x9d51, 0x93ce, 0x6e86, 0x1, 0x0);
        gbc.writeMem(0x7d66, { 0xdc, 0xa4, 0xb });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x4884);
        EXPECT(gbc.pc(), 0x7d69);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 03BE
        gbc.setState(0xc775, 0x7174, 0x2900, 0x6ee, 0x3cca, 0x5a1b, 0x1, 0x0);
        gbc.writeMem(0xc775, { 0xdc, 0x2d, 0x3d });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x7174);
        EXPECT(gbc.pc(), 0xc778);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc775), 0xdc);
        EXPECT(gbc.readMem(0xc776), 0x2d);
        EXPECT(gbc.readMem(0xc777), 0x3d);
        // DC 03C0
        gbc.setState(0xee1a, 0x29d, 0xecc0, 0x82e9, 0xc566, 0xa664, 0x0, 0x1);
        gbc.writeMem(0xee1a, { 0xdc, 0x20, 0x85 });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x29d);
        EXPECT(gbc.pc(), 0xee1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee1a), 0xdc);
        EXPECT(gbc.readMem(0xee1b), 0x20);
        EXPECT(gbc.readMem(0xee1c), 0x85);
        // DC 03C5
        gbc.setState(0x5a45, 0xf7e6, 0xaa50, 0x9462, 0x8b7c, 0xb6f1, 0x0, 0x0);
        gbc.writeMem(0x5a45, { 0xdc, 0xb8, 0x6d });
        gbc.writeMem(0xf7e4, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xaa);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xf7e4);
        EXPECT(gbc.pc(), 0x6db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xf7e4), 0x48);
        EXPECT(gbc.readMem(0xf7e5), 0x5a);
        // DC 03C6
        gbc.setState(0x7bde, 0x3ae6, 0x8ce0, 0x4c95, 0x606c, 0x80f7, 0x1, 0x0);
        gbc.writeMem(0x7bde, { 0xdc, 0x5b, 0xa9 });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x3ae6);
        EXPECT(gbc.pc(), 0x7be1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 03C7
        gbc.setState(0xc50a, 0x9e79, 0xa200, 0x6859, 0x34c, 0xd664, 0x1, 0x0);
        gbc.writeMem(0xc50a, { 0xdc, 0x93, 0xbc });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x9e79);
        EXPECT(gbc.pc(), 0xc50d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc50a), 0xdc);
        EXPECT(gbc.readMem(0xc50b), 0x93);
        EXPECT(gbc.readMem(0xc50c), 0xbc);
        // DC 03C8
        gbc.setState(0x776c, 0x6498, 0x1020, 0xd0d1, 0x14fe, 0x59b8, 0x0, 0x1);
        gbc.writeMem(0x776c, { 0xdc, 0xa1, 0x6c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0x6498);
        EXPECT(gbc.pc(), 0x776f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 03C9
        gbc.setState(0x52fa, 0x4408, 0x8880, 0xa8a5, 0xc6b5, 0x54e5, 0x1, 0x0);
        gbc.writeMem(0x52fa, { 0xdc, 0xcd, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x4408);
        EXPECT(gbc.pc(), 0x52fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 03CA
        gbc.setState(0xe59e, 0x9d69, 0x8a80, 0x4c77, 0x3a6e, 0xd4ac, 0x0, 0x0);
        gbc.writeMem(0xe59e, { 0xdc, 0x1a, 0x84 });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x9d69);
        EXPECT(gbc.pc(), 0xe5a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe59e), 0xdc);
        EXPECT(gbc.readMem(0xe59f), 0x1a);
        EXPECT(gbc.readMem(0xe5a0), 0x84);
        // DC 03CD
        gbc.setState(0x2efa, 0x6cd9, 0x5c60, 0x9b68, 0x17d5, 0xedfa, 0x0, 0x0);
        gbc.writeMem(0x2efa, { 0xdc, 0x96, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x6cd9);
        EXPECT(gbc.pc(), 0x2efd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 03CE
        gbc.setState(0x92be, 0xeaea, 0xcc60, 0x4455, 0x712e, 0x37af, 0x1, 0x0);
        gbc.writeMem(0x92be, { 0xdc, 0xd6, 0x2a });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0xeaea);
        EXPECT(gbc.pc(), 0x92c1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92be), 0xdc);
        EXPECT(gbc.readMem(0x92bf), 0xd6);
        EXPECT(gbc.readMem(0x92c0), 0x2a);
        // DC 03CF
        gbc.setState(0x3918, 0xbb47, 0xf630, 0x4dab, 0x9e47, 0xe5a0, 0x0, 0x0);
        gbc.writeMem(0x3918, { 0xdc, 0x62, 0xb4 });
        gbc.writeMem(0xbb45, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xbb45);
        EXPECT(gbc.pc(), 0xb462);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb45), 0x1b);
        EXPECT(gbc.readMem(0xbb46), 0x39);
        // DC 03D0
        gbc.setState(0x1222, 0x9512, 0x5480, 0x9efb, 0x34b, 0xb4c6, 0x0, 0x0);
        gbc.writeMem(0x1222, { 0xdc, 0x46, 0x4c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9512);
        EXPECT(gbc.pc(), 0x1225);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 03D1
        gbc.setState(0x1392, 0xd253, 0x4dd0, 0x67f2, 0x7dcc, 0x3c3c, 0x1, 0x1);
        gbc.writeMem(0x1392, { 0xdc, 0x73, 0x5b });
        gbc.writeMem(0xd251, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xd251);
        EXPECT(gbc.pc(), 0x5b73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd251), 0x95);
        EXPECT(gbc.readMem(0xd252), 0x13);
        // DC 03D2
        gbc.setState(0x7ea7, 0x2cad, 0x5820, 0x4d6c, 0x1ef0, 0xdfce, 0x1, 0x1);
        gbc.writeMem(0x7ea7, { 0xdc, 0x96, 0x3c });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0x2cad);
        EXPECT(gbc.pc(), 0x7eaa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 03D3
        gbc.setState(0x761a, 0x1cf4, 0xb1c0, 0x3131, 0x6df0, 0x4e2, 0x1, 0x1);
        gbc.writeMem(0x761a, { 0xdc, 0x22, 0xe1 });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x1cf4);
        EXPECT(gbc.pc(), 0x761d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // DC 03D5
        gbc.setState(0x8c7, 0x1140, 0xcda0, 0x1b65, 0xabe3, 0x4e62, 0x0, 0x0);
        gbc.writeMem(0x8c7, { 0xdc, 0x96, 0x97 });
        gbc.step();
        EXPECT(gbc.a(),  0xcd);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0x1140);
        EXPECT(gbc.pc(), 0x8ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 03D7
        gbc.setState(0xba70, 0xe390, 0x1630, 0x9df5, 0xa2ac, 0xf5ad, 0x0, 0x1);
        gbc.writeMem(0xba70, { 0xdc, 0xa9, 0xcc });
        gbc.writeMem(0xe38e, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xe38e);
        EXPECT(gbc.pc(), 0xcca9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xba70), 0xdc);
        EXPECT(gbc.readMem(0xba71), 0xa9);
        EXPECT(gbc.readMem(0xba72), 0xcc);
        EXPECT(gbc.readMem(0xe38e), 0x73);
        EXPECT(gbc.readMem(0xe38f), 0xba);
        // DC 03D8
        gbc.setState(0x131d, 0xcda3, 0xa6e0, 0xf0c9, 0x41ad, 0x6976, 0x0, 0x0);
        gbc.writeMem(0x131d, { 0xdc, 0x70, 0x90 });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xcda3);
        EXPECT(gbc.pc(), 0x1320);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 03DA
        gbc.setState(0x7c8a, 0xe6e8, 0x4de0, 0x6c6, 0x6dea, 0xae4d, 0x0, 0x1);
        gbc.writeMem(0x7c8a, { 0xdc, 0x7e, 0x55 });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xe6e8);
        EXPECT(gbc.pc(), 0x7c8d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 03DB
        gbc.setState(0x8cd8, 0x6895, 0x9e20, 0x60a2, 0x9c14, 0x3e9c, 0x0, 0x1);
        gbc.writeMem(0x8cd8, { 0xdc, 0xad, 0x32 });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x6895);
        EXPECT(gbc.pc(), 0x8cdb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8cd8), 0xdc);
        EXPECT(gbc.readMem(0x8cd9), 0xad);
        EXPECT(gbc.readMem(0x8cda), 0x32);
        // DC 03DD
        gbc.setState(0xb4e7, 0xdb6, 0x9720, 0x9fd3, 0xc102, 0xdce7, 0x1, 0x0);
        gbc.writeMem(0xb4e7, { 0xdc, 0x9c, 0x89 });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xdb6);
        EXPECT(gbc.pc(), 0xb4ea);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e7), 0xdc);
        EXPECT(gbc.readMem(0xb4e8), 0x9c);
        EXPECT(gbc.readMem(0xb4e9), 0x89);
        // DC 03DE
        gbc.setState(0x78c3, 0x9c01, 0x510, 0x8828, 0x3fc7, 0x7a11, 0x0, 0x1);
        gbc.writeMem(0x78c3, { 0xdc, 0x9a, 0xb2 });
        gbc.writeMem(0x9bff, { 0x0, 0x0 });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0x9bff);
        EXPECT(gbc.pc(), 0xb29a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9bff), 0xc6);
        EXPECT(gbc.readMem(0x9c00), 0x78);
        // DC 03DF
        gbc.setState(0xe227, 0x10f6, 0xe880, 0x1c61, 0xd87e, 0x475a, 0x1, 0x1);
        gbc.writeMem(0xe227, { 0xdc, 0xdf, 0x82 });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0x10f6);
        EXPECT(gbc.pc(), 0xe22a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe227), 0xdc);
        EXPECT(gbc.readMem(0xe228), 0xdf);
        EXPECT(gbc.readMem(0xe229), 0x82);
        // DC 03E0
        gbc.setState(0xc86, 0xf0e0, 0x8ee0, 0xe907, 0x75d5, 0x4e7c, 0x1, 0x0);
        gbc.writeMem(0xc86, { 0xdc, 0x62, 0x7e });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xf0e0);
        EXPECT(gbc.pc(), 0xc89);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // DC 03E2
        gbc.setState(0xc90d, 0x9a80, 0x490, 0x4e, 0x39e, 0x12f6, 0x1, 0x0);
        gbc.writeMem(0x9a7e, { 0x0, 0x0 });
        gbc.writeMem(0xc90d, { 0xdc, 0x13, 0xc2 });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x12);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x9a7e);
        EXPECT(gbc.pc(), 0xc213);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a7e), 0x10);
        EXPECT(gbc.readMem(0x9a7f), 0xc9);
        EXPECT(gbc.readMem(0xc90d), 0xdc);
        EXPECT(gbc.readMem(0xc90e), 0x13);
        EXPECT(gbc.readMem(0xc90f), 0xc2);
        // DC 03E6
        gbc.setState(0xe230, 0xd6f9, 0x1f00, 0xb472, 0x610, 0xd066, 0x0, 0x1);
        gbc.writeMem(0xe230, { 0xdc, 0xbe, 0x2 });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0xd6f9);
        EXPECT(gbc.pc(), 0xe233);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe230), 0xdc);
        EXPECT(gbc.readMem(0xe231), 0xbe);
        EXPECT(gbc.readMem(0xe232), 0x2);
        // DC 03E7
        gbc.setState(0x8251, 0xc6b, 0x440, 0x8a9d, 0xe693, 0x2b49, 0x0, 0x1);
        gbc.writeMem(0x8251, { 0xdc, 0xb5, 0xbb });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xc6b);
        EXPECT(gbc.pc(), 0x8254);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  true);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8251), 0xdc);
        EXPECT(gbc.readMem(0x8252), 0xb5);
        EXPECT(gbc.readMem(0x8253), 0xbb);
    }
