    TEST(gbcemu, opcode_cb_c6) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // CB C6 0000
        gbc.setState(0x454e, 0xb7d, 0xafd0, 0xdbb6, 0xce6b, 0xa2b8, 0x0, 0x0);
        gbc.writeMem(0x454e, { 0xcb, 0xc6 });
        gbc.writeMem(0xa2b8, { 0xc4 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb7d, gbc.sp());
        EXPECT(0x4550, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa2b8));
        // CB C6 0001
        gbc.setState(0xccf8, 0x816a, 0xfb80, 0x7b6f, 0xd255, 0xbf02, 0x1, 0x0);
        gbc.writeMem(0xbf02, { 0x38 });
        gbc.writeMem(0xccf8, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0x816a, gbc.sp());
        EXPECT(0xccfa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xbf02));
        EXPECT(0xcb, gbc.readMem(0xccf8));
        EXPECT(0xc6, gbc.readMem(0xccf9));
        // CB C6 0002
        gbc.setState(0x9f37, 0xda73, 0x9a40, 0x2b29, 0x461a, 0x6122, 0x1, 0x0);
        gbc.writeMem(0x6122, { 0x49 });
        gbc.writeMem(0x9f37, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xda73, gbc.sp());
        EXPECT(0x9f39, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f37));
        EXPECT(0xc6, gbc.readMem(0x9f38));
        // CB C6 0003
        gbc.setState(0xbe49, 0x8eb5, 0x8fa0, 0xbf52, 0x3208, 0xac3e, 0x0, 0x0);
        gbc.writeMem(0xac3e, { 0xa4 });
        gbc.writeMem(0xbe49, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x8eb5, gbc.sp());
        EXPECT(0xbe4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xac3e));
        EXPECT(0xcb, gbc.readMem(0xbe49));
        EXPECT(0xc6, gbc.readMem(0xbe4a));
        // CB C6 0004
        gbc.setState(0x399, 0x5b43, 0xef0, 0x9ace, 0x2dda, 0x1589, 0x0, 0x1);
        gbc.writeMem(0x399, { 0xcb, 0xc6 });
        gbc.writeMem(0x1589, { 0x3f });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x5b43, gbc.sp());
        EXPECT(0x39b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0006
        gbc.setState(0x59d7, 0xcf91, 0x5770, 0xbd0f, 0x4c9e, 0xc585, 0x0, 0x1);
        gbc.writeMem(0x59d7, { 0xcb, 0xc6 });
        gbc.writeMem(0xc585, { 0xe2 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xcf91, gbc.sp());
        EXPECT(0x59d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xc585));
        // CB C6 0007
        gbc.setState(0x92fe, 0xbf50, 0x33c0, 0x29f0, 0x21e7, 0xc0c2, 0x0, 0x0);
        gbc.writeMem(0x92fe, { 0xcb, 0xc6 });
        gbc.writeMem(0xc0c2, { 0xda });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xbf50, gbc.sp());
        EXPECT(0x9300, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x92fe));
        EXPECT(0xc6, gbc.readMem(0x92ff));
        EXPECT(0xdb, gbc.readMem(0xc0c2));
        // CB C6 0008
        gbc.setState(0xd77, 0x2ae5, 0xb130, 0xe026, 0x40c0, 0xb92d, 0x0, 0x1);
        gbc.writeMem(0xd77, { 0xcb, 0xc6 });
        gbc.writeMem(0xb92d, { 0x69 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x2ae5, gbc.sp());
        EXPECT(0xd79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x69, gbc.readMem(0xb92d));
        // CB C6 000A
        gbc.setState(0x7dd, 0x8922, 0xeca0, 0x580b, 0xf33f, 0xcec0, 0x0, 0x1);
        gbc.writeMem(0x7dd, { 0xcb, 0xc6 });
        gbc.writeMem(0xcec0, { 0xbc });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8922, gbc.sp());
        EXPECT(0x7df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xcec0));
        // CB C6 000B
        gbc.setState(0xac9b, 0xd3cf, 0xbd30, 0x348e, 0x9867, 0x7439, 0x1, 0x1);
        gbc.writeMem(0x7439, { 0x35 });
        gbc.writeMem(0xac9b, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd3cf, gbc.sp());
        EXPECT(0xac9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac9b));
        EXPECT(0xc6, gbc.readMem(0xac9c));
        // CB C6 000C
        gbc.setState(0x2ff6, 0x2c6f, 0xb670, 0x7c89, 0x45d6, 0xa7be, 0x1, 0x1);
        gbc.writeMem(0x2ff6, { 0xcb, 0xc6 });
        gbc.writeMem(0xa7be, { 0x2 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x2c6f, gbc.sp());
        EXPECT(0x2ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3, gbc.readMem(0xa7be));
        // CB C6 000D
        gbc.setState(0x2318, 0x3f9, 0xad40, 0x1dc1, 0x3107, 0x9780, 0x1, 0x1);
        gbc.writeMem(0x2318, { 0xcb, 0xc6 });
        gbc.writeMem(0x9780, { 0xe4 });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x3f9, gbc.sp());
        EXPECT(0x231a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0x9780));
        // CB C6 000E
        gbc.setState(0x863b, 0x23be, 0xbce0, 0x6802, 0x43ba, 0x6311, 0x1, 0x1);
        gbc.writeMem(0x6311, { 0x55 });
        gbc.writeMem(0x863b, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x23be, gbc.sp());
        EXPECT(0x863d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x863b));
        EXPECT(0xc6, gbc.readMem(0x863c));
        // CB C6 000F
        gbc.setState(0xde08, 0xa90, 0xaff0, 0x473e, 0x4787, 0x15f3, 0x0, 0x1);
        gbc.writeMem(0x15f3, { 0x75 });
        gbc.writeMem(0xde08, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xa90, gbc.sp());
        EXPECT(0xde0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xde08));
        EXPECT(0xc6, gbc.readMem(0xde09));
        // CB C6 0013
        gbc.setState(0x9bd3, 0x50b7, 0x5540, 0xff6f, 0x8053, 0x301d, 0x0, 0x1);
        gbc.writeMem(0x301d, { 0x19 });
        gbc.writeMem(0x9bd3, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x50b7, gbc.sp());
        EXPECT(0x9bd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9bd3));
        EXPECT(0xc6, gbc.readMem(0x9bd4));
        // CB C6 0016
        gbc.setState(0x9e6f, 0x3537, 0x4e70, 0xf286, 0xad83, 0xcd8b, 0x0, 0x0);
        gbc.writeMem(0x9e6f, { 0xcb, 0xc6 });
        gbc.writeMem(0xcd8b, { 0x72 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x3537, gbc.sp());
        EXPECT(0x9e71, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9e6f));
        EXPECT(0xc6, gbc.readMem(0x9e70));
        EXPECT(0x73, gbc.readMem(0xcd8b));
        // CB C6 0017
        gbc.setState(0xab5, 0xcd00, 0x9110, 0x98b, 0xd333, 0x9591, 0x0, 0x0);
        gbc.writeMem(0xab5, { 0xcb, 0xc6 });
        gbc.writeMem(0x9591, { 0x4a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xcd00, gbc.sp());
        EXPECT(0xab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9591));
        // CB C6 0018
        gbc.setState(0x7c35, 0x5579, 0xce00, 0x8eef, 0x5508, 0xe2f9, 0x1, 0x0);
        gbc.writeMem(0x7c35, { 0xcb, 0xc6 });
        gbc.writeMem(0xe2f9, { 0x90 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x5579, gbc.sp());
        EXPECT(0x7c37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xe2f9));
        // CB C6 001B
        gbc.setState(0xcbf0, 0x750e, 0x79a0, 0xd566, 0x5230, 0xa7d7, 0x1, 0x0);
        gbc.writeMem(0xa7d7, { 0xaf });
        gbc.writeMem(0xcbf0, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x750e, gbc.sp());
        EXPECT(0xcbf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xa7d7));
        EXPECT(0xcb, gbc.readMem(0xcbf0));
        EXPECT(0xc6, gbc.readMem(0xcbf1));
        // CB C6 001C
        gbc.setState(0x13bb, 0x7fee, 0x1d10, 0x1430, 0xb58a, 0xeb92, 0x0, 0x0);
        gbc.writeMem(0x13bb, { 0xcb, 0xc6 });
        gbc.writeMem(0xeb92, { 0xab });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x7fee, gbc.sp());
        EXPECT(0x13bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xeb92));
        // CB C6 0020
        gbc.setState(0xe835, 0xaa61, 0xc4b0, 0x563e, 0xe66, 0xcabd, 0x0, 0x1);
        gbc.writeMem(0xcabd, { 0x40 });
        gbc.writeMem(0xe835, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xaa61, gbc.sp());
        EXPECT(0xe837, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xcabd));
        EXPECT(0xcb, gbc.readMem(0xe835));
        EXPECT(0xc6, gbc.readMem(0xe836));
        // CB C6 0021
        gbc.setState(0x7cd3, 0xb0fb, 0xb780, 0x192b, 0xe955, 0xab37, 0x1, 0x1);
        gbc.writeMem(0x7cd3, { 0xcb, 0xc6 });
        gbc.writeMem(0xab37, { 0x86 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb0fb, gbc.sp());
        EXPECT(0x7cd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xab37));
        // CB C6 0022
        gbc.setState(0xae2b, 0x8248, 0x27d0, 0x34aa, 0x6cea, 0x84e, 0x0, 0x0);
        gbc.writeMem(0x84e, { 0xa5 });
        gbc.writeMem(0xae2b, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x8248, gbc.sp());
        EXPECT(0xae2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xae2b));
        EXPECT(0xc6, gbc.readMem(0xae2c));
        // CB C6 0023
        gbc.setState(0xc9f4, 0x91fb, 0x23d0, 0xa5e7, 0x5f8c, 0x77e9, 0x0, 0x1);
        gbc.writeMem(0x77e9, { 0x87 });
        gbc.writeMem(0xc9f4, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x91fb, gbc.sp());
        EXPECT(0xc9f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc9f4));
        EXPECT(0xc6, gbc.readMem(0xc9f5));
        // CB C6 0024
        gbc.setState(0x3e7f, 0x24c2, 0xe2c0, 0x84b3, 0x3df3, 0xf979, 0x1, 0x0);
        gbc.writeMem(0x3e7f, { 0xcb, 0xc6 });
        gbc.writeMem(0xf979, { 0x33 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x24c2, gbc.sp());
        EXPECT(0x3e81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xf979));
        // CB C6 0026
        gbc.setState(0x3ea2, 0x8d15, 0x9840, 0xf7fe, 0x1386, 0xf9bf, 0x1, 0x0);
        gbc.writeMem(0x3ea2, { 0xcb, 0xc6 });
        gbc.writeMem(0xf9bf, { 0x7b });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x8d15, gbc.sp());
        EXPECT(0x3ea4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xf9bf));
        // CB C6 0028
        gbc.setState(0xc1e1, 0x1656, 0x9580, 0x4894, 0x1c7c, 0x2728, 0x1, 0x0);
        gbc.writeMem(0x2728, { 0x91 });
        gbc.writeMem(0xc1e1, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x1656, gbc.sp());
        EXPECT(0xc1e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc1e1));
        EXPECT(0xc6, gbc.readMem(0xc1e2));
        // CB C6 0029
        gbc.setState(0x921d, 0xb2b2, 0x5860, 0xde85, 0xd41a, 0xc87c, 0x0, 0x0);
        gbc.writeMem(0x921d, { 0xcb, 0xc6 });
        gbc.writeMem(0xc87c, { 0xc9 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb2b2, gbc.sp());
        EXPECT(0x921f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x921d));
        EXPECT(0xc6, gbc.readMem(0x921e));
        EXPECT(0xc9, gbc.readMem(0xc87c));
        // CB C6 002C
        gbc.setState(0x9f2b, 0x23e1, 0xfef0, 0x8879, 0xeccb, 0x241c, 0x1, 0x0);
        gbc.writeMem(0x241c, { 0xeb });
        gbc.writeMem(0x9f2b, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x23e1, gbc.sp());
        EXPECT(0x9f2d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9f2b));
        EXPECT(0xc6, gbc.readMem(0x9f2c));
        // CB C6 002D
        gbc.setState(0x3424, 0xa95d, 0x9640, 0x84db, 0x976a, 0x90fc, 0x1, 0x1);
        gbc.writeMem(0x3424, { 0xcb, 0xc6 });
        gbc.writeMem(0x90fc, { 0x9c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xa95d, gbc.sp());
        EXPECT(0x3426, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0x90fc));
        // CB C6 002E
        gbc.setState(0xccd8, 0xbb2e, 0xace0, 0x9324, 0x47b5, 0xb51e, 0x0, 0x0);
        gbc.writeMem(0xb51e, { 0xfa });
        gbc.writeMem(0xccd8, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xbb2e, gbc.sp());
        EXPECT(0xccda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfb, gbc.readMem(0xb51e));
        EXPECT(0xcb, gbc.readMem(0xccd8));
        EXPECT(0xc6, gbc.readMem(0xccd9));
        // CB C6 0030
        gbc.setState(0x747e, 0x7ed4, 0x9750, 0xec1e, 0xa617, 0x8a55, 0x1, 0x1);
        gbc.writeMem(0x747e, { 0xcb, 0xc6 });
        gbc.writeMem(0x8a55, { 0x8f });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x7ed4, gbc.sp());
        EXPECT(0x7480, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0x8a55));
        // CB C6 0031
        gbc.setState(0x59cf, 0xfb12, 0xfd70, 0x69d2, 0xf325, 0xe758, 0x1, 0x1);
        gbc.writeMem(0x59cf, { 0xcb, 0xc6 });
        gbc.writeMem(0xe758, { 0xaa });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xfb12, gbc.sp());
        EXPECT(0x59d1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xe758));
        // CB C6 0032
        gbc.setState(0x659f, 0x8365, 0x7f40, 0x13bf, 0xf2f9, 0xa032, 0x1, 0x1);
        gbc.writeMem(0x659f, { 0xcb, 0xc6 });
        gbc.writeMem(0xa032, { 0x34 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x8365, gbc.sp());
        EXPECT(0x65a1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xa032));
        // CB C6 0033
        gbc.setState(0x8e49, 0xc9e5, 0x8d00, 0x930e, 0x35a4, 0xc8b1, 0x1, 0x0);
        gbc.writeMem(0x8e49, { 0xcb, 0xc6 });
        gbc.writeMem(0xc8b1, { 0x2d });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xc9e5, gbc.sp());
        EXPECT(0x8e4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e49));
        EXPECT(0xc6, gbc.readMem(0x8e4a));
        EXPECT(0x2d, gbc.readMem(0xc8b1));
        // CB C6 0034
        gbc.setState(0x35de, 0x56b, 0x6980, 0x5ada, 0x655, 0x23d0, 0x0, 0x0);
        gbc.writeMem(0x23d0, { 0xa9 });
        gbc.writeMem(0x35de, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x56b, gbc.sp());
        EXPECT(0x35e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0035
        gbc.setState(0x412c, 0xafcf, 0xae80, 0x7ff5, 0xe163, 0xd249, 0x0, 0x0);
        gbc.writeMem(0x412c, { 0xcb, 0xc6 });
        gbc.writeMem(0xd249, { 0x5b });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xafcf, gbc.sp());
        EXPECT(0x412e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xd249));
        // CB C6 0038
        gbc.setState(0xd1f8, 0xa5, 0x2120, 0x8f69, 0x4d67, 0x695b, 0x0, 0x0);
        gbc.writeMem(0x695b, { 0x5 });
        gbc.writeMem(0xd1f8, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xa5, gbc.sp());
        EXPECT(0xd1fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f8));
        EXPECT(0xc6, gbc.readMem(0xd1f9));
        // CB C6 003A
        gbc.setState(0xc727, 0xeb20, 0xa880, 0x948a, 0x21b5, 0xfc54, 0x1, 0x1);
        gbc.writeMem(0xc727, { 0xcb, 0xc6 });
        gbc.writeMem(0xfc54, { 0x1b });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xeb20, gbc.sp());
        EXPECT(0xc729, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc727));
        EXPECT(0xc6, gbc.readMem(0xc728));
        EXPECT(0x1b, gbc.readMem(0xfc54));
        // CB C6 003B
        gbc.setState(0x5d91, 0xf2cc, 0xa430, 0x184c, 0x1ff4, 0xb673, 0x0, 0x1);
        gbc.writeMem(0x5d91, { 0xcb, 0xc6 });
        gbc.writeMem(0xb673, { 0xf3 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xf2cc, gbc.sp());
        EXPECT(0x5d93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xb673));
        // CB C6 003C
        gbc.setState(0x4ee1, 0xfe7, 0x5b10, 0x8e64, 0x350e, 0xa55d, 0x1, 0x1);
        gbc.writeMem(0x4ee1, { 0xcb, 0xc6 });
        gbc.writeMem(0xa55d, { 0xf0 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xfe7, gbc.sp());
        EXPECT(0x4ee3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xa55d));
        // CB C6 003D
        gbc.setState(0xda97, 0xfd99, 0xfd40, 0xa560, 0x69c3, 0x3947, 0x0, 0x1);
        gbc.writeMem(0x3947, { 0x71 });
        gbc.writeMem(0xda97, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfd99, gbc.sp());
        EXPECT(0xda99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda97));
        EXPECT(0xc6, gbc.readMem(0xda98));
        // CB C6 003F
        gbc.setState(0xb09e, 0x8ec2, 0x460, 0x6c7e, 0xc98d, 0xe5a0, 0x0, 0x1);
        gbc.writeMem(0xb09e, { 0xcb, 0xc6 });
        gbc.writeMem(0xe5a0, { 0x84 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x8ec2, gbc.sp());
        EXPECT(0xb0a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb09e));
        EXPECT(0xc6, gbc.readMem(0xb09f));
        EXPECT(0x85, gbc.readMem(0xe5a0));
        // CB C6 0042
        gbc.setState(0xdad5, 0xda22, 0xe550, 0x8016, 0x33a4, 0xa596, 0x0, 0x1);
        gbc.writeMem(0xa596, { 0x7c });
        gbc.writeMem(0xdad5, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xda22, gbc.sp());
        EXPECT(0xdad7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xa596));
        EXPECT(0xcb, gbc.readMem(0xdad5));
        EXPECT(0xc6, gbc.readMem(0xdad6));
        // CB C6 0044
        gbc.setState(0xc080, 0x2149, 0xcab0, 0xc676, 0x2d7c, 0x29da, 0x1, 0x0);
        gbc.writeMem(0x29da, { 0xe3 });
        gbc.writeMem(0xc080, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x2149, gbc.sp());
        EXPECT(0xc082, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc080));
        EXPECT(0xc6, gbc.readMem(0xc081));
        // CB C6 0045
        gbc.setState(0xd854, 0xf811, 0xb110, 0x17a7, 0xea09, 0xd46, 0x0, 0x1);
        gbc.writeMem(0xd46, { 0xf7 });
        gbc.writeMem(0xd854, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xf811, gbc.sp());
        EXPECT(0xd856, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd854));
        EXPECT(0xc6, gbc.readMem(0xd855));
        // CB C6 0046
        gbc.setState(0x1731, 0xbd05, 0xd50, 0x87d1, 0x3c59, 0x74b9, 0x0, 0x1);
        gbc.writeMem(0x1731, { 0xcb, 0xc6 });
        gbc.writeMem(0x74b9, { 0x7 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbd05, gbc.sp());
        EXPECT(0x1733, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0047
        gbc.setState(0x306c, 0x1abd, 0x8e10, 0x6460, 0x44e8, 0x35ed, 0x1, 0x0);
        gbc.writeMem(0x306c, { 0xcb, 0xc6 });
        gbc.writeMem(0x35ed, { 0x95 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x1abd, gbc.sp());
        EXPECT(0x306e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0048
        gbc.setState(0x1738, 0xba7a, 0x5e10, 0xc53b, 0xd2d6, 0xabe6, 0x1, 0x1);
        gbc.writeMem(0x1738, { 0xcb, 0xc6 });
        gbc.writeMem(0xabe6, { 0x0 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xba7a, gbc.sp());
        EXPECT(0x173a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xabe6));
        // CB C6 0049
        gbc.setState(0xb3c9, 0xa1ca, 0x1670, 0xeb77, 0x1831, 0x5446, 0x1, 0x0);
        gbc.writeMem(0x5446, { 0x57 });
        gbc.writeMem(0xb3c9, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa1ca, gbc.sp());
        EXPECT(0xb3cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3c9));
        EXPECT(0xc6, gbc.readMem(0xb3ca));
        // CB C6 004B
        gbc.setState(0xb260, 0xe190, 0x6cf0, 0xa86f, 0x8d94, 0x1edd, 0x1, 0x1);
        gbc.writeMem(0x1edd, { 0xf5 });
        gbc.writeMem(0xb260, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe190, gbc.sp());
        EXPECT(0xb262, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb260));
        EXPECT(0xc6, gbc.readMem(0xb261));
        // CB C6 004C
        gbc.setState(0x9d16, 0x451b, 0x8820, 0x17a6, 0x326d, 0x322e, 0x0, 0x0);
        gbc.writeMem(0x322e, { 0x87 });
        gbc.writeMem(0x9d16, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x451b, gbc.sp());
        EXPECT(0x9d18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d16));
        EXPECT(0xc6, gbc.readMem(0x9d17));
        // CB C6 004D
        gbc.setState(0x1e3f, 0xd64b, 0xb80, 0xb22b, 0x1ed5, 0x9401, 0x0, 0x0);
        gbc.writeMem(0x1e3f, { 0xcb, 0xc6 });
        gbc.writeMem(0x9401, { 0xfc });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd64b, gbc.sp());
        EXPECT(0x1e41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x9401));
        // CB C6 004F
        gbc.setState(0x7634, 0x68ce, 0xf00, 0x6c4, 0xc10b, 0x8c63, 0x1, 0x1);
        gbc.writeMem(0x7634, { 0xcb, 0xc6 });
        gbc.writeMem(0x8c63, { 0xb1 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x68ce, gbc.sp());
        EXPECT(0x7636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb1, gbc.readMem(0x8c63));
        // CB C6 0050
        gbc.setState(0x6c64, 0xd9c2, 0x29b0, 0x3c11, 0x8e98, 0xdb31, 0x0, 0x1);
        gbc.writeMem(0x6c64, { 0xcb, 0xc6 });
        gbc.writeMem(0xdb31, { 0x20 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd9c2, gbc.sp());
        EXPECT(0x6c66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xdb31));
        // CB C6 0053
        gbc.setState(0xba43, 0xbec4, 0x8bf0, 0x45aa, 0x915b, 0x9b44, 0x0, 0x1);
        gbc.writeMem(0x9b44, { 0x7a });
        gbc.writeMem(0xba43, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xbec4, gbc.sp());
        EXPECT(0xba45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x9b44));
        EXPECT(0xcb, gbc.readMem(0xba43));
        EXPECT(0xc6, gbc.readMem(0xba44));
        // CB C6 0054
        gbc.setState(0x621c, 0x76b9, 0x74c0, 0x3463, 0x53ec, 0xe694, 0x1, 0x0);
        gbc.writeMem(0x621c, { 0xcb, 0xc6 });
        gbc.writeMem(0xe694, { 0xd9 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x76b9, gbc.sp());
        EXPECT(0x621e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xe694));
        // CB C6 0055
        gbc.setState(0x6967, 0xfee6, 0x5280, 0xc21a, 0x1f9, 0x9e46, 0x0, 0x0);
        gbc.writeMem(0x6967, { 0xcb, 0xc6 });
        gbc.writeMem(0x9e46, { 0x66 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xfee6, gbc.sp());
        EXPECT(0x6969, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x67, gbc.readMem(0x9e46));
        // CB C6 0056
        gbc.setState(0x9ea7, 0xec6b, 0xdd0, 0x7e1a, 0xedd4, 0x6e17, 0x1, 0x0);
        gbc.writeMem(0x6e17, { 0xbd });
        gbc.writeMem(0x9ea7, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xec6b, gbc.sp());
        EXPECT(0x9ea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ea7));
        EXPECT(0xc6, gbc.readMem(0x9ea8));
        // CB C6 0057
        gbc.setState(0x934d, 0x90a6, 0xd380, 0xd504, 0x8242, 0x378c, 0x0, 0x1);
        gbc.writeMem(0x378c, { 0x7b });
        gbc.writeMem(0x934d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x90a6, gbc.sp());
        EXPECT(0x934f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x934d));
        EXPECT(0xc6, gbc.readMem(0x934e));
        // CB C6 0058
        gbc.setState(0x2340, 0xeb3c, 0xe80, 0x81bf, 0x37b2, 0x52d1, 0x0, 0x0);
        gbc.writeMem(0x2340, { 0xcb, 0xc6 });
        gbc.writeMem(0x52d1, { 0x7d });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xeb3c, gbc.sp());
        EXPECT(0x2342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0059
        gbc.setState(0xc1e5, 0x7df7, 0x97f0, 0x2c1d, 0x7426, 0xa9e2, 0x0, 0x1);
        gbc.writeMem(0xa9e2, { 0x18 });
        gbc.writeMem(0xc1e5, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7df7, gbc.sp());
        EXPECT(0xc1e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa9e2));
        EXPECT(0xcb, gbc.readMem(0xc1e5));
        EXPECT(0xc6, gbc.readMem(0xc1e6));
        // CB C6 005A
        gbc.setState(0x996a, 0x873b, 0x6410, 0xea67, 0xd8e8, 0x4fa2, 0x0, 0x0);
        gbc.writeMem(0x4fa2, { 0xd7 });
        gbc.writeMem(0x996a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x873b, gbc.sp());
        EXPECT(0x996c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x996a));
        EXPECT(0xc6, gbc.readMem(0x996b));
        // CB C6 005D
        gbc.setState(0x9233, 0xa29e, 0x89f0, 0x1b2d, 0xf808, 0xb086, 0x1, 0x1);
        gbc.writeMem(0x9233, { 0xcb, 0xc6 });
        gbc.writeMem(0xb086, { 0x1e });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xa29e, gbc.sp());
        EXPECT(0x9235, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9233));
        EXPECT(0xc6, gbc.readMem(0x9234));
        EXPECT(0x1f, gbc.readMem(0xb086));
        // CB C6 005E
        gbc.setState(0x7836, 0x9bcf, 0x7980, 0x73c4, 0xc01d, 0xbd69, 0x0, 0x0);
        gbc.writeMem(0x7836, { 0xcb, 0xc6 });
        gbc.writeMem(0xbd69, { 0xc4 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x9bcf, gbc.sp());
        EXPECT(0x7838, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xbd69));
        // CB C6 005F
        gbc.setState(0x5573, 0xd647, 0x2650, 0xbd9f, 0x923d, 0x44c2, 0x1, 0x0);
        gbc.writeMem(0x44c2, { 0x8d });
        gbc.writeMem(0x5573, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xd647, gbc.sp());
        EXPECT(0x5575, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0060
        gbc.setState(0x7405, 0x25e7, 0x4f20, 0x6ad7, 0x501e, 0x9a74, 0x0, 0x1);
        gbc.writeMem(0x7405, { 0xcb, 0xc6 });
        gbc.writeMem(0x9a74, { 0x16 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x25e7, gbc.sp());
        EXPECT(0x7407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x9a74));
        // CB C6 0061
        gbc.setState(0x9c4b, 0xd8, 0x5230, 0x3f6e, 0xc97c, 0xec6f, 0x0, 0x0);
        gbc.writeMem(0x9c4b, { 0xcb, 0xc6 });
        gbc.writeMem(0xec6f, { 0x5f });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xd8, gbc.sp());
        EXPECT(0x9c4d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c4b));
        EXPECT(0xc6, gbc.readMem(0x9c4c));
        EXPECT(0x5f, gbc.readMem(0xec6f));
        // CB C6 0062
        gbc.setState(0xeda4, 0xa8b8, 0x5040, 0xc528, 0xec60, 0x8201, 0x0, 0x1);
        gbc.writeMem(0x8201, { 0x93 });
        gbc.writeMem(0xeda4, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xa8b8, gbc.sp());
        EXPECT(0xeda6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x93, gbc.readMem(0x8201));
        EXPECT(0xcb, gbc.readMem(0xeda4));
        EXPECT(0xc6, gbc.readMem(0xeda5));
        // CB C6 0063
        gbc.setState(0x51c5, 0xc9f1, 0x73c0, 0x3747, 0xfa3c, 0xf80a, 0x0, 0x0);
        gbc.writeMem(0x51c5, { 0xcb, 0xc6 });
        gbc.writeMem(0xf80a, { 0x82 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xc9f1, gbc.sp());
        EXPECT(0x51c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0xf80a));
        // CB C6 0064
        gbc.setState(0x167c, 0x3c6d, 0x2910, 0xaa3f, 0x68ae, 0x1344, 0x0, 0x0);
        gbc.writeMem(0x1344, { 0xb3 });
        gbc.writeMem(0x167c, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3c6d, gbc.sp());
        EXPECT(0x167e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0066
        gbc.setState(0xa19, 0xa54f, 0xa2e0, 0x4941, 0x1bc2, 0x1c40, 0x0, 0x1);
        gbc.writeMem(0xa19, { 0xcb, 0xc6 });
        gbc.writeMem(0x1c40, { 0x9b });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa54f, gbc.sp());
        EXPECT(0xa1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0069
        gbc.setState(0x1601, 0xb805, 0xed10, 0x8d48, 0x8b51, 0xc23f, 0x0, 0x1);
        gbc.writeMem(0x1601, { 0xcb, 0xc6 });
        gbc.writeMem(0xc23f, { 0xc1 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xb805, gbc.sp());
        EXPECT(0x1603, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xc23f));
        // CB C6 006A
        gbc.setState(0x7e3d, 0x8a07, 0x9850, 0x2ee7, 0xae74, 0x71a2, 0x0, 0x1);
        gbc.writeMem(0x71a2, { 0xe1 });
        gbc.writeMem(0x7e3d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x8a07, gbc.sp());
        EXPECT(0x7e3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0070
        gbc.setState(0xd3b0, 0x1e74, 0x86e0, 0x3290, 0x9d33, 0xed0e, 0x1, 0x1);
        gbc.writeMem(0xd3b0, { 0xcb, 0xc6 });
        gbc.writeMem(0xed0e, { 0x24 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x1e74, gbc.sp());
        EXPECT(0xd3b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3b0));
        EXPECT(0xc6, gbc.readMem(0xd3b1));
        EXPECT(0x25, gbc.readMem(0xed0e));
        // CB C6 0071
        gbc.setState(0xcffd, 0x9599, 0x12a0, 0x6749, 0x37de, 0xa4ec, 0x0, 0x1);
        gbc.writeMem(0xa4ec, { 0xd6 });
        gbc.writeMem(0xcffd, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x9599, gbc.sp());
        EXPECT(0xcfff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xa4ec));
        EXPECT(0xcb, gbc.readMem(0xcffd));
        EXPECT(0xc6, gbc.readMem(0xcffe));
        // CB C6 0072
        gbc.setState(0x533d, 0xd245, 0xd2a0, 0xcaf4, 0x1ee6, 0xdf92, 0x1, 0x0);
        gbc.writeMem(0x533d, { 0xcb, 0xc6 });
        gbc.writeMem(0xdf92, { 0x5f });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xd245, gbc.sp());
        EXPECT(0x533f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xdf92));
        // CB C6 0073
        gbc.setState(0x182d, 0x7bfc, 0x4e40, 0xa69e, 0xeff8, 0x313, 0x1, 0x1);
        gbc.writeMem(0x313, { 0x57 });
        gbc.writeMem(0x182d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7bfc, gbc.sp());
        EXPECT(0x182f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0074
        gbc.setState(0xd0ae, 0x3213, 0x4870, 0xe1c1, 0x5d88, 0x3d4b, 0x0, 0x1);
        gbc.writeMem(0x3d4b, { 0x95 });
        gbc.writeMem(0xd0ae, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x3213, gbc.sp());
        EXPECT(0xd0b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd0ae));
        EXPECT(0xc6, gbc.readMem(0xd0af));
        // CB C6 0076
        gbc.setState(0xc827, 0xf543, 0x1df0, 0x7112, 0xf354, 0xc4f5, 0x0, 0x0);
        gbc.writeMem(0xc4f5, { 0x6e });
        gbc.writeMem(0xc827, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf543, gbc.sp());
        EXPECT(0xc829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xc4f5));
        EXPECT(0xcb, gbc.readMem(0xc827));
        EXPECT(0xc6, gbc.readMem(0xc828));
        // CB C6 0077
        gbc.setState(0x7aec, 0xc30b, 0xbf60, 0x9d73, 0xb8b2, 0xc2f1, 0x1, 0x0);
        gbc.writeMem(0x7aec, { 0xcb, 0xc6 });
        gbc.writeMem(0xc2f1, { 0xa9 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xc30b, gbc.sp());
        EXPECT(0x7aee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xc2f1));
        // CB C6 0078
        gbc.setState(0xd4a9, 0x153f, 0x1890, 0xec85, 0x758d, 0xc5c1, 0x0, 0x0);
        gbc.writeMem(0xc5c1, { 0xc5 });
        gbc.writeMem(0xd4a9, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x153f, gbc.sp());
        EXPECT(0xd4ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xc5c1));
        EXPECT(0xcb, gbc.readMem(0xd4a9));
        EXPECT(0xc6, gbc.readMem(0xd4aa));
        // CB C6 0079
        gbc.setState(0xcaaf, 0xcf86, 0x7470, 0xb0b1, 0x4a7, 0x593, 0x0, 0x0);
        gbc.writeMem(0x593, { 0x3d });
        gbc.writeMem(0xcaaf, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0xcf86, gbc.sp());
        EXPECT(0xcab1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcaaf));
        EXPECT(0xc6, gbc.readMem(0xcab0));
        // CB C6 007A
        gbc.setState(0x4ee5, 0x8985, 0xf400, 0x24c9, 0xe015, 0xed89, 0x1, 0x0);
        gbc.writeMem(0x4ee5, { 0xcb, 0xc6 });
        gbc.writeMem(0xed89, { 0xf8 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x8985, gbc.sp());
        EXPECT(0x4ee7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xed89));
        // CB C6 007C
        gbc.setState(0x15c3, 0xac7b, 0x1f10, 0xe153, 0x3c5e, 0xd1b6, 0x1, 0x1);
        gbc.writeMem(0x15c3, { 0xcb, 0xc6 });
        gbc.writeMem(0xd1b6, { 0x64 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xac7b, gbc.sp());
        EXPECT(0x15c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xd1b6));
        // CB C6 007D
        gbc.setState(0x95c1, 0xe694, 0x9bb0, 0xd03d, 0xf30d, 0x65ad, 0x0, 0x1);
        gbc.writeMem(0x65ad, { 0xb });
        gbc.writeMem(0x95c1, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xe694, gbc.sp());
        EXPECT(0x95c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95c1));
        EXPECT(0xc6, gbc.readMem(0x95c2));
        // CB C6 007E
        gbc.setState(0x6ef1, 0x4d62, 0x6030, 0xf47, 0xa8e3, 0xa4ac, 0x1, 0x1);
        gbc.writeMem(0x6ef1, { 0xcb, 0xc6 });
        gbc.writeMem(0xa4ac, { 0x18 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x4d62, gbc.sp());
        EXPECT(0x6ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa4ac));
        // CB C6 007F
        gbc.setState(0xcd5, 0x5c2a, 0x5f90, 0x881, 0xf654, 0xe4ce, 0x0, 0x0);
        gbc.writeMem(0xcd5, { 0xcb, 0xc6 });
        gbc.writeMem(0xe4ce, { 0x52 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x5c2a, gbc.sp());
        EXPECT(0xcd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xe4ce));
        // CB C6 0080
        gbc.setState(0x22a1, 0xbf96, 0xc240, 0x8a50, 0x10bd, 0x69ec, 0x1, 0x0);
        gbc.writeMem(0x22a1, { 0xcb, 0xc6 });
        gbc.writeMem(0x69ec, { 0xd1 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xbf96, gbc.sp());
        EXPECT(0x22a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0081
        gbc.setState(0x14b0, 0x6e2f, 0x46b0, 0x6dfc, 0x85f4, 0x308f, 0x0, 0x1);
        gbc.writeMem(0x14b0, { 0xcb, 0xc6 });
        gbc.writeMem(0x308f, { 0xbf });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x6e2f, gbc.sp());
        EXPECT(0x14b2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0082
        gbc.setState(0x566d, 0xd873, 0xaaf0, 0x76df, 0xfffc, 0x5ce9, 0x1, 0x0);
        gbc.writeMem(0x566d, { 0xcb, 0xc6 });
        gbc.writeMem(0x5ce9, { 0xa5 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xd873, gbc.sp());
        EXPECT(0x566f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0083
        gbc.setState(0x1f6c, 0xc0fe, 0xe9d0, 0xf4fb, 0xe8ea, 0x421d, 0x1, 0x0);
        gbc.writeMem(0x1f6c, { 0xcb, 0xc6 });
        gbc.writeMem(0x421d, { 0x89 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xc0fe, gbc.sp());
        EXPECT(0x1f6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0084
        gbc.setState(0x87ce, 0x8b02, 0x8c30, 0xcac9, 0xfd75, 0x5de5, 0x0, 0x0);
        gbc.writeMem(0x5de5, { 0x4b });
        gbc.writeMem(0x87ce, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8b02, gbc.sp());
        EXPECT(0x87d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x87ce));
        EXPECT(0xc6, gbc.readMem(0x87cf));
        // CB C6 0085
        gbc.setState(0x8b06, 0x84d7, 0x320, 0xbbe1, 0xa692, 0x572f, 0x1, 0x1);
        gbc.writeMem(0x572f, { 0x79 });
        gbc.writeMem(0x8b06, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x84d7, gbc.sp());
        EXPECT(0x8b08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b06));
        EXPECT(0xc6, gbc.readMem(0x8b07));
        // CB C6 0086
        gbc.setState(0xe4e5, 0x942a, 0x3c10, 0x6950, 0xb8c0, 0x6f34, 0x0, 0x0);
        gbc.writeMem(0x6f34, { 0x15 });
        gbc.writeMem(0xe4e5, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x942a, gbc.sp());
        EXPECT(0xe4e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe4e5));
        EXPECT(0xc6, gbc.readMem(0xe4e6));
        // CB C6 0088
        gbc.setState(0x132f, 0x6664, 0x6dc0, 0xdc5e, 0x884d, 0xc913, 0x0, 0x0);
        gbc.writeMem(0x132f, { 0xcb, 0xc6 });
        gbc.writeMem(0xc913, { 0xc8 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x6664, gbc.sp());
        EXPECT(0x1331, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xc913));
        // CB C6 0089
        gbc.setState(0x3636, 0x1321, 0xcef0, 0x2515, 0x3db3, 0xe71b, 0x1, 0x0);
        gbc.writeMem(0x3636, { 0xcb, 0xc6 });
        gbc.writeMem(0xe71b, { 0xb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x1321, gbc.sp());
        EXPECT(0x3638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xe71b));
        // CB C6 008B
        gbc.setState(0x12c1, 0xabe3, 0xeb0, 0x5a7e, 0xea07, 0x2148, 0x0, 0x0);
        gbc.writeMem(0x12c1, { 0xcb, 0xc6 });
        gbc.writeMem(0x2148, { 0x7 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xabe3, gbc.sp());
        EXPECT(0x12c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 008C
        gbc.setState(0x788a, 0xe197, 0x9d70, 0x707b, 0xbcb, 0xbd27, 0x1, 0x0);
        gbc.writeMem(0x788a, { 0xcb, 0xc6 });
        gbc.writeMem(0xbd27, { 0x7d });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xe197, gbc.sp());
        EXPECT(0x788c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7d, gbc.readMem(0xbd27));
        // CB C6 008E
        gbc.setState(0x4790, 0x2f75, 0xe170, 0x4613, 0xc14e, 0x9d87, 0x1, 0x0);
        gbc.writeMem(0x4790, { 0xcb, 0xc6 });
        gbc.writeMem(0x9d87, { 0x98 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x2f75, gbc.sp());
        EXPECT(0x4792, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9d87));
        // CB C6 008F
        gbc.setState(0xa4d, 0x12ee, 0x85d0, 0xdae4, 0x4a71, 0x8ad9, 0x1, 0x0);
        gbc.writeMem(0xa4d, { 0xcb, 0xc6 });
        gbc.writeMem(0x8ad9, { 0x7a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x12ee, gbc.sp());
        EXPECT(0xa4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0x8ad9));
        // CB C6 0090
        gbc.setState(0x6d62, 0x1987, 0x6a0, 0xdc77, 0xad68, 0x35ab, 0x0, 0x1);
        gbc.writeMem(0x35ab, { 0x9f });
        gbc.writeMem(0x6d62, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1987, gbc.sp());
        EXPECT(0x6d64, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0092
        gbc.setState(0x6808, 0x4008, 0x7570, 0xad2c, 0x99a7, 0xead2, 0x1, 0x1);
        gbc.writeMem(0x6808, { 0xcb, 0xc6 });
        gbc.writeMem(0xead2, { 0xf4 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x4008, gbc.sp());
        EXPECT(0x680a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xead2));
        // CB C6 0096
        gbc.setState(0xbdec, 0xa1d9, 0x8800, 0x357a, 0xd231, 0xc5cd, 0x0, 0x1);
        gbc.writeMem(0xbdec, { 0xcb, 0xc6 });
        gbc.writeMem(0xc5cd, { 0x96 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xa1d9, gbc.sp());
        EXPECT(0xbdee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbdec));
        EXPECT(0xc6, gbc.readMem(0xbded));
        EXPECT(0x97, gbc.readMem(0xc5cd));
        // CB C6 0097
        gbc.setState(0x464c, 0xc516, 0xe8e0, 0x6d4e, 0xf65, 0x86ef, 0x1, 0x0);
        gbc.writeMem(0x464c, { 0xcb, 0xc6 });
        gbc.writeMem(0x86ef, { 0x89 });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xc516, gbc.sp());
        EXPECT(0x464e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x86ef));
        // CB C6 0098
        gbc.setState(0x4d1f, 0xcc35, 0x40b0, 0xa749, 0xfc3a, 0xd646, 0x1, 0x0);
        gbc.writeMem(0x4d1f, { 0xcb, 0xc6 });
        gbc.writeMem(0xd646, { 0x21 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xcc35, gbc.sp());
        EXPECT(0x4d21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0xd646));
        // CB C6 009A
        gbc.setState(0xb12d, 0x427a, 0xdb50, 0xd0fc, 0xda40, 0x4f2f, 0x0, 0x1);
        gbc.writeMem(0x4f2f, { 0xd7 });
        gbc.writeMem(0xb12d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x427a, gbc.sp());
        EXPECT(0xb12f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb12d));
        EXPECT(0xc6, gbc.readMem(0xb12e));
        // CB C6 009B
        gbc.setState(0x557d, 0xa143, 0xe370, 0xfc, 0xcce3, 0x539e, 0x0, 0x1);
        gbc.writeMem(0x539e, { 0x95 });
        gbc.writeMem(0x557d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa143, gbc.sp());
        EXPECT(0x557f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 009C
        gbc.setState(0x66ce, 0xaffd, 0xea20, 0x8eae, 0x5be1, 0xb464, 0x1, 0x1);
        gbc.writeMem(0x66ce, { 0xcb, 0xc6 });
        gbc.writeMem(0xb464, { 0xc0 });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xaffd, gbc.sp());
        EXPECT(0x66d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xb464));
        // CB C6 009D
        gbc.setState(0xd88a, 0xe627, 0xe900, 0xf8ce, 0x8e2f, 0xf86b, 0x0, 0x0);
        gbc.writeMem(0xd88a, { 0xcb, 0xc6 });
        gbc.writeMem(0xf86b, { 0xbe });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0xe627, gbc.sp());
        EXPECT(0xd88c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd88a));
        EXPECT(0xc6, gbc.readMem(0xd88b));
        EXPECT(0xbf, gbc.readMem(0xf86b));
        // CB C6 009E
        gbc.setState(0xda94, 0x550e, 0xc4c0, 0xcba9, 0xaf29, 0xa7e7, 0x0, 0x1);
        gbc.writeMem(0xa7e7, { 0x22 });
        gbc.writeMem(0xda94, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x550e, gbc.sp());
        EXPECT(0xda96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xa7e7));
        EXPECT(0xcb, gbc.readMem(0xda94));
        EXPECT(0xc6, gbc.readMem(0xda95));
        // CB C6 009F
        gbc.setState(0x63e6, 0xccef, 0x2800, 0x35e5, 0x4967, 0x2ad3, 0x0, 0x1);
        gbc.writeMem(0x2ad3, { 0x5d });
        gbc.writeMem(0x63e6, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xccef, gbc.sp());
        EXPECT(0x63e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 00A0
        gbc.setState(0x4f4d, 0x45ea, 0x40a0, 0x679e, 0xdbe2, 0xb18e, 0x0, 0x0);
        gbc.writeMem(0x4f4d, { 0xcb, 0xc6 });
        gbc.writeMem(0xb18e, { 0x16 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x45ea, gbc.sp());
        EXPECT(0x4f4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xb18e));
        // CB C6 00A1
        gbc.setState(0xc1cd, 0x9dd1, 0xb900, 0xdc76, 0x2c69, 0xb3e3, 0x1, 0x1);
        gbc.writeMem(0xb3e3, { 0x54 });
        gbc.writeMem(0xc1cd, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x9dd1, gbc.sp());
        EXPECT(0xc1cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xb3e3));
        EXPECT(0xcb, gbc.readMem(0xc1cd));
        EXPECT(0xc6, gbc.readMem(0xc1ce));
        // CB C6 00A3
        gbc.setState(0x2621, 0x90e6, 0xa9f0, 0x89ec, 0xc8b8, 0x8b61, 0x1, 0x1);
        gbc.writeMem(0x2621, { 0xcb, 0xc6 });
        gbc.writeMem(0x8b61, { 0x88 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x90e6, gbc.sp());
        EXPECT(0x2623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x8b61));
        // CB C6 00A5
        gbc.setState(0xa0d9, 0x8164, 0x5dc0, 0x54e2, 0xd1d5, 0xaec3, 0x0, 0x0);
        gbc.writeMem(0xa0d9, { 0xcb, 0xc6 });
        gbc.writeMem(0xaec3, { 0x1b });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x8164, gbc.sp());
        EXPECT(0xa0db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa0d9));
        EXPECT(0xc6, gbc.readMem(0xa0da));
        EXPECT(0x1b, gbc.readMem(0xaec3));
        // CB C6 00A7
        gbc.setState(0x8ad0, 0xe592, 0x2460, 0x7abb, 0xbf93, 0x4c1e, 0x1, 0x1);
        gbc.writeMem(0x4c1e, { 0xb5 });
        gbc.writeMem(0x8ad0, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xe592, gbc.sp());
        EXPECT(0x8ad2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ad0));
        EXPECT(0xc6, gbc.readMem(0x8ad1));
        // CB C6 00A8
        gbc.setState(0x3c41, 0x971e, 0xedb0, 0x1bf, 0x1d80, 0x9248, 0x1, 0x0);
        gbc.writeMem(0x3c41, { 0xcb, 0xc6 });
        gbc.writeMem(0x9248, { 0xcd });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x971e, gbc.sp());
        EXPECT(0x3c43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x9248));
        // CB C6 00A9
        gbc.setState(0xd4dc, 0xeff4, 0x77b0, 0x14ce, 0x1006, 0x8085, 0x0, 0x0);
        gbc.writeMem(0x8085, { 0x5a });
        gbc.writeMem(0xd4dc, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xeff4, gbc.sp());
        EXPECT(0xd4de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8085));
        EXPECT(0xcb, gbc.readMem(0xd4dc));
        EXPECT(0xc6, gbc.readMem(0xd4dd));
        // CB C6 00AB
        gbc.setState(0x802a, 0x4e74, 0xeb50, 0x32e1, 0x936a, 0xef44, 0x0, 0x0);
        gbc.writeMem(0x802a, { 0xcb, 0xc6 });
        gbc.writeMem(0xef44, { 0x1 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x4e74, gbc.sp());
        EXPECT(0x802c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x802a));
        EXPECT(0xc6, gbc.readMem(0x802b));
        EXPECT(0x1, gbc.readMem(0xef44));
        // CB C6 00AD
        gbc.setState(0x7639, 0xaf6a, 0xcb50, 0xc886, 0xfc5c, 0x7500, 0x0, 0x0);
        gbc.writeMem(0x7500, { 0x2d });
        gbc.writeMem(0x7639, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xaf6a, gbc.sp());
        EXPECT(0x763b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 00AE
        gbc.setState(0x713e, 0xb9d5, 0xacd0, 0x2bff, 0x55c0, 0xfed4, 0x1, 0x0);
        gbc.writeMem(0x713e, { 0xcb, 0xc6 });
        gbc.writeMem(0xfed4, { 0x4a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xb9d5, gbc.sp());
        EXPECT(0x7140, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xfed4));
        // CB C6 00AF
        gbc.setState(0x16c4, 0x2be, 0x4af0, 0x4114, 0x4c24, 0x1fa8, 0x1, 0x1);
        gbc.writeMem(0x16c4, { 0xcb, 0xc6 });
        gbc.writeMem(0x1fa8, { 0xcb });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x2be, gbc.sp());
        EXPECT(0x16c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 00B0
        gbc.setState(0xbfb2, 0x3e8a, 0x1fb0, 0xe340, 0x2eaa, 0xd96d, 0x1, 0x0);
        gbc.writeMem(0xbfb2, { 0xcb, 0xc6 });
        gbc.writeMem(0xd96d, { 0xbf });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3e8a, gbc.sp());
        EXPECT(0xbfb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbfb2));
        EXPECT(0xc6, gbc.readMem(0xbfb3));
        EXPECT(0xbf, gbc.readMem(0xd96d));
        // CB C6 00B1
        gbc.setState(0x3889, 0xe2ce, 0x2a40, 0x8ed3, 0x6c2a, 0x8337, 0x1, 0x0);
        gbc.writeMem(0x3889, { 0xcb, 0xc6 });
        gbc.writeMem(0x8337, { 0x46 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xe2ce, gbc.sp());
        EXPECT(0x388b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0x8337));
        // CB C6 00B2
        gbc.setState(0x98ee, 0xbf00, 0x73c0, 0x10ba, 0xc724, 0xb74f, 0x0, 0x1);
        gbc.writeMem(0x98ee, { 0xcb, 0xc6 });
        gbc.writeMem(0xb74f, { 0xb1 });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbf00, gbc.sp());
        EXPECT(0x98f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98ee));
        EXPECT(0xc6, gbc.readMem(0x98ef));
        EXPECT(0xb1, gbc.readMem(0xb74f));
        // CB C6 00B3
        gbc.setState(0x5b4b, 0x23f0, 0xb770, 0x7fad, 0xdad6, 0xdd24, 0x1, 0x0);
        gbc.writeMem(0x5b4b, { 0xcb, 0xc6 });
        gbc.writeMem(0xdd24, { 0xa6 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x23f0, gbc.sp());
        EXPECT(0x5b4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xdd24));
        // CB C6 00B4
        gbc.setState(0x7cd, 0xa766, 0xc7d0, 0xa532, 0x12c, 0x8ad4, 0x1, 0x0);
        gbc.writeMem(0x7cd, { 0xcb, 0xc6 });
        gbc.writeMem(0x8ad4, { 0x31 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xa766, gbc.sp());
        EXPECT(0x7cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x31, gbc.readMem(0x8ad4));
        // CB C6 00B6
        gbc.setState(0x1f06, 0x74d, 0x58f0, 0x5b23, 0x1ea0, 0x98b1, 0x1, 0x1);
        gbc.writeMem(0x1f06, { 0xcb, 0xc6 });
        gbc.writeMem(0x98b1, { 0x83 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x74d, gbc.sp());
        EXPECT(0x1f08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x98b1));
        // CB C6 00B8
        gbc.setState(0x2d76, 0x6b98, 0xab70, 0xd416, 0x4927, 0x1d2b, 0x1, 0x0);
        gbc.writeMem(0x1d2b, { 0x11 });
        gbc.writeMem(0x2d76, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x6b98, gbc.sp());
        EXPECT(0x2d78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 00B9
        gbc.setState(0x6be, 0x29da, 0x9a70, 0xfd50, 0x1234, 0x3b58, 0x0, 0x0);
        gbc.writeMem(0x6be, { 0xcb, 0xc6 });
        gbc.writeMem(0x3b58, { 0x73 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x29da, gbc.sp());
        EXPECT(0x6c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 00BA
        gbc.setState(0xb9cd, 0xbf0, 0x7570, 0x3daa, 0x68bb, 0x8ebb, 0x1, 0x0);
        gbc.writeMem(0x8ebb, { 0x5b });
        gbc.writeMem(0xb9cd, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xbf0, gbc.sp());
        EXPECT(0xb9cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x8ebb));
        EXPECT(0xcb, gbc.readMem(0xb9cd));
        EXPECT(0xc6, gbc.readMem(0xb9ce));
        // CB C6 00BC
        gbc.setState(0xb25d, 0xd39b, 0xcfe0, 0xf765, 0xbf23, 0xe1e3, 0x0, 0x1);
        gbc.writeMem(0xb25d, { 0xcb, 0xc6 });
        gbc.writeMem(0xe1e3, { 0xe8 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd39b, gbc.sp());
        EXPECT(0xb25f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb25d));
        EXPECT(0xc6, gbc.readMem(0xb25e));
        EXPECT(0xe9, gbc.readMem(0xe1e3));
        // CB C6 00BD
        gbc.setState(0x7e21, 0xe7da, 0x9ad0, 0x8a66, 0x6a8a, 0xb5c1, 0x0, 0x1);
        gbc.writeMem(0x7e21, { 0xcb, 0xc6 });
        gbc.writeMem(0xb5c1, { 0x2b });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xe7da, gbc.sp());
        EXPECT(0x7e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xb5c1));
        // CB C6 00C1
        gbc.setState(0x25e4, 0xb361, 0xde70, 0x227b, 0xf80, 0x8c2d, 0x0, 0x1);
        gbc.writeMem(0x25e4, { 0xcb, 0xc6 });
        gbc.writeMem(0x8c2d, { 0xcc });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xb361, gbc.sp());
        EXPECT(0x25e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0x8c2d));
        // CB C6 00C3
        gbc.setState(0xa9ac, 0xb0bd, 0x4170, 0xe2a2, 0xc566, 0x8bed, 0x1, 0x1);
        gbc.writeMem(0x8bed, { 0x38 });
        gbc.writeMem(0xa9ac, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xb0bd, gbc.sp());
        EXPECT(0xa9ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x8bed));
        EXPECT(0xcb, gbc.readMem(0xa9ac));
        EXPECT(0xc6, gbc.readMem(0xa9ad));
        // CB C6 00C4
        gbc.setState(0xcfb9, 0x4ab5, 0x7fe0, 0xff6c, 0x8df5, 0xf105, 0x0, 0x0);
        gbc.writeMem(0xcfb9, { 0xcb, 0xc6 });
        gbc.writeMem(0xf105, { 0x59 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x4ab5, gbc.sp());
        EXPECT(0xcfbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfb9));
        EXPECT(0xc6, gbc.readMem(0xcfba));
        EXPECT(0x59, gbc.readMem(0xf105));
        // CB C6 00C5
        gbc.setState(0xa8c9, 0xbfe4, 0x8bb0, 0x875b, 0x9764, 0x239a, 0x1, 0x1);
        gbc.writeMem(0x239a, { 0xef });
        gbc.writeMem(0xa8c9, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xbfe4, gbc.sp());
        EXPECT(0xa8cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8c9));
        EXPECT(0xc6, gbc.readMem(0xa8ca));
        // CB C6 00C7
        gbc.setState(0xcfda, 0x14b5, 0x9970, 0xf6cb, 0xede2, 0x3d0e, 0x1, 0x0);
        gbc.writeMem(0x3d0e, { 0x89 });
        gbc.writeMem(0xcfda, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x14b5, gbc.sp());
        EXPECT(0xcfdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfda));
        EXPECT(0xc6, gbc.readMem(0xcfdb));
        // CB C6 00C8
        gbc.setState(0x6e77, 0xeb3f, 0x9c50, 0xed4e, 0xa7c4, 0xd8da, 0x0, 0x1);
        gbc.writeMem(0x6e77, { 0xcb, 0xc6 });
        gbc.writeMem(0xd8da, { 0xbe });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xeb3f, gbc.sp());
        EXPECT(0x6e79, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xd8da));
        // CB C6 00C9
        gbc.setState(0x4e44, 0x7118, 0x5e80, 0x6f80, 0x24fb, 0xfece, 0x1, 0x0);
        gbc.writeMem(0x4e44, { 0xcb, 0xc6 });
        gbc.writeMem(0xfece, { 0xcd });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7118, gbc.sp());
        EXPECT(0x4e46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xfece));
        // CB C6 00CA
        gbc.setState(0x16da, 0x87c5, 0xfb10, 0x46d2, 0x590f, 0x882a, 0x0, 0x0);
        gbc.writeMem(0x16da, { 0xcb, 0xc6 });
        gbc.writeMem(0x882a, { 0xdb });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x87c5, gbc.sp());
        EXPECT(0x16dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x882a));
        // CB C6 00CB
        gbc.setState(0x7e08, 0x1307, 0x7760, 0x2c26, 0x887d, 0x8b1a, 0x1, 0x1);
        gbc.writeMem(0x7e08, { 0xcb, 0xc6 });
        gbc.writeMem(0x8b1a, { 0xe2 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x1307, gbc.sp());
        EXPECT(0x7e0a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x8b1a));
        // CB C6 00CC
        gbc.setState(0x76be, 0xd934, 0xd180, 0x484, 0xa336, 0x37ab, 0x1, 0x1);
        gbc.writeMem(0x37ab, { 0xd5 });
        gbc.writeMem(0x76be, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd934, gbc.sp());
        EXPECT(0x76c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 00CE
        gbc.setState(0x49ba, 0x302c, 0x2570, 0x5f53, 0xdbca, 0xe79c, 0x0, 0x1);
        gbc.writeMem(0x49ba, { 0xcb, 0xc6 });
        gbc.writeMem(0xe79c, { 0x35 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x302c, gbc.sp());
        EXPECT(0x49bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xe79c));
        // CB C6 00CF
        gbc.setState(0x5ec1, 0xd402, 0x57d0, 0xd2a2, 0x50d0, 0x9139, 0x1, 0x0);
        gbc.writeMem(0x5ec1, { 0xcb, 0xc6 });
        gbc.writeMem(0x9139, { 0x21 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xd402, gbc.sp());
        EXPECT(0x5ec3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x21, gbc.readMem(0x9139));
        // CB C6 00D2
        gbc.setState(0xa215, 0xeb05, 0xd80, 0x437a, 0xca6, 0xe2f7, 0x0, 0x0);
        gbc.writeMem(0xa215, { 0xcb, 0xc6 });
        gbc.writeMem(0xe2f7, { 0xfa });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xeb05, gbc.sp());
        EXPECT(0xa217, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa215));
        EXPECT(0xc6, gbc.readMem(0xa216));
        EXPECT(0xfb, gbc.readMem(0xe2f7));
        // CB C6 00D5
        gbc.setState(0xdcbe, 0xe5ee, 0x7230, 0xaee0, 0x90c6, 0x80c7, 0x0, 0x0);
        gbc.writeMem(0x80c7, { 0x14 });
        gbc.writeMem(0xdcbe, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe5ee, gbc.sp());
        EXPECT(0xdcc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0x80c7));
        EXPECT(0xcb, gbc.readMem(0xdcbe));
        EXPECT(0xc6, gbc.readMem(0xdcbf));
        // CB C6 00D6
        gbc.setState(0x4a2, 0x5eb0, 0xb20, 0xb886, 0xdbb1, 0x8cf2, 0x0, 0x0);
        gbc.writeMem(0x4a2, { 0xcb, 0xc6 });
        gbc.writeMem(0x8cf2, { 0xd5 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x5eb0, gbc.sp());
        EXPECT(0x4a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x8cf2));
        // CB C6 00D8
        gbc.setState(0x355, 0xe3e8, 0xbfe0, 0x9fc8, 0x6649, 0xef6a, 0x1, 0x1);
        gbc.writeMem(0x355, { 0xcb, 0xc6 });
        gbc.writeMem(0xef6a, { 0xe6 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe3e8, gbc.sp());
        EXPECT(0x357, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xef6a));
        // CB C6 00D9
        gbc.setState(0x40e, 0xafa8, 0xfd90, 0x83f5, 0xd451, 0x475e, 0x0, 0x1);
        gbc.writeMem(0x40e, { 0xcb, 0xc6 });
        gbc.writeMem(0x475e, { 0xaf });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xafa8, gbc.sp());
        EXPECT(0x410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 00DA
        gbc.setState(0x65e4, 0x37b, 0x180, 0x2fe9, 0xb1fb, 0xb314, 0x1, 0x1);
        gbc.writeMem(0x65e4, { 0xcb, 0xc6 });
        gbc.writeMem(0xb314, { 0xc9 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x37b, gbc.sp());
        EXPECT(0x65e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0xb314));
        // CB C6 00DB
        gbc.setState(0x7951, 0x1f3c, 0xfd60, 0x97c8, 0xbcdb, 0xc9b3, 0x1, 0x0);
        gbc.writeMem(0x7951, { 0xcb, 0xc6 });
        gbc.writeMem(0xc9b3, { 0xb2 });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1f3c, gbc.sp());
        EXPECT(0x7953, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xc9b3));
        // CB C6 00DC
        gbc.setState(0x3c9d, 0xabfc, 0xc450, 0x198f, 0x36ce, 0x260c, 0x0, 0x1);
        gbc.writeMem(0x260c, { 0xc3 });
        gbc.writeMem(0x3c9d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xabfc, gbc.sp());
        EXPECT(0x3c9f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 00DD
        gbc.setState(0x2a77, 0x51ae, 0xb6c0, 0x1d6a, 0x8b1c, 0xd597, 0x1, 0x0);
        gbc.writeMem(0x2a77, { 0xcb, 0xc6 });
        gbc.writeMem(0xd597, { 0x8e });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x51ae, gbc.sp());
        EXPECT(0x2a79, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xd597));
        // CB C6 00E0
        gbc.setState(0x21bb, 0x554f, 0x9040, 0x8769, 0x211d, 0x2a23, 0x1, 0x1);
        gbc.writeMem(0x21bb, { 0xcb, 0xc6 });
        gbc.writeMem(0x2a23, { 0x11 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x554f, gbc.sp());
        EXPECT(0x21bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 00E1
        gbc.setState(0x8f00, 0xd360, 0x3c60, 0x10c3, 0x96c0, 0xa6a4, 0x0, 0x1);
        gbc.writeMem(0x8f00, { 0xcb, 0xc6 });
        gbc.writeMem(0xa6a4, { 0x74 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xd360, gbc.sp());
        EXPECT(0x8f02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f00));
        EXPECT(0xc6, gbc.readMem(0x8f01));
        EXPECT(0x75, gbc.readMem(0xa6a4));
        // CB C6 00E2
        gbc.setState(0xda28, 0xe9b7, 0x95b0, 0xb203, 0xd07d, 0x8605, 0x0, 0x0);
        gbc.writeMem(0x8605, { 0xcb });
        gbc.writeMem(0xda28, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe9b7, gbc.sp());
        EXPECT(0xda2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8605));
        EXPECT(0xcb, gbc.readMem(0xda28));
        EXPECT(0xc6, gbc.readMem(0xda29));
        // CB C6 00E3
        gbc.setState(0xadc3, 0xb40, 0xc870, 0x2edd, 0x9c17, 0x8d86, 0x1, 0x0);
        gbc.writeMem(0x8d86, { 0x5e });
        gbc.writeMem(0xadc3, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xb40, gbc.sp());
        EXPECT(0xadc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0x8d86));
        EXPECT(0xcb, gbc.readMem(0xadc3));
        EXPECT(0xc6, gbc.readMem(0xadc4));
        // CB C6 00E4
        gbc.setState(0x2d3b, 0xe940, 0x12e0, 0x1fcb, 0x346c, 0x576e, 0x0, 0x0);
        gbc.writeMem(0x2d3b, { 0xcb, 0xc6 });
        gbc.writeMem(0x576e, { 0xd9 });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xe940, gbc.sp());
        EXPECT(0x2d3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 00E5
        gbc.setState(0x6ca3, 0xadaa, 0x3f00, 0xf698, 0xc47e, 0xe4cb, 0x0, 0x1);
        gbc.writeMem(0x6ca3, { 0xcb, 0xc6 });
        gbc.writeMem(0xe4cb, { 0x55 });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xadaa, gbc.sp());
        EXPECT(0x6ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe4cb));
        // CB C6 00E7
        gbc.setState(0x1b24, 0xd00c, 0x9880, 0xbfce, 0xe1da, 0xaf8, 0x1, 0x0);
        gbc.writeMem(0xaf8, { 0x1 });
        gbc.writeMem(0x1b24, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xd00c, gbc.sp());
        EXPECT(0x1b26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 00E8
        gbc.setState(0x53c, 0x51c1, 0x910, 0x13fc, 0x371f, 0xac5f, 0x1, 0x1);
        gbc.writeMem(0x53c, { 0xcb, 0xc6 });
        gbc.writeMem(0xac5f, { 0x5f });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x51c1, gbc.sp());
        EXPECT(0x53e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xac5f));
        // CB C6 00E9
        gbc.setState(0x2a64, 0x3a04, 0x4030, 0xc49b, 0x4ab, 0xd467, 0x0, 0x1);
        gbc.writeMem(0x2a64, { 0xcb, 0xc6 });
        gbc.writeMem(0xd467, { 0x2a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x3a04, gbc.sp());
        EXPECT(0x2a66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2b, gbc.readMem(0xd467));
        // CB C6 00EB
        gbc.setState(0x91f1, 0x5a92, 0xc270, 0xa316, 0xf030, 0x77ab, 0x1, 0x1);
        gbc.writeMem(0x77ab, { 0xb });
        gbc.writeMem(0x91f1, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x5a92, gbc.sp());
        EXPECT(0x91f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f1));
        EXPECT(0xc6, gbc.readMem(0x91f2));
        // CB C6 00EC
        gbc.setState(0x65de, 0x8552, 0x1c70, 0xe0b8, 0x2397, 0xdbf9, 0x1, 0x0);
        gbc.writeMem(0x65de, { 0xcb, 0xc6 });
        gbc.writeMem(0xdbf9, { 0x8e });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8552, gbc.sp());
        EXPECT(0x65e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xdbf9));
        // CB C6 00EE
        gbc.setState(0xda30, 0x7e1e, 0xaeb0, 0x3c1e, 0xe6bf, 0xe247, 0x0, 0x1);
        gbc.writeMem(0xda30, { 0xcb, 0xc6 });
        gbc.writeMem(0xe247, { 0x56 });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x7e1e, gbc.sp());
        EXPECT(0xda32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xda30));
        EXPECT(0xc6, gbc.readMem(0xda31));
        EXPECT(0x57, gbc.readMem(0xe247));
        // CB C6 00EF
        gbc.setState(0xa227, 0xce71, 0x45e0, 0xdcfe, 0x2ed9, 0x1b23, 0x1, 0x0);
        gbc.writeMem(0x1b23, { 0xbf });
        gbc.writeMem(0xa227, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xce71, gbc.sp());
        EXPECT(0xa229, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa227));
        EXPECT(0xc6, gbc.readMem(0xa228));
        // CB C6 00F0
        gbc.setState(0xcc87, 0x70fe, 0xecd0, 0xa6dc, 0x7153, 0xefb9, 0x0, 0x0);
        gbc.writeMem(0xcc87, { 0xcb, 0xc6 });
        gbc.writeMem(0xefb9, { 0x2b });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x70fe, gbc.sp());
        EXPECT(0xcc89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc87));
        EXPECT(0xc6, gbc.readMem(0xcc88));
        EXPECT(0x2b, gbc.readMem(0xefb9));
        // CB C6 00F3
        gbc.setState(0xcfab, 0x8f1b, 0xfd0, 0xfed6, 0x9ebc, 0x76ad, 0x0, 0x0);
        gbc.writeMem(0x76ad, { 0xcd });
        gbc.writeMem(0xcfab, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x8f1b, gbc.sp());
        EXPECT(0xcfad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcfab));
        EXPECT(0xc6, gbc.readMem(0xcfac));
        // CB C6 00F4
        gbc.setState(0x5a47, 0x2696, 0x7a80, 0xabc, 0xe590, 0xfe42, 0x0, 0x0);
        gbc.writeMem(0x5a47, { 0xcb, 0xc6 });
        gbc.writeMem(0xfe42, { 0x47 });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x2696, gbc.sp());
        EXPECT(0x5a49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xfe42));
        // CB C6 00F5
        gbc.setState(0xba43, 0xbc97, 0x3ae0, 0xd344, 0xbf2d, 0x8fc1, 0x0, 0x0);
        gbc.writeMem(0x8fc1, { 0xe7 });
        gbc.writeMem(0xba43, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xbc97, gbc.sp());
        EXPECT(0xba45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0x8fc1));
        EXPECT(0xcb, gbc.readMem(0xba43));
        EXPECT(0xc6, gbc.readMem(0xba44));
        // CB C6 00F6
        gbc.setState(0x3e54, 0xca61, 0xa280, 0x278e, 0xdd5f, 0xc2ed, 0x0, 0x1);
        gbc.writeMem(0x3e54, { 0xcb, 0xc6 });
        gbc.writeMem(0xc2ed, { 0xca });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xca61, gbc.sp());
        EXPECT(0x3e56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc2ed));
        // CB C6 00F7
        gbc.setState(0x919a, 0x4988, 0x70c0, 0x586, 0xaacc, 0x1b58, 0x1, 0x1);
        gbc.writeMem(0x1b58, { 0xc7 });
        gbc.writeMem(0x919a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x4988, gbc.sp());
        EXPECT(0x919c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x919a));
        EXPECT(0xc6, gbc.readMem(0x919b));
        // CB C6 00F8
        gbc.setState(0x1a28, 0xdc53, 0xd3d0, 0x956c, 0x385b, 0xdd32, 0x1, 0x0);
        gbc.writeMem(0x1a28, { 0xcb, 0xc6 });
        gbc.writeMem(0xdd32, { 0x80 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdc53, gbc.sp());
        EXPECT(0x1a2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x81, gbc.readMem(0xdd32));
        // CB C6 00F9
        gbc.setState(0x4f32, 0x9990, 0xe3c0, 0x935, 0x87e0, 0xc132, 0x1, 0x0);
        gbc.writeMem(0x4f32, { 0xcb, 0xc6 });
        gbc.writeMem(0xc132, { 0xae });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x9990, gbc.sp());
        EXPECT(0x4f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xc132));
        // CB C6 00FE
        gbc.setState(0x3d1d, 0x2a89, 0xab60, 0x6f04, 0xa68e, 0x40f5, 0x1, 0x1);
        gbc.writeMem(0x3d1d, { 0xcb, 0xc6 });
        gbc.writeMem(0x40f5, { 0x3b });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x2a89, gbc.sp());
        EXPECT(0x3d1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 00FF
        gbc.setState(0x726a, 0x8d5b, 0xedf0, 0x2014, 0x8396, 0x876d, 0x0, 0x0);
        gbc.writeMem(0x726a, { 0xcb, 0xc6 });
        gbc.writeMem(0x876d, { 0x5 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8d5b, gbc.sp());
        EXPECT(0x726c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0x876d));
        // CB C6 0100
        gbc.setState(0xbb25, 0x2303, 0xf8d0, 0x81b1, 0x8748, 0x148a, 0x0, 0x1);
        gbc.writeMem(0x148a, { 0xff });
        gbc.writeMem(0xbb25, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x2303, gbc.sp());
        EXPECT(0xbb27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbb25));
        EXPECT(0xc6, gbc.readMem(0xbb26));
        // CB C6 0101
        gbc.setState(0x188d, 0xc54c, 0xfda0, 0xe8d, 0x251, 0xd810, 0x0, 0x1);
        gbc.writeMem(0x188d, { 0xcb, 0xc6 });
        gbc.writeMem(0xd810, { 0x4d });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xc54c, gbc.sp());
        EXPECT(0x188f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xd810));
        // CB C6 0102
        gbc.setState(0x32dc, 0x5464, 0xd630, 0x13d7, 0x48ee, 0xebd8, 0x1, 0x1);
        gbc.writeMem(0x32dc, { 0xcb, 0xc6 });
        gbc.writeMem(0xebd8, { 0x10 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x5464, gbc.sp());
        EXPECT(0x32de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xebd8));
        // CB C6 0103
        gbc.setState(0xdf5a, 0xf59e, 0xbab0, 0x432e, 0x34c0, 0x91c5, 0x0, 0x1);
        gbc.writeMem(0x91c5, { 0x72 });
        gbc.writeMem(0xdf5a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf59e, gbc.sp());
        EXPECT(0xdf5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x91c5));
        EXPECT(0xcb, gbc.readMem(0xdf5a));
        EXPECT(0xc6, gbc.readMem(0xdf5b));
        // CB C6 0105
        gbc.setState(0x3b9, 0xfee6, 0x5fb0, 0xb672, 0xbb1f, 0x9755, 0x1, 0x0);
        gbc.writeMem(0x3b9, { 0xcb, 0xc6 });
        gbc.writeMem(0x9755, { 0x52 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xfee6, gbc.sp());
        EXPECT(0x3bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0x9755));
        // CB C6 0107
        gbc.setState(0xd4cf, 0x3f69, 0xa5f0, 0x37c7, 0x150a, 0xde9a, 0x0, 0x0);
        gbc.writeMem(0xd4cf, { 0xcb, 0xc6 });
        gbc.writeMem(0xde9a, { 0x60 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3f69, gbc.sp());
        EXPECT(0xd4d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd4cf));
        EXPECT(0xc6, gbc.readMem(0xd4d0));
        EXPECT(0x61, gbc.readMem(0xde9a));
        // CB C6 0109
        gbc.setState(0x4e20, 0x17fa, 0xf580, 0xfff8, 0x3f8f, 0xc546, 0x1, 0x0);
        gbc.writeMem(0x4e20, { 0xcb, 0xc6 });
        gbc.writeMem(0xc546, { 0x26 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x17fa, gbc.sp());
        EXPECT(0x4e22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0xc546));
        // CB C6 010A
        gbc.setState(0x45df, 0x5573, 0x9f50, 0xd4fc, 0x94d4, 0xf4c4, 0x1, 0x0);
        gbc.writeMem(0x45df, { 0xcb, 0xc6 });
        gbc.writeMem(0xf4c4, { 0xbb });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5573, gbc.sp());
        EXPECT(0x45e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xf4c4));
        // CB C6 010B
        gbc.setState(0x4e8b, 0x4a7b, 0x9ae0, 0x569d, 0xcf09, 0xaf28, 0x0, 0x1);
        gbc.writeMem(0x4e8b, { 0xcb, 0xc6 });
        gbc.writeMem(0xaf28, { 0x79 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x4a7b, gbc.sp());
        EXPECT(0x4e8d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0xaf28));
        // CB C6 010C
        gbc.setState(0x5358, 0x2de0, 0xfcf0, 0x7ea3, 0x93f1, 0xa8fa, 0x0, 0x0);
        gbc.writeMem(0x5358, { 0xcb, 0xc6 });
        gbc.writeMem(0xa8fa, { 0x43 });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x2de0, gbc.sp());
        EXPECT(0x535a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0xa8fa));
        // CB C6 010D
        gbc.setState(0xa90c, 0xc699, 0xc3b0, 0x6d28, 0x9cc7, 0xeeb5, 0x1, 0x1);
        gbc.writeMem(0xa90c, { 0xcb, 0xc6 });
        gbc.writeMem(0xeeb5, { 0xdf });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc699, gbc.sp());
        EXPECT(0xa90e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa90c));
        EXPECT(0xc6, gbc.readMem(0xa90d));
        EXPECT(0xdf, gbc.readMem(0xeeb5));
        // CB C6 010E
        gbc.setState(0x8f06, 0xf59c, 0x1010, 0xe59a, 0x22d0, 0x79ed, 0x0, 0x1);
        gbc.writeMem(0x79ed, { 0xf3 });
        gbc.writeMem(0x8f06, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf59c, gbc.sp());
        EXPECT(0x8f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f06));
        EXPECT(0xc6, gbc.readMem(0x8f07));
        // CB C6 0110
        gbc.setState(0x6eac, 0x26db, 0x4e00, 0x3a73, 0x8892, 0xb51f, 0x0, 0x0);
        gbc.writeMem(0x6eac, { 0xcb, 0xc6 });
        gbc.writeMem(0xb51f, { 0x4c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x26db, gbc.sp());
        EXPECT(0x6eae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0xb51f));
        // CB C6 0111
        gbc.setState(0x7fe4, 0x8ee4, 0x0, 0xedef, 0x751a, 0x7f1c, 0x0, 0x0);
        gbc.writeMem(0x7f1c, { 0xb7 });
        gbc.writeMem(0x7fe4, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x8ee4, gbc.sp());
        EXPECT(0x7fe6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0113
        gbc.setState(0x652a, 0xea74, 0x9c0, 0x58be, 0x25bc, 0xa830, 0x1, 0x0);
        gbc.writeMem(0x652a, { 0xcb, 0xc6 });
        gbc.writeMem(0xa830, { 0xa7 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xea74, gbc.sp());
        EXPECT(0x652c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa830));
        // CB C6 0115
        gbc.setState(0x501b, 0x31b4, 0xaec0, 0x88d, 0x7c04, 0x7f21, 0x1, 0x0);
        gbc.writeMem(0x501b, { 0xcb, 0xc6 });
        gbc.writeMem(0x7f21, { 0x1f });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x31b4, gbc.sp());
        EXPECT(0x501d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0116
        gbc.setState(0xc0ab, 0x198a, 0x7610, 0xbb04, 0xba6c, 0xc5a9, 0x0, 0x0);
        gbc.writeMem(0xc0ab, { 0xcb, 0xc6 });
        gbc.writeMem(0xc5a9, { 0x42 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x198a, gbc.sp());
        EXPECT(0xc0ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc0ab));
        EXPECT(0xc6, gbc.readMem(0xc0ac));
        EXPECT(0x43, gbc.readMem(0xc5a9));
        // CB C6 0117
        gbc.setState(0x700e, 0x15ae, 0x1420, 0xeec2, 0x9721, 0xad3b, 0x1, 0x0);
        gbc.writeMem(0x700e, { 0xcb, 0xc6 });
        gbc.writeMem(0xad3b, { 0x13 });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x15ae, gbc.sp());
        EXPECT(0x7010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0xad3b));
        // CB C6 0119
        gbc.setState(0x6d00, 0x5267, 0xace0, 0xf3f8, 0xb8ac, 0xf956, 0x1, 0x1);
        gbc.writeMem(0x6d00, { 0xcb, 0xc6 });
        gbc.writeMem(0xf956, { 0x8b });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x5267, gbc.sp());
        EXPECT(0x6d02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8b, gbc.readMem(0xf956));
        // CB C6 011A
        gbc.setState(0x5dde, 0x5863, 0x68c0, 0x92f2, 0x417, 0x9d94, 0x1, 0x1);
        gbc.writeMem(0x5dde, { 0xcb, 0xc6 });
        gbc.writeMem(0x9d94, { 0x12 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x5863, gbc.sp());
        EXPECT(0x5de0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x13, gbc.readMem(0x9d94));
        // CB C6 011B
        gbc.setState(0x5b8a, 0x606f, 0x1d0, 0x8ed, 0x6344, 0xbf23, 0x1, 0x0);
        gbc.writeMem(0x5b8a, { 0xcb, 0xc6 });
        gbc.writeMem(0xbf23, { 0xf0 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x606f, gbc.sp());
        EXPECT(0x5b8c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xbf23));
        // CB C6 011C
        gbc.setState(0x1f41, 0x95dc, 0x2700, 0x13f3, 0x9da7, 0x2534, 0x1, 0x1);
        gbc.writeMem(0x1f41, { 0xcb, 0xc6 });
        gbc.writeMem(0x2534, { 0x87 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x95dc, gbc.sp());
        EXPECT(0x1f43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 011D
        gbc.setState(0xd456, 0xfb78, 0xcf60, 0xc2c9, 0xceae, 0xf83f, 0x0, 0x1);
        gbc.writeMem(0xd456, { 0xcb, 0xc6 });
        gbc.writeMem(0xf83f, { 0x7d });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfb78, gbc.sp());
        EXPECT(0xd458, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd456));
        EXPECT(0xc6, gbc.readMem(0xd457));
        EXPECT(0x7d, gbc.readMem(0xf83f));
        // CB C6 011F
        gbc.setState(0x57a0, 0x224b, 0xf50, 0xb4c4, 0xf3d, 0x836d, 0x1, 0x1);
        gbc.writeMem(0x57a0, { 0xcb, 0xc6 });
        gbc.writeMem(0x836d, { 0x1f });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x224b, gbc.sp());
        EXPECT(0x57a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x836d));
        // CB C6 0122
        gbc.setState(0xd039, 0xf30d, 0x8ee0, 0xa221, 0x5ab7, 0x7beb, 0x0, 0x0);
        gbc.writeMem(0x7beb, { 0x33 });
        gbc.writeMem(0xd039, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xf30d, gbc.sp());
        EXPECT(0xd03b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd039));
        EXPECT(0xc6, gbc.readMem(0xd03a));
        // CB C6 0125
        gbc.setState(0x9d6c, 0xc994, 0x88b0, 0x7ee4, 0x27b1, 0xdecf, 0x1, 0x1);
        gbc.writeMem(0x9d6c, { 0xcb, 0xc6 });
        gbc.writeMem(0xdecf, { 0x8e });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xc994, gbc.sp());
        EXPECT(0x9d6e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6c));
        EXPECT(0xc6, gbc.readMem(0x9d6d));
        EXPECT(0x8f, gbc.readMem(0xdecf));
        // CB C6 0126
        gbc.setState(0x3c23, 0x1171, 0x19b0, 0x3955, 0xe223, 0x795d, 0x0, 0x0);
        gbc.writeMem(0x3c23, { 0xcb, 0xc6 });
        gbc.writeMem(0x795d, { 0x71 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x1171, gbc.sp());
        EXPECT(0x3c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0127
        gbc.setState(0xe881, 0xa28, 0x1300, 0x52cf, 0x5115, 0x20a3, 0x1, 0x1);
        gbc.writeMem(0x20a3, { 0xe1 });
        gbc.writeMem(0xe881, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xa28, gbc.sp());
        EXPECT(0xe883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe881));
        EXPECT(0xc6, gbc.readMem(0xe882));
        // CB C6 0128
        gbc.setState(0xdec9, 0x1500, 0x5ba0, 0xe8b9, 0x20e3, 0x7a03, 0x1, 0x1);
        gbc.writeMem(0x7a03, { 0xf9 });
        gbc.writeMem(0xdec9, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x1500, gbc.sp());
        EXPECT(0xdecb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdec9));
        EXPECT(0xc6, gbc.readMem(0xdeca));
        // CB C6 0129
        gbc.setState(0x7d86, 0xdb3f, 0xc860, 0xd494, 0x9cc6, 0x831b, 0x0, 0x1);
        gbc.writeMem(0x7d86, { 0xcb, 0xc6 });
        gbc.writeMem(0x831b, { 0x1e });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xdb3f, gbc.sp());
        EXPECT(0x7d88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x831b));
        // CB C6 012A
        gbc.setState(0x4054, 0x8489, 0xc5d0, 0x551b, 0x52a1, 0x769c, 0x0, 0x0);
        gbc.writeMem(0x4054, { 0xcb, 0xc6 });
        gbc.writeMem(0x769c, { 0x7d });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x8489, gbc.sp());
        EXPECT(0x4056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 012B
        gbc.setState(0x5186, 0xe172, 0xd350, 0x855d, 0xbb6e, 0xbb21, 0x1, 0x0);
        gbc.writeMem(0x5186, { 0xcb, 0xc6 });
        gbc.writeMem(0xbb21, { 0xfd });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe172, gbc.sp());
        EXPECT(0x5188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0xbb21));
        // CB C6 012C
        gbc.setState(0x9834, 0x2f5, 0xecd0, 0xb5e8, 0x7e9, 0xf7bf, 0x1, 0x1);
        gbc.writeMem(0x9834, { 0xcb, 0xc6 });
        gbc.writeMem(0xf7bf, { 0x56 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x2f5, gbc.sp());
        EXPECT(0x9836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9834));
        EXPECT(0xc6, gbc.readMem(0x9835));
        EXPECT(0x57, gbc.readMem(0xf7bf));
        // CB C6 012D
        gbc.setState(0x3a5f, 0x9e96, 0x1ee0, 0x8bf0, 0xbd92, 0xe141, 0x0, 0x0);
        gbc.writeMem(0x3a5f, { 0xcb, 0xc6 });
        gbc.writeMem(0xe141, { 0xa3 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9e96, gbc.sp());
        EXPECT(0x3a61, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xe141));
        // CB C6 012E
        gbc.setState(0x30ac, 0x5500, 0x4770, 0x9eb2, 0x9a7e, 0x55f6, 0x1, 0x0);
        gbc.writeMem(0x30ac, { 0xcb, 0xc6 });
        gbc.writeMem(0x55f6, { 0xcb });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x5500, gbc.sp());
        EXPECT(0x30ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 012F
        gbc.setState(0x9db6, 0xf002, 0x5890, 0x8659, 0xb5dd, 0x4235, 0x0, 0x0);
        gbc.writeMem(0x4235, { 0x11 });
        gbc.writeMem(0x9db6, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xf002, gbc.sp());
        EXPECT(0x9db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9db6));
        EXPECT(0xc6, gbc.readMem(0x9db7));
        // CB C6 0130
        gbc.setState(0x99ec, 0x362a, 0xe6b0, 0x914, 0x3bd3, 0xba5d, 0x1, 0x0);
        gbc.writeMem(0x99ec, { 0xcb, 0xc6 });
        gbc.writeMem(0xba5d, { 0xe5 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x362a, gbc.sp());
        EXPECT(0x99ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x99ec));
        EXPECT(0xc6, gbc.readMem(0x99ed));
        EXPECT(0xe5, gbc.readMem(0xba5d));
        // CB C6 0131
        gbc.setState(0x8b69, 0xcdd3, 0xc600, 0xffe7, 0x59a9, 0x8704, 0x0, 0x1);
        gbc.writeMem(0x8704, { 0xf2 });
        gbc.writeMem(0x8b69, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xcdd3, gbc.sp());
        EXPECT(0x8b6b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0x8704));
        EXPECT(0xcb, gbc.readMem(0x8b69));
        EXPECT(0xc6, gbc.readMem(0x8b6a));
        // CB C6 0132
        gbc.setState(0x516f, 0x8827, 0xd070, 0xcd6a, 0xe5b8, 0x61f6, 0x0, 0x1);
        gbc.writeMem(0x516f, { 0xcb, 0xc6 });
        gbc.writeMem(0x61f6, { 0x15 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x8827, gbc.sp());
        EXPECT(0x5171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0133
        gbc.setState(0xc7a8, 0x1e8a, 0x8a50, 0x2696, 0x74fc, 0xde48, 0x0, 0x0);
        gbc.writeMem(0xc7a8, { 0xcb, 0xc6 });
        gbc.writeMem(0xde48, { 0x8b });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x1e8a, gbc.sp());
        EXPECT(0xc7aa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc7a8));
        EXPECT(0xc6, gbc.readMem(0xc7a9));
        EXPECT(0x8b, gbc.readMem(0xde48));
        // CB C6 0136
        gbc.setState(0xefdf, 0x8bde, 0x8770, 0xe9f5, 0x32e9, 0x8ea1, 0x1, 0x1);
        gbc.writeMem(0x8ea1, { 0xad });
        gbc.writeMem(0xefdf, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x8bde, gbc.sp());
        EXPECT(0xefe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x8ea1));
        EXPECT(0xcb, gbc.readMem(0xefdf));
        EXPECT(0xc6, gbc.readMem(0xefe0));
        // CB C6 0137
        gbc.setState(0x90, 0xf083, 0x1a50, 0x3061, 0xd738, 0x76f4, 0x0, 0x1);
        gbc.writeMem(0x90, { 0xcb, 0xc6 });
        gbc.writeMem(0x76f4, { 0xa9 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xf083, gbc.sp());
        EXPECT(0x92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0138
        gbc.setState(0xa201, 0x936d, 0x4f60, 0xbfd7, 0xb5f, 0xf89, 0x1, 0x0);
        gbc.writeMem(0xf89, { 0x99 });
        gbc.writeMem(0xa201, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x936d, gbc.sp());
        EXPECT(0xa203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa201));
        EXPECT(0xc6, gbc.readMem(0xa202));
        // CB C6 013A
        gbc.setState(0x2200, 0xac5d, 0xc7d0, 0x7bb5, 0x68bd, 0xa096, 0x0, 0x1);
        gbc.writeMem(0x2200, { 0xcb, 0xc6 });
        gbc.writeMem(0xa096, { 0xd6 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xac5d, gbc.sp());
        EXPECT(0x2202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd7, gbc.readMem(0xa096));
        // CB C6 013B
        gbc.setState(0x5405, 0x79a3, 0xf490, 0x3f5, 0xd7ca, 0xabc5, 0x0, 0x0);
        gbc.writeMem(0x5405, { 0xcb, 0xc6 });
        gbc.writeMem(0xabc5, { 0x49 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x79a3, gbc.sp());
        EXPECT(0x5407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xabc5));
        // CB C6 013C
        gbc.setState(0xe74d, 0x1140, 0x7960, 0x3b1e, 0x5b28, 0xe2b3, 0x1, 0x1);
        gbc.writeMem(0xe2b3, { 0xe2 });
        gbc.writeMem(0xe74d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x1140, gbc.sp());
        EXPECT(0xe74f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xe2b3));
        EXPECT(0xcb, gbc.readMem(0xe74d));
        EXPECT(0xc6, gbc.readMem(0xe74e));
        // CB C6 013E
        gbc.setState(0x6dcb, 0x65c, 0xdea0, 0x3bf7, 0xd33a, 0x252e, 0x0, 0x0);
        gbc.writeMem(0x252e, { 0x89 });
        gbc.writeMem(0x6dcb, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x65c, gbc.sp());
        EXPECT(0x6dcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 013F
        gbc.setState(0xa4ce, 0xe9fa, 0xb40, 0x61f6, 0xf10a, 0xa77b, 0x0, 0x1);
        gbc.writeMem(0xa4ce, { 0xcb, 0xc6 });
        gbc.writeMem(0xa77b, { 0x2e });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xe9fa, gbc.sp());
        EXPECT(0xa4d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ce));
        EXPECT(0xc6, gbc.readMem(0xa4cf));
        EXPECT(0x2f, gbc.readMem(0xa77b));
        // CB C6 0140
        gbc.setState(0x59fb, 0xa904, 0x53b0, 0xc1d7, 0xcb2f, 0x6781, 0x1, 0x1);
        gbc.writeMem(0x59fb, { 0xcb, 0xc6 });
        gbc.writeMem(0x6781, { 0xd1 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa904, gbc.sp());
        EXPECT(0x59fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0141
        gbc.setState(0xc4f0, 0x7172, 0x4bf0, 0xd57c, 0x4c77, 0xf171, 0x0, 0x0);
        gbc.writeMem(0xc4f0, { 0xcb, 0xc6 });
        gbc.writeMem(0xf171, { 0xc0 });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7172, gbc.sp());
        EXPECT(0xc4f2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4f0));
        EXPECT(0xc6, gbc.readMem(0xc4f1));
        EXPECT(0xc1, gbc.readMem(0xf171));
        // CB C6 0142
        gbc.setState(0xd5f0, 0x1906, 0x70a0, 0x4d17, 0xb3fa, 0xa978, 0x1, 0x0);
        gbc.writeMem(0xa978, { 0x90 });
        gbc.writeMem(0xd5f0, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x1906, gbc.sp());
        EXPECT(0xd5f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa978));
        EXPECT(0xcb, gbc.readMem(0xd5f0));
        EXPECT(0xc6, gbc.readMem(0xd5f1));
        // CB C6 0145
        gbc.setState(0x6dfc, 0x892c, 0xa950, 0x7065, 0x7028, 0xb317, 0x1, 0x0);
        gbc.writeMem(0x6dfc, { 0xcb, 0xc6 });
        gbc.writeMem(0xb317, { 0x3a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x892c, gbc.sp());
        EXPECT(0x6dfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb317));
        // CB C6 0146
        gbc.setState(0x21a9, 0x2f4f, 0x6070, 0x71ad, 0xfb9e, 0x50a7, 0x0, 0x0);
        gbc.writeMem(0x21a9, { 0xcb, 0xc6 });
        gbc.writeMem(0x50a7, { 0x55 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x2f4f, gbc.sp());
        EXPECT(0x21ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0147
        gbc.setState(0x3e0f, 0x177f, 0xb100, 0xf03c, 0x76b5, 0xa82a, 0x0, 0x1);
        gbc.writeMem(0x3e0f, { 0xcb, 0xc6 });
        gbc.writeMem(0xa82a, { 0x87 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x177f, gbc.sp());
        EXPECT(0x3e11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xa82a));
        // CB C6 0148
        gbc.setState(0x2f06, 0x651b, 0xd120, 0x3a6e, 0x8d79, 0x29b3, 0x0, 0x1);
        gbc.writeMem(0x29b3, { 0x6d });
        gbc.writeMem(0x2f06, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x651b, gbc.sp());
        EXPECT(0x2f08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0149
        gbc.setState(0xc0bc, 0x58ca, 0xc2d0, 0xf5a0, 0xb06f, 0xa9ac, 0x1, 0x1);
        gbc.writeMem(0xa9ac, { 0x8 });
        gbc.writeMem(0xc0bc, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x58ca, gbc.sp());
        EXPECT(0xc0be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xa9ac));
        EXPECT(0xcb, gbc.readMem(0xc0bc));
        EXPECT(0xc6, gbc.readMem(0xc0bd));
        // CB C6 014A
        gbc.setState(0x20bd, 0x2c5b, 0x7600, 0xdf1b, 0x7cb0, 0x5aa, 0x1, 0x0);
        gbc.writeMem(0x5aa, { 0xf5 });
        gbc.writeMem(0x20bd, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x2c5b, gbc.sp());
        EXPECT(0x20bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 014B
        gbc.setState(0x9b22, 0xfb55, 0xc160, 0x6511, 0x1e7e, 0x1d5a, 0x1, 0x1);
        gbc.writeMem(0x1d5a, { 0xcd });
        gbc.writeMem(0x9b22, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xfb55, gbc.sp());
        EXPECT(0x9b24, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b22));
        EXPECT(0xc6, gbc.readMem(0x9b23));
        // CB C6 014C
        gbc.setState(0x2d8c, 0x307c, 0x5570, 0xaf7, 0x65a8, 0xd980, 0x0, 0x1);
        gbc.writeMem(0x2d8c, { 0xcb, 0xc6 });
        gbc.writeMem(0xd980, { 0xe2 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x307c, gbc.sp());
        EXPECT(0x2d8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xd980));
        // CB C6 014D
        gbc.setState(0x135b, 0xc497, 0x45c0, 0x9594, 0xb92e, 0xc5aa, 0x1, 0x0);
        gbc.writeMem(0x135b, { 0xcb, 0xc6 });
        gbc.writeMem(0xc5aa, { 0x3b });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xc497, gbc.sp());
        EXPECT(0x135d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xc5aa));
        // CB C6 014E
        gbc.setState(0xd0be, 0x25f7, 0xe0d0, 0x5cd, 0xa5e3, 0xc21a, 0x0, 0x0);
        gbc.writeMem(0xc21a, { 0x3d });
        gbc.writeMem(0xd0be, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x25f7, gbc.sp());
        EXPECT(0xd0c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xc21a));
        EXPECT(0xcb, gbc.readMem(0xd0be));
        EXPECT(0xc6, gbc.readMem(0xd0bf));
        // CB C6 014F
        gbc.setState(0x30a3, 0xc745, 0xcac0, 0x3ffb, 0xc910, 0xd59c, 0x0, 0x1);
        gbc.writeMem(0x30a3, { 0xcb, 0xc6 });
        gbc.writeMem(0xd59c, { 0x19 });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xc745, gbc.sp());
        EXPECT(0x30a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xd59c));
        // CB C6 0150
        gbc.setState(0x8e76, 0xe4e6, 0x7db0, 0x2898, 0xc808, 0x3370, 0x1, 0x1);
        gbc.writeMem(0x3370, { 0xa9 });
        gbc.writeMem(0x8e76, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe4e6, gbc.sp());
        EXPECT(0x8e78, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e76));
        EXPECT(0xc6, gbc.readMem(0x8e77));
        // CB C6 0151
        gbc.setState(0x6ee8, 0xa91, 0xd4e0, 0x1a1e, 0x6094, 0xda1d, 0x1, 0x0);
        gbc.writeMem(0x6ee8, { 0xcb, 0xc6 });
        gbc.writeMem(0xda1d, { 0x47 });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xa91, gbc.sp());
        EXPECT(0x6eea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xda1d));
        // CB C6 0152
        gbc.setState(0xc5db, 0xfd13, 0x4eb0, 0x6d21, 0x1b9, 0x9d76, 0x1, 0x0);
        gbc.writeMem(0x9d76, { 0x4a });
        gbc.writeMem(0xc5db, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xfd13, gbc.sp());
        EXPECT(0xc5dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0x9d76));
        EXPECT(0xcb, gbc.readMem(0xc5db));
        EXPECT(0xc6, gbc.readMem(0xc5dc));
        // CB C6 0154
        gbc.setState(0x571c, 0xf52e, 0x8b60, 0xb024, 0xd5a, 0x8f55, 0x0, 0x0);
        gbc.writeMem(0x571c, { 0xcb, 0xc6 });
        gbc.writeMem(0x8f55, { 0xcb });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0xf52e, gbc.sp());
        EXPECT(0x571e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8f55));
        // CB C6 0155
        gbc.setState(0xb1f8, 0x84fb, 0x6ff0, 0xc9af, 0xb883, 0x992e, 0x0, 0x1);
        gbc.writeMem(0x992e, { 0xca });
        gbc.writeMem(0xb1f8, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x84fb, gbc.sp());
        EXPECT(0xb1fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x992e));
        EXPECT(0xcb, gbc.readMem(0xb1f8));
        EXPECT(0xc6, gbc.readMem(0xb1f9));
        // CB C6 0157
        gbc.setState(0x7808, 0xa345, 0xf5b0, 0x9cee, 0x30ff, 0x655d, 0x0, 0x1);
        gbc.writeMem(0x655d, { 0x75 });
        gbc.writeMem(0x7808, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xa345, gbc.sp());
        EXPECT(0x780a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0158
        gbc.setState(0x5654, 0x8314, 0xcc90, 0x18d1, 0x22f7, 0x9c95, 0x0, 0x0);
        gbc.writeMem(0x5654, { 0xcb, 0xc6 });
        gbc.writeMem(0x9c95, { 0x98 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x8314, gbc.sp());
        EXPECT(0x5656, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9c95));
        // CB C6 0159
        gbc.setState(0x2231, 0x96f1, 0xcf80, 0x969a, 0x3a7, 0x1e34, 0x1, 0x0);
        gbc.writeMem(0x1e34, { 0x41 });
        gbc.writeMem(0x2231, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x96f1, gbc.sp());
        EXPECT(0x2233, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 015A
        gbc.setState(0xc3cc, 0xa122, 0xbe30, 0x9731, 0xec51, 0xafdd, 0x0, 0x0);
        gbc.writeMem(0xafdd, { 0xd3 });
        gbc.writeMem(0xc3cc, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xa122, gbc.sp());
        EXPECT(0xc3ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xafdd));
        EXPECT(0xcb, gbc.readMem(0xc3cc));
        EXPECT(0xc6, gbc.readMem(0xc3cd));
        // CB C6 015B
        gbc.setState(0x2b7c, 0x8e29, 0x4b10, 0xce10, 0xb1fc, 0x9cce, 0x0, 0x0);
        gbc.writeMem(0x2b7c, { 0xcb, 0xc6 });
        gbc.writeMem(0x9cce, { 0x1e });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x8e29, gbc.sp());
        EXPECT(0x2b7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0x9cce));
        // CB C6 015D
        gbc.setState(0x8b0c, 0xfade, 0x7e60, 0x2484, 0xd89e, 0x253f, 0x0, 0x1);
        gbc.writeMem(0x253f, { 0x65 });
        gbc.writeMem(0x8b0c, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xfade, gbc.sp());
        EXPECT(0x8b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b0c));
        EXPECT(0xc6, gbc.readMem(0x8b0d));
        // CB C6 015E
        gbc.setState(0x2b85, 0x8aac, 0x3bc0, 0x2574, 0x6576, 0x60c0, 0x1, 0x0);
        gbc.writeMem(0x2b85, { 0xcb, 0xc6 });
        gbc.writeMem(0x60c0, { 0xfd });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8aac, gbc.sp());
        EXPECT(0x2b87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 015F
        gbc.setState(0xbf4e, 0x7d2d, 0xcf80, 0x5262, 0xe795, 0xb72f, 0x1, 0x0);
        gbc.writeMem(0xb72f, { 0xba });
        gbc.writeMem(0xbf4e, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7d2d, gbc.sp());
        EXPECT(0xbf50, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xb72f));
        EXPECT(0xcb, gbc.readMem(0xbf4e));
        EXPECT(0xc6, gbc.readMem(0xbf4f));
        // CB C6 0160
        gbc.setState(0xc5f4, 0x9f5a, 0x51f0, 0x90ee, 0x59b8, 0xaac6, 0x0, 0x0);
        gbc.writeMem(0xaac6, { 0x63 });
        gbc.writeMem(0xc5f4, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9f5a, gbc.sp());
        EXPECT(0xc5f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xaac6));
        EXPECT(0xcb, gbc.readMem(0xc5f4));
        EXPECT(0xc6, gbc.readMem(0xc5f5));
        // CB C6 0162
        gbc.setState(0x7849, 0x677e, 0xa100, 0xadb9, 0x9dfc, 0x8239, 0x0, 0x0);
        gbc.writeMem(0x7849, { 0xcb, 0xc6 });
        gbc.writeMem(0x8239, { 0xfd });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x677e, gbc.sp());
        EXPECT(0x784b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x8239));
        // CB C6 0166
        gbc.setState(0x67dd, 0x55eb, 0xfb30, 0x48de, 0x9b97, 0xfb43, 0x1, 0x0);
        gbc.writeMem(0x67dd, { 0xcb, 0xc6 });
        gbc.writeMem(0xfb43, { 0x98 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x55eb, gbc.sp());
        EXPECT(0x67df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xfb43));
        // CB C6 0167
        gbc.setState(0x6150, 0x5189, 0xa750, 0xf16f, 0xc074, 0x8d1c, 0x1, 0x1);
        gbc.writeMem(0x6150, { 0xcb, 0xc6 });
        gbc.writeMem(0x8d1c, { 0x3e });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5189, gbc.sp());
        EXPECT(0x6152, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3f, gbc.readMem(0x8d1c));
        // CB C6 0168
        gbc.setState(0xb996, 0xf949, 0xc110, 0xcaf, 0x9171, 0xbf2b, 0x1, 0x1);
        gbc.writeMem(0xb996, { 0xcb, 0xc6 });
        gbc.writeMem(0xbf2b, { 0xe4 });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xf949, gbc.sp());
        EXPECT(0xb998, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb996));
        EXPECT(0xc6, gbc.readMem(0xb997));
        EXPECT(0xe5, gbc.readMem(0xbf2b));
        // CB C6 0169
        gbc.setState(0x51a8, 0xd254, 0x64d0, 0x1e89, 0x4e34, 0x7a77, 0x1, 0x1);
        gbc.writeMem(0x51a8, { 0xcb, 0xc6 });
        gbc.writeMem(0x7a77, { 0xfd });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd254, gbc.sp());
        EXPECT(0x51aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 016B
        gbc.setState(0x91f6, 0x435d, 0xcc60, 0x4a09, 0x46ac, 0xd46a, 0x1, 0x0);
        gbc.writeMem(0x91f6, { 0xcb, 0xc6 });
        gbc.writeMem(0xd46a, { 0xfd });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x435d, gbc.sp());
        EXPECT(0x91f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x91f6));
        EXPECT(0xc6, gbc.readMem(0x91f7));
        EXPECT(0xfd, gbc.readMem(0xd46a));
        // CB C6 016C
        gbc.setState(0xd63c, 0x1580, 0x4d60, 0xf472, 0x1260, 0xb24c, 0x1, 0x1);
        gbc.writeMem(0xb24c, { 0x3c });
        gbc.writeMem(0xd63c, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1580, gbc.sp());
        EXPECT(0xd63e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3d, gbc.readMem(0xb24c));
        EXPECT(0xcb, gbc.readMem(0xd63c));
        EXPECT(0xc6, gbc.readMem(0xd63d));
        // CB C6 016D
        gbc.setState(0x3338, 0xe46c, 0x4250, 0x5537, 0x6777, 0xbf32, 0x0, 0x1);
        gbc.writeMem(0x3338, { 0xcb, 0xc6 });
        gbc.writeMem(0xbf32, { 0x32 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xe46c, gbc.sp());
        EXPECT(0x333a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbf32));
        // CB C6 016E
        gbc.setState(0x36b1, 0x3be8, 0x41b0, 0xa661, 0xcdf1, 0x58b7, 0x0, 0x1);
        gbc.writeMem(0x36b1, { 0xcb, 0xc6 });
        gbc.writeMem(0x58b7, { 0x41 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x3be8, gbc.sp());
        EXPECT(0x36b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 016F
        gbc.setState(0x862c, 0x39f0, 0x360, 0x4948, 0x8f0d, 0x277a, 0x1, 0x0);
        gbc.writeMem(0x277a, { 0x53 });
        gbc.writeMem(0x862c, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x39f0, gbc.sp());
        EXPECT(0x862e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x862c));
        EXPECT(0xc6, gbc.readMem(0x862d));
        // CB C6 0171
        gbc.setState(0x7cc, 0x2358, 0x6e10, 0xf742, 0x2764, 0xd0d0, 0x0, 0x0);
        gbc.writeMem(0x7cc, { 0xcb, 0xc6 });
        gbc.writeMem(0xd0d0, { 0xae });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x2358, gbc.sp());
        EXPECT(0x7ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xd0d0));
        // CB C6 0173
        gbc.setState(0x4b28, 0x20e2, 0x4030, 0x6738, 0x6743, 0x1049, 0x1, 0x1);
        gbc.writeMem(0x1049, { 0xa1 });
        gbc.writeMem(0x4b28, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x20e2, gbc.sp());
        EXPECT(0x4b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0175
        gbc.setState(0x9ecb, 0x5fc9, 0x8320, 0x4e18, 0xc535, 0x40de, 0x0, 0x1);
        gbc.writeMem(0x40de, { 0x4f });
        gbc.writeMem(0x9ecb, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5fc9, gbc.sp());
        EXPECT(0x9ecd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ecb));
        EXPECT(0xc6, gbc.readMem(0x9ecc));
        // CB C6 0176
        gbc.setState(0x44e2, 0x351b, 0x6030, 0x6d4b, 0xa320, 0x3c90, 0x1, 0x1);
        gbc.writeMem(0x3c90, { 0xa1 });
        gbc.writeMem(0x44e2, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x351b, gbc.sp());
        EXPECT(0x44e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0177
        gbc.setState(0x2ab0, 0x3b2f, 0x750, 0x4868, 0xd52d, 0xa721, 0x0, 0x1);
        gbc.writeMem(0x2ab0, { 0xcb, 0xc6 });
        gbc.writeMem(0xa721, { 0x33 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3b2f, gbc.sp());
        EXPECT(0x2ab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xa721));
        // CB C6 0178
        gbc.setState(0x7e5d, 0x6789, 0x1ab0, 0x98c6, 0x97fb, 0xff92, 0x0, 0x1);
        gbc.writeMem(0x7e5d, { 0xcb, 0xc6 });
        gbc.writeMem(0xff92, { 0x1f });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6789, gbc.sp());
        EXPECT(0x7e5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xff92));
        // CB C6 0179
        gbc.setState(0x5e9c, 0x5ee8, 0x5d20, 0xe63d, 0xf589, 0xdd72, 0x1, 0x1);
        gbc.writeMem(0x5e9c, { 0xcb, 0xc6 });
        gbc.writeMem(0xdd72, { 0x57 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x5ee8, gbc.sp());
        EXPECT(0x5e9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xdd72));
        // CB C6 017A
        gbc.setState(0xec01, 0xca24, 0xf4c0, 0xe93, 0x51da, 0xf5ce, 0x0, 0x0);
        gbc.writeMem(0xec01, { 0xcb, 0xc6 });
        gbc.writeMem(0xf5ce, { 0x6d });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xca24, gbc.sp());
        EXPECT(0xec03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec01));
        EXPECT(0xc6, gbc.readMem(0xec02));
        EXPECT(0x6d, gbc.readMem(0xf5ce));
        // CB C6 017C
        gbc.setState(0xd40d, 0xf0c3, 0x2d80, 0xe87, 0x8a7f, 0x27f2, 0x0, 0x0);
        gbc.writeMem(0x27f2, { 0xd });
        gbc.writeMem(0xd40d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xf0c3, gbc.sp());
        EXPECT(0xd40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd40d));
        EXPECT(0xc6, gbc.readMem(0xd40e));
        // CB C6 017D
        gbc.setState(0xcbf0, 0x3c2b, 0xb9b0, 0x6141, 0xa919, 0xba09, 0x1, 0x0);
        gbc.writeMem(0xba09, { 0x15 });
        gbc.writeMem(0xcbf0, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x3c2b, gbc.sp());
        EXPECT(0xcbf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xba09));
        EXPECT(0xcb, gbc.readMem(0xcbf0));
        EXPECT(0xc6, gbc.readMem(0xcbf1));
        // CB C6 0180
        gbc.setState(0xef00, 0xc043, 0x37d0, 0x49da, 0x11fa, 0xc228, 0x0, 0x1);
        gbc.writeMem(0xc228, { 0xdf });
        gbc.writeMem(0xef00, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xc043, gbc.sp());
        EXPECT(0xef02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdf, gbc.readMem(0xc228));
        EXPECT(0xcb, gbc.readMem(0xef00));
        EXPECT(0xc6, gbc.readMem(0xef01));
        // CB C6 0181
        gbc.setState(0x5b12, 0x59d3, 0x5b40, 0x9980, 0x9dd1, 0xd292, 0x0, 0x1);
        gbc.writeMem(0x5b12, { 0xcb, 0xc6 });
        gbc.writeMem(0xd292, { 0x47 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x59d3, gbc.sp());
        EXPECT(0x5b14, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xd292));
        // CB C6 0182
        gbc.setState(0xd4a3, 0x529c, 0xc030, 0x716c, 0x4e3b, 0xd255, 0x0, 0x1);
        gbc.writeMem(0xd255, { 0x1b });
        gbc.writeMem(0xd4a3, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x529c, gbc.sp());
        EXPECT(0xd4a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xd255));
        EXPECT(0xcb, gbc.readMem(0xd4a3));
        EXPECT(0xc6, gbc.readMem(0xd4a4));
        // CB C6 0183
        gbc.setState(0x344f, 0xac6d, 0x9990, 0x2ee0, 0x74fc, 0xf1f2, 0x1, 0x1);
        gbc.writeMem(0x344f, { 0xcb, 0xc6 });
        gbc.writeMem(0xf1f2, { 0xea });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xac6d, gbc.sp());
        EXPECT(0x3451, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xf1f2));
        // CB C6 0184
        gbc.setState(0x8b70, 0x6001, 0xcdf0, 0xc7a, 0x2abd, 0x246a, 0x0, 0x0);
        gbc.writeMem(0x246a, { 0x65 });
        gbc.writeMem(0x8b70, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x6001, gbc.sp());
        EXPECT(0x8b72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b70));
        EXPECT(0xc6, gbc.readMem(0x8b71));
        // CB C6 0185
        gbc.setState(0x3497, 0x9d8f, 0x71a0, 0x947e, 0x2b5c, 0xdc68, 0x1, 0x0);
        gbc.writeMem(0x3497, { 0xcb, 0xc6 });
        gbc.writeMem(0xdc68, { 0xa2 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x9d8f, gbc.sp());
        EXPECT(0x3499, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa3, gbc.readMem(0xdc68));
        // CB C6 0188
        gbc.setState(0xd9d5, 0xd582, 0xd090, 0x5817, 0x4781, 0xb54a, 0x1, 0x0);
        gbc.writeMem(0xb54a, { 0xcc });
        gbc.writeMem(0xd9d5, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xd582, gbc.sp());
        EXPECT(0xd9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcd, gbc.readMem(0xb54a));
        EXPECT(0xcb, gbc.readMem(0xd9d5));
        EXPECT(0xc6, gbc.readMem(0xd9d6));
        // CB C6 0189
        gbc.setState(0xe259, 0xb2d0, 0xddf0, 0x2f0e, 0x90c8, 0x795c, 0x1, 0x1);
        gbc.writeMem(0x795c, { 0x7 });
        gbc.writeMem(0xe259, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb2d0, gbc.sp());
        EXPECT(0xe25b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe259));
        EXPECT(0xc6, gbc.readMem(0xe25a));
        // CB C6 018B
        gbc.setState(0x2738, 0xe793, 0x89f0, 0xef3c, 0x7721, 0x8f28, 0x1, 0x1);
        gbc.writeMem(0x2738, { 0xcb, 0xc6 });
        gbc.writeMem(0x8f28, { 0xec });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xe793, gbc.sp());
        EXPECT(0x273a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0x8f28));
        // CB C6 018C
        gbc.setState(0xd68c, 0x82ab, 0xab60, 0x7169, 0xe871, 0x8b08, 0x1, 0x1);
        gbc.writeMem(0x8b08, { 0x73 });
        gbc.writeMem(0xd68c, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x82ab, gbc.sp());
        EXPECT(0xd68e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x8b08));
        EXPECT(0xcb, gbc.readMem(0xd68c));
        EXPECT(0xc6, gbc.readMem(0xd68d));
        // CB C6 018E
        gbc.setState(0xd51, 0x6c78, 0x94b0, 0x67f8, 0xc6d2, 0x39e, 0x1, 0x0);
        gbc.writeMem(0x39e, { 0x9 });
        gbc.writeMem(0xd51, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6c78, gbc.sp());
        EXPECT(0xd53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 018F
        gbc.setState(0x776f, 0x2070, 0x5c70, 0xf37b, 0x1832, 0xf79c, 0x1, 0x0);
        gbc.writeMem(0x776f, { 0xcb, 0xc6 });
        gbc.writeMem(0xf79c, { 0x89 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x2070, gbc.sp());
        EXPECT(0x7771, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xf79c));
        // CB C6 0191
        gbc.setState(0x4c49, 0x10bb, 0x1a70, 0x2ae, 0x5573, 0xc323, 0x0, 0x0);
        gbc.writeMem(0x4c49, { 0xcb, 0xc6 });
        gbc.writeMem(0xc323, { 0xf });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x10bb, gbc.sp());
        EXPECT(0x4c4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xc323));
        // CB C6 0193
        gbc.setState(0xddc3, 0xb9c1, 0x6dd0, 0xcd37, 0x851c, 0x6a53, 0x0, 0x1);
        gbc.writeMem(0x6a53, { 0x6b });
        gbc.writeMem(0xddc3, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb9c1, gbc.sp());
        EXPECT(0xddc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xddc3));
        EXPECT(0xc6, gbc.readMem(0xddc4));
        // CB C6 0194
        gbc.setState(0x576a, 0x3f4d, 0x7720, 0x3de0, 0xc3a2, 0x2383, 0x0, 0x1);
        gbc.writeMem(0x2383, { 0x5d });
        gbc.writeMem(0x576a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x3f4d, gbc.sp());
        EXPECT(0x576c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0195
        gbc.setState(0x55d, 0x4d1a, 0x78f0, 0xa116, 0x5525, 0xdb22, 0x0, 0x1);
        gbc.writeMem(0x55d, { 0xcb, 0xc6 });
        gbc.writeMem(0xdb22, { 0xbb });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4d1a, gbc.sp());
        EXPECT(0x55f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0xdb22));
        // CB C6 0196
        gbc.setState(0x2ef1, 0x22e0, 0x9650, 0x1351, 0x4f12, 0x16c8, 0x1, 0x1);
        gbc.writeMem(0x16c8, { 0x31 });
        gbc.writeMem(0x2ef1, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x22e0, gbc.sp());
        EXPECT(0x2ef3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0197
        gbc.setState(0x8ed9, 0xaf7b, 0x60a0, 0x1419, 0xedf3, 0xea19, 0x1, 0x0);
        gbc.writeMem(0x8ed9, { 0xcb, 0xc6 });
        gbc.writeMem(0xea19, { 0xcb });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xaf7b, gbc.sp());
        EXPECT(0x8edb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ed9));
        EXPECT(0xc6, gbc.readMem(0x8eda));
        EXPECT(0xcb, gbc.readMem(0xea19));
        // CB C6 0199
        gbc.setState(0x8c95, 0x1ae9, 0xfa30, 0x4f96, 0x1b80, 0xc500, 0x1, 0x1);
        gbc.writeMem(0x8c95, { 0xcb, 0xc6 });
        gbc.writeMem(0xc500, { 0xcb });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1ae9, gbc.sp());
        EXPECT(0x8c97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8c95));
        EXPECT(0xc6, gbc.readMem(0x8c96));
        EXPECT(0xcb, gbc.readMem(0xc500));
        // CB C6 019C
        gbc.setState(0xe18d, 0xa9a3, 0x7940, 0x7c0f, 0xdff6, 0x9260, 0x1, 0x1);
        gbc.writeMem(0x9260, { 0x72 });
        gbc.writeMem(0xe18d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa9a3, gbc.sp());
        EXPECT(0xe18f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x73, gbc.readMem(0x9260));
        EXPECT(0xcb, gbc.readMem(0xe18d));
        EXPECT(0xc6, gbc.readMem(0xe18e));
        // CB C6 019D
        gbc.setState(0x5c9d, 0xba91, 0x84f0, 0x4980, 0x716, 0xda5c, 0x1, 0x1);
        gbc.writeMem(0x5c9d, { 0xcb, 0xc6 });
        gbc.writeMem(0xda5c, { 0x89 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xba91, gbc.sp());
        EXPECT(0x5c9f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xda5c));
        // CB C6 019E
        gbc.setState(0x6c1f, 0x908, 0xf0e0, 0x2a01, 0x3a72, 0xd77b, 0x0, 0x1);
        gbc.writeMem(0x6c1f, { 0xcb, 0xc6 });
        gbc.writeMem(0xd77b, { 0x0 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x908, gbc.sp());
        EXPECT(0x6c21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xd77b));
        // CB C6 01A0
        gbc.setState(0xec0e, 0x3af9, 0x710, 0x98a8, 0xade, 0x4091, 0x0, 0x1);
        gbc.writeMem(0x4091, { 0xe7 });
        gbc.writeMem(0xec0e, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x3af9, gbc.sp());
        EXPECT(0xec10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec0e));
        EXPECT(0xc6, gbc.readMem(0xec0f));
        // CB C6 01A3
        gbc.setState(0xf5a, 0xc23f, 0x6750, 0x9063, 0xfc21, 0x3aba, 0x1, 0x1);
        gbc.writeMem(0xf5a, { 0xcb, 0xc6 });
        gbc.writeMem(0x3aba, { 0x1 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xc23f, gbc.sp());
        EXPECT(0xf5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 01A4
        gbc.setState(0xe8e9, 0x9959, 0xcb70, 0xecbb, 0x8d50, 0x9f31, 0x0, 0x0);
        gbc.writeMem(0x9f31, { 0x16 });
        gbc.writeMem(0xe8e9, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x9959, gbc.sp());
        EXPECT(0xe8eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x9f31));
        EXPECT(0xcb, gbc.readMem(0xe8e9));
        EXPECT(0xc6, gbc.readMem(0xe8ea));
        // CB C6 01A5
        gbc.setState(0xb5aa, 0xdafd, 0xb9e0, 0x69a9, 0x31fc, 0x36e2, 0x1, 0x0);
        gbc.writeMem(0x36e2, { 0xb7 });
        gbc.writeMem(0xb5aa, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xdafd, gbc.sp());
        EXPECT(0xb5ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb5aa));
        EXPECT(0xc6, gbc.readMem(0xb5ab));
        // CB C6 01A6
        gbc.setState(0xb265, 0x440f, 0x6c70, 0x7f78, 0x3bd1, 0xf30f, 0x1, 0x0);
        gbc.writeMem(0xb265, { 0xcb, 0xc6 });
        gbc.writeMem(0xf30f, { 0xb0 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x440f, gbc.sp());
        EXPECT(0xb267, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb265));
        EXPECT(0xc6, gbc.readMem(0xb266));
        EXPECT(0xb1, gbc.readMem(0xf30f));
        // CB C6 01A7
        gbc.setState(0x4012, 0xce70, 0x8c80, 0xfaa5, 0x41a, 0x1889, 0x1, 0x0);
        gbc.writeMem(0x1889, { 0x41 });
        gbc.writeMem(0x4012, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xce70, gbc.sp());
        EXPECT(0x4014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 01A8
        gbc.setState(0x4bfd, 0x1f8a, 0x8240, 0x50d7, 0x2649, 0xb0a2, 0x1, 0x1);
        gbc.writeMem(0x4bfd, { 0xcb, 0xc6 });
        gbc.writeMem(0xb0a2, { 0x14 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x1f8a, gbc.sp());
        EXPECT(0x4bff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xb0a2));
        // CB C6 01A9
        gbc.setState(0xe584, 0xcf78, 0x8350, 0xa2fa, 0xd8ff, 0xec0f, 0x1, 0x1);
        gbc.writeMem(0xe584, { 0xcb, 0xc6 });
        gbc.writeMem(0xec0f, { 0xc5 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcf78, gbc.sp());
        EXPECT(0xe586, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe584));
        EXPECT(0xc6, gbc.readMem(0xe585));
        EXPECT(0xc5, gbc.readMem(0xec0f));
        // CB C6 01AC
        gbc.setState(0x85ac, 0x9837, 0x51e0, 0xe394, 0x67b1, 0x979c, 0x1, 0x1);
        gbc.writeMem(0x85ac, { 0xcb, 0xc6 });
        gbc.writeMem(0x979c, { 0xcf });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9837, gbc.sp());
        EXPECT(0x85ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x85ac));
        EXPECT(0xc6, gbc.readMem(0x85ad));
        EXPECT(0xcf, gbc.readMem(0x979c));
        // CB C6 01AE
        gbc.setState(0x53de, 0x16e3, 0xa9e0, 0xd5f5, 0x9e62, 0xef1a, 0x0, 0x1);
        gbc.writeMem(0x53de, { 0xcb, 0xc6 });
        gbc.writeMem(0xef1a, { 0x88 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x16e3, gbc.sp());
        EXPECT(0x53e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0xef1a));
        // CB C6 01AF
        gbc.setState(0x118e, 0x28c0, 0xe290, 0x17a6, 0xe806, 0x861d, 0x0, 0x1);
        gbc.writeMem(0x118e, { 0xcb, 0xc6 });
        gbc.writeMem(0x861d, { 0x1d });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x28c0, gbc.sp());
        EXPECT(0x1190, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x861d));
        // CB C6 01B0
        gbc.setState(0x74e8, 0xcddc, 0x53b0, 0xf4c8, 0x21cf, 0x8fc2, 0x1, 0x1);
        gbc.writeMem(0x74e8, { 0xcb, 0xc6 });
        gbc.writeMem(0x8fc2, { 0x6e });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xcddc, gbc.sp());
        EXPECT(0x74ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0x8fc2));
        // CB C6 01B3
        gbc.setState(0x5bb0, 0xb08d, 0xb800, 0xbd74, 0x72f2, 0xa575, 0x1, 0x1);
        gbc.writeMem(0x5bb0, { 0xcb, 0xc6 });
        gbc.writeMem(0xa575, { 0x94 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb08d, gbc.sp());
        EXPECT(0x5bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xa575));
        // CB C6 01B4
        gbc.setState(0xa830, 0x7e80, 0x6ef0, 0x1e46, 0xed24, 0xd0a4, 0x1, 0x1);
        gbc.writeMem(0xa830, { 0xcb, 0xc6 });
        gbc.writeMem(0xd0a4, { 0xf7 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x7e80, gbc.sp());
        EXPECT(0xa832, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa830));
        EXPECT(0xc6, gbc.readMem(0xa831));
        EXPECT(0xf7, gbc.readMem(0xd0a4));
        // CB C6 01B5
        gbc.setState(0x1389, 0xfd87, 0x35f0, 0x248, 0x323b, 0xa6c8, 0x0, 0x1);
        gbc.writeMem(0x1389, { 0xcb, 0xc6 });
        gbc.writeMem(0xa6c8, { 0x91 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xfd87, gbc.sp());
        EXPECT(0x138b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa6c8));
        // CB C6 01B6
        gbc.setState(0xec89, 0x5c17, 0x94c0, 0xc8e9, 0x561a, 0xd6e, 0x1, 0x1);
        gbc.writeMem(0xd6e, { 0x23 });
        gbc.writeMem(0xec89, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x5c17, gbc.sp());
        EXPECT(0xec8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xec89));
        EXPECT(0xc6, gbc.readMem(0xec8a));
        // CB C6 01B9
        gbc.setState(0xb55a, 0x9dca, 0x5740, 0xba40, 0xebb0, 0xccb, 0x1, 0x1);
        gbc.writeMem(0xccb, { 0x2f });
        gbc.writeMem(0xb55a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x9dca, gbc.sp());
        EXPECT(0xb55c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb55a));
        EXPECT(0xc6, gbc.readMem(0xb55b));
        // CB C6 01BA
        gbc.setState(0x7fd7, 0xcc2, 0xe70, 0xb687, 0xb9a4, 0xdd9b, 0x1, 0x0);
        gbc.writeMem(0x7fd7, { 0xcb, 0xc6 });
        gbc.writeMem(0xdd9b, { 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcc2, gbc.sp());
        EXPECT(0x7fd9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdd9b));
        // CB C6 01BB
        gbc.setState(0xba, 0xfc7a, 0xc4a0, 0xc97b, 0x92b9, 0x831e, 0x0, 0x0);
        gbc.writeMem(0xba, { 0xcb, 0xc6 });
        gbc.writeMem(0x831e, { 0xd5 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xfc7a, gbc.sp());
        EXPECT(0xbc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0x831e));
        // CB C6 01BC
        gbc.setState(0x32ed, 0xe15a, 0x23a0, 0xbeb8, 0x9bac, 0xb1eb, 0x1, 0x1);
        gbc.writeMem(0x32ed, { 0xcb, 0xc6 });
        gbc.writeMem(0xb1eb, { 0x5a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xe15a, gbc.sp());
        EXPECT(0x32ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xb1eb));
        // CB C6 01C1
        gbc.setState(0x8ea8, 0x7100, 0xd9c0, 0x1971, 0xef40, 0x9630, 0x0, 0x0);
        gbc.writeMem(0x8ea8, { 0xcb, 0xc6 });
        gbc.writeMem(0x9630, { 0x8a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x7100, gbc.sp());
        EXPECT(0x8eaa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8ea8));
        EXPECT(0xc6, gbc.readMem(0x8ea9));
        EXPECT(0x8b, gbc.readMem(0x9630));
        // CB C6 01C2
        gbc.setState(0x3130, 0x7aa4, 0xee30, 0x28e5, 0xa979, 0x819c, 0x1, 0x0);
        gbc.writeMem(0x3130, { 0xcb, 0xc6 });
        gbc.writeMem(0x819c, { 0x90 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x7aa4, gbc.sp());
        EXPECT(0x3132, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0x819c));
        // CB C6 01C4
        gbc.setState(0x1a71, 0xe0f, 0x2520, 0xa64e, 0x9a, 0xc409, 0x0, 0x1);
        gbc.writeMem(0x1a71, { 0xcb, 0xc6 });
        gbc.writeMem(0xc409, { 0x59 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xe0f, gbc.sp());
        EXPECT(0x1a73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xc409));
        // CB C6 01C5
        gbc.setState(0xab33, 0x7cf, 0x60a0, 0xc340, 0xea53, 0xe571, 0x0, 0x0);
        gbc.writeMem(0xab33, { 0xcb, 0xc6 });
        gbc.writeMem(0xe571, { 0x46 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7cf, gbc.sp());
        EXPECT(0xab35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xab33));
        EXPECT(0xc6, gbc.readMem(0xab34));
        EXPECT(0x47, gbc.readMem(0xe571));
        // CB C6 01C6
        gbc.setState(0x1ae5, 0xd683, 0xf2a0, 0x6cd4, 0xa98b, 0x88c3, 0x1, 0x1);
        gbc.writeMem(0x1ae5, { 0xcb, 0xc6 });
        gbc.writeMem(0x88c3, { 0xd9 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0xd683, gbc.sp());
        EXPECT(0x1ae7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0x88c3));
        // CB C6 01C7
        gbc.setState(0x7b34, 0x1cef, 0x9a40, 0xaff8, 0x6e4b, 0xd4cf, 0x0, 0x0);
        gbc.writeMem(0x7b34, { 0xcb, 0xc6 });
        gbc.writeMem(0xd4cf, { 0xc0 });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1cef, gbc.sp());
        EXPECT(0x7b36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc1, gbc.readMem(0xd4cf));
        // CB C6 01C9
        gbc.setState(0xc705, 0x36f9, 0x4940, 0xa143, 0x553c, 0xab65, 0x0, 0x0);
        gbc.writeMem(0xab65, { 0xdc });
        gbc.writeMem(0xc705, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x36f9, gbc.sp());
        EXPECT(0xc707, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0xab65));
        EXPECT(0xcb, gbc.readMem(0xc705));
        EXPECT(0xc6, gbc.readMem(0xc706));
        // CB C6 01CB
        gbc.setState(0x56cd, 0xb371, 0xab80, 0x37b, 0x4c4a, 0xd90a, 0x1, 0x0);
        gbc.writeMem(0x56cd, { 0xcb, 0xc6 });
        gbc.writeMem(0xd90a, { 0xe9 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb371, gbc.sp());
        EXPECT(0x56cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xd90a));
        // CB C6 01CC
        gbc.setState(0x74bd, 0xc340, 0x9540, 0xf6d0, 0xbdd7, 0x92ac, 0x0, 0x0);
        gbc.writeMem(0x74bd, { 0xcb, 0xc6 });
        gbc.writeMem(0x92ac, { 0xc3 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xc340, gbc.sp());
        EXPECT(0x74bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc3, gbc.readMem(0x92ac));
        // CB C6 01CD
        gbc.setState(0xd00f, 0xdd09, 0x1170, 0xf84c, 0x62dc, 0x532a, 0x0, 0x1);
        gbc.writeMem(0x532a, { 0x49 });
        gbc.writeMem(0xd00f, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xdd09, gbc.sp());
        EXPECT(0xd011, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd00f));
        EXPECT(0xc6, gbc.readMem(0xd010));
        // CB C6 01CF
        gbc.setState(0x2b9e, 0x849f, 0x4700, 0x5cb0, 0x50ea, 0x8dc3, 0x0, 0x1);
        gbc.writeMem(0x2b9e, { 0xcb, 0xc6 });
        gbc.writeMem(0x8dc3, { 0xfe });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x849f, gbc.sp());
        EXPECT(0x2ba0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x8dc3));
        // CB C6 01D0
        gbc.setState(0x3f38, 0x9aa7, 0x5c10, 0x2ab, 0x4324, 0xa480, 0x0, 0x1);
        gbc.writeMem(0x3f38, { 0xcb, 0xc6 });
        gbc.writeMem(0xa480, { 0x91 });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x9aa7, gbc.sp());
        EXPECT(0x3f3a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x91, gbc.readMem(0xa480));
        // CB C6 01D2
        gbc.setState(0x8e48, 0xe6d9, 0x2150, 0xea17, 0xd6f3, 0xa618, 0x1, 0x0);
        gbc.writeMem(0x8e48, { 0xcb, 0xc6 });
        gbc.writeMem(0xa618, { 0xfb });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xe6d9, gbc.sp());
        EXPECT(0x8e4a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e48));
        EXPECT(0xc6, gbc.readMem(0x8e49));
        EXPECT(0xfb, gbc.readMem(0xa618));
        // CB C6 01D3
        gbc.setState(0x8595, 0x9498, 0x67b0, 0x118c, 0xaaa3, 0xb8fb, 0x1, 0x0);
        gbc.writeMem(0x8595, { 0xcb, 0xc6 });
        gbc.writeMem(0xb8fb, { 0xe2 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x9498, gbc.sp());
        EXPECT(0x8597, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8595));
        EXPECT(0xc6, gbc.readMem(0x8596));
        EXPECT(0xe3, gbc.readMem(0xb8fb));
        // CB C6 01D4
        gbc.setState(0x9d2a, 0x9246, 0x29b0, 0xee57, 0x5fea, 0xff3a, 0x0, 0x0);
        gbc.writeMem(0x9d2a, { 0xcb, 0xc6 });
        gbc.writeMem(0xff3a, { 0xf0 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x9246, gbc.sp());
        EXPECT(0x9d2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d2a));
        EXPECT(0xc6, gbc.readMem(0x9d2b));
        EXPECT(0xf1, gbc.readMem(0xff3a));
        // CB C6 01D5
        gbc.setState(0x8828, 0x5036, 0x62c0, 0xdf43, 0xcec7, 0x5955, 0x0, 0x0);
        gbc.writeMem(0x5955, { 0xd3 });
        gbc.writeMem(0x8828, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5036, gbc.sp());
        EXPECT(0x882a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8828));
        EXPECT(0xc6, gbc.readMem(0x8829));
        // CB C6 01D6
        gbc.setState(0x11df, 0xb14e, 0xf700, 0x38ac, 0xce1c, 0xe644, 0x1, 0x1);
        gbc.writeMem(0x11df, { 0xcb, 0xc6 });
        gbc.writeMem(0xe644, { 0x1e });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xac, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb14e, gbc.sp());
        EXPECT(0x11e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1f, gbc.readMem(0xe644));
        // CB C6 01D7
        gbc.setState(0x464d, 0x7ec9, 0xeb0, 0x6d4f, 0x346f, 0xabce, 0x1, 0x0);
        gbc.writeMem(0x464d, { 0xcb, 0xc6 });
        gbc.writeMem(0xabce, { 0x53 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x7ec9, gbc.sp());
        EXPECT(0x464f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xabce));
        // CB C6 01D9
        gbc.setState(0x9ed0, 0xb232, 0xbc20, 0x16fe, 0x68b6, 0x9baa, 0x0, 0x1);
        gbc.writeMem(0x9baa, { 0xe });
        gbc.writeMem(0x9ed0, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xb232, gbc.sp());
        EXPECT(0x9ed2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0x9baa));
        EXPECT(0xcb, gbc.readMem(0x9ed0));
        EXPECT(0xc6, gbc.readMem(0x9ed1));
        // CB C6 01DA
        gbc.setState(0xb3e2, 0x32c5, 0xb80, 0xa6a2, 0x49c, 0xc8d9, 0x1, 0x1);
        gbc.writeMem(0xb3e2, { 0xcb, 0xc6 });
        gbc.writeMem(0xc8d9, { 0x98 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x32c5, gbc.sp());
        EXPECT(0xb3e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3e2));
        EXPECT(0xc6, gbc.readMem(0xb3e3));
        EXPECT(0x99, gbc.readMem(0xc8d9));
        // CB C6 01DB
        gbc.setState(0x49e9, 0xcaba, 0x2470, 0x7c92, 0x4438, 0x5a9b, 0x1, 0x0);
        gbc.writeMem(0x49e9, { 0xcb, 0xc6 });
        gbc.writeMem(0x5a9b, { 0x71 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xcaba, gbc.sp());
        EXPECT(0x49eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 01DC
        gbc.setState(0x4dfb, 0xba8e, 0xd9c0, 0x7510, 0x96b3, 0x72b5, 0x0, 0x0);
        gbc.writeMem(0x4dfb, { 0xcb, 0xc6 });
        gbc.writeMem(0x72b5, { 0x8d });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xba8e, gbc.sp());
        EXPECT(0x4dfd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 01DE
        gbc.setState(0x3d29, 0x7162, 0x7420, 0x9594, 0x73b1, 0xd269, 0x1, 0x1);
        gbc.writeMem(0x3d29, { 0xcb, 0xc6 });
        gbc.writeMem(0xd269, { 0xe0 });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7162, gbc.sp());
        EXPECT(0x3d2b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xd269));
        // CB C6 01DF
        gbc.setState(0x437b, 0xdda2, 0xf270, 0x6425, 0xfff2, 0x21d7, 0x0, 0x0);
        gbc.writeMem(0x21d7, { 0xf1 });
        gbc.writeMem(0x437b, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xdda2, gbc.sp());
        EXPECT(0x437d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 01E0
        gbc.setState(0x6494, 0x7d7f, 0x1d0, 0xaa85, 0xbeda, 0xf787, 0x0, 0x0);
        gbc.writeMem(0x6494, { 0xcb, 0xc6 });
        gbc.writeMem(0xf787, { 0x4 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x7d7f, gbc.sp());
        EXPECT(0x6496, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xf787));
        // CB C6 01E1
        gbc.setState(0xf3, 0x42ae, 0xc770, 0x2bbf, 0xa8c, 0x819e, 0x0, 0x0);
        gbc.writeMem(0xf3, { 0xcb, 0xc6 });
        gbc.writeMem(0x819e, { 0x37 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x42ae, gbc.sp());
        EXPECT(0xf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x819e));
        // CB C6 01E2
        gbc.setState(0xceeb, 0x726, 0xee00, 0x9cbe, 0x1037, 0x8897, 0x1, 0x1);
        gbc.writeMem(0x8897, { 0x60 });
        gbc.writeMem(0xceeb, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x726, gbc.sp());
        EXPECT(0xceed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0x8897));
        EXPECT(0xcb, gbc.readMem(0xceeb));
        EXPECT(0xc6, gbc.readMem(0xceec));
        // CB C6 01E3
        gbc.setState(0xca9f, 0x2d04, 0x5120, 0x9b4, 0xb8d5, 0x7786, 0x1, 0x0);
        gbc.writeMem(0x7786, { 0x57 });
        gbc.writeMem(0xca9f, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x2d04, gbc.sp());
        EXPECT(0xcaa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xca9f));
        EXPECT(0xc6, gbc.readMem(0xcaa0));
        // CB C6 01E4
        gbc.setState(0x2689, 0x3f9, 0x4ef0, 0x8833, 0x8d64, 0xce81, 0x1, 0x0);
        gbc.writeMem(0x2689, { 0xcb, 0xc6 });
        gbc.writeMem(0xce81, { 0x4e });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x3f9, gbc.sp());
        EXPECT(0x268b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xce81));
        // CB C6 01E6
        gbc.setState(0xc176, 0x8b77, 0x4580, 0x85d7, 0xca4a, 0x29aa, 0x1, 0x0);
        gbc.writeMem(0x29aa, { 0x9b });
        gbc.writeMem(0xc176, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x8b77, gbc.sp());
        EXPECT(0xc178, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc176));
        EXPECT(0xc6, gbc.readMem(0xc177));
        // CB C6 01E7
        gbc.setState(0x2202, 0x960a, 0xf6c0, 0x8e52, 0xcc19, 0xa07a, 0x0, 0x0);
        gbc.writeMem(0x2202, { 0xcb, 0xc6 });
        gbc.writeMem(0xa07a, { 0xa7 });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x960a, gbc.sp());
        EXPECT(0x2204, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xa07a));
        // CB C6 01EA
        gbc.setState(0x3bf1, 0x6b49, 0x9cf0, 0xefa3, 0x5dc, 0xf844, 0x0, 0x0);
        gbc.writeMem(0x3bf1, { 0xcb, 0xc6 });
        gbc.writeMem(0xf844, { 0xb6 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x6b49, gbc.sp());
        EXPECT(0x3bf3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xf844));
        // CB C6 01EC
        gbc.setState(0x898a, 0xe8b8, 0xce60, 0xd127, 0xf501, 0x64cc, 0x0, 0x1);
        gbc.writeMem(0x64cc, { 0x89 });
        gbc.writeMem(0x898a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xe8b8, gbc.sp());
        EXPECT(0x898c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x898a));
        EXPECT(0xc6, gbc.readMem(0x898b));
        // CB C6 01ED
        gbc.setState(0xa4ba, 0xc7fc, 0x3e0, 0xabdf, 0xeda8, 0x64bd, 0x1, 0x0);
        gbc.writeMem(0x64bd, { 0x6b });
        gbc.writeMem(0xa4ba, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xc7fc, gbc.sp());
        EXPECT(0xa4bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4ba));
        EXPECT(0xc6, gbc.readMem(0xa4bb));
        // CB C6 01EE
        gbc.setState(0xbcbd, 0xb499, 0x9090, 0xfb6c, 0x632e, 0x8d0c, 0x0, 0x0);
        gbc.writeMem(0x8d0c, { 0x6 });
        gbc.writeMem(0xbcbd, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb499, gbc.sp());
        EXPECT(0xbcbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0x8d0c));
        EXPECT(0xcb, gbc.readMem(0xbcbd));
        EXPECT(0xc6, gbc.readMem(0xbcbe));
        // CB C6 01EF
        gbc.setState(0x7e5b, 0x2bab, 0x4ca0, 0x4e9d, 0x2eb, 0x3e7e, 0x1, 0x1);
        gbc.writeMem(0x3e7e, { 0xb1 });
        gbc.writeMem(0x7e5b, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0x2bab, gbc.sp());
        EXPECT(0x7e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 01F2
        gbc.setState(0xbf7, 0x914b, 0x1390, 0x8517, 0x442a, 0x851b, 0x1, 0x0);
        gbc.writeMem(0xbf7, { 0xcb, 0xc6 });
        gbc.writeMem(0x851b, { 0x56 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x914b, gbc.sp());
        EXPECT(0xbf9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0x851b));
        // CB C6 01F5
        gbc.setState(0x5699, 0xbfda, 0x460, 0xe49d, 0x4bef, 0xa469, 0x1, 0x1);
        gbc.writeMem(0x5699, { 0xcb, 0xc6 });
        gbc.writeMem(0xa469, { 0x18 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xbfda, gbc.sp());
        EXPECT(0x569b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa469));
        // CB C6 01F7
        gbc.setState(0xbf6, 0x21ad, 0xd9f0, 0x60c9, 0xc34d, 0xb5ae, 0x0, 0x0);
        gbc.writeMem(0xbf6, { 0xcb, 0xc6 });
        gbc.writeMem(0xb5ae, { 0xf4 });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x21ad, gbc.sp());
        EXPECT(0xbf8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf5, gbc.readMem(0xb5ae));
        // CB C6 01F8
        gbc.setState(0x85e, 0xc5a7, 0x8b80, 0x81c7, 0x2443, 0x35bc, 0x1, 0x0);
        gbc.writeMem(0x85e, { 0xcb, 0xc6 });
        gbc.writeMem(0x35bc, { 0xcd });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xc5a7, gbc.sp());
        EXPECT(0x860, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 01F9
        gbc.setState(0x5915, 0x53c0, 0xcc30, 0xf743, 0x9e3d, 0x110d, 0x1, 0x1);
        gbc.writeMem(0x110d, { 0x6b });
        gbc.writeMem(0x5915, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x53c0, gbc.sp());
        EXPECT(0x5917, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 01FA
        gbc.setState(0x32cf, 0x391c, 0x9790, 0xec1d, 0xc8e0, 0xc9f0, 0x0, 0x1);
        gbc.writeMem(0x32cf, { 0xcb, 0xc6 });
        gbc.writeMem(0xc9f0, { 0x7b });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x391c, gbc.sp());
        EXPECT(0x32d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7b, gbc.readMem(0xc9f0));
        // CB C6 01FB
        gbc.setState(0xb221, 0xb565, 0x6ed0, 0x7dc0, 0xe674, 0xe50c, 0x0, 0x1);
        gbc.writeMem(0xb221, { 0xcb, 0xc6 });
        gbc.writeMem(0xe50c, { 0x77 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb565, gbc.sp());
        EXPECT(0xb223, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb221));
        EXPECT(0xc6, gbc.readMem(0xb222));
        EXPECT(0x77, gbc.readMem(0xe50c));
        // CB C6 01FF
        gbc.setState(0x4ac6, 0x8f35, 0x9550, 0x7384, 0xc2c8, 0xd76e, 0x1, 0x1);
        gbc.writeMem(0x4ac6, { 0xcb, 0xc6 });
        gbc.writeMem(0xd76e, { 0xf8 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x8f35, gbc.sp());
        EXPECT(0x4ac8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xd76e));
        // CB C6 0200
        gbc.setState(0x1454, 0x2ecd, 0xe970, 0xf4ca, 0x8e15, 0xa819, 0x1, 0x1);
        gbc.writeMem(0x1454, { 0xcb, 0xc6 });
        gbc.writeMem(0xa819, { 0xa1 });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x2ecd, gbc.sp());
        EXPECT(0x1456, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa819));
        // CB C6 0201
        gbc.setState(0x4758, 0x1947, 0x2dd0, 0xbe82, 0x5ea9, 0x2196, 0x0, 0x1);
        gbc.writeMem(0x2196, { 0xad });
        gbc.writeMem(0x4758, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x1947, gbc.sp());
        EXPECT(0x475a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0202
        gbc.setState(0x9ed0, 0xedc3, 0x2460, 0x8856, 0x8dbb, 0xfbe8, 0x1, 0x0);
        gbc.writeMem(0x9ed0, { 0xcb, 0xc6 });
        gbc.writeMem(0xfbe8, { 0x37 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xedc3, gbc.sp());
        EXPECT(0x9ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9ed0));
        EXPECT(0xc6, gbc.readMem(0x9ed1));
        EXPECT(0x37, gbc.readMem(0xfbe8));
        // CB C6 0203
        gbc.setState(0x2a7a, 0xb265, 0x6a20, 0xe937, 0xb10e, 0x7ace, 0x0, 0x1);
        gbc.writeMem(0x2a7a, { 0xcb, 0xc6 });
        gbc.writeMem(0x7ace, { 0x8f });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb265, gbc.sp());
        EXPECT(0x2a7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0204
        gbc.setState(0x509b, 0xf565, 0xb20, 0x1cd8, 0x108f, 0x7f72, 0x0, 0x1);
        gbc.writeMem(0x509b, { 0xcb, 0xc6 });
        gbc.writeMem(0x7f72, { 0xd3 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xf565, gbc.sp());
        EXPECT(0x509d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0205
        gbc.setState(0xb30a, 0x849b, 0xf920, 0x4e7e, 0x41bc, 0xdc8a, 0x1, 0x0);
        gbc.writeMem(0xb30a, { 0xcb, 0xc6 });
        gbc.writeMem(0xdc8a, { 0xe5 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x849b, gbc.sp());
        EXPECT(0xb30c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb30a));
        EXPECT(0xc6, gbc.readMem(0xb30b));
        EXPECT(0xe5, gbc.readMem(0xdc8a));
        // CB C6 0208
        gbc.setState(0xd837, 0x99f6, 0xf310, 0xed8d, 0x2364, 0x9cdf, 0x1, 0x1);
        gbc.writeMem(0x9cdf, { 0x89 });
        gbc.writeMem(0xd837, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x99f6, gbc.sp());
        EXPECT(0xd839, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x89, gbc.readMem(0x9cdf));
        EXPECT(0xcb, gbc.readMem(0xd837));
        EXPECT(0xc6, gbc.readMem(0xd838));
        // CB C6 0209
        gbc.setState(0x8a30, 0x2679, 0xacc0, 0xe13, 0xeb90, 0x71a3, 0x0, 0x0);
        gbc.writeMem(0x71a3, { 0x29 });
        gbc.writeMem(0x8a30, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2679, gbc.sp());
        EXPECT(0x8a32, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8a30));
        EXPECT(0xc6, gbc.readMem(0x8a31));
        // CB C6 020A
        gbc.setState(0xe961, 0x75ea, 0x8d70, 0xe4b6, 0x6ecf, 0x6cce, 0x1, 0x0);
        gbc.writeMem(0x6cce, { 0xa1 });
        gbc.writeMem(0xe961, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x75ea, gbc.sp());
        EXPECT(0xe963, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe961));
        EXPECT(0xc6, gbc.readMem(0xe962));
        // CB C6 020B
        gbc.setState(0x88b4, 0x8b5, 0x6d70, 0x7c50, 0xd961, 0xe08e, 0x0, 0x1);
        gbc.writeMem(0x88b4, { 0xcb, 0xc6 });
        gbc.writeMem(0xe08e, { 0xb7 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8b5, gbc.sp());
        EXPECT(0x88b6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88b4));
        EXPECT(0xc6, gbc.readMem(0x88b5));
        EXPECT(0xb7, gbc.readMem(0xe08e));
        // CB C6 020C
        gbc.setState(0xeb22, 0xda94, 0x4e20, 0x82ed, 0x4062, 0x1374, 0x0, 0x1);
        gbc.writeMem(0x1374, { 0xfd });
        gbc.writeMem(0xeb22, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xda94, gbc.sp());
        EXPECT(0xeb24, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeb22));
        EXPECT(0xc6, gbc.readMem(0xeb23));
        // CB C6 020D
        gbc.setState(0xb21a, 0x6d8d, 0xa070, 0xff1c, 0x8f96, 0xd386, 0x0, 0x1);
        gbc.writeMem(0xb21a, { 0xcb, 0xc6 });
        gbc.writeMem(0xd386, { 0x65 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6d8d, gbc.sp());
        EXPECT(0xb21c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb21a));
        EXPECT(0xc6, gbc.readMem(0xb21b));
        EXPECT(0x65, gbc.readMem(0xd386));
        // CB C6 020F
        gbc.setState(0x410b, 0x4ce3, 0x59b0, 0x608c, 0xcdcb, 0xbf85, 0x0, 0x1);
        gbc.writeMem(0x410b, { 0xcb, 0xc6 });
        gbc.writeMem(0xbf85, { 0x5 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x4ce3, gbc.sp());
        EXPECT(0x410d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xbf85));
        // CB C6 0211
        gbc.setState(0xc0c, 0x95b3, 0xc20, 0x8aa4, 0x6510, 0x7e97, 0x1, 0x0);
        gbc.writeMem(0xc0c, { 0xcb, 0xc6 });
        gbc.writeMem(0x7e97, { 0x31 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x95b3, gbc.sp());
        EXPECT(0xc0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0213
        gbc.setState(0xaa0b, 0xce0a, 0x350, 0xfd9c, 0x8799, 0xe920, 0x0, 0x0);
        gbc.writeMem(0xaa0b, { 0xcb, 0xc6 });
        gbc.writeMem(0xe920, { 0x51 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xce0a, gbc.sp());
        EXPECT(0xaa0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xaa0b));
        EXPECT(0xc6, gbc.readMem(0xaa0c));
        EXPECT(0x51, gbc.readMem(0xe920));
        // CB C6 0215
        gbc.setState(0x2809, 0x2e5a, 0x9180, 0xe6e9, 0xe42d, 0x7db4, 0x0, 0x0);
        gbc.writeMem(0x2809, { 0xcb, 0xc6 });
        gbc.writeMem(0x7db4, { 0xd7 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x2e5a, gbc.sp());
        EXPECT(0x280b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0216
        gbc.setState(0x57e8, 0x5676, 0xa9f0, 0x3b0b, 0x711e, 0x2196, 0x1, 0x1);
        gbc.writeMem(0x2196, { 0xad });
        gbc.writeMem(0x57e8, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5676, gbc.sp());
        EXPECT(0x57ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0218
        gbc.setState(0x7340, 0xaeeb, 0xc3b0, 0x3208, 0x8e11, 0x985c, 0x0, 0x0);
        gbc.writeMem(0x7340, { 0xcb, 0xc6 });
        gbc.writeMem(0x985c, { 0x65 });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xaeeb, gbc.sp());
        EXPECT(0x7342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x985c));
        // CB C6 021A
        gbc.setState(0x23e8, 0x47cb, 0xda90, 0x2bd4, 0xd92d, 0x17e8, 0x1, 0x1);
        gbc.writeMem(0x17e8, { 0xc7 });
        gbc.writeMem(0x23e8, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x47cb, gbc.sp());
        EXPECT(0x23ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 021B
        gbc.setState(0x2d9, 0x7a6, 0xe4c0, 0x3b7f, 0x8bd, 0x3a82, 0x1, 0x0);
        gbc.writeMem(0x2d9, { 0xcb, 0xc6 });
        gbc.writeMem(0x3a82, { 0x8f });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x7a6, gbc.sp());
        EXPECT(0x2db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 021C
        gbc.setState(0xb184, 0x7437, 0x78f0, 0x328d, 0x5f60, 0xdc62, 0x1, 0x1);
        gbc.writeMem(0xb184, { 0xcb, 0xc6 });
        gbc.writeMem(0xdc62, { 0x6e });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x7437, gbc.sp());
        EXPECT(0xb186, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb184));
        EXPECT(0xc6, gbc.readMem(0xb185));
        EXPECT(0x6f, gbc.readMem(0xdc62));
        // CB C6 021D
        gbc.setState(0x121b, 0x68a9, 0xdd70, 0xa70e, 0xf87f, 0x845, 0x0, 0x1);
        gbc.writeMem(0x845, { 0x4d });
        gbc.writeMem(0x121b, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x68a9, gbc.sp());
        EXPECT(0x121d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 021E
        gbc.setState(0x6186, 0xaee0, 0x5f60, 0x7e97, 0x8f08, 0x9e1d, 0x0, 0x1);
        gbc.writeMem(0x6186, { 0xcb, 0xc6 });
        gbc.writeMem(0x9e1d, { 0x43 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xaee0, gbc.sp());
        EXPECT(0x6188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x43, gbc.readMem(0x9e1d));
        // CB C6 021F
        gbc.setState(0xebde, 0xf500, 0x2d90, 0xce54, 0x95a7, 0x36a9, 0x1, 0x1);
        gbc.writeMem(0x36a9, { 0xdb });
        gbc.writeMem(0xebde, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xf500, gbc.sp());
        EXPECT(0xebe0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebde));
        EXPECT(0xc6, gbc.readMem(0xebdf));
        // CB C6 0220
        gbc.setState(0xd612, 0x891e, 0x9e70, 0x656, 0xc1c3, 0xd559, 0x1, 0x1);
        gbc.writeMem(0xd559, { 0xf6 });
        gbc.writeMem(0xd612, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x891e, gbc.sp());
        EXPECT(0xd614, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xd559));
        EXPECT(0xcb, gbc.readMem(0xd612));
        EXPECT(0xc6, gbc.readMem(0xd613));
        // CB C6 0221
        gbc.setState(0xd89e, 0xa8dc, 0x2950, 0xf1a, 0xe665, 0x7f89, 0x0, 0x0);
        gbc.writeMem(0x7f89, { 0x65 });
        gbc.writeMem(0xd89e, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xa8dc, gbc.sp());
        EXPECT(0xd8a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd89e));
        EXPECT(0xc6, gbc.readMem(0xd89f));
        // CB C6 0222
        gbc.setState(0x8416, 0xb205, 0xfe20, 0x8ba1, 0xe394, 0xf2ce, 0x1, 0x0);
        gbc.writeMem(0x8416, { 0xcb, 0xc6 });
        gbc.writeMem(0xf2ce, { 0x68 });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb205, gbc.sp());
        EXPECT(0x8418, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8416));
        EXPECT(0xc6, gbc.readMem(0x8417));
        EXPECT(0x69, gbc.readMem(0xf2ce));
        // CB C6 0223
        gbc.setState(0x37f2, 0x20d6, 0x6c20, 0x43bd, 0x340, 0xabf6, 0x0, 0x1);
        gbc.writeMem(0x37f2, { 0xcb, 0xc6 });
        gbc.writeMem(0xabf6, { 0x36 });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x20d6, gbc.sp());
        EXPECT(0x37f4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0xabf6));
        // CB C6 0224
        gbc.setState(0x1f88, 0x7da0, 0x7820, 0x132b, 0x522a, 0x9014, 0x0, 0x0);
        gbc.writeMem(0x1f88, { 0xcb, 0xc6 });
        gbc.writeMem(0x9014, { 0x26 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7da0, gbc.sp());
        EXPECT(0x1f8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x27, gbc.readMem(0x9014));
        // CB C6 0226
        gbc.setState(0x68d1, 0xd385, 0xb960, 0x3b24, 0x3a55, 0xc646, 0x1, 0x0);
        gbc.writeMem(0x68d1, { 0xcb, 0xc6 });
        gbc.writeMem(0xc646, { 0x55 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xd385, gbc.sp());
        EXPECT(0x68d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc646));
        // CB C6 0227
        gbc.setState(0xe57f, 0xebb2, 0xe650, 0xa290, 0x9be1, 0xf623, 0x0, 0x1);
        gbc.writeMem(0xe57f, { 0xcb, 0xc6 });
        gbc.writeMem(0xf623, { 0xd7 });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xebb2, gbc.sp());
        EXPECT(0xe581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe57f));
        EXPECT(0xc6, gbc.readMem(0xe580));
        EXPECT(0xd7, gbc.readMem(0xf623));
        // CB C6 0229
        gbc.setState(0xbdaf, 0xb82a, 0xbec0, 0x6a43, 0xbc1e, 0xa36d, 0x1, 0x1);
        gbc.writeMem(0xa36d, { 0xf8 });
        gbc.writeMem(0xbdaf, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xb82a, gbc.sp());
        EXPECT(0xbdb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xa36d));
        EXPECT(0xcb, gbc.readMem(0xbdaf));
        EXPECT(0xc6, gbc.readMem(0xbdb0));
        // CB C6 022A
        gbc.setState(0x14a, 0x62aa, 0xc7f0, 0x9752, 0x5bf2, 0x732a, 0x0, 0x1);
        gbc.writeMem(0x14a, { 0xcb, 0xc6 });
        gbc.writeMem(0x732a, { 0xcb });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x62aa, gbc.sp());
        EXPECT(0x14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 022B
        gbc.setState(0x98e9, 0x80d6, 0xb20, 0x9a5, 0x1195, 0x5c57, 0x1, 0x1);
        gbc.writeMem(0x5c57, { 0x61 });
        gbc.writeMem(0x98e9, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x80d6, gbc.sp());
        EXPECT(0x98eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x98e9));
        EXPECT(0xc6, gbc.readMem(0x98ea));
        // CB C6 022C
        gbc.setState(0x23e7, 0x30ff, 0x8cb0, 0xa452, 0xe17f, 0x62b, 0x1, 0x0);
        gbc.writeMem(0x62b, { 0x1 });
        gbc.writeMem(0x23e7, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x30ff, gbc.sp());
        EXPECT(0x23e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 022D
        gbc.setState(0x8ead, 0x64f, 0xf720, 0xe190, 0xf4e4, 0x8117, 0x0, 0x1);
        gbc.writeMem(0x8117, { 0x1c });
        gbc.writeMem(0x8ead, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x64f, gbc.sp());
        EXPECT(0x8eaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1d, gbc.readMem(0x8117));
        EXPECT(0xcb, gbc.readMem(0x8ead));
        EXPECT(0xc6, gbc.readMem(0x8eae));
        // CB C6 022E
        gbc.setState(0xe3d5, 0xd9e3, 0x9610, 0xa45, 0xe595, 0x320, 0x1, 0x0);
        gbc.writeMem(0x320, { 0x67 });
        gbc.writeMem(0xe3d5, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd9e3, gbc.sp());
        EXPECT(0xe3d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe3d5));
        EXPECT(0xc6, gbc.readMem(0xe3d6));
        // CB C6 022F
        gbc.setState(0x31a7, 0x52d0, 0xa5f0, 0xeda8, 0x8cb3, 0xfdda, 0x0, 0x1);
        gbc.writeMem(0x31a7, { 0xcb, 0xc6 });
        gbc.writeMem(0xfdda, { 0xd3 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x52d0, gbc.sp());
        EXPECT(0x31a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xfdda));
        // CB C6 0230
        gbc.setState(0xc45c, 0xf13d, 0xc470, 0x5fff, 0xe187, 0x500f, 0x1, 0x1);
        gbc.writeMem(0x500f, { 0x53 });
        gbc.writeMem(0xc45c, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf13d, gbc.sp());
        EXPECT(0xc45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc45c));
        EXPECT(0xc6, gbc.readMem(0xc45d));
        // CB C6 0231
        gbc.setState(0x3bf5, 0xf8f, 0x6d90, 0x8f9, 0xd8d5, 0x3a95, 0x1, 0x0);
        gbc.writeMem(0x3a95, { 0xaf });
        gbc.writeMem(0x3bf5, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xf8f, gbc.sp());
        EXPECT(0x3bf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0232
        gbc.setState(0x6e50, 0x5cef, 0x4b80, 0x1379, 0x4cd2, 0x9095, 0x0, 0x0);
        gbc.writeMem(0x6e50, { 0xcb, 0xc6 });
        gbc.writeMem(0x9095, { 0x5c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x5cef, gbc.sp());
        EXPECT(0x6e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0x9095));
        // CB C6 0233
        gbc.setState(0x6ddc, 0xdb95, 0xaf60, 0xe248, 0xc1f3, 0x7ca, 0x1, 0x0);
        gbc.writeMem(0x7ca, { 0xef });
        gbc.writeMem(0x6ddc, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0xdb95, gbc.sp());
        EXPECT(0x6dde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0234
        gbc.setState(0xc082, 0x24ac, 0x6350, 0x442c, 0x6edd, 0x701a, 0x0, 0x0);
        gbc.writeMem(0x701a, { 0x2f });
        gbc.writeMem(0xc082, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x24ac, gbc.sp());
        EXPECT(0xc084, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc082));
        EXPECT(0xc6, gbc.readMem(0xc083));
        // CB C6 0235
        gbc.setState(0x2b1c, 0x83b7, 0x33f0, 0xad1b, 0xc334, 0xd9ba, 0x1, 0x0);
        gbc.writeMem(0x2b1c, { 0xcb, 0xc6 });
        gbc.writeMem(0xd9ba, { 0x9a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x83b7, gbc.sp());
        EXPECT(0x2b1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xd9ba));
        // CB C6 0237
        gbc.setState(0x7fd, 0x53d2, 0xbd50, 0xb73a, 0x4d66, 0x67fc, 0x1, 0x1);
        gbc.writeMem(0x7fd, { 0xcb, 0xc6 });
        gbc.writeMem(0x67fc, { 0xb3 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x53d2, gbc.sp());
        EXPECT(0x7ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0238
        gbc.setState(0xb9ad, 0xea4d, 0x30a0, 0xfa6a, 0xa103, 0x5f3a, 0x1, 0x1);
        gbc.writeMem(0x5f3a, { 0x8d });
        gbc.writeMem(0xb9ad, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xea4d, gbc.sp());
        EXPECT(0xb9af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb9ad));
        EXPECT(0xc6, gbc.readMem(0xb9ae));
        // CB C6 023A
        gbc.setState(0x9c2, 0x4a06, 0x8310, 0xd2f9, 0x7376, 0xd91d, 0x0, 0x1);
        gbc.writeMem(0x9c2, { 0xcb, 0xc6 });
        gbc.writeMem(0xd91d, { 0xe4 });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x4a06, gbc.sp());
        EXPECT(0x9c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd91d));
        // CB C6 023B
        gbc.setState(0x8cae, 0x6a32, 0xdbb0, 0x224d, 0x3279, 0x9761, 0x0, 0x0);
        gbc.writeMem(0x8cae, { 0xcb, 0xc6 });
        gbc.writeMem(0x9761, { 0x3 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x6a32, gbc.sp());
        EXPECT(0x8cb0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8cae));
        EXPECT(0xc6, gbc.readMem(0x8caf));
        EXPECT(0x3, gbc.readMem(0x9761));
        // CB C6 023C
        gbc.setState(0x66bd, 0x3c02, 0x1a80, 0x3d3f, 0x728c, 0x829e, 0x1, 0x0);
        gbc.writeMem(0x66bd, { 0xcb, 0xc6 });
        gbc.writeMem(0x829e, { 0xea });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3c02, gbc.sp());
        EXPECT(0x66bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x829e));
        // CB C6 0240
        gbc.setState(0x9780, 0x9ea0, 0x4ca0, 0x8dd2, 0x1dca, 0xda33, 0x0, 0x1);
        gbc.writeMem(0x9780, { 0xcb, 0xc6 });
        gbc.writeMem(0xda33, { 0xfd });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x9ea0, gbc.sp());
        EXPECT(0x9782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9780));
        EXPECT(0xc6, gbc.readMem(0x9781));
        EXPECT(0xfd, gbc.readMem(0xda33));
        // CB C6 0241
        gbc.setState(0xa1df, 0xe305, 0x7710, 0xfd48, 0x1836, 0x210c, 0x1, 0x1);
        gbc.writeMem(0x210c, { 0xd5 });
        gbc.writeMem(0xa1df, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xe305, gbc.sp());
        EXPECT(0xa1e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa1df));
        EXPECT(0xc6, gbc.readMem(0xa1e0));
        // CB C6 0242
        gbc.setState(0x9941, 0xed2, 0xec50, 0x6135, 0xd593, 0x5de1, 0x0, 0x0);
        gbc.writeMem(0x5de1, { 0x7b });
        gbc.writeMem(0x9941, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xed2, gbc.sp());
        EXPECT(0x9943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9941));
        EXPECT(0xc6, gbc.readMem(0x9942));
        // CB C6 0243
        gbc.setState(0x731e, 0x2da8, 0xcd60, 0x108c, 0x4887, 0xa223, 0x0, 0x1);
        gbc.writeMem(0x731e, { 0xcb, 0xc6 });
        gbc.writeMem(0xa223, { 0x2c });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x2da8, gbc.sp());
        EXPECT(0x7320, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xa223));
        // CB C6 0244
        gbc.setState(0x483, 0xcb80, 0x1f20, 0xa4d7, 0xfd1c, 0xf5b4, 0x1, 0x0);
        gbc.writeMem(0x483, { 0xcb, 0xc6 });
        gbc.writeMem(0xf5b4, { 0xe6 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xcb80, gbc.sp());
        EXPECT(0x485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe7, gbc.readMem(0xf5b4));
        // CB C6 0245
        gbc.setState(0xdc7, 0x77b9, 0x1d70, 0x6f44, 0x921, 0xffbf, 0x1, 0x1);
        gbc.writeMem(0xdc7, { 0xcb, 0xc6 });
        gbc.writeMem(0xffbf, { 0xec });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x77b9, gbc.sp());
        EXPECT(0xdc9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xffbf));
        // CB C6 0247
        gbc.setState(0x7969, 0x9230, 0x4750, 0x2494, 0x40f6, 0xd541, 0x0, 0x1);
        gbc.writeMem(0x7969, { 0xcb, 0xc6 });
        gbc.writeMem(0xd541, { 0x7 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x9230, gbc.sp());
        EXPECT(0x796b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xd541));
        // CB C6 0249
        gbc.setState(0x25a, 0x2abd, 0x8d40, 0xcdf3, 0xb734, 0x72a4, 0x0, 0x1);
        gbc.writeMem(0x25a, { 0xcb, 0xc6 });
        gbc.writeMem(0x72a4, { 0xa7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x2abd, gbc.sp());
        EXPECT(0x25c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 024A
        gbc.setState(0xa06e, 0xce08, 0x4dc0, 0x1c65, 0xcd79, 0xd97a, 0x1, 0x0);
        gbc.writeMem(0xa06e, { 0xcb, 0xc6 });
        gbc.writeMem(0xd97a, { 0xaa });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xce08, gbc.sp());
        EXPECT(0xa070, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa06e));
        EXPECT(0xc6, gbc.readMem(0xa06f));
        EXPECT(0xab, gbc.readMem(0xd97a));
        // CB C6 024C
        gbc.setState(0x43bc, 0x56a2, 0xbfd0, 0x49dc, 0x37e0, 0xe4cb, 0x0, 0x1);
        gbc.writeMem(0x43bc, { 0xcb, 0xc6 });
        gbc.writeMem(0xe4cb, { 0x55 });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x56a2, gbc.sp());
        EXPECT(0x43be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xe4cb));
        // CB C6 024D
        gbc.setState(0x97b, 0x15a4, 0xffd0, 0xcf1b, 0x1f7, 0x596d, 0x0, 0x0);
        gbc.writeMem(0x97b, { 0xcb, 0xc6 });
        gbc.writeMem(0x596d, { 0x41 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x15a4, gbc.sp());
        EXPECT(0x97d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0251
        gbc.setState(0x5d3c, 0x5231, 0xcb00, 0x84ec, 0xdfd5, 0x8419, 0x1, 0x1);
        gbc.writeMem(0x5d3c, { 0xcb, 0xc6 });
        gbc.writeMem(0x8419, { 0xe2 });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x5231, gbc.sp());
        EXPECT(0x5d3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0x8419));
        // CB C6 0252
        gbc.setState(0x374c, 0x4bf9, 0x1b50, 0x4be8, 0xf2d5, 0xec55, 0x0, 0x0);
        gbc.writeMem(0x374c, { 0xcb, 0xc6 });
        gbc.writeMem(0xec55, { 0xce });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x4bf9, gbc.sp());
        EXPECT(0x374e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xec55));
        // CB C6 0253
        gbc.setState(0xbc9f, 0x38d4, 0x800, 0xef35, 0x4c56, 0xa83a, 0x1, 0x0);
        gbc.writeMem(0xa83a, { 0xc6 });
        gbc.writeMem(0xbc9f, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x38d4, gbc.sp());
        EXPECT(0xbca1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc7, gbc.readMem(0xa83a));
        EXPECT(0xcb, gbc.readMem(0xbc9f));
        EXPECT(0xc6, gbc.readMem(0xbca0));
        // CB C6 0256
        gbc.setState(0x43c2, 0xb7eb, 0x1d70, 0x8eb6, 0xaaed, 0xb2f6, 0x0, 0x1);
        gbc.writeMem(0x43c2, { 0xcb, 0xc6 });
        gbc.writeMem(0xb2f6, { 0x3a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xb7eb, gbc.sp());
        EXPECT(0x43c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xb2f6));
        // CB C6 025A
        gbc.setState(0x3704, 0xc252, 0xb1e0, 0xb770, 0x431c, 0xb5ee, 0x1, 0x1);
        gbc.writeMem(0x3704, { 0xcb, 0xc6 });
        gbc.writeMem(0xb5ee, { 0xe8 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc252, gbc.sp());
        EXPECT(0x3706, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xb5ee));
        // CB C6 025C
        gbc.setState(0x579a, 0x36ba, 0xab80, 0xda6, 0xb570, 0xcacd, 0x0, 0x0);
        gbc.writeMem(0x579a, { 0xcb, 0xc6 });
        gbc.writeMem(0xcacd, { 0x4a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x36ba, gbc.sp());
        EXPECT(0x579c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4b, gbc.readMem(0xcacd));
        // CB C6 025E
        gbc.setState(0x1ff5, 0x707b, 0x9c80, 0xfd70, 0xecaa, 0xc67, 0x0, 0x0);
        gbc.writeMem(0xc67, { 0x31 });
        gbc.writeMem(0x1ff5, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x707b, gbc.sp());
        EXPECT(0x1ff7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 025F
        gbc.setState(0x5ebb, 0xf83f, 0xf970, 0x3ac0, 0x530f, 0x3129, 0x1, 0x1);
        gbc.writeMem(0x3129, { 0x91 });
        gbc.writeMem(0x5ebb, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xf83f, gbc.sp());
        EXPECT(0x5ebd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0260
        gbc.setState(0x6523, 0x36dc, 0x68c0, 0x3a4b, 0x8cb8, 0x85ab, 0x0, 0x0);
        gbc.writeMem(0x6523, { 0xcb, 0xc6 });
        gbc.writeMem(0x85ab, { 0x78 });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x36dc, gbc.sp());
        EXPECT(0x6525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x79, gbc.readMem(0x85ab));
        // CB C6 0261
        gbc.setState(0x88ae, 0x81e6, 0x82b0, 0x86c4, 0x7f72, 0x952e, 0x0, 0x1);
        gbc.writeMem(0x88ae, { 0xcb, 0xc6 });
        gbc.writeMem(0x952e, { 0x65 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x81e6, gbc.sp());
        EXPECT(0x88b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ae));
        EXPECT(0xc6, gbc.readMem(0x88af));
        EXPECT(0x65, gbc.readMem(0x952e));
        // CB C6 0262
        gbc.setState(0x620e, 0xe11c, 0xdb70, 0x9576, 0x2ba3, 0xf8b8, 0x0, 0x0);
        gbc.writeMem(0x620e, { 0xcb, 0xc6 });
        gbc.writeMem(0xf8b8, { 0xbf });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xe11c, gbc.sp());
        EXPECT(0x6210, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xf8b8));
        // CB C6 0263
        gbc.setState(0xa41c, 0x75fd, 0x43c0, 0xa3a6, 0xa671, 0xb38d, 0x1, 0x0);
        gbc.writeMem(0xa41c, { 0xcb, 0xc6 });
        gbc.writeMem(0xb38d, { 0xd2 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x75fd, gbc.sp());
        EXPECT(0xa41e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa41c));
        EXPECT(0xc6, gbc.readMem(0xa41d));
        EXPECT(0xd3, gbc.readMem(0xb38d));
        // CB C6 0264
        gbc.setState(0x293c, 0x3695, 0x1cf0, 0x969, 0xfb09, 0x1614, 0x0, 0x0);
        gbc.writeMem(0x1614, { 0x21 });
        gbc.writeMem(0x293c, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x3695, gbc.sp());
        EXPECT(0x293e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0267
        gbc.setState(0x35fa, 0xec81, 0x82b0, 0xe8c7, 0xd94e, 0x9bba, 0x0, 0x1);
        gbc.writeMem(0x35fa, { 0xcb, 0xc6 });
        gbc.writeMem(0x9bba, { 0xc9 });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0xec81, gbc.sp());
        EXPECT(0x35fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xc9, gbc.readMem(0x9bba));
        // CB C6 0268
        gbc.setState(0xed00, 0xc9d2, 0x3690, 0x2942, 0x7536, 0xa650, 0x0, 0x1);
        gbc.writeMem(0xa650, { 0xb });
        gbc.writeMem(0xed00, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xc9d2, gbc.sp());
        EXPECT(0xed02, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb, gbc.readMem(0xa650));
        EXPECT(0xcb, gbc.readMem(0xed00));
        EXPECT(0xc6, gbc.readMem(0xed01));
        // CB C6 026A
        gbc.setState(0xbca5, 0xe73, 0x9210, 0x2a47, 0xd112, 0xe94c, 0x1, 0x1);
        gbc.writeMem(0xbca5, { 0xcb, 0xc6 });
        gbc.writeMem(0xe94c, { 0x68 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe73, gbc.sp());
        EXPECT(0xbca7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xbca5));
        EXPECT(0xc6, gbc.readMem(0xbca6));
        EXPECT(0x69, gbc.readMem(0xe94c));
        // CB C6 026B
        gbc.setState(0x7fc6, 0x2a9c, 0x3b50, 0x93f0, 0xc958, 0x6a17, 0x1, 0x0);
        gbc.writeMem(0x6a17, { 0x1b });
        gbc.writeMem(0x7fc6, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2a9c, gbc.sp());
        EXPECT(0x7fc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 026C
        gbc.setState(0xc4b5, 0x3b3a, 0x1040, 0xce1f, 0x8325, 0xd3a2, 0x0, 0x1);
        gbc.writeMem(0xc4b5, { 0xcb, 0xc6 });
        gbc.writeMem(0xd3a2, { 0x25 });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x3b3a, gbc.sp());
        EXPECT(0xc4b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc4b5));
        EXPECT(0xc6, gbc.readMem(0xc4b6));
        EXPECT(0x25, gbc.readMem(0xd3a2));
        // CB C6 026D
        gbc.setState(0x999e, 0xff15, 0xa720, 0x3420, 0x8357, 0xfe49, 0x1, 0x1);
        gbc.writeMem(0x999e, { 0xcb, 0xc6 });
        gbc.writeMem(0xfe49, { 0x6d });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xff15, gbc.sp());
        EXPECT(0x99a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x999e));
        EXPECT(0xc6, gbc.readMem(0x999f));
        EXPECT(0x6d, gbc.readMem(0xfe49));
        // CB C6 0270
        gbc.setState(0x8e8d, 0x6fa1, 0xf020, 0xc3f9, 0x25eb, 0x36ff, 0x1, 0x0);
        gbc.writeMem(0x36ff, { 0x9d });
        gbc.writeMem(0x8e8d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x6fa1, gbc.sp());
        EXPECT(0x8e8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e8d));
        EXPECT(0xc6, gbc.readMem(0x8e8e));
        // CB C6 0271
        gbc.setState(0x8596, 0xedd6, 0x9f90, 0x880f, 0xcc88, 0xae78, 0x0, 0x0);
        gbc.writeMem(0x8596, { 0xcb, 0xc6 });
        gbc.writeMem(0xae78, { 0xf9 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xedd6, gbc.sp());
        EXPECT(0x8598, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8596));
        EXPECT(0xc6, gbc.readMem(0x8597));
        EXPECT(0xf9, gbc.readMem(0xae78));
        // CB C6 0272
        gbc.setState(0xe897, 0x9949, 0xa630, 0xeca6, 0x367f, 0xcaa, 0x1, 0x0);
        gbc.writeMem(0xcaa, { 0xbf });
        gbc.writeMem(0xe897, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9949, gbc.sp());
        EXPECT(0xe899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe897));
        EXPECT(0xc6, gbc.readMem(0xe898));
        // CB C6 0273
        gbc.setState(0x78fe, 0x6c7f, 0x5f70, 0xe587, 0x4869, 0xf7a9, 0x1, 0x1);
        gbc.writeMem(0x78fe, { 0xcb, 0xc6 });
        gbc.writeMem(0xf7a9, { 0xf0 });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x6c7f, gbc.sp());
        EXPECT(0x7900, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xf7a9));
        // CB C6 0274
        gbc.setState(0x3e90, 0x3633, 0xa0d0, 0x79fd, 0xa185, 0x8135, 0x0, 0x0);
        gbc.writeMem(0x3e90, { 0xcb, 0xc6 });
        gbc.writeMem(0x8135, { 0x75 });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x3633, gbc.sp());
        EXPECT(0x3e92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0x8135));
        // CB C6 0275
        gbc.setState(0x2c8e, 0xe7da, 0xc650, 0x2454, 0x3500, 0x78bf, 0x0, 0x0);
        gbc.writeMem(0x2c8e, { 0xcb, 0xc6 });
        gbc.writeMem(0x78bf, { 0xb7 });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xe7da, gbc.sp());
        EXPECT(0x2c90, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0276
        gbc.setState(0xc02d, 0x16e8, 0x4920, 0x1d6e, 0x619e, 0x13aa, 0x1, 0x1);
        gbc.writeMem(0x13aa, { 0x3f });
        gbc.writeMem(0xc02d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x16e8, gbc.sp());
        EXPECT(0xc02f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc02d));
        EXPECT(0xc6, gbc.readMem(0xc02e));
        // CB C6 0277
        gbc.setState(0x931d, 0x7eab, 0x7100, 0x9cb6, 0xeeae, 0x7374, 0x1, 0x0);
        gbc.writeMem(0x7374, { 0xd1 });
        gbc.writeMem(0x931d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x7eab, gbc.sp());
        EXPECT(0x931f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x931d));
        EXPECT(0xc6, gbc.readMem(0x931e));
        // CB C6 0278
        gbc.setState(0x6876, 0xd91a, 0x1a30, 0x6de, 0xc105, 0x96cf, 0x1, 0x1);
        gbc.writeMem(0x6876, { 0xcb, 0xc6 });
        gbc.writeMem(0x96cf, { 0x4c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd91a, gbc.sp());
        EXPECT(0x6878, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x4d, gbc.readMem(0x96cf));
        // CB C6 0279
        gbc.setState(0x9d5, 0x97e4, 0xbc10, 0xcc36, 0x8050, 0xfd65, 0x1, 0x0);
        gbc.writeMem(0x9d5, { 0xcb, 0xc6 });
        gbc.writeMem(0xfd65, { 0x87 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x97e4, gbc.sp());
        EXPECT(0x9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0xfd65));
        // CB C6 027B
        gbc.setState(0xdf21, 0x972a, 0x57a0, 0xb032, 0xf4e2, 0x8f9d, 0x1, 0x0);
        gbc.writeMem(0x8f9d, { 0x86 });
        gbc.writeMem(0xdf21, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x972a, gbc.sp());
        EXPECT(0xdf23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x87, gbc.readMem(0x8f9d));
        EXPECT(0xcb, gbc.readMem(0xdf21));
        EXPECT(0xc6, gbc.readMem(0xdf22));
        // CB C6 027C
        gbc.setState(0x9c3e, 0x73bb, 0x72b0, 0xae02, 0xa0bb, 0x1aa3, 0x1, 0x1);
        gbc.writeMem(0x1aa3, { 0xf3 });
        gbc.writeMem(0x9c3e, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x73bb, gbc.sp());
        EXPECT(0x9c40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c3e));
        EXPECT(0xc6, gbc.readMem(0x9c3f));
        // CB C6 027D
        gbc.setState(0xd066, 0xcc07, 0xcec0, 0x2227, 0x316a, 0xffdc, 0x0, 0x1);
        gbc.writeMem(0xd066, { 0xcb, 0xc6 });
        gbc.writeMem(0xffdc, { 0xcb });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xcc07, gbc.sp());
        EXPECT(0xd068, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd066));
        EXPECT(0xc6, gbc.readMem(0xd067));
        EXPECT(0xcb, gbc.readMem(0xffdc));
        // CB C6 027E
        gbc.setState(0x8dd, 0x26db, 0x53d0, 0x5a61, 0x2677, 0xce9b, 0x0, 0x0);
        gbc.writeMem(0x8dd, { 0xcb, 0xc6 });
        gbc.writeMem(0xce9b, { 0xf9 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x26db, gbc.sp());
        EXPECT(0x8df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xce9b));
        // CB C6 0280
        gbc.setState(0xdf59, 0x7791, 0x51e0, 0xa6de, 0x9b75, 0x4e38, 0x0, 0x1);
        gbc.writeMem(0x4e38, { 0x51 });
        gbc.writeMem(0xdf59, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x7791, gbc.sp());
        EXPECT(0xdf5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdf59));
        EXPECT(0xc6, gbc.readMem(0xdf5a));
        // CB C6 0284
        gbc.setState(0xabb9, 0x3c35, 0x1870, 0xb40a, 0x3b12, 0x8268, 0x1, 0x0);
        gbc.writeMem(0x8268, { 0x65 });
        gbc.writeMem(0xabb9, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x3c35, gbc.sp());
        EXPECT(0xabbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0x8268));
        EXPECT(0xcb, gbc.readMem(0xabb9));
        EXPECT(0xc6, gbc.readMem(0xabba));
        // CB C6 0285
        gbc.setState(0xec53, 0x1a9b, 0x1c0, 0x28aa, 0x616e, 0xb1cd, 0x1, 0x0);
        gbc.writeMem(0xb1cd, { 0xb8 });
        gbc.writeMem(0xec53, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x1a9b, gbc.sp());
        EXPECT(0xec55, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb9, gbc.readMem(0xb1cd));
        EXPECT(0xcb, gbc.readMem(0xec53));
        EXPECT(0xc6, gbc.readMem(0xec54));
        // CB C6 0287
        gbc.setState(0x6de, 0x6aea, 0x880, 0xad27, 0xc8e0, 0xbc26, 0x1, 0x0);
        gbc.writeMem(0x6de, { 0xcb, 0xc6 });
        gbc.writeMem(0xbc26, { 0xa8 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x6aea, gbc.sp());
        EXPECT(0x6e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xbc26));
        // CB C6 0288
        gbc.setState(0xa33b, 0xbc9e, 0x2520, 0x9900, 0x562, 0xf250, 0x1, 0x0);
        gbc.writeMem(0xa33b, { 0xcb, 0xc6 });
        gbc.writeMem(0xf250, { 0x41 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xbc9e, gbc.sp());
        EXPECT(0xa33d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa33b));
        EXPECT(0xc6, gbc.readMem(0xa33c));
        EXPECT(0x41, gbc.readMem(0xf250));
        // CB C6 028B
        gbc.setState(0x8768, 0xbde9, 0x3c50, 0x7e7a, 0xc4d4, 0xca1a, 0x1, 0x0);
        gbc.writeMem(0x8768, { 0xcb, 0xc6 });
        gbc.writeMem(0xca1a, { 0x97 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xbde9, gbc.sp());
        EXPECT(0x876a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8768));
        EXPECT(0xc6, gbc.readMem(0x8769));
        EXPECT(0x97, gbc.readMem(0xca1a));
        // CB C6 028C
        gbc.setState(0x423f, 0xc682, 0x9b20, 0x7ecd, 0x56dd, 0x1b1e, 0x1, 0x1);
        gbc.writeMem(0x1b1e, { 0xb7 });
        gbc.writeMem(0x423f, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xc682, gbc.sp());
        EXPECT(0x4241, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 028D
        gbc.setState(0x251a, 0x9d1e, 0x870, 0x2492, 0x6b70, 0xaac0, 0x0, 0x0);
        gbc.writeMem(0x251a, { 0xcb, 0xc6 });
        gbc.writeMem(0xaac0, { 0xd9 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x9d1e, gbc.sp());
        EXPECT(0x251c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd9, gbc.readMem(0xaac0));
        // CB C6 028F
        gbc.setState(0x11f1, 0x3b87, 0x53d0, 0x7ad3, 0xc38a, 0x399e, 0x1, 0x1);
        gbc.writeMem(0x11f1, { 0xcb, 0xc6 });
        gbc.writeMem(0x399e, { 0x23 });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x3b87, gbc.sp());
        EXPECT(0x11f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0290
        gbc.setState(0x9747, 0x5535, 0x71a0, 0x11d, 0xa2f6, 0xd271, 0x1, 0x0);
        gbc.writeMem(0x9747, { 0xcb, 0xc6 });
        gbc.writeMem(0xd271, { 0xba });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5535, gbc.sp());
        EXPECT(0x9749, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9747));
        EXPECT(0xc6, gbc.readMem(0x9748));
        EXPECT(0xbb, gbc.readMem(0xd271));
        // CB C6 0293
        gbc.setState(0x32f6, 0xcb82, 0xc7f0, 0x81a1, 0xa695, 0x951f, 0x1, 0x1);
        gbc.writeMem(0x32f6, { 0xcb, 0xc6 });
        gbc.writeMem(0x951f, { 0x5a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xcb82, gbc.sp());
        EXPECT(0x32f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0x951f));
        // CB C6 0297
        gbc.setState(0xe99e, 0x19d6, 0xff50, 0xcd55, 0x14cc, 0xfdc5, 0x0, 0x0);
        gbc.writeMem(0xe99e, { 0xcb, 0xc6 });
        gbc.writeMem(0xfdc5, { 0x93 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x19d6, gbc.sp());
        EXPECT(0xe9a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe99e));
        EXPECT(0xc6, gbc.readMem(0xe99f));
        EXPECT(0x93, gbc.readMem(0xfdc5));
        // CB C6 0298
        gbc.setState(0xb3ab, 0x95b8, 0x30, 0x2920, 0x4b8b, 0xb6c8, 0x0, 0x1);
        gbc.writeMem(0xb3ab, { 0xcb, 0xc6 });
        gbc.writeMem(0xb6c8, { 0x2e });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x95b8, gbc.sp());
        EXPECT(0xb3ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb3ab));
        EXPECT(0xc6, gbc.readMem(0xb3ac));
        EXPECT(0x2f, gbc.readMem(0xb6c8));
        // CB C6 0299
        gbc.setState(0xfd3, 0xd53c, 0x98f0, 0x7f49, 0x92db, 0x9177, 0x1, 0x0);
        gbc.writeMem(0xfd3, { 0xcb, 0xc6 });
        gbc.writeMem(0x9177, { 0x55 });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd53c, gbc.sp());
        EXPECT(0xfd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x9177));
        // CB C6 029D
        gbc.setState(0xad6a, 0x3cf1, 0xaa10, 0x4205, 0x6a9, 0x301a, 0x0, 0x0);
        gbc.writeMem(0x301a, { 0x53 });
        gbc.writeMem(0xad6a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3cf1, gbc.sp());
        EXPECT(0xad6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xad6a));
        EXPECT(0xc6, gbc.readMem(0xad6b));
        // CB C6 029E
        gbc.setState(0xe675, 0xde4, 0x310, 0xf31c, 0x294, 0x886, 0x1, 0x1);
        gbc.writeMem(0x886, { 0xb1 });
        gbc.writeMem(0xe675, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xde4, gbc.sp());
        EXPECT(0xe677, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe675));
        EXPECT(0xc6, gbc.readMem(0xe676));
        // CB C6 029F
        gbc.setState(0x1e42, 0x67c5, 0xa720, 0x7484, 0xf1bb, 0xc819, 0x1, 0x0);
        gbc.writeMem(0x1e42, { 0xcb, 0xc6 });
        gbc.writeMem(0xc819, { 0x4 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x67c5, gbc.sp());
        EXPECT(0x1e44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5, gbc.readMem(0xc819));
        // CB C6 02A0
        gbc.setState(0x34bc, 0x40bd, 0x2d40, 0x463f, 0xca48, 0x66a4, 0x0, 0x1);
        gbc.writeMem(0x34bc, { 0xcb, 0xc6 });
        gbc.writeMem(0x66a4, { 0xab });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x40bd, gbc.sp());
        EXPECT(0x34be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 02A1
        gbc.setState(0x2a75, 0x9317, 0xd570, 0x196b, 0xb1ed, 0x4615, 0x0, 0x1);
        gbc.writeMem(0x2a75, { 0xcb, 0xc6 });
        gbc.writeMem(0x4615, { 0x33 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x9317, gbc.sp());
        EXPECT(0x2a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 02A2
        gbc.setState(0x2e7c, 0x406d, 0x640, 0xc034, 0x61bb, 0x75bd, 0x0, 0x0);
        gbc.writeMem(0x2e7c, { 0xcb, 0xc6 });
        gbc.writeMem(0x75bd, { 0xb });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x406d, gbc.sp());
        EXPECT(0x2e7e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 02A5
        gbc.setState(0xbf38, 0x33ad, 0x1e0, 0xaac8, 0xc296, 0x963b, 0x1, 0x0);
        gbc.writeMem(0x963b, { 0xbb });
        gbc.writeMem(0xbf38, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x33ad, gbc.sp());
        EXPECT(0xbf3a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbb, gbc.readMem(0x963b));
        EXPECT(0xcb, gbc.readMem(0xbf38));
        EXPECT(0xc6, gbc.readMem(0xbf39));
        // CB C6 02A6
        gbc.setState(0x2283, 0x6b6f, 0xd960, 0x2f88, 0x8548, 0x3517, 0x1, 0x0);
        gbc.writeMem(0x2283, { 0xcb, 0xc6 });
        gbc.writeMem(0x3517, { 0x2b });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6b6f, gbc.sp());
        EXPECT(0x2285, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 02A7
        gbc.setState(0x41c8, 0x7df2, 0x800, 0x21c5, 0x2cdb, 0x67d0, 0x0, 0x0);
        gbc.writeMem(0x41c8, { 0xcb, 0xc6 });
        gbc.writeMem(0x67d0, { 0x67 });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x7df2, gbc.sp());
        EXPECT(0x41ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 02A8
        gbc.setState(0x2e3b, 0x20ed, 0x4e00, 0x18f4, 0xd941, 0xc97b, 0x0, 0x1);
        gbc.writeMem(0x2e3b, { 0xcb, 0xc6 });
        gbc.writeMem(0xc97b, { 0x62 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x20ed, gbc.sp());
        EXPECT(0x2e3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xc97b));
        // CB C6 02A9
        gbc.setState(0x34e, 0xa70c, 0xd220, 0x69bd, 0xa556, 0xff33, 0x1, 0x0);
        gbc.writeMem(0x34e, { 0xcb, 0xc6 });
        gbc.writeMem(0xff33, { 0x28 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xa70c, gbc.sp());
        EXPECT(0x350, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xff33));
        // CB C6 02AC
        gbc.setState(0xf28, 0xc61f, 0x6e80, 0xf51d, 0x1644, 0x36ce, 0x0, 0x0);
        gbc.writeMem(0xf28, { 0xcb, 0xc6 });
        gbc.writeMem(0x36ce, { 0x33 });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xc61f, gbc.sp());
        EXPECT(0xf2a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 02AD
        gbc.setState(0x29de, 0x2fcd, 0x4360, 0xcd4, 0x7acd, 0xccc1, 0x1, 0x0);
        gbc.writeMem(0x29de, { 0xcb, 0xc6 });
        gbc.writeMem(0xccc1, { 0xad });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2fcd, gbc.sp());
        EXPECT(0x29e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xccc1));
        // CB C6 02AE
        gbc.setState(0x27be, 0x173d, 0xe4c0, 0x8bce, 0x6d1c, 0x1c45, 0x0, 0x1);
        gbc.writeMem(0x1c45, { 0x3d });
        gbc.writeMem(0x27be, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x173d, gbc.sp());
        EXPECT(0x27c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 02B0
        gbc.setState(0x1f0e, 0xa850, 0x8e20, 0x38d9, 0xdcfb, 0xde4e, 0x1, 0x1);
        gbc.writeMem(0x1f0e, { 0xcb, 0xc6 });
        gbc.writeMem(0xde4e, { 0x49 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xa850, gbc.sp());
        EXPECT(0x1f10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x49, gbc.readMem(0xde4e));
        // CB C6 02B1
        gbc.setState(0x7e72, 0x5835, 0xf640, 0x3a82, 0x2db2, 0x9c96, 0x1, 0x1);
        gbc.writeMem(0x7e72, { 0xcb, 0xc6 });
        gbc.writeMem(0x9c96, { 0xfd });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x5835, gbc.sp());
        EXPECT(0x7e74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xfd, gbc.readMem(0x9c96));
        // CB C6 02B2
        gbc.setState(0xd95a, 0xb658, 0x6120, 0xb208, 0xe460, 0x4ffb, 0x0, 0x0);
        gbc.writeMem(0x4ffb, { 0xe1 });
        gbc.writeMem(0xd95a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xb658, gbc.sp());
        EXPECT(0xd95c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd95a));
        EXPECT(0xc6, gbc.readMem(0xd95b));
        // CB C6 02B3
        gbc.setState(0x460c, 0x9055, 0x1580, 0x4d9f, 0x425b, 0xccf2, 0x1, 0x0);
        gbc.writeMem(0x460c, { 0xcb, 0xc6 });
        gbc.writeMem(0xccf2, { 0xec });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x9055, gbc.sp());
        EXPECT(0x460e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xed, gbc.readMem(0xccf2));
        // CB C6 02B4
        gbc.setState(0xc20, 0xb8d0, 0x2840, 0xb51e, 0xdc48, 0x99a3, 0x0, 0x0);
        gbc.writeMem(0xc20, { 0xcb, 0xc6 });
        gbc.writeMem(0x99a3, { 0x54 });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xb8d0, gbc.sp());
        EXPECT(0xc22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0x99a3));
        // CB C6 02B5
        gbc.setState(0xa8a0, 0x5eac, 0xeb20, 0x10b8, 0xc3d8, 0x2b86, 0x1, 0x1);
        gbc.writeMem(0x2b86, { 0x5b });
        gbc.writeMem(0xa8a0, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5eac, gbc.sp());
        EXPECT(0xa8a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa8a0));
        EXPECT(0xc6, gbc.readMem(0xa8a1));
        // CB C6 02B6
        gbc.setState(0x2918, 0xb921, 0x7950, 0xaecd, 0x4eb4, 0xca4c, 0x1, 0x1);
        gbc.writeMem(0x2918, { 0xcb, 0xc6 });
        gbc.writeMem(0xca4c, { 0xaa });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xb921, gbc.sp());
        EXPECT(0x291a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xca4c));
        // CB C6 02B7
        gbc.setState(0x8162, 0xf32a, 0xedc0, 0x44a9, 0x8de6, 0x140, 0x1, 0x0);
        gbc.writeMem(0x140, { 0x17 });
        gbc.writeMem(0x8162, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf32a, gbc.sp());
        EXPECT(0x8164, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8162));
        EXPECT(0xc6, gbc.readMem(0x8163));
        // CB C6 02B9
        gbc.setState(0xb774, 0xd4c2, 0x56d0, 0x553e, 0x70bf, 0x241a, 0x0, 0x0);
        gbc.writeMem(0x241a, { 0xa9 });
        gbc.writeMem(0xb774, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xd4c2, gbc.sp());
        EXPECT(0xb776, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb774));
        EXPECT(0xc6, gbc.readMem(0xb775));
        // CB C6 02BA
        gbc.setState(0x4505, 0xefe0, 0x5220, 0x6163, 0x5d5d, 0xa8fe, 0x0, 0x1);
        gbc.writeMem(0x4505, { 0xcb, 0xc6 });
        gbc.writeMem(0xa8fe, { 0xa1 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xefe0, gbc.sp());
        EXPECT(0x4507, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa1, gbc.readMem(0xa8fe));
        // CB C6 02BB
        gbc.setState(0x5ef, 0xc557, 0xd00, 0x7659, 0x59e3, 0x129e, 0x0, 0x1);
        gbc.writeMem(0x5ef, { 0xcb, 0xc6 });
        gbc.writeMem(0x129e, { 0x1b });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xc557, gbc.sp());
        EXPECT(0x5f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 02BD
        gbc.setState(0x787f, 0xccba, 0x3460, 0x176d, 0x11d4, 0xe101, 0x1, 0x1);
        gbc.writeMem(0x787f, { 0xcb, 0xc6 });
        gbc.writeMem(0xe101, { 0x2c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xccba, gbc.sp());
        EXPECT(0x7881, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xe101));
        // CB C6 02BE
        gbc.setState(0x15c9, 0x6a19, 0x7110, 0x4999, 0x1633, 0x8505, 0x1, 0x1);
        gbc.writeMem(0x15c9, { 0xcb, 0xc6 });
        gbc.writeMem(0x8505, { 0x36 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x6a19, gbc.sp());
        EXPECT(0x15cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x37, gbc.readMem(0x8505));
        // CB C6 02BF
        gbc.setState(0xc83c, 0xcee2, 0x4230, 0x6c79, 0x4a3d, 0x9b09, 0x0, 0x1);
        gbc.writeMem(0x9b09, { 0xdd });
        gbc.writeMem(0xc83c, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xcee2, gbc.sp());
        EXPECT(0xc83e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdd, gbc.readMem(0x9b09));
        EXPECT(0xcb, gbc.readMem(0xc83c));
        EXPECT(0xc6, gbc.readMem(0xc83d));
        // CB C6 02C0
        gbc.setState(0x9897, 0x6852, 0x2a80, 0xe91a, 0xd386, 0x9845, 0x1, 0x1);
        gbc.writeMem(0x9845, { 0xff });
        gbc.writeMem(0x9897, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6852, gbc.sp());
        EXPECT(0x9899, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0x9845));
        EXPECT(0xcb, gbc.readMem(0x9897));
        EXPECT(0xc6, gbc.readMem(0x9898));
        // CB C6 02C2
        gbc.setState(0x12f7, 0x44a5, 0x8520, 0xaa57, 0x20a8, 0xcd83, 0x1, 0x1);
        gbc.writeMem(0x12f7, { 0xcb, 0xc6 });
        gbc.writeMem(0xcd83, { 0x9a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x44a5, gbc.sp());
        EXPECT(0x12f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x9b, gbc.readMem(0xcd83));
        // CB C6 02C3
        gbc.setState(0x9fe, 0x2649, 0xf170, 0x1828, 0xad0e, 0x535d, 0x1, 0x1);
        gbc.writeMem(0x9fe, { 0xcb, 0xc6 });
        gbc.writeMem(0x535d, { 0x41 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x2649, gbc.sp());
        EXPECT(0xa00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 02C4
        gbc.setState(0x14f9, 0x207a, 0xd310, 0xbc40, 0x3392, 0x4ed1, 0x1, 0x0);
        gbc.writeMem(0x14f9, { 0xcb, 0xc6 });
        gbc.writeMem(0x4ed1, { 0x79 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x207a, gbc.sp());
        EXPECT(0x14fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 02C5
        gbc.setState(0xe375, 0xf315, 0xdef0, 0x1d6f, 0xa60e, 0x343e, 0x0, 0x1);
        gbc.writeMem(0x343e, { 0x47 });
        gbc.writeMem(0xe375, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0xf315, gbc.sp());
        EXPECT(0xe377, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe375));
        EXPECT(0xc6, gbc.readMem(0xe376));
        // CB C6 02C6
        gbc.setState(0xc002, 0xc3e2, 0x740, 0xedad, 0x18dd, 0xe5da, 0x1, 0x1);
        gbc.writeMem(0xc002, { 0xcb, 0xc6 });
        gbc.writeMem(0xe5da, { 0xf });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xc3e2, gbc.sp());
        EXPECT(0xc004, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc002));
        EXPECT(0xc6, gbc.readMem(0xc003));
        EXPECT(0xf, gbc.readMem(0xe5da));
        // CB C6 02C8
        gbc.setState(0xb81c, 0xe08d, 0x23c0, 0x2ad6, 0x6e8f, 0x3673, 0x1, 0x0);
        gbc.writeMem(0x3673, { 0xfb });
        gbc.writeMem(0xb81c, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xe08d, gbc.sp());
        EXPECT(0xb81e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb81c));
        EXPECT(0xc6, gbc.readMem(0xb81d));
        // CB C6 02CA
        gbc.setState(0x5d19, 0x61a3, 0xc410, 0xba3c, 0xb4fc, 0x8e65, 0x1, 0x1);
        gbc.writeMem(0x5d19, { 0xcb, 0xc6 });
        gbc.writeMem(0x8e65, { 0x99 });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x61a3, gbc.sp());
        EXPECT(0x5d1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x8e65));
        // CB C6 02CC
        gbc.setState(0x518f, 0x121f, 0x4660, 0x887e, 0x671c, 0xe5b0, 0x1, 0x1);
        gbc.writeMem(0x518f, { 0xcb, 0xc6 });
        gbc.writeMem(0xe5b0, { 0x7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x121f, gbc.sp());
        EXPECT(0x5191, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe5b0));
        // CB C6 02CD
        gbc.setState(0xd2bd, 0xff82, 0xf510, 0x1770, 0x43d6, 0xcd77, 0x1, 0x0);
        gbc.writeMem(0xcd77, { 0xf1 });
        gbc.writeMem(0xd2bd, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xff82, gbc.sp());
        EXPECT(0xd2bf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xcd77));
        EXPECT(0xcb, gbc.readMem(0xd2bd));
        EXPECT(0xc6, gbc.readMem(0xd2be));
        // CB C6 02CF
        gbc.setState(0xf45, 0x4fa9, 0xb840, 0x6bf6, 0x1aa, 0x1250, 0x1, 0x1);
        gbc.writeMem(0xf45, { 0xcb, 0xc6 });
        gbc.writeMem(0x1250, { 0x2b });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x4fa9, gbc.sp());
        EXPECT(0xf47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 02D0
        gbc.setState(0x118b, 0x1309, 0x8d40, 0xabd, 0x9296, 0x6822, 0x0, 0x0);
        gbc.writeMem(0x118b, { 0xcb, 0xc6 });
        gbc.writeMem(0x6822, { 0x55 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x1309, gbc.sp());
        EXPECT(0x118d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 02D1
        gbc.setState(0x9ab3, 0xc710, 0x5650, 0x26f4, 0xdb1, 0x8d37, 0x1, 0x0);
        gbc.writeMem(0x8d37, { 0x6c });
        gbc.writeMem(0x9ab3, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xc710, gbc.sp());
        EXPECT(0x9ab5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0x8d37));
        EXPECT(0xcb, gbc.readMem(0x9ab3));
        EXPECT(0xc6, gbc.readMem(0x9ab4));
        // CB C6 02D2
        gbc.setState(0xc256, 0xc7c2, 0x4a80, 0x525f, 0x7e3d, 0xdcee, 0x1, 0x0);
        gbc.writeMem(0xc256, { 0xcb, 0xc6 });
        gbc.writeMem(0xdcee, { 0x9d });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xc7c2, gbc.sp());
        EXPECT(0xc258, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc256));
        EXPECT(0xc6, gbc.readMem(0xc257));
        EXPECT(0x9d, gbc.readMem(0xdcee));
        // CB C6 02D4
        gbc.setState(0x15fb, 0x837a, 0x24e0, 0x1c90, 0x8172, 0xe006, 0x1, 0x1);
        gbc.writeMem(0x15fb, { 0xcb, 0xc6 });
        gbc.writeMem(0xe006, { 0x6 });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x837a, gbc.sp());
        EXPECT(0x15fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe006));
        // CB C6 02D5
        gbc.setState(0xb8f1, 0xeaed, 0x5170, 0xbaad, 0x734a, 0xd603, 0x1, 0x1);
        gbc.writeMem(0xb8f1, { 0xcb, 0xc6 });
        gbc.writeMem(0xd603, { 0x29 });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xeaed, gbc.sp());
        EXPECT(0xb8f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8f1));
        EXPECT(0xc6, gbc.readMem(0xb8f2));
        EXPECT(0x29, gbc.readMem(0xd603));
        // CB C6 02D7
        gbc.setState(0x88ad, 0xa26d, 0x5550, 0x64ff, 0x8269, 0xbf48, 0x0, 0x1);
        gbc.writeMem(0x88ad, { 0xcb, 0xc6 });
        gbc.writeMem(0xbf48, { 0x6 });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xa26d, gbc.sp());
        EXPECT(0x88af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x88ad));
        EXPECT(0xc6, gbc.readMem(0x88ae));
        EXPECT(0x7, gbc.readMem(0xbf48));
        // CB C6 02D8
        gbc.setState(0x996e, 0x1338, 0x3970, 0xc359, 0xd730, 0xff6e, 0x1, 0x0);
        gbc.writeMem(0x996e, { 0xcb, 0xc6 });
        gbc.writeMem(0xff6e, { 0x4 });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x1338, gbc.sp());
        EXPECT(0x9970, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x996e));
        EXPECT(0xc6, gbc.readMem(0x996f));
        EXPECT(0x5, gbc.readMem(0xff6e));
        // CB C6 02D9
        gbc.setState(0x413b, 0xafa3, 0xc70, 0x53ae, 0xf1be, 0xa1bc, 0x1, 0x1);
        gbc.writeMem(0x413b, { 0xcb, 0xc6 });
        gbc.writeMem(0xa1bc, { 0xeb });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xafa3, gbc.sp());
        EXPECT(0x413d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0xa1bc));
        // CB C6 02DA
        gbc.setState(0x278b, 0xd635, 0xba90, 0x8797, 0xc1b8, 0x8c52, 0x1, 0x1);
        gbc.writeMem(0x278b, { 0xcb, 0xc6 });
        gbc.writeMem(0x8c52, { 0x82 });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xd635, gbc.sp());
        EXPECT(0x278d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x83, gbc.readMem(0x8c52));
        // CB C6 02DB
        gbc.setState(0x5e19, 0x13e, 0x7cb0, 0xee0a, 0x5cdd, 0x302c, 0x0, 0x1);
        gbc.writeMem(0x302c, { 0x75 });
        gbc.writeMem(0x5e19, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x13e, gbc.sp());
        EXPECT(0x5e1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 02DC
        gbc.setState(0x9d6a, 0xcb21, 0x3a40, 0x7b54, 0x49ca, 0xfceb, 0x0, 0x1);
        gbc.writeMem(0x9d6a, { 0xcb, 0xc6 });
        gbc.writeMem(0xfceb, { 0x50 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xcb21, gbc.sp());
        EXPECT(0x9d6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9d6a));
        EXPECT(0xc6, gbc.readMem(0x9d6b));
        EXPECT(0x51, gbc.readMem(0xfceb));
        // CB C6 02DD
        gbc.setState(0x9487, 0xa561, 0x3020, 0x513e, 0x9a17, 0xf146, 0x1, 0x0);
        gbc.writeMem(0x9487, { 0xcb, 0xc6 });
        gbc.writeMem(0xf146, { 0x38 });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xa561, gbc.sp());
        EXPECT(0x9489, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9487));
        EXPECT(0xc6, gbc.readMem(0x9488));
        EXPECT(0x39, gbc.readMem(0xf146));
        // CB C6 02DE
        gbc.setState(0x1379, 0x2586, 0xb660, 0x2965, 0x9d9e, 0xc162, 0x1, 0x1);
        gbc.writeMem(0x1379, { 0xcb, 0xc6 });
        gbc.writeMem(0xc162, { 0x6d });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2586, gbc.sp());
        EXPECT(0x137b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc162));
        // CB C6 02DF
        gbc.setState(0xd1f5, 0xc4a8, 0x92d0, 0x6856, 0xa76, 0xef56, 0x1, 0x1);
        gbc.writeMem(0xd1f5, { 0xcb, 0xc6 });
        gbc.writeMem(0xef56, { 0xd0 });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xc4a8, gbc.sp());
        EXPECT(0xd1f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1f5));
        EXPECT(0xc6, gbc.readMem(0xd1f6));
        EXPECT(0xd1, gbc.readMem(0xef56));
        // CB C6 02E0
        gbc.setState(0x29f1, 0x8986, 0x7ca0, 0xd033, 0xf171, 0xe510, 0x1, 0x1);
        gbc.writeMem(0x29f1, { 0xcb, 0xc6 });
        gbc.writeMem(0xe510, { 0xca });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x8986, gbc.sp());
        EXPECT(0x29f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe510));
        // CB C6 02E1
        gbc.setState(0x2686, 0x8504, 0x88c0, 0x5bf0, 0x9be5, 0xa5b5, 0x0, 0x1);
        gbc.writeMem(0x2686, { 0xcb, 0xc6 });
        gbc.writeMem(0xa5b5, { 0xc5 });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8504, gbc.sp());
        EXPECT(0x2688, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xc5, gbc.readMem(0xa5b5));
        // CB C6 02E2
        gbc.setState(0x8dbe, 0x4e83, 0x5840, 0xfd7b, 0xb824, 0x319f, 0x0, 0x1);
        gbc.writeMem(0x319f, { 0x6d });
        gbc.writeMem(0x8dbe, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4e83, gbc.sp());
        EXPECT(0x8dc0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8dbe));
        EXPECT(0xc6, gbc.readMem(0x8dbf));
        // CB C6 02E3
        gbc.setState(0x1a0, 0xf10c, 0x8fc0, 0x4b84, 0x75f7, 0x9d47, 0x0, 0x0);
        gbc.writeMem(0x1a0, { 0xcb, 0xc6 });
        gbc.writeMem(0x9d47, { 0x2d });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xf10c, gbc.sp());
        EXPECT(0x1a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0x9d47));
        // CB C6 02E4
        gbc.setState(0x973e, 0x15d4, 0x5e70, 0x810b, 0xd583, 0x2f6d, 0x1, 0x1);
        gbc.writeMem(0x2f6d, { 0x43 });
        gbc.writeMem(0x973e, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x15d4, gbc.sp());
        EXPECT(0x9740, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x973e));
        EXPECT(0xc6, gbc.readMem(0x973f));
        // CB C6 02E5
        gbc.setState(0x5f65, 0xbfa, 0x83c0, 0x325a, 0xbfc3, 0x94b1, 0x1, 0x0);
        gbc.writeMem(0x5f65, { 0xcb, 0xc6 });
        gbc.writeMem(0x94b1, { 0xad });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xbfa, gbc.sp());
        EXPECT(0x5f67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0x94b1));
        // CB C6 02E6
        gbc.setState(0xd1e8, 0xbdc8, 0x7b20, 0xa4a4, 0x9255, 0xfe56, 0x0, 0x1);
        gbc.writeMem(0xd1e8, { 0xcb, 0xc6 });
        gbc.writeMem(0xfe56, { 0xb0 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xbdc8, gbc.sp());
        EXPECT(0xd1ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd1e8));
        EXPECT(0xc6, gbc.readMem(0xd1e9));
        EXPECT(0xb1, gbc.readMem(0xfe56));
        // CB C6 02E7
        gbc.setState(0xbc3a, 0xae78, 0x200, 0xa500, 0x7ef1, 0xb311, 0x0, 0x1);
        gbc.writeMem(0xb311, { 0x8e });
        gbc.writeMem(0xbc3a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xae78, gbc.sp());
        EXPECT(0xbc3c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8f, gbc.readMem(0xb311));
        EXPECT(0xcb, gbc.readMem(0xbc3a));
        EXPECT(0xc6, gbc.readMem(0xbc3b));
        // CB C6 02E8
        gbc.setState(0x3a0b, 0xf2ab, 0x85f0, 0xe43f, 0x76da, 0xef4b, 0x1, 0x0);
        gbc.writeMem(0x3a0b, { 0xcb, 0xc6 });
        gbc.writeMem(0xef4b, { 0x63 });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xf2ab, gbc.sp());
        EXPECT(0x3a0d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0xef4b));
        // CB C6 02E9
        gbc.setState(0x50c2, 0x5480, 0x86c0, 0x4602, 0xd95d, 0xab71, 0x1, 0x0);
        gbc.writeMem(0x50c2, { 0xcb, 0xc6 });
        gbc.writeMem(0xab71, { 0xb2 });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x5480, gbc.sp());
        EXPECT(0x50c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb3, gbc.readMem(0xab71));
        // CB C6 02EA
        gbc.setState(0xc501, 0x7a08, 0xc740, 0xf67, 0xdb, 0x7a2f, 0x1, 0x1);
        gbc.writeMem(0x7a2f, { 0x1 });
        gbc.writeMem(0xc501, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x7a08, gbc.sp());
        EXPECT(0xc503, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc501));
        EXPECT(0xc6, gbc.readMem(0xc502));
        // CB C6 02EC
        gbc.setState(0x11f8, 0x901f, 0x7270, 0xeab6, 0x2ff4, 0x87, 0x1, 0x1);
        gbc.writeMem(0x87, { 0xdf });
        gbc.writeMem(0x11f8, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x901f, gbc.sp());
        EXPECT(0x11fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 02EE
        gbc.setState(0x83d7, 0xbcfa, 0xe580, 0x526d, 0xb23a, 0x8b14, 0x0, 0x1);
        gbc.writeMem(0x83d7, { 0xcb, 0xc6 });
        gbc.writeMem(0x8b14, { 0x2a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbcfa, gbc.sp());
        EXPECT(0x83d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x83d7));
        EXPECT(0xc6, gbc.readMem(0x83d8));
        EXPECT(0x2b, gbc.readMem(0x8b14));
        // CB C6 02F0
        gbc.setState(0xead8, 0x298f, 0x2a20, 0xf7d7, 0x8d3a, 0x58bf, 0x0, 0x0);
        gbc.writeMem(0x58bf, { 0xd7 });
        gbc.writeMem(0xead8, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x298f, gbc.sp());
        EXPECT(0xeada, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xead8));
        EXPECT(0xc6, gbc.readMem(0xead9));
        // CB C6 02F2
        gbc.setState(0x3207, 0x2b8c, 0x16d0, 0x166a, 0xa4e9, 0xeaba, 0x1, 0x0);
        gbc.writeMem(0x3207, { 0xcb, 0xc6 });
        gbc.writeMem(0xeaba, { 0x17 });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x2b8c, gbc.sp());
        EXPECT(0x3209, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xeaba));
        // CB C6 02F3
        gbc.setState(0x3436, 0x3d0e, 0xb5b0, 0xeff3, 0xc669, 0xd3e7, 0x1, 0x0);
        gbc.writeMem(0x3436, { 0xcb, 0xc6 });
        gbc.writeMem(0xd3e7, { 0xe5 });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x3d0e, gbc.sp());
        EXPECT(0x3438, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd3e7));
        // CB C6 02F4
        gbc.setState(0xa373, 0x8e64, 0xf190, 0xca9, 0x2598, 0x6ff8, 0x0, 0x0);
        gbc.writeMem(0x6ff8, { 0x5 });
        gbc.writeMem(0xa373, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x8e64, gbc.sp());
        EXPECT(0xa375, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa373));
        EXPECT(0xc6, gbc.readMem(0xa374));
        // CB C6 02F6
        gbc.setState(0xe424, 0xe08a, 0xe110, 0x95e2, 0x3cd5, 0xf6bc, 0x0, 0x1);
        gbc.writeMem(0xe424, { 0xcb, 0xc6 });
        gbc.writeMem(0xf6bc, { 0xf2 });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xe08a, gbc.sp());
        EXPECT(0xe426, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe424));
        EXPECT(0xc6, gbc.readMem(0xe425));
        EXPECT(0xf3, gbc.readMem(0xf6bc));
        // CB C6 02F7
        gbc.setState(0xa34a, 0xef07, 0xf150, 0xe961, 0xba3c, 0x385e, 0x0, 0x0);
        gbc.writeMem(0x385e, { 0x17 });
        gbc.writeMem(0xa34a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xef07, gbc.sp());
        EXPECT(0xa34c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa34a));
        EXPECT(0xc6, gbc.readMem(0xa34b));
        // CB C6 02FB
        gbc.setState(0xcfc5, 0x31c3, 0x980, 0x3c92, 0x2324, 0xcbac, 0x0, 0x1);
        gbc.writeMem(0xcbac, { 0xa7 });
        gbc.writeMem(0xcfc5, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x31c3, gbc.sp());
        EXPECT(0xcfc7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xcbac));
        EXPECT(0xcb, gbc.readMem(0xcfc5));
        EXPECT(0xc6, gbc.readMem(0xcfc6));
        // CB C6 02FC
        gbc.setState(0xa4fe, 0xa674, 0x8720, 0x2ad2, 0x4e8b, 0x5323, 0x0, 0x0);
        gbc.writeMem(0x5323, { 0x81 });
        gbc.writeMem(0xa4fe, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xa674, gbc.sp());
        EXPECT(0xa500, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa4fe));
        EXPECT(0xc6, gbc.readMem(0xa4ff));
        // CB C6 02FD
        gbc.setState(0x64, 0x72f4, 0x6b90, 0x8aa7, 0x43d8, 0xb944, 0x1, 0x0);
        gbc.writeMem(0x64, { 0xcb, 0xc6 });
        gbc.writeMem(0xb944, { 0xd1 });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x72f4, gbc.sp());
        EXPECT(0x66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd1, gbc.readMem(0xb944));
        // CB C6 02FE
        gbc.setState(0x8774, 0x14e0, 0x9450, 0xb54e, 0x1eee, 0x435, 0x1, 0x1);
        gbc.writeMem(0x435, { 0x71 });
        gbc.writeMem(0x8774, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x14e0, gbc.sp());
        EXPECT(0x8776, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8774));
        EXPECT(0xc6, gbc.readMem(0x8775));
        // CB C6 0300
        gbc.setState(0x5d3a, 0x1e9b, 0x1130, 0x38b0, 0xfd70, 0x16cf, 0x1, 0x1);
        gbc.writeMem(0x16cf, { 0x53 });
        gbc.writeMem(0x5d3a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x1e9b, gbc.sp());
        EXPECT(0x5d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0301
        gbc.setState(0x5b3d, 0x9f10, 0xdf20, 0xb9bd, 0x8b44, 0x3436, 0x1, 0x1);
        gbc.writeMem(0x3436, { 0xcd });
        gbc.writeMem(0x5b3d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x9f10, gbc.sp());
        EXPECT(0x5b3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0302
        gbc.setState(0x6b3f, 0xde92, 0xcb0, 0x5f17, 0x3b43, 0xa126, 0x0, 0x1);
        gbc.writeMem(0x6b3f, { 0xcb, 0xc6 });
        gbc.writeMem(0xa126, { 0x70 });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xde92, gbc.sp());
        EXPECT(0x6b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x71, gbc.readMem(0xa126));
        // CB C6 0304
        gbc.setState(0xb16b, 0xdbbe, 0x9020, 0x9ec6, 0x9d9a, 0xfed6, 0x1, 0x0);
        gbc.writeMem(0xb16b, { 0xcb, 0xc6 });
        gbc.writeMem(0xfed6, { 0x3b });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdbbe, gbc.sp());
        EXPECT(0xb16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16b));
        EXPECT(0xc6, gbc.readMem(0xb16c));
        EXPECT(0x3b, gbc.readMem(0xfed6));
        // CB C6 0305
        gbc.setState(0xeea1, 0x7270, 0xd710, 0xba0e, 0x2833, 0x520c, 0x0, 0x1);
        gbc.writeMem(0x520c, { 0xf9 });
        gbc.writeMem(0xeea1, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x7270, gbc.sp());
        EXPECT(0xeea3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xeea1));
        EXPECT(0xc6, gbc.readMem(0xeea2));
        // CB C6 0306
        gbc.setState(0xc57b, 0xe941, 0x26d0, 0x55d7, 0x20f8, 0x3157, 0x1, 0x0);
        gbc.writeMem(0x3157, { 0xd5 });
        gbc.writeMem(0xc57b, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0xe941, gbc.sp());
        EXPECT(0xc57d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc57b));
        EXPECT(0xc6, gbc.readMem(0xc57c));
        // CB C6 0308
        gbc.setState(0x199e, 0x4539, 0xdb30, 0xfe8b, 0xa8e6, 0x94d6, 0x0, 0x1);
        gbc.writeMem(0x199e, { 0xcb, 0xc6 });
        gbc.writeMem(0x94d6, { 0x62 });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x4539, gbc.sp());
        EXPECT(0x19a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x63, gbc.readMem(0x94d6));
        // CB C6 0309
        gbc.setState(0xeab7, 0x97cd, 0xdd10, 0x88f3, 0xab46, 0xa824, 0x0, 0x0);
        gbc.writeMem(0xa824, { 0x16 });
        gbc.writeMem(0xeab7, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x97cd, gbc.sp());
        EXPECT(0xeab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0xa824));
        EXPECT(0xcb, gbc.readMem(0xeab7));
        EXPECT(0xc6, gbc.readMem(0xeab8));
        // CB C6 030A
        gbc.setState(0xae8, 0xb9df, 0x9190, 0xcb1c, 0x9f36, 0xed7c, 0x0, 0x0);
        gbc.writeMem(0xae8, { 0xcb, 0xc6 });
        gbc.writeMem(0xed7c, { 0x44 });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xb9df, gbc.sp());
        EXPECT(0xaea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x45, gbc.readMem(0xed7c));
        // CB C6 030B
        gbc.setState(0x5a4e, 0xa90c, 0x340, 0x9768, 0x9f19, 0x4150, 0x0, 0x0);
        gbc.writeMem(0x4150, { 0xa9 });
        gbc.writeMem(0x5a4e, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xa90c, gbc.sp());
        EXPECT(0x5a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 030C
        gbc.setState(0x5d5a, 0x8bc4, 0xa370, 0xd693, 0xa205, 0x8f56, 0x0, 0x1);
        gbc.writeMem(0x5d5a, { 0xcb, 0xc6 });
        gbc.writeMem(0x8f56, { 0xda });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8bc4, gbc.sp());
        EXPECT(0x5d5c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xdb, gbc.readMem(0x8f56));
        // CB C6 030D
        gbc.setState(0x2ab7, 0x8eb8, 0x4c10, 0x7bf, 0xfd4c, 0xea67, 0x0, 0x1);
        gbc.writeMem(0x2ab7, { 0xcb, 0xc6 });
        gbc.writeMem(0xea67, { 0x5c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8eb8, gbc.sp());
        EXPECT(0x2ab9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xea67));
        // CB C6 0310
        gbc.setState(0xd475, 0xd075, 0x5940, 0x27f2, 0x2e91, 0x1b51, 0x1, 0x1);
        gbc.writeMem(0x1b51, { 0xb3 });
        gbc.writeMem(0xd475, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xd075, gbc.sp());
        EXPECT(0xd477, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd475));
        EXPECT(0xc6, gbc.readMem(0xd476));
        // CB C6 0312
        gbc.setState(0xcc58, 0xbbbf, 0x1a50, 0x989e, 0xb9ce, 0x24c, 0x1, 0x0);
        gbc.writeMem(0x24c, { 0x79 });
        gbc.writeMem(0xcc58, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xbbbf, gbc.sp());
        EXPECT(0xcc5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcc58));
        EXPECT(0xc6, gbc.readMem(0xcc59));
        // CB C6 0313
        gbc.setState(0xd97e, 0x262c, 0x7820, 0x1c8f, 0x4478, 0xfb88, 0x1, 0x0);
        gbc.writeMem(0xd97e, { 0xcb, 0xc6 });
        gbc.writeMem(0xfb88, { 0x1 });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x262c, gbc.sp());
        EXPECT(0xd980, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd97e));
        EXPECT(0xc6, gbc.readMem(0xd97f));
        EXPECT(0x1, gbc.readMem(0xfb88));
        // CB C6 0314
        gbc.setState(0xc137, 0xce91, 0x1e90, 0xfa57, 0x315c, 0xfa2a, 0x0, 0x0);
        gbc.writeMem(0xc137, { 0xcb, 0xc6 });
        gbc.writeMem(0xfa2a, { 0x5 });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xce91, gbc.sp());
        EXPECT(0xc139, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc137));
        EXPECT(0xc6, gbc.readMem(0xc138));
        EXPECT(0x5, gbc.readMem(0xfa2a));
        // CB C6 0316
        gbc.setState(0x18c6, 0x8a4d, 0x9d70, 0x4376, 0x8b1c, 0xda9a, 0x1, 0x1);
        gbc.writeMem(0x18c6, { 0xcb, 0xc6 });
        gbc.writeMem(0xda9a, { 0x29 });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x8a4d, gbc.sp());
        EXPECT(0x18c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x29, gbc.readMem(0xda9a));
        // CB C6 0318
        gbc.setState(0x79f5, 0xfc0c, 0x7180, 0x42c5, 0x8d7e, 0xa073, 0x0, 0x1);
        gbc.writeMem(0x79f5, { 0xcb, 0xc6 });
        gbc.writeMem(0xa073, { 0x60 });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xfc0c, gbc.sp());
        EXPECT(0x79f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x61, gbc.readMem(0xa073));
        // CB C6 031A
        gbc.setState(0xfcb, 0x3081, 0x10, 0xaebb, 0x823e, 0xc0b4, 0x0, 0x1);
        gbc.writeMem(0xfcb, { 0xcb, 0xc6 });
        gbc.writeMem(0xc0b4, { 0xf8 });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x3081, gbc.sp());
        EXPECT(0xfcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf9, gbc.readMem(0xc0b4));
        // CB C6 031B
        gbc.setState(0xc6d1, 0x7dca, 0xd5c0, 0xfa57, 0x8f25, 0xf6dc, 0x0, 0x0);
        gbc.writeMem(0xc6d1, { 0xcb, 0xc6 });
        gbc.writeMem(0xf6dc, { 0x34 });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7dca, gbc.sp());
        EXPECT(0xc6d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc6d1));
        EXPECT(0xc6, gbc.readMem(0xc6d2));
        EXPECT(0x35, gbc.readMem(0xf6dc));
        // CB C6 031C
        gbc.setState(0xe621, 0xf851, 0x9f10, 0xf742, 0xffe, 0xdba4, 0x0, 0x1);
        gbc.writeMem(0xdba4, { 0xe9 });
        gbc.writeMem(0xe621, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0xf851, gbc.sp());
        EXPECT(0xe623, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe9, gbc.readMem(0xdba4));
        EXPECT(0xcb, gbc.readMem(0xe621));
        EXPECT(0xc6, gbc.readMem(0xe622));
        // CB C6 031D
        gbc.setState(0x7a75, 0xe023, 0x230, 0x1f4, 0x108b, 0xfbac, 0x0, 0x1);
        gbc.writeMem(0x7a75, { 0xcb, 0xc6 });
        gbc.writeMem(0xfbac, { 0x6b });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xe023, gbc.sp());
        EXPECT(0x7a77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6b, gbc.readMem(0xfbac));
        // CB C6 031E
        gbc.setState(0x7452, 0xbe48, 0xb50, 0x129d, 0xdbfa, 0x9e9c, 0x0, 0x0);
        gbc.writeMem(0x7452, { 0xcb, 0xc6 });
        gbc.writeMem(0x9e9c, { 0x34 });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0xbe48, gbc.sp());
        EXPECT(0x7454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0x9e9c));
        // CB C6 031F
        gbc.setState(0x5a66, 0xe3af, 0x5930, 0x7ceb, 0x1caa, 0x3ed9, 0x1, 0x0);
        gbc.writeMem(0x3ed9, { 0x3 });
        gbc.writeMem(0x5a66, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xe3af, gbc.sp());
        EXPECT(0x5a68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0320
        gbc.setState(0x1639, 0xe266, 0xb140, 0x3253, 0x9810, 0xd344, 0x1, 0x0);
        gbc.writeMem(0x1639, { 0xcb, 0xc6 });
        gbc.writeMem(0xd344, { 0xb7 });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xe266, gbc.sp());
        EXPECT(0x163b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xd344));
        // CB C6 0322
        gbc.setState(0x11a3, 0x6358, 0xe220, 0x2d82, 0xed9d, 0x959a, 0x0, 0x1);
        gbc.writeMem(0x11a3, { 0xcb, 0xc6 });
        gbc.writeMem(0x959a, { 0xa8 });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x6358, gbc.sp());
        EXPECT(0x11a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0x959a));
        // CB C6 0324
        gbc.setState(0x7bf7, 0x18ae, 0x4470, 0x868, 0xa44e, 0x550a, 0x0, 0x0);
        gbc.writeMem(0x550a, { 0x97 });
        gbc.writeMem(0x7bf7, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x18ae, gbc.sp());
        EXPECT(0x7bf9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0325
        gbc.setState(0xd3c6, 0xf6df, 0xfc10, 0x6547, 0x71da, 0xfbc5, 0x0, 0x0);
        gbc.writeMem(0xd3c6, { 0xcb, 0xc6 });
        gbc.writeMem(0xfbc5, { 0x4e });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xf6df, gbc.sp());
        EXPECT(0xd3c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd3c6));
        EXPECT(0xc6, gbc.readMem(0xd3c7));
        EXPECT(0x4f, gbc.readMem(0xfbc5));
        // CB C6 0326
        gbc.setState(0xe89b, 0xa915, 0x19b0, 0x84b4, 0x186f, 0xbb51, 0x1, 0x1);
        gbc.writeMem(0xbb51, { 0x47 });
        gbc.writeMem(0xe89b, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xa915, gbc.sp());
        EXPECT(0xe89d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x47, gbc.readMem(0xbb51));
        EXPECT(0xcb, gbc.readMem(0xe89b));
        EXPECT(0xc6, gbc.readMem(0xe89c));
        // CB C6 0328
        gbc.setState(0x6120, 0x9e86, 0xb130, 0x4de4, 0x336e, 0x738b, 0x1, 0x1);
        gbc.writeMem(0x6120, { 0xcb, 0xc6 });
        gbc.writeMem(0x738b, { 0xdf });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x9e86, gbc.sp());
        EXPECT(0x6122, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0329
        gbc.setState(0x19d2, 0xe075, 0x5d30, 0x6c8b, 0xedb, 0xba7d, 0x1, 0x0);
        gbc.writeMem(0x19d2, { 0xcb, 0xc6 });
        gbc.writeMem(0xba7d, { 0x98 });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0xe075, gbc.sp());
        EXPECT(0x19d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xba7d));
        // CB C6 032B
        gbc.setState(0x714, 0x4ce2, 0xced0, 0x828f, 0x4c48, 0xd821, 0x0, 0x0);
        gbc.writeMem(0x714, { 0xcb, 0xc6 });
        gbc.writeMem(0xd821, { 0xf0 });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x4ce2, gbc.sp());
        EXPECT(0x716, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf1, gbc.readMem(0xd821));
        // CB C6 032C
        gbc.setState(0x5644, 0xbeaf, 0x46c0, 0x6270, 0x81d0, 0xbe9b, 0x0, 0x1);
        gbc.writeMem(0x5644, { 0xcb, 0xc6 });
        gbc.writeMem(0xbe9b, { 0xa7 });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xbeaf, gbc.sp());
        EXPECT(0x5646, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xa7, gbc.readMem(0xbe9b));
        // CB C6 032F
        gbc.setState(0x911b, 0x7f5e, 0x1cb0, 0xab77, 0x8743, 0x73b5, 0x1, 0x1);
        gbc.writeMem(0x73b5, { 0x65 });
        gbc.writeMem(0x911b, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x7f5e, gbc.sp());
        EXPECT(0x911d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x911b));
        EXPECT(0xc6, gbc.readMem(0x911c));
        // CB C6 0331
        gbc.setState(0x6c0c, 0x114a, 0x6770, 0xe5c2, 0x5455, 0xd687, 0x1, 0x1);
        gbc.writeMem(0x6c0c, { 0xcb, 0xc6 });
        gbc.writeMem(0xd687, { 0x14 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x114a, gbc.sp());
        EXPECT(0x6c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x15, gbc.readMem(0xd687));
        // CB C6 0332
        gbc.setState(0xbc20, 0xb3e5, 0x57a0, 0xfb6a, 0x9be0, 0xac05, 0x0, 0x1);
        gbc.writeMem(0xac05, { 0xd3 });
        gbc.writeMem(0xbc20, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb3e5, gbc.sp());
        EXPECT(0xbc22, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xac05));
        EXPECT(0xcb, gbc.readMem(0xbc20));
        EXPECT(0xc6, gbc.readMem(0xbc21));
        // CB C6 0333
        gbc.setState(0x6003, 0x74ee, 0xa220, 0x9b7b, 0x9623, 0x30a1, 0x1, 0x1);
        gbc.writeMem(0x30a1, { 0xcd });
        gbc.writeMem(0x6003, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x74ee, gbc.sp());
        EXPECT(0x6005, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0334
        gbc.setState(0xc882, 0x1d8, 0x6710, 0x9ff7, 0xb12b, 0x49cb, 0x0, 0x1);
        gbc.writeMem(0x49cb, { 0xeb });
        gbc.writeMem(0xc882, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x1d8, gbc.sp());
        EXPECT(0xc884, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc882));
        EXPECT(0xc6, gbc.readMem(0xc883));
        // CB C6 0335
        gbc.setState(0xb608, 0xe902, 0x52a0, 0xac4b, 0xd613, 0x7179, 0x0, 0x0);
        gbc.writeMem(0x7179, { 0xd5 });
        gbc.writeMem(0xb608, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xe902, gbc.sp());
        EXPECT(0xb60a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb608));
        EXPECT(0xc6, gbc.readMem(0xb609));
        // CB C6 0338
        gbc.setState(0x9757, 0x4160, 0x9040, 0xd770, 0x829d, 0xdfd5, 0x0, 0x0);
        gbc.writeMem(0x9757, { 0xcb, 0xc6 });
        gbc.writeMem(0xdfd5, { 0xf });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x4160, gbc.sp());
        EXPECT(0x9759, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9757));
        EXPECT(0xc6, gbc.readMem(0x9758));
        EXPECT(0xf, gbc.readMem(0xdfd5));
        // CB C6 033A
        gbc.setState(0x147c, 0x169a, 0xecc0, 0x2f17, 0x1068, 0xa122, 0x0, 0x0);
        gbc.writeMem(0x147c, { 0xcb, 0xc6 });
        gbc.writeMem(0xa122, { 0x6f });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x169a, gbc.sp());
        EXPECT(0x147e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x6f, gbc.readMem(0xa122));
        // CB C6 033B
        gbc.setState(0xa335, 0x5b45, 0xb6f0, 0x4c54, 0x3bd8, 0xb830, 0x1, 0x0);
        gbc.writeMem(0xa335, { 0xcb, 0xc6 });
        gbc.writeMem(0xb830, { 0xa7 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5b45, gbc.sp());
        EXPECT(0xa337, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa335));
        EXPECT(0xc6, gbc.readMem(0xa336));
        EXPECT(0xa7, gbc.readMem(0xb830));
        // CB C6 033C
        gbc.setState(0x4dc8, 0x6da1, 0xe660, 0x48d5, 0xc486, 0xeebb, 0x0, 0x1);
        gbc.writeMem(0x4dc8, { 0xcb, 0xc6 });
        gbc.writeMem(0xeebb, { 0x3a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6da1, gbc.sp());
        EXPECT(0x4dca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x3b, gbc.readMem(0xeebb));
        // CB C6 033D
        gbc.setState(0x7b19, 0x6ad1, 0xda60, 0x9330, 0xd30c, 0xa8f6, 0x1, 0x1);
        gbc.writeMem(0x7b19, { 0xcb, 0xc6 });
        gbc.writeMem(0xa8f6, { 0x4f });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x6ad1, gbc.sp());
        EXPECT(0x7b1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x4f, gbc.readMem(0xa8f6));
        // CB C6 033E
        gbc.setState(0x4c8c, 0x6fb9, 0xa4f0, 0xa6cf, 0xbb0e, 0xfd54, 0x1, 0x1);
        gbc.writeMem(0x4c8c, { 0xcb, 0xc6 });
        gbc.writeMem(0xfd54, { 0xd4 });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x6fb9, gbc.sp());
        EXPECT(0x4c8e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd5, gbc.readMem(0xfd54));
        // CB C6 033F
        gbc.setState(0xdbcd, 0x5d2f, 0xb950, 0x5253, 0xed80, 0xc293, 0x1, 0x0);
        gbc.writeMem(0xc293, { 0x6d });
        gbc.writeMem(0xdbcd, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x5d2f, gbc.sp());
        EXPECT(0xdbcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xc293));
        EXPECT(0xcb, gbc.readMem(0xdbcd));
        EXPECT(0xc6, gbc.readMem(0xdbce));
        // CB C6 0340
        gbc.setState(0x7d65, 0xc5eb, 0xa7b0, 0x4267, 0x767f, 0x3d46, 0x1, 0x1);
        gbc.writeMem(0x3d46, { 0x95 });
        gbc.writeMem(0x7d65, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0xc5eb, gbc.sp());
        EXPECT(0x7d67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0341
        gbc.setState(0x200b, 0xe59c, 0xda20, 0xe385, 0xbef2, 0xe216, 0x0, 0x1);
        gbc.writeMem(0x200b, { 0xcb, 0xc6 });
        gbc.writeMem(0xe216, { 0xab });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe59c, gbc.sp());
        EXPECT(0x200d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xab, gbc.readMem(0xe216));
        // CB C6 0342
        gbc.setState(0xac48, 0x97bd, 0x69a0, 0xf82c, 0x4616, 0x6a0e, 0x0, 0x0);
        gbc.writeMem(0x6a0e, { 0xd9 });
        gbc.writeMem(0xac48, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x97bd, gbc.sp());
        EXPECT(0xac4a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xac48));
        EXPECT(0xc6, gbc.readMem(0xac49));
        // CB C6 0343
        gbc.setState(0x9480, 0x8b5d, 0xfab0, 0xf39, 0xa8b7, 0x3a50, 0x1, 0x0);
        gbc.writeMem(0x3a50, { 0xe7 });
        gbc.writeMem(0x9480, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8b5d, gbc.sp());
        EXPECT(0x9482, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9480));
        EXPECT(0xc6, gbc.readMem(0x9481));
        // CB C6 0344
        gbc.setState(0x667f, 0x601b, 0xbd20, 0x9cea, 0xf545, 0x5f22, 0x0, 0x0);
        gbc.writeMem(0x5f22, { 0xb1 });
        gbc.writeMem(0x667f, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x601b, gbc.sp());
        EXPECT(0x6681, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0345
        gbc.setState(0xc47b, 0x54a6, 0x5e30, 0x884b, 0xd99e, 0xbac0, 0x0, 0x1);
        gbc.writeMem(0xbac0, { 0xf3 });
        gbc.writeMem(0xc47b, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x54a6, gbc.sp());
        EXPECT(0xc47d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xbac0));
        EXPECT(0xcb, gbc.readMem(0xc47b));
        EXPECT(0xc6, gbc.readMem(0xc47c));
        // CB C6 0346
        gbc.setState(0x79c2, 0xf316, 0x63f0, 0xd802, 0xa047, 0xb524, 0x1, 0x1);
        gbc.writeMem(0x79c2, { 0xcb, 0xc6 });
        gbc.writeMem(0xb524, { 0x10 });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xf316, gbc.sp());
        EXPECT(0x79c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb524));
        // CB C6 0347
        gbc.setState(0x9084, 0x1d67, 0x6d00, 0x39b, 0x2871, 0xa2f5, 0x0, 0x0);
        gbc.writeMem(0x9084, { 0xcb, 0xc6 });
        gbc.writeMem(0xa2f5, { 0x7d });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x1d67, gbc.sp());
        EXPECT(0x9086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9084));
        EXPECT(0xc6, gbc.readMem(0x9085));
        EXPECT(0x7d, gbc.readMem(0xa2f5));
        // CB C6 0349
        gbc.setState(0xd86, 0xfa04, 0x9350, 0x6dc6, 0x8691, 0x280, 0x0, 0x0);
        gbc.writeMem(0x280, { 0x19 });
        gbc.writeMem(0xd86, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xfa04, gbc.sp());
        EXPECT(0xd88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 034A
        gbc.setState(0x8916, 0x8f56, 0x400, 0xd838, 0x4f2b, 0x4196, 0x1, 0x0);
        gbc.writeMem(0x4196, { 0x85 });
        gbc.writeMem(0x8916, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x8f56, gbc.sp());
        EXPECT(0x8918, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8916));
        EXPECT(0xc6, gbc.readMem(0x8917));
        // CB C6 034F
        gbc.setState(0x74a0, 0x6e3c, 0x4850, 0x778e, 0xe541, 0xf2cf, 0x0, 0x0);
        gbc.writeMem(0x74a0, { 0xcb, 0xc6 });
        gbc.writeMem(0xf2cf, { 0xe3 });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x6e3c, gbc.sp());
        EXPECT(0x74a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe3, gbc.readMem(0xf2cf));
        // CB C6 0351
        gbc.setState(0xe0da, 0x65a8, 0x96f0, 0x4f2f, 0xf1bb, 0x758e, 0x1, 0x0);
        gbc.writeMem(0x758e, { 0x9d });
        gbc.writeMem(0xe0da, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x65a8, gbc.sp());
        EXPECT(0xe0dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe0da));
        EXPECT(0xc6, gbc.readMem(0xe0db));
        // CB C6 0352
        gbc.setState(0x784e, 0xfc4b, 0x2030, 0x6634, 0x2339, 0xb7b3, 0x1, 0x1);
        gbc.writeMem(0x784e, { 0xcb, 0xc6 });
        gbc.writeMem(0xb7b3, { 0x2d });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xfc4b, gbc.sp());
        EXPECT(0x7850, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x2d, gbc.readMem(0xb7b3));
        // CB C6 0353
        gbc.setState(0x89d1, 0xe107, 0x3ed0, 0xe063, 0xc6ce, 0x319a, 0x1, 0x0);
        gbc.writeMem(0x319a, { 0xa3 });
        gbc.writeMem(0x89d1, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xe107, gbc.sp());
        EXPECT(0x89d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x89d1));
        EXPECT(0xc6, gbc.readMem(0x89d2));
        // CB C6 0354
        gbc.setState(0x25e8, 0x4749, 0xff80, 0xce41, 0xc432, 0xe196, 0x1, 0x1);
        gbc.writeMem(0x25e8, { 0xcb, 0xc6 });
        gbc.writeMem(0xe196, { 0x94 });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4749, gbc.sp());
        EXPECT(0x25ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xe196));
        // CB C6 0355
        gbc.setState(0x401a, 0xecb7, 0x1f90, 0x907f, 0xa941, 0xe0ff, 0x0, 0x0);
        gbc.writeMem(0x401a, { 0xcb, 0xc6 });
        gbc.writeMem(0xe0ff, { 0x56 });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xecb7, gbc.sp());
        EXPECT(0x401c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xe0ff));
        // CB C6 0356
        gbc.setState(0x39cb, 0xd994, 0x35a0, 0xf7ad, 0x30ff, 0xec1d, 0x0, 0x1);
        gbc.writeMem(0x39cb, { 0xcb, 0xc6 });
        gbc.writeMem(0xec1d, { 0x35 });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xd994, gbc.sp());
        EXPECT(0x39cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x35, gbc.readMem(0xec1d));
        // CB C6 0358
        gbc.setState(0x1a92, 0xa200, 0x1fe0, 0x8d79, 0xa6ad, 0xefad, 0x1, 0x1);
        gbc.writeMem(0x1a92, { 0xcb, 0xc6 });
        gbc.writeMem(0xefad, { 0x5c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xa200, gbc.sp());
        EXPECT(0x1a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5d, gbc.readMem(0xefad));
        // CB C6 035B
        gbc.setState(0xa03a, 0xe80e, 0xf7b0, 0x5f1f, 0xaeca, 0x938, 0x0, 0x1);
        gbc.writeMem(0x938, { 0xbd });
        gbc.writeMem(0xa03a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xe80e, gbc.sp());
        EXPECT(0xa03c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa03a));
        EXPECT(0xc6, gbc.readMem(0xa03b));
        // CB C6 035D
        gbc.setState(0x4215, 0x3443, 0x6510, 0x303f, 0xaf5a, 0xf970, 0x1, 0x1);
        gbc.writeMem(0x4215, { 0xcb, 0xc6 });
        gbc.writeMem(0xf970, { 0x52 });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x3443, gbc.sp());
        EXPECT(0x4217, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xf970));
        // CB C6 035E
        gbc.setState(0x3a18, 0x7096, 0x60a0, 0x4efc, 0x6b2c, 0x8bed, 0x1, 0x1);
        gbc.writeMem(0x3a18, { 0xcb, 0xc6 });
        gbc.writeMem(0x8bed, { 0x38 });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x7096, gbc.sp());
        EXPECT(0x3a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0x8bed));
        // CB C6 035F
        gbc.setState(0x848c, 0x6931, 0x6dc0, 0x2c0a, 0x281a, 0x96cc, 0x1, 0x0);
        gbc.writeMem(0x848c, { 0xcb, 0xc6 });
        gbc.writeMem(0x96cc, { 0xf9 });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6931, gbc.sp());
        EXPECT(0x848e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x848c));
        EXPECT(0xc6, gbc.readMem(0x848d));
        EXPECT(0xf9, gbc.readMem(0x96cc));
        // CB C6 0361
        gbc.setState(0x992, 0xef52, 0x70f0, 0x79c9, 0x3323, 0xd0ac, 0x1, 0x1);
        gbc.writeMem(0x992, { 0xcb, 0xc6 });
        gbc.writeMem(0xd0ac, { 0xe4 });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xef52, gbc.sp());
        EXPECT(0x994, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe5, gbc.readMem(0xd0ac));
        // CB C6 0362
        gbc.setState(0xc3c8, 0xc3f2, 0xf580, 0xc7fb, 0x38c5, 0xf9c2, 0x1, 0x0);
        gbc.writeMem(0xc3c8, { 0xcb, 0xc6 });
        gbc.writeMem(0xf9c2, { 0x0 });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc3f2, gbc.sp());
        EXPECT(0xc3ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc3c8));
        EXPECT(0xc6, gbc.readMem(0xc3c9));
        EXPECT(0x1, gbc.readMem(0xf9c2));
        // CB C6 0364
        gbc.setState(0xc05f, 0xa856, 0x1f0, 0x331e, 0x3ce2, 0x1b1, 0x1, 0x0);
        gbc.writeMem(0x1b1, { 0xcd });
        gbc.writeMem(0xc05f, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xa856, gbc.sp());
        EXPECT(0xc061, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc05f));
        EXPECT(0xc6, gbc.readMem(0xc060));
        // CB C6 0365
        gbc.setState(0x4891, 0x67d7, 0x4160, 0x6215, 0xd479, 0x9582, 0x1, 0x0);
        gbc.writeMem(0x4891, { 0xcb, 0xc6 });
        gbc.writeMem(0x9582, { 0x98 });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0x67d7, gbc.sp());
        EXPECT(0x4893, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0x9582));
        // CB C6 0366
        gbc.setState(0x4e0d, 0x5aac, 0xab50, 0x24d4, 0xdf89, 0x2cca, 0x0, 0x1);
        gbc.writeMem(0x2cca, { 0x2f });
        gbc.writeMem(0x4e0d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x5aac, gbc.sp());
        EXPECT(0x4e0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0367
        gbc.setState(0xb090, 0x483a, 0x7b20, 0x2b2f, 0xa140, 0x3a32, 0x1, 0x1);
        gbc.writeMem(0x3a32, { 0x77 });
        gbc.writeMem(0xb090, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x483a, gbc.sp());
        EXPECT(0xb092, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb090));
        EXPECT(0xc6, gbc.readMem(0xb091));
        // CB C6 0368
        gbc.setState(0xe5c1, 0xd6d0, 0x9500, 0x509d, 0x785f, 0x1e98, 0x0, 0x0);
        gbc.writeMem(0x1e98, { 0x1f });
        gbc.writeMem(0xe5c1, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd6d0, gbc.sp());
        EXPECT(0xe5c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe5c1));
        EXPECT(0xc6, gbc.readMem(0xe5c2));
        // CB C6 0369
        gbc.setState(0x3085, 0x596b, 0xc000, 0xe474, 0xa502, 0x4e1d, 0x1, 0x0);
        gbc.writeMem(0x3085, { 0xcb, 0xc6 });
        gbc.writeMem(0x4e1d, { 0x8d });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x596b, gbc.sp());
        EXPECT(0x3087, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 036A
        gbc.setState(0x60bb, 0x6d17, 0x7cc0, 0xd7c2, 0x52fd, 0xe7e4, 0x0, 0x0);
        gbc.writeMem(0x60bb, { 0xcb, 0xc6 });
        gbc.writeMem(0xe7e4, { 0xf6 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6d17, gbc.sp());
        EXPECT(0x60bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xe7e4));
        // CB C6 036C
        gbc.setState(0x22ac, 0x5b10, 0x64b0, 0x2d1, 0x1937, 0xdaf8, 0x1, 0x0);
        gbc.writeMem(0x22ac, { 0xcb, 0xc6 });
        gbc.writeMem(0xdaf8, { 0xe1 });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5b10, gbc.sp());
        EXPECT(0x22ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xdaf8));
        // CB C6 036D
        gbc.setState(0x49a3, 0x5c0d, 0x3a40, 0x10a9, 0x5d33, 0xddb5, 0x0, 0x0);
        gbc.writeMem(0x49a3, { 0xcb, 0xc6 });
        gbc.writeMem(0xddb5, { 0xf6 });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x5c0d, gbc.sp());
        EXPECT(0x49a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xf7, gbc.readMem(0xddb5));
        // CB C6 036E
        gbc.setState(0x3d20, 0x3140, 0x8f90, 0x4f71, 0xc71a, 0x4298, 0x1, 0x0);
        gbc.writeMem(0x3d20, { 0xcb, 0xc6 });
        gbc.writeMem(0x4298, { 0x73 });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x3140, gbc.sp());
        EXPECT(0x3d22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 036F
        gbc.setState(0x7c55, 0x26ae, 0xfb50, 0xa91, 0x6e7e, 0x3895, 0x0, 0x0);
        gbc.writeMem(0x3895, { 0x5b });
        gbc.writeMem(0x7c55, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x26ae, gbc.sp());
        EXPECT(0x7c57, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0370
        gbc.setState(0x6bbf, 0x7de2, 0x47b0, 0x935f, 0xa952, 0xc113, 0x0, 0x0);
        gbc.writeMem(0x6bbf, { 0xcb, 0xc6 });
        gbc.writeMem(0xc113, { 0x41 });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x7de2, gbc.sp());
        EXPECT(0x6bc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x41, gbc.readMem(0xc113));
        // CB C6 0372
        gbc.setState(0x6735, 0x2f34, 0x900, 0x9ac7, 0x8a41, 0x832, 0x1, 0x0);
        gbc.writeMem(0x832, { 0x31 });
        gbc.writeMem(0x6735, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x2f34, gbc.sp());
        EXPECT(0x6737, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0373
        gbc.setState(0x6394, 0xee9b, 0x2270, 0x4fc4, 0xdfd3, 0xc71d, 0x0, 0x1);
        gbc.writeMem(0x6394, { 0xcb, 0xc6 });
        gbc.writeMem(0xc71d, { 0x54 });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xee9b, gbc.sp());
        EXPECT(0x6396, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x55, gbc.readMem(0xc71d));
        // CB C6 0374
        gbc.setState(0x7651, 0x252b, 0x3340, 0xe6d1, 0x6094, 0xfbdc, 0x0, 0x0);
        gbc.writeMem(0x7651, { 0xcb, 0xc6 });
        gbc.writeMem(0xfbdc, { 0x98 });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x252b, gbc.sp());
        EXPECT(0x7653, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x99, gbc.readMem(0xfbdc));
        // CB C6 0375
        gbc.setState(0x2db1, 0x7025, 0x1fc0, 0x3cf9, 0xd983, 0xab77, 0x1, 0x1);
        gbc.writeMem(0x2db1, { 0xcb, 0xc6 });
        gbc.writeMem(0xab77, { 0xbd });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x7025, gbc.sp());
        EXPECT(0x2db3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbd, gbc.readMem(0xab77));
        // CB C6 0376
        gbc.setState(0xb28c, 0xe435, 0x1300, 0xbc60, 0xca3b, 0xd82b, 0x1, 0x0);
        gbc.writeMem(0xb28c, { 0xcb, 0xc6 });
        gbc.writeMem(0xd82b, { 0xe2 });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xe435, gbc.sp());
        EXPECT(0xb28e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb28c));
        EXPECT(0xc6, gbc.readMem(0xb28d));
        EXPECT(0xe3, gbc.readMem(0xd82b));
        // CB C6 0377
        gbc.setState(0x93a, 0xb922, 0xc590, 0x3d80, 0x5317, 0xaa25, 0x0, 0x0);
        gbc.writeMem(0x93a, { 0xcb, 0xc6 });
        gbc.writeMem(0xaa25, { 0xf3 });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xb922, gbc.sp());
        EXPECT(0x93c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf3, gbc.readMem(0xaa25));
        // CB C6 0378
        gbc.setState(0x76d4, 0xf14a, 0xf4f0, 0xb317, 0x6f12, 0xbd30, 0x1, 0x0);
        gbc.writeMem(0x76d4, { 0xcb, 0xc6 });
        gbc.writeMem(0xbd30, { 0x33 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xf14a, gbc.sp());
        EXPECT(0x76d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x33, gbc.readMem(0xbd30));
        // CB C6 0379
        gbc.setState(0x775c, 0xb12d, 0x27a0, 0x98c8, 0x1e75, 0x978b, 0x1, 0x0);
        gbc.writeMem(0x775c, { 0xcb, 0xc6 });
        gbc.writeMem(0x978b, { 0x11 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb12d, gbc.sp());
        EXPECT(0x775e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0x978b));
        // CB C6 037A
        gbc.setState(0x94f8, 0x76e6, 0x94b0, 0x72ff, 0xcfcd, 0xc9b0, 0x1, 0x0);
        gbc.writeMem(0x94f8, { 0xcb, 0xc6 });
        gbc.writeMem(0xc9b0, { 0x54 });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x76e6, gbc.sp());
        EXPECT(0x94fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x94f8));
        EXPECT(0xc6, gbc.readMem(0x94f9));
        EXPECT(0x55, gbc.readMem(0xc9b0));
        // CB C6 037B
        gbc.setState(0xc114, 0x26ab, 0xd390, 0x3bd5, 0x2553, 0x2980, 0x0, 0x1);
        gbc.writeMem(0x2980, { 0xdf });
        gbc.writeMem(0xc114, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x26ab, gbc.sp());
        EXPECT(0xc116, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc114));
        EXPECT(0xc6, gbc.readMem(0xc115));
        // CB C6 037D
        gbc.setState(0x5089, 0x318a, 0x5430, 0x549c, 0x1ab9, 0x7c94, 0x0, 0x1);
        gbc.writeMem(0x5089, { 0xcb, 0xc6 });
        gbc.writeMem(0x7c94, { 0xff });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x318a, gbc.sp());
        EXPECT(0x508b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 037E
        gbc.setState(0x40d9, 0xee60, 0x9740, 0x59b9, 0xf03a, 0xef8a, 0x0, 0x1);
        gbc.writeMem(0x40d9, { 0xcb, 0xc6 });
        gbc.writeMem(0xef8a, { 0x64 });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xee60, gbc.sp());
        EXPECT(0x40db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x65, gbc.readMem(0xef8a));
        // CB C6 0380
        gbc.setState(0x36d, 0x6486, 0xf90, 0xdf78, 0x3acc, 0xc247, 0x0, 0x1);
        gbc.writeMem(0x36d, { 0xcb, 0xc6 });
        gbc.writeMem(0xc247, { 0x58 });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x6486, gbc.sp());
        EXPECT(0x36f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x59, gbc.readMem(0xc247));
        // CB C6 0381
        gbc.setState(0x84e7, 0x9825, 0x6320, 0xf081, 0x87cf, 0xa23d, 0x0, 0x0);
        gbc.writeMem(0x84e7, { 0xcb, 0xc6 });
        gbc.writeMem(0xa23d, { 0xfe });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0x9825, gbc.sp());
        EXPECT(0x84e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x84e7));
        EXPECT(0xc6, gbc.readMem(0x84e8));
        EXPECT(0xff, gbc.readMem(0xa23d));
        // CB C6 0384
        gbc.setState(0xee4d, 0x2234, 0x7cb0, 0x641d, 0x729d, 0xa871, 0x0, 0x1);
        gbc.writeMem(0xa871, { 0x19 });
        gbc.writeMem(0xee4d, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x2234, gbc.sp());
        EXPECT(0xee4f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xa871));
        EXPECT(0xcb, gbc.readMem(0xee4d));
        EXPECT(0xc6, gbc.readMem(0xee4e));
        // CB C6 0385
        gbc.setState(0x7b65, 0x21b5, 0xa5f0, 0x8619, 0xa0e2, 0x41a5, 0x0, 0x1);
        gbc.writeMem(0x41a5, { 0xc3 });
        gbc.writeMem(0x7b65, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x21b5, gbc.sp());
        EXPECT(0x7b67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0386
        gbc.setState(0x2d01, 0xab01, 0x8d30, 0x91b0, 0xfa28, 0xf15b, 0x0, 0x1);
        gbc.writeMem(0x2d01, { 0xcb, 0xc6 });
        gbc.writeMem(0xf15b, { 0xb7 });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xab01, gbc.sp());
        EXPECT(0x2d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xb7, gbc.readMem(0xf15b));
        // CB C6 0387
        gbc.setState(0x215e, 0x6a2d, 0x4a70, 0x3b17, 0xdfc5, 0xf0d3, 0x0, 0x1);
        gbc.writeMem(0x215e, { 0xcb, 0xc6 });
        gbc.writeMem(0xf0d3, { 0x56 });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x6a2d, gbc.sp());
        EXPECT(0x2160, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x57, gbc.readMem(0xf0d3));
        // CB C6 0389
        gbc.setState(0x6ff4, 0x4aff, 0x3190, 0x8f01, 0x9a51, 0x38e9, 0x0, 0x1);
        gbc.writeMem(0x38e9, { 0x47 });
        gbc.writeMem(0x6ff4, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x4aff, gbc.sp());
        EXPECT(0x6ff6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 038A
        gbc.setState(0x2a3, 0x5e86, 0x4320, 0x3671, 0x6df8, 0xe86c, 0x0, 0x0);
        gbc.writeMem(0x2a3, { 0xcb, 0xc6 });
        gbc.writeMem(0xe86c, { 0xbf });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5e86, gbc.sp());
        EXPECT(0x2a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xbf, gbc.readMem(0xe86c));
        // CB C6 038B
        gbc.setState(0x761a, 0x61ff, 0xa800, 0xe08, 0x6c8e, 0x2733, 0x1, 0x0);
        gbc.writeMem(0x2733, { 0xe9 });
        gbc.writeMem(0x761a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x61ff, gbc.sp());
        EXPECT(0x761c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 038C
        gbc.setState(0x3827, 0xcc17, 0x2560, 0xdf0d, 0xc4bd, 0x7699, 0x0, 0x0);
        gbc.writeMem(0x3827, { 0xcb, 0xc6 });
        gbc.writeMem(0x7699, { 0xfb });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xcc17, gbc.sp());
        EXPECT(0x3829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 038D
        gbc.setState(0x64f3, 0xa004, 0x3da0, 0xbbc9, 0x48c, 0xe258, 0x0, 0x1);
        gbc.writeMem(0x64f3, { 0xcb, 0xc6 });
        gbc.writeMem(0xe258, { 0x7 });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xa004, gbc.sp());
        EXPECT(0x64f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7, gbc.readMem(0xe258));
        // CB C6 038E
        gbc.setState(0x4e50, 0x244a, 0xc920, 0x29f8, 0xbace, 0xba17, 0x0, 0x1);
        gbc.writeMem(0x4e50, { 0xcb, 0xc6 });
        gbc.writeMem(0xba17, { 0xac });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x244a, gbc.sp());
        EXPECT(0x4e52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xba17));
        // CB C6 038F
        gbc.setState(0x9945, 0x8e38, 0xe5b0, 0x220, 0x6f32, 0x5a8a, 0x0, 0x0);
        gbc.writeMem(0x5a8a, { 0x13 });
        gbc.writeMem(0x9945, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x8e38, gbc.sp());
        EXPECT(0x9947, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9945));
        EXPECT(0xc6, gbc.readMem(0x9946));
        // CB C6 0390
        gbc.setState(0x4a19, 0x74c4, 0x2540, 0x2065, 0xd794, 0xce9a, 0x1, 0x1);
        gbc.writeMem(0x4a19, { 0xcb, 0xc6 });
        gbc.writeMem(0xce9a, { 0x75 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x74c4, gbc.sp());
        EXPECT(0x4a1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x75, gbc.readMem(0xce9a));
        // CB C6 0391
        gbc.setState(0x7b28, 0x461d, 0x6940, 0x9c32, 0x37eb, 0xd2e6, 0x1, 0x0);
        gbc.writeMem(0x7b28, { 0xcb, 0xc6 });
        gbc.writeMem(0xd2e6, { 0x0 });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x461d, gbc.sp());
        EXPECT(0x7b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1, gbc.readMem(0xd2e6));
        // CB C6 0392
        gbc.setState(0x2e5b, 0x4f14, 0xf800, 0xeee2, 0xbc40, 0x7ff4, 0x1, 0x1);
        gbc.writeMem(0x2e5b, { 0xcb, 0xc6 });
        gbc.writeMem(0x7ff4, { 0xcb });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4f14, gbc.sp());
        EXPECT(0x2e5d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 0393
        gbc.setState(0xdbd6, 0xd7e0, 0xb640, 0x1872, 0xf409, 0x43f9, 0x0, 0x1);
        gbc.writeMem(0x43f9, { 0xbd });
        gbc.writeMem(0xdbd6, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd7e0, gbc.sp());
        EXPECT(0xdbd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdbd6));
        EXPECT(0xc6, gbc.readMem(0xdbd7));
        // CB C6 0395
        gbc.setState(0xb16b, 0x270e, 0xf4e0, 0x7da3, 0x8eab, 0x6b5a, 0x0, 0x0);
        gbc.writeMem(0x6b5a, { 0x61 });
        gbc.writeMem(0xb16b, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x270e, gbc.sp());
        EXPECT(0xb16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb16b));
        EXPECT(0xc6, gbc.readMem(0xb16c));
        // CB C6 0396
        gbc.setState(0xdc70, 0xc50b, 0xf950, 0x53b9, 0xe5b1, 0x53bb, 0x0, 0x0);
        gbc.writeMem(0x53bb, { 0x17 });
        gbc.writeMem(0xdc70, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xc50b, gbc.sp());
        EXPECT(0xdc72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xdc70));
        EXPECT(0xc6, gbc.readMem(0xdc71));
        // CB C6 0397
        gbc.setState(0x3a16, 0x76a4, 0xe0f0, 0xb22e, 0x858c, 0x1b1, 0x1, 0x1);
        gbc.writeMem(0x1b1, { 0xcd });
        gbc.writeMem(0x3a16, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x76a4, gbc.sp());
        EXPECT(0x3a18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 0398
        gbc.setState(0x2d74, 0x24ce, 0xcfc0, 0x3b2a, 0x9662, 0xf4f6, 0x0, 0x1);
        gbc.writeMem(0x2d74, { 0xcb, 0xc6 });
        gbc.writeMem(0xf4f6, { 0xe1 });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x24ce, gbc.sp());
        EXPECT(0x2d76, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xe1, gbc.readMem(0xf4f6));
        // CB C6 0399
        gbc.setState(0xc761, 0x2871, 0xb740, 0x5f58, 0xc641, 0xe3a5, 0x1, 0x0);
        gbc.writeMem(0xc761, { 0xcb, 0xc6 });
        gbc.writeMem(0xe3a5, { 0x68 });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x2871, gbc.sp());
        EXPECT(0xc763, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc761));
        EXPECT(0xc6, gbc.readMem(0xc762));
        EXPECT(0x69, gbc.readMem(0xe3a5));
        // CB C6 039C
        gbc.setState(0xebf5, 0x2709, 0x680, 0x47fb, 0x1494, 0x11c0, 0x1, 0x1);
        gbc.writeMem(0x11c0, { 0xd9 });
        gbc.writeMem(0xebf5, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x2709, gbc.sp());
        EXPECT(0xebf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xebf5));
        EXPECT(0xc6, gbc.readMem(0xebf6));
        // CB C6 039D
        gbc.setState(0x8b41, 0x9169, 0x8e50, 0x9f49, 0x730b, 0x61aa, 0x1, 0x0);
        gbc.writeMem(0x61aa, { 0xd7 });
        gbc.writeMem(0x8b41, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x9169, gbc.sp());
        EXPECT(0x8b43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8b41));
        EXPECT(0xc6, gbc.readMem(0x8b42));
        // CB C6 039E
        gbc.setState(0xb8fd, 0xaef6, 0x1830, 0x4731, 0x4725, 0x2626, 0x0, 0x0);
        gbc.writeMem(0x2626, { 0x49 });
        gbc.writeMem(0xb8fd, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xaef6, gbc.sp());
        EXPECT(0xb8ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb8fd));
        EXPECT(0xc6, gbc.readMem(0xb8fe));
        // CB C6 039F
        gbc.setState(0xa404, 0x6971, 0xa980, 0x4d19, 0x728c, 0xb6d9, 0x1, 0x1);
        gbc.writeMem(0xa404, { 0xcb, 0xc6 });
        gbc.writeMem(0xb6d9, { 0x45 });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6971, gbc.sp());
        EXPECT(0xa406, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa404));
        EXPECT(0xc6, gbc.readMem(0xa405));
        EXPECT(0x45, gbc.readMem(0xb6d9));
        // CB C6 03A0
        gbc.setState(0x5a30, 0xbd85, 0xf0c0, 0xb831, 0x195e, 0xbc4f, 0x1, 0x1);
        gbc.writeMem(0x5a30, { 0xcb, 0xc6 });
        gbc.writeMem(0xbc4f, { 0x38 });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbd85, gbc.sp());
        EXPECT(0x5a32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x39, gbc.readMem(0xbc4f));
        // CB C6 03A2
        gbc.setState(0x26a5, 0xe8ba, 0xb030, 0xec58, 0x8017, 0xb8a, 0x0, 0x1);
        gbc.writeMem(0xb8a, { 0x5b });
        gbc.writeMem(0x26a5, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe8ba, gbc.sp());
        EXPECT(0x26a7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 03A3
        gbc.setState(0x6e7e, 0x87e, 0x3640, 0xdbee, 0xdd75, 0xef98, 0x1, 0x0);
        gbc.writeMem(0x6e7e, { 0xcb, 0xc6 });
        gbc.writeMem(0xef98, { 0xce });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x87e, gbc.sp());
        EXPECT(0x6e80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0xef98));
        // CB C6 03A4
        gbc.setState(0xe2c2, 0xef1a, 0x430, 0xd969, 0xb4c7, 0xe0c6, 0x1, 0x0);
        gbc.writeMem(0xe0c6, { 0xe });
        gbc.writeMem(0xe2c2, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xef1a, gbc.sp());
        EXPECT(0xe2c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xf, gbc.readMem(0xe0c6));
        EXPECT(0xcb, gbc.readMem(0xe2c2));
        EXPECT(0xc6, gbc.readMem(0xe2c3));
        // CB C6 03A8
        gbc.setState(0x2f0, 0xcb9b, 0x100, 0xeb69, 0xf500, 0xdc0f, 0x1, 0x0);
        gbc.writeMem(0x2f0, { 0xcb, 0xc6 });
        gbc.writeMem(0xdc0f, { 0x53 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcb9b, gbc.sp());
        EXPECT(0x2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x53, gbc.readMem(0xdc0f));
        // CB C6 03AA
        gbc.setState(0xd46f, 0xd721, 0x45b0, 0x44a3, 0xd7b4, 0x201, 0x0, 0x0);
        gbc.writeMem(0x201, { 0xbb });
        gbc.writeMem(0xd46f, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd721, gbc.sp());
        EXPECT(0xd471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xd46f));
        EXPECT(0xc6, gbc.readMem(0xd470));
        // CB C6 03AB
        gbc.setState(0x5fca, 0xd672, 0x7f00, 0x45cc, 0x935, 0xb70b, 0x0, 0x0);
        gbc.writeMem(0x5fca, { 0xcb, 0xc6 });
        gbc.writeMem(0xb70b, { 0x19 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xd672, gbc.sp());
        EXPECT(0x5fcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x19, gbc.readMem(0xb70b));
        // CB C6 03AC
        gbc.setState(0xc26a, 0xa49e, 0x5b10, 0xac3e, 0x6d46, 0x446c, 0x1, 0x0);
        gbc.writeMem(0x446c, { 0xf });
        gbc.writeMem(0xc26a, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xa49e, gbc.sp());
        EXPECT(0xc26c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc26a));
        EXPECT(0xc6, gbc.readMem(0xc26b));
        // CB C6 03AE
        gbc.setState(0xb4f6, 0x255, 0xd210, 0x3707, 0xbab3, 0xdff2, 0x0, 0x0);
        gbc.writeMem(0xb4f6, { 0xcb, 0xc6 });
        gbc.writeMem(0xdff2, { 0x46 });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x255, gbc.sp());
        EXPECT(0xb4f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb4f6));
        EXPECT(0xc6, gbc.readMem(0xb4f7));
        EXPECT(0x47, gbc.readMem(0xdff2));
        // CB C6 03B0
        gbc.setState(0x8676, 0xdef8, 0x7f20, 0xe107, 0xaf0a, 0x77bf, 0x1, 0x1);
        gbc.writeMem(0x77bf, { 0xf7 });
        gbc.writeMem(0x8676, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xdef8, gbc.sp());
        EXPECT(0x8678, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8676));
        EXPECT(0xc6, gbc.readMem(0x8677));
        // CB C6 03B2
        gbc.setState(0x93d3, 0xd206, 0x3250, 0xd958, 0xd2d6, 0xab20, 0x1, 0x0);
        gbc.writeMem(0x93d3, { 0xcb, 0xc6 });
        gbc.writeMem(0xab20, { 0x6b });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd206, gbc.sp());
        EXPECT(0x93d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x93d3));
        EXPECT(0xc6, gbc.readMem(0x93d4));
        EXPECT(0x6b, gbc.readMem(0xab20));
        // CB C6 03B3
        gbc.setState(0x95de, 0x8a25, 0xe00, 0xd0d2, 0xf28e, 0xfe8, 0x0, 0x1);
        gbc.writeMem(0xfe8, { 0xf5 });
        gbc.writeMem(0x95de, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x8a25, gbc.sp());
        EXPECT(0x95e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x95de));
        EXPECT(0xc6, gbc.readMem(0x95df));
        // CB C6 03B4
        gbc.setState(0xb7d9, 0x6b19, 0x62d0, 0x8840, 0x7397, 0xed40, 0x0, 0x0);
        gbc.writeMem(0xb7d9, { 0xcb, 0xc6 });
        gbc.writeMem(0xed40, { 0xc });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x6b19, gbc.sp());
        EXPECT(0xb7db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb7d9));
        EXPECT(0xc6, gbc.readMem(0xb7da));
        EXPECT(0xd, gbc.readMem(0xed40));
        // CB C6 03B5
        gbc.setState(0xb493, 0x863d, 0xee80, 0x299b, 0x1609, 0xbd0f, 0x1, 0x0);
        gbc.writeMem(0xb493, { 0xcb, 0xc6 });
        gbc.writeMem(0xbd0f, { 0x8f });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x863d, gbc.sp());
        EXPECT(0xb495, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb493));
        EXPECT(0xc6, gbc.readMem(0xb494));
        EXPECT(0x8f, gbc.readMem(0xbd0f));
        // CB C6 03B6
        gbc.setState(0x2b4a, 0x8aa8, 0xb4c0, 0x145f, 0x34bf, 0x6430, 0x0, 0x1);
        gbc.writeMem(0x2b4a, { 0xcb, 0xc6 });
        gbc.writeMem(0x6430, { 0x2b });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x8aa8, gbc.sp());
        EXPECT(0x2b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 03B8
        gbc.setState(0x8e60, 0x9105, 0xa1b0, 0x318c, 0xd9, 0xc943, 0x1, 0x1);
        gbc.writeMem(0x8e60, { 0xcb, 0xc6 });
        gbc.writeMem(0xc943, { 0xdc });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x9105, gbc.sp());
        EXPECT(0x8e62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x8e60));
        EXPECT(0xc6, gbc.readMem(0x8e61));
        EXPECT(0xdd, gbc.readMem(0xc943));
        // CB C6 03B9
        gbc.setState(0x213, 0x5ec9, 0x7500, 0xf754, 0xc832, 0xd1ad, 0x1, 0x1);
        gbc.writeMem(0x213, { 0xcb, 0xc6 });
        gbc.writeMem(0xd1ad, { 0x95 });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x5ec9, gbc.sp());
        EXPECT(0x215, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x95, gbc.readMem(0xd1ad));
        // CB C6 03BA
        gbc.setState(0xb98, 0x3fba, 0xf760, 0x2fee, 0x5803, 0xb26f, 0x1, 0x1);
        gbc.writeMem(0xb98, { 0xcb, 0xc6 });
        gbc.writeMem(0xb26f, { 0x11 });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x3fba, gbc.sp());
        EXPECT(0xb9a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x11, gbc.readMem(0xb26f));
        // CB C6 03BB
        gbc.setState(0xb63, 0x8805, 0x84c0, 0x4266, 0xae11, 0x8b0f, 0x0, 0x1);
        gbc.writeMem(0xb63, { 0xcb, 0xc6 });
        gbc.writeMem(0x8b0f, { 0xd2 });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x8805, gbc.sp());
        EXPECT(0xb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0x8b0f));
        // CB C6 03BC
        gbc.setState(0x123d, 0x8f27, 0x17e0, 0xf715, 0xc47c, 0x664f, 0x0, 0x1);
        gbc.writeMem(0x123d, { 0xcb, 0xc6 });
        gbc.writeMem(0x664f, { 0xb9 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x8f27, gbc.sp());
        EXPECT(0x123f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 03BE
        gbc.setState(0x42da, 0x7b90, 0xd6b0, 0x9528, 0x17a0, 0xc806, 0x0, 0x0);
        gbc.writeMem(0x42da, { 0xcb, 0xc6 });
        gbc.writeMem(0xc806, { 0xa4 });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x7b90, gbc.sp());
        EXPECT(0x42dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa5, gbc.readMem(0xc806));
        // CB C6 03BF
        gbc.setState(0xd38e, 0xdfe4, 0xac60, 0xa39e, 0x8277, 0xa54c, 0x0, 0x1);
        gbc.writeMem(0xa54c, { 0xfe });
        gbc.writeMem(0xd38e, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdfe4, gbc.sp());
        EXPECT(0xd390, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xff, gbc.readMem(0xa54c));
        EXPECT(0xcb, gbc.readMem(0xd38e));
        EXPECT(0xc6, gbc.readMem(0xd38f));
        // CB C6 03C0
        gbc.setState(0x9b44, 0xea6, 0x27b0, 0xf197, 0x8cf4, 0xdf53, 0x0, 0x0);
        gbc.writeMem(0x9b44, { 0xcb, 0xc6 });
        gbc.writeMem(0xdf53, { 0xc5 });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xea6, gbc.sp());
        EXPECT(0x9b46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9b44));
        EXPECT(0xc6, gbc.readMem(0x9b45));
        EXPECT(0xc5, gbc.readMem(0xdf53));
        // CB C6 03C2
        gbc.setState(0x227b, 0xd7f3, 0xe010, 0x416f, 0xe168, 0xe5cf, 0x0, 0x0);
        gbc.writeMem(0x227b, { 0xcb, 0xc6 });
        gbc.writeMem(0xe5cf, { 0x9c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xd7f3, gbc.sp());
        EXPECT(0x227d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9d, gbc.readMem(0xe5cf));
        // CB C6 03C3
        gbc.setState(0xa26c, 0xee89, 0xf9a0, 0xfb21, 0x9dec, 0x46bb, 0x0, 0x1);
        gbc.writeMem(0x46bb, { 0x9 });
        gbc.writeMem(0xa26c, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xee89, gbc.sp());
        EXPECT(0xa26e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xa26c));
        EXPECT(0xc6, gbc.readMem(0xa26d));
        // CB C6 03C4
        gbc.setState(0x3c14, 0x458c, 0x1ce0, 0xab59, 0x9948, 0xbbe6, 0x1, 0x1);
        gbc.writeMem(0x3c14, { 0xcb, 0xc6 });
        gbc.writeMem(0xbbe6, { 0x1b });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0x458c, gbc.sp());
        EXPECT(0x3c16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x1b, gbc.readMem(0xbbe6));
        // CB C6 03C6
        gbc.setState(0x995a, 0xef34, 0xb840, 0x55bd, 0xee2d, 0xa873, 0x1, 0x1);
        gbc.writeMem(0x995a, { 0xcb, 0xc6 });
        gbc.writeMem(0xa873, { 0x44 });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xef34, gbc.sp());
        EXPECT(0x995c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x995a));
        EXPECT(0xc6, gbc.readMem(0x995b));
        EXPECT(0x45, gbc.readMem(0xa873));
        // CB C6 03C9
        gbc.setState(0xb233, 0x65f2, 0xd70, 0x184c, 0x282a, 0xb5b4, 0x0, 0x0);
        gbc.writeMem(0xb233, { 0xcb, 0xc6 });
        gbc.writeMem(0xb5b4, { 0xb6 });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x65f2, gbc.sp());
        EXPECT(0xb235, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb233));
        EXPECT(0xc6, gbc.readMem(0xb234));
        EXPECT(0xb7, gbc.readMem(0xb5b4));
        // CB C6 03CA
        gbc.setState(0xbf08, 0x1ffa, 0xaf20, 0x692, 0x9871, 0xa024, 0x0, 0x0);
        gbc.writeMem(0xa024, { 0x5b });
        gbc.writeMem(0xbf08, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1ffa, gbc.sp());
        EXPECT(0xbf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5b, gbc.readMem(0xa024));
        EXPECT(0xcb, gbc.readMem(0xbf08));
        EXPECT(0xc6, gbc.readMem(0xbf09));
        // CB C6 03CB
        gbc.setState(0xf0b, 0xcd44, 0x3460, 0x335c, 0x4cc2, 0x9ec6, 0x0, 0x1);
        gbc.writeMem(0xf0b, { 0xcb, 0xc6 });
        gbc.writeMem(0x9ec6, { 0xcf });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcd44, gbc.sp());
        EXPECT(0xf0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcf, gbc.readMem(0x9ec6));
        // CB C6 03CC
        gbc.setState(0xcdea, 0xef42, 0x8a80, 0x1559, 0x5245, 0xdd91, 0x0, 0x0);
        gbc.writeMem(0xcdea, { 0xcb, 0xc6 });
        gbc.writeMem(0xdd91, { 0x6f });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xef42, gbc.sp());
        EXPECT(0xcdec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xcdea));
        EXPECT(0xc6, gbc.readMem(0xcdeb));
        EXPECT(0x6f, gbc.readMem(0xdd91));
        // CB C6 03CD
        gbc.setState(0x476d, 0x92d2, 0xf5b0, 0x33c6, 0x45f, 0xff48, 0x1, 0x0);
        gbc.writeMem(0x476d, { 0xcb, 0xc6 });
        gbc.writeMem(0xff48, { 0xad });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x92d2, gbc.sp());
        EXPECT(0x476f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xad, gbc.readMem(0xff48));
        // CB C6 03CE
        gbc.setState(0x451b, 0x82c8, 0xbc50, 0x2fd4, 0x3465, 0x15c2, 0x1, 0x1);
        gbc.writeMem(0x15c2, { 0x85 });
        gbc.writeMem(0x451b, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x82c8, gbc.sp());
        EXPECT(0x451d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 03CF
        gbc.setState(0x5821, 0x66be, 0x4e00, 0x5adb, 0x5d07, 0x362a, 0x1, 0x1);
        gbc.writeMem(0x362a, { 0xbd });
        gbc.writeMem(0x5821, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x66be, gbc.sp());
        EXPECT(0x5823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 03D1
        gbc.setState(0x4778, 0xbdc9, 0xe730, 0x6815, 0xccdd, 0xb1b4, 0x0, 0x0);
        gbc.writeMem(0x4778, { 0xcb, 0xc6 });
        gbc.writeMem(0xb1b4, { 0xd2 });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xbdc9, gbc.sp());
        EXPECT(0x477a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xd3, gbc.readMem(0xb1b4));
        // CB C6 03D3
        gbc.setState(0xc323, 0xbdd4, 0xb920, 0x86e, 0xb58c, 0xffd6, 0x0, 0x0);
        gbc.writeMem(0xc323, { 0xcb, 0xc6 });
        gbc.writeMem(0xffd6, { 0xdc });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xbdd4, gbc.sp());
        EXPECT(0xc325, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xc323));
        EXPECT(0xc6, gbc.readMem(0xc324));
        EXPECT(0xdd, gbc.readMem(0xffd6));
        // CB C6 03D4
        gbc.setState(0x9ffd, 0xc822, 0x1d0, 0x6e31, 0x886d, 0x9efb, 0x0, 0x1);
        gbc.writeMem(0x9efb, { 0xea });
        gbc.writeMem(0x9ffd, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xc822, gbc.sp());
        EXPECT(0x9fff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xeb, gbc.readMem(0x9efb));
        EXPECT(0xcb, gbc.readMem(0x9ffd));
        EXPECT(0xc6, gbc.readMem(0x9ffe));
        // CB C6 03D5
        gbc.setState(0xb0c4, 0x6397, 0x25f0, 0x5980, 0x2399, 0x3e74, 0x1, 0x1);
        gbc.writeMem(0x3e74, { 0x63 });
        gbc.writeMem(0xb0c4, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x6397, gbc.sp());
        EXPECT(0xb0c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xb0c4));
        EXPECT(0xc6, gbc.readMem(0xb0c5));
        // CB C6 03D6
        gbc.setState(0x1a4b, 0xad8c, 0x2330, 0x5ffe, 0x8cc9, 0xb232, 0x1, 0x0);
        gbc.writeMem(0x1a4b, { 0xcb, 0xc6 });
        gbc.writeMem(0xb232, { 0x8 });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xad8c, gbc.sp());
        EXPECT(0x1a4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x9, gbc.readMem(0xb232));
        // CB C6 03D7
        gbc.setState(0x3c2, 0x72b9, 0x3cb0, 0xe7fb, 0x418e, 0x2cfe, 0x0, 0x0);
        gbc.writeMem(0x3c2, { 0xcb, 0xc6 });
        gbc.writeMem(0x2cfe, { 0x99 });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x72b9, gbc.sp());
        EXPECT(0x3c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 03D8
        gbc.setState(0x620c, 0x7419, 0x17c0, 0x481b, 0xbf9d, 0x56a6, 0x1, 0x0);
        gbc.writeMem(0x56a6, { 0x41 });
        gbc.writeMem(0x620c, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x7419, gbc.sp());
        EXPECT(0x620e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // CB C6 03DC
        gbc.setState(0x16c6, 0xd7de, 0x6190, 0x4f79, 0x611e, 0xde36, 0x1, 0x0);
        gbc.writeMem(0x16c6, { 0xcb, 0xc6 });
        gbc.writeMem(0xde36, { 0x22 });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0xd7de, gbc.sp());
        EXPECT(0x16c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x23, gbc.readMem(0xde36));
        // CB C6 03DD
        gbc.setState(0xbcda, 0x9b16, 0x4310, 0xbf5d, 0xec39, 0xa006, 0x0, 0x0);
        gbc.writeMem(0xa006, { 0xa8 });
        gbc.writeMem(0xbcda, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x9b16, gbc.sp());
        EXPECT(0xbcdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xa9, gbc.readMem(0xa006));
        EXPECT(0xcb, gbc.readMem(0xbcda));
        EXPECT(0xc6, gbc.readMem(0xbcdb));
        // CB C6 03DE
        gbc.setState(0x24a7, 0x278b, 0xea40, 0x5b0e, 0xd6d4, 0xf475, 0x0, 0x0);
        gbc.writeMem(0x24a7, { 0xcb, 0xc6 });
        gbc.writeMem(0xf475, { 0xaf });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x278b, gbc.sp());
        EXPECT(0x24a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0xaf, gbc.readMem(0xf475));
        // CB C6 03DF
        gbc.setState(0xe41f, 0x5255, 0x8e90, 0x1e28, 0x72cf, 0x5930, 0x0, 0x0);
        gbc.writeMem(0x5930, { 0xd9 });
        gbc.writeMem(0xe41f, { 0xcb, 0xc6 });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x5255, gbc.sp());
        EXPECT(0xe421, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0xe41f));
        EXPECT(0xc6, gbc.readMem(0xe420));
        // CB C6 03E0
        gbc.setState(0x5cb, 0xa4d3, 0xd370, 0x38c4, 0x4b04, 0xdba0, 0x0, 0x1);
        gbc.writeMem(0x5cb, { 0xcb, 0xc6 });
        gbc.writeMem(0xdba0, { 0x6c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xa4d3, gbc.sp());
        EXPECT(0x5cd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x6d, gbc.readMem(0xdba0));
        // CB C6 03E1
        gbc.setState(0x9c30, 0xfae5, 0x76b0, 0xb3d5, 0x4a02, 0xee12, 0x1, 0x0);
        gbc.writeMem(0x9c30, { 0xcb, 0xc6 });
        gbc.writeMem(0xee12, { 0x7d });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xfae5, gbc.sp());
        EXPECT(0x9c32, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0xcb, gbc.readMem(0x9c30));
        EXPECT(0xc6, gbc.readMem(0x9c31));
        EXPECT(0x7d, gbc.readMem(0xee12));
        // CB C6 03E3
        gbc.setState(0x6338, 0x3267, 0x720, 0xe1b3, 0x94b, 0xd3ef, 0x1, 0x1);
        gbc.writeMem(0x6338, { 0xcb, 0xc6 });
        gbc.writeMem(0xd3ef, { 0x5e });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x3267, gbc.sp());
        EXPECT(0x633a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x5f, gbc.readMem(0xd3ef));
        // CB C6 03E4
        gbc.setState(0x5576, 0xa824, 0x7ff0, 0x88a8, 0x3335, 0x6f7b, 0x1, 0x0);
        gbc.writeMem(0x5576, { 0xcb, 0xc6 });
        gbc.writeMem(0x6f7b, { 0x1 });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xa824, gbc.sp());
        EXPECT(0x5578, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // CB C6 03E7
        gbc.setState(0x61b, 0xe2e4, 0x280, 0x7d5d, 0x7bbb, 0x9fc9, 0x1, 0x1);
        gbc.writeMem(0x61b, { 0xcb, 0xc6 });
        gbc.writeMem(0x9fc9, { 0x17 });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe2e4, gbc.sp());
        EXPECT(0x61d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x17, gbc.readMem(0x9fc9));
    }
