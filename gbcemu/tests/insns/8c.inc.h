    TEST(gbcemu, opcode_8c) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 8C 0000
        gbc.setState(0x8a16, 0x4fab, 0xb20, 0x2a, 0x6c87, 0xb32b, 0x1, 0x1);
        gbc.writeMem(0x8a16, { 0x8c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x4fab, gbc.sp());
        EXPECT(0x8a17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8a16));
        // 8C 0001
        gbc.setState(0x3939, 0xefef, 0x6bb0, 0x29c2, 0x9e23, 0x85db, 0x0, 0x0);
        gbc.writeMem(0x3939, { 0x8c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xefef, gbc.sp());
        EXPECT(0x393a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0002
        gbc.setState(0x59f0, 0x2bfd, 0xfac0, 0xa5e3, 0x361d, 0x655e, 0x0, 0x0);
        gbc.writeMem(0x59f0, { 0x8c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x2bfd, gbc.sp());
        EXPECT(0x59f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0003
        gbc.setState(0x666b, 0x195b, 0x8730, 0x9dc8, 0x8ffb, 0x42d, 0x0, 0x1);
        gbc.writeMem(0x666b, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x195b, gbc.sp());
        EXPECT(0x666c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0004
        gbc.setState(0x93da, 0x8cf7, 0x3120, 0x477a, 0x3ea0, 0x9042, 0x0, 0x1);
        gbc.writeMem(0x93da, { 0x8c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x8cf7, gbc.sp());
        EXPECT(0x93db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x93da));
        // 8C 0005
        gbc.setState(0x94d2, 0xd9df, 0x3400, 0xb42d, 0xd561, 0x1a01, 0x1, 0x1);
        gbc.writeMem(0x94d2, { 0x8c });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xd9df, gbc.sp());
        EXPECT(0x94d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x94d2));
        // 8C 0006
        gbc.setState(0x1624, 0xc3bb, 0xb60, 0x98d9, 0x3216, 0x8785, 0x1, 0x0);
        gbc.writeMem(0x1624, { 0x8c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xc3bb, gbc.sp());
        EXPECT(0x1625, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0008
        gbc.setState(0x3f8a, 0xdc35, 0xd10, 0x47ba, 0xa14f, 0x80cd, 0x1, 0x0);
        gbc.writeMem(0x3f8a, { 0x8c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdc35, gbc.sp());
        EXPECT(0x3f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0009
        gbc.setState(0x4ad4, 0x8829, 0x6980, 0xf8e3, 0xf1ac, 0x67cc, 0x0, 0x1);
        gbc.writeMem(0x4ad4, { 0x8c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x8829, gbc.sp());
        EXPECT(0x4ad5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 000A
        gbc.setState(0x48c, 0x8240, 0x6a0, 0x70c7, 0x7cbc, 0x3ac4, 0x1, 0x0);
        gbc.writeMem(0x48c, { 0x8c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x8240, gbc.sp());
        EXPECT(0x48d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 000B
        gbc.setState(0xeb2b, 0x96c9, 0xca40, 0xa524, 0xc48e, 0xa5aa, 0x0, 0x0);
        gbc.writeMem(0xeb2b, { 0x8c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x96c9, gbc.sp());
        EXPECT(0xeb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xeb2b));
        // 8C 000C
        gbc.setState(0xc2df, 0xf204, 0x71c0, 0x606c, 0x59b7, 0x1e04, 0x1, 0x1);
        gbc.writeMem(0xc2df, { 0x8c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xf204, gbc.sp());
        EXPECT(0xc2e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc2df));
        // 8C 000D
        gbc.setState(0x9157, 0xc8a1, 0xa360, 0x4022, 0xddeb, 0xb1eb, 0x0, 0x1);
        gbc.writeMem(0x9157, { 0x8c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0xc8a1, gbc.sp());
        EXPECT(0x9158, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9157));
        // 8C 000E
        gbc.setState(0x28cf, 0x48f9, 0xdb70, 0xc56e, 0xcf85, 0xe58c, 0x1, 0x0);
        gbc.writeMem(0x28cf, { 0x8c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x48f9, gbc.sp());
        EXPECT(0x28d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 000F
        gbc.setState(0x9723, 0xb67a, 0xe2c0, 0xe26c, 0x130d, 0x4d9d, 0x1, 0x0);
        gbc.writeMem(0x9723, { 0x8c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb67a, gbc.sp());
        EXPECT(0x9724, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9723));
        // 8C 0010
        gbc.setState(0x8ace, 0xa506, 0xd810, 0x81f5, 0xbb54, 0x118f, 0x0, 0x1);
        gbc.writeMem(0x8ace, { 0x8c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0xa506, gbc.sp());
        EXPECT(0x8acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8ace));
        // 8C 0011
        gbc.setState(0x9fa1, 0x3be0, 0xca80, 0xb2f8, 0x37c1, 0xe6e4, 0x0, 0x0);
        gbc.writeMem(0x9fa1, { 0x8c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x3be0, gbc.sp());
        EXPECT(0x9fa2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9fa1));
        // 8C 0013
        gbc.setState(0x7144, 0xa765, 0x8b70, 0x31d3, 0x7789, 0x7679, 0x1, 0x0);
        gbc.writeMem(0x7144, { 0x8c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa765, gbc.sp());
        EXPECT(0x7145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0014
        gbc.setState(0xe477, 0x4afb, 0x9940, 0x6ddd, 0xdcde, 0x922d, 0x0, 0x0);
        gbc.writeMem(0xe477, { 0x8c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x4afb, gbc.sp());
        EXPECT(0xe478, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe477));
        // 8C 0015
        gbc.setState(0x71b8, 0xc497, 0x46e0, 0x6a4a, 0xadc1, 0xebbe, 0x1, 0x0);
        gbc.writeMem(0x71b8, { 0x8c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xc497, gbc.sp());
        EXPECT(0x71b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0016
        gbc.setState(0x86d5, 0x3e77, 0x1e30, 0xdb5d, 0xf130, 0x5953, 0x1, 0x1);
        gbc.writeMem(0x86d5, { 0x8c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x3e77, gbc.sp());
        EXPECT(0x86d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x86d5));
        // 8C 0017
        gbc.setState(0x82d3, 0x64dc, 0x9690, 0x92b3, 0x4ee7, 0x22d8, 0x1, 0x0);
        gbc.writeMem(0x82d3, { 0x8c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x64dc, gbc.sp());
        EXPECT(0x82d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x82d3));
        // 8C 0018
        gbc.setState(0x401c, 0x8901, 0x9b00, 0x5767, 0x2e58, 0xd6af, 0x0, 0x1);
        gbc.writeMem(0x401c, { 0x8c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x8901, gbc.sp());
        EXPECT(0x401d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0019
        gbc.setState(0x34, 0x5f3f, 0xd770, 0x2cb2, 0x64b, 0xbe76, 0x1, 0x0);
        gbc.writeMem(0x34, { 0x8c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x5f3f, gbc.sp());
        EXPECT(0x35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 001A
        gbc.setState(0x7f59, 0x415f, 0x870, 0x6bb5, 0xf6cf, 0xab49, 0x0, 0x0);
        gbc.writeMem(0x7f59, { 0x8c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x415f, gbc.sp());
        EXPECT(0x7f5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 001B
        gbc.setState(0x437f, 0xa641, 0xb610, 0xb6fc, 0x5c0a, 0xbd41, 0x1, 0x1);
        gbc.writeMem(0x437f, { 0x8c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xa641, gbc.sp());
        EXPECT(0x4380, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 001C
        gbc.setState(0xca38, 0x4458, 0x5cb0, 0x6e46, 0x8417, 0xab26, 0x0, 0x0);
        gbc.writeMem(0xca38, { 0x8c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x4458, gbc.sp());
        EXPECT(0xca39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xca38));
        // 8C 001E
        gbc.setState(0x30d9, 0xbdfb, 0x7560, 0x359, 0x8bd0, 0x5b22, 0x0, 0x0);
        gbc.writeMem(0x30d9, { 0x8c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xbdfb, gbc.sp());
        EXPECT(0x30da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 001F
        gbc.setState(0x6ea6, 0x2068, 0xb70, 0x8b56, 0xc7e4, 0xcca0, 0x0, 0x0);
        gbc.writeMem(0x6ea6, { 0x8c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x2068, gbc.sp());
        EXPECT(0x6ea7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0020
        gbc.setState(0x92b2, 0x74a1, 0x7540, 0x8d94, 0xbc30, 0x561f, 0x0, 0x1);
        gbc.writeMem(0x92b2, { 0x8c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x74a1, gbc.sp());
        EXPECT(0x92b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x92b2));
        // 8C 0021
        gbc.setState(0xa514, 0xf4c, 0x7650, 0x431b, 0xfea, 0x2f0e, 0x0, 0x1);
        gbc.writeMem(0xa514, { 0x8c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf4c, gbc.sp());
        EXPECT(0xa515, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa514));
        // 8C 0022
        gbc.setState(0xd767, 0x698e, 0xf9f0, 0xd8f4, 0x9462, 0x8709, 0x0, 0x1);
        gbc.writeMem(0xd767, { 0x8c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x698e, gbc.sp());
        EXPECT(0xd768, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd767));
        // 8C 0023
        gbc.setState(0x9028, 0xc7c5, 0xb9d0, 0xc833, 0x8ff9, 0x3418, 0x1, 0x1);
        gbc.writeMem(0x9028, { 0x8c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xc7c5, gbc.sp());
        EXPECT(0x9029, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9028));
        // 8C 0024
        gbc.setState(0x23bb, 0x3ac2, 0x9580, 0x3de1, 0x9f83, 0xb41d, 0x1, 0x1);
        gbc.writeMem(0x23bb, { 0x8c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x3ac2, gbc.sp());
        EXPECT(0x23bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0025
        gbc.setState(0x2c55, 0x46c9, 0x29a0, 0xcfcf, 0x700c, 0x8f8a, 0x0, 0x1);
        gbc.writeMem(0x2c55, { 0x8c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x46c9, gbc.sp());
        EXPECT(0x2c56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0026
        gbc.setState(0x84b7, 0xd393, 0x8ff0, 0x8e42, 0xb34a, 0xf831, 0x0, 0x1);
        gbc.writeMem(0x84b7, { 0x8c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xd393, gbc.sp());
        EXPECT(0x84b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x84b7));
        // 8C 0027
        gbc.setState(0x6186, 0xf9e1, 0x9280, 0x6935, 0x123f, 0x7bb9, 0x0, 0x0);
        gbc.writeMem(0x6186, { 0x8c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf9e1, gbc.sp());
        EXPECT(0x6187, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0029
        gbc.setState(0xc8bf, 0x8fb8, 0x480, 0x871d, 0xfef6, 0x41f9, 0x1, 0x1);
        gbc.writeMem(0xc8bf, { 0x8c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x8fb8, gbc.sp());
        EXPECT(0xc8c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc8bf));
        // 8C 002A
        gbc.setState(0xb02d, 0x4cd2, 0xa9a0, 0x606b, 0x8690, 0xad92, 0x0, 0x1);
        gbc.writeMem(0xb02d, { 0x8c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x4cd2, gbc.sp());
        EXPECT(0xb02e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb02d));
        // 8C 002B
        gbc.setState(0xaca5, 0x5338, 0x79c0, 0x6b34, 0xcfb7, 0x465d, 0x0, 0x1);
        gbc.writeMem(0xaca5, { 0x8c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x5338, gbc.sp());
        EXPECT(0xaca6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaca5));
        // 8C 002C
        gbc.setState(0x3a90, 0x1150, 0x5830, 0x5b86, 0x371f, 0x3cc5, 0x1, 0x0);
        gbc.writeMem(0x3a90, { 0x8c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x1150, gbc.sp());
        EXPECT(0x3a91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 002D
        gbc.setState(0x1088, 0xb432, 0x1c80, 0xf70b, 0xa621, 0x3ada, 0x1, 0x1);
        gbc.writeMem(0x1088, { 0x8c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xb432, gbc.sp());
        EXPECT(0x1089, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 002E
        gbc.setState(0x2a5d, 0x4c52, 0x760, 0x17f7, 0x3cc, 0x1946, 0x0, 0x1);
        gbc.writeMem(0x2a5d, { 0x8c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x4c52, gbc.sp());
        EXPECT(0x2a5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 002F
        gbc.setState(0x9104, 0xba37, 0x5fd0, 0x6141, 0x9f2c, 0xf4f5, 0x0, 0x0);
        gbc.writeMem(0x9104, { 0x8c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xba37, gbc.sp());
        EXPECT(0x9105, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9104));
        // 8C 0030
        gbc.setState(0x3f, 0xf048, 0xbeb0, 0x7d27, 0xa181, 0xac54, 0x0, 0x1);
        gbc.writeMem(0x3f, { 0x8c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf048, gbc.sp());
        EXPECT(0x40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0031
        gbc.setState(0xd523, 0x6a57, 0x4890, 0x17b2, 0x18f9, 0x7f21, 0x0, 0x1);
        gbc.writeMem(0xd523, { 0x8c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x6a57, gbc.sp());
        EXPECT(0xd524, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd523));
        // 8C 0032
        gbc.setState(0x1633, 0x15b9, 0x19f0, 0x7bf0, 0x7961, 0xbb4b, 0x0, 0x0);
        gbc.writeMem(0x1633, { 0x8c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x15b9, gbc.sp());
        EXPECT(0x1634, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0033
        gbc.setState(0x9181, 0x9176, 0x1ce0, 0x7e6d, 0xf39e, 0x497f, 0x1, 0x0);
        gbc.writeMem(0x9181, { 0x8c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9176, gbc.sp());
        EXPECT(0x9182, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9181));
        // 8C 0034
        gbc.setState(0x8521, 0x4784, 0x1cf0, 0x415, 0x9f3, 0x991e, 0x1, 0x1);
        gbc.writeMem(0x8521, { 0x8c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x4784, gbc.sp());
        EXPECT(0x8522, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8521));
        // 8C 0035
        gbc.setState(0x6c05, 0xfd05, 0x15c0, 0x30f7, 0xff82, 0x72ec, 0x0, 0x1);
        gbc.writeMem(0x6c05, { 0x8c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfd05, gbc.sp());
        EXPECT(0x6c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0036
        gbc.setState(0x1630, 0xbf24, 0x2fe0, 0x9e75, 0x20aa, 0x848a, 0x1, 0x0);
        gbc.writeMem(0x1630, { 0x8c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xbf24, gbc.sp());
        EXPECT(0x1631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0038
        gbc.setState(0x8b83, 0xefd1, 0xdd30, 0xbd25, 0x87b6, 0xc8e9, 0x1, 0x0);
        gbc.writeMem(0x8b83, { 0x8c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xefd1, gbc.sp());
        EXPECT(0x8b84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8b83));
        // 8C 0039
        gbc.setState(0x9361, 0x2bae, 0x2550, 0x3ae4, 0x8124, 0x2300, 0x0, 0x1);
        gbc.writeMem(0x9361, { 0x8c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x2bae, gbc.sp());
        EXPECT(0x9362, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9361));
        // 8C 003A
        gbc.setState(0xe8c3, 0xcf04, 0xb570, 0x8ca0, 0x3e65, 0x6359, 0x1, 0x1);
        gbc.writeMem(0xe8c3, { 0x8c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xcf04, gbc.sp());
        EXPECT(0xe8c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe8c3));
        // 8C 003B
        gbc.setState(0x3202, 0xf570, 0x1fd0, 0xe442, 0xe2ab, 0x7140, 0x0, 0x1);
        gbc.writeMem(0x3202, { 0x8c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xf570, gbc.sp());
        EXPECT(0x3203, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 003C
        gbc.setState(0x6aba, 0xf6ac, 0x4bd0, 0x786, 0x5f29, 0x78c1, 0x0, 0x0);
        gbc.writeMem(0x6aba, { 0x8c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0xf6ac, gbc.sp());
        EXPECT(0x6abb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 003D
        gbc.setState(0xac0a, 0xc408, 0x2fd0, 0xd464, 0xe6a3, 0xff81, 0x0, 0x1);
        gbc.writeMem(0xac0a, { 0x8c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xc408, gbc.sp());
        EXPECT(0xac0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xac0a));
        // 8C 003E
        gbc.setState(0x50af, 0x10ec, 0xdc0, 0x43f7, 0x3790, 0xa8e5, 0x1, 0x0);
        gbc.writeMem(0x50af, { 0x8c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x10ec, gbc.sp());
        EXPECT(0x50b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 003F
        gbc.setState(0x865d, 0x7a1, 0x3a50, 0x7c39, 0x3d7a, 0xa817, 0x1, 0x0);
        gbc.writeMem(0x865d, { 0x8c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x7a1, gbc.sp());
        EXPECT(0x865e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x865d));
        // 8C 0040
        gbc.setState(0x9af0, 0xb346, 0xbe0, 0x9f7f, 0xcbfb, 0x8495, 0x0, 0x0);
        gbc.writeMem(0x9af0, { 0x8c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb346, gbc.sp());
        EXPECT(0x9af1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9af0));
        // 8C 0041
        gbc.setState(0x6986, 0xdd45, 0x50d0, 0x4ecc, 0xbd10, 0x4928, 0x0, 0x1);
        gbc.writeMem(0x6986, { 0x8c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xdd45, gbc.sp());
        EXPECT(0x6987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0042
        gbc.setState(0xbc85, 0x42ef, 0x2ac0, 0xf2eb, 0xc95c, 0x18ed, 0x0, 0x1);
        gbc.writeMem(0xbc85, { 0x8c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0x42ef, gbc.sp());
        EXPECT(0xbc86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbc85));
        // 8C 0043
        gbc.setState(0x39f9, 0xca8c, 0xe990, 0xd4c1, 0xed79, 0xd733, 0x1, 0x1);
        gbc.writeMem(0x39f9, { 0x8c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xca8c, gbc.sp());
        EXPECT(0x39fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0044
        gbc.setState(0x857c, 0x9a9e, 0x82b0, 0x46e, 0x2c4, 0xed90, 0x0, 0x1);
        gbc.writeMem(0x857c, { 0x8c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9a9e, gbc.sp());
        EXPECT(0x857d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x857c));
        // 8C 0045
        gbc.setState(0x390, 0x273, 0xb7d0, 0x4b1b, 0x640a, 0x7754, 0x1, 0x0);
        gbc.writeMem(0x390, { 0x8c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x273, gbc.sp());
        EXPECT(0x391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0046
        gbc.setState(0x270e, 0xb4b0, 0x63d0, 0x82f4, 0xdceb, 0xfb37, 0x0, 0x0);
        gbc.writeMem(0x270e, { 0x8c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xb4b0, gbc.sp());
        EXPECT(0x270f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0047
        gbc.setState(0xdcb0, 0x5c27, 0xf420, 0x1a51, 0x9c6a, 0x39ff, 0x1, 0x0);
        gbc.writeMem(0xdcb0, { 0x8c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x5c27, gbc.sp());
        EXPECT(0xdcb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdcb0));
        // 8C 0048
        gbc.setState(0x264d, 0xcc29, 0x2c40, 0xaa73, 0x57ac, 0xd2a7, 0x1, 0x0);
        gbc.writeMem(0x264d, { 0x8c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xcc29, gbc.sp());
        EXPECT(0x264e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0049
        gbc.setState(0x57fb, 0x8c7a, 0x8ac0, 0x9ece, 0x5ba5, 0x936d, 0x0, 0x0);
        gbc.writeMem(0x57fb, { 0x8c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x8c7a, gbc.sp());
        EXPECT(0x57fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 004A
        gbc.setState(0x20a4, 0x5ddd, 0x9b50, 0x7f3, 0x4677, 0x848f, 0x0, 0x1);
        gbc.writeMem(0x20a4, { 0x8c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x5ddd, gbc.sp());
        EXPECT(0x20a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 004B
        gbc.setState(0xdfd9, 0x7643, 0xf560, 0x9a7, 0xfbaa, 0x96f, 0x1, 0x0);
        gbc.writeMem(0xdfd9, { 0x8c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7643, gbc.sp());
        EXPECT(0xdfda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdfd9));
        // 8C 004C
        gbc.setState(0x64f5, 0x338, 0xa140, 0xa019, 0x4fb9, 0xb08f, 0x0, 0x1);
        gbc.writeMem(0x64f5, { 0x8c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x338, gbc.sp());
        EXPECT(0x64f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 004D
        gbc.setState(0x8d92, 0x6f78, 0x17c0, 0x8e94, 0x2c47, 0xbeb2, 0x1, 0x0);
        gbc.writeMem(0x8d92, { 0x8c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x6f78, gbc.sp());
        EXPECT(0x8d93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8d92));
        // 8C 004E
        gbc.setState(0x375f, 0xdb40, 0x6840, 0x6407, 0xc1a6, 0x86f5, 0x0, 0x0);
        gbc.writeMem(0x375f, { 0x8c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xdb40, gbc.sp());
        EXPECT(0x3760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 004F
        gbc.setState(0xab1d, 0x52fe, 0x1a30, 0x3db2, 0xebb8, 0xf794, 0x0, 0x0);
        gbc.writeMem(0xab1d, { 0x8c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x52fe, gbc.sp());
        EXPECT(0xab1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xab1d));
        // 8C 0050
        gbc.setState(0x269c, 0xc682, 0x4e40, 0x9695, 0x7921, 0x39b8, 0x1, 0x1);
        gbc.writeMem(0x269c, { 0x8c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xc682, gbc.sp());
        EXPECT(0x269d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0051
        gbc.setState(0xa446, 0x2f06, 0x83e0, 0x9a42, 0xc3a4, 0x8c74, 0x1, 0x0);
        gbc.writeMem(0xa446, { 0x8c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x2f06, gbc.sp());
        EXPECT(0xa447, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa446));
        // 8C 0052
        gbc.setState(0xb719, 0x3d7e, 0x5bf0, 0x4b53, 0x9d16, 0xea94, 0x1, 0x1);
        gbc.writeMem(0xb719, { 0x8c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x3d7e, gbc.sp());
        EXPECT(0xb71a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb719));
        // 8C 0053
        gbc.setState(0xbe2b, 0xa56a, 0x970, 0x2c41, 0x4d8b, 0x497c, 0x0, 0x0);
        gbc.writeMem(0xbe2b, { 0x8c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xa56a, gbc.sp());
        EXPECT(0xbe2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbe2b));
        // 8C 0054
        gbc.setState(0x1a27, 0x8dfb, 0x3c80, 0x3b71, 0xbaa2, 0xd3f0, 0x0, 0x0);
        gbc.writeMem(0x1a27, { 0x8c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x8dfb, gbc.sp());
        EXPECT(0x1a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0055
        gbc.setState(0x2c0d, 0xb467, 0xaae0, 0x597b, 0x4cff, 0x470c, 0x1, 0x0);
        gbc.writeMem(0x2c0d, { 0x8c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb467, gbc.sp());
        EXPECT(0x2c0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0056
        gbc.setState(0x2bd5, 0xa212, 0xa8a0, 0x9d08, 0x6852, 0xd739, 0x0, 0x1);
        gbc.writeMem(0x2bd5, { 0x8c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xa212, gbc.sp());
        EXPECT(0x2bd6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0057
        gbc.setState(0xe8e5, 0x14d8, 0xd590, 0x3f30, 0xac58, 0x879d, 0x1, 0x0);
        gbc.writeMem(0xe8e5, { 0x8c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x14d8, gbc.sp());
        EXPECT(0xe8e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe8e5));
        // 8C 0058
        gbc.setState(0xc866, 0xa806, 0xf2d0, 0x618e, 0xd6, 0xf927, 0x1, 0x1);
        gbc.writeMem(0xc866, { 0x8c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0xa806, gbc.sp());
        EXPECT(0xc867, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc866));
        // 8C 0059
        gbc.setState(0x9893, 0xad1c, 0xdb30, 0xbe88, 0xa1e, 0xd8cc, 0x1, 0x1);
        gbc.writeMem(0x9893, { 0x8c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xad1c, gbc.sp());
        EXPECT(0x9894, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9893));
        // 8C 005A
        gbc.setState(0x88f4, 0xf416, 0x46c0, 0xcbd2, 0xcc67, 0xfad3, 0x0, 0x1);
        gbc.writeMem(0x88f4, { 0x8c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xf416, gbc.sp());
        EXPECT(0x88f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x88f4));
        // 8C 005B
        gbc.setState(0xa5c4, 0xf491, 0xbbd0, 0x4171, 0x6bd8, 0xf341, 0x1, 0x1);
        gbc.writeMem(0xa5c4, { 0x8c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xf491, gbc.sp());
        EXPECT(0xa5c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa5c4));
        // 8C 005C
        gbc.setState(0x9269, 0x762d, 0x220, 0xa364, 0xaa80, 0xf642, 0x1, 0x1);
        gbc.writeMem(0x9269, { 0x8c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0x762d, gbc.sp());
        EXPECT(0x926a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9269));
        // 8C 005E
        gbc.setState(0x1277, 0xa1d7, 0xa8b0, 0x31b3, 0x5b14, 0xa820, 0x1, 0x1);
        gbc.writeMem(0x1277, { 0x8c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xa1d7, gbc.sp());
        EXPECT(0x1278, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 005F
        gbc.setState(0x6c5f, 0x7203, 0x8d70, 0x8c32, 0xc67c, 0x900e, 0x1, 0x0);
        gbc.writeMem(0x6c5f, { 0x8c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x7203, gbc.sp());
        EXPECT(0x6c60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0061
        gbc.setState(0xeb5f, 0x538f, 0x4b0, 0x398c, 0x825e, 0xdc56, 0x1, 0x1);
        gbc.writeMem(0xeb5f, { 0x8c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x538f, gbc.sp());
        EXPECT(0xeb60, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xeb5f));
        // 8C 0062
        gbc.setState(0x1909, 0xa458, 0xa0e0, 0xe61a, 0x756f, 0x7a10, 0x1, 0x0);
        gbc.writeMem(0x1909, { 0x8c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xa458, gbc.sp());
        EXPECT(0x190a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0063
        gbc.setState(0x8d3b, 0xce33, 0x1210, 0xf612, 0xc947, 0x492a, 0x1, 0x1);
        gbc.writeMem(0x8d3b, { 0x8c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xce33, gbc.sp());
        EXPECT(0x8d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8d3b));
        // 8C 0064
        gbc.setState(0x1245, 0xa0d7, 0xa8a0, 0xb72a, 0xf736, 0xabb, 0x0, 0x0);
        gbc.writeMem(0x1245, { 0x8c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xa0d7, gbc.sp());
        EXPECT(0x1246, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0066
        gbc.setState(0xaaba, 0x24ef, 0x9260, 0xc820, 0xadb9, 0xdc28, 0x1, 0x1);
        gbc.writeMem(0xaaba, { 0x8c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x24ef, gbc.sp());
        EXPECT(0xaabb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaaba));
        // 8C 0067
        gbc.setState(0x7d65, 0x5f84, 0xfe50, 0x240d, 0x856c, 0x736f, 0x0, 0x1);
        gbc.writeMem(0x7d65, { 0x8c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5f84, gbc.sp());
        EXPECT(0x7d66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0068
        gbc.setState(0x6e0b, 0x310, 0x1690, 0x9daf, 0xa299, 0x51d0, 0x0, 0x1);
        gbc.writeMem(0x6e0b, { 0x8c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x310, gbc.sp());
        EXPECT(0x6e0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0069
        gbc.setState(0x61e7, 0xf41b, 0x810, 0x4992, 0x1127, 0xf5ff, 0x0, 0x0);
        gbc.writeMem(0x61e7, { 0x8c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xf41b, gbc.sp());
        EXPECT(0x61e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 006A
        gbc.setState(0xa370, 0x1ed5, 0xd6a0, 0xc139, 0x2d60, 0x30d7, 0x0, 0x0);
        gbc.writeMem(0xa370, { 0x8c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0x1ed5, gbc.sp());
        EXPECT(0xa371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa370));
        // 8C 006C
        gbc.setState(0x7288, 0xcc17, 0xaf60, 0xa12c, 0x8c34, 0xd3f1, 0x1, 0x0);
        gbc.writeMem(0x7288, { 0x8c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xcc17, gbc.sp());
        EXPECT(0x7289, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 006D
        gbc.setState(0x3191, 0x7c1c, 0x6730, 0x2dbc, 0x9f96, 0x4f2c, 0x0, 0x1);
        gbc.writeMem(0x3191, { 0x8c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7c1c, gbc.sp());
        EXPECT(0x3192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 006E
        gbc.setState(0x75ff, 0xe907, 0xd4b0, 0xc818, 0xa041, 0xca7c, 0x1, 0x1);
        gbc.writeMem(0x75ff, { 0x8c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xe907, gbc.sp());
        EXPECT(0x7600, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 006F
        gbc.setState(0x2bb9, 0xfc08, 0xfb10, 0x1f1a, 0x2ffe, 0xd7a, 0x0, 0x0);
        gbc.writeMem(0x2bb9, { 0x8c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xfc08, gbc.sp());
        EXPECT(0x2bba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0070
        gbc.setState(0x6aee, 0xbf57, 0x83e0, 0x5506, 0x601f, 0x2524, 0x1, 0x1);
        gbc.writeMem(0x6aee, { 0x8c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbf57, gbc.sp());
        EXPECT(0x6aef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0071
        gbc.setState(0xdd70, 0x9fc2, 0x58e0, 0x99a5, 0xac53, 0x61c8, 0x1, 0x1);
        gbc.writeMem(0xdd70, { 0x8c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x9fc2, gbc.sp());
        EXPECT(0xdd71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdd70));
        // 8C 0072
        gbc.setState(0x6e65, 0xd82, 0x2bf0, 0x4d49, 0x37ec, 0x3bfe, 0x1, 0x1);
        gbc.writeMem(0x6e65, { 0x8c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0x6e66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0074
        gbc.setState(0x9afe, 0xd455, 0xedd0, 0xf21, 0xe6cd, 0x7675, 0x1, 0x0);
        gbc.writeMem(0x9afe, { 0x8c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xd455, gbc.sp());
        EXPECT(0x9aff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9afe));
        // 8C 0076
        gbc.setState(0x6b83, 0x5371, 0x9bf0, 0xec61, 0xc654, 0xd8bb, 0x0, 0x1);
        gbc.writeMem(0x6b83, { 0x8c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x5371, gbc.sp());
        EXPECT(0x6b84, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0077
        gbc.setState(0x449d, 0xef9, 0xb760, 0x7662, 0xfb50, 0x4935, 0x0, 0x0);
        gbc.writeMem(0x449d, { 0x8c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xef9, gbc.sp());
        EXPECT(0x449e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0078
        gbc.setState(0x1658, 0x7ffd, 0x2dc0, 0x16b4, 0x5cf1, 0x6f9, 0x1, 0x1);
        gbc.writeMem(0x1658, { 0x8c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7ffd, gbc.sp());
        EXPECT(0x1659, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0079
        gbc.setState(0xdb64, 0x9a6d, 0x7740, 0xea6f, 0x6ff3, 0x4227, 0x0, 0x0);
        gbc.writeMem(0xdb64, { 0x8c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x9a6d, gbc.sp());
        EXPECT(0xdb65, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdb64));
        // 8C 007A
        gbc.setState(0x658d, 0x435f, 0xb030, 0xedc, 0xb52b, 0xf0c3, 0x0, 0x1);
        gbc.writeMem(0x658d, { 0x8c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x435f, gbc.sp());
        EXPECT(0x658e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 007B
        gbc.setState(0x2470, 0x3663, 0x350, 0xa354, 0xfa0c, 0x43ff, 0x1, 0x0);
        gbc.writeMem(0x2470, { 0x8c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x3663, gbc.sp());
        EXPECT(0x2471, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 007C
        gbc.setState(0xedde, 0x3aee, 0x17b0, 0x1755, 0xf17, 0xb263, 0x1, 0x0);
        gbc.writeMem(0xedde, { 0x8c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3aee, gbc.sp());
        EXPECT(0xeddf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xedde));
        // 8C 007D
        gbc.setState(0x823e, 0x4e55, 0xd990, 0xed3a, 0xc898, 0x6c4, 0x0, 0x0);
        gbc.writeMem(0x823e, { 0x8c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4e55, gbc.sp());
        EXPECT(0x823f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x823e));
        // 8C 007E
        gbc.setState(0xb322, 0x6551, 0xcc60, 0xa41a, 0x2094, 0x115f, 0x0, 0x1);
        gbc.writeMem(0xb322, { 0x8c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x6551, gbc.sp());
        EXPECT(0xb323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb322));
        // 8C 007F
        gbc.setState(0xbb37, 0xd9de, 0x45d0, 0x7a25, 0x5955, 0x1ef6, 0x1, 0x0);
        gbc.writeMem(0xbb37, { 0x8c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xd9de, gbc.sp());
        EXPECT(0xbb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbb37));
        // 8C 0080
        gbc.setState(0x5004, 0x6b9a, 0xd40, 0x5cc5, 0xe1f2, 0xdb99, 0x0, 0x0);
        gbc.writeMem(0x5004, { 0x8c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x6b9a, gbc.sp());
        EXPECT(0x5005, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0081
        gbc.setState(0x5b8, 0xdbc0, 0x3a90, 0xc142, 0xbd6e, 0x8bfb, 0x1, 0x1);
        gbc.writeMem(0x5b8, { 0x8c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdbc0, gbc.sp());
        EXPECT(0x5b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0082
        gbc.setState(0x9f43, 0xdcac, 0x730, 0x19e3, 0x590f, 0xd7d6, 0x0, 0x1);
        gbc.writeMem(0x9f43, { 0x8c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xdcac, gbc.sp());
        EXPECT(0x9f44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9f43));
        // 8C 0085
        gbc.setState(0x791f, 0x7ce3, 0xa4c0, 0x36d, 0x7e9f, 0xaddf, 0x0, 0x1);
        gbc.writeMem(0x791f, { 0x8c });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x7ce3, gbc.sp());
        EXPECT(0x7920, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0086
        gbc.setState(0x8296, 0x76ca, 0x89b0, 0x99a, 0x5743, 0xb639, 0x1, 0x0);
        gbc.writeMem(0x8296, { 0x8c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x76ca, gbc.sp());
        EXPECT(0x8297, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8296));
        // 8C 0087
        gbc.setState(0xba4a, 0x73e5, 0x8b0, 0xf2ca, 0xa8bd, 0x957, 0x1, 0x0);
        gbc.writeMem(0xba4a, { 0x8c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x73e5, gbc.sp());
        EXPECT(0xba4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xba4a));
        // 8C 0088
        gbc.setState(0x7062, 0xa59d, 0xa0, 0xeddf, 0x66f0, 0xee32, 0x1, 0x1);
        gbc.writeMem(0x7062, { 0x8c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa59d, gbc.sp());
        EXPECT(0x7063, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0089
        gbc.setState(0x3b32, 0x7f3e, 0xc000, 0x8bd, 0x4f19, 0x3a69, 0x1, 0x0);
        gbc.writeMem(0x3b32, { 0x8c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x7f3e, gbc.sp());
        EXPECT(0x3b33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 008A
        gbc.setState(0xa00b, 0x561c, 0xb490, 0xe42d, 0xd3e7, 0xd251, 0x0, 0x0);
        gbc.writeMem(0xa00b, { 0x8c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x561c, gbc.sp());
        EXPECT(0xa00c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa00b));
        // 8C 008B
        gbc.setState(0x569c, 0x21d4, 0xda20, 0x7fe4, 0xbaa1, 0xbc5d, 0x0, 0x1);
        gbc.writeMem(0x569c, { 0x8c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x21d4, gbc.sp());
        EXPECT(0x569d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 008C
        gbc.setState(0x5789, 0xcc52, 0x1af0, 0xa2a9, 0xbbd3, 0x71a0, 0x1, 0x0);
        gbc.writeMem(0x5789, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xcc52, gbc.sp());
        EXPECT(0x578a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 008D
        gbc.setState(0x526, 0x25ba, 0x1a70, 0xaddb, 0x34c9, 0x2e50, 0x1, 0x1);
        gbc.writeMem(0x526, { 0x8c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x25ba, gbc.sp());
        EXPECT(0x527, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 008E
        gbc.setState(0xd1f9, 0x4de4, 0xbc80, 0x3b5a, 0xca02, 0xbb2f, 0x0, 0x0);
        gbc.writeMem(0xd1f9, { 0x8c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x4de4, gbc.sp());
        EXPECT(0xd1fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd1f9));
        // 8C 0090
        gbc.setState(0xb823, 0xf789, 0x6ee0, 0x4b8e, 0x6fe8, 0x4745, 0x0, 0x0);
        gbc.writeMem(0xb823, { 0x8c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xf789, gbc.sp());
        EXPECT(0xb824, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb823));
        // 8C 0091
        gbc.setState(0x5bfc, 0xe0f6, 0xf490, 0xb1f2, 0x5a11, 0x5200, 0x1, 0x1);
        gbc.writeMem(0x5bfc, { 0x8c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xe0f6, gbc.sp());
        EXPECT(0x5bfd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0092
        gbc.setState(0xaf28, 0xb22a, 0x6ab0, 0x46d, 0x46c4, 0x6879, 0x1, 0x0);
        gbc.writeMem(0xaf28, { 0x8c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xb22a, gbc.sp());
        EXPECT(0xaf29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaf28));
        // 8C 0093
        gbc.setState(0x555e, 0x9280, 0xec40, 0x1d59, 0xdb99, 0x9f2d, 0x0, 0x0);
        gbc.writeMem(0x555e, { 0x8c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x9280, gbc.sp());
        EXPECT(0x555f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0094
        gbc.setState(0x124, 0x4448, 0xdd10, 0xde79, 0x6690, 0xf0ca, 0x0, 0x0);
        gbc.writeMem(0x124, { 0x8c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x4448, gbc.sp());
        EXPECT(0x125, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0096
        gbc.setState(0x54c7, 0x4e5f, 0xc950, 0x1598, 0xa4d2, 0xfc0c, 0x0, 0x0);
        gbc.writeMem(0x54c7, { 0x8c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x4e5f, gbc.sp());
        EXPECT(0x54c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0097
        gbc.setState(0xd4b4, 0xbd29, 0xb30, 0xf531, 0x190d, 0x4a26, 0x1, 0x0);
        gbc.writeMem(0xd4b4, { 0x8c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xbd29, gbc.sp());
        EXPECT(0xd4b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd4b4));
        // 8C 0098
        gbc.setState(0xdd92, 0x9de, 0xade0, 0x5452, 0xff58, 0x9c7f, 0x0, 0x0);
        gbc.writeMem(0xdd92, { 0x8c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9de, gbc.sp());
        EXPECT(0xdd93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdd92));
        // 8C 0099
        gbc.setState(0x3f8e, 0x2a67, 0xb770, 0x4274, 0x2aa2, 0xa556, 0x1, 0x1);
        gbc.writeMem(0x3f8e, { 0x8c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x2a67, gbc.sp());
        EXPECT(0x3f8f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 009A
        gbc.setState(0x98b6, 0x41a8, 0x6810, 0x865c, 0x4f1e, 0xf996, 0x0, 0x1);
        gbc.writeMem(0x98b6, { 0x8c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x41a8, gbc.sp());
        EXPECT(0x98b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x98b6));
        // 8C 009B
        gbc.setState(0x63b2, 0xf18a, 0xee90, 0xfa3f, 0x136, 0x2e76, 0x0, 0x1);
        gbc.writeMem(0x63b2, { 0x8c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf18a, gbc.sp());
        EXPECT(0x63b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 009C
        gbc.setState(0x1433, 0xbc04, 0x9100, 0xcb00, 0x3303, 0x182c, 0x1, 0x1);
        gbc.writeMem(0x1433, { 0x8c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xbc04, gbc.sp());
        EXPECT(0x1434, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 009D
        gbc.setState(0xa92f, 0x285d, 0x4f90, 0xb253, 0x5657, 0xce92, 0x1, 0x0);
        gbc.writeMem(0xa92f, { 0x8c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x285d, gbc.sp());
        EXPECT(0xa930, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa92f));
        // 8C 009F
        gbc.setState(0xa485, 0x240b, 0xf690, 0x6115, 0x3564, 0xa99a, 0x1, 0x0);
        gbc.writeMem(0xa485, { 0x8c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x240b, gbc.sp());
        EXPECT(0xa486, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa485));
        // 8C 00A0
        gbc.setState(0xebd, 0x7c0e, 0x6170, 0xd440, 0x5af1, 0xb79e, 0x0, 0x0);
        gbc.writeMem(0xebd, { 0x8c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x7c0e, gbc.sp());
        EXPECT(0xebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00A1
        gbc.setState(0xabdc, 0xe5d1, 0xaaa0, 0x2e71, 0x514e, 0x2c4e, 0x0, 0x1);
        gbc.writeMem(0xabdc, { 0x8c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0xe5d1, gbc.sp());
        EXPECT(0xabdd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xabdc));
        // 8C 00A2
        gbc.setState(0x556f, 0x4ca7, 0x6430, 0xe09b, 0x964f, 0x69ab, 0x0, 0x0);
        gbc.writeMem(0x556f, { 0x8c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x4ca7, gbc.sp());
        EXPECT(0x5570, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00A3
        gbc.setState(0x904f, 0x43b3, 0x9ab0, 0xcb47, 0x38bf, 0x9a9f, 0x0, 0x0);
        gbc.writeMem(0x904f, { 0x8c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x43b3, gbc.sp());
        EXPECT(0x9050, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x904f));
        // 8C 00A4
        gbc.setState(0xacd6, 0xdd4d, 0x1310, 0x9d3b, 0x9eca, 0x91e9, 0x1, 0x0);
        gbc.writeMem(0xacd6, { 0x8c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xdd4d, gbc.sp());
        EXPECT(0xacd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xacd6));
        // 8C 00A5
        gbc.setState(0x20bf, 0x1cc7, 0x4190, 0x666e, 0xdc6c, 0xcf1d, 0x0, 0x0);
        gbc.writeMem(0x20bf, { 0x8c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x1cc7, gbc.sp());
        EXPECT(0x20c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00A6
        gbc.setState(0x86f5, 0x66eb, 0x8bb0, 0x4b4, 0xefaf, 0xc7a9, 0x0, 0x0);
        gbc.writeMem(0x86f5, { 0x8c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x66eb, gbc.sp());
        EXPECT(0x86f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x86f5));
        // 8C 00A7
        gbc.setState(0xe48a, 0xcfc4, 0x7a30, 0x76f3, 0x3ee1, 0xf882, 0x1, 0x1);
        gbc.writeMem(0xe48a, { 0x8c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcfc4, gbc.sp());
        EXPECT(0xe48b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe48a));
        // 8C 00A8
        gbc.setState(0x7fe4, 0x5036, 0xe510, 0xc20f, 0x818, 0x8463, 0x0, 0x0);
        gbc.writeMem(0x7fe4, { 0x8c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x5036, gbc.sp());
        EXPECT(0x7fe5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00A9
        gbc.setState(0xd131, 0x3547, 0x1350, 0x759, 0x363e, 0x2f1e, 0x0, 0x0);
        gbc.writeMem(0xd131, { 0x8c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3547, gbc.sp());
        EXPECT(0xd132, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd131));
        // 8C 00AA
        gbc.setState(0x34ae, 0x54bd, 0xf600, 0x40e1, 0xfcc, 0x1601, 0x1, 0x1);
        gbc.writeMem(0x34ae, { 0x8c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x54bd, gbc.sp());
        EXPECT(0x34af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00AB
        gbc.setState(0x9370, 0x3cf5, 0x55d0, 0x2cde, 0xaee8, 0xb1d8, 0x1, 0x0);
        gbc.writeMem(0x9370, { 0x8c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x3cf5, gbc.sp());
        EXPECT(0x9371, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9370));
        // 8C 00AC
        gbc.setState(0x6ed5, 0xfcb8, 0xee30, 0xac7a, 0x8fd9, 0xa1f2, 0x1, 0x0);
        gbc.writeMem(0x6ed5, { 0x8c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xfcb8, gbc.sp());
        EXPECT(0x6ed6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00AD
        gbc.setState(0x418b, 0x56dc, 0xbb50, 0xbc7f, 0xbd6c, 0x6b26, 0x0, 0x1);
        gbc.writeMem(0x418b, { 0x8c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x56dc, gbc.sp());
        EXPECT(0x418c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00AE
        gbc.setState(0xc390, 0x789c, 0x9420, 0xd173, 0x8fb9, 0x9612, 0x1, 0x1);
        gbc.writeMem(0xc390, { 0x8c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x789c, gbc.sp());
        EXPECT(0xc391, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc390));
        // 8C 00AF
        gbc.setState(0x5d84, 0xeefc, 0xc7a0, 0x2911, 0x985d, 0x7f78, 0x0, 0x1);
        gbc.writeMem(0x5d84, { 0x8c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xeefc, gbc.sp());
        EXPECT(0x5d85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00B0
        gbc.setState(0x9848, 0xace5, 0x4650, 0x50ee, 0xa47, 0x936e, 0x1, 0x1);
        gbc.writeMem(0x9848, { 0x8c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xace5, gbc.sp());
        EXPECT(0x9849, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9848));
        // 8C 00B1
        gbc.setState(0x33c1, 0x3da1, 0xd3a0, 0xc599, 0x880c, 0xa9ee, 0x0, 0x0);
        gbc.writeMem(0x33c1, { 0x8c });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x3da1, gbc.sp());
        EXPECT(0x33c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00B2
        gbc.setState(0xd2ee, 0x8694, 0x4400, 0xaf34, 0x400, 0x8eb0, 0x1, 0x0);
        gbc.writeMem(0xd2ee, { 0x8c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x8694, gbc.sp());
        EXPECT(0xd2ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd2ee));
        // 8C 00B3
        gbc.setState(0x1664, 0xb255, 0x1250, 0x2b16, 0x1616, 0x28f1, 0x1, 0x0);
        gbc.writeMem(0x1664, { 0x8c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xb255, gbc.sp());
        EXPECT(0x1665, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00B4
        gbc.setState(0xc50d, 0xe140, 0x1d20, 0xae66, 0xb419, 0x35e1, 0x1, 0x0);
        gbc.writeMem(0xc50d, { 0x8c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe140, gbc.sp());
        EXPECT(0xc50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc50d));
        // 8C 00B5
        gbc.setState(0xa90c, 0x9542, 0x5890, 0x8d7c, 0x904b, 0xcaa7, 0x0, 0x1);
        gbc.writeMem(0xa90c, { 0x8c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9542, gbc.sp());
        EXPECT(0xa90d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa90c));
        // 8C 00B6
        gbc.setState(0x7ed1, 0xaf84, 0xb010, 0x616e, 0x9318, 0x4194, 0x1, 0x0);
        gbc.writeMem(0x7ed1, { 0x8c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0xaf84, gbc.sp());
        EXPECT(0x7ed2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00B7
        gbc.setState(0x1906, 0xec11, 0xce50, 0x21f4, 0x232e, 0x70ec, 0x0, 0x1);
        gbc.writeMem(0x1906, { 0x8c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xec11, gbc.sp());
        EXPECT(0x1907, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00B8
        gbc.setState(0xc306, 0xf9a7, 0x4870, 0x7685, 0x843c, 0x7774, 0x1, 0x1);
        gbc.writeMem(0xc306, { 0x8c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xf9a7, gbc.sp());
        EXPECT(0xc307, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc306));
        // 8C 00B9
        gbc.setState(0xa6c7, 0x8bf1, 0x3670, 0x9807, 0xb8b5, 0x704, 0x1, 0x0);
        gbc.writeMem(0xa6c7, { 0x8c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x8bf1, gbc.sp());
        EXPECT(0xa6c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa6c7));
        // 8C 00BA
        gbc.setState(0xe87d, 0x5c71, 0x1d30, 0x4092, 0x31d, 0x920d, 0x0, 0x0);
        gbc.writeMem(0xe87d, { 0x8c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x5c71, gbc.sp());
        EXPECT(0xe87e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe87d));
        // 8C 00BB
        gbc.setState(0x6cbe, 0xf3f1, 0xaca0, 0xdd01, 0xd309, 0xbc0f, 0x0, 0x1);
        gbc.writeMem(0x6cbe, { 0x8c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xf3f1, gbc.sp());
        EXPECT(0x6cbf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00BC
        gbc.setState(0x8942, 0xa911, 0x8db0, 0x74d4, 0xbc8a, 0x321, 0x0, 0x0);
        gbc.writeMem(0x8942, { 0x8c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xa911, gbc.sp());
        EXPECT(0x8943, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8942));
        // 8C 00BD
        gbc.setState(0xe06b, 0x463f, 0xdd70, 0xbfaf, 0xb55, 0x9d8f, 0x0, 0x1);
        gbc.writeMem(0xe06b, { 0x8c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x463f, gbc.sp());
        EXPECT(0xe06c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe06b));
        // 8C 00BE
        gbc.setState(0x39b7, 0x9cbb, 0xf290, 0x2099, 0xb7a7, 0x35c7, 0x0, 0x1);
        gbc.writeMem(0x39b7, { 0x8c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x9cbb, gbc.sp());
        EXPECT(0x39b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00BF
        gbc.setState(0xb43f, 0x9743, 0x6de0, 0x48b2, 0x5f67, 0x789b, 0x1, 0x1);
        gbc.writeMem(0xb43f, { 0x8c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x9743, gbc.sp());
        EXPECT(0xb440, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb43f));
        // 8C 00C0
        gbc.setState(0xdd9b, 0x758f, 0xd590, 0xbf04, 0xef2, 0xe1fc, 0x0, 0x1);
        gbc.writeMem(0xdd9b, { 0x8c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x758f, gbc.sp());
        EXPECT(0xdd9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdd9b));
        // 8C 00C2
        gbc.setState(0x619b, 0x295d, 0xa9d0, 0x6f77, 0x59ce, 0xa54f, 0x1, 0x0);
        gbc.writeMem(0x619b, { 0x8c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x295d, gbc.sp());
        EXPECT(0x619c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00C3
        gbc.setState(0x247c, 0x94f3, 0xdc90, 0xf84b, 0x94ee, 0xb9, 0x0, 0x0);
        gbc.writeMem(0x247c, { 0x8c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x94f3, gbc.sp());
        EXPECT(0x247d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00C4
        gbc.setState(0xd335, 0x513b, 0xbbe0, 0x8259, 0xf894, 0x4567, 0x1, 0x1);
        gbc.writeMem(0xd335, { 0x8c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x513b, gbc.sp());
        EXPECT(0xd336, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd335));
        // 8C 00C5
        gbc.setState(0xbe79, 0xe36b, 0x620, 0x7e1c, 0x8ce0, 0x90e6, 0x0, 0x1);
        gbc.writeMem(0xbe79, { 0x8c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xe36b, gbc.sp());
        EXPECT(0xbe7a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbe79));
        // 8C 00C6
        gbc.setState(0xa4e8, 0x27b3, 0xf110, 0x9d0, 0x8824, 0x6a15, 0x1, 0x0);
        gbc.writeMem(0xa4e8, { 0x8c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x27b3, gbc.sp());
        EXPECT(0xa4e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa4e8));
        // 8C 00C7
        gbc.setState(0xe97c, 0x28ef, 0x1d10, 0xaf74, 0xe587, 0x5a1d, 0x0, 0x0);
        gbc.writeMem(0xe97c, { 0x8c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x28ef, gbc.sp());
        EXPECT(0xe97d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe97c));
        // 8C 00C8
        gbc.setState(0x7685, 0x2800, 0x85f0, 0xc06, 0xd313, 0xb28f, 0x1, 0x1);
        gbc.writeMem(0x7685, { 0x8c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x2800, gbc.sp());
        EXPECT(0x7686, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00C9
        gbc.setState(0x84d3, 0x8b4f, 0xb750, 0x6a6f, 0x97c6, 0x5fdb, 0x0, 0x1);
        gbc.writeMem(0x84d3, { 0x8c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x8b4f, gbc.sp());
        EXPECT(0x84d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x84d3));
        // 8C 00CA
        gbc.setState(0xc849, 0xdd1f, 0x1760, 0xf3c2, 0x4c5e, 0xa1e6, 0x1, 0x0);
        gbc.writeMem(0xc849, { 0x8c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xdd1f, gbc.sp());
        EXPECT(0xc84a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc849));
        // 8C 00CB
        gbc.setState(0xc959, 0xee53, 0xe340, 0x8164, 0x4be7, 0x2a81, 0x1, 0x0);
        gbc.writeMem(0xc959, { 0x8c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xee53, gbc.sp());
        EXPECT(0xc95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc959));
        // 8C 00CC
        gbc.setState(0x383a, 0xf132, 0xd170, 0xd5b9, 0xf62, 0x2984, 0x0, 0x0);
        gbc.writeMem(0x383a, { 0x8c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xf132, gbc.sp());
        EXPECT(0x383b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00CD
        gbc.setState(0x7c05, 0x1a82, 0x2d0, 0xc1e3, 0x9fb8, 0xb5db, 0x1, 0x0);
        gbc.writeMem(0x7c05, { 0x8c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x1a82, gbc.sp());
        EXPECT(0x7c06, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00CE
        gbc.setState(0x2ce5, 0x22bc, 0x90d0, 0xfcff, 0x5b0b, 0x4ce8, 0x1, 0x0);
        gbc.writeMem(0x2ce5, { 0x8c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x22bc, gbc.sp());
        EXPECT(0x2ce6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00CF
        gbc.setState(0xb84, 0x7028, 0x20f0, 0xb405, 0x440f, 0xd3b0, 0x1, 0x1);
        gbc.writeMem(0xb84, { 0x8c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x7028, gbc.sp());
        EXPECT(0xb85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00D0
        gbc.setState(0x8527, 0x2a32, 0xe8e0, 0x5146, 0xb31e, 0x3573, 0x1, 0x0);
        gbc.writeMem(0x8527, { 0x8c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x2a32, gbc.sp());
        EXPECT(0x8528, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8527));
        // 8C 00D1
        gbc.setState(0x7801, 0x8c90, 0x2700, 0xcdda, 0x64a7, 0x4e78, 0x1, 0x1);
        gbc.writeMem(0x7801, { 0x8c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x8c90, gbc.sp());
        EXPECT(0x7802, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00D2
        gbc.setState(0x2df6, 0x7ac, 0xaa20, 0x8597, 0x83f7, 0xb7dd, 0x1, 0x0);
        gbc.writeMem(0x2df6, { 0x8c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7ac, gbc.sp());
        EXPECT(0x2df7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00D3
        gbc.setState(0x5e73, 0x13b1, 0xe8b0, 0x5fcc, 0x4a2c, 0x5131, 0x0, 0x1);
        gbc.writeMem(0x5e73, { 0x8c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0x13b1, gbc.sp());
        EXPECT(0x5e74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00D4
        gbc.setState(0x7c4e, 0x6ce0, 0x2c50, 0xe5ea, 0x8231, 0x9872, 0x1, 0x1);
        gbc.writeMem(0x7c4e, { 0x8c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6ce0, gbc.sp());
        EXPECT(0x7c4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00D5
        gbc.setState(0x83ca, 0xa98f, 0xa100, 0x18d0, 0x8ee2, 0x6da1, 0x1, 0x1);
        gbc.writeMem(0x83ca, { 0x8c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa98f, gbc.sp());
        EXPECT(0x83cb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x83ca));
        // 8C 00D6
        gbc.setState(0xa4a7, 0xfc61, 0xf090, 0x7b2a, 0xa4f2, 0x970b, 0x1, 0x0);
        gbc.writeMem(0xa4a7, { 0x8c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xfc61, gbc.sp());
        EXPECT(0xa4a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa4a7));
        // 8C 00D7
        gbc.setState(0x3b8f, 0xf0fa, 0x43c0, 0xd54c, 0xa2de, 0x985a, 0x1, 0x0);
        gbc.writeMem(0x3b8f, { 0x8c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf0fa, gbc.sp());
        EXPECT(0x3b90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00D8
        gbc.setState(0xa5ac, 0x8408, 0x400, 0xfa3d, 0xa30c, 0xe428, 0x1, 0x0);
        gbc.writeMem(0xa5ac, { 0x8c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x8408, gbc.sp());
        EXPECT(0xa5ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa5ac));
        // 8C 00D9
        gbc.setState(0x3cb0, 0xa0ab, 0x6100, 0xa6c9, 0xaf65, 0x72f2, 0x0, 0x1);
        gbc.writeMem(0x3cb0, { 0x8c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xa0ab, gbc.sp());
        EXPECT(0x3cb1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00DA
        gbc.setState(0x3cdc, 0xc918, 0x4990, 0xd2fe, 0x7998, 0x1992, 0x1, 0x0);
        gbc.writeMem(0x3cdc, { 0x8c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xc918, gbc.sp());
        EXPECT(0x3cdd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00DB
        gbc.setState(0x4583, 0x48ef, 0x4b70, 0x22fe, 0xa5ec, 0xf387, 0x1, 0x1);
        gbc.writeMem(0x4583, { 0x8c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x48ef, gbc.sp());
        EXPECT(0x4584, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00DC
        gbc.setState(0x619d, 0xbadc, 0xa830, 0x4eb1, 0x1645, 0xe9a5, 0x1, 0x0);
        gbc.writeMem(0x619d, { 0x8c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xbadc, gbc.sp());
        EXPECT(0x619e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00DD
        gbc.setState(0xebcb, 0x179, 0x5690, 0x38e1, 0xe307, 0x4721, 0x1, 0x0);
        gbc.writeMem(0xebcb, { 0x8c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x179, gbc.sp());
        EXPECT(0xebcc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xebcb));
        // 8C 00DE
        gbc.setState(0x507d, 0x1d16, 0xeee0, 0xb239, 0xda25, 0x2094, 0x0, 0x1);
        gbc.writeMem(0x507d, { 0x8c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x1d16, gbc.sp());
        EXPECT(0x507e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00DF
        gbc.setState(0x3660, 0x385f, 0x4110, 0x3eaa, 0xbf97, 0xda12, 0x1, 0x0);
        gbc.writeMem(0x3660, { 0x8c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x385f, gbc.sp());
        EXPECT(0x3661, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00E0
        gbc.setState(0xaa0e, 0x3096, 0xeaa0, 0xa59b, 0x8144, 0xa826, 0x1, 0x1);
        gbc.writeMem(0xaa0e, { 0x8c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0x3096, gbc.sp());
        EXPECT(0xaa0f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaa0e));
        // 8C 00E1
        gbc.setState(0xac0, 0x4622, 0x2820, 0x374c, 0x69e, 0x5115, 0x0, 0x0);
        gbc.writeMem(0xac0, { 0x8c });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4622, gbc.sp());
        EXPECT(0xac1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00E2
        gbc.setState(0x6368, 0x8534, 0x6510, 0xb054, 0x974e, 0xae1d, 0x0, 0x0);
        gbc.writeMem(0x6368, { 0x8c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x8534, gbc.sp());
        EXPECT(0x6369, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00E3
        gbc.setState(0x733f, 0xf4fe, 0x1850, 0x5a48, 0x4df, 0xb89b, 0x0, 0x1);
        gbc.writeMem(0x733f, { 0x8c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xf4fe, gbc.sp());
        EXPECT(0x7340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00E4
        gbc.setState(0x6dd9, 0xfaef, 0xa0c0, 0xf533, 0x4006, 0x3aef, 0x1, 0x0);
        gbc.writeMem(0x6dd9, { 0x8c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xfaef, gbc.sp());
        EXPECT(0x6dda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00E5
        gbc.setState(0x2331, 0xbd1, 0x7360, 0xb66b, 0x48ba, 0x5328, 0x0, 0x0);
        gbc.writeMem(0x2331, { 0x8c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xbd1, gbc.sp());
        EXPECT(0x2332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00E6
        gbc.setState(0x18f2, 0xf9bd, 0x8b20, 0xbc4f, 0xe865, 0xe776, 0x1, 0x0);
        gbc.writeMem(0x18f2, { 0x8c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xf9bd, gbc.sp());
        EXPECT(0x18f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00E7
        gbc.setState(0x72f, 0xd754, 0x6780, 0x8c26, 0x2d0e, 0x1b8, 0x0, 0x1);
        gbc.writeMem(0x72f, { 0x8c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xd754, gbc.sp());
        EXPECT(0x730, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00E8
        gbc.setState(0x224b, 0xb949, 0xa320, 0xb3c7, 0x8ed0, 0x76fd, 0x1, 0x0);
        gbc.writeMem(0x224b, { 0x8c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xb949, gbc.sp());
        EXPECT(0x224c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00E9
        gbc.setState(0x7a6b, 0x50f1, 0x3c50, 0x9a89, 0x4938, 0x8298, 0x0, 0x1);
        gbc.writeMem(0x7a6b, { 0x8c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x50f1, gbc.sp());
        EXPECT(0x7a6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00EA
        gbc.setState(0x379a, 0x2edf, 0x9830, 0xd6a2, 0xb5ad, 0x41d1, 0x1, 0x0);
        gbc.writeMem(0x379a, { 0x8c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x2edf, gbc.sp());
        EXPECT(0x379b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00EB
        gbc.setState(0xe5f5, 0x6a12, 0x5e50, 0xab0c, 0x43d3, 0x2d28, 0x1, 0x0);
        gbc.writeMem(0xe5f5, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6a12, gbc.sp());
        EXPECT(0xe5f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe5f5));
        // 8C 00EC
        gbc.setState(0x91bd, 0x919d, 0xba60, 0x509b, 0x5932, 0xe4d6, 0x1, 0x0);
        gbc.writeMem(0x91bd, { 0x8c });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x919d, gbc.sp());
        EXPECT(0x91be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x91bd));
        // 8C 00ED
        gbc.setState(0xa61e, 0x66ee, 0x4550, 0xb31b, 0x88eb, 0x2b4f, 0x0, 0x0);
        gbc.writeMem(0xa61e, { 0x8c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x66ee, gbc.sp());
        EXPECT(0xa61f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa61e));
        // 8C 00EE
        gbc.setState(0xbba, 0x26b7, 0x0, 0x3496, 0x6970, 0x5719, 0x1, 0x0);
        gbc.writeMem(0xbba, { 0x8c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x26b7, gbc.sp());
        EXPECT(0xbbb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00EF
        gbc.setState(0x1e54, 0xf66c, 0x2ac0, 0xd832, 0xedc, 0xb3bf, 0x0, 0x0);
        gbc.writeMem(0x1e54, { 0x8c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf66c, gbc.sp());
        EXPECT(0x1e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00F0
        gbc.setState(0x8fcf, 0xe5cd, 0xd850, 0x3b72, 0xf2cb, 0x4d21, 0x0, 0x0);
        gbc.writeMem(0x8fcf, { 0x8c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xe5cd, gbc.sp());
        EXPECT(0x8fd0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8fcf));
        // 8C 00F1
        gbc.setState(0x3dbd, 0xbb45, 0x750, 0x7ab3, 0x61a3, 0x4c3f, 0x1, 0x0);
        gbc.writeMem(0x3dbd, { 0x8c });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xbb45, gbc.sp());
        EXPECT(0x3dbe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00F2
        gbc.setState(0xb38f, 0x8845, 0x1f40, 0x3c6, 0xd129, 0xcbf5, 0x1, 0x1);
        gbc.writeMem(0xb38f, { 0x8c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x8845, gbc.sp());
        EXPECT(0xb390, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb38f));
        // 8C 00F3
        gbc.setState(0x77cf, 0x3c77, 0x5010, 0x90ec, 0x9ea1, 0xefa3, 0x0, 0x1);
        gbc.writeMem(0x77cf, { 0x8c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3c77, gbc.sp());
        EXPECT(0x77d0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00F4
        gbc.setState(0x303f, 0xc55f, 0x7090, 0x89c9, 0xe0da, 0xbdf4, 0x1, 0x1);
        gbc.writeMem(0x303f, { 0x8c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xc55f, gbc.sp());
        EXPECT(0x3040, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00F5
        gbc.setState(0x945d, 0x60e5, 0x28f0, 0x6e8a, 0xf3d8, 0xe724, 0x0, 0x0);
        gbc.writeMem(0x945d, { 0x8c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x60e5, gbc.sp());
        EXPECT(0x945e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x945d));
        // 8C 00F6
        gbc.setState(0x3a8f, 0x560e, 0x32f0, 0xd3bc, 0x9a3b, 0xf2a6, 0x1, 0x1);
        gbc.writeMem(0x3a8f, { 0x8c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x560e, gbc.sp());
        EXPECT(0x3a90, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00F7
        gbc.setState(0x4187, 0x1699, 0xde40, 0x6dc7, 0xfca2, 0xb9a4, 0x0, 0x0);
        gbc.writeMem(0x4187, { 0x8c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x1699, gbc.sp());
        EXPECT(0x4188, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00F8
        gbc.setState(0xdabf, 0xce42, 0xbd60, 0x201a, 0x97de, 0x2abd, 0x1, 0x0);
        gbc.writeMem(0xdabf, { 0x8c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0xce42, gbc.sp());
        EXPECT(0xdac0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdabf));
        // 8C 00FA
        gbc.setState(0x309c, 0x638e, 0x8ef0, 0x88b6, 0x4e17, 0x74ff, 0x1, 0x1);
        gbc.writeMem(0x309c, { 0x8c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x638e, gbc.sp());
        EXPECT(0x309d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 00FB
        gbc.setState(0xee95, 0x5a25, 0x9840, 0x593d, 0x1ecd, 0x268, 0x0, 0x0);
        gbc.writeMem(0xee95, { 0x8c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x5a25, gbc.sp());
        EXPECT(0xee96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xee95));
        // 8C 00FC
        gbc.setState(0xd84e, 0x36e6, 0xa640, 0x819c, 0xda78, 0x9500, 0x0, 0x1);
        gbc.writeMem(0xd84e, { 0x8c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x36e6, gbc.sp());
        EXPECT(0xd84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd84e));
        // 8C 00FD
        gbc.setState(0x11a8, 0xbfd8, 0x5110, 0x6169, 0xdbc5, 0x5270, 0x1, 0x0);
        gbc.writeMem(0x11a8, { 0x8c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbfd8, gbc.sp());
        EXPECT(0x11a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 00FE
        gbc.setState(0x1dd6, 0xc5e, 0x7be0, 0x923f, 0xa46a, 0x2588, 0x1, 0x0);
        gbc.writeMem(0x1dd6, { 0x8c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xc5e, gbc.sp());
        EXPECT(0x1dd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0100
        gbc.setState(0xc8ad, 0xb5ce, 0x8d80, 0x167d, 0x988b, 0xd90a, 0x0, 0x1);
        gbc.writeMem(0xc8ad, { 0x8c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xb5ce, gbc.sp());
        EXPECT(0xc8ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc8ad));
        // 8C 0101
        gbc.setState(0xadab, 0xfe43, 0x7780, 0xda74, 0x10ee, 0xd8e7, 0x1, 0x1);
        gbc.writeMem(0xadab, { 0x8c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xfe43, gbc.sp());
        EXPECT(0xadac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xadab));
        // 8C 0102
        gbc.setState(0x98c5, 0x123a, 0xba80, 0xfff, 0x205c, 0x2066, 0x0, 0x1);
        gbc.writeMem(0x98c5, { 0x8c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x123a, gbc.sp());
        EXPECT(0x98c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x98c5));
        // 8C 0103
        gbc.setState(0x405f, 0x44fd, 0x3ee0, 0xee86, 0x30f0, 0x2695, 0x0, 0x0);
        gbc.writeMem(0x405f, { 0x8c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x44fd, gbc.sp());
        EXPECT(0x4060, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0104
        gbc.setState(0x37cf, 0x13a1, 0xc4b0, 0xfee9, 0xff10, 0xf507, 0x1, 0x0);
        gbc.writeMem(0x37cf, { 0x8c });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x13a1, gbc.sp());
        EXPECT(0x37d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0105
        gbc.setState(0x8b0d, 0x6c77, 0x7380, 0x5290, 0x5729, 0x49f1, 0x0, 0x1);
        gbc.writeMem(0x8b0d, { 0x8c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x6c77, gbc.sp());
        EXPECT(0x8b0e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8b0d));
        // 8C 0106
        gbc.setState(0xea53, 0x444d, 0x98c0, 0xf5f8, 0x5a11, 0xea6a, 0x1, 0x1);
        gbc.writeMem(0xea53, { 0x8c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x444d, gbc.sp());
        EXPECT(0xea54, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xea53));
        // 8C 0107
        gbc.setState(0xd702, 0x36a3, 0x1150, 0x9dec, 0x2712, 0x41d5, 0x1, 0x0);
        gbc.writeMem(0xd702, { 0x8c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x36a3, gbc.sp());
        EXPECT(0xd703, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd702));
        // 8C 0109
        gbc.setState(0xbc57, 0x9db7, 0x7c10, 0x8093, 0xb2d5, 0x6ea1, 0x1, 0x0);
        gbc.writeMem(0xbc57, { 0x8c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x9db7, gbc.sp());
        EXPECT(0xbc58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbc57));
        // 8C 010A
        gbc.setState(0x658a, 0xa8f7, 0x2a10, 0x3e91, 0xad6c, 0xe95c, 0x1, 0x0);
        gbc.writeMem(0x658a, { 0x8c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xa8f7, gbc.sp());
        EXPECT(0x658b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 010B
        gbc.setState(0x6ed, 0x349e, 0xe820, 0x8a0e, 0xd96f, 0x31a3, 0x1, 0x0);
        gbc.writeMem(0x6ed, { 0x8c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x349e, gbc.sp());
        EXPECT(0x6ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 010D
        gbc.setState(0x4bb1, 0x2ed0, 0x46b0, 0x7a93, 0x5ec6, 0xbcc1, 0x1, 0x0);
        gbc.writeMem(0x4bb1, { 0x8c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x2ed0, gbc.sp());
        EXPECT(0x4bb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 010E
        gbc.setState(0xe985, 0x310a, 0xdf90, 0xcdca, 0x2314, 0x8c1f, 0x0, 0x0);
        gbc.writeMem(0xe985, { 0x8c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x310a, gbc.sp());
        EXPECT(0xe986, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe985));
        // 8C 010F
        gbc.setState(0x71c9, 0x33c6, 0xa5a0, 0x48a1, 0x526f, 0x29f8, 0x0, 0x1);
        gbc.writeMem(0x71c9, { 0x8c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x33c6, gbc.sp());
        EXPECT(0x71ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0110
        gbc.setState(0x40b2, 0x68b0, 0xa7b0, 0x423d, 0xd3b2, 0x853, 0x0, 0x1);
        gbc.writeMem(0x40b2, { 0x8c });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x68b0, gbc.sp());
        EXPECT(0x40b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0111
        gbc.setState(0x18bd, 0x51db, 0x78d0, 0x44da, 0xe95d, 0x75d9, 0x1, 0x0);
        gbc.writeMem(0x18bd, { 0x8c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x51db, gbc.sp());
        EXPECT(0x18be, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0112
        gbc.setState(0xdfed, 0x196b, 0x94a0, 0x432, 0x506b, 0x307b, 0x1, 0x0);
        gbc.writeMem(0xdfed, { 0x8c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x196b, gbc.sp());
        EXPECT(0xdfee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdfed));
        // 8C 0113
        gbc.setState(0x6ff8, 0x20ec, 0x2650, 0xfae8, 0x5b8d, 0x7558, 0x0, 0x0);
        gbc.writeMem(0x6ff8, { 0x8c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x20ec, gbc.sp());
        EXPECT(0x6ff9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0114
        gbc.setState(0x5c94, 0xbf03, 0x2950, 0xcd42, 0x93bc, 0x132b, 0x0, 0x0);
        gbc.writeMem(0x5c94, { 0x8c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbf03, gbc.sp());
        EXPECT(0x5c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0115
        gbc.setState(0x7e15, 0x8a29, 0x3a10, 0x8a8e, 0x998c, 0x32d0, 0x0, 0x0);
        gbc.writeMem(0x7e15, { 0x8c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x8a29, gbc.sp());
        EXPECT(0x7e16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0117
        gbc.setState(0xa170, 0xb48b, 0xa440, 0x4a3, 0x45e8, 0x3854, 0x0, 0x0);
        gbc.writeMem(0xa170, { 0x8c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xb48b, gbc.sp());
        EXPECT(0xa171, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa170));
        // 8C 0118
        gbc.setState(0x8580, 0x3cc6, 0xaed0, 0x9853, 0xec8c, 0xe7b0, 0x0, 0x1);
        gbc.writeMem(0x8580, { 0x8c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x3cc6, gbc.sp());
        EXPECT(0x8581, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8580));
        // 8C 0119
        gbc.setState(0x757, 0x744f, 0x78f0, 0x5a33, 0xc32f, 0xb99e, 0x1, 0x1);
        gbc.writeMem(0x757, { 0x8c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x744f, gbc.sp());
        EXPECT(0x758, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 011A
        gbc.setState(0x4d1, 0x627f, 0xe380, 0x47db, 0xa495, 0xf5ca, 0x1, 0x0);
        gbc.writeMem(0x4d1, { 0x8c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xca, gbc.l());
        EXPECT(0x627f, gbc.sp());
        EXPECT(0x4d2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 011C
        gbc.setState(0x88c4, 0x5f83, 0x74c0, 0x3cb8, 0x7a41, 0xd292, 0x1, 0x0);
        gbc.writeMem(0x88c4, { 0x8c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x5f83, gbc.sp());
        EXPECT(0x88c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x88c4));
        // 8C 011D
        gbc.setState(0xb508, 0xae97, 0x4ad0, 0x100a, 0xfa08, 0xa349, 0x1, 0x0);
        gbc.writeMem(0xb508, { 0x8c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xae97, gbc.sp());
        EXPECT(0xb509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb508));
        // 8C 011F
        gbc.setState(0x94ba, 0xc3f7, 0x8860, 0xb786, 0x950f, 0x1cb5, 0x1, 0x1);
        gbc.writeMem(0x94ba, { 0x8c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xc3f7, gbc.sp());
        EXPECT(0x94bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x94ba));
        // 8C 0120
        gbc.setState(0x8bd7, 0x346a, 0xfe90, 0xacb9, 0xcdf4, 0xd237, 0x0, 0x1);
        gbc.writeMem(0x8bd7, { 0x8c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x346a, gbc.sp());
        EXPECT(0x8bd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8bd7));
        // 8C 0121
        gbc.setState(0x57a2, 0xe7e2, 0xbd10, 0x7822, 0x7d14, 0x74e2, 0x1, 0x0);
        gbc.writeMem(0x57a2, { 0x8c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xe7e2, gbc.sp());
        EXPECT(0x57a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0123
        gbc.setState(0x5187, 0x7117, 0xca10, 0x1091, 0xb917, 0xc01f, 0x1, 0x0);
        gbc.writeMem(0x5187, { 0x8c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x7117, gbc.sp());
        EXPECT(0x5188, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0124
        gbc.setState(0x60e, 0xabf4, 0x8a10, 0x524a, 0x8079, 0xd0c7, 0x0, 0x0);
        gbc.writeMem(0x60e, { 0x8c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xabf4, gbc.sp());
        EXPECT(0x60f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0125
        gbc.setState(0xd934, 0xc6de, 0x4b0, 0x2826, 0xdda, 0xc43a, 0x0, 0x0);
        gbc.writeMem(0xd934, { 0x8c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xc6de, gbc.sp());
        EXPECT(0xd935, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd934));
        // 8C 0126
        gbc.setState(0x2381, 0x44e, 0x54b0, 0xda73, 0xbc62, 0xa5a0, 0x1, 0x0);
        gbc.writeMem(0x2381, { 0x8c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x44e, gbc.sp());
        EXPECT(0x2382, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0127
        gbc.setState(0x43f4, 0x57cf, 0xc660, 0x4fbb, 0x6716, 0xde48, 0x1, 0x0);
        gbc.writeMem(0x43f4, { 0x8c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x57cf, gbc.sp());
        EXPECT(0x43f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0128
        gbc.setState(0x72c2, 0xc6f9, 0xe570, 0x561f, 0xeacb, 0xac45, 0x1, 0x1);
        gbc.writeMem(0x72c2, { 0x8c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0xc6f9, gbc.sp());
        EXPECT(0x72c3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0129
        gbc.setState(0x7620, 0xe245, 0x26c0, 0x1093, 0xdd9a, 0x5e4, 0x1, 0x0);
        gbc.writeMem(0x7620, { 0x8c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xe245, gbc.sp());
        EXPECT(0x7621, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 012A
        gbc.setState(0xe2f1, 0x27b2, 0x5220, 0x7471, 0xc4f7, 0x130d, 0x1, 0x1);
        gbc.writeMem(0xe2f1, { 0x8c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x27b2, gbc.sp());
        EXPECT(0xe2f2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe2f1));
        // 8C 012B
        gbc.setState(0x5e10, 0x4dc8, 0x1040, 0x20db, 0x514, 0xa1b5, 0x1, 0x1);
        gbc.writeMem(0x5e10, { 0x8c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x4dc8, gbc.sp());
        EXPECT(0x5e11, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 012C
        gbc.setState(0x799b, 0xd4c2, 0x2e20, 0xea19, 0xbcc2, 0x51b3, 0x0, 0x1);
        gbc.writeMem(0x799b, { 0x8c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xd4c2, gbc.sp());
        EXPECT(0x799c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 012D
        gbc.setState(0x41c6, 0xfec6, 0x7a90, 0x81da, 0xc714, 0x432, 0x0, 0x0);
        gbc.writeMem(0x41c6, { 0x8c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xfec6, gbc.sp());
        EXPECT(0x41c7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 012E
        gbc.setState(0x6f21, 0x4360, 0xc8d0, 0x97b, 0x830f, 0x3c22, 0x1, 0x1);
        gbc.writeMem(0x6f21, { 0x8c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x4360, gbc.sp());
        EXPECT(0x6f22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 012F
        gbc.setState(0xcb58, 0x780e, 0x4d0, 0x7120, 0x7a2, 0x4208, 0x1, 0x0);
        gbc.writeMem(0xcb58, { 0x8c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x780e, gbc.sp());
        EXPECT(0xcb59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcb58));
        // 8C 0130
        gbc.setState(0x2a1c, 0x3b3c, 0xd9b0, 0x8de8, 0xef29, 0xdf9c, 0x1, 0x0);
        gbc.writeMem(0x2a1c, { 0x8c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x3b3c, gbc.sp());
        EXPECT(0x2a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0131
        gbc.setState(0x7b57, 0x3baf, 0x5910, 0x42fb, 0xdad8, 0xfd65, 0x1, 0x0);
        gbc.writeMem(0x7b57, { 0x8c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x3baf, gbc.sp());
        EXPECT(0x7b58, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0132
        gbc.setState(0x50f4, 0x4d6, 0x4aa0, 0x2634, 0x8852, 0xbcba, 0x0, 0x0);
        gbc.writeMem(0x50f4, { 0x8c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x4d6, gbc.sp());
        EXPECT(0x50f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0133
        gbc.setState(0xc150, 0x7b84, 0x1120, 0xe302, 0x7fb9, 0xa8d1, 0x1, 0x0);
        gbc.writeMem(0xc150, { 0x8c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x7b84, gbc.sp());
        EXPECT(0xc151, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc150));
        // 8C 0136
        gbc.setState(0x3444, 0x6cf9, 0xc690, 0x924d, 0x8d01, 0x18a1, 0x0, 0x0);
        gbc.writeMem(0x3444, { 0x8c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x6cf9, gbc.sp());
        EXPECT(0x3445, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0137
        gbc.setState(0x4dc4, 0xf8f2, 0xb9d0, 0x2694, 0x3d57, 0x24a, 0x0, 0x0);
        gbc.writeMem(0x4dc4, { 0x8c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xf8f2, gbc.sp());
        EXPECT(0x4dc5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0138
        gbc.setState(0x75fc, 0xbf81, 0x2450, 0xc2ae, 0xa461, 0x175b, 0x0, 0x1);
        gbc.writeMem(0x75fc, { 0x8c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xbf81, gbc.sp());
        EXPECT(0x75fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0139
        gbc.setState(0xd8, 0x6cc6, 0xd960, 0x4f8b, 0xb724, 0x8992, 0x0, 0x0);
        gbc.writeMem(0xd8, { 0x8c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x6cc6, gbc.sp());
        EXPECT(0xd9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 013A
        gbc.setState(0xe948, 0x38f0, 0x4840, 0xacc, 0x583a, 0x9933, 0x0, 0x0);
        gbc.writeMem(0xe948, { 0x8c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x38f0, gbc.sp());
        EXPECT(0xe949, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe948));
        // 8C 013B
        gbc.setState(0x3ba9, 0xa260, 0x73e0, 0x942a, 0x4bf9, 0x212a, 0x0, 0x1);
        gbc.writeMem(0x3ba9, { 0x8c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa260, gbc.sp());
        EXPECT(0x3baa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 013C
        gbc.setState(0x9439, 0x9d1b, 0x80b0, 0x338, 0x347f, 0x610f, 0x0, 0x0);
        gbc.writeMem(0x9439, { 0x8c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x9d1b, gbc.sp());
        EXPECT(0x943a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9439));
        // 8C 013D
        gbc.setState(0xefb4, 0x1cbc, 0xd6c0, 0x556b, 0x8d4b, 0xf2f3, 0x1, 0x0);
        gbc.writeMem(0xefb4, { 0x8c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1cbc, gbc.sp());
        EXPECT(0xefb5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xefb4));
        // 8C 013F
        gbc.setState(0xba5, 0xd241, 0x5c30, 0xc9be, 0x33a9, 0x6179, 0x1, 0x0);
        gbc.writeMem(0xba5, { 0x8c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xd241, gbc.sp());
        EXPECT(0xba6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0140
        gbc.setState(0x4b09, 0x4950, 0x8c50, 0xc3d6, 0x18df, 0x67d4, 0x0, 0x1);
        gbc.writeMem(0x4b09, { 0x8c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4950, gbc.sp());
        EXPECT(0x4b0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0141
        gbc.setState(0x9e1b, 0x43a5, 0xe890, 0x4c1d, 0x910a, 0x17d1, 0x1, 0x0);
        gbc.writeMem(0x9e1b, { 0x8c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x43a5, gbc.sp());
        EXPECT(0x9e1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9e1b));
        // 8C 0142
        gbc.setState(0x3d46, 0xb6ad, 0xda50, 0x7e9d, 0xdcf8, 0xf059, 0x0, 0x0);
        gbc.writeMem(0x3d46, { 0x8c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xb6ad, gbc.sp());
        EXPECT(0x3d47, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0143
        gbc.setState(0x2f43, 0x714d, 0xc210, 0xbe33, 0xa122, 0xa464, 0x1, 0x1);
        gbc.writeMem(0x2f43, { 0x8c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x714d, gbc.sp());
        EXPECT(0x2f44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0144
        gbc.setState(0xbf87, 0xa601, 0x62e0, 0xe36b, 0x599f, 0x4cfa, 0x1, 0x1);
        gbc.writeMem(0xbf87, { 0x8c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa601, gbc.sp());
        EXPECT(0xbf88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbf87));
        // 8C 0145
        gbc.setState(0x5238, 0x8202, 0xab00, 0x379e, 0x386f, 0x9951, 0x1, 0x1);
        gbc.writeMem(0x5238, { 0x8c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x8202, gbc.sp());
        EXPECT(0x5239, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0146
        gbc.setState(0xe40b, 0x8752, 0xa520, 0x8a62, 0xb41f, 0x3020, 0x0, 0x1);
        gbc.writeMem(0xe40b, { 0x8c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8752, gbc.sp());
        EXPECT(0xe40c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe40b));
        // 8C 0147
        gbc.setState(0xc0b3, 0xe083, 0x44c0, 0x21cb, 0x902e, 0xec61, 0x0, 0x1);
        gbc.writeMem(0xc0b3, { 0x8c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xe083, gbc.sp());
        EXPECT(0xc0b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc0b3));
        // 8C 0148
        gbc.setState(0x5406, 0xdf3d, 0x1670, 0xe8a4, 0x7720, 0xd49e, 0x1, 0x0);
        gbc.writeMem(0x5406, { 0x8c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xdf3d, gbc.sp());
        EXPECT(0x5407, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0149
        gbc.setState(0x640f, 0x93e6, 0x1860, 0x6fcb, 0x934c, 0x9403, 0x0, 0x1);
        gbc.writeMem(0x640f, { 0x8c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x93e6, gbc.sp());
        EXPECT(0x6410, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 014A
        gbc.setState(0x7916, 0xd458, 0x2850, 0xcb8, 0xa37b, 0xab2b, 0x0, 0x0);
        gbc.writeMem(0x7916, { 0x8c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xd458, gbc.sp());
        EXPECT(0x7917, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 014B
        gbc.setState(0x41c6, 0x480c, 0xb780, 0x2f85, 0xf08, 0x15f8, 0x1, 0x0);
        gbc.writeMem(0x41c6, { 0x8c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x480c, gbc.sp());
        EXPECT(0x41c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 014C
        gbc.setState(0x3558, 0xe92a, 0xd640, 0xc44b, 0x6368, 0xbd76, 0x0, 0x0);
        gbc.writeMem(0x3558, { 0x8c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0xe92a, gbc.sp());
        EXPECT(0x3559, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 014D
        gbc.setState(0x6f46, 0x62a6, 0xd880, 0x11, 0xab01, 0x7ab0, 0x1, 0x0);
        gbc.writeMem(0x6f46, { 0x8c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x62a6, gbc.sp());
        EXPECT(0x6f47, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 014E
        gbc.setState(0xc70e, 0xd9d0, 0x7ef0, 0x60, 0xf8b0, 0x4913, 0x0, 0x1);
        gbc.writeMem(0xc70e, { 0x8c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xd9d0, gbc.sp());
        EXPECT(0xc70f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc70e));
        // 8C 014F
        gbc.setState(0x87c7, 0xe527, 0xf3f0, 0x2515, 0x7738, 0x9930, 0x0, 0x1);
        gbc.writeMem(0x87c7, { 0x8c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0xe527, gbc.sp());
        EXPECT(0x87c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x87c7));
        // 8C 0150
        gbc.setState(0x3202, 0xd0f2, 0x79d0, 0xdffc, 0x1d0a, 0x9a1c, 0x1, 0x1);
        gbc.writeMem(0x3202, { 0x8c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xd0f2, gbc.sp());
        EXPECT(0x3203, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0151
        gbc.setState(0x18d5, 0x9de2, 0x8d50, 0x9854, 0x3060, 0x11c6, 0x1, 0x1);
        gbc.writeMem(0x18d5, { 0x8c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9de2, gbc.sp());
        EXPECT(0x18d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0152
        gbc.setState(0x9a04, 0x7bea, 0x33c0, 0x590e, 0x6583, 0x8823, 0x0, 0x1);
        gbc.writeMem(0x9a04, { 0x8c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7bea, gbc.sp());
        EXPECT(0x9a05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9a04));
        // 8C 0153
        gbc.setState(0x915e, 0xcc32, 0xc6e0, 0x5d37, 0xc2ae, 0x7e0f, 0x1, 0x1);
        gbc.writeMem(0x915e, { 0x8c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0xcc32, gbc.sp());
        EXPECT(0x915f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x915e));
        // 8C 0154
        gbc.setState(0x5364, 0x124f, 0xf290, 0x5cb7, 0x3147, 0x1af3, 0x1, 0x0);
        gbc.writeMem(0x5364, { 0x8c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x124f, gbc.sp());
        EXPECT(0x5365, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0155
        gbc.setState(0xb4e5, 0x19d7, 0xd1f0, 0xa8ea, 0xd728, 0x6859, 0x1, 0x0);
        gbc.writeMem(0xb4e5, { 0x8c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x19d7, gbc.sp());
        EXPECT(0xb4e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb4e5));
        // 8C 0156
        gbc.setState(0xbc0f, 0x1f36, 0x1000, 0x8264, 0x2b58, 0x3529, 0x1, 0x1);
        gbc.writeMem(0xbc0f, { 0x8c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0x1f36, gbc.sp());
        EXPECT(0xbc10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbc0f));
        // 8C 0157
        gbc.setState(0xa1f5, 0xd983, 0x6160, 0x14da, 0xffed, 0xbe88, 0x1, 0x1);
        gbc.writeMem(0xa1f5, { 0x8c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xd983, gbc.sp());
        EXPECT(0xa1f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa1f5));
        // 8C 0158
        gbc.setState(0x9a3, 0x86e7, 0x2aa0, 0x728a, 0x2d95, 0x43cc, 0x0, 0x1);
        gbc.writeMem(0x9a3, { 0x8c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x86e7, gbc.sp());
        EXPECT(0x9a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0159
        gbc.setState(0x3a61, 0xce4f, 0x90b0, 0xc872, 0xc132, 0xde0a, 0x1, 0x0);
        gbc.writeMem(0x3a61, { 0x8c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0xce4f, gbc.sp());
        EXPECT(0x3a62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 015A
        gbc.setState(0xc146, 0xe361, 0x1030, 0x6846, 0xe948, 0xd49d, 0x1, 0x1);
        gbc.writeMem(0xc146, { 0x8c });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe361, gbc.sp());
        EXPECT(0xc147, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc146));
        // 8C 015B
        gbc.setState(0x2541, 0x8a12, 0xed60, 0xaece, 0x90fb, 0x65fa, 0x0, 0x1);
        gbc.writeMem(0x2541, { 0x8c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x8a12, gbc.sp());
        EXPECT(0x2542, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 015C
        gbc.setState(0x17c7, 0xe1e7, 0x88b0, 0x2d3b, 0x4296, 0x556a, 0x1, 0x0);
        gbc.writeMem(0x17c7, { 0x8c });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xe1e7, gbc.sp());
        EXPECT(0x17c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 015D
        gbc.setState(0xe720, 0x2b3e, 0xcad0, 0xe933, 0x4d07, 0x6114, 0x0, 0x1);
        gbc.writeMem(0xe720, { 0x8c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2b3e, gbc.sp());
        EXPECT(0xe721, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe720));
        // 8C 015E
        gbc.setState(0x2963, 0xe459, 0x7390, 0xae16, 0xd14c, 0x8e02, 0x1, 0x0);
        gbc.writeMem(0x2963, { 0x8c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xe459, gbc.sp());
        EXPECT(0x2964, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 015F
        gbc.setState(0x2986, 0x7327, 0xa680, 0xe24f, 0x8152, 0x78e4, 0x0, 0x1);
        gbc.writeMem(0x2986, { 0x8c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x7327, gbc.sp());
        EXPECT(0x2987, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0160
        gbc.setState(0xe233, 0xed1c, 0x7350, 0xe95b, 0xe272, 0xd821, 0x1, 0x1);
        gbc.writeMem(0xe233, { 0x8c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xed1c, gbc.sp());
        EXPECT(0xe234, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe233));
        // 8C 0161
        gbc.setState(0x9033, 0xfeb6, 0xb9d0, 0xca50, 0x5672, 0x46ff, 0x1, 0x0);
        gbc.writeMem(0x9033, { 0x8c });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xfeb6, gbc.sp());
        EXPECT(0x9034, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9033));
        // 8C 0162
        gbc.setState(0x7334, 0x5720, 0xb330, 0xf53d, 0xff4e, 0xdd74, 0x0, 0x1);
        gbc.writeMem(0x7334, { 0x8c });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5720, gbc.sp());
        EXPECT(0x7335, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0163
        gbc.setState(0xaf9f, 0x6d80, 0xc150, 0x8ef1, 0x7d55, 0x9155, 0x0, 0x0);
        gbc.writeMem(0xaf9f, { 0x8c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x6d80, gbc.sp());
        EXPECT(0xafa0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaf9f));
        // 8C 0164
        gbc.setState(0xd7c8, 0xecda, 0xf300, 0x58e, 0x53d3, 0x8c88, 0x0, 0x0);
        gbc.writeMem(0xd7c8, { 0x8c });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0xecda, gbc.sp());
        EXPECT(0xd7c9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd7c8));
        // 8C 0165
        gbc.setState(0x3c5e, 0x3afd, 0x7e40, 0xceb5, 0xeb84, 0xe0c3, 0x1, 0x1);
        gbc.writeMem(0x3c5e, { 0x8c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x3afd, gbc.sp());
        EXPECT(0x3c5f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0166
        gbc.setState(0x3db7, 0x324d, 0x8bf0, 0xa689, 0xc6c6, 0x723b, 0x0, 0x1);
        gbc.writeMem(0x3db7, { 0x8c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x324d, gbc.sp());
        EXPECT(0x3db8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0167
        gbc.setState(0xd31f, 0xd902, 0xbc80, 0x733f, 0x59af, 0xc9d, 0x1, 0x1);
        gbc.writeMem(0xd31f, { 0x8c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xd902, gbc.sp());
        EXPECT(0xd320, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd31f));
        // 8C 0168
        gbc.setState(0x307b, 0xbb13, 0x4d60, 0x71ef, 0x4d18, 0x2070, 0x1, 0x1);
        gbc.writeMem(0x307b, { 0x8c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xbb13, gbc.sp());
        EXPECT(0x307c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 016A
        gbc.setState(0x34f, 0xa4db, 0xa350, 0x41b9, 0x312e, 0x8f11, 0x0, 0x1);
        gbc.writeMem(0x34f, { 0x8c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xa4db, gbc.sp());
        EXPECT(0x350, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 016B
        gbc.setState(0x4cad, 0xc761, 0xb3f0, 0xb51c, 0x7bd9, 0xc438, 0x1, 0x0);
        gbc.writeMem(0x4cad, { 0x8c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xc761, gbc.sp());
        EXPECT(0x4cae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 016C
        gbc.setState(0x3e, 0xfce6, 0xc120, 0x94c1, 0x479c, 0x302f, 0x1, 0x1);
        gbc.writeMem(0x3e, { 0x8c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0xfce6, gbc.sp());
        EXPECT(0x3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 016D
        gbc.setState(0xa461, 0xb44d, 0xa270, 0x2d6b, 0x7935, 0x4fdc, 0x1, 0x1);
        gbc.writeMem(0xa461, { 0x8c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xb44d, gbc.sp());
        EXPECT(0xa462, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa461));
        // 8C 016E
        gbc.setState(0xd173, 0x84ff, 0xfab0, 0xb081, 0xc7ef, 0x6030, 0x1, 0x0);
        gbc.writeMem(0xd173, { 0x8c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x84ff, gbc.sp());
        EXPECT(0xd174, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd173));
        // 8C 016F
        gbc.setState(0xd84, 0x7c72, 0xce60, 0x4d26, 0x80a4, 0xc1bb, 0x0, 0x0);
        gbc.writeMem(0xd84, { 0x8c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xa4, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x7c72, gbc.sp());
        EXPECT(0xd85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0170
        gbc.setState(0x46c6, 0x5688, 0xbc80, 0x7c7c, 0xeff6, 0x8928, 0x1, 0x1);
        gbc.writeMem(0x46c6, { 0x8c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x5688, gbc.sp());
        EXPECT(0x46c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0171
        gbc.setState(0x16b5, 0xa1ef, 0xe9c0, 0x7417, 0x5cf2, 0xf76d, 0x1, 0x1);
        gbc.writeMem(0x16b5, { 0x8c });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xa1ef, gbc.sp());
        EXPECT(0x16b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0172
        gbc.setState(0xc19d, 0xefd0, 0x7180, 0xaea7, 0x6509, 0xdf9d, 0x0, 0x1);
        gbc.writeMem(0xc19d, { 0x8c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xefd0, gbc.sp());
        EXPECT(0xc19e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc19d));
        // 8C 0173
        gbc.setState(0x80bc, 0x9f29, 0x9f0, 0x9947, 0xc6f8, 0xa596, 0x0, 0x0);
        gbc.writeMem(0x80bc, { 0x8c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x9f29, gbc.sp());
        EXPECT(0x80bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x80bc));
        // 8C 0174
        gbc.setState(0x77f4, 0x350b, 0xcfb0, 0x9adb, 0xeeb0, 0xd58a, 0x0, 0x0);
        gbc.writeMem(0x77f4, { 0x8c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x350b, gbc.sp());
        EXPECT(0x77f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0175
        gbc.setState(0x841a, 0x56ed, 0xf2d0, 0xe70c, 0x5ec, 0x5104, 0x0, 0x0);
        gbc.writeMem(0x841a, { 0x8c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x56ed, gbc.sp());
        EXPECT(0x841b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x841a));
        // 8C 0177
        gbc.setState(0xaf96, 0x6181, 0x3d40, 0xb6e5, 0x3a4a, 0x5b14, 0x0, 0x0);
        gbc.writeMem(0xaf96, { 0x8c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x6181, gbc.sp());
        EXPECT(0xaf97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaf96));
        // 8C 0178
        gbc.setState(0x585d, 0x9c1, 0x63d0, 0xf8a5, 0x7bc5, 0xf818, 0x1, 0x1);
        gbc.writeMem(0x585d, { 0x8c });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x9c1, gbc.sp());
        EXPECT(0x585e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0179
        gbc.setState(0x4465, 0x23a5, 0xf540, 0xd79f, 0x3f5e, 0xd6f4, 0x1, 0x1);
        gbc.writeMem(0x4465, { 0x8c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x23a5, gbc.sp());
        EXPECT(0x4466, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 017A
        gbc.setState(0x255a, 0xc61, 0xdb00, 0x2a39, 0x279e, 0xbfe4, 0x1, 0x1);
        gbc.writeMem(0x255a, { 0x8c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xc61, gbc.sp());
        EXPECT(0x255b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 017B
        gbc.setState(0x1a92, 0x88ad, 0xeda0, 0x4ac0, 0x6fa0, 0x4707, 0x0, 0x0);
        gbc.writeMem(0x1a92, { 0x8c });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x88ad, gbc.sp());
        EXPECT(0x1a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 017C
        gbc.setState(0xc809, 0x9981, 0xbdf0, 0xa870, 0xf1f, 0x83c9, 0x0, 0x1);
        gbc.writeMem(0xc809, { 0x8c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x9981, gbc.sp());
        EXPECT(0xc80a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc809));
        // 8C 017D
        gbc.setState(0x6e0c, 0x7010, 0x8280, 0xc41a, 0xc01d, 0xd971, 0x0, 0x1);
        gbc.writeMem(0x6e0c, { 0x8c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x7010, gbc.sp());
        EXPECT(0x6e0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 017E
        gbc.setState(0x8ea6, 0xc91f, 0xe8c0, 0xab30, 0x81e4, 0x3e43, 0x1, 0x0);
        gbc.writeMem(0x8ea6, { 0x8c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xc91f, gbc.sp());
        EXPECT(0x8ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8ea6));
        // 8C 017F
        gbc.setState(0xc575, 0x6388, 0x2100, 0x79a7, 0xa4c, 0x1bc3, 0x1, 0x0);
        gbc.writeMem(0xc575, { 0x8c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x6388, gbc.sp());
        EXPECT(0xc576, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc575));
        // 8C 0180
        gbc.setState(0xd969, 0x7b5f, 0xb170, 0xf0cc, 0x6b2, 0x954f, 0x1, 0x0);
        gbc.writeMem(0xd969, { 0x8c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x7b5f, gbc.sp());
        EXPECT(0xd96a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd969));
        // 8C 0181
        gbc.setState(0x2aec, 0x6ebe, 0xb940, 0x1780, 0x1819, 0xe2ad, 0x1, 0x1);
        gbc.writeMem(0x2aec, { 0x8c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x6ebe, gbc.sp());
        EXPECT(0x2aed, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0182
        gbc.setState(0x9620, 0xbda0, 0x9cb0, 0xb67e, 0x7200, 0xc93c, 0x0, 0x0);
        gbc.writeMem(0x9620, { 0x8c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0xbda0, gbc.sp());
        EXPECT(0x9621, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9620));
        // 8C 0183
        gbc.setState(0x21b1, 0x77ae, 0x980, 0xcd2c, 0x95d6, 0xc7ac, 0x1, 0x0);
        gbc.writeMem(0x21b1, { 0x8c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x77ae, gbc.sp());
        EXPECT(0x21b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0184
        gbc.setState(0x8d14, 0x5927, 0x6630, 0x5827, 0x88d9, 0x1b04, 0x1, 0x1);
        gbc.writeMem(0x8d14, { 0x8c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x5927, gbc.sp());
        EXPECT(0x8d15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8d14));
        // 8C 0185
        gbc.setState(0xfd, 0x59b4, 0xd9e0, 0x2c69, 0x78b5, 0xfbbe, 0x1, 0x1);
        gbc.writeMem(0xfd, { 0x8c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x59b4, gbc.sp());
        EXPECT(0xfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0186
        gbc.setState(0xcd56, 0x2fbb, 0xfd40, 0x62d4, 0xe337, 0xaad4, 0x1, 0x1);
        gbc.writeMem(0xcd56, { 0x8c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x2fbb, gbc.sp());
        EXPECT(0xcd57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcd56));
        // 8C 0187
        gbc.setState(0x14a9, 0x20d8, 0x3a60, 0x247f, 0xc3c1, 0x5418, 0x1, 0x1);
        gbc.writeMem(0x14a9, { 0x8c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x20d8, gbc.sp());
        EXPECT(0x14aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0188
        gbc.setState(0x2994, 0x3357, 0x9020, 0xc623, 0x8d19, 0xf379, 0x0, 0x0);
        gbc.writeMem(0x2994, { 0x8c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x3357, gbc.sp());
        EXPECT(0x2995, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0189
        gbc.setState(0xaa37, 0xd27e, 0xd730, 0xb59f, 0x6a39, 0x2f9, 0x0, 0x0);
        gbc.writeMem(0xaa37, { 0x8c });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xd27e, gbc.sp());
        EXPECT(0xaa38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaa37));
        // 8C 018A
        gbc.setState(0x302d, 0xdd51, 0x9e10, 0x1944, 0x33ee, 0xd3fb, 0x1, 0x1);
        gbc.writeMem(0x302d, { 0x8c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xdd51, gbc.sp());
        EXPECT(0x302e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 018B
        gbc.setState(0x778d, 0xfa6a, 0x8c40, 0x7f46, 0x8d43, 0x9ed0, 0x1, 0x0);
        gbc.writeMem(0x778d, { 0x8c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x46, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0xfa6a, gbc.sp());
        EXPECT(0x778e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 018C
        gbc.setState(0x3be5, 0x4a09, 0x9a30, 0x69f0, 0xbf02, 0x9607, 0x1, 0x0);
        gbc.writeMem(0x3be5, { 0x8c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x4a09, gbc.sp());
        EXPECT(0x3be6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 018D
        gbc.setState(0x7c1e, 0x40e1, 0xad80, 0x2abc, 0x8a2a, 0x7f3, 0x1, 0x0);
        gbc.writeMem(0x7c1e, { 0x8c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x40e1, gbc.sp());
        EXPECT(0x7c1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 018E
        gbc.setState(0xab82, 0x8f33, 0xbf50, 0x68eb, 0x3da0, 0xc650, 0x1, 0x1);
        gbc.writeMem(0xab82, { 0x8c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8f33, gbc.sp());
        EXPECT(0xab83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xab82));
        // 8C 018F
        gbc.setState(0xa119, 0x4837, 0x4430, 0x8749, 0x6e35, 0x287d, 0x0, 0x1);
        gbc.writeMem(0xa119, { 0x8c });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x4837, gbc.sp());
        EXPECT(0xa11a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa119));
        // 8C 0190
        gbc.setState(0xc62f, 0x77b4, 0xc370, 0x5769, 0x6e8f, 0xc23, 0x0, 0x0);
        gbc.writeMem(0xc62f, { 0x8c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x77b4, gbc.sp());
        EXPECT(0xc630, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc62f));
        // 8C 0191
        gbc.setState(0xb941, 0x5b8, 0x94a0, 0x163d, 0xe287, 0x1b14, 0x1, 0x1);
        gbc.writeMem(0xb941, { 0x8c });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x5b8, gbc.sp());
        EXPECT(0xb942, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb941));
        // 8C 0192
        gbc.setState(0x25c0, 0xa2f9, 0xafe0, 0xb8a2, 0xf6e2, 0x6da1, 0x0, 0x0);
        gbc.writeMem(0x25c0, { 0x8c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa2f9, gbc.sp());
        EXPECT(0x25c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0193
        gbc.setState(0x91ea, 0x2a63, 0xb070, 0xe96d, 0xb117, 0x380b, 0x0, 0x0);
        gbc.writeMem(0x91ea, { 0x8c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x2a63, gbc.sp());
        EXPECT(0x91eb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x91ea));
        // 8C 0194
        gbc.setState(0x765f, 0x5091, 0x7390, 0x1f21, 0x606d, 0x2918, 0x1, 0x1);
        gbc.writeMem(0x765f, { 0x8c });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5091, gbc.sp());
        EXPECT(0x7660, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0196
        gbc.setState(0x4b73, 0x57, 0xdf0, 0xd637, 0xd057, 0x921d, 0x0, 0x0);
        gbc.writeMem(0x4b73, { 0x8c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x57, gbc.sp());
        EXPECT(0x4b74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0197
        gbc.setState(0xbdb0, 0xa1a0, 0xd8d0, 0xc680, 0xc5b9, 0x3c49, 0x1, 0x1);
        gbc.writeMem(0xbdb0, { 0x8c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xa1a0, gbc.sp());
        EXPECT(0xbdb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbdb0));
        // 8C 0198
        gbc.setState(0x16c3, 0xe373, 0x95b0, 0xe1c1, 0xc05a, 0x4205, 0x1, 0x0);
        gbc.writeMem(0x16c3, { 0x8c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe373, gbc.sp());
        EXPECT(0x16c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0199
        gbc.setState(0x30b9, 0x2fd4, 0x5f00, 0x2808, 0x598c, 0x92b5, 0x1, 0x1);
        gbc.writeMem(0x30b9, { 0x8c });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x92, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x2fd4, gbc.sp());
        EXPECT(0x30ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 019A
        gbc.setState(0xcc4c, 0xb798, 0xd480, 0x2f67, 0x67aa, 0x663b, 0x1, 0x0);
        gbc.writeMem(0xcc4c, { 0x8c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb798, gbc.sp());
        EXPECT(0xcc4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcc4c));
        // 8C 019B
        gbc.setState(0x91a3, 0x1d72, 0x7460, 0xc908, 0xfcbe, 0x5b4c, 0x0, 0x1);
        gbc.writeMem(0x91a3, { 0x8c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x1d72, gbc.sp());
        EXPECT(0x91a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x91a3));
        // 8C 019C
        gbc.setState(0xb647, 0x846c, 0x1bc0, 0xe25c, 0x6d9d, 0x9005, 0x1, 0x1);
        gbc.writeMem(0xb647, { 0x8c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x846c, gbc.sp());
        EXPECT(0xb648, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb647));
        // 8C 019D
        gbc.setState(0x3f11, 0xaa11, 0x86c0, 0xb5bd, 0x7e93, 0x5d8c, 0x0, 0x0);
        gbc.writeMem(0x3f11, { 0x8c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xaa11, gbc.sp());
        EXPECT(0x3f12, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 019E
        gbc.setState(0x9304, 0xb56f, 0xd740, 0x527e, 0x779f, 0x326a, 0x0, 0x1);
        gbc.writeMem(0x9304, { 0x8c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xb56f, gbc.sp());
        EXPECT(0x9305, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9304));
        // 8C 019F
        gbc.setState(0xc283, 0x7e91, 0x3fd0, 0xaf4d, 0x4cc2, 0xb9f9, 0x1, 0x0);
        gbc.writeMem(0xc283, { 0x8c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x7e91, gbc.sp());
        EXPECT(0xc284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc283));
        // 8C 01A0
        gbc.setState(0xaf90, 0x4f46, 0xb4d0, 0xfce1, 0x9616, 0x7d59, 0x1, 0x1);
        gbc.writeMem(0xaf90, { 0x8c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x4f46, gbc.sp());
        EXPECT(0xaf91, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaf90));
        // 8C 01A1
        gbc.setState(0x2ecb, 0x3527, 0xe4c0, 0x1878, 0x473e, 0x353a, 0x1, 0x1);
        gbc.writeMem(0x2ecb, { 0x8c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x3527, gbc.sp());
        EXPECT(0x2ecc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01A2
        gbc.setState(0xabd2, 0xc23, 0xd460, 0x5136, 0xb365, 0x777e, 0x1, 0x1);
        gbc.writeMem(0xabd2, { 0x8c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xc23, gbc.sp());
        EXPECT(0xabd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xabd2));
        // 8C 01A3
        gbc.setState(0x825b, 0x1061, 0x6860, 0x1cb9, 0x51dc, 0x9d95, 0x1, 0x0);
        gbc.writeMem(0x825b, { 0x8c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x1061, gbc.sp());
        EXPECT(0x825c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x825b));
        // 8C 01A4
        gbc.setState(0xd0e7, 0xf066, 0x9ed0, 0x3d0b, 0x7908, 0x37ce, 0x1, 0x0);
        gbc.writeMem(0xd0e7, { 0x8c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xf066, gbc.sp());
        EXPECT(0xd0e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd0e7));
        // 8C 01A5
        gbc.setState(0x8bc2, 0x1f70, 0x9410, 0xccc4, 0xc35d, 0x6824, 0x0, 0x0);
        gbc.writeMem(0x8bc2, { 0x8c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x1f70, gbc.sp());
        EXPECT(0x8bc3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8bc2));
        // 8C 01A6
        gbc.setState(0xe2e7, 0xeea1, 0x3ca0, 0x96c2, 0x5008, 0xfad1, 0x0, 0x0);
        gbc.writeMem(0xe2e7, { 0x8c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xeea1, gbc.sp());
        EXPECT(0xe2e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe2e7));
        // 8C 01A7
        gbc.setState(0xb1a, 0xfdc6, 0x8cf0, 0x381c, 0x6f23, 0xcac5, 0x0, 0x1);
        gbc.writeMem(0xb1a, { 0x8c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xfdc6, gbc.sp());
        EXPECT(0xb1b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01A8
        gbc.setState(0x6c26, 0x73ee, 0xbcc0, 0x1827, 0x2b9f, 0x96cd, 0x0, 0x1);
        gbc.writeMem(0x6c26, { 0x8c });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x73ee, gbc.sp());
        EXPECT(0x6c27, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01A9
        gbc.setState(0x8d5d, 0xdc4, 0x6310, 0xcc6d, 0x6262, 0x804c, 0x1, 0x1);
        gbc.writeMem(0x8d5d, { 0x8c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xdc4, gbc.sp());
        EXPECT(0x8d5e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8d5d));
        // 8C 01AB
        gbc.setState(0xe582, 0xa995, 0x1000, 0xda95, 0x3854, 0xcf78, 0x1, 0x0);
        gbc.writeMem(0xe582, { 0x8c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xa995, gbc.sp());
        EXPECT(0xe583, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe582));
        // 8C 01AC
        gbc.setState(0x900, 0x29bf, 0x4310, 0xd707, 0x4d91, 0x9dd3, 0x0, 0x1);
        gbc.writeMem(0x900, { 0x8c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x29bf, gbc.sp());
        EXPECT(0x901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01AD
        gbc.setState(0xdfc5, 0xb8ba, 0x6280, 0x931b, 0xcdfd, 0xfc17, 0x0, 0x0);
        gbc.writeMem(0xdfc5, { 0x8c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb8ba, gbc.sp());
        EXPECT(0xdfc6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdfc5));
        // 8C 01AE
        gbc.setState(0x47eb, 0xdd84, 0x5960, 0xc4fc, 0xece1, 0x1501, 0x0, 0x0);
        gbc.writeMem(0x47eb, { 0x8c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xdd84, gbc.sp());
        EXPECT(0x47ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01AF
        gbc.setState(0x73f, 0x4e6, 0x6e70, 0x2cfb, 0x45aa, 0x3dd, 0x0, 0x0);
        gbc.writeMem(0x73f, { 0x8c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x4e6, gbc.sp());
        EXPECT(0x740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01B0
        gbc.setState(0xef61, 0xa1a3, 0x4880, 0xf82b, 0xc1bb, 0x66ce, 0x0, 0x0);
        gbc.writeMem(0xef61, { 0x8c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xa1a3, gbc.sp());
        EXPECT(0xef62, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xef61));
        // 8C 01B1
        gbc.setState(0x41c9, 0x5077, 0xda80, 0x4fbe, 0xdf2a, 0xa68a, 0x1, 0x1);
        gbc.writeMem(0x41c9, { 0x8c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x5077, gbc.sp());
        EXPECT(0x41ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01B2
        gbc.setState(0x1e87, 0x6bc, 0x2f60, 0xf902, 0x9721, 0xd4cc, 0x1, 0x0);
        gbc.writeMem(0x1e87, { 0x8c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x6bc, gbc.sp());
        EXPECT(0x1e88, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01B3
        gbc.setState(0xaf6c, 0xf97, 0xf060, 0x1333, 0x14c3, 0x5d28, 0x0, 0x0);
        gbc.writeMem(0xaf6c, { 0x8c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf97, gbc.sp());
        EXPECT(0xaf6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaf6c));
        // 8C 01B4
        gbc.setState(0x7665, 0xc99a, 0xb990, 0x28d7, 0xb3c3, 0xa37c, 0x1, 0x1);
        gbc.writeMem(0x7665, { 0x8c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xc99a, gbc.sp());
        EXPECT(0x7666, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01B5
        gbc.setState(0x10db, 0x899, 0x55a0, 0x5667, 0xb27, 0x68b2, 0x0, 0x0);
        gbc.writeMem(0x10db, { 0x8c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x899, gbc.sp());
        EXPECT(0x10dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01B6
        gbc.setState(0x6961, 0xf28f, 0x3810, 0x68aa, 0x9406, 0x42b3, 0x1, 0x0);
        gbc.writeMem(0x6961, { 0x8c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0xf28f, gbc.sp());
        EXPECT(0x6962, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01B7
        gbc.setState(0x9d14, 0xdda8, 0x8f40, 0xfcd2, 0x4814, 0x6806, 0x0, 0x0);
        gbc.writeMem(0x9d14, { 0x8c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xdda8, gbc.sp());
        EXPECT(0x9d15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9d14));
        // 8C 01B8
        gbc.setState(0xd99b, 0x86fa, 0x16f0, 0x43f9, 0xd527, 0xf7ba, 0x0, 0x0);
        gbc.writeMem(0xd99b, { 0x8c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x86fa, gbc.sp());
        EXPECT(0xd99c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd99b));
        // 8C 01B9
        gbc.setState(0xaa5f, 0xd593, 0x22c0, 0xb997, 0x59c1, 0x7e23, 0x0, 0x1);
        gbc.writeMem(0xaa5f, { 0x8c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xb9, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd593, gbc.sp());
        EXPECT(0xaa60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaa5f));
        // 8C 01BA
        gbc.setState(0xa34b, 0x4b9d, 0xc640, 0xdffd, 0x15d1, 0x236e, 0x1, 0x1);
        gbc.writeMem(0xa34b, { 0x8c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4b9d, gbc.sp());
        EXPECT(0xa34c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa34b));
        // 8C 01BB
        gbc.setState(0x7d1b, 0x2b00, 0x6a30, 0xc945, 0x5e83, 0xc667, 0x1, 0x0);
        gbc.writeMem(0x7d1b, { 0x8c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2b00, gbc.sp());
        EXPECT(0x7d1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01BD
        gbc.setState(0x7de8, 0x4a69, 0x6150, 0x7e38, 0x9720, 0x5996, 0x0, 0x0);
        gbc.writeMem(0x7de8, { 0x8c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x4a69, gbc.sp());
        EXPECT(0x7de9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01BE
        gbc.setState(0x7346, 0x9bff, 0xa630, 0xc3ae, 0x5414, 0x6adc, 0x1, 0x1);
        gbc.writeMem(0x7346, { 0x8c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9bff, gbc.sp());
        EXPECT(0x7347, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01BF
        gbc.setState(0x1c32, 0x9042, 0x6410, 0x9ec8, 0x40ed, 0xb35, 0x1, 0x1);
        gbc.writeMem(0x1c32, { 0x8c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x9042, gbc.sp());
        EXPECT(0x1c33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01C0
        gbc.setState(0x592b, 0x490c, 0x7750, 0xeefb, 0x4d46, 0x9fbc, 0x1, 0x1);
        gbc.writeMem(0x592b, { 0x8c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x490c, gbc.sp());
        EXPECT(0x592c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01C1
        gbc.setState(0xb842, 0xc1ae, 0x6430, 0x16fa, 0xd094, 0xca59, 0x1, 0x0);
        gbc.writeMem(0xb842, { 0x8c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xc1ae, gbc.sp());
        EXPECT(0xb843, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb842));
        // 8C 01C3
        gbc.setState(0x4637, 0x69a3, 0x88a0, 0xae16, 0xcfee, 0x8998, 0x1, 0x1);
        gbc.writeMem(0x4637, { 0x8c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x69a3, gbc.sp());
        EXPECT(0x4638, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01C4
        gbc.setState(0x56bb, 0x3028, 0x5740, 0x2bf5, 0xfa11, 0x13a3, 0x1, 0x1);
        gbc.writeMem(0x56bb, { 0x8c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x3028, gbc.sp());
        EXPECT(0x56bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01C5
        gbc.setState(0x51a8, 0xa76, 0xb7a0, 0x7310, 0xe873, 0x629a, 0x0, 0x0);
        gbc.writeMem(0x51a8, { 0x8c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xa76, gbc.sp());
        EXPECT(0x51a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01C6
        gbc.setState(0x226f, 0x7e30, 0x1350, 0x98e, 0xff52, 0x6049, 0x0, 0x1);
        gbc.writeMem(0x226f, { 0x8c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7e30, gbc.sp());
        EXPECT(0x2270, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01C7
        gbc.setState(0xd4d8, 0x20d1, 0x8b0, 0xbc43, 0x46e2, 0x1619, 0x0, 0x1);
        gbc.writeMem(0xd4d8, { 0x8c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x20d1, gbc.sp());
        EXPECT(0xd4d9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd4d8));
        // 8C 01C8
        gbc.setState(0x4f1e, 0xa593, 0xef90, 0xd3c9, 0xb0e8, 0x2a79, 0x1, 0x1);
        gbc.writeMem(0x4f1e, { 0x8c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0xa593, gbc.sp());
        EXPECT(0x4f1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01C9
        gbc.setState(0x28, 0x8ae, 0x57a0, 0xde03, 0x83cd, 0xfce2, 0x1, 0x1);
        gbc.writeMem(0x28, { 0x8c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8ae, gbc.sp());
        EXPECT(0x29, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01CA
        gbc.setState(0x411e, 0xbee7, 0xf4f0, 0xec27, 0xc4fe, 0xd931, 0x1, 0x1);
        gbc.writeMem(0x411e, { 0x8c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xbee7, gbc.sp());
        EXPECT(0x411f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01CB
        gbc.setState(0x39a3, 0xc227, 0x5720, 0xa795, 0x5823, 0x4ba9, 0x0, 0x1);
        gbc.writeMem(0x39a3, { 0x8c });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0xc227, gbc.sp());
        EXPECT(0x39a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01CC
        gbc.setState(0x826a, 0xd7dc, 0xbe30, 0x4c9e, 0xfa47, 0xe643, 0x1, 0x0);
        gbc.writeMem(0x826a, { 0x8c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xd7dc, gbc.sp());
        EXPECT(0x826b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x826a));
        // 8C 01CD
        gbc.setState(0xb37a, 0x568c, 0x3270, 0x8e3a, 0xb463, 0x673c, 0x1, 0x0);
        gbc.writeMem(0xb37a, { 0x8c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x568c, gbc.sp());
        EXPECT(0xb37b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb37a));
        // 8C 01CE
        gbc.setState(0x65ac, 0x1e34, 0x6b40, 0xdcbe, 0xd215, 0xd041, 0x0, 0x1);
        gbc.writeMem(0x65ac, { 0x8c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x1e34, gbc.sp());
        EXPECT(0x65ad, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01D0
        gbc.setState(0x3c73, 0x3ba5, 0xc690, 0x645d, 0xc92e, 0x279a, 0x1, 0x1);
        gbc.writeMem(0x3c73, { 0x8c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x3ba5, gbc.sp());
        EXPECT(0x3c74, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01D1
        gbc.setState(0x2452, 0xeeed, 0x2fc0, 0xbe1a, 0x9bb5, 0xa621, 0x1, 0x1);
        gbc.writeMem(0x2452, { 0x8c });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xeeed, gbc.sp());
        EXPECT(0x2453, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01D2
        gbc.setState(0x80f2, 0xa02e, 0x9670, 0xe0e3, 0x28c1, 0x94b5, 0x1, 0x0);
        gbc.writeMem(0x80f2, { 0x8c });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa02e, gbc.sp());
        EXPECT(0x80f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x80f2));
        // 8C 01D3
        gbc.setState(0xaa7b, 0xcbea, 0xc750, 0x5499, 0x8c86, 0x8826, 0x1, 0x1);
        gbc.writeMem(0xaa7b, { 0x8c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xcbea, gbc.sp());
        EXPECT(0xaa7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaa7b));
        // 8C 01D4
        gbc.setState(0xce85, 0x4c20, 0x4bb0, 0x5827, 0x9c90, 0x3475, 0x1, 0x1);
        gbc.writeMem(0xce85, { 0x8c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x4c20, gbc.sp());
        EXPECT(0xce86, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xce85));
        // 8C 01D5
        gbc.setState(0x5310, 0x498a, 0x58c0, 0x347d, 0xc7b9, 0xb5ac, 0x0, 0x1);
        gbc.writeMem(0x5310, { 0x8c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0x498a, gbc.sp());
        EXPECT(0x5311, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01D6
        gbc.setState(0x6c94, 0xb81a, 0xd7c0, 0x110, 0x3a79, 0x59b6, 0x1, 0x1);
        gbc.writeMem(0x6c94, { 0x8c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb81a, gbc.sp());
        EXPECT(0x6c95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01D7
        gbc.setState(0x57a3, 0xcf11, 0x9ad0, 0x29ee, 0xf4f3, 0x3e39, 0x0, 0x0);
        gbc.writeMem(0x57a3, { 0x8c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcf11, gbc.sp());
        EXPECT(0x57a4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01D8
        gbc.setState(0xbfb2, 0x1836, 0xbdd0, 0xe9f4, 0xb63f, 0x95f3, 0x0, 0x0);
        gbc.writeMem(0xbfb2, { 0x8c });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x1836, gbc.sp());
        EXPECT(0xbfb3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbfb2));
        // 8C 01D9
        gbc.setState(0xb04e, 0x804a, 0x34f0, 0x6313, 0xc1a2, 0x22ab, 0x1, 0x1);
        gbc.writeMem(0xb04e, { 0x8c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x804a, gbc.sp());
        EXPECT(0xb04f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb04e));
        // 8C 01DA
        gbc.setState(0xcc4d, 0xbbd4, 0x8a70, 0x7850, 0x28c7, 0xf080, 0x0, 0x0);
        gbc.writeMem(0xcc4d, { 0x8c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xbbd4, gbc.sp());
        EXPECT(0xcc4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcc4d));
        // 8C 01DB
        gbc.setState(0xb3f3, 0x7090, 0xb1d0, 0xe151, 0x535a, 0x8584, 0x1, 0x1);
        gbc.writeMem(0xb3f3, { 0x8c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x7090, gbc.sp());
        EXPECT(0xb3f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb3f3));
        // 8C 01DC
        gbc.setState(0x5484, 0x7595, 0x2cd0, 0xfb06, 0x6b11, 0x8749, 0x1, 0x1);
        gbc.writeMem(0x5484, { 0x8c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7595, gbc.sp());
        EXPECT(0x5485, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01DD
        gbc.setState(0xb16c, 0x83ec, 0xe5b0, 0xc2ed, 0xda83, 0x21a4, 0x0, 0x0);
        gbc.writeMem(0xb16c, { 0x8c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x83ec, gbc.sp());
        EXPECT(0xb16d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb16c));
        // 8C 01DE
        gbc.setState(0x26a0, 0x17a3, 0x2b80, 0x764, 0xc614, 0xcdf4, 0x0, 0x0);
        gbc.writeMem(0x26a0, { 0x8c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x17a3, gbc.sp());
        EXPECT(0x26a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01DF
        gbc.setState(0x2c3, 0xaba3, 0xe170, 0x716f, 0xda94, 0xb7c7, 0x0, 0x0);
        gbc.writeMem(0x2c3, { 0x8c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xaba3, gbc.sp());
        EXPECT(0x2c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01E0
        gbc.setState(0x9f5d, 0xf9bd, 0x9a70, 0x9c03, 0x2a47, 0x2801, 0x0, 0x0);
        gbc.writeMem(0x9f5d, { 0x8c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xf9bd, gbc.sp());
        EXPECT(0x9f5e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9f5d));
        // 8C 01E1
        gbc.setState(0x8424, 0xa7e6, 0xa460, 0xfc4b, 0x6a58, 0x608d, 0x1, 0x0);
        gbc.writeMem(0x8424, { 0x8c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xa7e6, gbc.sp());
        EXPECT(0x8425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8424));
        // 8C 01E2
        gbc.setState(0xe6eb, 0x5998, 0xf490, 0x2c97, 0x54b7, 0xecd5, 0x0, 0x0);
        gbc.writeMem(0xe6eb, { 0x8c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x5998, gbc.sp());
        EXPECT(0xe6ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe6eb));
        // 8C 01E3
        gbc.setState(0x3fd9, 0xd8fa, 0x68f0, 0xbf21, 0xbfe1, 0xfc0d, 0x0, 0x0);
        gbc.writeMem(0x3fd9, { 0x8c });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xd8fa, gbc.sp());
        EXPECT(0x3fda, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01E4
        gbc.setState(0xdeff, 0xe084, 0xf170, 0x3c4a, 0x2ec8, 0xe6e7, 0x0, 0x1);
        gbc.writeMem(0xdeff, { 0x8c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe084, gbc.sp());
        EXPECT(0xdf00, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdeff));
        // 8C 01E6
        gbc.setState(0x8489, 0x3239, 0x3470, 0xd1a8, 0xc3bc, 0xadf6, 0x0, 0x1);
        gbc.writeMem(0x8489, { 0x8c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x3239, gbc.sp());
        EXPECT(0x848a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8489));
        // 8C 01E7
        gbc.setState(0x1bb4, 0x5779, 0x8060, 0xbe54, 0xde62, 0xb309, 0x0, 0x0);
        gbc.writeMem(0x1bb4, { 0x8c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5779, gbc.sp());
        EXPECT(0x1bb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01E8
        gbc.setState(0x336d, 0x7312, 0xbb70, 0x7ce8, 0x1f98, 0xc16f, 0x1, 0x0);
        gbc.writeMem(0x336d, { 0x8c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x7312, gbc.sp());
        EXPECT(0x336e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01E9
        gbc.setState(0x7aa, 0x7a9b, 0x5a50, 0xaa99, 0xb53c, 0x7e51, 0x1, 0x1);
        gbc.writeMem(0x7aa, { 0x8c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x7a9b, gbc.sp());
        EXPECT(0x7ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01EA
        gbc.setState(0xcd08, 0x35b2, 0x3400, 0xd82f, 0x139f, 0xfd6e, 0x1, 0x0);
        gbc.writeMem(0xcd08, { 0x8c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x35b2, gbc.sp());
        EXPECT(0xcd09, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcd08));
        // 8C 01EB
        gbc.setState(0xbd0d, 0xa368, 0x4d50, 0x22bc, 0x5553, 0x8235, 0x1, 0x0);
        gbc.writeMem(0xbd0d, { 0x8c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xa368, gbc.sp());
        EXPECT(0xbd0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbd0d));
        // 8C 01EC
        gbc.setState(0x9771, 0x3193, 0xb5a0, 0x46b1, 0x20fd, 0x47dd, 0x1, 0x0);
        gbc.writeMem(0x9771, { 0x8c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x3193, gbc.sp());
        EXPECT(0x9772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9771));
        // 8C 01ED
        gbc.setState(0xd28c, 0x78da, 0xe300, 0x4203, 0x76e9, 0x4151, 0x1, 0x1);
        gbc.writeMem(0xd28c, { 0x8c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x78da, gbc.sp());
        EXPECT(0xd28d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd28c));
        // 8C 01EE
        gbc.setState(0xbbc2, 0xb2e6, 0xa7a0, 0xd229, 0x794f, 0xe68b, 0x1, 0x1);
        gbc.writeMem(0xbbc2, { 0x8c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xb2e6, gbc.sp());
        EXPECT(0xbbc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbbc2));
        // 8C 01EF
        gbc.setState(0x870d, 0xa8b, 0x1d50, 0x2a0e, 0x36ae, 0x131e, 0x0, 0x1);
        gbc.writeMem(0x870d, { 0x8c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xa8b, gbc.sp());
        EXPECT(0x870e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x870d));
        // 8C 01F0
        gbc.setState(0x7951, 0x8ac7, 0xdcb0, 0x75d2, 0xf0a1, 0x280b, 0x1, 0x0);
        gbc.writeMem(0x7951, { 0x8c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x8ac7, gbc.sp());
        EXPECT(0x7952, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01F1
        gbc.setState(0x6f7c, 0xea1a, 0xb960, 0xaacd, 0x9f1c, 0xb79e, 0x0, 0x1);
        gbc.writeMem(0x6f7c, { 0x8c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xea1a, gbc.sp());
        EXPECT(0x6f7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01F2
        gbc.setState(0xbd15, 0xfc2, 0x7490, 0x248b, 0xffa6, 0x1f47, 0x1, 0x1);
        gbc.writeMem(0xbd15, { 0x8c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xfc2, gbc.sp());
        EXPECT(0xbd16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbd15));
        // 8C 01F3
        gbc.setState(0x2676, 0x723d, 0x4810, 0x3440, 0x398e, 0x15b3, 0x0, 0x1);
        gbc.writeMem(0x2676, { 0x8c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x723d, gbc.sp());
        EXPECT(0x2677, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01F4
        gbc.setState(0xe1b8, 0x6ea4, 0xe6f0, 0x9275, 0x7334, 0x1883, 0x0, 0x0);
        gbc.writeMem(0xe1b8, { 0x8c });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x6ea4, gbc.sp());
        EXPECT(0xe1b9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe1b8));
        // 8C 01F5
        gbc.setState(0x3ed5, 0xfc86, 0x9f0, 0x6853, 0xaf7e, 0x9e8c, 0x0, 0x1);
        gbc.writeMem(0x3ed5, { 0x8c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfc86, gbc.sp());
        EXPECT(0x3ed6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01F6
        gbc.setState(0x77c7, 0xb9e8, 0xf630, 0x9fea, 0x976e, 0x15f8, 0x1, 0x1);
        gbc.writeMem(0x77c7, { 0x8c });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xb9e8, gbc.sp());
        EXPECT(0x77c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01F7
        gbc.setState(0x32e2, 0xd67c, 0x9a30, 0x2e5e, 0xc786, 0x898c, 0x1, 0x1);
        gbc.writeMem(0x32e2, { 0x8c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xd67c, gbc.sp());
        EXPECT(0x32e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01F8
        gbc.setState(0xe950, 0x204, 0xb1c0, 0x2a47, 0x659d, 0xca9, 0x0, 0x1);
        gbc.writeMem(0xe950, { 0x8c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x204, gbc.sp());
        EXPECT(0xe951, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe950));
        // 8C 01FA
        gbc.setState(0x8d36, 0x85b9, 0x85a0, 0xe694, 0xbf10, 0x9964, 0x1, 0x0);
        gbc.writeMem(0x8d36, { 0x8c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x85b9, gbc.sp());
        EXPECT(0x8d37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8d36));
        // 8C 01FB
        gbc.setState(0x5b3f, 0x89cb, 0x67c0, 0x49c0, 0x3c34, 0x9d1e, 0x0, 0x1);
        gbc.writeMem(0x5b3f, { 0x8c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x89cb, gbc.sp());
        EXPECT(0x5b40, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 01FC
        gbc.setState(0x9a1c, 0xac21, 0x6e60, 0x781f, 0x48e0, 0x9da3, 0x1, 0x1);
        gbc.writeMem(0x9a1c, { 0x8c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xac21, gbc.sp());
        EXPECT(0x9a1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9a1c));
        // 8C 01FD
        gbc.setState(0xcb1e, 0xfd21, 0x8c40, 0x8a4d, 0xff66, 0xd82c, 0x0, 0x0);
        gbc.writeMem(0xcb1e, { 0x8c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xfd21, gbc.sp());
        EXPECT(0xcb1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcb1e));
        // 8C 01FE
        gbc.setState(0x10f2, 0x86ad, 0x1640, 0x7528, 0x5390, 0xe3c5, 0x0, 0x1);
        gbc.writeMem(0x10f2, { 0x8c });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xe3, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x86ad, gbc.sp());
        EXPECT(0x10f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 01FF
        gbc.setState(0xaaca, 0x4466, 0x6590, 0x18d1, 0x893f, 0xefe8, 0x1, 0x1);
        gbc.writeMem(0xaaca, { 0x8c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x4466, gbc.sp());
        EXPECT(0xaacb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaaca));
        // 8C 0200
        gbc.setState(0xaf65, 0xe507, 0xfbf0, 0xc755, 0xfef3, 0x580, 0x1, 0x0);
        gbc.writeMem(0xaf65, { 0x8c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xe507, gbc.sp());
        EXPECT(0xaf66, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaf65));
        // 8C 0201
        gbc.setState(0xcd27, 0x652b, 0x4880, 0xe542, 0xe9fd, 0x9520, 0x1, 0x1);
        gbc.writeMem(0xcd27, { 0x8c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x652b, gbc.sp());
        EXPECT(0xcd28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcd27));
        // 8C 0202
        gbc.setState(0xbd9f, 0xc655, 0x2350, 0xeb6, 0xa26b, 0x72b7, 0x1, 0x1);
        gbc.writeMem(0xbd9f, { 0x8c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xc655, gbc.sp());
        EXPECT(0xbda0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbd9f));
        // 8C 0203
        gbc.setState(0x8332, 0xfbe8, 0x9b70, 0xc445, 0xb13e, 0xf0d9, 0x0, 0x0);
        gbc.writeMem(0x8332, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xfbe8, gbc.sp());
        EXPECT(0x8333, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8332));
        // 8C 0204
        gbc.setState(0xd3dd, 0xdc39, 0x1a40, 0xc1c4, 0x13cf, 0x4d53, 0x0, 0x1);
        gbc.writeMem(0xd3dd, { 0x8c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xdc39, gbc.sp());
        EXPECT(0xd3de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd3dd));
        // 8C 0205
        gbc.setState(0xe3ea, 0x8bd0, 0xa6d0, 0xdc85, 0x5cd3, 0xcc94, 0x1, 0x1);
        gbc.writeMem(0xe3ea, { 0x8c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xdc, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x8bd0, gbc.sp());
        EXPECT(0xe3eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe3ea));
        // 8C 0206
        gbc.setState(0x6c89, 0xce94, 0xcdd0, 0xa893, 0x2757, 0x15c4, 0x0, 0x0);
        gbc.writeMem(0x6c89, { 0x8c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0xce94, gbc.sp());
        EXPECT(0x6c8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0207
        gbc.setState(0x2eae, 0xbac3, 0xe540, 0xfca0, 0xa8b9, 0xb382, 0x1, 0x1);
        gbc.writeMem(0x2eae, { 0x8c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xbac3, gbc.sp());
        EXPECT(0x2eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0208
        gbc.setState(0x9896, 0xd7f5, 0x830, 0xb4ab, 0x2883, 0x6d89, 0x0, 0x1);
        gbc.writeMem(0x9896, { 0x8c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xd7f5, gbc.sp());
        EXPECT(0x9897, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9896));
        // 8C 020A
        gbc.setState(0x64b2, 0x5777, 0xf550, 0xf8ed, 0x94fb, 0x43c4, 0x0, 0x0);
        gbc.writeMem(0x64b2, { 0x8c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5777, gbc.sp());
        EXPECT(0x64b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 020B
        gbc.setState(0x8886, 0x2f93, 0xf060, 0xf11b, 0xebc6, 0xdcd5, 0x0, 0x0);
        gbc.writeMem(0x8886, { 0x8c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x2f93, gbc.sp());
        EXPECT(0x8887, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8886));
        // 8C 020C
        gbc.setState(0x16d, 0x5140, 0xbb40, 0x275e, 0x9fe5, 0xb138, 0x1, 0x1);
        gbc.writeMem(0x16d, { 0x8c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5140, gbc.sp());
        EXPECT(0x16e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 020D
        gbc.setState(0x79c3, 0x7be5, 0x1f50, 0x45e9, 0x1c32, 0xd8af, 0x0, 0x0);
        gbc.writeMem(0x79c3, { 0x8c });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x7be5, gbc.sp());
        EXPECT(0x79c4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 020E
        gbc.setState(0x8eb0, 0x3226, 0x52d0, 0x2c8f, 0x379f, 0xa63, 0x1, 0x1);
        gbc.writeMem(0x8eb0, { 0x8c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x3226, gbc.sp());
        EXPECT(0x8eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8eb0));
        // 8C 020F
        gbc.setState(0xbf7c, 0xd8ea, 0x8da0, 0xaba4, 0x4452, 0xeb74, 0x0, 0x0);
        gbc.writeMem(0xbf7c, { 0x8c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xd8ea, gbc.sp());
        EXPECT(0xbf7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbf7c));
        // 8C 0210
        gbc.setState(0x3013, 0x4a32, 0xbfd0, 0x6b8e, 0xe876, 0x6409, 0x0, 0x0);
        gbc.writeMem(0x3013, { 0x8c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x4a32, gbc.sp());
        EXPECT(0x3014, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0211
        gbc.setState(0x56ba, 0xe8d0, 0xb460, 0x608d, 0xd23e, 0xeb4c, 0x1, 0x0);
        gbc.writeMem(0x56ba, { 0x8c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0xe8d0, gbc.sp());
        EXPECT(0x56bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0212
        gbc.setState(0x2baf, 0x2733, 0x60, 0x3443, 0x3702, 0x1421, 0x1, 0x0);
        gbc.writeMem(0x2baf, { 0x8c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x2733, gbc.sp());
        EXPECT(0x2bb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0213
        gbc.setState(0x4ea4, 0x373b, 0x4100, 0xb752, 0xd8cd, 0x181b, 0x1, 0x0);
        gbc.writeMem(0x4ea4, { 0x8c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x373b, gbc.sp());
        EXPECT(0x4ea5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0214
        gbc.setState(0x34ab, 0x5318, 0x48a0, 0xe3d7, 0x1d36, 0x7e5, 0x1, 0x0);
        gbc.writeMem(0x34ab, { 0x8c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5318, gbc.sp());
        EXPECT(0x34ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0215
        gbc.setState(0x6c67, 0xefe4, 0x1630, 0xe274, 0xf76b, 0xe70d, 0x1, 0x0);
        gbc.writeMem(0x6c67, { 0x8c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xefe4, gbc.sp());
        EXPECT(0x6c68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0216
        gbc.setState(0x1c91, 0x3c51, 0x6f50, 0x5847, 0xf6a9, 0x309f, 0x1, 0x1);
        gbc.writeMem(0x1c91, { 0x8c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x3c51, gbc.sp());
        EXPECT(0x1c92, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0217
        gbc.setState(0x8eca, 0xda61, 0x47d0, 0x7a3a, 0xc87, 0xf974, 0x0, 0x0);
        gbc.writeMem(0x8eca, { 0x8c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xda61, gbc.sp());
        EXPECT(0x8ecb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8eca));
        // 8C 0218
        gbc.setState(0x422f, 0xb9d4, 0xbcf0, 0x15fd, 0xc9e0, 0x38ff, 0x1, 0x0);
        gbc.writeMem(0x422f, { 0x8c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xb9d4, gbc.sp());
        EXPECT(0x4230, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0219
        gbc.setState(0x181f, 0xd954, 0x2760, 0xa2d1, 0xc558, 0x94c9, 0x0, 0x0);
        gbc.writeMem(0x181f, { 0x8c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xd954, gbc.sp());
        EXPECT(0x1820, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 021A
        gbc.setState(0x8f29, 0x373a, 0xd0, 0x36c7, 0xc033, 0x964e, 0x1, 0x1);
        gbc.writeMem(0x8f29, { 0x8c });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x373a, gbc.sp());
        EXPECT(0x8f2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8f29));
        // 8C 021B
        gbc.setState(0xe13c, 0x99a3, 0x4150, 0x7688, 0x1faa, 0xf9f3, 0x1, 0x0);
        gbc.writeMem(0xe13c, { 0x8c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x99a3, gbc.sp());
        EXPECT(0xe13d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe13c));
        // 8C 021C
        gbc.setState(0xef52, 0x6247, 0x5f70, 0xa79f, 0xa09b, 0x38e4, 0x1, 0x0);
        gbc.writeMem(0xef52, { 0x8c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6247, gbc.sp());
        EXPECT(0xef53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xef52));
        // 8C 021D
        gbc.setState(0x6b92, 0xaa3f, 0xa620, 0xdb39, 0x617d, 0xfb0d, 0x0, 0x0);
        gbc.writeMem(0x6b92, { 0x8c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xaa3f, gbc.sp());
        EXPECT(0x6b93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 021E
        gbc.setState(0x66b2, 0x66a, 0xaf00, 0x2202, 0x96d2, 0x5c79, 0x1, 0x0);
        gbc.writeMem(0x66b2, { 0x8c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x66a, gbc.sp());
        EXPECT(0x66b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 021F
        gbc.setState(0x8f80, 0x87f6, 0x9f30, 0xac61, 0x890e, 0x392b, 0x0, 0x1);
        gbc.writeMem(0x8f80, { 0x8c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x87f6, gbc.sp());
        EXPECT(0x8f81, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8f80));
        // 8C 0220
        gbc.setState(0x209, 0x8ca6, 0xa0d0, 0xb1e4, 0xf251, 0xc161, 0x0, 0x1);
        gbc.writeMem(0x209, { 0x8c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x8ca6, gbc.sp());
        EXPECT(0x20a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0221
        gbc.setState(0xe2f7, 0xe518, 0xedf0, 0x7372, 0xd619, 0xd8c2, 0x0, 0x1);
        gbc.writeMem(0xe2f7, { 0x8c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xe518, gbc.sp());
        EXPECT(0xe2f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe2f7));
        // 8C 0222
        gbc.setState(0xbc72, 0xb71f, 0x5cc0, 0xf46d, 0xf720, 0x130e, 0x1, 0x1);
        gbc.writeMem(0xbc72, { 0x8c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xb71f, gbc.sp());
        EXPECT(0xbc73, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbc72));
        // 8C 0223
        gbc.setState(0x7b22, 0x61e0, 0xd430, 0x5e39, 0xf8b7, 0xa2b7, 0x1, 0x0);
        gbc.writeMem(0x7b22, { 0x8c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x61e0, gbc.sp());
        EXPECT(0x7b23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0224
        gbc.setState(0x2d17, 0x6380, 0x30e0, 0x2f93, 0xf5fe, 0xc786, 0x1, 0x1);
        gbc.writeMem(0x2d17, { 0x8c });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x6380, gbc.sp());
        EXPECT(0x2d18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0225
        gbc.setState(0x639c, 0x35fb, 0xab90, 0x8f61, 0xdfb5, 0xd601, 0x0, 0x0);
        gbc.writeMem(0x639c, { 0x8c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x35fb, gbc.sp());
        EXPECT(0x639d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0226
        gbc.setState(0xec7e, 0x597c, 0xcc40, 0x4956, 0x648f, 0x4b69, 0x1, 0x1);
        gbc.writeMem(0xec7e, { 0x8c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x597c, gbc.sp());
        EXPECT(0xec7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xec7e));
        // 8C 0227
        gbc.setState(0x27f8, 0x272, 0x3f30, 0x1a01, 0x6fe5, 0x1ab3, 0x0, 0x0);
        gbc.writeMem(0x27f8, { 0x8c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x272, gbc.sp());
        EXPECT(0x27f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0228
        gbc.setState(0x213c, 0x698c, 0x9550, 0x18a2, 0x566d, 0xb210, 0x1, 0x1);
        gbc.writeMem(0x213c, { 0x8c });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x698c, gbc.sp());
        EXPECT(0x213d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0229
        gbc.setState(0xa4cd, 0xd081, 0x2f10, 0x4ea7, 0xc3a0, 0x4b81, 0x1, 0x1);
        gbc.writeMem(0xa4cd, { 0x8c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd081, gbc.sp());
        EXPECT(0xa4ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa4cd));
        // 8C 022B
        gbc.setState(0xca6e, 0x7663, 0xaea0, 0x217b, 0x158f, 0xa7dd, 0x1, 0x0);
        gbc.writeMem(0xca6e, { 0x8c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x7663, gbc.sp());
        EXPECT(0xca6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xca6e));
        // 8C 022C
        gbc.setState(0x322, 0xa21d, 0x4b0, 0xe867, 0x5db3, 0x6490, 0x0, 0x1);
        gbc.writeMem(0x322, { 0x8c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xa21d, gbc.sp());
        EXPECT(0x323, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 022D
        gbc.setState(0x7c12, 0x6769, 0xd810, 0x6002, 0x2542, 0x48eb, 0x1, 0x1);
        gbc.writeMem(0x7c12, { 0x8c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x6769, gbc.sp());
        EXPECT(0x7c13, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 022E
        gbc.setState(0x2db1, 0xb3e7, 0x58b0, 0x414d, 0x6a3f, 0x9751, 0x1, 0x1);
        gbc.writeMem(0x2db1, { 0x8c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xb3e7, gbc.sp());
        EXPECT(0x2db2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 022F
        gbc.setState(0x78b8, 0xa0cb, 0x8e20, 0x72f6, 0xda65, 0x34e7, 0x1, 0x1);
        gbc.writeMem(0x78b8, { 0x8c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xa0cb, gbc.sp());
        EXPECT(0x78b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0230
        gbc.setState(0xbb90, 0xcad6, 0x7390, 0xc7d0, 0xbf63, 0xf6aa, 0x0, 0x0);
        gbc.writeMem(0xbb90, { 0x8c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcad6, gbc.sp());
        EXPECT(0xbb91, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbb90));
        // 8C 0231
        gbc.setState(0x6e43, 0x6ebd, 0xdb00, 0x9e43, 0xd653, 0x53ab, 0x0, 0x0);
        gbc.writeMem(0x6e43, { 0x8c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x6ebd, gbc.sp());
        EXPECT(0x6e44, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0232
        gbc.setState(0xe13d, 0x7067, 0xa830, 0xea1c, 0x7c1a, 0xe637, 0x0, 0x0);
        gbc.writeMem(0xe13d, { 0x8c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x7067, gbc.sp());
        EXPECT(0xe13e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe13d));
        // 8C 0233
        gbc.setState(0x3689, 0xd02c, 0xf270, 0x93c7, 0xa1f3, 0xeeab, 0x1, 0x0);
        gbc.writeMem(0x3689, { 0x8c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd02c, gbc.sp());
        EXPECT(0x368a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0234
        gbc.setState(0x528b, 0xbca6, 0x3b20, 0x536d, 0x9819, 0x495, 0x0, 0x0);
        gbc.writeMem(0x528b, { 0x8c });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xbca6, gbc.sp());
        EXPECT(0x528c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0235
        gbc.setState(0xbcd3, 0xe31e, 0xecf0, 0x3ab2, 0x6b21, 0xfe62, 0x0, 0x1);
        gbc.writeMem(0xbcd3, { 0x8c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0xe31e, gbc.sp());
        EXPECT(0xbcd4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbcd3));
        // 8C 0236
        gbc.setState(0x5efb, 0x8ae1, 0xb720, 0xa4d7, 0x1bcb, 0xeeeb, 0x1, 0x0);
        gbc.writeMem(0x5efb, { 0x8c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x8ae1, gbc.sp());
        EXPECT(0x5efc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0237
        gbc.setState(0xe3e8, 0x8e4c, 0xdc80, 0x5d72, 0xeccf, 0x4920, 0x1, 0x0);
        gbc.writeMem(0xe3e8, { 0x8c });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x8e4c, gbc.sp());
        EXPECT(0xe3e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe3e8));
        // 8C 0238
        gbc.setState(0xbef4, 0xff69, 0xb250, 0x92fc, 0xf74, 0xdae5, 0x1, 0x0);
        gbc.writeMem(0xbef4, { 0x8c });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xff69, gbc.sp());
        EXPECT(0xbef5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbef4));
        // 8C 0239
        gbc.setState(0xa64f, 0xbfb, 0x7310, 0x1520, 0xdc92, 0x4f6e, 0x0, 0x1);
        gbc.writeMem(0xa64f, { 0x8c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xbfb, gbc.sp());
        EXPECT(0xa650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa64f));
        // 8C 023B
        gbc.setState(0x43e9, 0x9250, 0xe720, 0xb0ce, 0x26dd, 0xe0f3, 0x0, 0x0);
        gbc.writeMem(0x43e9, { 0x8c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x9250, gbc.sp());
        EXPECT(0x43ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 023C
        gbc.setState(0x6a48, 0xf131, 0x1f0, 0x95dc, 0xc51f, 0x6448, 0x1, 0x1);
        gbc.writeMem(0x6a48, { 0x8c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf131, gbc.sp());
        EXPECT(0x6a49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 023D
        gbc.setState(0xa14b, 0xe7bc, 0x64b0, 0xbcd4, 0xa456, 0xfb05, 0x0, 0x0);
        gbc.writeMem(0xa14b, { 0x8c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xe7bc, gbc.sp());
        EXPECT(0xa14c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa14b));
        // 8C 023E
        gbc.setState(0xdc52, 0x667a, 0x6860, 0x9875, 0x6b2d, 0xa84b, 0x1, 0x0);
        gbc.writeMem(0xdc52, { 0x8c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x667a, gbc.sp());
        EXPECT(0xdc53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdc52));
        // 8C 023F
        gbc.setState(0xd643, 0x2f76, 0xb960, 0x960b, 0xf4bf, 0x82b6, 0x0, 0x1);
        gbc.writeMem(0xd643, { 0x8c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x2f76, gbc.sp());
        EXPECT(0xd644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd643));
        // 8C 0240
        gbc.setState(0x10e0, 0xaa35, 0x2900, 0xe44, 0x47a3, 0x22c6, 0x0, 0x1);
        gbc.writeMem(0x10e0, { 0x8c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xaa35, gbc.sp());
        EXPECT(0x10e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0241
        gbc.setState(0x73b2, 0xd456, 0x7c30, 0x3932, 0x36bc, 0xa6, 0x1, 0x0);
        gbc.writeMem(0x73b2, { 0x8c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xd456, gbc.sp());
        EXPECT(0x73b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0242
        gbc.setState(0x8b9f, 0x7125, 0x2e90, 0x7011, 0xcfbf, 0x78f4, 0x1, 0x0);
        gbc.writeMem(0x8b9f, { 0x8c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7125, gbc.sp());
        EXPECT(0x8ba0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8b9f));
        // 8C 0243
        gbc.setState(0xa4af, 0xd58a, 0xe170, 0xe197, 0x7611, 0x2f5, 0x1, 0x0);
        gbc.writeMem(0xa4af, { 0x8c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xd58a, gbc.sp());
        EXPECT(0xa4b0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa4af));
        // 8C 0244
        gbc.setState(0xee71, 0x9047, 0x2350, 0x49c3, 0x643, 0x976c, 0x0, 0x0);
        gbc.writeMem(0xee71, { 0x8c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x97, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x9047, gbc.sp());
        EXPECT(0xee72, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xee71));
        // 8C 0245
        gbc.setState(0xd85a, 0xb30f, 0xb870, 0x3445, 0xf53b, 0x879e, 0x0, 0x0);
        gbc.writeMem(0xd85a, { 0x8c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xb30f, gbc.sp());
        EXPECT(0xd85b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd85a));
        // 8C 0246
        gbc.setState(0xce9c, 0x4d8, 0xeb00, 0xcbb7, 0xb28f, 0xb617, 0x1, 0x1);
        gbc.writeMem(0xce9c, { 0x8c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4d8, gbc.sp());
        EXPECT(0xce9d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xce9c));
        // 8C 0247
        gbc.setState(0xe851, 0x64fb, 0x7160, 0x1dea, 0x3611, 0x346b, 0x1, 0x0);
        gbc.writeMem(0xe851, { 0x8c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x64fb, gbc.sp());
        EXPECT(0xe852, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe851));
        // 8C 0248
        gbc.setState(0x32e5, 0x3ee6, 0x3580, 0x7f55, 0xa004, 0x72b2, 0x0, 0x1);
        gbc.writeMem(0x32e5, { 0x8c });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x3ee6, gbc.sp());
        EXPECT(0x32e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0249
        gbc.setState(0xb835, 0xbfb, 0x1180, 0xafbb, 0x4421, 0xc91, 0x1, 0x1);
        gbc.writeMem(0xb835, { 0x8c });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0xbfb, gbc.sp());
        EXPECT(0xb836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb835));
        // 8C 024A
        gbc.setState(0x26a3, 0x9356, 0x84a0, 0x37bf, 0xece7, 0x77ef, 0x1, 0x1);
        gbc.writeMem(0x26a3, { 0x8c });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x9356, gbc.sp());
        EXPECT(0x26a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 024B
        gbc.setState(0xe76b, 0x482d, 0x7430, 0xbae2, 0x938f, 0x8700, 0x1, 0x1);
        gbc.writeMem(0xe76b, { 0x8c });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x482d, gbc.sp());
        EXPECT(0xe76c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe76b));
        // 8C 024C
        gbc.setState(0x9003, 0xcaf7, 0x4c90, 0xc1c3, 0x6170, 0xc384, 0x0, 0x0);
        gbc.writeMem(0x9003, { 0x8c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xcaf7, gbc.sp());
        EXPECT(0x9004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9003));
        // 8C 024D
        gbc.setState(0x1f24, 0x982e, 0x62d0, 0xcd6c, 0xfe87, 0x3de5, 0x1, 0x0);
        gbc.writeMem(0x1f24, { 0x8c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x982e, gbc.sp());
        EXPECT(0x1f25, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 024E
        gbc.setState(0x50f9, 0xcf09, 0x1ae0, 0x835c, 0xa327, 0xa53a, 0x0, 0x0);
        gbc.writeMem(0x50f9, { 0x8c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xcf09, gbc.sp());
        EXPECT(0x50fa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 024F
        gbc.setState(0x3cd1, 0x5236, 0xa9d0, 0x72a9, 0x2ef7, 0xe015, 0x0, 0x1);
        gbc.writeMem(0x3cd1, { 0x8c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5236, gbc.sp());
        EXPECT(0x3cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0250
        gbc.setState(0xa3be, 0xfd16, 0xf810, 0x440a, 0xa8e9, 0x84ec, 0x0, 0x0);
        gbc.writeMem(0xa3be, { 0x8c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x44, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xfd16, gbc.sp());
        EXPECT(0xa3bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa3be));
        // 8C 0251
        gbc.setState(0xbfc0, 0x543f, 0xb590, 0x70c2, 0x6bd3, 0x8b30, 0x0, 0x1);
        gbc.writeMem(0xbfc0, { 0x8c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x543f, gbc.sp());
        EXPECT(0xbfc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbfc0));
        // 8C 0252
        gbc.setState(0x5ee, 0x87fe, 0x5b00, 0x4693, 0x7743, 0x91a5, 0x0, 0x1);
        gbc.writeMem(0x5ee, { 0x8c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x87fe, gbc.sp());
        EXPECT(0x5ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0253
        gbc.setState(0xc83, 0x1fb1, 0x1000, 0xf21e, 0x6f13, 0x48b7, 0x1, 0x1);
        gbc.writeMem(0xc83, { 0x8c });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x1fb1, gbc.sp());
        EXPECT(0xc84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0254
        gbc.setState(0xb928, 0x8b27, 0x4850, 0x5010, 0x48fc, 0xc97f, 0x0, 0x0);
        gbc.writeMem(0xb928, { 0x8c });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x8b27, gbc.sp());
        EXPECT(0xb929, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb928));
        // 8C 0257
        gbc.setState(0xa33b, 0xf55a, 0x3da0, 0xd4f2, 0x71bb, 0x2516, 0x1, 0x0);
        gbc.writeMem(0xa33b, { 0x8c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf55a, gbc.sp());
        EXPECT(0xa33c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa33b));
        // 8C 0258
        gbc.setState(0x3e22, 0x33db, 0x57b0, 0xd071, 0x5b50, 0xc606, 0x0, 0x1);
        gbc.writeMem(0x3e22, { 0x8c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x33db, gbc.sp());
        EXPECT(0x3e23, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0259
        gbc.setState(0xd9b9, 0x5a84, 0xffb0, 0xa8f2, 0x524e, 0xea09, 0x0, 0x0);
        gbc.writeMem(0xd9b9, { 0x8c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x5a84, gbc.sp());
        EXPECT(0xd9ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd9b9));
        // 8C 025A
        gbc.setState(0xa474, 0x8ea7, 0x1c40, 0x4cca, 0x61f6, 0xc106, 0x1, 0x0);
        gbc.writeMem(0xa474, { 0x8c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x8ea7, gbc.sp());
        EXPECT(0xa475, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa474));
        // 8C 025B
        gbc.setState(0x3dd6, 0x4cc9, 0x3cb0, 0x7421, 0xa5d, 0xf380, 0x0, 0x1);
        gbc.writeMem(0x3dd6, { 0x8c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x4cc9, gbc.sp());
        EXPECT(0x3dd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 025C
        gbc.setState(0x36c1, 0x7387, 0xd720, 0x8b31, 0xef86, 0x5c4a, 0x0, 0x1);
        gbc.writeMem(0x36c1, { 0x8c });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0x7387, gbc.sp());
        EXPECT(0x36c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 025D
        gbc.setState(0x6044, 0x645a, 0x2370, 0x2265, 0xe6f5, 0x3164, 0x1, 0x0);
        gbc.writeMem(0x6044, { 0x8c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x645a, gbc.sp());
        EXPECT(0x6045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 025E
        gbc.setState(0x7fc, 0x735e, 0x3f0, 0x901b, 0xb99d, 0x6c4d, 0x0, 0x1);
        gbc.writeMem(0x7fc, { 0x8c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x735e, gbc.sp());
        EXPECT(0x7fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 025F
        gbc.setState(0xa6f6, 0xd72e, 0x72f0, 0x77ae, 0x9a8a, 0x76a5, 0x1, 0x0);
        gbc.writeMem(0xa6f6, { 0x8c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xd72e, gbc.sp());
        EXPECT(0xa6f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa6f6));
        // 8C 0260
        gbc.setState(0x7e9b, 0x48a5, 0x6160, 0x3ac8, 0x392f, 0x564c, 0x1, 0x1);
        gbc.writeMem(0x7e9b, { 0x8c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x48a5, gbc.sp());
        EXPECT(0x7e9c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0261
        gbc.setState(0x316f, 0x862b, 0x9890, 0x8acc, 0xc484, 0x10b0, 0x0, 0x0);
        gbc.writeMem(0x316f, { 0x8c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x862b, gbc.sp());
        EXPECT(0x3170, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0262
        gbc.setState(0xea41, 0xdeb6, 0xe870, 0x4e66, 0x6f15, 0x2729, 0x0, 0x0);
        gbc.writeMem(0xea41, { 0x8c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xdeb6, gbc.sp());
        EXPECT(0xea42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xea41));
        // 8C 0263
        gbc.setState(0xc7a4, 0xdaf7, 0xcf0, 0x2cda, 0x5163, 0xe169, 0x0, 0x0);
        gbc.writeMem(0xc7a4, { 0x8c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xdaf7, gbc.sp());
        EXPECT(0xc7a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc7a4));
        // 8C 0264
        gbc.setState(0xe2b8, 0xf0c6, 0x5200, 0x94b5, 0x6db1, 0xd749, 0x1, 0x0);
        gbc.writeMem(0xe2b8, { 0x8c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0xf0c6, gbc.sp());
        EXPECT(0xe2b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe2b8));
        // 8C 0265
        gbc.setState(0x8dc, 0x5eb5, 0x76d0, 0x8fde, 0xa5ec, 0xbfe0, 0x1, 0x0);
        gbc.writeMem(0x8dc, { 0x8c });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5eb5, gbc.sp());
        EXPECT(0x8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0266
        gbc.setState(0xa0bd, 0x5184, 0x9830, 0x194f, 0x3e2d, 0x8ef, 0x0, 0x0);
        gbc.writeMem(0xa0bd, { 0x8c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x5184, gbc.sp());
        EXPECT(0xa0be, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa0bd));
        // 8C 0267
        gbc.setState(0xc721, 0xca1e, 0x25b0, 0x86f0, 0xde14, 0xcad1, 0x0, 0x0);
        gbc.writeMem(0xc721, { 0x8c });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xca1e, gbc.sp());
        EXPECT(0xc722, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc721));
        // 8C 0268
        gbc.setState(0x65d5, 0xd006, 0xcec0, 0xc4af, 0xa8eb, 0x1399, 0x1, 0x1);
        gbc.writeMem(0x65d5, { 0x8c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xc4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xd006, gbc.sp());
        EXPECT(0x65d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0269
        gbc.setState(0x1fea, 0xc576, 0x5280, 0x7d14, 0xe74d, 0xdd71, 0x1, 0x0);
        gbc.writeMem(0x1fea, { 0x8c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0xc576, gbc.sp());
        EXPECT(0x1feb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 026A
        gbc.setState(0xef9a, 0xb6b4, 0xaaa0, 0x3e97, 0xd641, 0x1e17, 0x0, 0x0);
        gbc.writeMem(0xef9a, { 0x8c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0xb6b4, gbc.sp());
        EXPECT(0xef9b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xef9a));
        // 8C 026B
        gbc.setState(0xadf6, 0xb2ec, 0xfc40, 0x4ac2, 0x655a, 0x343b, 0x1, 0x0);
        gbc.writeMem(0xadf6, { 0x8c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xb2ec, gbc.sp());
        EXPECT(0xadf7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xadf6));
        // 8C 026C
        gbc.setState(0xb3aa, 0x8350, 0x290, 0x64e0, 0xb8d4, 0xc244, 0x1, 0x0);
        gbc.writeMem(0xb3aa, { 0x8c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x8350, gbc.sp());
        EXPECT(0xb3ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb3aa));
        // 8C 026D
        gbc.setState(0x29a, 0x8281, 0xeb60, 0xff0e, 0x139c, 0xa493, 0x1, 0x1);
        gbc.writeMem(0x29a, { 0x8c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x8281, gbc.sp());
        EXPECT(0x29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 026E
        gbc.setState(0xdeb9, 0x6785, 0x44b0, 0x715d, 0xe9f2, 0x870a, 0x0, 0x0);
        gbc.writeMem(0xdeb9, { 0x8c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x6785, gbc.sp());
        EXPECT(0xdeba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdeb9));
        // 8C 026F
        gbc.setState(0xc0d6, 0x9438, 0xab10, 0x14f9, 0x9e9a, 0x6f9c, 0x1, 0x1);
        gbc.writeMem(0xc0d6, { 0x8c });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x9438, gbc.sp());
        EXPECT(0xc0d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc0d6));
        // 8C 0270
        gbc.setState(0x1e5c, 0x8d4, 0x2410, 0x2c58, 0xb588, 0x7fa7, 0x0, 0x1);
        gbc.writeMem(0x1e5c, { 0x8c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8d4, gbc.sp());
        EXPECT(0x1e5d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0271
        gbc.setState(0xa5f7, 0x2c1b, 0x7090, 0xc73a, 0x1d2e, 0x95fc, 0x0, 0x1);
        gbc.writeMem(0xa5f7, { 0x8c });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x2c1b, gbc.sp());
        EXPECT(0xa5f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa5f7));
        // 8C 0272
        gbc.setState(0x42fb, 0x17fd, 0xb7a0, 0xe5f, 0xf996, 0xaf9c, 0x0, 0x1);
        gbc.writeMem(0x42fb, { 0x8c });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x17fd, gbc.sp());
        EXPECT(0x42fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0273
        gbc.setState(0x7003, 0xe70, 0x62e0, 0xcd32, 0x8774, 0x3f20, 0x0, 0x0);
        gbc.writeMem(0x7003, { 0x8c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xe70, gbc.sp());
        EXPECT(0x7004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0274
        gbc.setState(0x8965, 0x4b33, 0x4bc0, 0xdb1f, 0x2af3, 0xaf4, 0x0, 0x1);
        gbc.writeMem(0x8965, { 0x8c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4b33, gbc.sp());
        EXPECT(0x8966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8965));
        // 8C 0275
        gbc.setState(0xb6a8, 0x7c17, 0x5e80, 0x46c2, 0x118e, 0xfdfc, 0x1, 0x1);
        gbc.writeMem(0xb6a8, { 0x8c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x7c17, gbc.sp());
        EXPECT(0xb6a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb6a8));
        // 8C 0276
        gbc.setState(0xa9fc, 0xf1ab, 0x3a10, 0xdd20, 0xd782, 0x2dab, 0x1, 0x1);
        gbc.writeMem(0xa9fc, { 0x8c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xf1ab, gbc.sp());
        EXPECT(0xa9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa9fc));
        // 8C 0278
        gbc.setState(0x81b0, 0x151c, 0x22b0, 0xbee9, 0x3980, 0xe646, 0x0, 0x0);
        gbc.writeMem(0x81b0, { 0x8c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x151c, gbc.sp());
        EXPECT(0x81b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x81b0));
        // 8C 0279
        gbc.setState(0x7fcc, 0x1f3c, 0x5120, 0x3921, 0x2c6f, 0x5706, 0x0, 0x0);
        gbc.writeMem(0x7fcc, { 0x8c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x1f3c, gbc.sp());
        EXPECT(0x7fcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 027A
        gbc.setState(0x6bf4, 0x3aaa, 0x3460, 0xfbe3, 0xd139, 0xbe93, 0x0, 0x0);
        gbc.writeMem(0x6bf4, { 0x8c });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x3aaa, gbc.sp());
        EXPECT(0x6bf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 027B
        gbc.setState(0x1d40, 0x9920, 0x14e0, 0x6786, 0x9930, 0xedeb, 0x0, 0x0);
        gbc.writeMem(0x1d40, { 0x8c });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x9920, gbc.sp());
        EXPECT(0x1d41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 027C
        gbc.setState(0x195d, 0x8329, 0x6290, 0x7a39, 0x5ab8, 0x25b7, 0x0, 0x0);
        gbc.writeMem(0x195d, { 0x8c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x8329, gbc.sp());
        EXPECT(0x195e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 027D
        gbc.setState(0xe23c, 0x499, 0x4710, 0x5b68, 0x2a5f, 0x442a, 0x1, 0x1);
        gbc.writeMem(0xe23c, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x499, gbc.sp());
        EXPECT(0xe23d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe23c));
        // 8C 027E
        gbc.setState(0x1af7, 0x38b1, 0x2360, 0xec2c, 0xbaea, 0x1541, 0x0, 0x1);
        gbc.writeMem(0x1af7, { 0x8c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x38b1, gbc.sp());
        EXPECT(0x1af8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 027F
        gbc.setState(0x4ff4, 0xb978, 0xf170, 0x2daa, 0xed77, 0x6c41, 0x1, 0x1);
        gbc.writeMem(0x4ff4, { 0x8c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb978, gbc.sp());
        EXPECT(0x4ff5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0280
        gbc.setState(0x4a3e, 0xb88a, 0xc0e0, 0x485d, 0xc5d7, 0xc1b8, 0x0, 0x0);
        gbc.writeMem(0x4a3e, { 0x8c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0xb88a, gbc.sp());
        EXPECT(0x4a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0282
        gbc.setState(0x70d0, 0xc310, 0x270, 0x5990, 0x374c, 0x2d6f, 0x0, 0x1);
        gbc.writeMem(0x70d0, { 0x8c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc310, gbc.sp());
        EXPECT(0x70d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0283
        gbc.setState(0x6ee3, 0x5031, 0x1570, 0xa17c, 0xcb10, 0x439c, 0x0, 0x1);
        gbc.writeMem(0x6ee3, { 0x8c });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x5031, gbc.sp());
        EXPECT(0x6ee4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0284
        gbc.setState(0x3822, 0x9c27, 0xe850, 0xd2be, 0xdb99, 0xcdb0, 0x1, 0x1);
        gbc.writeMem(0x3822, { 0x8c });
        gbc.step();
        EXPECT(0xb6, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9c27, gbc.sp());
        EXPECT(0x3823, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0285
        gbc.setState(0x51af, 0x214, 0x8d40, 0x63d6, 0x98d1, 0x5ee4, 0x0, 0x0);
        gbc.writeMem(0x51af, { 0x8c });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x5e, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x214, gbc.sp());
        EXPECT(0x51b0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0286
        gbc.setState(0xefa1, 0x30c, 0x2e60, 0x305c, 0xde6c, 0x1027, 0x1, 0x0);
        gbc.writeMem(0xefa1, { 0x8c });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x30c, gbc.sp());
        EXPECT(0xefa2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xefa1));
        // 8C 0287
        gbc.setState(0x85b3, 0xd367, 0xc750, 0x7091, 0x70e2, 0x1718, 0x0, 0x0);
        gbc.writeMem(0x85b3, { 0x8c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xd367, gbc.sp());
        EXPECT(0x85b4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x85b3));
        // 8C 0288
        gbc.setState(0xa61a, 0xaf4d, 0x1b30, 0xf844, 0xa52, 0xeda3, 0x0, 0x1);
        gbc.writeMem(0xa61a, { 0x8c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xaf4d, gbc.sp());
        EXPECT(0xa61b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa61a));
        // 8C 0289
        gbc.setState(0x882a, 0x89e, 0xbb60, 0x35da, 0xb662, 0xee88, 0x0, 0x1);
        gbc.writeMem(0x882a, { 0x8c });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0xb6, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x89e, gbc.sp());
        EXPECT(0x882b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x882a));
        // 8C 028A
        gbc.setState(0x444e, 0xd0d, 0xfc20, 0xe43a, 0xf126, 0xbd19, 0x0, 0x1);
        gbc.writeMem(0x444e, { 0x8c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0xd0d, gbc.sp());
        EXPECT(0x444f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 028B
        gbc.setState(0x4ef1, 0x5b29, 0x8f0, 0xd97c, 0x8365, 0xd8a0, 0x1, 0x1);
        gbc.writeMem(0x4ef1, { 0x8c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x5b29, gbc.sp());
        EXPECT(0x4ef2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 028C
        gbc.setState(0xbd9, 0xd9fc, 0x76d0, 0xd59a, 0xdc16, 0xc03d, 0x1, 0x0);
        gbc.writeMem(0xbd9, { 0x8c });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x9a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xd9fc, gbc.sp());
        EXPECT(0xbda, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 028D
        gbc.setState(0x630, 0xaa7a, 0x58b0, 0x96a0, 0xd652, 0x1ce, 0x1, 0x1);
        gbc.writeMem(0x630, { 0x8c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xaa7a, gbc.sp());
        EXPECT(0x631, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 028F
        gbc.setState(0xa211, 0x31f5, 0xd880, 0x3cc1, 0xffc, 0x49c5, 0x1, 0x0);
        gbc.writeMem(0xa211, { 0x8c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0x31f5, gbc.sp());
        EXPECT(0xa212, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa211));
        // 8C 0290
        gbc.setState(0x74e0, 0x671d, 0x3e70, 0x58d9, 0xedb4, 0x7514, 0x0, 0x0);
        gbc.writeMem(0x74e0, { 0x8c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x671d, gbc.sp());
        EXPECT(0x74e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0291
        gbc.setState(0x819c, 0x33e0, 0x1a40, 0x3b4d, 0x1797, 0xf16c, 0x0, 0x0);
        gbc.writeMem(0x819c, { 0x8c });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x33e0, gbc.sp());
        EXPECT(0x819d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x819c));
        // 8C 0292
        gbc.setState(0xde41, 0x2f87, 0x9230, 0xb600, 0x4410, 0x721d, 0x1, 0x0);
        gbc.writeMem(0xde41, { 0x8c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x2f87, gbc.sp());
        EXPECT(0xde42, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xde41));
        // 8C 0293
        gbc.setState(0x14c7, 0xb4dc, 0xb4c0, 0xad8c, 0xa75c, 0xae3, 0x0, 0x1);
        gbc.writeMem(0x14c7, { 0x8c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xb4dc, gbc.sp());
        EXPECT(0x14c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0294
        gbc.setState(0xc2c4, 0x6224, 0x2250, 0x2f80, 0x3911, 0xbc9e, 0x1, 0x0);
        gbc.writeMem(0xc2c4, { 0x8c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x6224, gbc.sp());
        EXPECT(0xc2c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc2c4));
        // 8C 0295
        gbc.setState(0x4d76, 0xd622, 0xa10, 0xda02, 0x5a6a, 0x35e7, 0x0, 0x1);
        gbc.writeMem(0x4d76, { 0x8c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd622, gbc.sp());
        EXPECT(0x4d77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0296
        gbc.setState(0xd0, 0xcb2e, 0xce90, 0x71f3, 0xebbd, 0x1fc6, 0x1, 0x1);
        gbc.writeMem(0xd0, { 0x8c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcb2e, gbc.sp());
        EXPECT(0xd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0297
        gbc.setState(0xc45d, 0x4747, 0xafa0, 0xe39, 0xda44, 0xe5f4, 0x1, 0x1);
        gbc.writeMem(0xc45d, { 0x8c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe5, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x4747, gbc.sp());
        EXPECT(0xc45e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc45d));
        // 8C 0298
        gbc.setState(0x6466, 0xe7ba, 0x2650, 0x5657, 0x2e79, 0xc6, 0x1, 0x1);
        gbc.writeMem(0x6466, { 0x8c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xe7ba, gbc.sp());
        EXPECT(0x6467, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0299
        gbc.setState(0x9367, 0xfc99, 0x52c0, 0x65ed, 0xabcd, 0x187c, 0x1, 0x0);
        gbc.writeMem(0x9367, { 0x8c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0xfc99, gbc.sp());
        EXPECT(0x9368, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9367));
        // 8C 029A
        gbc.setState(0x866e, 0xff90, 0xc330, 0xa205, 0x5312, 0x561a, 0x1, 0x0);
        gbc.writeMem(0x866e, { 0x8c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0xff90, gbc.sp());
        EXPECT(0x866f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x866e));
        // 8C 029B
        gbc.setState(0x465, 0xe51, 0x8310, 0x5b97, 0x9e0e, 0x21d6, 0x0, 0x1);
        gbc.writeMem(0x465, { 0x8c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xe51, gbc.sp());
        EXPECT(0x466, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 029C
        gbc.setState(0xa5c9, 0x1a60, 0x52a0, 0x4d, 0x2547, 0xac9b, 0x1, 0x0);
        gbc.writeMem(0xa5c9, { 0x8c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x1a60, gbc.sp());
        EXPECT(0xa5ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa5c9));
        // 8C 029D
        gbc.setState(0x4e98, 0x474e, 0xf6d0, 0x6568, 0xf2c6, 0x81b3, 0x0, 0x0);
        gbc.writeMem(0x4e98, { 0x8c });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x474e, gbc.sp());
        EXPECT(0x4e99, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 029E
        gbc.setState(0xea29, 0xa2b1, 0xc9e0, 0x822b, 0xd7fd, 0xca6f, 0x1, 0x1);
        gbc.writeMem(0xea29, { 0x8c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xa2b1, gbc.sp());
        EXPECT(0xea2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xea29));
        // 8C 029F
        gbc.setState(0x54bc, 0xbda7, 0x55c0, 0xe8fb, 0xc70b, 0x717e, 0x1, 0x1);
        gbc.writeMem(0x54bc, { 0x8c });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbda7, gbc.sp());
        EXPECT(0x54bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02A0
        gbc.setState(0x2366, 0xc43b, 0x87e0, 0x6214, 0xcf64, 0xd44b, 0x0, 0x0);
        gbc.writeMem(0x2366, { 0x8c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xc43b, gbc.sp());
        EXPECT(0x2367, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02A1
        gbc.setState(0x7d51, 0x4f67, 0x2560, 0x252f, 0xf367, 0xa6bd, 0x0, 0x1);
        gbc.writeMem(0x7d51, { 0x8c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4f67, gbc.sp());
        EXPECT(0x7d52, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02A2
        gbc.setState(0xa5bf, 0xa6d5, 0x3d90, 0xb045, 0x3e8d, 0x4c70, 0x0, 0x1);
        gbc.writeMem(0xa5bf, { 0x8c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xa6d5, gbc.sp());
        EXPECT(0xa5c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa5bf));
        // 8C 02A3
        gbc.setState(0xeaf9, 0x58fa, 0x6490, 0xde5b, 0x7464, 0x60f1, 0x0, 0x0);
        gbc.writeMem(0xeaf9, { 0x8c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x58fa, gbc.sp());
        EXPECT(0xeafa, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xeaf9));
        // 8C 02A4
        gbc.setState(0x9e32, 0xac04, 0x1da0, 0xdf15, 0x37b4, 0x3225, 0x0, 0x0);
        gbc.writeMem(0x9e32, { 0x8c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0xac04, gbc.sp());
        EXPECT(0x9e33, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9e32));
        // 8C 02A5
        gbc.setState(0x4ad9, 0x73fb, 0x50c0, 0xc7e8, 0xe1e4, 0x3b72, 0x1, 0x1);
        gbc.writeMem(0x4ad9, { 0x8c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x73fb, gbc.sp());
        EXPECT(0x4ada, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02A6
        gbc.setState(0x35f2, 0xd069, 0x76f0, 0xe2e5, 0xed34, 0xf4ad, 0x0, 0x1);
        gbc.writeMem(0x35f2, { 0x8c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd069, gbc.sp());
        EXPECT(0x35f3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02A7
        gbc.setState(0xb90d, 0xb13a, 0x1090, 0x3ada, 0x1abc, 0xfd1c, 0x0, 0x1);
        gbc.writeMem(0xb90d, { 0x8c });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb13a, gbc.sp());
        EXPECT(0xb90e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb90d));
        // 8C 02A8
        gbc.setState(0x9205, 0xcaac, 0x9f80, 0xaa1d, 0x79a7, 0x71b6, 0x0, 0x1);
        gbc.writeMem(0x9205, { 0x8c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xcaac, gbc.sp());
        EXPECT(0x9206, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9205));
        // 8C 02AA
        gbc.setState(0x89b4, 0xb313, 0x5680, 0xb0e7, 0x1bb8, 0x96c8, 0x0, 0x1);
        gbc.writeMem(0x89b4, { 0x8c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0xb313, gbc.sp());
        EXPECT(0x89b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x89b4));
        // 8C 02AB
        gbc.setState(0xc307, 0xc6b8, 0x24c0, 0x45da, 0x7556, 0xebed, 0x0, 0x1);
        gbc.writeMem(0xc307, { 0x8c });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xc6b8, gbc.sp());
        EXPECT(0xc308, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc307));
        // 8C 02AC
        gbc.setState(0x9a1c, 0xa6da, 0x3720, 0x4d5e, 0x6810, 0xbca2, 0x0, 0x0);
        gbc.writeMem(0x9a1c, { 0x8c });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xa6da, gbc.sp());
        EXPECT(0x9a1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9a1c));
        // 8C 02AD
        gbc.setState(0xe33f, 0x8b64, 0xff20, 0x9b8d, 0x7d44, 0xefe2, 0x0, 0x0);
        gbc.writeMem(0xe33f, { 0x8c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8b64, gbc.sp());
        EXPECT(0xe340, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe33f));
        // 8C 02AE
        gbc.setState(0xe2a7, 0x6625, 0x8f0, 0x6c02, 0xc7b6, 0xbb0b, 0x1, 0x0);
        gbc.writeMem(0xe2a7, { 0x8c });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x6625, gbc.sp());
        EXPECT(0xe2a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe2a7));
        // 8C 02AF
        gbc.setState(0x18de, 0xe167, 0x6840, 0x785b, 0x98ec, 0x1b06, 0x1, 0x1);
        gbc.writeMem(0x18de, { 0x8c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xe167, gbc.sp());
        EXPECT(0x18df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02B0
        gbc.setState(0x518b, 0x968e, 0x2480, 0xb01d, 0xbdcb, 0xc3c0, 0x1, 0x0);
        gbc.writeMem(0x518b, { 0x8c });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x968e, gbc.sp());
        EXPECT(0x518c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02B1
        gbc.setState(0xdc6, 0x3412, 0x7020, 0xe721, 0x99eb, 0xfb69, 0x1, 0x1);
        gbc.writeMem(0xdc6, { 0x8c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3412, gbc.sp());
        EXPECT(0xdc7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02B2
        gbc.setState(0x50c6, 0x559d, 0x7d60, 0x5427, 0x3a1f, 0x8ad6, 0x1, 0x0);
        gbc.writeMem(0x50c6, { 0x8c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0x559d, gbc.sp());
        EXPECT(0x50c7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02B3
        gbc.setState(0xaa42, 0x10c9, 0xa7b0, 0x7ac0, 0x3940, 0x7b90, 0x1, 0x0);
        gbc.writeMem(0xaa42, { 0x8c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x10c9, gbc.sp());
        EXPECT(0xaa43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaa42));
        // 8C 02B4
        gbc.setState(0x53bc, 0x1744, 0x6f60, 0xf7fc, 0xd1b9, 0xc18, 0x0, 0x0);
        gbc.writeMem(0x53bc, { 0x8c });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x1744, gbc.sp());
        EXPECT(0x53bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02B5
        gbc.setState(0x73a7, 0xafc6, 0x94e0, 0x596c, 0x7710, 0x2c9d, 0x0, 0x0);
        gbc.writeMem(0x73a7, { 0x8c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xafc6, gbc.sp());
        EXPECT(0x73a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02B6
        gbc.setState(0x6145, 0x1447, 0x2780, 0x3ce4, 0x3d18, 0xad69, 0x1, 0x0);
        gbc.writeMem(0x6145, { 0x8c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x1447, gbc.sp());
        EXPECT(0x6146, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02B7
        gbc.setState(0x180d, 0x5d1, 0xce20, 0xab94, 0xcbc2, 0xdf7a, 0x1, 0x1);
        gbc.writeMem(0x180d, { 0x8c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x5d1, gbc.sp());
        EXPECT(0x180e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02B8
        gbc.setState(0x201e, 0x5dd4, 0xff90, 0xe7a0, 0x162, 0xfa55, 0x1, 0x1);
        gbc.writeMem(0x201e, { 0x8c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x5dd4, gbc.sp());
        EXPECT(0x201f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02B9
        gbc.setState(0x325d, 0x8484, 0xe3e0, 0xf4af, 0xc1cf, 0x6ab5, 0x0, 0x1);
        gbc.writeMem(0x325d, { 0x8c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x8484, gbc.sp());
        EXPECT(0x325e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02BA
        gbc.setState(0xa5ce, 0xf3ec, 0x7220, 0x4822, 0xa8bd, 0x2300, 0x0, 0x1);
        gbc.writeMem(0xa5ce, { 0x8c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0xf3ec, gbc.sp());
        EXPECT(0xa5cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa5ce));
        // 8C 02BB
        gbc.setState(0xd4bc, 0x4b16, 0x92f0, 0x52fb, 0xf3a5, 0x4398, 0x1, 0x0);
        gbc.writeMem(0xd4bc, { 0x8c });
        gbc.step();
        EXPECT(0xd6, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x4b16, gbc.sp());
        EXPECT(0xd4bd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd4bc));
        // 8C 02BC
        gbc.setState(0xc92e, 0x5ed4, 0xc4c0, 0x48f3, 0xcb28, 0xa86f, 0x0, 0x0);
        gbc.writeMem(0xc92e, { 0x8c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x5ed4, gbc.sp());
        EXPECT(0xc92f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc92e));
        // 8C 02BD
        gbc.setState(0x53d6, 0x7e0a, 0xcb60, 0x9d74, 0xd09f, 0x72cd, 0x0, 0x1);
        gbc.writeMem(0x53d6, { 0x8c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x7e0a, gbc.sp());
        EXPECT(0x53d7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02BE
        gbc.setState(0x9ba7, 0xcc9b, 0x4190, 0x5b1d, 0x6f76, 0xa5f, 0x0, 0x0);
        gbc.writeMem(0x9ba7, { 0x8c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xcc9b, gbc.sp());
        EXPECT(0x9ba8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9ba7));
        // 8C 02BF
        gbc.setState(0x4f6, 0x7c2c, 0xdc40, 0x53a0, 0x7fd0, 0xa960, 0x1, 0x1);
        gbc.writeMem(0x4f6, { 0x8c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x7c2c, gbc.sp());
        EXPECT(0x4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02C0
        gbc.setState(0x760f, 0x1f2b, 0xa9d0, 0xe2bb, 0xce87, 0x1517, 0x0, 0x1);
        gbc.writeMem(0x760f, { 0x8c });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x1f2b, gbc.sp());
        EXPECT(0x7610, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02C1
        gbc.setState(0x2c58, 0x5c24, 0xe980, 0x780, 0x4e4d, 0xaaaa, 0x1, 0x1);
        gbc.writeMem(0x2c58, { 0x8c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x5c24, gbc.sp());
        EXPECT(0x2c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02C2
        gbc.setState(0x910c, 0xffd7, 0x76c0, 0x464, 0x99c3, 0xd069, 0x1, 0x0);
        gbc.writeMem(0x910c, { 0x8c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0xffd7, gbc.sp());
        EXPECT(0x910d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x910c));
        // 8C 02C3
        gbc.setState(0x5172, 0x4786, 0x29a0, 0xbe75, 0x328e, 0xa0bf, 0x0, 0x0);
        gbc.writeMem(0x5172, { 0x8c });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x4786, gbc.sp());
        EXPECT(0x5173, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02C4
        gbc.setState(0x744d, 0x93ab, 0x7880, 0x8991, 0x21cc, 0xab07, 0x0, 0x1);
        gbc.writeMem(0x744d, { 0x8c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x93ab, gbc.sp());
        EXPECT(0x744e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02C5
        gbc.setState(0x3b2f, 0x2989, 0xc490, 0xe272, 0xaefc, 0xc493, 0x1, 0x0);
        gbc.writeMem(0x3b2f, { 0x8c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x2989, gbc.sp());
        EXPECT(0x3b30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02C6
        gbc.setState(0xcf9b, 0x5fc4, 0xc510, 0xa649, 0xe7f3, 0x1639, 0x0, 0x0);
        gbc.writeMem(0xcf9b, { 0x8c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x5fc4, gbc.sp());
        EXPECT(0xcf9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcf9b));
        // 8C 02C7
        gbc.setState(0x42e6, 0xf470, 0xd840, 0x8361, 0xa115, 0x9dd1, 0x0, 0x0);
        gbc.writeMem(0x42e6, { 0x8c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf470, gbc.sp());
        EXPECT(0x42e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02C8
        gbc.setState(0x9fb7, 0xab65, 0xe2f0, 0x8a65, 0xfe08, 0x5226, 0x1, 0x0);
        gbc.writeMem(0x9fb7, { 0x8c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xab65, gbc.sp());
        EXPECT(0x9fb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9fb7));
        // 8C 02C9
        gbc.setState(0xe4df, 0xe6fa, 0xb370, 0xbd45, 0xcd20, 0xaa23, 0x0, 0x1);
        gbc.writeMem(0xe4df, { 0x8c });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xe6fa, gbc.sp());
        EXPECT(0xe4e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe4df));
        // 8C 02CA
        gbc.setState(0x3a10, 0xea7b, 0x6e60, 0x72f3, 0xd10c, 0x27ae, 0x0, 0x1);
        gbc.writeMem(0x3a10, { 0x8c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xea7b, gbc.sp());
        EXPECT(0x3a11, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02CB
        gbc.setState(0x9610, 0x6ff9, 0x5080, 0x811b, 0x3104, 0x9c56, 0x0, 0x0);
        gbc.writeMem(0x9610, { 0x8c });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x6ff9, gbc.sp());
        EXPECT(0x9611, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9610));
        // 8C 02CC
        gbc.setState(0xd954, 0x3c7c, 0x3f50, 0x5d39, 0x5a95, 0xfb73, 0x1, 0x1);
        gbc.writeMem(0xd954, { 0x8c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3c7c, gbc.sp());
        EXPECT(0xd955, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd954));
        // 8C 02CD
        gbc.setState(0xcfa0, 0x35ef, 0xfee0, 0xf777, 0x2c3, 0xf15b, 0x1, 0x0);
        gbc.writeMem(0xcfa0, { 0x8c });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x35ef, gbc.sp());
        EXPECT(0xcfa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcfa0));
        // 8C 02CF
        gbc.setState(0x6b4a, 0xebda, 0x920, 0x7a30, 0x1a98, 0xb25b, 0x1, 0x1);
        gbc.writeMem(0x6b4a, { 0x8c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0xebda, gbc.sp());
        EXPECT(0x6b4b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02D0
        gbc.setState(0xe9ec, 0x4841, 0x4710, 0xf62e, 0x6827, 0x2f15, 0x0, 0x0);
        gbc.writeMem(0xe9ec, { 0x8c });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x4841, gbc.sp());
        EXPECT(0xe9ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe9ec));
        // 8C 02D1
        gbc.setState(0x6bcd, 0xa224, 0xb140, 0x79f0, 0x8b52, 0x91e0, 0x0, 0x1);
        gbc.writeMem(0x6bcd, { 0x8c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xa224, gbc.sp());
        EXPECT(0x6bce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02D2
        gbc.setState(0xe755, 0xa5f6, 0xb4b0, 0x11bf, 0x3314, 0x2873, 0x0, 0x0);
        gbc.writeMem(0xe755, { 0x8c });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0xa5f6, gbc.sp());
        EXPECT(0xe756, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe755));
        // 8C 02D3
        gbc.setState(0xcb61, 0x8714, 0x5ee0, 0xe539, 0x8c64, 0x4d80, 0x1, 0x0);
        gbc.writeMem(0xcb61, { 0x8c });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x8714, gbc.sp());
        EXPECT(0xcb62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcb61));
        // 8C 02D4
        gbc.setState(0x623c, 0x2351, 0xe9b0, 0x90f2, 0xd114, 0x4517, 0x0, 0x1);
        gbc.writeMem(0x623c, { 0x8c });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x2351, gbc.sp());
        EXPECT(0x623d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02D5
        gbc.setState(0x5646, 0xa03c, 0xa520, 0xeef1, 0x70ac, 0x32, 0x1, 0x0);
        gbc.writeMem(0x5646, { 0x8c });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xa03c, gbc.sp());
        EXPECT(0x5647, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02D6
        gbc.setState(0xacc2, 0xee36, 0x98e0, 0x45f8, 0xe0e2, 0xc3d6, 0x1, 0x1);
        gbc.writeMem(0xacc2, { 0x8c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xee36, gbc.sp());
        EXPECT(0xacc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xacc2));
        // 8C 02D7
        gbc.setState(0xb831, 0xa3a9, 0xbe70, 0xff56, 0x6c5a, 0x619e, 0x0, 0x0);
        gbc.writeMem(0xb831, { 0x8c });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xff, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xa3a9, gbc.sp());
        EXPECT(0xb832, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb831));
        // 8C 02D8
        gbc.setState(0xd91c, 0x2659, 0x58e0, 0x7f3b, 0xcb95, 0x30ef, 0x1, 0x0);
        gbc.writeMem(0xd91c, { 0x8c });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x2659, gbc.sp());
        EXPECT(0xd91d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd91c));
        // 8C 02D9
        gbc.setState(0xe9db, 0x6fb0, 0x9440, 0x2282, 0xaf8c, 0x8abb, 0x0, 0x1);
        gbc.writeMem(0xe9db, { 0x8c });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0x6fb0, gbc.sp());
        EXPECT(0xe9dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe9db));
        // 8C 02DA
        gbc.setState(0x6408, 0xeb53, 0xc740, 0x834e, 0xf0a3, 0x9459, 0x0, 0x1);
        gbc.writeMem(0x6408, { 0x8c });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xeb53, gbc.sp());
        EXPECT(0x6409, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02DB
        gbc.setState(0xcb2b, 0x6e3, 0xe6e0, 0x4bb6, 0x51b6, 0xd898, 0x0, 0x1);
        gbc.writeMem(0xcb2b, { 0x8c });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0x6e3, gbc.sp());
        EXPECT(0xcb2c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcb2b));
        // 8C 02DC
        gbc.setState(0x17f9, 0x24d7, 0xaba0, 0x7a15, 0x5e1c, 0x8eeb, 0x1, 0x0);
        gbc.writeMem(0x17f9, { 0x8c });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x24d7, gbc.sp());
        EXPECT(0x17fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02DD
        gbc.setState(0xd6ea, 0x67c2, 0x5980, 0xe0ce, 0x9c40, 0x4ff7, 0x1, 0x1);
        gbc.writeMem(0xd6ea, { 0x8c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x67c2, gbc.sp());
        EXPECT(0xd6eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd6ea));
        // 8C 02DE
        gbc.setState(0xa472, 0x5920, 0xbed0, 0x5590, 0x64d5, 0xb85, 0x1, 0x0);
        gbc.writeMem(0xa472, { 0x8c });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x5920, gbc.sp());
        EXPECT(0xa473, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa472));
        // 8C 02DF
        gbc.setState(0xb524, 0x390, 0x9070, 0x63c5, 0xdb68, 0xb60a, 0x0, 0x0);
        gbc.writeMem(0xb524, { 0x8c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x390, gbc.sp());
        EXPECT(0xb525, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb524));
        // 8C 02E0
        gbc.setState(0xd86d, 0xa8e7, 0xa660, 0xa011, 0xa6dd, 0x6b42, 0x0, 0x0);
        gbc.writeMem(0xd86d, { 0x8c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa8e7, gbc.sp());
        EXPECT(0xd86e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd86d));
        // 8C 02E1
        gbc.setState(0xd835, 0xdd96, 0xbff0, 0xbd99, 0x3b0, 0x6340, 0x1, 0x1);
        gbc.writeMem(0xd835, { 0x8c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xdd96, gbc.sp());
        EXPECT(0xd836, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd835));
        // 8C 02E2
        gbc.setState(0x926c, 0x9e47, 0x5310, 0x54, 0x5016, 0xd9e5, 0x1, 0x1);
        gbc.writeMem(0x926c, { 0x8c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x9e47, gbc.sp());
        EXPECT(0x926d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x926c));
        // 8C 02E3
        gbc.setState(0xc515, 0x5cb4, 0x2a20, 0x3f35, 0x41b3, 0x82c6, 0x0, 0x1);
        gbc.writeMem(0xc515, { 0x8c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x5cb4, gbc.sp());
        EXPECT(0xc516, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc515));
        // 8C 02E4
        gbc.setState(0xb133, 0x9c3c, 0x9930, 0xa175, 0x44c, 0xd607, 0x1, 0x0);
        gbc.writeMem(0xb133, { 0x8c });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x9c3c, gbc.sp());
        EXPECT(0xb134, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb133));
        // 8C 02E5
        gbc.setState(0x800b, 0x1471, 0xa020, 0x567b, 0x1a53, 0x1537, 0x0, 0x1);
        gbc.writeMem(0x800b, { 0x8c });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x1471, gbc.sp());
        EXPECT(0x800c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x800b));
        // 8C 02E6
        gbc.setState(0x9112, 0xe8dc, 0x6640, 0x6705, 0xfb2c, 0xdda7, 0x1, 0x0);
        gbc.writeMem(0x9112, { 0x8c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe8dc, gbc.sp());
        EXPECT(0x9113, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9112));
        // 8C 02E7
        gbc.setState(0x6789, 0x262d, 0x4b60, 0x20c1, 0xebad, 0x368b, 0x1, 0x0);
        gbc.writeMem(0x6789, { 0x8c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x262d, gbc.sp());
        EXPECT(0x678a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02E8
        gbc.setState(0x4048, 0x1a54, 0x7f70, 0x74c8, 0xc5b0, 0x610d, 0x1, 0x1);
        gbc.writeMem(0x4048, { 0x8c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x1a54, gbc.sp());
        EXPECT(0x4049, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02EA
        gbc.setState(0x17c8, 0x3652, 0xa330, 0xaa0e, 0x1f62, 0x2d75, 0x1, 0x0);
        gbc.writeMem(0x17c8, { 0x8c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x3652, gbc.sp());
        EXPECT(0x17c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02EB
        gbc.setState(0xa808, 0xe043, 0x7fa0, 0x64ca, 0x710, 0xc670, 0x1, 0x1);
        gbc.writeMem(0xa808, { 0x8c });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xe043, gbc.sp());
        EXPECT(0xa809, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa808));
        // 8C 02EC
        gbc.setState(0x5c37, 0xb4d0, 0x29c0, 0xe520, 0xceac, 0x70ce, 0x1, 0x1);
        gbc.writeMem(0x5c37, { 0x8c });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xb4d0, gbc.sp());
        EXPECT(0x5c38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02ED
        gbc.setState(0xaa2, 0x5168, 0x71f0, 0x325f, 0x29b3, 0x25, 0x1, 0x1);
        gbc.writeMem(0xaa2, { 0x8c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x5168, gbc.sp());
        EXPECT(0xaa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02EE
        gbc.setState(0xa356, 0x43f6, 0x9fd0, 0x7310, 0x4381, 0x6527, 0x0, 0x0);
        gbc.writeMem(0xa356, { 0x8c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x43f6, gbc.sp());
        EXPECT(0xa357, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa356));
        // 8C 02EF
        gbc.setState(0xa63a, 0x57fd, 0x4810, 0x9eef, 0x82e8, 0xe49e, 0x1, 0x1);
        gbc.writeMem(0xa63a, { 0x8c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x57fd, gbc.sp());
        EXPECT(0xa63b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa63a));
        // 8C 02F1
        gbc.setState(0x70f9, 0x9225, 0xd210, 0xfeba, 0xd185, 0x5592, 0x1, 0x0);
        gbc.writeMem(0x70f9, { 0x8c });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x9225, gbc.sp());
        EXPECT(0x70fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02F2
        gbc.setState(0x894b, 0x3331, 0xa800, 0xd533, 0xf35f, 0xea5f, 0x1, 0x0);
        gbc.writeMem(0x894b, { 0x8c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x3331, gbc.sp());
        EXPECT(0x894c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x894b));
        // 8C 02F3
        gbc.setState(0xc1b0, 0x6364, 0x3f50, 0xfd41, 0x5f66, 0x11e, 0x0, 0x0);
        gbc.writeMem(0xc1b0, { 0x8c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x6364, gbc.sp());
        EXPECT(0xc1b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc1b0));
        // 8C 02F4
        gbc.setState(0x4cf4, 0x1062, 0xa960, 0x932c, 0xb83, 0x8f9d, 0x0, 0x1);
        gbc.writeMem(0x4cf4, { 0x8c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x1062, gbc.sp());
        EXPECT(0x4cf5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02F5
        gbc.setState(0x680e, 0x3e6f, 0xa370, 0x7f22, 0x4d3d, 0xc817, 0x0, 0x0);
        gbc.writeMem(0x680e, { 0x8c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x3e6f, gbc.sp());
        EXPECT(0x680f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02F6
        gbc.setState(0xcbb9, 0xac5d, 0x3e0, 0xd9c2, 0x5abc, 0xe1f8, 0x1, 0x1);
        gbc.writeMem(0xcbb9, { 0x8c });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xac5d, gbc.sp());
        EXPECT(0xcbba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcbb9));
        // 8C 02F9
        gbc.setState(0x37d, 0xdedf, 0xd970, 0x608, 0xd6eb, 0xe732, 0x1, 0x1);
        gbc.writeMem(0x37d, { 0x8c });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xd6, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xdedf, gbc.sp());
        EXPECT(0x37e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02FA
        gbc.setState(0xdcfd, 0x50db, 0x4ec0, 0x7dec, 0x6d0a, 0x14db, 0x1, 0x1);
        gbc.writeMem(0xdcfd, { 0x8c });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x50db, gbc.sp());
        EXPECT(0xdcfe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdcfd));
        // 8C 02FB
        gbc.setState(0x5505, 0xa78d, 0x1c70, 0xd899, 0xf98e, 0xf6e4, 0x0, 0x1);
        gbc.writeMem(0x5505, { 0x8c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xa78d, gbc.sp());
        EXPECT(0x5506, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02FC
        gbc.setState(0x8970, 0xc5c, 0xa3c0, 0x4dca, 0x7775, 0xf301, 0x0, 0x0);
        gbc.writeMem(0x8970, { 0x8c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0xc5c, gbc.sp());
        EXPECT(0x8971, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8970));
        // 8C 02FD
        gbc.setState(0x19d3, 0x647, 0x8640, 0xfcb6, 0x9b63, 0xb532, 0x1, 0x1);
        gbc.writeMem(0x19d3, { 0x8c });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x647, gbc.sp());
        EXPECT(0x19d4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 02FE
        gbc.setState(0x78ba, 0xe7d9, 0x3cf0, 0xe3c0, 0xee2, 0x5d, 0x1, 0x0);
        gbc.writeMem(0x78ba, { 0x8c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xe7d9, gbc.sp());
        EXPECT(0x78bb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 02FF
        gbc.setState(0xc2db, 0x883a, 0x650, 0x4ce7, 0xf916, 0x62f6, 0x0, 0x0);
        gbc.writeMem(0xc2db, { 0x8c });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x883a, gbc.sp());
        EXPECT(0xc2dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc2db));
        // 8C 0300
        gbc.setState(0x5771, 0x5675, 0xce50, 0x3b7, 0x1b0a, 0x7b38, 0x1, 0x1);
        gbc.writeMem(0x5771, { 0x8c });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5675, gbc.sp());
        EXPECT(0x5772, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0302
        gbc.setState(0x3f6c, 0xef87, 0x1c10, 0x942f, 0x79e0, 0x7531, 0x1, 0x1);
        gbc.writeMem(0x3f6c, { 0x8c });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xef87, gbc.sp());
        EXPECT(0x3f6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0303
        gbc.setState(0xa6f0, 0xff2c, 0x1a60, 0x923e, 0xee72, 0xae32, 0x0, 0x0);
        gbc.writeMem(0xa6f0, { 0x8c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0xff2c, gbc.sp());
        EXPECT(0xa6f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa6f0));
        // 8C 0304
        gbc.setState(0x6474, 0x5417, 0x88f0, 0x1ac5, 0x185c, 0xa858, 0x0, 0x1);
        gbc.writeMem(0x6474, { 0x8c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x5417, gbc.sp());
        EXPECT(0x6475, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0305
        gbc.setState(0xba1, 0x41af, 0x6c30, 0xd313, 0xa1fb, 0x21fb, 0x0, 0x1);
        gbc.writeMem(0xba1, { 0x8c });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x41af, gbc.sp());
        EXPECT(0xba2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0306
        gbc.setState(0xc5d8, 0xdcdd, 0x9090, 0x1999, 0x29b9, 0xb541, 0x1, 0x1);
        gbc.writeMem(0xc5d8, { 0x8c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xdcdd, gbc.sp());
        EXPECT(0xc5d9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc5d8));
        // 8C 0307
        gbc.setState(0x911f, 0xd400, 0x9070, 0x6d9d, 0x1a4a, 0xac7a, 0x0, 0x1);
        gbc.writeMem(0x911f, { 0x8c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd400, gbc.sp());
        EXPECT(0x9120, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x911f));
        // 8C 0308
        gbc.setState(0x3569, 0x95bb, 0x2730, 0xc1ee, 0x5404, 0xdf40, 0x0, 0x0);
        gbc.writeMem(0x3569, { 0x8c });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x95bb, gbc.sp());
        EXPECT(0x356a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0309
        gbc.setState(0xb7b6, 0xea19, 0x3940, 0x2f99, 0xbbc4, 0xc57e, 0x0, 0x1);
        gbc.writeMem(0xb7b6, { 0x8c });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xea19, gbc.sp());
        EXPECT(0xb7b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb7b6));
        // 8C 030A
        gbc.setState(0x8637, 0x97ff, 0x3c70, 0xeb96, 0x92d5, 0x7a89, 0x0, 0x1);
        gbc.writeMem(0x8637, { 0x8c });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x97ff, gbc.sp());
        EXPECT(0x8638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8637));
        // 8C 030B
        gbc.setState(0xebf3, 0xc9e8, 0x4ca0, 0x817a, 0x6f00, 0x117b, 0x0, 0x0);
        gbc.writeMem(0xebf3, { 0x8c });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xc9e8, gbc.sp());
        EXPECT(0xebf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xebf3));
        // 8C 030D
        gbc.setState(0x8e37, 0x5d78, 0xe1e0, 0x304a, 0xf9a2, 0xa56c, 0x1, 0x1);
        gbc.writeMem(0x8e37, { 0x8c });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5d78, gbc.sp());
        EXPECT(0x8e38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8e37));
        // 8C 030E
        gbc.setState(0xb9fb, 0x516b, 0xbe50, 0xad2d, 0xd302, 0xd07c, 0x1, 0x0);
        gbc.writeMem(0xb9fb, { 0x8c });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x516b, gbc.sp());
        EXPECT(0xb9fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb9fb));
        // 8C 030F
        gbc.setState(0xe563, 0xfee, 0x5b30, 0xabdf, 0x3017, 0x1724, 0x1, 0x0);
        gbc.writeMem(0xe563, { 0x8c });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfee, gbc.sp());
        EXPECT(0xe564, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe563));
        // 8C 0310
        gbc.setState(0x9bc5, 0xb825, 0x51d0, 0x95ab, 0xb359, 0x1ac6, 0x1, 0x1);
        gbc.writeMem(0x9bc5, { 0x8c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xb825, gbc.sp());
        EXPECT(0x9bc6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9bc5));
        // 8C 0311
        gbc.setState(0xd72, 0x891, 0x51d0, 0xb35, 0xecab, 0x1ab2, 0x0, 0x0);
        gbc.writeMem(0xd72, { 0x8c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x891, gbc.sp());
        EXPECT(0xd73, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0312
        gbc.setState(0x390, 0xabf4, 0xc1f0, 0x35a4, 0xb8b3, 0x899b, 0x0, 0x1);
        gbc.writeMem(0x390, { 0x8c });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0xabf4, gbc.sp());
        EXPECT(0x391, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0314
        gbc.setState(0xbb88, 0x2ccf, 0x9650, 0xaafd, 0x7b60, 0x3ae9, 0x0, 0x0);
        gbc.writeMem(0xbb88, { 0x8c });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x2ccf, gbc.sp());
        EXPECT(0xbb89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbb88));
        // 8C 0315
        gbc.setState(0x7a56, 0xed46, 0xd110, 0x67f8, 0x74cb, 0x9d5a, 0x1, 0x1);
        gbc.writeMem(0x7a56, { 0x8c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xed46, gbc.sp());
        EXPECT(0x7a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0316
        gbc.setState(0xa6de, 0x67f1, 0xf670, 0xec86, 0x3259, 0x20e4, 0x0, 0x0);
        gbc.writeMem(0xa6de, { 0x8c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x67f1, gbc.sp());
        EXPECT(0xa6df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa6de));
        // 8C 0317
        gbc.setState(0x347b, 0x612b, 0x1260, 0x3fb2, 0x8693, 0x9b5b, 0x0, 0x1);
        gbc.writeMem(0x347b, { 0x8c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x612b, gbc.sp());
        EXPECT(0x347c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0318
        gbc.setState(0x9eb0, 0x866, 0xf5b0, 0x1355, 0x3260, 0xadf4, 0x1, 0x1);
        gbc.writeMem(0x9eb0, { 0x8c });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x866, gbc.sp());
        EXPECT(0x9eb1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9eb0));
        // 8C 0319
        gbc.setState(0x5c79, 0x412, 0x2370, 0x68c3, 0x8b85, 0x994d, 0x1, 0x1);
        gbc.writeMem(0x5c79, { 0x8c });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x412, gbc.sp());
        EXPECT(0x5c7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 031B
        gbc.setState(0x127a, 0x64b, 0xe0f0, 0xd4af, 0xea4d, 0x86f3, 0x1, 0x0);
        gbc.writeMem(0x127a, { 0x8c });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x64b, gbc.sp());
        EXPECT(0x127b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 031C
        gbc.setState(0xdbb6, 0xb814, 0x5a40, 0x4e69, 0x6688, 0xae68, 0x1, 0x0);
        gbc.writeMem(0xdbb6, { 0x8c });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xb814, gbc.sp());
        EXPECT(0xdbb7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdbb6));
        // 8C 031D
        gbc.setState(0xa9fc, 0x8276, 0x35c0, 0x343e, 0xdfa9, 0xfc9b, 0x1, 0x0);
        gbc.writeMem(0xa9fc, { 0x8c });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x9b, gbc.l());
        EXPECT(0x8276, gbc.sp());
        EXPECT(0xa9fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa9fc));
        // 8C 031E
        gbc.setState(0x99fb, 0xddf4, 0x7320, 0x15c4, 0x7936, 0xd4fd, 0x0, 0x0);
        gbc.writeMem(0x99fb, { 0x8c });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xddf4, gbc.sp());
        EXPECT(0x99fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x99fb));
        // 8C 031F
        gbc.setState(0x2334, 0x8ac8, 0x41e0, 0x7e20, 0x7480, 0x6bc8, 0x1, 0x0);
        gbc.writeMem(0x2334, { 0x8c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xc8, gbc.l());
        EXPECT(0x8ac8, gbc.sp());
        EXPECT(0x2335, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0320
        gbc.setState(0x9370, 0x5de7, 0xf160, 0x8be, 0xf1e4, 0x72c4, 0x0, 0x1);
        gbc.writeMem(0x9370, { 0x8c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x5de7, gbc.sp());
        EXPECT(0x9371, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9370));
        // 8C 0321
        gbc.setState(0x2797, 0x734b, 0x61f0, 0xe674, 0x5917, 0x3f77, 0x1, 0x0);
        gbc.writeMem(0x2797, { 0x8c });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x734b, gbc.sp());
        EXPECT(0x2798, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0323
        gbc.setState(0x8f37, 0x6df8, 0xeba0, 0x397b, 0x5443, 0x7d0d, 0x1, 0x1);
        gbc.writeMem(0x8f37, { 0x8c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x6df8, gbc.sp());
        EXPECT(0x8f38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8f37));
        // 8C 0324
        gbc.setState(0x600c, 0x188b, 0x3e00, 0x4804, 0x531a, 0x7d03, 0x1, 0x0);
        gbc.writeMem(0x600c, { 0x8c });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x188b, gbc.sp());
        EXPECT(0x600d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0325
        gbc.setState(0xbdc9, 0x3b4b, 0x4aa0, 0xb449, 0x467b, 0xe41a, 0x1, 0x0);
        gbc.writeMem(0xbdc9, { 0x8c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3b4b, gbc.sp());
        EXPECT(0xbdca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbdc9));
        // 8C 0326
        gbc.setState(0xa9fd, 0x8250, 0x81d0, 0x6c24, 0x47b5, 0x8797, 0x1, 0x1);
        gbc.writeMem(0xa9fd, { 0x8c });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x8250, gbc.sp());
        EXPECT(0xa9fe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa9fd));
        // 8C 0327
        gbc.setState(0x76ed, 0xd95a, 0xc1d0, 0x6e34, 0x61dd, 0x93d5, 0x0, 0x1);
        gbc.writeMem(0x76ed, { 0x8c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xd95a, gbc.sp());
        EXPECT(0x76ee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0328
        gbc.setState(0x7c61, 0x9bf2, 0xbab0, 0xa201, 0x5e47, 0x946f, 0x1, 0x1);
        gbc.writeMem(0x7c61, { 0x8c });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x1, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x9bf2, gbc.sp());
        EXPECT(0x7c62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0329
        gbc.setState(0xd286, 0x3cf7, 0xd0f0, 0xe318, 0xfeb, 0x55a8, 0x1, 0x0);
        gbc.writeMem(0xd286, { 0x8c });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3cf7, gbc.sp());
        EXPECT(0xd287, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd286));
        // 8C 032A
        gbc.setState(0x5a92, 0x790d, 0x7bb0, 0xedec, 0x6df0, 0x6c81, 0x0, 0x1);
        gbc.writeMem(0x5a92, { 0x8c });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0x790d, gbc.sp());
        EXPECT(0x5a93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 032B
        gbc.setState(0x6dd5, 0x3d14, 0x1f0, 0xcdd8, 0x53b2, 0x1da1, 0x1, 0x1);
        gbc.writeMem(0x6dd5, { 0x8c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x3d14, gbc.sp());
        EXPECT(0x6dd6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 032C
        gbc.setState(0x8eb2, 0xc058, 0xd630, 0x6ff7, 0xccab, 0x6633, 0x1, 0x1);
        gbc.writeMem(0x8eb2, { 0x8c });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xc058, gbc.sp());
        EXPECT(0x8eb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8eb2));
        // 8C 032D
        gbc.setState(0x9457, 0x262f, 0x810, 0xa62d, 0xe3a8, 0xb09f, 0x1, 0x1);
        gbc.writeMem(0x9457, { 0x8c });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x262f, gbc.sp());
        EXPECT(0x9458, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9457));
        // 8C 032E
        gbc.setState(0xd1a, 0xe0ec, 0x45a0, 0xd071, 0x6c86, 0x638a, 0x1, 0x1);
        gbc.writeMem(0xd1a, { 0x8c });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe0ec, gbc.sp());
        EXPECT(0xd1b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 032F
        gbc.setState(0xe984, 0x3a20, 0x71b0, 0xf30b, 0x3000, 0xed58, 0x1, 0x0);
        gbc.writeMem(0xe984, { 0x8c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3a20, gbc.sp());
        EXPECT(0xe985, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe984));
        // 8C 0330
        gbc.setState(0x3033, 0x2392, 0xe7b0, 0xad59, 0x6a6e, 0xe449, 0x0, 0x0);
        gbc.writeMem(0x3033, { 0x8c });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2392, gbc.sp());
        EXPECT(0x3034, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0331
        gbc.setState(0xddb6, 0x5de0, 0x39c0, 0x8754, 0xf53d, 0xae5, 0x0, 0x1);
        gbc.writeMem(0xddb6, { 0x8c });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x5de0, gbc.sp());
        EXPECT(0xddb7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xddb6));
        // 8C 0332
        gbc.setState(0xedc8, 0x3d8b, 0x5130, 0x10fb, 0x894d, 0x6efc, 0x0, 0x1);
        gbc.writeMem(0xedc8, { 0x8c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0x3d8b, gbc.sp());
        EXPECT(0xedc9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xedc8));
        // 8C 0333
        gbc.setState(0x25fe, 0xaf4e, 0xa7d0, 0x2d19, 0x9f67, 0xa492, 0x0, 0x1);
        gbc.writeMem(0x25fe, { 0x8c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xaf4e, gbc.sp());
        EXPECT(0x25ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0334
        gbc.setState(0x12b3, 0x36b2, 0x7dc0, 0x1fbd, 0x6220, 0x4abd, 0x1, 0x0);
        gbc.writeMem(0x12b3, { 0x8c });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x36b2, gbc.sp());
        EXPECT(0x12b4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0335
        gbc.setState(0x5d7b, 0xf423, 0x5240, 0x80c8, 0xa35, 0x4438, 0x0, 0x1);
        gbc.writeMem(0x5d7b, { 0x8c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0xf423, gbc.sp());
        EXPECT(0x5d7c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0336
        gbc.setState(0x4a21, 0xc28b, 0x1c40, 0xf0af, 0xf8df, 0x3e1b, 0x1, 0x0);
        gbc.writeMem(0x4a21, { 0x8c });
        gbc.step();
        EXPECT(0x5a, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xc28b, gbc.sp());
        EXPECT(0x4a22, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0339
        gbc.setState(0x9b76, 0x9295, 0x7390, 0xb60d, 0x2b6c, 0xcdb1, 0x0, 0x0);
        gbc.writeMem(0x9b76, { 0x8c });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x9295, gbc.sp());
        EXPECT(0x9b77, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9b76));
        // 8C 033A
        gbc.setState(0x584b, 0x8f1b, 0x5950, 0xdd05, 0x3bfe, 0xd6e4, 0x0, 0x1);
        gbc.writeMem(0x584b, { 0x8c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x8f1b, gbc.sp());
        EXPECT(0x584c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 033B
        gbc.setState(0x2e3, 0xcb4b, 0x1250, 0xa4b1, 0xab6d, 0xe1c6, 0x0, 0x0);
        gbc.writeMem(0x2e3, { 0x8c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0xcb4b, gbc.sp());
        EXPECT(0x2e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 033C
        gbc.setState(0xb16c, 0xc51f, 0xba90, 0x7f18, 0xc3e3, 0xad0b, 0x1, 0x0);
        gbc.writeMem(0xb16c, { 0x8c });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc51f, gbc.sp());
        EXPECT(0xb16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb16c));
        // 8C 033D
        gbc.setState(0xc9da, 0xa45c, 0x5fa0, 0x52bd, 0xd3a7, 0x71ff, 0x0, 0x0);
        gbc.writeMem(0xc9da, { 0x8c });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xa45c, gbc.sp());
        EXPECT(0xc9db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc9da));
        // 8C 033E
        gbc.setState(0xb320, 0xf9d9, 0x4c10, 0xbf52, 0x613a, 0x81b1, 0x0, 0x1);
        gbc.writeMem(0xb320, { 0x8c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xf9d9, gbc.sp());
        EXPECT(0xb321, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb320));
        // 8C 033F
        gbc.setState(0x367e, 0x5d55, 0xe080, 0x30c7, 0x6c64, 0xff21, 0x1, 0x1);
        gbc.writeMem(0x367e, { 0x8c });
        gbc.step();
        EXPECT(0xdf, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x5d55, gbc.sp());
        EXPECT(0x367f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0340
        gbc.setState(0x2787, 0x6fb2, 0x20b0, 0x6d2a, 0x899, 0xf688, 0x0, 0x1);
        gbc.writeMem(0x2787, { 0x8c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x6fb2, gbc.sp());
        EXPECT(0x2788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0341
        gbc.setState(0x12ee, 0x34a7, 0xe3b0, 0xd347, 0x9b4b, 0x4c10, 0x0, 0x1);
        gbc.writeMem(0x12ee, { 0x8c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x34a7, gbc.sp());
        EXPECT(0x12ef, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0342
        gbc.setState(0x348b, 0x8703, 0xff70, 0xf294, 0xf7d8, 0x8499, 0x1, 0x1);
        gbc.writeMem(0x348b, { 0x8c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x8703, gbc.sp());
        EXPECT(0x348c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0343
        gbc.setState(0x1109, 0xf0e3, 0xfc20, 0xb192, 0xc7da, 0x9fea, 0x1, 0x1);
        gbc.writeMem(0x1109, { 0x8c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0xf0e3, gbc.sp());
        EXPECT(0x110a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0344
        gbc.setState(0xcf38, 0x9191, 0x6310, 0x2a87, 0xcce5, 0x7876, 0x0, 0x1);
        gbc.writeMem(0xcf38, { 0x8c });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x9191, gbc.sp());
        EXPECT(0xcf39, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcf38));
        // 8C 0345
        gbc.setState(0x57ef, 0x515a, 0x4d90, 0xf4c4, 0x4226, 0x48aa, 0x1, 0x0);
        gbc.writeMem(0x57ef, { 0x8c });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x515a, gbc.sp());
        EXPECT(0x57f0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0346
        gbc.setState(0x3a91, 0x3109, 0x7dc0, 0xe4a5, 0xe64c, 0x56fa, 0x0, 0x0);
        gbc.writeMem(0x3a91, { 0x8c });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x3109, gbc.sp());
        EXPECT(0x3a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0347
        gbc.setState(0xb64f, 0x5b7a, 0x9af0, 0x245, 0x7718, 0xae79, 0x0, 0x0);
        gbc.writeMem(0xb64f, { 0x8c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x5b7a, gbc.sp());
        EXPECT(0xb650, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb64f));
        // 8C 0348
        gbc.setState(0x4ecf, 0x9ed3, 0x240, 0x5f4, 0xc447, 0x37a, 0x1, 0x1);
        gbc.writeMem(0x4ecf, { 0x8c });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9ed3, gbc.sp());
        EXPECT(0x4ed0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 034A
        gbc.setState(0xda09, 0xec66, 0x9390, 0x7f4f, 0x2b3f, 0xa1ef, 0x0, 0x0);
        gbc.writeMem(0xda09, { 0x8c });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xec66, gbc.sp());
        EXPECT(0xda0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xda09));
        // 8C 034B
        gbc.setState(0x1947, 0x3719, 0xadb0, 0x33fc, 0x42c0, 0xe252, 0x0, 0x1);
        gbc.writeMem(0x1947, { 0x8c });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x3719, gbc.sp());
        EXPECT(0x1948, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 034C
        gbc.setState(0xda1e, 0x510, 0x290, 0x90d4, 0xf6cc, 0x827c, 0x0, 0x1);
        gbc.writeMem(0xda1e, { 0x8c });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x510, gbc.sp());
        EXPECT(0xda1f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xda1e));
        // 8C 034D
        gbc.setState(0xc01b, 0x1f5f, 0x1fb0, 0xe2ea, 0xaa28, 0xb43c, 0x0, 0x0);
        gbc.writeMem(0xc01b, { 0x8c });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1f5f, gbc.sp());
        EXPECT(0xc01c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc01b));
        // 8C 034E
        gbc.setState(0xd62e, 0x18c5, 0x34d0, 0x11ad, 0xf5d1, 0x37ef, 0x0, 0x1);
        gbc.writeMem(0xd62e, { 0x8c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x18c5, gbc.sp());
        EXPECT(0xd62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd62e));
        // 8C 034F
        gbc.setState(0xd7c0, 0x8bcc, 0xc6a0, 0x9c9f, 0x27be, 0xceb3, 0x0, 0x1);
        gbc.writeMem(0xd7c0, { 0x8c });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x8bcc, gbc.sp());
        EXPECT(0xd7c1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd7c0));
        // 8C 0350
        gbc.setState(0xd182, 0xfcc7, 0x9180, 0x64d4, 0x4848, 0x8015, 0x1, 0x1);
        gbc.writeMem(0xd182, { 0x8c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xfcc7, gbc.sp());
        EXPECT(0xd183, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd182));
        // 8C 0352
        gbc.setState(0x10db, 0x36be, 0x3870, 0x486a, 0xe341, 0xf12b, 0x0, 0x1);
        gbc.writeMem(0x10db, { 0x8c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x36be, gbc.sp());
        EXPECT(0x10dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0353
        gbc.setState(0xa556, 0xe6a3, 0xa2b0, 0xd23d, 0x3942, 0x84dd, 0x0, 0x0);
        gbc.writeMem(0xa556, { 0x8c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xd2, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0xe6a3, gbc.sp());
        EXPECT(0xa557, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa556));
        // 8C 0354
        gbc.setState(0x9faa, 0x251c, 0x2b70, 0x5f27, 0x4979, 0x78a9, 0x0, 0x1);
        gbc.writeMem(0x9faa, { 0x8c });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x251c, gbc.sp());
        EXPECT(0x9fab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9faa));
        // 8C 0355
        gbc.setState(0x4b40, 0xb125, 0x2e70, 0x4682, 0x8a86, 0xeba6, 0x0, 0x1);
        gbc.writeMem(0x4b40, { 0x8c });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xb125, gbc.sp());
        EXPECT(0x4b41, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0356
        gbc.setState(0x3eeb, 0x99a5, 0x8d00, 0x5f4a, 0x6dd8, 0x20f5, 0x1, 0x0);
        gbc.writeMem(0x3eeb, { 0x8c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x99a5, gbc.sp());
        EXPECT(0x3eec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0357
        gbc.setState(0x56f5, 0x51fa, 0xf780, 0xfda6, 0xaf7, 0x2541, 0x1, 0x0);
        gbc.writeMem(0x56f5, { 0x8c });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x51fa, gbc.sp());
        EXPECT(0x56f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0358
        gbc.setState(0xefd7, 0x1f08, 0x3c80, 0xbe2c, 0x2d3b, 0x57f9, 0x0, 0x1);
        gbc.writeMem(0xefd7, { 0x8c });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x1f08, gbc.sp());
        EXPECT(0xefd8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xefd7));
        // 8C 0359
        gbc.setState(0x5d19, 0x3fbe, 0xdf40, 0x86d0, 0x75f, 0x4f8a, 0x1, 0x1);
        gbc.writeMem(0x5d19, { 0x8c });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3fbe, gbc.sp());
        EXPECT(0x5d1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 035A
        gbc.setState(0xbde8, 0x98da, 0x9520, 0x308, 0x4bca, 0x7f80, 0x0, 0x1);
        gbc.writeMem(0xbde8, { 0x8c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x98da, gbc.sp());
        EXPECT(0xbde9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbde8));
        // 8C 035B
        gbc.setState(0xa79, 0x3e8b, 0x83a0, 0x4e32, 0x1168, 0x8a1b, 0x1, 0x0);
        gbc.writeMem(0xa79, { 0x8c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x3e8b, gbc.sp());
        EXPECT(0xa7a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 035C
        gbc.setState(0xb8d7, 0x4b65, 0xe080, 0xd106, 0x5bfe, 0x3737, 0x1, 0x1);
        gbc.writeMem(0xb8d7, { 0x8c });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x4b65, gbc.sp());
        EXPECT(0xb8d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb8d7));
        // 8C 035D
        gbc.setState(0x3d95, 0x338, 0x4f50, 0x7925, 0x7d81, 0x93fe, 0x0, 0x1);
        gbc.writeMem(0x3d95, { 0x8c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x338, gbc.sp());
        EXPECT(0x3d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 035E
        gbc.setState(0xa776, 0xcef7, 0xfec0, 0xaba6, 0xc177, 0xda39, 0x1, 0x0);
        gbc.writeMem(0xa776, { 0x8c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0xcef7, gbc.sp());
        EXPECT(0xa777, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa776));
        // 8C 035F
        gbc.setState(0x7d73, 0x9f1d, 0x7c20, 0x149d, 0x239f, 0x4fa4, 0x0, 0x1);
        gbc.writeMem(0x7d73, { 0x8c });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x9f1d, gbc.sp());
        EXPECT(0x7d74, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0360
        gbc.setState(0x8ea6, 0xabbc, 0xdcb0, 0xba6b, 0x76cc, 0xbd2b, 0x1, 0x1);
        gbc.writeMem(0x8ea6, { 0x8c });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xabbc, gbc.sp());
        EXPECT(0x8ea7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8ea6));
        // 8C 0361
        gbc.setState(0x6c95, 0x6f7a, 0x7cf0, 0xdd2c, 0x788d, 0xce1, 0x0, 0x1);
        gbc.writeMem(0x6c95, { 0x8c });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x6f7a, gbc.sp());
        EXPECT(0x6c96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0362
        gbc.setState(0xe7d, 0xed0b, 0x7170, 0xcba9, 0x121d, 0xfd90, 0x1, 0x1);
        gbc.writeMem(0xe7d, { 0x8c });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xed0b, gbc.sp());
        EXPECT(0xe7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0363
        gbc.setState(0xeae8, 0xc709, 0xa2d0, 0x3dba, 0x117, 0xcf4f, 0x1, 0x0);
        gbc.writeMem(0xeae8, { 0x8c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xc709, gbc.sp());
        EXPECT(0xeae9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xeae8));
        // 8C 0364
        gbc.setState(0x722e, 0x5e3f, 0x4f70, 0x7382, 0xecc7, 0xf2f3, 0x0, 0x1);
        gbc.writeMem(0x722e, { 0x8c });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x5e3f, gbc.sp());
        EXPECT(0x722f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0365
        gbc.setState(0x74fe, 0xc457, 0x1ff0, 0x78cd, 0x17e0, 0x4a41, 0x1, 0x1);
        gbc.writeMem(0x74fe, { 0x8c });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xc457, gbc.sp());
        EXPECT(0x74ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0366
        gbc.setState(0x2bed, 0x5d9a, 0x4e70, 0xdaf9, 0x79a3, 0xdbd3, 0x1, 0x1);
        gbc.writeMem(0x2bed, { 0x8c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5d9a, gbc.sp());
        EXPECT(0x2bee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0367
        gbc.setState(0x86dd, 0x7d91, 0x9190, 0x704, 0x972, 0x462c, 0x1, 0x1);
        gbc.writeMem(0x86dd, { 0x8c });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x7d91, gbc.sp());
        EXPECT(0x86de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x86dd));
        // 8C 0368
        gbc.setState(0x9d80, 0xcea1, 0x1a30, 0xf552, 0x75a6, 0xa597, 0x1, 0x1);
        gbc.writeMem(0x9d80, { 0x8c });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xcea1, gbc.sp());
        EXPECT(0x9d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9d80));
        // 8C 036A
        gbc.setState(0x69d9, 0x1703, 0x3f60, 0x11da, 0x468d, 0x181f, 0x0, 0x0);
        gbc.writeMem(0x69d9, { 0x8c });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x18, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x1703, gbc.sp());
        EXPECT(0x69da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 036B
        gbc.setState(0x91b7, 0x6d44, 0x4fe0, 0x34b7, 0x2435, 0x14b7, 0x0, 0x0);
        gbc.writeMem(0x91b7, { 0x8c });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x6d44, gbc.sp());
        EXPECT(0x91b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x91b7));
        // 8C 036C
        gbc.setState(0x8c98, 0xb3f6, 0x4160, 0xe466, 0xbe65, 0x3fe5, 0x1, 0x0);
        gbc.writeMem(0x8c98, { 0x8c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0xb3f6, gbc.sp());
        EXPECT(0x8c99, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8c98));
        // 8C 036D
        gbc.setState(0x635c, 0x7072, 0xc090, 0x412e, 0x4523, 0xa0e2, 0x1, 0x1);
        gbc.writeMem(0x635c, { 0x8c });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0x2e, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x7072, gbc.sp());
        EXPECT(0x635d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 036E
        gbc.setState(0xa4e3, 0xed3c, 0x3500, 0x597c, 0x2c2, 0x9d1d, 0x0, 0x0);
        gbc.writeMem(0xa4e3, { 0x8c });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xed3c, gbc.sp());
        EXPECT(0xa4e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa4e3));
        // 8C 036F
        gbc.setState(0x8a6, 0xf7c, 0x3bd0, 0xd893, 0xb85e, 0x1137, 0x1, 0x1);
        gbc.writeMem(0x8a6, { 0x8c });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xf7c, gbc.sp());
        EXPECT(0x8a7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0370
        gbc.setState(0xb44d, 0x66ad, 0x390, 0x885b, 0x312f, 0x711e, 0x0, 0x1);
        gbc.writeMem(0xb44d, { 0x8c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x66ad, gbc.sp());
        EXPECT(0xb44e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb44d));
        // 8C 0372
        gbc.setState(0xe91a, 0xdac4, 0xc5f0, 0xf288, 0xd93c, 0xaf89, 0x1, 0x1);
        gbc.writeMem(0xe91a, { 0x8c });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0xdac4, gbc.sp());
        EXPECT(0xe91b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe91a));
        // 8C 0373
        gbc.setState(0x3f56, 0x8459, 0x7750, 0xbdea, 0x140d, 0x9956, 0x1, 0x1);
        gbc.writeMem(0x3f56, { 0x8c });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8459, gbc.sp());
        EXPECT(0x3f57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0374
        gbc.setState(0x6318, 0x6abb, 0x6d80, 0x3724, 0x9bf9, 0x541, 0x1, 0x1);
        gbc.writeMem(0x6318, { 0x8c });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x6abb, gbc.sp());
        EXPECT(0x6319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0375
        gbc.setState(0xd52d, 0x64ed, 0x2e20, 0xc5f, 0x278a, 0x7121, 0x1, 0x0);
        gbc.writeMem(0xd52d, { 0x8c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x64ed, gbc.sp());
        EXPECT(0xd52e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd52d));
        // 8C 0376
        gbc.setState(0x3643, 0x3f15, 0x46c0, 0x106e, 0xf218, 0xde84, 0x0, 0x0);
        gbc.writeMem(0x3643, { 0x8c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x3f15, gbc.sp());
        EXPECT(0x3644, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0377
        gbc.setState(0x7e33, 0xd3d2, 0xc650, 0x9802, 0x143f, 0x5a33, 0x1, 0x1);
        gbc.writeMem(0x7e33, { 0x8c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xd3d2, gbc.sp());
        EXPECT(0x7e34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0378
        gbc.setState(0x9e08, 0x988, 0x2b30, 0x97a7, 0x5060, 0x4ab7, 0x0, 0x0);
        gbc.writeMem(0x9e08, { 0x8c });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x60, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x988, gbc.sp());
        EXPECT(0x9e09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9e08));
        // 8C 0379
        gbc.setState(0xb818, 0xf637, 0xdaf0, 0xfc11, 0x8b44, 0xf34, 0x0, 0x0);
        gbc.writeMem(0xb818, { 0x8c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xf, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xf637, gbc.sp());
        EXPECT(0xb819, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb818));
        // 8C 037A
        gbc.setState(0xd9d6, 0x1c21, 0x3fc0, 0xa690, 0xcac6, 0x4bf2, 0x1, 0x0);
        gbc.writeMem(0xd9d6, { 0x8c });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x1c21, gbc.sp());
        EXPECT(0xd9d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd9d6));
        // 8C 037B
        gbc.setState(0xbfa8, 0x192d, 0xf990, 0xc332, 0xacc7, 0x2f55, 0x1, 0x1);
        gbc.writeMem(0xbfa8, { 0x8c });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x192d, gbc.sp());
        EXPECT(0xbfa9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbfa8));
        // 8C 037D
        gbc.setState(0x5eb3, 0x1596, 0x2340, 0x70dc, 0x8bd9, 0x23a0, 0x1, 0x0);
        gbc.writeMem(0x5eb3, { 0x8c });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x1596, gbc.sp());
        EXPECT(0x5eb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 037E
        gbc.setState(0xcebd, 0x1b1, 0xfa0, 0xa940, 0x106b, 0x8d35, 0x0, 0x1);
        gbc.writeMem(0xcebd, { 0x8c });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x1b1, gbc.sp());
        EXPECT(0xcebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcebd));
        // 8C 037F
        gbc.setState(0xe508, 0x59bd, 0x1640, 0x1806, 0xf7a9, 0x6776, 0x1, 0x1);
        gbc.writeMem(0xe508, { 0x8c });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x59bd, gbc.sp());
        EXPECT(0xe509, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe508));
        // 8C 0380
        gbc.setState(0xb6d7, 0x5982, 0x4480, 0x47fe, 0xc733, 0x6aeb, 0x1, 0x0);
        gbc.writeMem(0xb6d7, { 0x8c });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5982, gbc.sp());
        EXPECT(0xb6d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb6d7));
        // 8C 0381
        gbc.setState(0x59d2, 0x2c38, 0x4d70, 0xf102, 0x3624, 0x8168, 0x0, 0x1);
        gbc.writeMem(0x59d2, { 0x8c });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x2c38, gbc.sp());
        EXPECT(0x59d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0382
        gbc.setState(0x8f0, 0xe519, 0x7e60, 0x8aa0, 0x31e0, 0xd7c7, 0x1, 0x1);
        gbc.writeMem(0x8f0, { 0x8c });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe519, gbc.sp());
        EXPECT(0x8f1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0383
        gbc.setState(0xbd04, 0xcef, 0xc4b0, 0x1f03, 0x641e, 0x4b6d, 0x1, 0x1);
        gbc.writeMem(0xbd04, { 0x8c });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xcef, gbc.sp());
        EXPECT(0xbd05, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbd04));
        // 8C 0384
        gbc.setState(0x50b8, 0x45b5, 0xaf70, 0x3b5a, 0x3db5, 0x47c, 0x1, 0x1);
        gbc.writeMem(0x50b8, { 0x8c });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x45b5, gbc.sp());
        EXPECT(0x50b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0385
        gbc.setState(0xc3b4, 0xefad, 0xb700, 0x1bef, 0x4a5, 0x3372, 0x0, 0x1);
        gbc.writeMem(0xc3b4, { 0x8c });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0xefad, gbc.sp());
        EXPECT(0xc3b5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc3b4));
        // 8C 0386
        gbc.setState(0x7914, 0x81c, 0x5590, 0xa60e, 0xdba9, 0x72f1, 0x0, 0x1);
        gbc.writeMem(0x7914, { 0x8c });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x81c, gbc.sp());
        EXPECT(0x7915, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0387
        gbc.setState(0x10c1, 0x8098, 0xd7e0, 0x675, 0x8b06, 0xc8e, 0x1, 0x1);
        gbc.writeMem(0x10c1, { 0x8c });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x8b, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x8098, gbc.sp());
        EXPECT(0x10c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0388
        gbc.setState(0x712b, 0xb40e, 0xf2d0, 0xddfc, 0x304f, 0xb30c, 0x0, 0x0);
        gbc.writeMem(0x712b, { 0x8c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb40e, gbc.sp());
        EXPECT(0x712c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0389
        gbc.setState(0xd0e3, 0xe751, 0x2420, 0x5a7d, 0x29f5, 0x7750, 0x1, 0x1);
        gbc.writeMem(0xd0e3, { 0x8c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xe751, gbc.sp());
        EXPECT(0xd0e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd0e3));
        // 8C 038A
        gbc.setState(0xd212, 0xb293, 0x1090, 0xa823, 0xef86, 0x717b, 0x0, 0x0);
        gbc.writeMem(0xd212, { 0x8c });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xb293, gbc.sp());
        EXPECT(0xd213, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd212));
        // 8C 038B
        gbc.setState(0xb11a, 0x4836, 0x86e0, 0xb29c, 0x911b, 0xbadc, 0x1, 0x1);
        gbc.writeMem(0xb11a, { 0x8c });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x4836, gbc.sp());
        EXPECT(0xb11b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb11a));
        // 8C 038C
        gbc.setState(0x950e, 0xb401, 0x7a0, 0x229e, 0x3ece, 0xb5c2, 0x1, 0x1);
        gbc.writeMem(0x950e, { 0x8c });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xb401, gbc.sp());
        EXPECT(0x950f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x950e));
        // 8C 038D
        gbc.setState(0x6cba, 0x7929, 0x7ec0, 0xaf10, 0xd240, 0x508d, 0x0, 0x0);
        gbc.writeMem(0x6cba, { 0x8c });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x7929, gbc.sp());
        EXPECT(0x6cbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 038E
        gbc.setState(0xffb, 0xb1af, 0x4150, 0xc7a0, 0x5765, 0x41b6, 0x1, 0x1);
        gbc.writeMem(0xffb, { 0x8c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb1af, gbc.sp());
        EXPECT(0xffc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 038F
        gbc.setState(0xabc7, 0x192b, 0xa0a0, 0xc773, 0xb596, 0x751f, 0x0, 0x0);
        gbc.writeMem(0xabc7, { 0x8c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x192b, gbc.sp());
        EXPECT(0xabc8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xabc7));
        // 8C 0390
        gbc.setState(0x731c, 0x9496, 0xb710, 0xf82a, 0x6fc0, 0x84b5, 0x0, 0x1);
        gbc.writeMem(0x731c, { 0x8c });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x9496, gbc.sp());
        EXPECT(0x731d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0391
        gbc.setState(0x517d, 0x132d, 0x7d20, 0xba62, 0x38d6, 0x1ef2, 0x0, 0x1);
        gbc.writeMem(0x517d, { 0x8c });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x132d, gbc.sp());
        EXPECT(0x517e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0392
        gbc.setState(0x37d, 0x2d96, 0xe50, 0x65f9, 0xa85c, 0xda67, 0x0, 0x1);
        gbc.writeMem(0x37d, { 0x8c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x2d96, gbc.sp());
        EXPECT(0x37e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0393
        gbc.setState(0x657a, 0x6dbe, 0xfb60, 0xda3c, 0xae0, 0xf387, 0x0, 0x1);
        gbc.writeMem(0x657a, { 0x8c });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6dbe, gbc.sp());
        EXPECT(0x657b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0394
        gbc.setState(0x3e1c, 0x32ed, 0x4fa0, 0x6f85, 0xbcd, 0x51a1, 0x0, 0x0);
        gbc.writeMem(0x3e1c, { 0x8c });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0x32ed, gbc.sp());
        EXPECT(0x3e1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0395
        gbc.setState(0x5d88, 0x93e2, 0x7b40, 0xa872, 0xab38, 0xc908, 0x0, 0x0);
        gbc.writeMem(0x5d88, { 0x8c });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x72, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x93e2, gbc.sp());
        EXPECT(0x5d89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0396
        gbc.setState(0x4be3, 0xfb24, 0x82f0, 0xb47b, 0x6657, 0xcd8c, 0x0, 0x0);
        gbc.writeMem(0x4be3, { 0x8c });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xfb24, gbc.sp());
        EXPECT(0x4be4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 0397
        gbc.setState(0x6e48, 0xc015, 0x2920, 0x6b67, 0xf25f, 0x399, 0x0, 0x1);
        gbc.writeMem(0x6e48, { 0x8c });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x6b, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc015, gbc.sp());
        EXPECT(0x6e49, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 0398
        gbc.setState(0xe2d2, 0xbd45, 0x4680, 0x3ffd, 0x24fa, 0xd211, 0x0, 0x1);
        gbc.writeMem(0xe2d2, { 0x8c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xbd45, gbc.sp());
        EXPECT(0xe2d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe2d2));
        // 8C 0399
        gbc.setState(0x7a27, 0x2d9a, 0xdbf0, 0x7a7b, 0xc620, 0xa88e, 0x0, 0x0);
        gbc.writeMem(0x7a27, { 0x8c });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2d9a, gbc.sp());
        EXPECT(0x7a28, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 039A
        gbc.setState(0x7618, 0xeb2e, 0x4520, 0x2c5a, 0x3512, 0x6cab, 0x0, 0x1);
        gbc.writeMem(0x7618, { 0x8c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xeb2e, gbc.sp());
        EXPECT(0x7619, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 039B
        gbc.setState(0x50a2, 0xaf37, 0xdf40, 0xed48, 0xeb24, 0x77d1, 0x0, 0x0);
        gbc.writeMem(0x50a2, { 0x8c });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xaf37, gbc.sp());
        EXPECT(0x50a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 039C
        gbc.setState(0x767b, 0x7732, 0x1c40, 0x6d50, 0xa227, 0xf9f8, 0x1, 0x0);
        gbc.writeMem(0x767b, { 0x8c });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x7732, gbc.sp());
        EXPECT(0x767c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 039D
        gbc.setState(0xbe51, 0x6eda, 0x9780, 0x722b, 0x754c, 0xcd52, 0x1, 0x1);
        gbc.writeMem(0xbe51, { 0x8c });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x6eda, gbc.sp());
        EXPECT(0xbe52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbe51));
        // 8C 039E
        gbc.setState(0x34f4, 0xeb21, 0xd9c0, 0xda80, 0x20d9, 0x1b2c, 0x0, 0x1);
        gbc.writeMem(0x34f4, { 0x8c });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0xeb21, gbc.sp());
        EXPECT(0x34f5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 039F
        gbc.setState(0x9781, 0x91b7, 0x2370, 0xacef, 0x8eb3, 0xd1a7, 0x0, 0x1);
        gbc.writeMem(0x9781, { 0x8c });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x91b7, gbc.sp());
        EXPECT(0x9782, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9781));
        // 8C 03A0
        gbc.setState(0xeba8, 0x526a, 0x6860, 0xda30, 0x14ca, 0x8e0d, 0x1, 0x1);
        gbc.writeMem(0xeba8, { 0x8c });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x526a, gbc.sp());
        EXPECT(0xeba9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xeba8));
        // 8C 03A1
        gbc.setState(0x6090, 0xf254, 0xcd40, 0xbb33, 0xb53e, 0x2d1d, 0x0, 0x1);
        gbc.writeMem(0x6090, { 0x8c });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xf254, gbc.sp());
        EXPECT(0x6091, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 03A2
        gbc.setState(0xaeab, 0x3203, 0x5c50, 0x8982, 0xd116, 0xcd2d, 0x0, 0x1);
        gbc.writeMem(0xaeab, { 0x8c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x3203, gbc.sp());
        EXPECT(0xaeac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaeab));
        // 8C 03A3
        gbc.setState(0xa7b2, 0x6481, 0x4570, 0xf930, 0x561d, 0xdd71, 0x0, 0x0);
        gbc.writeMem(0xa7b2, { 0x8c });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6481, gbc.sp());
        EXPECT(0xa7b3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa7b2));
        // 8C 03A4
        gbc.setState(0x6d6c, 0x7027, 0x8940, 0xa719, 0x5dbe, 0x2453, 0x1, 0x0);
        gbc.writeMem(0x6d6c, { 0x8c });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7027, gbc.sp());
        EXPECT(0x6d6d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 03A5
        gbc.setState(0x5d69, 0x933f, 0x57d0, 0x811d, 0x5132, 0xdaf0, 0x1, 0x1);
        gbc.writeMem(0x5d69, { 0x8c });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x933f, gbc.sp());
        EXPECT(0x5d6a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03A7
        gbc.setState(0x123c, 0x3589, 0xb9a0, 0x694d, 0x8e98, 0x771e, 0x1, 0x1);
        gbc.writeMem(0x123c, { 0x8c });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x3589, gbc.sp());
        EXPECT(0x123d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03A8
        gbc.setState(0x6358, 0x41c6, 0xad90, 0x9e0e, 0xa859, 0x6b51, 0x0, 0x1);
        gbc.writeMem(0x6358, { 0x8c });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x41c6, gbc.sp());
        EXPECT(0x6359, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03A9
        gbc.setState(0x8c1c, 0xcdfc, 0xa9e0, 0xa2b6, 0x1ba6, 0x5bce, 0x0, 0x0);
        gbc.writeMem(0x8c1c, { 0x8c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0xcdfc, gbc.sp());
        EXPECT(0x8c1d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x8c1c));
        // 8C 03AA
        gbc.setState(0x768e, 0x95fc, 0x6cc0, 0x931c, 0x7dc1, 0xbbbc, 0x1, 0x1);
        gbc.writeMem(0x768e, { 0x8c });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0x95fc, gbc.sp());
        EXPECT(0x768f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03AB
        gbc.setState(0x64fb, 0xc165, 0x6c60, 0x79d1, 0xb84b, 0x29e1, 0x1, 0x0);
        gbc.writeMem(0x64fb, { 0x8c });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xc165, gbc.sp());
        EXPECT(0x64fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 03AC
        gbc.setState(0xbc25, 0x3e5d, 0xae90, 0x800d, 0x3b53, 0xcbfd, 0x1, 0x0);
        gbc.writeMem(0xbc25, { 0x8c });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x3e5d, gbc.sp());
        EXPECT(0xbc26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbc25));
        // 8C 03AD
        gbc.setState(0x79e7, 0xb86e, 0xc150, 0x76a, 0x6ab7, 0x199f, 0x1, 0x0);
        gbc.writeMem(0x79e7, { 0x8c });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xb86e, gbc.sp());
        EXPECT(0x79e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 03AE
        gbc.setState(0xecfd, 0x99ab, 0x4270, 0x2fc1, 0x9b76, 0x65c, 0x0, 0x0);
        gbc.writeMem(0xecfd, { 0x8c });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x99ab, gbc.sp());
        EXPECT(0xecfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xecfd));
        // 8C 03AF
        gbc.setState(0xc55a, 0xa356, 0xc7f0, 0xd8e9, 0x66e5, 0xeb40, 0x1, 0x0);
        gbc.writeMem(0xc55a, { 0x8c });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xa356, gbc.sp());
        EXPECT(0xc55b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc55a));
        // 8C 03B0
        gbc.setState(0x2afc, 0xea51, 0xc3b0, 0x9e26, 0xe1f9, 0x6085, 0x1, 0x0);
        gbc.writeMem(0x2afc, { 0x8c });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xea51, gbc.sp());
        EXPECT(0x2afd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03B1
        gbc.setState(0x3044, 0x411a, 0x9430, 0x801e, 0x4465, 0xa546, 0x1, 0x0);
        gbc.writeMem(0x3044, { 0x8c });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x411a, gbc.sp());
        EXPECT(0x3045, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03B2
        gbc.setState(0x1da9, 0x1597, 0x4fc0, 0xe198, 0x87cc, 0xc9da, 0x1, 0x1);
        gbc.writeMem(0x1da9, { 0x8c });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x1597, gbc.sp());
        EXPECT(0x1daa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03B3
        gbc.setState(0xa6dd, 0xd1e1, 0xa6c0, 0x6a8b, 0xec96, 0x1de2, 0x0, 0x0);
        gbc.writeMem(0xa6dd, { 0x8c });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xd1e1, gbc.sp());
        EXPECT(0xa6de, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xa6dd));
        // 8C 03B4
        gbc.setState(0xb4e0, 0x7e41, 0x4f10, 0x1687, 0x1432, 0x2179, 0x0, 0x1);
        gbc.writeMem(0xb4e0, { 0x8c });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x7e41, gbc.sp());
        EXPECT(0xb4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb4e0));
        // 8C 03B5
        gbc.setState(0xbfb8, 0xaa29, 0x2f80, 0x4791, 0xd9a, 0x543a, 0x0, 0x0);
        gbc.writeMem(0xbfb8, { 0x8c });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x47, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0xaa29, gbc.sp());
        EXPECT(0xbfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbfb8));
        // 8C 03B6
        gbc.setState(0x409, 0xc969, 0xe3c0, 0x3923, 0x508f, 0x7c2b, 0x1, 0x1);
        gbc.writeMem(0x409, { 0x8c });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc969, gbc.sp());
        EXPECT(0x40a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03B7
        gbc.setState(0x1da3, 0x29ac, 0xeee0, 0x2b13, 0x86d1, 0xb1b1, 0x1, 0x0);
        gbc.writeMem(0x1da3, { 0x8c });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x29ac, gbc.sp());
        EXPECT(0x1da4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03B8
        gbc.setState(0xd093, 0xc6c2, 0x5600, 0x5174, 0xa208, 0x8b4d, 0x1, 0x1);
        gbc.writeMem(0xd093, { 0x8c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xc6c2, gbc.sp());
        EXPECT(0xd094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd093));
        // 8C 03B9
        gbc.setState(0xe470, 0x3c99, 0xef0, 0x8515, 0xce79, 0x65d5, 0x0, 0x1);
        gbc.writeMem(0xe470, { 0x8c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x3c99, gbc.sp());
        EXPECT(0xe471, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe470));
        // 8C 03BA
        gbc.setState(0x9643, 0x889b, 0x3d40, 0x1d6e, 0xbb6e, 0xd9a5, 0x1, 0x0);
        gbc.writeMem(0x9643, { 0x8c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x889b, gbc.sp());
        EXPECT(0x9644, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9643));
        // 8C 03BB
        gbc.setState(0x7e6, 0x6245, 0xaff0, 0x4aaf, 0x6010, 0xe872, 0x0, 0x1);
        gbc.writeMem(0x7e6, { 0x8c });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x6245, gbc.sp());
        EXPECT(0x7e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03BC
        gbc.setState(0x35e8, 0xa093, 0xc790, 0xb32b, 0x4bf9, 0xea60, 0x0, 0x0);
        gbc.writeMem(0x35e8, { 0x8c });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xa093, gbc.sp());
        EXPECT(0x35e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03BD
        gbc.setState(0x9db8, 0x78b1, 0xa940, 0x617b, 0x6f37, 0x5a59, 0x0, 0x0);
        gbc.writeMem(0x9db8, { 0x8c });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x78b1, gbc.sp());
        EXPECT(0x9db9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9db8));
        // 8C 03BE
        gbc.setState(0xebe0, 0x94c8, 0x2fc0, 0x6eb3, 0x6790, 0xb233, 0x1, 0x0);
        gbc.writeMem(0xebe0, { 0x8c });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x94c8, gbc.sp());
        EXPECT(0xebe1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xebe0));
        // 8C 03BF
        gbc.setState(0x273d, 0xd38, 0xec30, 0x36ca, 0x9ba8, 0x94e3, 0x0, 0x1);
        gbc.writeMem(0x273d, { 0x8c });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xd38, gbc.sp());
        EXPECT(0x273e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03C0
        gbc.setState(0xbc1d, 0xf1ab, 0x9940, 0xb004, 0x93b7, 0x7bae, 0x0, 0x1);
        gbc.writeMem(0xbc1d, { 0x8c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0xf1ab, gbc.sp());
        EXPECT(0xbc1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbc1d));
        // 8C 03C1
        gbc.setState(0x742, 0x7367, 0xcbd0, 0xbe1e, 0xf19c, 0x6c23, 0x1, 0x0);
        gbc.writeMem(0x742, { 0x8c });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x7367, gbc.sp());
        EXPECT(0x743, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03C2
        gbc.setState(0xe0f5, 0xa2d1, 0xd880, 0x3025, 0xf15e, 0x7480, 0x0, 0x0);
        gbc.writeMem(0xe0f5, { 0x8c });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0xa2d1, gbc.sp());
        EXPECT(0xe0f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe0f5));
        // 8C 03C3
        gbc.setState(0xae93, 0x7a08, 0xe440, 0x6ef1, 0xdab5, 0x503, 0x1, 0x0);
        gbc.writeMem(0xae93, { 0x8c });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x7a08, gbc.sp());
        EXPECT(0xae94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xae93));
        // 8C 03C4
        gbc.setState(0x19d9, 0xcdc8, 0xeb80, 0x5a79, 0xb517, 0x80d6, 0x0, 0x1);
        gbc.writeMem(0x19d9, { 0x8c });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x80, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xcdc8, gbc.sp());
        EXPECT(0x19da, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03C5
        gbc.setState(0x53f5, 0x9cbf, 0x4180, 0x9d8a, 0x268b, 0xbcb0, 0x0, 0x0);
        gbc.writeMem(0x53f5, { 0x8c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x9cbf, gbc.sp());
        EXPECT(0x53f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 03C6
        gbc.setState(0xdb94, 0x5625, 0x9500, 0x2366, 0x70f, 0x81dd, 0x1, 0x1);
        gbc.writeMem(0xdb94, { 0x8c });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x5625, gbc.sp());
        EXPECT(0xdb95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xdb94));
        // 8C 03C7
        gbc.setState(0xcb02, 0x3c53, 0x4750, 0x6f7a, 0x5a52, 0x6939, 0x0, 0x1);
        gbc.writeMem(0xcb02, { 0x8c });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x5a, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x3c53, gbc.sp());
        EXPECT(0xcb03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xcb02));
        // 8C 03C9
        gbc.setState(0x40c9, 0x6ef0, 0x34d0, 0xcbbe, 0x962, 0x83b6, 0x1, 0x0);
        gbc.writeMem(0x40c9, { 0x8c });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x6ef0, gbc.sp());
        EXPECT(0x40ca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 03CA
        gbc.setState(0x3b48, 0xc665, 0xce90, 0xd825, 0x4f8b, 0xbc64, 0x1, 0x1);
        gbc.writeMem(0x3b48, { 0x8c });
        gbc.step();
        EXPECT(0x8b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc665, gbc.sp());
        EXPECT(0x3b49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03CB
        gbc.setState(0x24a, 0x6f23, 0x8b20, 0x1180, 0xbb7e, 0x21a4, 0x1, 0x0);
        gbc.writeMem(0x24a, { 0x8c });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x6f23, gbc.sp());
        EXPECT(0x24b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 03CC
        gbc.setState(0x707e, 0x4ad0, 0xcda0, 0xc9fe, 0xe405, 0x3d8e, 0x0, 0x1);
        gbc.writeMem(0x707e, { 0x8c });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x4ad0, gbc.sp());
        EXPECT(0x707f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03CD
        gbc.setState(0x7db, 0xb105, 0x200, 0x1123, 0x9e5e, 0xa4cc, 0x1, 0x1);
        gbc.writeMem(0x7db, { 0x8c });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb105, gbc.sp());
        EXPECT(0x7dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 03CE
        gbc.setState(0x3ccb, 0xc639, 0x46d0, 0xb4cd, 0x12df, 0x2d5d, 0x0, 0x0);
        gbc.writeMem(0x3ccb, { 0x8c });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xc639, gbc.sp());
        EXPECT(0x3ccc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 03CF
        gbc.setState(0xee94, 0x77d2, 0x60e0, 0xcdd1, 0xdde7, 0xcdf7, 0x1, 0x0);
        gbc.writeMem(0xee94, { 0x8c });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x77d2, gbc.sp());
        EXPECT(0xee95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xee94));
        // 8C 03D0
        gbc.setState(0xedd4, 0x7ef7, 0xd470, 0x767b, 0xc1e, 0x2d32, 0x0, 0x1);
        gbc.writeMem(0xedd4, { 0x8c });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x1e, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7ef7, gbc.sp());
        EXPECT(0xedd5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xedd4));
        // 8C 03D1
        gbc.setState(0xe432, 0x79c5, 0xf4b0, 0xec7f, 0x2a01, 0x1fea, 0x0, 0x0);
        gbc.writeMem(0xe432, { 0x8c });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x79c5, gbc.sp());
        EXPECT(0xe433, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe432));
        // 8C 03D2
        gbc.setState(0x71aa, 0x3f7c, 0x1630, 0xb2c5, 0x3b41, 0xcb95, 0x0, 0x1);
        gbc.writeMem(0x71aa, { 0x8c });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xcb, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x3f7c, gbc.sp());
        EXPECT(0x71ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 03D3
        gbc.setState(0x66b6, 0xf71f, 0xeae0, 0x2d1d, 0x140b, 0xef16, 0x0, 0x0);
        gbc.writeMem(0x66b6, { 0x8c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf71f, gbc.sp());
        EXPECT(0x66b7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03D5
        gbc.setState(0x9099, 0xe462, 0x8c0, 0x4331, 0xbc0, 0xfc4a, 0x0, 0x0);
        gbc.writeMem(0x9099, { 0x8c });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x4a, gbc.l());
        EXPECT(0xe462, gbc.sp());
        EXPECT(0x909a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9099));
        // 8C 03D6
        gbc.setState(0xe5f8, 0x90bb, 0x37c0, 0x97bd, 0xdac8, 0xf378, 0x0, 0x0);
        gbc.writeMem(0xe5f8, { 0x8c });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x90bb, gbc.sp());
        EXPECT(0xe5f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe5f8));
        // 8C 03D7
        gbc.setState(0xd6b5, 0xf705, 0x5220, 0x70d0, 0x51c7, 0x70ac, 0x1, 0x1);
        gbc.writeMem(0xd6b5, { 0x8c });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xf705, gbc.sp());
        EXPECT(0xd6b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xd6b5));
        // 8C 03D8
        gbc.setState(0x5b07, 0x49d8, 0x43a0, 0xaee5, 0x11e3, 0x2bcf, 0x0, 0x1);
        gbc.writeMem(0x5b07, { 0x8c });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x49d8, gbc.sp());
        EXPECT(0x5b08, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 03D9
        gbc.setState(0x9841, 0x4b06, 0x7f70, 0xb123, 0x6c9d, 0x5995, 0x0, 0x1);
        gbc.writeMem(0x9841, { 0x8c });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4b06, gbc.sp());
        EXPECT(0x9842, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x9841));
        // 8C 03DA
        gbc.setState(0x4dff, 0x12ce, 0x570, 0xd6bb, 0x65f3, 0x7886, 0x1, 0x0);
        gbc.writeMem(0x4dff, { 0x8c });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x12ce, gbc.sp());
        EXPECT(0x4e00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 03DB
        gbc.setState(0xc9e8, 0x254e, 0xe230, 0x4a81, 0x6c55, 0x7d1c, 0x0, 0x1);
        gbc.writeMem(0xc9e8, { 0x8c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x55, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x254e, gbc.sp());
        EXPECT(0xc9e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xc9e8));
        // 8C 03DC
        gbc.setState(0x88eb, 0x5d6c, 0x8020, 0x8b3f, 0xf671, 0x7d49, 0x1, 0x0);
        gbc.writeMem(0x88eb, { 0x8c });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x5d6c, gbc.sp());
        EXPECT(0x88ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x88eb));
        // 8C 03DD
        gbc.setState(0xb503, 0xb12f, 0x4df0, 0x7ca5, 0xdf82, 0xd183, 0x1, 0x1);
        gbc.writeMem(0xb503, { 0x8c });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0xdf, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xb12f, gbc.sp());
        EXPECT(0xb504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xb503));
        // 8C 03DE
        gbc.setState(0xaaa0, 0x2689, 0x2b30, 0x6dd3, 0xa911, 0xe110, 0x1, 0x1);
        gbc.writeMem(0xaaa0, { 0x8c });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x2689, gbc.sp());
        EXPECT(0xaaa1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xaaa0));
        // 8C 03DF
        gbc.setState(0x6840, 0xa740, 0xc770, 0x8fc4, 0xe491, 0xc4cb, 0x1, 0x1);
        gbc.writeMem(0x6840, { 0x8c });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xa740, gbc.sp());
        EXPECT(0x6841, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03E0
        gbc.setState(0x6ace, 0x4398, 0xd30, 0x53b9, 0x7e94, 0x548, 0x0, 0x1);
        gbc.writeMem(0x6ace, { 0x8c });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0x4398, gbc.sp());
        EXPECT(0x6acf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 8C 03E1
        gbc.setState(0x45c4, 0xa1c8, 0xdf00, 0xd8ad, 0xf04b, 0x81a1, 0x0, 0x0);
        gbc.writeMem(0x45c4, { 0x8c });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xa1c8, gbc.sp());
        EXPECT(0x45c5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03E2
        gbc.setState(0xae75, 0xedce, 0xcd40, 0x4caa, 0x5808, 0xb36f, 0x1, 0x1);
        gbc.writeMem(0xae75, { 0x8c });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x8, gbc.e());
        EXPECT(0xb3, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xedce, gbc.sp());
        EXPECT(0xae76, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xae75));
        // 8C 03E3
        gbc.setState(0x84ef, 0xfc27, 0x1400, 0xdaae, 0x8737, 0xb10d, 0x0, 0x0);
        gbc.writeMem(0x84ef, { 0x8c });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xfc27, gbc.sp());
        EXPECT(0x84f0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0x84ef));
        // 8C 03E5
        gbc.setState(0x230, 0x4ec4, 0x8c10, 0x46b, 0xe375, 0x943c, 0x0, 0x0);
        gbc.writeMem(0x230, { 0x8c });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x4ec4, gbc.sp());
        EXPECT(0x231, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 8C 03E6
        gbc.setState(0xe427, 0x9bed, 0x9150, 0x4ff, 0xd8d5, 0xf522, 0x1, 0x0);
        gbc.writeMem(0xe427, { 0x8c });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x9bed, gbc.sp());
        EXPECT(0xe428, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xe427));
        // 8C 03E7
        gbc.setState(0xbc4f, 0xfa19, 0x9cd0, 0xaef9, 0x52ef, 0xcfb2, 0x0, 0x1);
        gbc.writeMem(0xbc4f, { 0x8c });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xfa19, gbc.sp());
        EXPECT(0xbc50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x8c, gbc.readMem(0xbc4f));
    }
