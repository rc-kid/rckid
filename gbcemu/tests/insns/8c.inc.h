    TEST(gbcemu, opcode_8c) {
        GBCEmu gbc{};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 8C 0000
        gbc.setState(0x8a16, 0x4fab, 0xb20, 0x2a, 0x6c87, 0xb32b, 0x1, 0x1);
        gbc.writeMem(0x8a16, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x4fab);
        EXPECT(gbc.pc(), 0x8a17);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8a16), 0x8c);
        // 8C 0001
        gbc.setState(0x3939, 0xefef, 0x6bb0, 0x29c2, 0x9e23, 0x85db, 0x0, 0x0);
        gbc.writeMem(0x3939, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0xefef);
        EXPECT(gbc.pc(), 0x393a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0002
        gbc.setState(0x59f0, 0x2bfd, 0xfac0, 0xa5e3, 0x361d, 0x655e, 0x0, 0x0);
        gbc.writeMem(0x59f0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x5e);
        EXPECT(gbc.sp(), 0x2bfd);
        EXPECT(gbc.pc(), 0x59f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0003
        gbc.setState(0x666b, 0x195b, 0x8730, 0x9dc8, 0x8ffb, 0x42d, 0x0, 0x1);
        gbc.writeMem(0x666b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x195b);
        EXPECT(gbc.pc(), 0x666c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0004
        gbc.setState(0x93da, 0x8cf7, 0x3120, 0x477a, 0x3ea0, 0x9042, 0x0, 0x1);
        gbc.writeMem(0x93da, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x8cf7);
        EXPECT(gbc.pc(), 0x93db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x93da), 0x8c);
        // 8C 0005
        gbc.setState(0x94d2, 0xd9df, 0x3400, 0xb42d, 0xd561, 0x1a01, 0x1, 0x1);
        gbc.writeMem(0x94d2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xd9df);
        EXPECT(gbc.pc(), 0x94d3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94d2), 0x8c);
        // 8C 0006
        gbc.setState(0x1624, 0xc3bb, 0xb60, 0x98d9, 0x3216, 0x8785, 0x1, 0x0);
        gbc.writeMem(0x1624, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xc3bb);
        EXPECT(gbc.pc(), 0x1625);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0008
        gbc.setState(0x3f8a, 0xdc35, 0xd10, 0x47ba, 0xa14f, 0x80cd, 0x1, 0x0);
        gbc.writeMem(0x3f8a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0xdc35);
        EXPECT(gbc.pc(), 0x3f8b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0009
        gbc.setState(0x4ad4, 0x8829, 0x6980, 0xf8e3, 0xf1ac, 0x67cc, 0x0, 0x1);
        gbc.writeMem(0x4ad4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x8829);
        EXPECT(gbc.pc(), 0x4ad5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 000A
        gbc.setState(0x48c, 0x8240, 0x6a0, 0x70c7, 0x7cbc, 0x3ac4, 0x1, 0x0);
        gbc.writeMem(0x48c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x8240);
        EXPECT(gbc.pc(), 0x48d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 000B
        gbc.setState(0xeb2b, 0x96c9, 0xca40, 0xa524, 0xc48e, 0xa5aa, 0x0, 0x0);
        gbc.writeMem(0xeb2b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x96c9);
        EXPECT(gbc.pc(), 0xeb2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeb2b), 0x8c);
        // 8C 000C
        gbc.setState(0xc2df, 0xf204, 0x71c0, 0x606c, 0x59b7, 0x1e04, 0x1, 0x1);
        gbc.writeMem(0xc2df, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0xf204);
        EXPECT(gbc.pc(), 0xc2e0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2df), 0x8c);
        // 8C 000D
        gbc.setState(0x9157, 0xc8a1, 0xa360, 0x4022, 0xddeb, 0xb1eb, 0x0, 0x1);
        gbc.writeMem(0x9157, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0xc8a1);
        EXPECT(gbc.pc(), 0x9158);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9157), 0x8c);
        // 8C 000E
        gbc.setState(0x28cf, 0x48f9, 0xdb70, 0xc56e, 0xcf85, 0xe58c, 0x1, 0x0);
        gbc.writeMem(0x28cf, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0x48f9);
        EXPECT(gbc.pc(), 0x28d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 000F
        gbc.setState(0x9723, 0xb67a, 0xe2c0, 0xe26c, 0x130d, 0x4d9d, 0x1, 0x0);
        gbc.writeMem(0x9723, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xb67a);
        EXPECT(gbc.pc(), 0x9724);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9723), 0x8c);
        // 8C 0010
        gbc.setState(0x8ace, 0xa506, 0xd810, 0x81f5, 0xbb54, 0x118f, 0x0, 0x1);
        gbc.writeMem(0x8ace, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0xa506);
        EXPECT(gbc.pc(), 0x8acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8ace), 0x8c);
        // 8C 0011
        gbc.setState(0x9fa1, 0x3be0, 0xca80, 0xb2f8, 0x37c1, 0xe6e4, 0x0, 0x0);
        gbc.writeMem(0x9fa1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x3be0);
        EXPECT(gbc.pc(), 0x9fa2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fa1), 0x8c);
        // 8C 0013
        gbc.setState(0x7144, 0xa765, 0x8b70, 0x31d3, 0x7789, 0x7679, 0x1, 0x0);
        gbc.writeMem(0x7144, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x89);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa765);
        EXPECT(gbc.pc(), 0x7145);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0014
        gbc.setState(0xe477, 0x4afb, 0x9940, 0x6ddd, 0xdcde, 0x922d, 0x0, 0x0);
        gbc.writeMem(0xe477, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xdd);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x4afb);
        EXPECT(gbc.pc(), 0xe478);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe477), 0x8c);
        // 8C 0015
        gbc.setState(0x71b8, 0xc497, 0x46e0, 0x6a4a, 0xadc1, 0xebbe, 0x1, 0x0);
        gbc.writeMem(0x71b8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0xc497);
        EXPECT(gbc.pc(), 0x71b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0016
        gbc.setState(0x86d5, 0x3e77, 0x1e30, 0xdb5d, 0xf130, 0x5953, 0x1, 0x1);
        gbc.writeMem(0x86d5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x3e77);
        EXPECT(gbc.pc(), 0x86d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86d5), 0x8c);
        // 8C 0017
        gbc.setState(0x82d3, 0x64dc, 0x9690, 0x92b3, 0x4ee7, 0x22d8, 0x1, 0x0);
        gbc.writeMem(0x82d3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x64dc);
        EXPECT(gbc.pc(), 0x82d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x82d3), 0x8c);
        // 8C 0018
        gbc.setState(0x401c, 0x8901, 0x9b00, 0x5767, 0x2e58, 0xd6af, 0x0, 0x1);
        gbc.writeMem(0x401c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x8901);
        EXPECT(gbc.pc(), 0x401d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0019
        gbc.setState(0x34, 0x5f3f, 0xd770, 0x2cb2, 0x64b, 0xbe76, 0x1, 0x0);
        gbc.writeMem(0x34, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x5f3f);
        EXPECT(gbc.pc(), 0x35);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 001A
        gbc.setState(0x7f59, 0x415f, 0x870, 0x6bb5, 0xf6cf, 0xab49, 0x0, 0x0);
        gbc.writeMem(0x7f59, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x415f);
        EXPECT(gbc.pc(), 0x7f5a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 001B
        gbc.setState(0x437f, 0xa641, 0xb610, 0xb6fc, 0x5c0a, 0xbd41, 0x1, 0x1);
        gbc.writeMem(0x437f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xa641);
        EXPECT(gbc.pc(), 0x4380);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 001C
        gbc.setState(0xca38, 0x4458, 0x5cb0, 0x6e46, 0x8417, 0xab26, 0x0, 0x0);
        gbc.writeMem(0xca38, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x4458);
        EXPECT(gbc.pc(), 0xca39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca38), 0x8c);
        // 8C 001E
        gbc.setState(0x30d9, 0xbdfb, 0x7560, 0x359, 0x8bd0, 0x5b22, 0x0, 0x0);
        gbc.writeMem(0x30d9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0xbdfb);
        EXPECT(gbc.pc(), 0x30da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 001F
        gbc.setState(0x6ea6, 0x2068, 0xb70, 0x8b56, 0xc7e4, 0xcca0, 0x0, 0x0);
        gbc.writeMem(0x6ea6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x2068);
        EXPECT(gbc.pc(), 0x6ea7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0020
        gbc.setState(0x92b2, 0x74a1, 0x7540, 0x8d94, 0xbc30, 0x561f, 0x0, 0x1);
        gbc.writeMem(0x92b2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x74a1);
        EXPECT(gbc.pc(), 0x92b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x92b2), 0x8c);
        // 8C 0021
        gbc.setState(0xa514, 0xf4c, 0x7650, 0x431b, 0xfea, 0x2f0e, 0x0, 0x1);
        gbc.writeMem(0xa514, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xf4c);
        EXPECT(gbc.pc(), 0xa515);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa514), 0x8c);
        // 8C 0022
        gbc.setState(0xd767, 0x698e, 0xf9f0, 0xd8f4, 0x9462, 0x8709, 0x0, 0x1);
        gbc.writeMem(0xd767, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x698e);
        EXPECT(gbc.pc(), 0xd768);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd767), 0x8c);
        // 8C 0023
        gbc.setState(0x9028, 0xc7c5, 0xb9d0, 0xc833, 0x8ff9, 0x3418, 0x1, 0x1);
        gbc.writeMem(0x9028, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xc7c5);
        EXPECT(gbc.pc(), 0x9029);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9028), 0x8c);
        // 8C 0024
        gbc.setState(0x23bb, 0x3ac2, 0x9580, 0x3de1, 0x9f83, 0xb41d, 0x1, 0x1);
        gbc.writeMem(0x23bb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x3ac2);
        EXPECT(gbc.pc(), 0x23bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0025
        gbc.setState(0x2c55, 0x46c9, 0x29a0, 0xcfcf, 0x700c, 0x8f8a, 0x0, 0x1);
        gbc.writeMem(0x2c55, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xcf);
        EXPECT(gbc.c(),  0xcf);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x46c9);
        EXPECT(gbc.pc(), 0x2c56);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0026
        gbc.setState(0x84b7, 0xd393, 0x8ff0, 0x8e42, 0xb34a, 0xf831, 0x0, 0x1);
        gbc.writeMem(0x84b7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xd393);
        EXPECT(gbc.pc(), 0x84b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84b7), 0x8c);
        // 8C 0027
        gbc.setState(0x6186, 0xf9e1, 0x9280, 0x6935, 0x123f, 0x7bb9, 0x0, 0x0);
        gbc.writeMem(0x6186, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0xf9e1);
        EXPECT(gbc.pc(), 0x6187);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0029
        gbc.setState(0xc8bf, 0x8fb8, 0x480, 0x871d, 0xfef6, 0x41f9, 0x1, 0x1);
        gbc.writeMem(0xc8bf, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x8fb8);
        EXPECT(gbc.pc(), 0xc8c0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc8bf), 0x8c);
        // 8C 002A
        gbc.setState(0xb02d, 0x4cd2, 0xa9a0, 0x606b, 0x8690, 0xad92, 0x0, 0x1);
        gbc.writeMem(0xb02d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x4cd2);
        EXPECT(gbc.pc(), 0xb02e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb02d), 0x8c);
        // 8C 002B
        gbc.setState(0xaca5, 0x5338, 0x79c0, 0x6b34, 0xcfb7, 0x465d, 0x0, 0x1);
        gbc.writeMem(0xaca5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x5338);
        EXPECT(gbc.pc(), 0xaca6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaca5), 0x8c);
        // 8C 002C
        gbc.setState(0x3a90, 0x1150, 0x5830, 0x5b86, 0x371f, 0x3cc5, 0x1, 0x0);
        gbc.writeMem(0x3a90, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x1150);
        EXPECT(gbc.pc(), 0x3a91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 002D
        gbc.setState(0x1088, 0xb432, 0x1c80, 0xf70b, 0xa621, 0x3ada, 0x1, 0x1);
        gbc.writeMem(0x1088, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0xb432);
        EXPECT(gbc.pc(), 0x1089);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 002E
        gbc.setState(0x2a5d, 0x4c52, 0x760, 0x17f7, 0x3cc, 0x1946, 0x0, 0x1);
        gbc.writeMem(0x2a5d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x4c52);
        EXPECT(gbc.pc(), 0x2a5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 002F
        gbc.setState(0x9104, 0xba37, 0x5fd0, 0x6141, 0x9f2c, 0xf4f5, 0x0, 0x0);
        gbc.writeMem(0x9104, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xba37);
        EXPECT(gbc.pc(), 0x9105);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9104), 0x8c);
        // 8C 0030
        gbc.setState(0x3f, 0xf048, 0xbeb0, 0x7d27, 0xa181, 0xac54, 0x0, 0x1);
        gbc.writeMem(0x3f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xf048);
        EXPECT(gbc.pc(), 0x40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0031
        gbc.setState(0xd523, 0x6a57, 0x4890, 0x17b2, 0x18f9, 0x7f21, 0x0, 0x1);
        gbc.writeMem(0xd523, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x6a57);
        EXPECT(gbc.pc(), 0xd524);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd523), 0x8c);
        // 8C 0032
        gbc.setState(0x1633, 0x15b9, 0x19f0, 0x7bf0, 0x7961, 0xbb4b, 0x0, 0x0);
        gbc.writeMem(0x1633, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x15b9);
        EXPECT(gbc.pc(), 0x1634);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0033
        gbc.setState(0x9181, 0x9176, 0x1ce0, 0x7e6d, 0xf39e, 0x497f, 0x1, 0x0);
        gbc.writeMem(0x9181, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9176);
        EXPECT(gbc.pc(), 0x9182);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9181), 0x8c);
        // 8C 0034
        gbc.setState(0x8521, 0x4784, 0x1cf0, 0x415, 0x9f3, 0x991e, 0x1, 0x1);
        gbc.writeMem(0x8521, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x4784);
        EXPECT(gbc.pc(), 0x8522);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8521), 0x8c);
        // 8C 0035
        gbc.setState(0x6c05, 0xfd05, 0x15c0, 0x30f7, 0xff82, 0x72ec, 0x0, 0x1);
        gbc.writeMem(0x6c05, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xfd05);
        EXPECT(gbc.pc(), 0x6c06);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0036
        gbc.setState(0x1630, 0xbf24, 0x2fe0, 0x9e75, 0x20aa, 0x848a, 0x1, 0x0);
        gbc.writeMem(0x1630, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xbf24);
        EXPECT(gbc.pc(), 0x1631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0038
        gbc.setState(0x8b83, 0xefd1, 0xdd30, 0xbd25, 0x87b6, 0xc8e9, 0x1, 0x0);
        gbc.writeMem(0x8b83, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xefd1);
        EXPECT(gbc.pc(), 0x8b84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8b83), 0x8c);
        // 8C 0039
        gbc.setState(0x9361, 0x2bae, 0x2550, 0x3ae4, 0x8124, 0x2300, 0x0, 0x1);
        gbc.writeMem(0x9361, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x2bae);
        EXPECT(gbc.pc(), 0x9362);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9361), 0x8c);
        // 8C 003A
        gbc.setState(0xe8c3, 0xcf04, 0xb570, 0x8ca0, 0x3e65, 0x6359, 0x1, 0x1);
        gbc.writeMem(0xe8c3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xcf04);
        EXPECT(gbc.pc(), 0xe8c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8c3), 0x8c);
        // 8C 003B
        gbc.setState(0x3202, 0xf570, 0x1fd0, 0xe442, 0xe2ab, 0x7140, 0x0, 0x1);
        gbc.writeMem(0x3202, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xf570);
        EXPECT(gbc.pc(), 0x3203);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 003C
        gbc.setState(0x6aba, 0xf6ac, 0x4bd0, 0x786, 0x5f29, 0x78c1, 0x0, 0x0);
        gbc.writeMem(0x6aba, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0xf6ac);
        EXPECT(gbc.pc(), 0x6abb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 003D
        gbc.setState(0xac0a, 0xc408, 0x2fd0, 0xd464, 0xe6a3, 0xff81, 0x0, 0x1);
        gbc.writeMem(0xac0a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xc408);
        EXPECT(gbc.pc(), 0xac0b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xac0a), 0x8c);
        // 8C 003E
        gbc.setState(0x50af, 0x10ec, 0xdc0, 0x43f7, 0x3790, 0xa8e5, 0x1, 0x0);
        gbc.writeMem(0x50af, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x10ec);
        EXPECT(gbc.pc(), 0x50b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 003F
        gbc.setState(0x865d, 0x7a1, 0x3a50, 0x7c39, 0x3d7a, 0xa817, 0x1, 0x0);
        gbc.writeMem(0x865d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x7a);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x7a1);
        EXPECT(gbc.pc(), 0x865e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x865d), 0x8c);
        // 8C 0040
        gbc.setState(0x9af0, 0xb346, 0xbe0, 0x9f7f, 0xcbfb, 0x8495, 0x0, 0x0);
        gbc.writeMem(0x9af0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xb346);
        EXPECT(gbc.pc(), 0x9af1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9af0), 0x8c);
        // 8C 0041
        gbc.setState(0x6986, 0xdd45, 0x50d0, 0x4ecc, 0xbd10, 0x4928, 0x0, 0x1);
        gbc.writeMem(0x6986, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xdd45);
        EXPECT(gbc.pc(), 0x6987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0042
        gbc.setState(0xbc85, 0x42ef, 0x2ac0, 0xf2eb, 0xc95c, 0x18ed, 0x0, 0x1);
        gbc.writeMem(0xbc85, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0x42ef);
        EXPECT(gbc.pc(), 0xbc86);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc85), 0x8c);
        // 8C 0043
        gbc.setState(0x39f9, 0xca8c, 0xe990, 0xd4c1, 0xed79, 0xd733, 0x1, 0x1);
        gbc.writeMem(0x39f9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xca8c);
        EXPECT(gbc.pc(), 0x39fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0044
        gbc.setState(0x857c, 0x9a9e, 0x82b0, 0x46e, 0x2c4, 0xed90, 0x0, 0x1);
        gbc.writeMem(0x857c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x9a9e);
        EXPECT(gbc.pc(), 0x857d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x857c), 0x8c);
        // 8C 0045
        gbc.setState(0x390, 0x273, 0xb7d0, 0x4b1b, 0x640a, 0x7754, 0x1, 0x0);
        gbc.writeMem(0x390, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0x273);
        EXPECT(gbc.pc(), 0x391);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0046
        gbc.setState(0x270e, 0xb4b0, 0x63d0, 0x82f4, 0xdceb, 0xfb37, 0x0, 0x0);
        gbc.writeMem(0x270e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xb4b0);
        EXPECT(gbc.pc(), 0x270f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0047
        gbc.setState(0xdcb0, 0x5c27, 0xf420, 0x1a51, 0x9c6a, 0x39ff, 0x1, 0x0);
        gbc.writeMem(0xdcb0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x5c27);
        EXPECT(gbc.pc(), 0xdcb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdcb0), 0x8c);
        // 8C 0048
        gbc.setState(0x264d, 0xcc29, 0x2c40, 0xaa73, 0x57ac, 0xd2a7, 0x1, 0x0);
        gbc.writeMem(0x264d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xcc29);
        EXPECT(gbc.pc(), 0x264e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0049
        gbc.setState(0x57fb, 0x8c7a, 0x8ac0, 0x9ece, 0x5ba5, 0x936d, 0x0, 0x0);
        gbc.writeMem(0x57fb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0x8c7a);
        EXPECT(gbc.pc(), 0x57fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 004A
        gbc.setState(0x20a4, 0x5ddd, 0x9b50, 0x7f3, 0x4677, 0x848f, 0x0, 0x1);
        gbc.writeMem(0x20a4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x5ddd);
        EXPECT(gbc.pc(), 0x20a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 004B
        gbc.setState(0xdfd9, 0x7643, 0xf560, 0x9a7, 0xfbaa, 0x96f, 0x1, 0x0);
        gbc.writeMem(0xdfd9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7643);
        EXPECT(gbc.pc(), 0xdfda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfd9), 0x8c);
        // 8C 004C
        gbc.setState(0x64f5, 0x338, 0xa140, 0xa019, 0x4fb9, 0xb08f, 0x0, 0x1);
        gbc.writeMem(0x64f5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x338);
        EXPECT(gbc.pc(), 0x64f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 004D
        gbc.setState(0x8d92, 0x6f78, 0x17c0, 0x8e94, 0x2c47, 0xbeb2, 0x1, 0x0);
        gbc.writeMem(0x8d92, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x6f78);
        EXPECT(gbc.pc(), 0x8d93);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d92), 0x8c);
        // 8C 004E
        gbc.setState(0x375f, 0xdb40, 0x6840, 0x6407, 0xc1a6, 0x86f5, 0x0, 0x0);
        gbc.writeMem(0x375f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xdb40);
        EXPECT(gbc.pc(), 0x3760);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 004F
        gbc.setState(0xab1d, 0x52fe, 0x1a30, 0x3db2, 0xebb8, 0xf794, 0x0, 0x0);
        gbc.writeMem(0xab1d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x52fe);
        EXPECT(gbc.pc(), 0xab1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab1d), 0x8c);
        // 8C 0050
        gbc.setState(0x269c, 0xc682, 0x4e40, 0x9695, 0x7921, 0x39b8, 0x1, 0x1);
        gbc.writeMem(0x269c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xc682);
        EXPECT(gbc.pc(), 0x269d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0051
        gbc.setState(0xa446, 0x2f06, 0x83e0, 0x9a42, 0xc3a4, 0x8c74, 0x1, 0x0);
        gbc.writeMem(0xa446, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x2f06);
        EXPECT(gbc.pc(), 0xa447);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa446), 0x8c);
        // 8C 0052
        gbc.setState(0xb719, 0x3d7e, 0x5bf0, 0x4b53, 0x9d16, 0xea94, 0x1, 0x1);
        gbc.writeMem(0xb719, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x9d);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x3d7e);
        EXPECT(gbc.pc(), 0xb71a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb719), 0x8c);
        // 8C 0053
        gbc.setState(0xbe2b, 0xa56a, 0x970, 0x2c41, 0x4d8b, 0x497c, 0x0, 0x0);
        gbc.writeMem(0xbe2b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xa56a);
        EXPECT(gbc.pc(), 0xbe2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe2b), 0x8c);
        // 8C 0054
        gbc.setState(0x1a27, 0x8dfb, 0x3c80, 0x3b71, 0xbaa2, 0xd3f0, 0x0, 0x0);
        gbc.writeMem(0x1a27, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x8dfb);
        EXPECT(gbc.pc(), 0x1a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0055
        gbc.setState(0x2c0d, 0xb467, 0xaae0, 0x597b, 0x4cff, 0x470c, 0x1, 0x0);
        gbc.writeMem(0x2c0d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xff);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb467);
        EXPECT(gbc.pc(), 0x2c0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0056
        gbc.setState(0x2bd5, 0xa212, 0xa8a0, 0x9d08, 0x6852, 0xd739, 0x0, 0x1);
        gbc.writeMem(0x2bd5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xa212);
        EXPECT(gbc.pc(), 0x2bd6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0057
        gbc.setState(0xe8e5, 0x14d8, 0xd590, 0x3f30, 0xac58, 0x879d, 0x1, 0x0);
        gbc.writeMem(0xe8e5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x14d8);
        EXPECT(gbc.pc(), 0xe8e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe8e5), 0x8c);
        // 8C 0058
        gbc.setState(0xc866, 0xa806, 0xf2d0, 0x618e, 0xd6, 0xf927, 0x1, 0x1);
        gbc.writeMem(0xc866, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x0);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0xa806);
        EXPECT(gbc.pc(), 0xc867);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc866), 0x8c);
        // 8C 0059
        gbc.setState(0x9893, 0xad1c, 0xdb30, 0xbe88, 0xa1e, 0xd8cc, 0x1, 0x1);
        gbc.writeMem(0x9893, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xad1c);
        EXPECT(gbc.pc(), 0x9894);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9893), 0x8c);
        // 8C 005A
        gbc.setState(0x88f4, 0xf416, 0x46c0, 0xcbd2, 0xcc67, 0xfad3, 0x0, 0x1);
        gbc.writeMem(0x88f4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0xf416);
        EXPECT(gbc.pc(), 0x88f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88f4), 0x8c);
        // 8C 005B
        gbc.setState(0xa5c4, 0xf491, 0xbbd0, 0x4171, 0x6bd8, 0xf341, 0x1, 0x1);
        gbc.writeMem(0xa5c4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xf491);
        EXPECT(gbc.pc(), 0xa5c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5c4), 0x8c);
        // 8C 005C
        gbc.setState(0x9269, 0x762d, 0x220, 0xa364, 0xaa80, 0xf642, 0x1, 0x1);
        gbc.writeMem(0x9269, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0x762d);
        EXPECT(gbc.pc(), 0x926a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9269), 0x8c);
        // 8C 005E
        gbc.setState(0x1277, 0xa1d7, 0xa8b0, 0x31b3, 0x5b14, 0xa820, 0x1, 0x1);
        gbc.writeMem(0x1277, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x31);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xa1d7);
        EXPECT(gbc.pc(), 0x1278);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 005F
        gbc.setState(0x6c5f, 0x7203, 0x8d70, 0x8c32, 0xc67c, 0x900e, 0x1, 0x0);
        gbc.writeMem(0x6c5f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x7c);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0x7203);
        EXPECT(gbc.pc(), 0x6c60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0061
        gbc.setState(0xeb5f, 0x538f, 0x4b0, 0x398c, 0x825e, 0xdc56, 0x1, 0x1);
        gbc.writeMem(0xeb5f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x538f);
        EXPECT(gbc.pc(), 0xeb60);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeb5f), 0x8c);
        // 8C 0062
        gbc.setState(0x1909, 0xa458, 0xa0e0, 0xe61a, 0x756f, 0x7a10, 0x1, 0x0);
        gbc.writeMem(0x1909, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0xa458);
        EXPECT(gbc.pc(), 0x190a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0063
        gbc.setState(0x8d3b, 0xce33, 0x1210, 0xf612, 0xc947, 0x492a, 0x1, 0x1);
        gbc.writeMem(0x8d3b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x12);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xce33);
        EXPECT(gbc.pc(), 0x8d3c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d3b), 0x8c);
        // 8C 0064
        gbc.setState(0x1245, 0xa0d7, 0xa8a0, 0xb72a, 0xf736, 0xabb, 0x0, 0x0);
        gbc.writeMem(0x1245, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0xa0d7);
        EXPECT(gbc.pc(), 0x1246);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0066
        gbc.setState(0xaaba, 0x24ef, 0x9260, 0xc820, 0xadb9, 0xdc28, 0x1, 0x1);
        gbc.writeMem(0xaaba, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x24ef);
        EXPECT(gbc.pc(), 0xaabb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaba), 0x8c);
        // 8C 0067
        gbc.setState(0x7d65, 0x5f84, 0xfe50, 0x240d, 0x856c, 0x736f, 0x0, 0x1);
        gbc.writeMem(0x7d65, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x85);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x73);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5f84);
        EXPECT(gbc.pc(), 0x7d66);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0068
        gbc.setState(0x6e0b, 0x310, 0x1690, 0x9daf, 0xa299, 0x51d0, 0x0, 0x1);
        gbc.writeMem(0x6e0b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x310);
        EXPECT(gbc.pc(), 0x6e0c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0069
        gbc.setState(0x61e7, 0xf41b, 0x810, 0x4992, 0x1127, 0xf5ff, 0x0, 0x0);
        gbc.writeMem(0x61e7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xf41b);
        EXPECT(gbc.pc(), 0x61e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 006A
        gbc.setState(0xa370, 0x1ed5, 0xd6a0, 0xc139, 0x2d60, 0x30d7, 0x0, 0x0);
        gbc.writeMem(0xa370, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xd7);
        EXPECT(gbc.sp(), 0x1ed5);
        EXPECT(gbc.pc(), 0xa371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa370), 0x8c);
        // 8C 006C
        gbc.setState(0x7288, 0xcc17, 0xaf60, 0xa12c, 0x8c34, 0xd3f1, 0x1, 0x0);
        gbc.writeMem(0x7288, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xcc17);
        EXPECT(gbc.pc(), 0x7289);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 006D
        gbc.setState(0x3191, 0x7c1c, 0x6730, 0x2dbc, 0x9f96, 0x4f2c, 0x0, 0x1);
        gbc.writeMem(0x3191, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7c1c);
        EXPECT(gbc.pc(), 0x3192);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 006E
        gbc.setState(0x75ff, 0xe907, 0xd4b0, 0xc818, 0xa041, 0xca7c, 0x1, 0x1);
        gbc.writeMem(0x75ff, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xe907);
        EXPECT(gbc.pc(), 0x7600);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 006F
        gbc.setState(0x2bb9, 0xfc08, 0xfb10, 0x1f1a, 0x2ffe, 0xd7a, 0x0, 0x0);
        gbc.writeMem(0x2bb9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x2f);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xfc08);
        EXPECT(gbc.pc(), 0x2bba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0070
        gbc.setState(0x6aee, 0xbf57, 0x83e0, 0x5506, 0x601f, 0x2524, 0x1, 0x1);
        gbc.writeMem(0x6aee, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xbf57);
        EXPECT(gbc.pc(), 0x6aef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0071
        gbc.setState(0xdd70, 0x9fc2, 0x58e0, 0x99a5, 0xac53, 0x61c8, 0x1, 0x1);
        gbc.writeMem(0xdd70, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x9fc2);
        EXPECT(gbc.pc(), 0xdd71);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdd70), 0x8c);
        // 8C 0072
        gbc.setState(0x6e65, 0xd82, 0x2bf0, 0x4d49, 0x37ec, 0x3bfe, 0x1, 0x1);
        gbc.writeMem(0x6e65, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0xd82);
        EXPECT(gbc.pc(), 0x6e66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0074
        gbc.setState(0x9afe, 0xd455, 0xedd0, 0xf21, 0xe6cd, 0x7675, 0x1, 0x0);
        gbc.writeMem(0x9afe, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0xd455);
        EXPECT(gbc.pc(), 0x9aff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9afe), 0x8c);
        // 8C 0076
        gbc.setState(0x6b83, 0x5371, 0x9bf0, 0xec61, 0xc654, 0xd8bb, 0x0, 0x1);
        gbc.writeMem(0x6b83, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x5371);
        EXPECT(gbc.pc(), 0x6b84);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0077
        gbc.setState(0x449d, 0xef9, 0xb760, 0x7662, 0xfb50, 0x4935, 0x0, 0x0);
        gbc.writeMem(0x449d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xef9);
        EXPECT(gbc.pc(), 0x449e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0078
        gbc.setState(0x1658, 0x7ffd, 0x2dc0, 0x16b4, 0x5cf1, 0x6f9, 0x1, 0x1);
        gbc.writeMem(0x1658, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7ffd);
        EXPECT(gbc.pc(), 0x1659);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0079
        gbc.setState(0xdb64, 0x9a6d, 0x7740, 0xea6f, 0x6ff3, 0x4227, 0x0, 0x0);
        gbc.writeMem(0xdb64, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x9a6d);
        EXPECT(gbc.pc(), 0xdb65);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdb64), 0x8c);
        // 8C 007A
        gbc.setState(0x658d, 0x435f, 0xb030, 0xedc, 0xb52b, 0xf0c3, 0x0, 0x1);
        gbc.writeMem(0x658d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x2b);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x435f);
        EXPECT(gbc.pc(), 0x658e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 007B
        gbc.setState(0x2470, 0x3663, 0x350, 0xa354, 0xfa0c, 0x43ff, 0x1, 0x0);
        gbc.writeMem(0x2470, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xa3);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x3663);
        EXPECT(gbc.pc(), 0x2471);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 007C
        gbc.setState(0xedde, 0x3aee, 0x17b0, 0x1755, 0xf17, 0xb263, 0x1, 0x0);
        gbc.writeMem(0xedde, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3aee);
        EXPECT(gbc.pc(), 0xeddf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedde), 0x8c);
        // 8C 007D
        gbc.setState(0x823e, 0x4e55, 0xd990, 0xed3a, 0xc898, 0x6c4, 0x0, 0x0);
        gbc.writeMem(0x823e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc8);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x4e55);
        EXPECT(gbc.pc(), 0x823f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x823e), 0x8c);
        // 8C 007E
        gbc.setState(0xb322, 0x6551, 0xcc60, 0xa41a, 0x2094, 0x115f, 0x0, 0x1);
        gbc.writeMem(0xb322, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x6551);
        EXPECT(gbc.pc(), 0xb323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb322), 0x8c);
        // 8C 007F
        gbc.setState(0xbb37, 0xd9de, 0x45d0, 0x7a25, 0x5955, 0x1ef6, 0x1, 0x0);
        gbc.writeMem(0xbb37, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0xd9de);
        EXPECT(gbc.pc(), 0xbb38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb37), 0x8c);
        // 8C 0080
        gbc.setState(0x5004, 0x6b9a, 0xd40, 0x5cc5, 0xe1f2, 0xdb99, 0x0, 0x0);
        gbc.writeMem(0x5004, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x6b9a);
        EXPECT(gbc.pc(), 0x5005);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0081
        gbc.setState(0x5b8, 0xdbc0, 0x3a90, 0xc142, 0xbd6e, 0x8bfb, 0x1, 0x1);
        gbc.writeMem(0x5b8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xdbc0);
        EXPECT(gbc.pc(), 0x5b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0082
        gbc.setState(0x9f43, 0xdcac, 0x730, 0x19e3, 0x590f, 0xd7d6, 0x0, 0x1);
        gbc.writeMem(0x9f43, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xdcac);
        EXPECT(gbc.pc(), 0x9f44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f43), 0x8c);
        // 8C 0085
        gbc.setState(0x791f, 0x7ce3, 0xa4c0, 0x36d, 0x7e9f, 0xaddf, 0x0, 0x1);
        gbc.writeMem(0x791f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x51);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xdf);
        EXPECT(gbc.sp(), 0x7ce3);
        EXPECT(gbc.pc(), 0x7920);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0086
        gbc.setState(0x8296, 0x76ca, 0x89b0, 0x99a, 0x5743, 0xb639, 0x1, 0x0);
        gbc.writeMem(0x8296, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x76ca);
        EXPECT(gbc.pc(), 0x8297);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8296), 0x8c);
        // 8C 0087
        gbc.setState(0xba4a, 0x73e5, 0x8b0, 0xf2ca, 0xa8bd, 0x957, 0x1, 0x0);
        gbc.writeMem(0xba4a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x9);
        EXPECT(gbc.l(),  0x57);
        EXPECT(gbc.sp(), 0x73e5);
        EXPECT(gbc.pc(), 0xba4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xba4a), 0x8c);
        // 8C 0088
        gbc.setState(0x7062, 0xa59d, 0xa0, 0xeddf, 0x66f0, 0xee32, 0x1, 0x1);
        gbc.writeMem(0x7062, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa59d);
        EXPECT(gbc.pc(), 0x7063);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0089
        gbc.setState(0x3b32, 0x7f3e, 0xc000, 0x8bd, 0x4f19, 0x3a69, 0x1, 0x0);
        gbc.writeMem(0x3b32, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x7f3e);
        EXPECT(gbc.pc(), 0x3b33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 008A
        gbc.setState(0xa00b, 0x561c, 0xb490, 0xe42d, 0xd3e7, 0xd251, 0x0, 0x0);
        gbc.writeMem(0xa00b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x561c);
        EXPECT(gbc.pc(), 0xa00c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa00b), 0x8c);
        // 8C 008B
        gbc.setState(0x569c, 0x21d4, 0xda20, 0x7fe4, 0xbaa1, 0xbc5d, 0x0, 0x1);
        gbc.writeMem(0x569c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0x21d4);
        EXPECT(gbc.pc(), 0x569d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 008C
        gbc.setState(0x5789, 0xcc52, 0x1af0, 0xa2a9, 0xbbd3, 0x71a0, 0x1, 0x0);
        gbc.writeMem(0x5789, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0xcc52);
        EXPECT(gbc.pc(), 0x578a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 008D
        gbc.setState(0x526, 0x25ba, 0x1a70, 0xaddb, 0x34c9, 0x2e50, 0x1, 0x1);
        gbc.writeMem(0x526, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0xc9);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x25ba);
        EXPECT(gbc.pc(), 0x527);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 008E
        gbc.setState(0xd1f9, 0x4de4, 0xbc80, 0x3b5a, 0xca02, 0xbb2f, 0x0, 0x0);
        gbc.writeMem(0xd1f9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0x4de4);
        EXPECT(gbc.pc(), 0xd1fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd1f9), 0x8c);
        // 8C 0090
        gbc.setState(0xb823, 0xf789, 0x6ee0, 0x4b8e, 0x6fe8, 0x4745, 0x0, 0x0);
        gbc.writeMem(0xb823, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xf789);
        EXPECT(gbc.pc(), 0xb824);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb823), 0x8c);
        // 8C 0091
        gbc.setState(0x5bfc, 0xe0f6, 0xf490, 0xb1f2, 0x5a11, 0x5200, 0x1, 0x1);
        gbc.writeMem(0x5bfc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xe0f6);
        EXPECT(gbc.pc(), 0x5bfd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0092
        gbc.setState(0xaf28, 0xb22a, 0x6ab0, 0x46d, 0x46c4, 0x6879, 0x1, 0x0);
        gbc.writeMem(0xaf28, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xb22a);
        EXPECT(gbc.pc(), 0xaf29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf28), 0x8c);
        // 8C 0093
        gbc.setState(0x555e, 0x9280, 0xec40, 0x1d59, 0xdb99, 0x9f2d, 0x0, 0x0);
        gbc.writeMem(0x555e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x9280);
        EXPECT(gbc.pc(), 0x555f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0094
        gbc.setState(0x124, 0x4448, 0xdd10, 0xde79, 0x6690, 0xf0ca, 0x0, 0x0);
        gbc.writeMem(0x124, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x4448);
        EXPECT(gbc.pc(), 0x125);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0096
        gbc.setState(0x54c7, 0x4e5f, 0xc950, 0x1598, 0xa4d2, 0xfc0c, 0x0, 0x0);
        gbc.writeMem(0x54c7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0x4e5f);
        EXPECT(gbc.pc(), 0x54c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0097
        gbc.setState(0xd4b4, 0xbd29, 0xb30, 0xf531, 0x190d, 0x4a26, 0x1, 0x0);
        gbc.writeMem(0xd4b4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0x19);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xbd29);
        EXPECT(gbc.pc(), 0xd4b5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4b4), 0x8c);
        // 8C 0098
        gbc.setState(0xdd92, 0x9de, 0xade0, 0x5452, 0xff58, 0x9c7f, 0x0, 0x0);
        gbc.writeMem(0xdd92, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x9de);
        EXPECT(gbc.pc(), 0xdd93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd92), 0x8c);
        // 8C 0099
        gbc.setState(0x3f8e, 0x2a67, 0xb770, 0x4274, 0x2aa2, 0xa556, 0x1, 0x1);
        gbc.writeMem(0x3f8e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x2a67);
        EXPECT(gbc.pc(), 0x3f8f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 009A
        gbc.setState(0x98b6, 0x41a8, 0x6810, 0x865c, 0x4f1e, 0xf996, 0x0, 0x1);
        gbc.writeMem(0x98b6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x41a8);
        EXPECT(gbc.pc(), 0x98b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x98b6), 0x8c);
        // 8C 009B
        gbc.setState(0x63b2, 0xf18a, 0xee90, 0xfa3f, 0x136, 0x2e76, 0x0, 0x1);
        gbc.writeMem(0x63b2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x2e);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf18a);
        EXPECT(gbc.pc(), 0x63b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 009C
        gbc.setState(0x1433, 0xbc04, 0x9100, 0xcb00, 0x3303, 0x182c, 0x1, 0x1);
        gbc.writeMem(0x1433, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x3);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xbc04);
        EXPECT(gbc.pc(), 0x1434);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 009D
        gbc.setState(0xa92f, 0x285d, 0x4f90, 0xb253, 0x5657, 0xce92, 0x1, 0x0);
        gbc.writeMem(0xa92f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x285d);
        EXPECT(gbc.pc(), 0xa930);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa92f), 0x8c);
        // 8C 009F
        gbc.setState(0xa485, 0x240b, 0xf690, 0x6115, 0x3564, 0xa99a, 0x1, 0x0);
        gbc.writeMem(0xa485, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x240b);
        EXPECT(gbc.pc(), 0xa486);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa485), 0x8c);
        // 8C 00A0
        gbc.setState(0xebd, 0x7c0e, 0x6170, 0xd440, 0x5af1, 0xb79e, 0x0, 0x0);
        gbc.writeMem(0xebd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xf1);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x7c0e);
        EXPECT(gbc.pc(), 0xebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00A1
        gbc.setState(0xabdc, 0xe5d1, 0xaaa0, 0x2e71, 0x514e, 0x2c4e, 0x0, 0x1);
        gbc.writeMem(0xabdc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0xe5d1);
        EXPECT(gbc.pc(), 0xabdd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xabdc), 0x8c);
        // 8C 00A2
        gbc.setState(0x556f, 0x4ca7, 0x6430, 0xe09b, 0x964f, 0x69ab, 0x0, 0x0);
        gbc.writeMem(0x556f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x4ca7);
        EXPECT(gbc.pc(), 0x5570);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00A3
        gbc.setState(0x904f, 0x43b3, 0x9ab0, 0xcb47, 0x38bf, 0x9a9f, 0x0, 0x0);
        gbc.writeMem(0x904f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x43b3);
        EXPECT(gbc.pc(), 0x9050);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x904f), 0x8c);
        // 8C 00A4
        gbc.setState(0xacd6, 0xdd4d, 0x1310, 0x9d3b, 0x9eca, 0x91e9, 0x1, 0x0);
        gbc.writeMem(0xacd6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0xdd4d);
        EXPECT(gbc.pc(), 0xacd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xacd6), 0x8c);
        // 8C 00A5
        gbc.setState(0x20bf, 0x1cc7, 0x4190, 0x666e, 0xdc6c, 0xcf1d, 0x0, 0x0);
        gbc.writeMem(0x20bf, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x66);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x1cc7);
        EXPECT(gbc.pc(), 0x20c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 00A6
        gbc.setState(0x86f5, 0x66eb, 0x8bb0, 0x4b4, 0xefaf, 0xc7a9, 0x0, 0x0);
        gbc.writeMem(0x86f5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xb4);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x66eb);
        EXPECT(gbc.pc(), 0x86f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x86f5), 0x8c);
        // 8C 00A7
        gbc.setState(0xe48a, 0xcfc4, 0x7a30, 0x76f3, 0x3ee1, 0xf882, 0x1, 0x1);
        gbc.writeMem(0xe48a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xcfc4);
        EXPECT(gbc.pc(), 0xe48b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe48a), 0x8c);
        // 8C 00A8
        gbc.setState(0x7fe4, 0x5036, 0xe510, 0xc20f, 0x818, 0x8463, 0x0, 0x0);
        gbc.writeMem(0x7fe4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xf);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x5036);
        EXPECT(gbc.pc(), 0x7fe5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00A9
        gbc.setState(0xd131, 0x3547, 0x1350, 0x759, 0x363e, 0x2f1e, 0x0, 0x0);
        gbc.writeMem(0xd131, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3547);
        EXPECT(gbc.pc(), 0xd132);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd131), 0x8c);
        // 8C 00AA
        gbc.setState(0x34ae, 0x54bd, 0xf600, 0x40e1, 0xfcc, 0x1601, 0x1, 0x1);
        gbc.writeMem(0x34ae, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x54bd);
        EXPECT(gbc.pc(), 0x34af);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00AB
        gbc.setState(0x9370, 0x3cf5, 0x55d0, 0x2cde, 0xaee8, 0xb1d8, 0x1, 0x0);
        gbc.writeMem(0x9370, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd8);
        EXPECT(gbc.sp(), 0x3cf5);
        EXPECT(gbc.pc(), 0x9371);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9370), 0x8c);
        // 8C 00AC
        gbc.setState(0x6ed5, 0xfcb8, 0xee30, 0xac7a, 0x8fd9, 0xa1f2, 0x1, 0x0);
        gbc.writeMem(0x6ed5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xfcb8);
        EXPECT(gbc.pc(), 0x6ed6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 00AD
        gbc.setState(0x418b, 0x56dc, 0xbb50, 0xbc7f, 0xbd6c, 0x6b26, 0x0, 0x1);
        gbc.writeMem(0x418b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x56dc);
        EXPECT(gbc.pc(), 0x418c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 00AE
        gbc.setState(0xc390, 0x789c, 0x9420, 0xd173, 0x8fb9, 0x9612, 0x1, 0x1);
        gbc.writeMem(0xc390, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0x8f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x789c);
        EXPECT(gbc.pc(), 0xc391);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc390), 0x8c);
        // 8C 00AF
        gbc.setState(0x5d84, 0xeefc, 0xc7a0, 0x2911, 0x985d, 0x7f78, 0x0, 0x1);
        gbc.writeMem(0x5d84, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xeefc);
        EXPECT(gbc.pc(), 0x5d85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 00B0
        gbc.setState(0x9848, 0xace5, 0x4650, 0x50ee, 0xa47, 0x936e, 0x1, 0x1);
        gbc.writeMem(0x9848, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xace5);
        EXPECT(gbc.pc(), 0x9849);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9848), 0x8c);
        // 8C 00B1
        gbc.setState(0x33c1, 0x3da1, 0xd3a0, 0xc599, 0x880c, 0xa9ee, 0x0, 0x0);
        gbc.writeMem(0x33c1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7c);
        EXPECT(gbc.b(),  0xc5);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0xee);
        EXPECT(gbc.sp(), 0x3da1);
        EXPECT(gbc.pc(), 0x33c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00B2
        gbc.setState(0xd2ee, 0x8694, 0x4400, 0xaf34, 0x400, 0x8eb0, 0x1, 0x0);
        gbc.writeMem(0xd2ee, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x8694);
        EXPECT(gbc.pc(), 0xd2ef);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd2ee), 0x8c);
        // 8C 00B3
        gbc.setState(0x1664, 0xb255, 0x1250, 0x2b16, 0x1616, 0x28f1, 0x1, 0x0);
        gbc.writeMem(0x1664, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0xb255);
        EXPECT(gbc.pc(), 0x1665);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00B4
        gbc.setState(0xc50d, 0xe140, 0x1d20, 0xae66, 0xb419, 0x35e1, 0x1, 0x0);
        gbc.writeMem(0xc50d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xe140);
        EXPECT(gbc.pc(), 0xc50e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc50d), 0x8c);
        // 8C 00B5
        gbc.setState(0xa90c, 0x9542, 0x5890, 0x8d7c, 0x904b, 0xcaa7, 0x0, 0x1);
        gbc.writeMem(0xa90c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x9542);
        EXPECT(gbc.pc(), 0xa90d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa90c), 0x8c);
        // 8C 00B6
        gbc.setState(0x7ed1, 0xaf84, 0xb010, 0x616e, 0x9318, 0x4194, 0x1, 0x0);
        gbc.writeMem(0x7ed1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0xaf84);
        EXPECT(gbc.pc(), 0x7ed2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00B7
        gbc.setState(0x1906, 0xec11, 0xce50, 0x21f4, 0x232e, 0x70ec, 0x0, 0x1);
        gbc.writeMem(0x1906, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xec11);
        EXPECT(gbc.pc(), 0x1907);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00B8
        gbc.setState(0xc306, 0xf9a7, 0x4870, 0x7685, 0x843c, 0x7774, 0x1, 0x1);
        gbc.writeMem(0xc306, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x84);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xf9a7);
        EXPECT(gbc.pc(), 0xc307);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc306), 0x8c);
        // 8C 00B9
        gbc.setState(0xa6c7, 0x8bf1, 0x3670, 0x9807, 0xb8b5, 0x704, 0x1, 0x0);
        gbc.writeMem(0xa6c7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x8bf1);
        EXPECT(gbc.pc(), 0xa6c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6c7), 0x8c);
        // 8C 00BA
        gbc.setState(0xe87d, 0x5c71, 0x1d30, 0x4092, 0x31d, 0x920d, 0x0, 0x0);
        gbc.writeMem(0xe87d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x40);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x5c71);
        EXPECT(gbc.pc(), 0xe87e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe87d), 0x8c);
        // 8C 00BB
        gbc.setState(0x6cbe, 0xf3f1, 0xaca0, 0xdd01, 0xd309, 0xbc0f, 0x0, 0x1);
        gbc.writeMem(0x6cbe, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xf3f1);
        EXPECT(gbc.pc(), 0x6cbf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 00BC
        gbc.setState(0x8942, 0xa911, 0x8db0, 0x74d4, 0xbc8a, 0x321, 0x0, 0x0);
        gbc.writeMem(0x8942, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xa911);
        EXPECT(gbc.pc(), 0x8943);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8942), 0x8c);
        // 8C 00BD
        gbc.setState(0xe06b, 0x463f, 0xdd70, 0xbfaf, 0xb55, 0x9d8f, 0x0, 0x1);
        gbc.writeMem(0xe06b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x463f);
        EXPECT(gbc.pc(), 0xe06c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe06b), 0x8c);
        // 8C 00BE
        gbc.setState(0x39b7, 0x9cbb, 0xf290, 0x2099, 0xb7a7, 0x35c7, 0x0, 0x1);
        gbc.writeMem(0x39b7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0x9cbb);
        EXPECT(gbc.pc(), 0x39b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00BF
        gbc.setState(0xb43f, 0x9743, 0x6de0, 0x48b2, 0x5f67, 0x789b, 0x1, 0x1);
        gbc.writeMem(0xb43f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x9743);
        EXPECT(gbc.pc(), 0xb440);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb43f), 0x8c);
        // 8C 00C0
        gbc.setState(0xdd9b, 0x758f, 0xd590, 0xbf04, 0xef2, 0xe1fc, 0x0, 0x1);
        gbc.writeMem(0xdd9b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x758f);
        EXPECT(gbc.pc(), 0xdd9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdd9b), 0x8c);
        // 8C 00C2
        gbc.setState(0x619b, 0x295d, 0xa9d0, 0x6f77, 0x59ce, 0xa54f, 0x1, 0x0);
        gbc.writeMem(0x619b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x295d);
        EXPECT(gbc.pc(), 0x619c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00C3
        gbc.setState(0x247c, 0x94f3, 0xdc90, 0xf84b, 0x94ee, 0xb9, 0x0, 0x0);
        gbc.writeMem(0x247c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xb9);
        EXPECT(gbc.sp(), 0x94f3);
        EXPECT(gbc.pc(), 0x247d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00C4
        gbc.setState(0xd335, 0x513b, 0xbbe0, 0x8259, 0xf894, 0x4567, 0x1, 0x1);
        gbc.writeMem(0xd335, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x513b);
        EXPECT(gbc.pc(), 0xd336);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd335), 0x8c);
        // 8C 00C5
        gbc.setState(0xbe79, 0xe36b, 0x620, 0x7e1c, 0x8ce0, 0x90e6, 0x0, 0x1);
        gbc.writeMem(0xbe79, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xe36b);
        EXPECT(gbc.pc(), 0xbe7a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbe79), 0x8c);
        // 8C 00C6
        gbc.setState(0xa4e8, 0x27b3, 0xf110, 0x9d0, 0x8824, 0x6a15, 0x1, 0x0);
        gbc.writeMem(0xa4e8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x27b3);
        EXPECT(gbc.pc(), 0xa4e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4e8), 0x8c);
        // 8C 00C7
        gbc.setState(0xe97c, 0x28ef, 0x1d10, 0xaf74, 0xe587, 0x5a1d, 0x0, 0x0);
        gbc.writeMem(0xe97c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xe5);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x28ef);
        EXPECT(gbc.pc(), 0xe97d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe97c), 0x8c);
        // 8C 00C8
        gbc.setState(0x7685, 0x2800, 0x85f0, 0xc06, 0xd313, 0xb28f, 0x1, 0x1);
        gbc.writeMem(0x7685, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x8f);
        EXPECT(gbc.sp(), 0x2800);
        EXPECT(gbc.pc(), 0x7686);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00C9
        gbc.setState(0x84d3, 0x8b4f, 0xb750, 0x6a6f, 0x97c6, 0x5fdb, 0x0, 0x1);
        gbc.writeMem(0x84d3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x5f);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x8b4f);
        EXPECT(gbc.pc(), 0x84d4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x84d3), 0x8c);
        // 8C 00CA
        gbc.setState(0xc849, 0xdd1f, 0x1760, 0xf3c2, 0x4c5e, 0xa1e6, 0x1, 0x0);
        gbc.writeMem(0xc849, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xe6);
        EXPECT(gbc.sp(), 0xdd1f);
        EXPECT(gbc.pc(), 0xc84a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc849), 0x8c);
        // 8C 00CB
        gbc.setState(0xc959, 0xee53, 0xe340, 0x8164, 0x4be7, 0x2a81, 0x1, 0x0);
        gbc.writeMem(0xc959, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xee53);
        EXPECT(gbc.pc(), 0xc95a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc959), 0x8c);
        // 8C 00CC
        gbc.setState(0x383a, 0xf132, 0xd170, 0xd5b9, 0xf62, 0x2984, 0x0, 0x0);
        gbc.writeMem(0x383a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xf132);
        EXPECT(gbc.pc(), 0x383b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00CD
        gbc.setState(0x7c05, 0x1a82, 0x2d0, 0xc1e3, 0x9fb8, 0xb5db, 0x1, 0x0);
        gbc.writeMem(0x7c05, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x1a82);
        EXPECT(gbc.pc(), 0x7c06);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00CE
        gbc.setState(0x2ce5, 0x22bc, 0x90d0, 0xfcff, 0x5b0b, 0x4ce8, 0x1, 0x0);
        gbc.writeMem(0x2ce5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x22bc);
        EXPECT(gbc.pc(), 0x2ce6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00CF
        gbc.setState(0xb84, 0x7028, 0x20f0, 0xb405, 0x440f, 0xd3b0, 0x1, 0x1);
        gbc.writeMem(0xb84, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x7028);
        EXPECT(gbc.pc(), 0xb85);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00D0
        gbc.setState(0x8527, 0x2a32, 0xe8e0, 0x5146, 0xb31e, 0x3573, 0x1, 0x0);
        gbc.writeMem(0x8527, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x2a32);
        EXPECT(gbc.pc(), 0x8528);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8527), 0x8c);
        // 8C 00D1
        gbc.setState(0x7801, 0x8c90, 0x2700, 0xcdda, 0x64a7, 0x4e78, 0x1, 0x1);
        gbc.writeMem(0x7801, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x4e);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x8c90);
        EXPECT(gbc.pc(), 0x7802);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 00D2
        gbc.setState(0x2df6, 0x7ac, 0xaa20, 0x8597, 0x83f7, 0xb7dd, 0x1, 0x0);
        gbc.writeMem(0x2df6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7ac);
        EXPECT(gbc.pc(), 0x2df7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 00D3
        gbc.setState(0x5e73, 0x13b1, 0xe8b0, 0x5fcc, 0x4a2c, 0x5131, 0x0, 0x1);
        gbc.writeMem(0x5e73, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x4a);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0x13b1);
        EXPECT(gbc.pc(), 0x5e74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00D4
        gbc.setState(0x7c4e, 0x6ce0, 0x2c50, 0xe5ea, 0x8231, 0x9872, 0x1, 0x1);
        gbc.writeMem(0x7c4e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0x31);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6ce0);
        EXPECT(gbc.pc(), 0x7c4f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 00D5
        gbc.setState(0x83ca, 0xa98f, 0xa100, 0x18d0, 0x8ee2, 0x6da1, 0x1, 0x1);
        gbc.writeMem(0x83ca, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa98f);
        EXPECT(gbc.pc(), 0x83cb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x83ca), 0x8c);
        // 8C 00D6
        gbc.setState(0xa4a7, 0xfc61, 0xf090, 0x7b2a, 0xa4f2, 0x970b, 0x1, 0x0);
        gbc.writeMem(0xa4a7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7b);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xfc61);
        EXPECT(gbc.pc(), 0xa4a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa4a7), 0x8c);
        // 8C 00D7
        gbc.setState(0x3b8f, 0xf0fa, 0x43c0, 0xd54c, 0xa2de, 0x985a, 0x1, 0x0);
        gbc.writeMem(0x3b8f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x98);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xf0fa);
        EXPECT(gbc.pc(), 0x3b90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00D8
        gbc.setState(0xa5ac, 0x8408, 0x400, 0xfa3d, 0xa30c, 0xe428, 0x1, 0x0);
        gbc.writeMem(0xa5ac, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x8408);
        EXPECT(gbc.pc(), 0xa5ad);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ac), 0x8c);
        // 8C 00D9
        gbc.setState(0x3cb0, 0xa0ab, 0x6100, 0xa6c9, 0xaf65, 0x72f2, 0x0, 0x1);
        gbc.writeMem(0x3cb0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0xa0ab);
        EXPECT(gbc.pc(), 0x3cb1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00DA
        gbc.setState(0x3cdc, 0xc918, 0x4990, 0xd2fe, 0x7998, 0x1992, 0x1, 0x0);
        gbc.writeMem(0x3cdc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xc918);
        EXPECT(gbc.pc(), 0x3cdd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 00DB
        gbc.setState(0x4583, 0x48ef, 0x4b70, 0x22fe, 0xa5ec, 0xf387, 0x1, 0x1);
        gbc.writeMem(0x4583, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x48ef);
        EXPECT(gbc.pc(), 0x4584);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00DC
        gbc.setState(0x619d, 0xbadc, 0xa830, 0x4eb1, 0x1645, 0xe9a5, 0x1, 0x0);
        gbc.writeMem(0x619d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x16);
        EXPECT(gbc.e(),  0x45);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xbadc);
        EXPECT(gbc.pc(), 0x619e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 00DD
        gbc.setState(0xebcb, 0x179, 0x5690, 0x38e1, 0xe307, 0x4721, 0x1, 0x0);
        gbc.writeMem(0xebcb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x179);
        EXPECT(gbc.pc(), 0xebcc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebcb), 0x8c);
        // 8C 00DE
        gbc.setState(0x507d, 0x1d16, 0xeee0, 0xb239, 0xda25, 0x2094, 0x0, 0x1);
        gbc.writeMem(0x507d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x25);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x1d16);
        EXPECT(gbc.pc(), 0x507e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00DF
        gbc.setState(0x3660, 0x385f, 0x4110, 0x3eaa, 0xbf97, 0xda12, 0x1, 0x0);
        gbc.writeMem(0x3660, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x12);
        EXPECT(gbc.sp(), 0x385f);
        EXPECT(gbc.pc(), 0x3661);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00E0
        gbc.setState(0xaa0e, 0x3096, 0xeaa0, 0xa59b, 0x8144, 0xa826, 0x1, 0x1);
        gbc.writeMem(0xaa0e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xa5);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0x3096);
        EXPECT(gbc.pc(), 0xaa0f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa0e), 0x8c);
        // 8C 00E1
        gbc.setState(0xac0, 0x4622, 0x2820, 0x374c, 0x69e, 0x5115, 0x0, 0x0);
        gbc.writeMem(0xac0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x79);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x4c);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4622);
        EXPECT(gbc.pc(), 0xac1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00E2
        gbc.setState(0x6368, 0x8534, 0x6510, 0xb054, 0x974e, 0xae1d, 0x0, 0x0);
        gbc.writeMem(0x6368, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x8534);
        EXPECT(gbc.pc(), 0x6369);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 00E3
        gbc.setState(0x733f, 0xf4fe, 0x1850, 0x5a48, 0x4df, 0xb89b, 0x0, 0x1);
        gbc.writeMem(0x733f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0xb8);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xf4fe);
        EXPECT(gbc.pc(), 0x7340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 00E4
        gbc.setState(0x6dd9, 0xfaef, 0xa0c0, 0xf533, 0x4006, 0x3aef, 0x1, 0x0);
        gbc.writeMem(0x6dd9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xfaef);
        EXPECT(gbc.pc(), 0x6dda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00E5
        gbc.setState(0x2331, 0xbd1, 0x7360, 0xb66b, 0x48ba, 0x5328, 0x0, 0x0);
        gbc.writeMem(0x2331, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xba);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xbd1);
        EXPECT(gbc.pc(), 0x2332);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00E6
        gbc.setState(0x18f2, 0xf9bd, 0x8b20, 0xbc4f, 0xe865, 0xe776, 0x1, 0x0);
        gbc.writeMem(0x18f2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xf9bd);
        EXPECT(gbc.pc(), 0x18f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 00E7
        gbc.setState(0x72f, 0xd754, 0x6780, 0x8c26, 0x2d0e, 0x1b8, 0x0, 0x1);
        gbc.writeMem(0x72f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x8c);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xd754);
        EXPECT(gbc.pc(), 0x730);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00E8
        gbc.setState(0x224b, 0xb949, 0xa320, 0xb3c7, 0x8ed0, 0x76fd, 0x1, 0x0);
        gbc.writeMem(0x224b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xb949);
        EXPECT(gbc.pc(), 0x224c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00E9
        gbc.setState(0x7a6b, 0x50f1, 0x3c50, 0x9a89, 0x4938, 0x8298, 0x0, 0x1);
        gbc.writeMem(0x7a6b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x50f1);
        EXPECT(gbc.pc(), 0x7a6c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00EA
        gbc.setState(0x379a, 0x2edf, 0x9830, 0xd6a2, 0xb5ad, 0x41d1, 0x1, 0x0);
        gbc.writeMem(0x379a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x2edf);
        EXPECT(gbc.pc(), 0x379b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00EB
        gbc.setState(0xe5f5, 0x6a12, 0x5e50, 0xab0c, 0x43d3, 0x2d28, 0x1, 0x0);
        gbc.writeMem(0xe5f5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x6a12);
        EXPECT(gbc.pc(), 0xe5f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe5f5), 0x8c);
        // 8C 00EC
        gbc.setState(0x91bd, 0x919d, 0xba60, 0x509b, 0x5932, 0xe4d6, 0x1, 0x0);
        gbc.writeMem(0x91bd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9e);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x9b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x919d);
        EXPECT(gbc.pc(), 0x91be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x91bd), 0x8c);
        // 8C 00ED
        gbc.setState(0xa61e, 0x66ee, 0x4550, 0xb31b, 0x88eb, 0x2b4f, 0x0, 0x0);
        gbc.writeMem(0xa61e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x66ee);
        EXPECT(gbc.pc(), 0xa61f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa61e), 0x8c);
        // 8C 00EE
        gbc.setState(0xbba, 0x26b7, 0x0, 0x3496, 0x6970, 0x5719, 0x1, 0x0);
        gbc.writeMem(0xbba, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x69);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x26b7);
        EXPECT(gbc.pc(), 0xbbb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00EF
        gbc.setState(0x1e54, 0xf66c, 0x2ac0, 0xd832, 0xedc, 0xb3bf, 0x0, 0x0);
        gbc.writeMem(0x1e54, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0xf66c);
        EXPECT(gbc.pc(), 0x1e55);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00F0
        gbc.setState(0x8fcf, 0xe5cd, 0xd850, 0x3b72, 0xf2cb, 0x4d21, 0x0, 0x0);
        gbc.writeMem(0x8fcf, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xe5cd);
        EXPECT(gbc.pc(), 0x8fd0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8fcf), 0x8c);
        // 8C 00F1
        gbc.setState(0x3dbd, 0xbb45, 0x750, 0x7ab3, 0x61a3, 0x4c3f, 0x1, 0x0);
        gbc.writeMem(0x3dbd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x54);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x3f);
        EXPECT(gbc.sp(), 0xbb45);
        EXPECT(gbc.pc(), 0x3dbe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 00F2
        gbc.setState(0xb38f, 0x8845, 0x1f40, 0x3c6, 0xd129, 0xcbf5, 0x1, 0x1);
        gbc.writeMem(0xb38f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xc6);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x8845);
        EXPECT(gbc.pc(), 0xb390);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb38f), 0x8c);
        // 8C 00F3
        gbc.setState(0x77cf, 0x3c77, 0x5010, 0x90ec, 0x9ea1, 0xefa3, 0x0, 0x1);
        gbc.writeMem(0x77cf, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3c77);
        EXPECT(gbc.pc(), 0x77d0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 00F4
        gbc.setState(0x303f, 0xc55f, 0x7090, 0x89c9, 0xe0da, 0xbdf4, 0x1, 0x1);
        gbc.writeMem(0x303f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0xc55f);
        EXPECT(gbc.pc(), 0x3040);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00F5
        gbc.setState(0x945d, 0x60e5, 0x28f0, 0x6e8a, 0xf3d8, 0xe724, 0x0, 0x0);
        gbc.writeMem(0x945d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x60e5);
        EXPECT(gbc.pc(), 0x945e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x945d), 0x8c);
        // 8C 00F6
        gbc.setState(0x3a8f, 0x560e, 0x32f0, 0xd3bc, 0x9a3b, 0xf2a6, 0x1, 0x1);
        gbc.writeMem(0x3a8f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0x560e);
        EXPECT(gbc.pc(), 0x3a90);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 00F7
        gbc.setState(0x4187, 0x1699, 0xde40, 0x6dc7, 0xfca2, 0xb9a4, 0x0, 0x0);
        gbc.writeMem(0x4187, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x1699);
        EXPECT(gbc.pc(), 0x4188);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 00F8
        gbc.setState(0xdabf, 0xce42, 0xbd60, 0x201a, 0x97de, 0x2abd, 0x1, 0x0);
        gbc.writeMem(0xdabf, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0xde);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0xce42);
        EXPECT(gbc.pc(), 0xdac0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdabf), 0x8c);
        // 8C 00FA
        gbc.setState(0x309c, 0x638e, 0x8ef0, 0x88b6, 0x4e17, 0x74ff, 0x1, 0x1);
        gbc.writeMem(0x309c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0x638e);
        EXPECT(gbc.pc(), 0x309d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 00FB
        gbc.setState(0xee95, 0x5a25, 0x9840, 0x593d, 0x1ecd, 0x268, 0x0, 0x0);
        gbc.writeMem(0xee95, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x1e);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x5a25);
        EXPECT(gbc.pc(), 0xee96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee95), 0x8c);
        // 8C 00FC
        gbc.setState(0xd84e, 0x36e6, 0xa640, 0x819c, 0xda78, 0x9500, 0x0, 0x1);
        gbc.writeMem(0xd84e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x78);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x36e6);
        EXPECT(gbc.pc(), 0xd84f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd84e), 0x8c);
        // 8C 00FD
        gbc.setState(0x11a8, 0xbfd8, 0x5110, 0x6169, 0xdbc5, 0x5270, 0x1, 0x0);
        gbc.writeMem(0x11a8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbfd8);
        EXPECT(gbc.pc(), 0x11a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 00FE
        gbc.setState(0x1dd6, 0xc5e, 0x7be0, 0x923f, 0xa46a, 0x2588, 0x1, 0x0);
        gbc.writeMem(0x1dd6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xc5e);
        EXPECT(gbc.pc(), 0x1dd7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0100
        gbc.setState(0xc8ad, 0xb5ce, 0x8d80, 0x167d, 0x988b, 0xd90a, 0x0, 0x1);
        gbc.writeMem(0xc8ad, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xb5ce);
        EXPECT(gbc.pc(), 0xc8ae);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc8ad), 0x8c);
        // 8C 0101
        gbc.setState(0xadab, 0xfe43, 0x7780, 0xda74, 0x10ee, 0xd8e7, 0x1, 0x1);
        gbc.writeMem(0xadab, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xfe43);
        EXPECT(gbc.pc(), 0xadac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadab), 0x8c);
        // 8C 0102
        gbc.setState(0x98c5, 0x123a, 0xba80, 0xfff, 0x205c, 0x2066, 0x0, 0x1);
        gbc.writeMem(0x98c5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xf);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x66);
        EXPECT(gbc.sp(), 0x123a);
        EXPECT(gbc.pc(), 0x98c6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x98c5), 0x8c);
        // 8C 0103
        gbc.setState(0x405f, 0x44fd, 0x3ee0, 0xee86, 0x30f0, 0x2695, 0x0, 0x0);
        gbc.writeMem(0x405f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x26);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x44fd);
        EXPECT(gbc.pc(), 0x4060);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0104
        gbc.setState(0x37cf, 0x13a1, 0xc4b0, 0xfee9, 0xff10, 0xf507, 0x1, 0x0);
        gbc.writeMem(0x37cf, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xba);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x13a1);
        EXPECT(gbc.pc(), 0x37d0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0105
        gbc.setState(0x8b0d, 0x6c77, 0x7380, 0x5290, 0x5729, 0x49f1, 0x0, 0x1);
        gbc.writeMem(0x8b0d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x6c77);
        EXPECT(gbc.pc(), 0x8b0e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b0d), 0x8c);
        // 8C 0106
        gbc.setState(0xea53, 0x444d, 0x98c0, 0xf5f8, 0x5a11, 0xea6a, 0x1, 0x1);
        gbc.writeMem(0xea53, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0x444d);
        EXPECT(gbc.pc(), 0xea54);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea53), 0x8c);
        // 8C 0107
        gbc.setState(0xd702, 0x36a3, 0x1150, 0x9dec, 0x2712, 0x41d5, 0x1, 0x0);
        gbc.writeMem(0xd702, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x36a3);
        EXPECT(gbc.pc(), 0xd703);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd702), 0x8c);
        // 8C 0109
        gbc.setState(0xbc57, 0x9db7, 0x7c10, 0x8093, 0xb2d5, 0x6ea1, 0x1, 0x0);
        gbc.writeMem(0xbc57, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x9db7);
        EXPECT(gbc.pc(), 0xbc58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc57), 0x8c);
        // 8C 010A
        gbc.setState(0x658a, 0xa8f7, 0x2a10, 0x3e91, 0xad6c, 0xe95c, 0x1, 0x0);
        gbc.writeMem(0x658a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xad);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xe9);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0xa8f7);
        EXPECT(gbc.pc(), 0x658b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 010B
        gbc.setState(0x6ed, 0x349e, 0xe820, 0x8a0e, 0xd96f, 0x31a3, 0x1, 0x0);
        gbc.writeMem(0x6ed, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x349e);
        EXPECT(gbc.pc(), 0x6ee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 010D
        gbc.setState(0x4bb1, 0x2ed0, 0x46b0, 0x7a93, 0x5ec6, 0xbcc1, 0x1, 0x0);
        gbc.writeMem(0x4bb1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xc1);
        EXPECT(gbc.sp(), 0x2ed0);
        EXPECT(gbc.pc(), 0x4bb2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 010E
        gbc.setState(0xe985, 0x310a, 0xdf90, 0xcdca, 0x2314, 0x8c1f, 0x0, 0x0);
        gbc.writeMem(0xe985, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x310a);
        EXPECT(gbc.pc(), 0xe986);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe985), 0x8c);
        // 8C 010F
        gbc.setState(0x71c9, 0x33c6, 0xa5a0, 0x48a1, 0x526f, 0x29f8, 0x0, 0x1);
        gbc.writeMem(0x71c9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xa1);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x33c6);
        EXPECT(gbc.pc(), 0x71ca);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0110
        gbc.setState(0x40b2, 0x68b0, 0xa7b0, 0x423d, 0xd3b2, 0x853, 0x0, 0x1);
        gbc.writeMem(0x40b2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb0);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x68b0);
        EXPECT(gbc.pc(), 0x40b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0111
        gbc.setState(0x18bd, 0x51db, 0x78d0, 0x44da, 0xe95d, 0x75d9, 0x1, 0x0);
        gbc.writeMem(0x18bd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0x51db);
        EXPECT(gbc.pc(), 0x18be);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0112
        gbc.setState(0xdfed, 0x196b, 0x94a0, 0x432, 0x506b, 0x307b, 0x1, 0x0);
        gbc.writeMem(0xdfed, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0x196b);
        EXPECT(gbc.pc(), 0xdfee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdfed), 0x8c);
        // 8C 0113
        gbc.setState(0x6ff8, 0x20ec, 0x2650, 0xfae8, 0x5b8d, 0x7558, 0x0, 0x0);
        gbc.writeMem(0x6ff8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xfa);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x20ec);
        EXPECT(gbc.pc(), 0x6ff9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0114
        gbc.setState(0x5c94, 0xbf03, 0x2950, 0xcd42, 0x93bc, 0x132b, 0x0, 0x0);
        gbc.writeMem(0x5c94, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xbf03);
        EXPECT(gbc.pc(), 0x5c95);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0115
        gbc.setState(0x7e15, 0x8a29, 0x3a10, 0x8a8e, 0x998c, 0x32d0, 0x0, 0x0);
        gbc.writeMem(0x7e15, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0x8a29);
        EXPECT(gbc.pc(), 0x7e16);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0117
        gbc.setState(0xa170, 0xb48b, 0xa440, 0x4a3, 0x45e8, 0x3854, 0x0, 0x0);
        gbc.writeMem(0xa170, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xa3);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0x54);
        EXPECT(gbc.sp(), 0xb48b);
        EXPECT(gbc.pc(), 0xa171);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa170), 0x8c);
        // 8C 0118
        gbc.setState(0x8580, 0x3cc6, 0xaed0, 0x9853, 0xec8c, 0xe7b0, 0x0, 0x1);
        gbc.writeMem(0x8580, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x3cc6);
        EXPECT(gbc.pc(), 0x8581);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8580), 0x8c);
        // 8C 0119
        gbc.setState(0x757, 0x744f, 0x78f0, 0x5a33, 0xc32f, 0xb99e, 0x1, 0x1);
        gbc.writeMem(0x757, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x744f);
        EXPECT(gbc.pc(), 0x758);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 011A
        gbc.setState(0x4d1, 0x627f, 0xe380, 0x47db, 0xa495, 0xf5ca, 0x1, 0x0);
        gbc.writeMem(0x4d1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0xca);
        EXPECT(gbc.sp(), 0x627f);
        EXPECT(gbc.pc(), 0x4d2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 011C
        gbc.setState(0x88c4, 0x5f83, 0x74c0, 0x3cb8, 0x7a41, 0xd292, 0x1, 0x0);
        gbc.writeMem(0x88c4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0x7a);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x5f83);
        EXPECT(gbc.pc(), 0x88c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x88c4), 0x8c);
        // 8C 011D
        gbc.setState(0xb508, 0xae97, 0x4ad0, 0x100a, 0xfa08, 0xa349, 0x1, 0x0);
        gbc.writeMem(0xb508, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xae97);
        EXPECT(gbc.pc(), 0xb509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb508), 0x8c);
        // 8C 011F
        gbc.setState(0x94ba, 0xc3f7, 0x8860, 0xb786, 0x950f, 0x1cb5, 0x1, 0x1);
        gbc.writeMem(0x94ba, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x1c);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xc3f7);
        EXPECT(gbc.pc(), 0x94bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x94ba), 0x8c);
        // 8C 0120
        gbc.setState(0x8bd7, 0x346a, 0xfe90, 0xacb9, 0xcdf4, 0xd237, 0x0, 0x1);
        gbc.writeMem(0x8bd7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xf4);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x346a);
        EXPECT(gbc.pc(), 0x8bd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8bd7), 0x8c);
        // 8C 0121
        gbc.setState(0x57a2, 0xe7e2, 0xbd10, 0x7822, 0x7d14, 0x74e2, 0x1, 0x0);
        gbc.writeMem(0x57a2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xe7e2);
        EXPECT(gbc.pc(), 0x57a3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0123
        gbc.setState(0x5187, 0x7117, 0xca10, 0x1091, 0xb917, 0xc01f, 0x1, 0x0);
        gbc.writeMem(0x5187, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x7117);
        EXPECT(gbc.pc(), 0x5188);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0124
        gbc.setState(0x60e, 0xabf4, 0x8a10, 0x524a, 0x8079, 0xd0c7, 0x0, 0x0);
        gbc.writeMem(0x60e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xabf4);
        EXPECT(gbc.pc(), 0x60f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0125
        gbc.setState(0xd934, 0xc6de, 0x4b0, 0x2826, 0xdda, 0xc43a, 0x0, 0x0);
        gbc.writeMem(0xd934, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xc6de);
        EXPECT(gbc.pc(), 0xd935);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd934), 0x8c);
        // 8C 0126
        gbc.setState(0x2381, 0x44e, 0x54b0, 0xda73, 0xbc62, 0xa5a0, 0x1, 0x0);
        gbc.writeMem(0x2381, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x44e);
        EXPECT(gbc.pc(), 0x2382);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0127
        gbc.setState(0x43f4, 0x57cf, 0xc660, 0x4fbb, 0x6716, 0xde48, 0x1, 0x0);
        gbc.writeMem(0x43f4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x57cf);
        EXPECT(gbc.pc(), 0x43f5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0128
        gbc.setState(0x72c2, 0xc6f9, 0xe570, 0x561f, 0xeacb, 0xac45, 0x1, 0x1);
        gbc.writeMem(0x72c2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x45);
        EXPECT(gbc.sp(), 0xc6f9);
        EXPECT(gbc.pc(), 0x72c3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0129
        gbc.setState(0x7620, 0xe245, 0x26c0, 0x1093, 0xdd9a, 0x5e4, 0x1, 0x0);
        gbc.writeMem(0x7620, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xe245);
        EXPECT(gbc.pc(), 0x7621);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 012A
        gbc.setState(0xe2f1, 0x27b2, 0x5220, 0x7471, 0xc4f7, 0x130d, 0x1, 0x1);
        gbc.writeMem(0xe2f1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x27b2);
        EXPECT(gbc.pc(), 0xe2f2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2f1), 0x8c);
        // 8C 012B
        gbc.setState(0x5e10, 0x4dc8, 0x1040, 0x20db, 0x514, 0xa1b5, 0x1, 0x1);
        gbc.writeMem(0x5e10, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x4dc8);
        EXPECT(gbc.pc(), 0x5e11);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 012C
        gbc.setState(0x799b, 0xd4c2, 0x2e20, 0xea19, 0xbcc2, 0x51b3, 0x0, 0x1);
        gbc.writeMem(0x799b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0xbc);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xd4c2);
        EXPECT(gbc.pc(), 0x799c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 012D
        gbc.setState(0x41c6, 0xfec6, 0x7a90, 0x81da, 0xc714, 0x432, 0x0, 0x0);
        gbc.writeMem(0x41c6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xfec6);
        EXPECT(gbc.pc(), 0x41c7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 012E
        gbc.setState(0x6f21, 0x4360, 0xc8d0, 0x97b, 0x830f, 0x3c22, 0x1, 0x1);
        gbc.writeMem(0x6f21, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x4360);
        EXPECT(gbc.pc(), 0x6f22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 012F
        gbc.setState(0xcb58, 0x780e, 0x4d0, 0x7120, 0x7a2, 0x4208, 0x1, 0x0);
        gbc.writeMem(0xcb58, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x780e);
        EXPECT(gbc.pc(), 0xcb59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb58), 0x8c);
        // 8C 0130
        gbc.setState(0x2a1c, 0x3b3c, 0xd9b0, 0x8de8, 0xef29, 0xdf9c, 0x1, 0x0);
        gbc.writeMem(0x2a1c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0x8d);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x29);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x3b3c);
        EXPECT(gbc.pc(), 0x2a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0131
        gbc.setState(0x7b57, 0x3baf, 0x5910, 0x42fb, 0xdad8, 0xfd65, 0x1, 0x0);
        gbc.writeMem(0x7b57, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x65);
        EXPECT(gbc.sp(), 0x3baf);
        EXPECT(gbc.pc(), 0x7b58);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0132
        gbc.setState(0x50f4, 0x4d6, 0x4aa0, 0x2634, 0x8852, 0xbcba, 0x0, 0x0);
        gbc.writeMem(0x50f4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x4d6);
        EXPECT(gbc.pc(), 0x50f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0133
        gbc.setState(0xc150, 0x7b84, 0x1120, 0xe302, 0x7fb9, 0xa8d1, 0x1, 0x0);
        gbc.writeMem(0xc150, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x7b84);
        EXPECT(gbc.pc(), 0xc151);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc150), 0x8c);
        // 8C 0136
        gbc.setState(0x3444, 0x6cf9, 0xc690, 0x924d, 0x8d01, 0x18a1, 0x0, 0x0);
        gbc.writeMem(0x3444, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x6cf9);
        EXPECT(gbc.pc(), 0x3445);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0137
        gbc.setState(0x4dc4, 0xf8f2, 0xb9d0, 0x2694, 0x3d57, 0x24a, 0x0, 0x0);
        gbc.writeMem(0x4dc4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x26);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xf8f2);
        EXPECT(gbc.pc(), 0x4dc5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0138
        gbc.setState(0x75fc, 0xbf81, 0x2450, 0xc2ae, 0xa461, 0x175b, 0x0, 0x1);
        gbc.writeMem(0x75fc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x61);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xbf81);
        EXPECT(gbc.pc(), 0x75fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0139
        gbc.setState(0xd8, 0x6cc6, 0xd960, 0x4f8b, 0xb724, 0x8992, 0x0, 0x0);
        gbc.writeMem(0xd8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xb7);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x6cc6);
        EXPECT(gbc.pc(), 0xd9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 013A
        gbc.setState(0xe948, 0x38f0, 0x4840, 0xacc, 0x583a, 0x9933, 0x0, 0x0);
        gbc.writeMem(0xe948, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xa);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x38f0);
        EXPECT(gbc.pc(), 0xe949);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe948), 0x8c);
        // 8C 013B
        gbc.setState(0x3ba9, 0xa260, 0x73e0, 0x942a, 0x4bf9, 0x212a, 0x0, 0x1);
        gbc.writeMem(0x3ba9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0xa260);
        EXPECT(gbc.pc(), 0x3baa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 013C
        gbc.setState(0x9439, 0x9d1b, 0x80b0, 0x338, 0x347f, 0x610f, 0x0, 0x0);
        gbc.writeMem(0x9439, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x34);
        EXPECT(gbc.e(),  0x7f);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0x9d1b);
        EXPECT(gbc.pc(), 0x943a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9439), 0x8c);
        // 8C 013D
        gbc.setState(0xefb4, 0x1cbc, 0xd6c0, 0x556b, 0x8d4b, 0xf2f3, 0x1, 0x0);
        gbc.writeMem(0xefb4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1cbc);
        EXPECT(gbc.pc(), 0xefb5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xefb4), 0x8c);
        // 8C 013F
        gbc.setState(0xba5, 0xd241, 0x5c30, 0xc9be, 0x33a9, 0x6179, 0x1, 0x0);
        gbc.writeMem(0xba5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xd241);
        EXPECT(gbc.pc(), 0xba6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0140
        gbc.setState(0x4b09, 0x4950, 0x8c50, 0xc3d6, 0x18df, 0x67d4, 0x0, 0x1);
        gbc.writeMem(0x4b09, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x4950);
        EXPECT(gbc.pc(), 0x4b0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0141
        gbc.setState(0x9e1b, 0x43a5, 0xe890, 0x4c1d, 0x910a, 0x17d1, 0x1, 0x0);
        gbc.writeMem(0x9e1b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0x43a5);
        EXPECT(gbc.pc(), 0x9e1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9e1b), 0x8c);
        // 8C 0142
        gbc.setState(0x3d46, 0xb6ad, 0xda50, 0x7e9d, 0xdcf8, 0xf059, 0x0, 0x0);
        gbc.writeMem(0x3d46, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xb6ad);
        EXPECT(gbc.pc(), 0x3d47);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0143
        gbc.setState(0x2f43, 0x714d, 0xc210, 0xbe33, 0xa122, 0xa464, 0x1, 0x1);
        gbc.writeMem(0x2f43, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x22);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x714d);
        EXPECT(gbc.pc(), 0x2f44);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0144
        gbc.setState(0xbf87, 0xa601, 0x62e0, 0xe36b, 0x599f, 0x4cfa, 0x1, 0x1);
        gbc.writeMem(0xbf87, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0xa601);
        EXPECT(gbc.pc(), 0xbf88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbf87), 0x8c);
        // 8C 0145
        gbc.setState(0x5238, 0x8202, 0xab00, 0x379e, 0x386f, 0x9951, 0x1, 0x1);
        gbc.writeMem(0x5238, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x8202);
        EXPECT(gbc.pc(), 0x5239);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0146
        gbc.setState(0xe40b, 0x8752, 0xa520, 0x8a62, 0xb41f, 0x3020, 0x0, 0x1);
        gbc.writeMem(0xe40b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8752);
        EXPECT(gbc.pc(), 0xe40c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe40b), 0x8c);
        // 8C 0147
        gbc.setState(0xc0b3, 0xe083, 0x44c0, 0x21cb, 0x902e, 0xec61, 0x0, 0x1);
        gbc.writeMem(0xc0b3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0xe083);
        EXPECT(gbc.pc(), 0xc0b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0b3), 0x8c);
        // 8C 0148
        gbc.setState(0x5406, 0xdf3d, 0x1670, 0xe8a4, 0x7720, 0xd49e, 0x1, 0x0);
        gbc.writeMem(0x5406, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xdf3d);
        EXPECT(gbc.pc(), 0x5407);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0149
        gbc.setState(0x640f, 0x93e6, 0x1860, 0x6fcb, 0x934c, 0x9403, 0x0, 0x1);
        gbc.writeMem(0x640f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xcb);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x93e6);
        EXPECT(gbc.pc(), 0x6410);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 014A
        gbc.setState(0x7916, 0xd458, 0x2850, 0xcb8, 0xa37b, 0xab2b, 0x0, 0x0);
        gbc.writeMem(0x7916, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0xb8);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xd458);
        EXPECT(gbc.pc(), 0x7917);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 014B
        gbc.setState(0x41c6, 0x480c, 0xb780, 0x2f85, 0xf08, 0x15f8, 0x1, 0x0);
        gbc.writeMem(0x41c6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x480c);
        EXPECT(gbc.pc(), 0x41c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 014C
        gbc.setState(0x3558, 0xe92a, 0xd640, 0xc44b, 0x6368, 0xbd76, 0x0, 0x0);
        gbc.writeMem(0x3558, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x63);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0xe92a);
        EXPECT(gbc.pc(), 0x3559);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 014D
        gbc.setState(0x6f46, 0x62a6, 0xd880, 0x11, 0xab01, 0x7ab0, 0x1, 0x0);
        gbc.writeMem(0x6f46, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x62a6);
        EXPECT(gbc.pc(), 0x6f47);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 014E
        gbc.setState(0xc70e, 0xd9d0, 0x7ef0, 0x60, 0xf8b0, 0x4913, 0x0, 0x1);
        gbc.writeMem(0xc70e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x60);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x13);
        EXPECT(gbc.sp(), 0xd9d0);
        EXPECT(gbc.pc(), 0xc70f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc70e), 0x8c);
        // 8C 014F
        gbc.setState(0x87c7, 0xe527, 0xf3f0, 0x2515, 0x7738, 0x9930, 0x0, 0x1);
        gbc.writeMem(0x87c7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0xe527);
        EXPECT(gbc.pc(), 0x87c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x87c7), 0x8c);
        // 8C 0150
        gbc.setState(0x3202, 0xd0f2, 0x79d0, 0xdffc, 0x1d0a, 0x9a1c, 0x1, 0x1);
        gbc.writeMem(0x3202, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x9a);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xd0f2);
        EXPECT(gbc.pc(), 0x3203);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0151
        gbc.setState(0x18d5, 0x9de2, 0x8d50, 0x9854, 0x3060, 0x11c6, 0x1, 0x1);
        gbc.writeMem(0x18d5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x9de2);
        EXPECT(gbc.pc(), 0x18d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0152
        gbc.setState(0x9a04, 0x7bea, 0x33c0, 0x590e, 0x6583, 0x8823, 0x0, 0x1);
        gbc.writeMem(0x9a04, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7bea);
        EXPECT(gbc.pc(), 0x9a05);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a04), 0x8c);
        // 8C 0153
        gbc.setState(0x915e, 0xcc32, 0xc6e0, 0x5d37, 0xc2ae, 0x7e0f, 0x1, 0x1);
        gbc.writeMem(0x915e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xc2);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0xf);
        EXPECT(gbc.sp(), 0xcc32);
        EXPECT(gbc.pc(), 0x915f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x915e), 0x8c);
        // 8C 0154
        gbc.setState(0x5364, 0x124f, 0xf290, 0x5cb7, 0x3147, 0x1af3, 0x1, 0x0);
        gbc.writeMem(0x5364, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x5c);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x124f);
        EXPECT(gbc.pc(), 0x5365);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0155
        gbc.setState(0xb4e5, 0x19d7, 0xd1f0, 0xa8ea, 0xd728, 0x6859, 0x1, 0x0);
        gbc.writeMem(0xb4e5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x19d7);
        EXPECT(gbc.pc(), 0xb4e6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb4e5), 0x8c);
        // 8C 0156
        gbc.setState(0xbc0f, 0x1f36, 0x1000, 0x8264, 0x2b58, 0x3529, 0x1, 0x1);
        gbc.writeMem(0xbc0f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0x1f36);
        EXPECT(gbc.pc(), 0xbc10);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc0f), 0x8c);
        // 8C 0157
        gbc.setState(0xa1f5, 0xd983, 0x6160, 0x14da, 0xffed, 0xbe88, 0x1, 0x1);
        gbc.writeMem(0xa1f5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xd983);
        EXPECT(gbc.pc(), 0xa1f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa1f5), 0x8c);
        // 8C 0158
        gbc.setState(0x9a3, 0x86e7, 0x2aa0, 0x728a, 0x2d95, 0x43cc, 0x0, 0x1);
        gbc.writeMem(0x9a3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x86e7);
        EXPECT(gbc.pc(), 0x9a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0159
        gbc.setState(0x3a61, 0xce4f, 0x90b0, 0xc872, 0xc132, 0xde0a, 0x1, 0x0);
        gbc.writeMem(0x3a61, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xc8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0xce4f);
        EXPECT(gbc.pc(), 0x3a62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 015A
        gbc.setState(0xc146, 0xe361, 0x1030, 0x6846, 0xe948, 0xd49d, 0x1, 0x1);
        gbc.writeMem(0xc146, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe5);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xe361);
        EXPECT(gbc.pc(), 0xc147);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc146), 0x8c);
        // 8C 015B
        gbc.setState(0x2541, 0x8a12, 0xed60, 0xaece, 0x90fb, 0x65fa, 0x0, 0x1);
        gbc.writeMem(0x2541, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x90);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x8a12);
        EXPECT(gbc.pc(), 0x2542);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 015C
        gbc.setState(0x17c7, 0xe1e7, 0x88b0, 0x2d3b, 0x4296, 0x556a, 0x1, 0x0);
        gbc.writeMem(0x17c7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xde);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xe1e7);
        EXPECT(gbc.pc(), 0x17c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 015D
        gbc.setState(0xe720, 0x2b3e, 0xcad0, 0xe933, 0x4d07, 0x6114, 0x0, 0x1);
        gbc.writeMem(0xe720, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x7);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x2b3e);
        EXPECT(gbc.pc(), 0xe721);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe720), 0x8c);
        // 8C 015E
        gbc.setState(0x2963, 0xe459, 0x7390, 0xae16, 0xd14c, 0x8e02, 0x1, 0x0);
        gbc.writeMem(0x2963, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0x2);
        EXPECT(gbc.sp(), 0xe459);
        EXPECT(gbc.pc(), 0x2964);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 015F
        gbc.setState(0x2986, 0x7327, 0xa680, 0xe24f, 0x8152, 0x78e4, 0x0, 0x1);
        gbc.writeMem(0x2986, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x7327);
        EXPECT(gbc.pc(), 0x2987);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0160
        gbc.setState(0xe233, 0xed1c, 0x7350, 0xe95b, 0xe272, 0xd821, 0x1, 0x1);
        gbc.writeMem(0xe233, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xed1c);
        EXPECT(gbc.pc(), 0xe234);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe233), 0x8c);
        // 8C 0161
        gbc.setState(0x9033, 0xfeb6, 0xb9d0, 0xca50, 0x5672, 0x46ff, 0x1, 0x0);
        gbc.writeMem(0x9033, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x0);
        EXPECT(gbc.b(),  0xca);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xfeb6);
        EXPECT(gbc.pc(), 0x9034);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  true);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9033), 0x8c);
        // 8C 0162
        gbc.setState(0x7334, 0x5720, 0xb330, 0xf53d, 0xff4e, 0xdd74, 0x0, 0x1);
        gbc.writeMem(0x7334, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x91);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0x5720);
        EXPECT(gbc.pc(), 0x7335);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0163
        gbc.setState(0xaf9f, 0x6d80, 0xc150, 0x8ef1, 0x7d55, 0x9155, 0x0, 0x0);
        gbc.writeMem(0xaf9f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x6d80);
        EXPECT(gbc.pc(), 0xafa0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf9f), 0x8c);
        // 8C 0164
        gbc.setState(0xd7c8, 0xecda, 0xf300, 0x58e, 0x53d3, 0x8c88, 0x0, 0x0);
        gbc.writeMem(0xd7c8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7f);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8c);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0xecda);
        EXPECT(gbc.pc(), 0xd7c9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7c8), 0x8c);
        // 8C 0165
        gbc.setState(0x3c5e, 0x3afd, 0x7e40, 0xceb5, 0xeb84, 0xe0c3, 0x1, 0x1);
        gbc.writeMem(0x3c5e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xce);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x3afd);
        EXPECT(gbc.pc(), 0x3c5f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0166
        gbc.setState(0x3db7, 0x324d, 0x8bf0, 0xa689, 0xc6c6, 0x723b, 0x0, 0x1);
        gbc.writeMem(0x3db7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x89);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0x324d);
        EXPECT(gbc.pc(), 0x3db8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0167
        gbc.setState(0xd31f, 0xd902, 0xbc80, 0x733f, 0x59af, 0xc9d, 0x1, 0x1);
        gbc.writeMem(0xd31f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xaf);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xd902);
        EXPECT(gbc.pc(), 0xd320);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd31f), 0x8c);
        // 8C 0168
        gbc.setState(0x307b, 0xbb13, 0x4d60, 0x71ef, 0x4d18, 0x2070, 0x1, 0x1);
        gbc.writeMem(0x307b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xbb13);
        EXPECT(gbc.pc(), 0x307c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 016A
        gbc.setState(0x34f, 0xa4db, 0xa350, 0x41b9, 0x312e, 0x8f11, 0x0, 0x1);
        gbc.writeMem(0x34f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xa4db);
        EXPECT(gbc.pc(), 0x350);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 016B
        gbc.setState(0x4cad, 0xc761, 0xb3f0, 0xb51c, 0x7bd9, 0xc438, 0x1, 0x0);
        gbc.writeMem(0x4cad, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xc761);
        EXPECT(gbc.pc(), 0x4cae);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 016C
        gbc.setState(0x3e, 0xfce6, 0xc120, 0x94c1, 0x479c, 0x302f, 0x1, 0x1);
        gbc.writeMem(0x3e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x2f);
        EXPECT(gbc.sp(), 0xfce6);
        EXPECT(gbc.pc(), 0x3f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 016D
        gbc.setState(0xa461, 0xb44d, 0xa270, 0x2d6b, 0x7935, 0x4fdc, 0x1, 0x1);
        gbc.writeMem(0xa461, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0xb44d);
        EXPECT(gbc.pc(), 0xa462);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa461), 0x8c);
        // 8C 016E
        gbc.setState(0xd173, 0x84ff, 0xfab0, 0xb081, 0xc7ef, 0x6030, 0x1, 0x0);
        gbc.writeMem(0xd173, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x84ff);
        EXPECT(gbc.pc(), 0xd174);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd173), 0x8c);
        // 8C 016F
        gbc.setState(0xd84, 0x7c72, 0xce60, 0x4d26, 0x80a4, 0xc1bb, 0x0, 0x0);
        gbc.writeMem(0xd84, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0x80);
        EXPECT(gbc.e(),  0xa4);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x7c72);
        EXPECT(gbc.pc(), 0xd85);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0170
        gbc.setState(0x46c6, 0x5688, 0xbc80, 0x7c7c, 0xeff6, 0x8928, 0x1, 0x1);
        gbc.writeMem(0x46c6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0x5688);
        EXPECT(gbc.pc(), 0x46c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0171
        gbc.setState(0x16b5, 0xa1ef, 0xe9c0, 0x7417, 0x5cf2, 0xf76d, 0x1, 0x1);
        gbc.writeMem(0x16b5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe0);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x17);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xa1ef);
        EXPECT(gbc.pc(), 0x16b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0172
        gbc.setState(0xc19d, 0xefd0, 0x7180, 0xaea7, 0x6509, 0xdf9d, 0x0, 0x1);
        gbc.writeMem(0xc19d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xefd0);
        EXPECT(gbc.pc(), 0xc19e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc19d), 0x8c);
        // 8C 0173
        gbc.setState(0x80bc, 0x9f29, 0x9f0, 0x9947, 0xc6f8, 0xa596, 0x0, 0x0);
        gbc.writeMem(0x80bc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x99);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0xf8);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x9f29);
        EXPECT(gbc.pc(), 0x80bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x80bc), 0x8c);
        // 8C 0174
        gbc.setState(0x77f4, 0x350b, 0xcfb0, 0x9adb, 0xeeb0, 0xd58a, 0x0, 0x0);
        gbc.writeMem(0x77f4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x9a);
        EXPECT(gbc.c(),  0xdb);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0xd5);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x350b);
        EXPECT(gbc.pc(), 0x77f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0175
        gbc.setState(0x841a, 0x56ed, 0xf2d0, 0xe70c, 0x5ec, 0x5104, 0x0, 0x0);
        gbc.writeMem(0x841a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xc);
        EXPECT(gbc.d(),  0x5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x56ed);
        EXPECT(gbc.pc(), 0x841b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x841a), 0x8c);
        // 8C 0177
        gbc.setState(0xaf96, 0x6181, 0x3d40, 0xb6e5, 0x3a4a, 0x5b14, 0x0, 0x0);
        gbc.writeMem(0xaf96, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x6181);
        EXPECT(gbc.pc(), 0xaf97);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaf96), 0x8c);
        // 8C 0178
        gbc.setState(0x585d, 0x9c1, 0x63d0, 0xf8a5, 0x7bc5, 0xf818, 0x1, 0x1);
        gbc.writeMem(0x585d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0xc5);
        EXPECT(gbc.h(),  0xf8);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x9c1);
        EXPECT(gbc.pc(), 0x585e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0179
        gbc.setState(0x4465, 0x23a5, 0xf540, 0xd79f, 0x3f5e, 0xd6f4, 0x1, 0x1);
        gbc.writeMem(0x4465, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x3f);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x23a5);
        EXPECT(gbc.pc(), 0x4466);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 017A
        gbc.setState(0x255a, 0xc61, 0xdb00, 0x2a39, 0x279e, 0xbfe4, 0x1, 0x1);
        gbc.writeMem(0x255a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x9e);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xc61);
        EXPECT(gbc.pc(), 0x255b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 017B
        gbc.setState(0x1a92, 0x88ad, 0xeda0, 0x4ac0, 0x6fa0, 0x4707, 0x0, 0x0);
        gbc.writeMem(0x1a92, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x34);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x88ad);
        EXPECT(gbc.pc(), 0x1a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 017C
        gbc.setState(0xc809, 0x9981, 0xbdf0, 0xa870, 0xf1f, 0x83c9, 0x0, 0x1);
        gbc.writeMem(0xc809, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x70);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0x9981);
        EXPECT(gbc.pc(), 0xc80a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc809), 0x8c);
        // 8C 017D
        gbc.setState(0x6e0c, 0x7010, 0x8280, 0xc41a, 0xc01d, 0xd971, 0x0, 0x1);
        gbc.writeMem(0x6e0c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x7010);
        EXPECT(gbc.pc(), 0x6e0d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 017E
        gbc.setState(0x8ea6, 0xc91f, 0xe8c0, 0xab30, 0x81e4, 0x3e43, 0x1, 0x0);
        gbc.writeMem(0x8ea6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x81);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xc91f);
        EXPECT(gbc.pc(), 0x8ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea6), 0x8c);
        // 8C 017F
        gbc.setState(0xc575, 0x6388, 0x2100, 0x79a7, 0xa4c, 0x1bc3, 0x1, 0x0);
        gbc.writeMem(0xc575, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0xc3);
        EXPECT(gbc.sp(), 0x6388);
        EXPECT(gbc.pc(), 0xc576);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc575), 0x8c);
        // 8C 0180
        gbc.setState(0xd969, 0x7b5f, 0xb170, 0xf0cc, 0x6b2, 0x954f, 0x1, 0x0);
        gbc.writeMem(0xd969, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0x7b5f);
        EXPECT(gbc.pc(), 0xd96a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd969), 0x8c);
        // 8C 0181
        gbc.setState(0x2aec, 0x6ebe, 0xb940, 0x1780, 0x1819, 0xe2ad, 0x1, 0x1);
        gbc.writeMem(0x2aec, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x17);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0x6ebe);
        EXPECT(gbc.pc(), 0x2aed);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0182
        gbc.setState(0x9620, 0xbda0, 0x9cb0, 0xb67e, 0x7200, 0xc93c, 0x0, 0x0);
        gbc.writeMem(0x9620, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x72);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0xbda0);
        EXPECT(gbc.pc(), 0x9621);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9620), 0x8c);
        // 8C 0183
        gbc.setState(0x21b1, 0x77ae, 0x980, 0xcd2c, 0x95d6, 0xc7ac, 0x1, 0x0);
        gbc.writeMem(0x21b1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x95);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x77ae);
        EXPECT(gbc.pc(), 0x21b2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0184
        gbc.setState(0x8d14, 0x5927, 0x6630, 0x5827, 0x88d9, 0x1b04, 0x1, 0x1);
        gbc.writeMem(0x8d14, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x88);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x4);
        EXPECT(gbc.sp(), 0x5927);
        EXPECT(gbc.pc(), 0x8d15);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d14), 0x8c);
        // 8C 0185
        gbc.setState(0xfd, 0x59b4, 0xd9e0, 0x2c69, 0x78b5, 0xfbbe, 0x1, 0x1);
        gbc.writeMem(0xfd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xbe);
        EXPECT(gbc.sp(), 0x59b4);
        EXPECT(gbc.pc(), 0xfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0186
        gbc.setState(0xcd56, 0x2fbb, 0xfd40, 0x62d4, 0xe337, 0xaad4, 0x1, 0x1);
        gbc.writeMem(0xcd56, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xd4);
        EXPECT(gbc.sp(), 0x2fbb);
        EXPECT(gbc.pc(), 0xcd57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd56), 0x8c);
        // 8C 0187
        gbc.setState(0x14a9, 0x20d8, 0x3a60, 0x247f, 0xc3c1, 0x5418, 0x1, 0x1);
        gbc.writeMem(0x14a9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x20d8);
        EXPECT(gbc.pc(), 0x14aa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0188
        gbc.setState(0x2994, 0x3357, 0x9020, 0xc623, 0x8d19, 0xf379, 0x0, 0x0);
        gbc.writeMem(0x2994, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x3357);
        EXPECT(gbc.pc(), 0x2995);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0189
        gbc.setState(0xaa37, 0xd27e, 0xd730, 0xb59f, 0x6a39, 0x2f9, 0x0, 0x0);
        gbc.writeMem(0xaa37, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xda);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0xd27e);
        EXPECT(gbc.pc(), 0xaa38);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa37), 0x8c);
        // 8C 018A
        gbc.setState(0x302d, 0xdd51, 0x9e10, 0x1944, 0x33ee, 0xd3fb, 0x1, 0x1);
        gbc.writeMem(0x302d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0xd3);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0xdd51);
        EXPECT(gbc.pc(), 0x302e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 018B
        gbc.setState(0x778d, 0xfa6a, 0x8c40, 0x7f46, 0x8d43, 0x9ed0, 0x1, 0x0);
        gbc.writeMem(0x778d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x46);
        EXPECT(gbc.d(),  0x8d);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0xd0);
        EXPECT(gbc.sp(), 0xfa6a);
        EXPECT(gbc.pc(), 0x778e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 018C
        gbc.setState(0x3be5, 0x4a09, 0x9a30, 0x69f0, 0xbf02, 0x9607, 0x1, 0x0);
        gbc.writeMem(0x3be5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x4a09);
        EXPECT(gbc.pc(), 0x3be6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 018D
        gbc.setState(0x7c1e, 0x40e1, 0xad80, 0x2abc, 0x8a2a, 0x7f3, 0x1, 0x0);
        gbc.writeMem(0x7c1e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x40e1);
        EXPECT(gbc.pc(), 0x7c1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 018E
        gbc.setState(0xab82, 0x8f33, 0xbf50, 0x68eb, 0x3da0, 0xc650, 0x1, 0x1);
        gbc.writeMem(0xab82, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xeb);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0x8f33);
        EXPECT(gbc.pc(), 0xab83);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xab82), 0x8c);
        // 8C 018F
        gbc.setState(0xa119, 0x4837, 0x4430, 0x8749, 0x6e35, 0x287d, 0x0, 0x1);
        gbc.writeMem(0xa119, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6d);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x7d);
        EXPECT(gbc.sp(), 0x4837);
        EXPECT(gbc.pc(), 0xa11a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa119), 0x8c);
        // 8C 0190
        gbc.setState(0xc62f, 0x77b4, 0xc370, 0x5769, 0x6e8f, 0xc23, 0x0, 0x0);
        gbc.writeMem(0xc62f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x57);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x6e);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x77b4);
        EXPECT(gbc.pc(), 0xc630);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc62f), 0x8c);
        // 8C 0191
        gbc.setState(0xb941, 0x5b8, 0x94a0, 0x163d, 0xe287, 0x1b14, 0x1, 0x1);
        gbc.writeMem(0xb941, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xaf);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0xe2);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x5b8);
        EXPECT(gbc.pc(), 0xb942);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb941), 0x8c);
        // 8C 0192
        gbc.setState(0x25c0, 0xa2f9, 0xafe0, 0xb8a2, 0xf6e2, 0x6da1, 0x0, 0x0);
        gbc.writeMem(0x25c0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xb8);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa2f9);
        EXPECT(gbc.pc(), 0x25c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0193
        gbc.setState(0x91ea, 0x2a63, 0xb070, 0xe96d, 0xb117, 0x380b, 0x0, 0x0);
        gbc.writeMem(0x91ea, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x2a63);
        EXPECT(gbc.pc(), 0x91eb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91ea), 0x8c);
        // 8C 0194
        gbc.setState(0x765f, 0x5091, 0x7390, 0x1f21, 0x606d, 0x2918, 0x1, 0x1);
        gbc.writeMem(0x765f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9d);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x5091);
        EXPECT(gbc.pc(), 0x7660);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0196
        gbc.setState(0x4b73, 0x57, 0xdf0, 0xd637, 0xd057, 0x921d, 0x0, 0x0);
        gbc.writeMem(0x4b73, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0x37);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x57);
        EXPECT(gbc.pc(), 0x4b74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0197
        gbc.setState(0xbdb0, 0xa1a0, 0xd8d0, 0xc680, 0xc5b9, 0x3c49, 0x1, 0x1);
        gbc.writeMem(0xbdb0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc6);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0x3c);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xa1a0);
        EXPECT(gbc.pc(), 0xbdb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdb0), 0x8c);
        // 8C 0198
        gbc.setState(0x16c3, 0xe373, 0x95b0, 0xe1c1, 0xc05a, 0x4205, 0x1, 0x0);
        gbc.writeMem(0x16c3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe373);
        EXPECT(gbc.pc(), 0x16c4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0199
        gbc.setState(0x30b9, 0x2fd4, 0x5f00, 0x2808, 0x598c, 0x92b5, 0x1, 0x1);
        gbc.writeMem(0x30b9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf1);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x92);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x2fd4);
        EXPECT(gbc.pc(), 0x30ba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 019A
        gbc.setState(0xcc4c, 0xb798, 0xd480, 0x2f67, 0x67aa, 0x663b, 0x1, 0x0);
        gbc.writeMem(0xcc4c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb798);
        EXPECT(gbc.pc(), 0xcc4d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc4c), 0x8c);
        // 8C 019B
        gbc.setState(0x91a3, 0x1d72, 0x7460, 0xc908, 0xfcbe, 0x5b4c, 0x0, 0x1);
        gbc.writeMem(0x91a3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xfc);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x1d72);
        EXPECT(gbc.pc(), 0x91a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91a3), 0x8c);
        // 8C 019C
        gbc.setState(0xb647, 0x846c, 0x1bc0, 0xe25c, 0x6d9d, 0x9005, 0x1, 0x1);
        gbc.writeMem(0xb647, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x90);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0x846c);
        EXPECT(gbc.pc(), 0xb648);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb647), 0x8c);
        // 8C 019D
        gbc.setState(0x3f11, 0xaa11, 0x86c0, 0xb5bd, 0x7e93, 0x5d8c, 0x0, 0x0);
        gbc.writeMem(0x3f11, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xb5);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xaa11);
        EXPECT(gbc.pc(), 0x3f12);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 019E
        gbc.setState(0x9304, 0xb56f, 0xd740, 0x527e, 0x779f, 0x326a, 0x0, 0x1);
        gbc.writeMem(0x9304, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0x7e);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x6a);
        EXPECT(gbc.sp(), 0xb56f);
        EXPECT(gbc.pc(), 0x9305);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9304), 0x8c);
        // 8C 019F
        gbc.setState(0xc283, 0x7e91, 0x3fd0, 0xaf4d, 0x4cc2, 0xb9f9, 0x1, 0x0);
        gbc.writeMem(0xc283, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x4c);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xb9);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x7e91);
        EXPECT(gbc.pc(), 0xc284);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc283), 0x8c);
        // 8C 01A0
        gbc.setState(0xaf90, 0x4f46, 0xb4d0, 0xfce1, 0x9616, 0x7d59, 0x1, 0x1);
        gbc.writeMem(0xaf90, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xe1);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x4f46);
        EXPECT(gbc.pc(), 0xaf91);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf90), 0x8c);
        // 8C 01A1
        gbc.setState(0x2ecb, 0x3527, 0xe4c0, 0x1878, 0x473e, 0x353a, 0x1, 0x1);
        gbc.writeMem(0x2ecb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x78);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0x3527);
        EXPECT(gbc.pc(), 0x2ecc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 01A2
        gbc.setState(0xabd2, 0xc23, 0xd460, 0x5136, 0xb365, 0x777e, 0x1, 0x1);
        gbc.writeMem(0xabd2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x36);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xc23);
        EXPECT(gbc.pc(), 0xabd3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabd2), 0x8c);
        // 8C 01A3
        gbc.setState(0x825b, 0x1061, 0x6860, 0x1cb9, 0x51dc, 0x9d95, 0x1, 0x0);
        gbc.writeMem(0x825b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x1c);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xdc);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x1061);
        EXPECT(gbc.pc(), 0x825c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x825b), 0x8c);
        // 8C 01A4
        gbc.setState(0xd0e7, 0xf066, 0x9ed0, 0x3d0b, 0x7908, 0x37ce, 0x1, 0x0);
        gbc.writeMem(0xd0e7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xf066);
        EXPECT(gbc.pc(), 0xd0e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0e7), 0x8c);
        // 8C 01A5
        gbc.setState(0x8bc2, 0x1f70, 0x9410, 0xccc4, 0xc35d, 0x6824, 0x0, 0x0);
        gbc.writeMem(0x8bc2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0x1f70);
        EXPECT(gbc.pc(), 0x8bc3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8bc2), 0x8c);
        // 8C 01A6
        gbc.setState(0xe2e7, 0xeea1, 0x3ca0, 0x96c2, 0x5008, 0xfad1, 0x0, 0x0);
        gbc.writeMem(0xe2e7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xeea1);
        EXPECT(gbc.pc(), 0xe2e8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2e7), 0x8c);
        // 8C 01A7
        gbc.setState(0xb1a, 0xfdc6, 0x8cf0, 0x381c, 0x6f23, 0xcac5, 0x0, 0x1);
        gbc.writeMem(0xb1a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x38);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0xfdc6);
        EXPECT(gbc.pc(), 0xb1b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01A8
        gbc.setState(0x6c26, 0x73ee, 0xbcc0, 0x1827, 0x2b9f, 0x96cd, 0x0, 0x1);
        gbc.writeMem(0x6c26, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x52);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x73ee);
        EXPECT(gbc.pc(), 0x6c27);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01A9
        gbc.setState(0x8d5d, 0xdc4, 0x6310, 0xcc6d, 0x6262, 0x804c, 0x1, 0x1);
        gbc.writeMem(0x8d5d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xcc);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xdc4);
        EXPECT(gbc.pc(), 0x8d5e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8d5d), 0x8c);
        // 8C 01AB
        gbc.setState(0xe582, 0xa995, 0x1000, 0xda95, 0x3854, 0xcf78, 0x1, 0x0);
        gbc.writeMem(0xe582, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0x54);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0xa995);
        EXPECT(gbc.pc(), 0xe583);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe582), 0x8c);
        // 8C 01AC
        gbc.setState(0x900, 0x29bf, 0x4310, 0xd707, 0x4d91, 0x9dd3, 0x0, 0x1);
        gbc.writeMem(0x900, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd7);
        EXPECT(gbc.c(),  0x7);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x29bf);
        EXPECT(gbc.pc(), 0x901);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 01AD
        gbc.setState(0xdfc5, 0xb8ba, 0x6280, 0x931b, 0xcdfd, 0xfc17, 0x0, 0x0);
        gbc.writeMem(0xdfc5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb8ba);
        EXPECT(gbc.pc(), 0xdfc6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdfc5), 0x8c);
        // 8C 01AE
        gbc.setState(0x47eb, 0xdd84, 0x5960, 0xc4fc, 0xece1, 0x1501, 0x0, 0x0);
        gbc.writeMem(0x47eb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xdd84);
        EXPECT(gbc.pc(), 0x47ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 01AF
        gbc.setState(0x73f, 0x4e6, 0x6e70, 0x2cfb, 0x45aa, 0x3dd, 0x0, 0x0);
        gbc.writeMem(0x73f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x4e6);
        EXPECT(gbc.pc(), 0x740);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 01B0
        gbc.setState(0xef61, 0xa1a3, 0x4880, 0xf82b, 0xc1bb, 0x66ce, 0x0, 0x0);
        gbc.writeMem(0xef61, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xa1a3);
        EXPECT(gbc.pc(), 0xef62);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef61), 0x8c);
        // 8C 01B1
        gbc.setState(0x41c9, 0x5077, 0xda80, 0x4fbe, 0xdf2a, 0xa68a, 0x1, 0x1);
        gbc.writeMem(0x41c9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4f);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x2a);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x5077);
        EXPECT(gbc.pc(), 0x41ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01B2
        gbc.setState(0x1e87, 0x6bc, 0x2f60, 0xf902, 0x9721, 0xd4cc, 0x1, 0x0);
        gbc.writeMem(0x1e87, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0x6bc);
        EXPECT(gbc.pc(), 0x1e88);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01B3
        gbc.setState(0xaf6c, 0xf97, 0xf060, 0x1333, 0x14c3, 0x5d28, 0x0, 0x0);
        gbc.writeMem(0xaf6c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0x5d);
        EXPECT(gbc.l(),  0x28);
        EXPECT(gbc.sp(), 0xf97);
        EXPECT(gbc.pc(), 0xaf6d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf6c), 0x8c);
        // 8C 01B4
        gbc.setState(0x7665, 0xc99a, 0xb990, 0x28d7, 0xb3c3, 0xa37c, 0x1, 0x1);
        gbc.writeMem(0x7665, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x28);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xa3);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xc99a);
        EXPECT(gbc.pc(), 0x7666);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 01B5
        gbc.setState(0x10db, 0x899, 0x55a0, 0x5667, 0xb27, 0x68b2, 0x0, 0x0);
        gbc.writeMem(0x10db, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x899);
        EXPECT(gbc.pc(), 0x10dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 01B6
        gbc.setState(0x6961, 0xf28f, 0x3810, 0x68aa, 0x9406, 0x42b3, 0x1, 0x0);
        gbc.writeMem(0x6961, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0x42);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0xf28f);
        EXPECT(gbc.pc(), 0x6962);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 01B7
        gbc.setState(0x9d14, 0xdda8, 0x8f40, 0xfcd2, 0x4814, 0x6806, 0x0, 0x0);
        gbc.writeMem(0x9d14, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x68);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xdda8);
        EXPECT(gbc.pc(), 0x9d15);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d14), 0x8c);
        // 8C 01B8
        gbc.setState(0xd99b, 0x86fa, 0x16f0, 0x43f9, 0xd527, 0xf7ba, 0x0, 0x0);
        gbc.writeMem(0xd99b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xd5);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf7);
        EXPECT(gbc.l(),  0xba);
        EXPECT(gbc.sp(), 0x86fa);
        EXPECT(gbc.pc(), 0xd99c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd99b), 0x8c);
        // 8C 01B9
        gbc.setState(0xaa5f, 0xd593, 0x22c0, 0xb997, 0x59c1, 0x7e23, 0x0, 0x1);
        gbc.writeMem(0xaa5f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xb9);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xd593);
        EXPECT(gbc.pc(), 0xaa60);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xaa5f), 0x8c);
        // 8C 01BA
        gbc.setState(0xa34b, 0x4b9d, 0xc640, 0xdffd, 0x15d1, 0x236e, 0x1, 0x1);
        gbc.writeMem(0xa34b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x4b9d);
        EXPECT(gbc.pc(), 0xa34c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa34b), 0x8c);
        // 8C 01BB
        gbc.setState(0x7d1b, 0x2b00, 0x6a30, 0xc945, 0x5e83, 0xc667, 0x1, 0x0);
        gbc.writeMem(0x7d1b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2b00);
        EXPECT(gbc.pc(), 0x7d1c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01BD
        gbc.setState(0x7de8, 0x4a69, 0x6150, 0x7e38, 0x9720, 0x5996, 0x0, 0x0);
        gbc.writeMem(0x7de8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x38);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x96);
        EXPECT(gbc.sp(), 0x4a69);
        EXPECT(gbc.pc(), 0x7de9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 01BE
        gbc.setState(0x7346, 0x9bff, 0xa630, 0xc3ae, 0x5414, 0x6adc, 0x1, 0x1);
        gbc.writeMem(0x7346, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x9bff);
        EXPECT(gbc.pc(), 0x7347);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01BF
        gbc.setState(0x1c32, 0x9042, 0x6410, 0x9ec8, 0x40ed, 0xb35, 0x1, 0x1);
        gbc.writeMem(0x1c32, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x40);
        EXPECT(gbc.e(),  0xed);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x9042);
        EXPECT(gbc.pc(), 0x1c33);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 01C0
        gbc.setState(0x592b, 0x490c, 0x7750, 0xeefb, 0x4d46, 0x9fbc, 0x1, 0x1);
        gbc.writeMem(0x592b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x46);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x490c);
        EXPECT(gbc.pc(), 0x592c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01C1
        gbc.setState(0xb842, 0xc1ae, 0x6430, 0x16fa, 0xd094, 0xca59, 0x1, 0x0);
        gbc.writeMem(0xb842, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0xfa);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xc1ae);
        EXPECT(gbc.pc(), 0xb843);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb842), 0x8c);
        // 8C 01C3
        gbc.setState(0x4637, 0x69a3, 0x88a0, 0xae16, 0xcfee, 0x8998, 0x1, 0x1);
        gbc.writeMem(0x4637, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0x16);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xee);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x69a3);
        EXPECT(gbc.pc(), 0x4638);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01C4
        gbc.setState(0x56bb, 0x3028, 0x5740, 0x2bf5, 0xfa11, 0x13a3, 0x1, 0x1);
        gbc.writeMem(0x56bb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0xf5);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0x3028);
        EXPECT(gbc.pc(), 0x56bc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 01C5
        gbc.setState(0x51a8, 0xa76, 0xb7a0, 0x7310, 0xe873, 0x629a, 0x0, 0x0);
        gbc.writeMem(0x51a8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x73);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0xa76);
        EXPECT(gbc.pc(), 0x51a9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 01C6
        gbc.setState(0x226f, 0x7e30, 0x1350, 0x98e, 0xff52, 0x6049, 0x0, 0x1);
        gbc.writeMem(0x226f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x9);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7e30);
        EXPECT(gbc.pc(), 0x2270);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 01C7
        gbc.setState(0xd4d8, 0x20d1, 0x8b0, 0xbc43, 0x46e2, 0x1619, 0x0, 0x1);
        gbc.writeMem(0xd4d8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0x20d1);
        EXPECT(gbc.pc(), 0xd4d9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4d8), 0x8c);
        // 8C 01C8
        gbc.setState(0x4f1e, 0xa593, 0xef90, 0xd3c9, 0xb0e8, 0x2a79, 0x1, 0x1);
        gbc.writeMem(0x4f1e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0xc9);
        EXPECT(gbc.d(),  0xb0);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0x2a);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0xa593);
        EXPECT(gbc.pc(), 0x4f1f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01C9
        gbc.setState(0x28, 0x8ae, 0x57a0, 0xde03, 0x83cd, 0xfce2, 0x1, 0x1);
        gbc.writeMem(0x28, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8ae);
        EXPECT(gbc.pc(), 0x29);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01CA
        gbc.setState(0x411e, 0xbee7, 0xf4f0, 0xec27, 0xc4fe, 0xd931, 0x1, 0x1);
        gbc.writeMem(0x411e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xbee7);
        EXPECT(gbc.pc(), 0x411f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 01CB
        gbc.setState(0x39a3, 0xc227, 0x5720, 0xa795, 0x5823, 0x4ba9, 0x0, 0x1);
        gbc.writeMem(0x39a3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa2);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x95);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0xc227);
        EXPECT(gbc.pc(), 0x39a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 01CC
        gbc.setState(0x826a, 0xd7dc, 0xbe30, 0x4c9e, 0xfa47, 0xe643, 0x1, 0x0);
        gbc.writeMem(0x826a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0xfa);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x43);
        EXPECT(gbc.sp(), 0xd7dc);
        EXPECT(gbc.pc(), 0x826b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x826a), 0x8c);
        // 8C 01CD
        gbc.setState(0xb37a, 0x568c, 0x3270, 0x8e3a, 0xb463, 0x673c, 0x1, 0x0);
        gbc.writeMem(0xb37a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0x8e);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xb4);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x568c);
        EXPECT(gbc.pc(), 0xb37b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb37a), 0x8c);
        // 8C 01CE
        gbc.setState(0x65ac, 0x1e34, 0x6b40, 0xdcbe, 0xd215, 0xd041, 0x0, 0x1);
        gbc.writeMem(0x65ac, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x1e34);
        EXPECT(gbc.pc(), 0x65ad);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 01D0
        gbc.setState(0x3c73, 0x3ba5, 0xc690, 0x645d, 0xc92e, 0x279a, 0x1, 0x1);
        gbc.writeMem(0x3c73, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x9a);
        EXPECT(gbc.sp(), 0x3ba5);
        EXPECT(gbc.pc(), 0x3c74);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 01D1
        gbc.setState(0x2452, 0xeeed, 0x2fc0, 0xbe1a, 0x9bb5, 0xa621, 0x1, 0x1);
        gbc.writeMem(0x2452, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd5);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1a);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0xeeed);
        EXPECT(gbc.pc(), 0x2453);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 01D2
        gbc.setState(0x80f2, 0xa02e, 0x9670, 0xe0e3, 0x28c1, 0x94b5, 0x1, 0x0);
        gbc.writeMem(0x80f2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2b);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0xa02e);
        EXPECT(gbc.pc(), 0x80f3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x80f2), 0x8c);
        // 8C 01D3
        gbc.setState(0xaa7b, 0xcbea, 0xc750, 0x5499, 0x8c86, 0x8826, 0x1, 0x1);
        gbc.writeMem(0xaa7b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x88);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xcbea);
        EXPECT(gbc.pc(), 0xaa7c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa7b), 0x8c);
        // 8C 01D4
        gbc.setState(0xce85, 0x4c20, 0x4bb0, 0x5827, 0x9c90, 0x3475, 0x1, 0x1);
        gbc.writeMem(0xce85, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x4c20);
        EXPECT(gbc.pc(), 0xce86);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xce85), 0x8c);
        // 8C 01D5
        gbc.setState(0x5310, 0x498a, 0x58c0, 0x347d, 0xc7b9, 0xb5ac, 0x0, 0x1);
        gbc.writeMem(0x5310, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0x498a);
        EXPECT(gbc.pc(), 0x5311);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 01D6
        gbc.setState(0x6c94, 0xb81a, 0xd7c0, 0x110, 0x3a79, 0x59b6, 0x1, 0x1);
        gbc.writeMem(0x6c94, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x1);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb81a);
        EXPECT(gbc.pc(), 0x6c95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01D7
        gbc.setState(0x57a3, 0xcf11, 0x9ad0, 0x29ee, 0xf4f3, 0x3e39, 0x0, 0x0);
        gbc.writeMem(0x57a3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x29);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xcf11);
        EXPECT(gbc.pc(), 0x57a4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 01D8
        gbc.setState(0xbfb2, 0x1836, 0xbdd0, 0xe9f4, 0xb63f, 0x95f3, 0x0, 0x0);
        gbc.writeMem(0xbfb2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x53);
        EXPECT(gbc.b(),  0xe9);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x1836);
        EXPECT(gbc.pc(), 0xbfb3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfb2), 0x8c);
        // 8C 01D9
        gbc.setState(0xb04e, 0x804a, 0x34f0, 0x6313, 0xc1a2, 0x22ab, 0x1, 0x1);
        gbc.writeMem(0xb04e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x804a);
        EXPECT(gbc.pc(), 0xb04f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb04e), 0x8c);
        // 8C 01DA
        gbc.setState(0xcc4d, 0xbbd4, 0x8a70, 0x7850, 0x28c7, 0xf080, 0x0, 0x0);
        gbc.writeMem(0xcc4d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xbbd4);
        EXPECT(gbc.pc(), 0xcc4e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcc4d), 0x8c);
        // 8C 01DB
        gbc.setState(0xb3f3, 0x7090, 0xb1d0, 0xe151, 0x535a, 0x8584, 0x1, 0x1);
        gbc.writeMem(0xb3f3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x51);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x85);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x7090);
        EXPECT(gbc.pc(), 0xb3f4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb3f3), 0x8c);
        // 8C 01DC
        gbc.setState(0x5484, 0x7595, 0x2cd0, 0xfb06, 0x6b11, 0x8749, 0x1, 0x1);
        gbc.writeMem(0x5484, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x7595);
        EXPECT(gbc.pc(), 0x5485);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 01DD
        gbc.setState(0xb16c, 0x83ec, 0xe5b0, 0xc2ed, 0xda83, 0x21a4, 0x0, 0x0);
        gbc.writeMem(0xb16c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc2);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x83ec);
        EXPECT(gbc.pc(), 0xb16d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16c), 0x8c);
        // 8C 01DE
        gbc.setState(0x26a0, 0x17a3, 0x2b80, 0x764, 0xc614, 0xcdf4, 0x0, 0x0);
        gbc.writeMem(0x26a0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x17a3);
        EXPECT(gbc.pc(), 0x26a1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 01DF
        gbc.setState(0x2c3, 0xaba3, 0xe170, 0x716f, 0xda94, 0xb7c7, 0x0, 0x0);
        gbc.writeMem(0x2c3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x6f);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xaba3);
        EXPECT(gbc.pc(), 0x2c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 01E0
        gbc.setState(0x9f5d, 0xf9bd, 0x9a70, 0x9c03, 0x2a47, 0x2801, 0x0, 0x0);
        gbc.writeMem(0x9f5d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xf9bd);
        EXPECT(gbc.pc(), 0x9f5e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9f5d), 0x8c);
        // 8C 01E1
        gbc.setState(0x8424, 0xa7e6, 0xa460, 0xfc4b, 0x6a58, 0x608d, 0x1, 0x0);
        gbc.writeMem(0x8424, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x4b);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0xa7e6);
        EXPECT(gbc.pc(), 0x8425);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8424), 0x8c);
        // 8C 01E2
        gbc.setState(0xe6eb, 0x5998, 0xf490, 0x2c97, 0x54b7, 0xecd5, 0x0, 0x0);
        gbc.writeMem(0xe6eb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xec);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x5998);
        EXPECT(gbc.pc(), 0xe6ec);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe6eb), 0x8c);
        // 8C 01E3
        gbc.setState(0x3fd9, 0xd8fa, 0x68f0, 0xbf21, 0xbfe1, 0xfc0d, 0x0, 0x0);
        gbc.writeMem(0x3fd9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x65);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0xe1);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xd8fa);
        EXPECT(gbc.pc(), 0x3fda);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01E4
        gbc.setState(0xdeff, 0xe084, 0xf170, 0x3c4a, 0x2ec8, 0xe6e7, 0x0, 0x1);
        gbc.writeMem(0xdeff, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xe084);
        EXPECT(gbc.pc(), 0xdf00);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdeff), 0x8c);
        // 8C 01E6
        gbc.setState(0x8489, 0x3239, 0x3470, 0xd1a8, 0xc3bc, 0xadf6, 0x0, 0x1);
        gbc.writeMem(0x8489, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0xa8);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x3239);
        EXPECT(gbc.pc(), 0x848a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8489), 0x8c);
        // 8C 01E7
        gbc.setState(0x1bb4, 0x5779, 0x8060, 0xbe54, 0xde62, 0xb309, 0x0, 0x0);
        gbc.writeMem(0x1bb4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5779);
        EXPECT(gbc.pc(), 0x1bb5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 01E8
        gbc.setState(0x336d, 0x7312, 0xbb70, 0x7ce8, 0x1f98, 0xc16f, 0x1, 0x0);
        gbc.writeMem(0x336d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x7312);
        EXPECT(gbc.pc(), 0x336e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 01E9
        gbc.setState(0x7aa, 0x7a9b, 0x5a50, 0xaa99, 0xb53c, 0x7e51, 0x1, 0x1);
        gbc.writeMem(0x7aa, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0x7e);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x7a9b);
        EXPECT(gbc.pc(), 0x7ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 01EA
        gbc.setState(0xcd08, 0x35b2, 0x3400, 0xd82f, 0x139f, 0xfd6e, 0x1, 0x0);
        gbc.writeMem(0xcd08, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0x35b2);
        EXPECT(gbc.pc(), 0xcd09);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcd08), 0x8c);
        // 8C 01EB
        gbc.setState(0xbd0d, 0xa368, 0x4d50, 0x22bc, 0x5553, 0x8235, 0x1, 0x0);
        gbc.writeMem(0xbd0d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0xbc);
        EXPECT(gbc.d(),  0x55);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0xa368);
        EXPECT(gbc.pc(), 0xbd0e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd0d), 0x8c);
        // 8C 01EC
        gbc.setState(0x9771, 0x3193, 0xb5a0, 0x46b1, 0x20fd, 0x47dd, 0x1, 0x0);
        gbc.writeMem(0x9771, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x47);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x3193);
        EXPECT(gbc.pc(), 0x9772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9771), 0x8c);
        // 8C 01ED
        gbc.setState(0xd28c, 0x78da, 0xe300, 0x4203, 0x76e9, 0x4151, 0x1, 0x1);
        gbc.writeMem(0xd28c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x42);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x78da);
        EXPECT(gbc.pc(), 0xd28d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd28c), 0x8c);
        // 8C 01EE
        gbc.setState(0xbbc2, 0xb2e6, 0xa7a0, 0xd229, 0x794f, 0xe68b, 0x1, 0x1);
        gbc.writeMem(0xbbc2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x29);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0xb2e6);
        EXPECT(gbc.pc(), 0xbbc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbbc2), 0x8c);
        // 8C 01EF
        gbc.setState(0x870d, 0xa8b, 0x1d50, 0x2a0e, 0x36ae, 0x131e, 0x0, 0x1);
        gbc.writeMem(0x870d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xae);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0xa8b);
        EXPECT(gbc.pc(), 0x870e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x870d), 0x8c);
        // 8C 01F0
        gbc.setState(0x7951, 0x8ac7, 0xdcb0, 0x75d2, 0xf0a1, 0x280b, 0x1, 0x0);
        gbc.writeMem(0x7951, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0xd2);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa1);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x8ac7);
        EXPECT(gbc.pc(), 0x7952);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01F1
        gbc.setState(0x6f7c, 0xea1a, 0xb960, 0xaacd, 0x9f1c, 0xb79e, 0x0, 0x1);
        gbc.writeMem(0x6f7c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0xb7);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xea1a);
        EXPECT(gbc.pc(), 0x6f7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01F2
        gbc.setState(0xbd15, 0xfc2, 0x7490, 0x248b, 0xffa6, 0x1f47, 0x1, 0x1);
        gbc.writeMem(0xbd15, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x24);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0x47);
        EXPECT(gbc.sp(), 0xfc2);
        EXPECT(gbc.pc(), 0xbd16);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd15), 0x8c);
        // 8C 01F3
        gbc.setState(0x2676, 0x723d, 0x4810, 0x3440, 0x398e, 0x15b3, 0x0, 0x1);
        gbc.writeMem(0x2676, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x723d);
        EXPECT(gbc.pc(), 0x2677);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 01F4
        gbc.setState(0xe1b8, 0x6ea4, 0xe6f0, 0x9275, 0x7334, 0x1883, 0x0, 0x0);
        gbc.writeMem(0xe1b8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xff);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x73);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0x6ea4);
        EXPECT(gbc.pc(), 0xe1b9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe1b8), 0x8c);
        // 8C 01F5
        gbc.setState(0x3ed5, 0xfc86, 0x9f0, 0x6853, 0xaf7e, 0x9e8c, 0x0, 0x1);
        gbc.writeMem(0x3ed5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0x53);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x9e);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xfc86);
        EXPECT(gbc.pc(), 0x3ed6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 01F6
        gbc.setState(0x77c7, 0xb9e8, 0xf630, 0x9fea, 0x976e, 0x15f8, 0x1, 0x1);
        gbc.writeMem(0x77c7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc);
        EXPECT(gbc.b(),  0x9f);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x97);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xb9e8);
        EXPECT(gbc.pc(), 0x77c8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 01F7
        gbc.setState(0x32e2, 0xd67c, 0x9a30, 0x2e5e, 0xc786, 0x898c, 0x1, 0x1);
        gbc.writeMem(0x32e2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x2e);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xd67c);
        EXPECT(gbc.pc(), 0x32e3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01F8
        gbc.setState(0xe950, 0x204, 0xb1c0, 0x2a47, 0x659d, 0xca9, 0x0, 0x1);
        gbc.writeMem(0xe950, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x204);
        EXPECT(gbc.pc(), 0xe951);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe950), 0x8c);
        // 8C 01FA
        gbc.setState(0x8d36, 0x85b9, 0x85a0, 0xe694, 0xbf10, 0x9964, 0x1, 0x0);
        gbc.writeMem(0x8d36, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x85b9);
        EXPECT(gbc.pc(), 0x8d37);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8d36), 0x8c);
        // 8C 01FB
        gbc.setState(0x5b3f, 0x89cb, 0x67c0, 0x49c0, 0x3c34, 0x9d1e, 0x0, 0x1);
        gbc.writeMem(0x5b3f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x3c);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x89cb);
        EXPECT(gbc.pc(), 0x5b40);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 01FC
        gbc.setState(0x9a1c, 0xac21, 0x6e60, 0x781f, 0x48e0, 0x9da3, 0x1, 0x1);
        gbc.writeMem(0x9a1c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xac21);
        EXPECT(gbc.pc(), 0x9a1d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9a1c), 0x8c);
        // 8C 01FD
        gbc.setState(0xcb1e, 0xfd21, 0x8c40, 0x8a4d, 0xff66, 0xd82c, 0x0, 0x0);
        gbc.writeMem(0xcb1e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0xff);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xfd21);
        EXPECT(gbc.pc(), 0xcb1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb1e), 0x8c);
        // 8C 01FE
        gbc.setState(0x10f2, 0x86ad, 0x1640, 0x7528, 0x5390, 0xe3c5, 0x0, 0x1);
        gbc.writeMem(0x10f2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf9);
        EXPECT(gbc.b(),  0x75);
        EXPECT(gbc.c(),  0x28);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xe3);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x86ad);
        EXPECT(gbc.pc(), 0x10f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 01FF
        gbc.setState(0xaaca, 0x4466, 0x6590, 0x18d1, 0x893f, 0xefe8, 0x1, 0x1);
        gbc.writeMem(0xaaca, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe8);
        EXPECT(gbc.sp(), 0x4466);
        EXPECT(gbc.pc(), 0xaacb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaca), 0x8c);
        // 8C 0200
        gbc.setState(0xaf65, 0xe507, 0xfbf0, 0xc755, 0xfef3, 0x580, 0x1, 0x0);
        gbc.writeMem(0xaf65, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xe507);
        EXPECT(gbc.pc(), 0xaf66);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaf65), 0x8c);
        // 8C 0201
        gbc.setState(0xcd27, 0x652b, 0x4880, 0xe542, 0xe9fd, 0x9520, 0x1, 0x1);
        gbc.writeMem(0xcd27, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x42);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x652b);
        EXPECT(gbc.pc(), 0xcd28);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcd27), 0x8c);
        // 8C 0202
        gbc.setState(0xbd9f, 0xc655, 0x2350, 0xeb6, 0xa26b, 0x72b7, 0x1, 0x1);
        gbc.writeMem(0xbd9f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0xc655);
        EXPECT(gbc.pc(), 0xbda0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbd9f), 0x8c);
        // 8C 0203
        gbc.setState(0x8332, 0xfbe8, 0x9b70, 0xc445, 0xb13e, 0xf0d9, 0x0, 0x0);
        gbc.writeMem(0x8332, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xb1);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xf0);
        EXPECT(gbc.l(),  0xd9);
        EXPECT(gbc.sp(), 0xfbe8);
        EXPECT(gbc.pc(), 0x8333);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8332), 0x8c);
        // 8C 0204
        gbc.setState(0xd3dd, 0xdc39, 0x1a40, 0xc1c4, 0x13cf, 0x4d53, 0x0, 0x1);
        gbc.writeMem(0xd3dd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0xdc39);
        EXPECT(gbc.pc(), 0xd3de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd3dd), 0x8c);
        // 8C 0205
        gbc.setState(0xe3ea, 0x8bd0, 0xa6d0, 0xdc85, 0x5cd3, 0xcc94, 0x1, 0x1);
        gbc.writeMem(0xe3ea, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xdc);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0x5c);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0xcc);
        EXPECT(gbc.l(),  0x94);
        EXPECT(gbc.sp(), 0x8bd0);
        EXPECT(gbc.pc(), 0xe3eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3ea), 0x8c);
        // 8C 0206
        gbc.setState(0x6c89, 0xce94, 0xcdd0, 0xa893, 0x2757, 0x15c4, 0x0, 0x0);
        gbc.writeMem(0x6c89, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0xce94);
        EXPECT(gbc.pc(), 0x6c8a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0207
        gbc.setState(0x2eae, 0xbac3, 0xe540, 0xfca0, 0xa8b9, 0xb382, 0x1, 0x1);
        gbc.writeMem(0x2eae, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x82);
        EXPECT(gbc.sp(), 0xbac3);
        EXPECT(gbc.pc(), 0x2eaf);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0208
        gbc.setState(0x9896, 0xd7f5, 0x830, 0xb4ab, 0x2883, 0x6d89, 0x0, 0x1);
        gbc.writeMem(0x9896, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0x28);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x6d);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xd7f5);
        EXPECT(gbc.pc(), 0x9897);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9896), 0x8c);
        // 8C 020A
        gbc.setState(0x64b2, 0x5777, 0xf550, 0xf8ed, 0x94fb, 0x43c4, 0x0, 0x0);
        gbc.writeMem(0x64b2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0x94);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5777);
        EXPECT(gbc.pc(), 0x64b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 020B
        gbc.setState(0x8886, 0x2f93, 0xf060, 0xf11b, 0xebc6, 0xdcd5, 0x0, 0x0);
        gbc.writeMem(0x8886, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0xdc);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x2f93);
        EXPECT(gbc.pc(), 0x8887);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8886), 0x8c);
        // 8C 020C
        gbc.setState(0x16d, 0x5140, 0xbb40, 0x275e, 0x9fe5, 0xb138, 0x1, 0x1);
        gbc.writeMem(0x16d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x27);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5140);
        EXPECT(gbc.pc(), 0x16e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 020D
        gbc.setState(0x79c3, 0x7be5, 0x1f50, 0x45e9, 0x1c32, 0xd8af, 0x0, 0x0);
        gbc.writeMem(0x79c3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf8);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x1c);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xaf);
        EXPECT(gbc.sp(), 0x7be5);
        EXPECT(gbc.pc(), 0x79c4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 020E
        gbc.setState(0x8eb0, 0x3226, 0x52d0, 0x2c8f, 0x379f, 0xa63, 0x1, 0x1);
        gbc.writeMem(0x8eb0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x8f);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x63);
        EXPECT(gbc.sp(), 0x3226);
        EXPECT(gbc.pc(), 0x8eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8eb0), 0x8c);
        // 8C 020F
        gbc.setState(0xbf7c, 0xd8ea, 0x8da0, 0xaba4, 0x4452, 0xeb74, 0x0, 0x0);
        gbc.writeMem(0xbf7c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xd8ea);
        EXPECT(gbc.pc(), 0xbf7d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbf7c), 0x8c);
        // 8C 0210
        gbc.setState(0x3013, 0x4a32, 0xbfd0, 0x6b8e, 0xe876, 0x6409, 0x0, 0x0);
        gbc.writeMem(0x3013, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x8e);
        EXPECT(gbc.d(),  0xe8);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x4a32);
        EXPECT(gbc.pc(), 0x3014);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0211
        gbc.setState(0x56ba, 0xe8d0, 0xb460, 0x608d, 0xd23e, 0xeb4c, 0x1, 0x0);
        gbc.writeMem(0x56ba, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0xe8d0);
        EXPECT(gbc.pc(), 0x56bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0212
        gbc.setState(0x2baf, 0x2733, 0x60, 0x3443, 0x3702, 0x1421, 0x1, 0x0);
        gbc.writeMem(0x2baf, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x2733);
        EXPECT(gbc.pc(), 0x2bb0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0213
        gbc.setState(0x4ea4, 0x373b, 0x4100, 0xb752, 0xd8cd, 0x181b, 0x1, 0x0);
        gbc.writeMem(0x4ea4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xb7);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x373b);
        EXPECT(gbc.pc(), 0x4ea5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0214
        gbc.setState(0x34ab, 0x5318, 0x48a0, 0xe3d7, 0x1d36, 0x7e5, 0x1, 0x0);
        gbc.writeMem(0x34ab, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0x7);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5318);
        EXPECT(gbc.pc(), 0x34ac);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0215
        gbc.setState(0x6c67, 0xefe4, 0x1630, 0xe274, 0xf76b, 0xe70d, 0x1, 0x0);
        gbc.writeMem(0x6c67, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xefe4);
        EXPECT(gbc.pc(), 0x6c68);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0216
        gbc.setState(0x1c91, 0x3c51, 0x6f50, 0x5847, 0xf6a9, 0x309f, 0x1, 0x1);
        gbc.writeMem(0x1c91, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x3c51);
        EXPECT(gbc.pc(), 0x1c92);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0217
        gbc.setState(0x8eca, 0xda61, 0x47d0, 0x7a3a, 0xc87, 0xf974, 0x0, 0x0);
        gbc.writeMem(0x8eca, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0x74);
        EXPECT(gbc.sp(), 0xda61);
        EXPECT(gbc.pc(), 0x8ecb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eca), 0x8c);
        // 8C 0218
        gbc.setState(0x422f, 0xb9d4, 0xbcf0, 0x15fd, 0xc9e0, 0x38ff, 0x1, 0x0);
        gbc.writeMem(0x422f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0xc9);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xb9d4);
        EXPECT(gbc.pc(), 0x4230);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0219
        gbc.setState(0x181f, 0xd954, 0x2760, 0xa2d1, 0xc558, 0x94c9, 0x0, 0x0);
        gbc.writeMem(0x181f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x58);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xc9);
        EXPECT(gbc.sp(), 0xd954);
        EXPECT(gbc.pc(), 0x1820);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 021A
        gbc.setState(0x8f29, 0x373a, 0xd0, 0x36c7, 0xc033, 0x964e, 0x1, 0x1);
        gbc.writeMem(0x8f29, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x97);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xc0);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0x4e);
        EXPECT(gbc.sp(), 0x373a);
        EXPECT(gbc.pc(), 0x8f2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f29), 0x8c);
        // 8C 021B
        gbc.setState(0xe13c, 0x99a3, 0x4150, 0x7688, 0x1faa, 0xf9f3, 0x1, 0x0);
        gbc.writeMem(0xe13c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0xaa);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x99a3);
        EXPECT(gbc.pc(), 0xe13d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe13c), 0x8c);
        // 8C 021C
        gbc.setState(0xef52, 0x6247, 0x5f70, 0xa79f, 0xa09b, 0x38e4, 0x1, 0x0);
        gbc.writeMem(0xef52, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x9b);
        EXPECT(gbc.h(),  0x38);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x6247);
        EXPECT(gbc.pc(), 0xef53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef52), 0x8c);
        // 8C 021D
        gbc.setState(0x6b92, 0xaa3f, 0xa620, 0xdb39, 0x617d, 0xfb0d, 0x0, 0x0);
        gbc.writeMem(0x6b92, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x7d);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xaa3f);
        EXPECT(gbc.pc(), 0x6b93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 021E
        gbc.setState(0x66b2, 0x66a, 0xaf00, 0x2202, 0x96d2, 0x5c79, 0x1, 0x0);
        gbc.writeMem(0x66b2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x96);
        EXPECT(gbc.e(),  0xd2);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x66a);
        EXPECT(gbc.pc(), 0x66b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 021F
        gbc.setState(0x8f80, 0x87f6, 0x9f30, 0xac61, 0x890e, 0x392b, 0x0, 0x1);
        gbc.writeMem(0x8f80, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x39);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x87f6);
        EXPECT(gbc.pc(), 0x8f81);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8f80), 0x8c);
        // 8C 0220
        gbc.setState(0x209, 0x8ca6, 0xa0d0, 0xb1e4, 0xf251, 0xc161, 0x0, 0x1);
        gbc.writeMem(0x209, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x51);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x61);
        EXPECT(gbc.sp(), 0x8ca6);
        EXPECT(gbc.pc(), 0x20a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0221
        gbc.setState(0xe2f7, 0xe518, 0xedf0, 0x7372, 0xd619, 0xd8c2, 0x0, 0x1);
        gbc.writeMem(0xe2f7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xe518);
        EXPECT(gbc.pc(), 0xe2f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2f7), 0x8c);
        // 8C 0222
        gbc.setState(0xbc72, 0xb71f, 0x5cc0, 0xf46d, 0xf720, 0x130e, 0x1, 0x1);
        gbc.writeMem(0xbc72, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0xe);
        EXPECT(gbc.sp(), 0xb71f);
        EXPECT(gbc.pc(), 0xbc73);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbc72), 0x8c);
        // 8C 0223
        gbc.setState(0x7b22, 0x61e0, 0xd430, 0x5e39, 0xf8b7, 0xa2b7, 0x1, 0x0);
        gbc.writeMem(0x7b22, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0x5e);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0xa2);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x61e0);
        EXPECT(gbc.pc(), 0x7b23);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0224
        gbc.setState(0x2d17, 0x6380, 0x30e0, 0x2f93, 0xf5fe, 0xc786, 0x1, 0x1);
        gbc.writeMem(0x2d17, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf7);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xc7);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x6380);
        EXPECT(gbc.pc(), 0x2d18);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0225
        gbc.setState(0x639c, 0x35fb, 0xab90, 0x8f61, 0xdfb5, 0xd601, 0x0, 0x0);
        gbc.writeMem(0x639c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0x35fb);
        EXPECT(gbc.pc(), 0x639d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0226
        gbc.setState(0xec7e, 0x597c, 0xcc40, 0x4956, 0x648f, 0x4b69, 0x1, 0x1);
        gbc.writeMem(0xec7e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x597c);
        EXPECT(gbc.pc(), 0xec7f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xec7e), 0x8c);
        // 8C 0227
        gbc.setState(0x27f8, 0x272, 0x3f30, 0x1a01, 0x6fe5, 0x1ab3, 0x0, 0x0);
        gbc.writeMem(0x27f8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x272);
        EXPECT(gbc.pc(), 0x27f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0228
        gbc.setState(0x213c, 0x698c, 0x9550, 0x18a2, 0x566d, 0xb210, 0x1, 0x1);
        gbc.writeMem(0x213c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x48);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0xa2);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x698c);
        EXPECT(gbc.pc(), 0x213d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0229
        gbc.setState(0xa4cd, 0xd081, 0x2f10, 0x4ea7, 0xc3a0, 0x4b81, 0x1, 0x1);
        gbc.writeMem(0xa4cd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xa0);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0xd081);
        EXPECT(gbc.pc(), 0xa4ce);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4cd), 0x8c);
        // 8C 022B
        gbc.setState(0xca6e, 0x7663, 0xaea0, 0x217b, 0x158f, 0xa7dd, 0x1, 0x0);
        gbc.writeMem(0xca6e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x21);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x15);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xa7);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x7663);
        EXPECT(gbc.pc(), 0xca6f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xca6e), 0x8c);
        // 8C 022C
        gbc.setState(0x322, 0xa21d, 0x4b0, 0xe867, 0x5db3, 0x6490, 0x0, 0x1);
        gbc.writeMem(0x322, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xa21d);
        EXPECT(gbc.pc(), 0x323);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 022D
        gbc.setState(0x7c12, 0x6769, 0xd810, 0x6002, 0x2542, 0x48eb, 0x1, 0x1);
        gbc.writeMem(0x7c12, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x60);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x6769);
        EXPECT(gbc.pc(), 0x7c13);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 022E
        gbc.setState(0x2db1, 0xb3e7, 0x58b0, 0x414d, 0x6a3f, 0x9751, 0x1, 0x1);
        gbc.writeMem(0x2db1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0xb3e7);
        EXPECT(gbc.pc(), 0x2db2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 022F
        gbc.setState(0x78b8, 0xa0cb, 0x8e20, 0x72f6, 0xda65, 0x34e7, 0x1, 0x1);
        gbc.writeMem(0x78b8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf6);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xa0cb);
        EXPECT(gbc.pc(), 0x78b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0230
        gbc.setState(0xbb90, 0xcad6, 0x7390, 0xc7d0, 0xbf63, 0xf6aa, 0x0, 0x0);
        gbc.writeMem(0xbb90, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0xbf);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0xcad6);
        EXPECT(gbc.pc(), 0xbb91);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbb90), 0x8c);
        // 8C 0231
        gbc.setState(0x6e43, 0x6ebd, 0xdb00, 0x9e43, 0xd653, 0x53ab, 0x0, 0x0);
        gbc.writeMem(0x6e43, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x43);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x53);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0x6ebd);
        EXPECT(gbc.pc(), 0x6e44);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0232
        gbc.setState(0xe13d, 0x7067, 0xa830, 0xea1c, 0x7c1a, 0xe637, 0x0, 0x0);
        gbc.writeMem(0xe13d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xea);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7c);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x7067);
        EXPECT(gbc.pc(), 0xe13e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe13d), 0x8c);
        // 8C 0233
        gbc.setState(0x3689, 0xd02c, 0xf270, 0x93c7, 0xa1f3, 0xeeab, 0x1, 0x0);
        gbc.writeMem(0x3689, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xd02c);
        EXPECT(gbc.pc(), 0x368a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0234
        gbc.setState(0x528b, 0xbca6, 0x3b20, 0x536d, 0x9819, 0x495, 0x0, 0x0);
        gbc.writeMem(0x528b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3f);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0x6d);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0x19);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0xbca6);
        EXPECT(gbc.pc(), 0x528c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0235
        gbc.setState(0xbcd3, 0xe31e, 0xecf0, 0x3ab2, 0x6b21, 0xfe62, 0x0, 0x1);
        gbc.writeMem(0xbcd3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xfe);
        EXPECT(gbc.l(),  0x62);
        EXPECT(gbc.sp(), 0xe31e);
        EXPECT(gbc.pc(), 0xbcd4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbcd3), 0x8c);
        // 8C 0236
        gbc.setState(0x5efb, 0x8ae1, 0xb720, 0xa4d7, 0x1bcb, 0xeeeb, 0x1, 0x0);
        gbc.writeMem(0x5efb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xd7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x8ae1);
        EXPECT(gbc.pc(), 0x5efc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0237
        gbc.setState(0xe3e8, 0x8e4c, 0xdc80, 0x5d72, 0xeccf, 0x4920, 0x1, 0x0);
        gbc.writeMem(0xe3e8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x25);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0x8e4c);
        EXPECT(gbc.pc(), 0xe3e9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe3e8), 0x8c);
        // 8C 0238
        gbc.setState(0xbef4, 0xff69, 0xb250, 0x92fc, 0xf74, 0xdae5, 0x1, 0x0);
        gbc.writeMem(0xbef4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8d);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xff69);
        EXPECT(gbc.pc(), 0xbef5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbef4), 0x8c);
        // 8C 0239
        gbc.setState(0xa64f, 0xbfb, 0x7310, 0x1520, 0xdc92, 0x4f6e, 0x0, 0x1);
        gbc.writeMem(0xa64f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x92);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x6e);
        EXPECT(gbc.sp(), 0xbfb);
        EXPECT(gbc.pc(), 0xa650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa64f), 0x8c);
        // 8C 023B
        gbc.setState(0x43e9, 0x9250, 0xe720, 0xb0ce, 0x26dd, 0xe0f3, 0x0, 0x0);
        gbc.writeMem(0x43e9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x9250);
        EXPECT(gbc.pc(), 0x43ea);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 023C
        gbc.setState(0x6a48, 0xf131, 0x1f0, 0x95dc, 0xc51f, 0x6448, 0x1, 0x1);
        gbc.writeMem(0x6a48, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x64);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0xf131);
        EXPECT(gbc.pc(), 0x6a49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 023D
        gbc.setState(0xa14b, 0xe7bc, 0x64b0, 0xbcd4, 0xa456, 0xfb05, 0x0, 0x0);
        gbc.writeMem(0xa14b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xbc);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xa4);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x5);
        EXPECT(gbc.sp(), 0xe7bc);
        EXPECT(gbc.pc(), 0xa14c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa14b), 0x8c);
        // 8C 023E
        gbc.setState(0xdc52, 0x667a, 0x6860, 0x9875, 0x6b2d, 0xa84b, 0x1, 0x0);
        gbc.writeMem(0xdc52, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0x667a);
        EXPECT(gbc.pc(), 0xdc53);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdc52), 0x8c);
        // 8C 023F
        gbc.setState(0xd643, 0x2f76, 0xb960, 0x960b, 0xf4bf, 0x82b6, 0x0, 0x1);
        gbc.writeMem(0xd643, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0xf4);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x2f76);
        EXPECT(gbc.pc(), 0xd644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd643), 0x8c);
        // 8C 0240
        gbc.setState(0x10e0, 0xaa35, 0x2900, 0xe44, 0x47a3, 0x22c6, 0x0, 0x1);
        gbc.writeMem(0x10e0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x22);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xaa35);
        EXPECT(gbc.pc(), 0x10e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0241
        gbc.setState(0x73b2, 0xd456, 0x7c30, 0x3932, 0x36bc, 0xa6, 0x1, 0x0);
        gbc.writeMem(0x73b2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xd456);
        EXPECT(gbc.pc(), 0x73b3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0242
        gbc.setState(0x8b9f, 0x7125, 0x2e90, 0x7011, 0xcfbf, 0x78f4, 0x1, 0x0);
        gbc.writeMem(0x8b9f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0xbf);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x7125);
        EXPECT(gbc.pc(), 0x8ba0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8b9f), 0x8c);
        // 8C 0243
        gbc.setState(0xa4af, 0xd58a, 0xe170, 0xe197, 0x7611, 0x2f5, 0x1, 0x0);
        gbc.writeMem(0xa4af, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x2);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0xd58a);
        EXPECT(gbc.pc(), 0xa4b0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4af), 0x8c);
        // 8C 0244
        gbc.setState(0xee71, 0x9047, 0x2350, 0x49c3, 0x643, 0x976c, 0x0, 0x0);
        gbc.writeMem(0xee71, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x49);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x6);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x97);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x9047);
        EXPECT(gbc.pc(), 0xee72);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xee71), 0x8c);
        // 8C 0245
        gbc.setState(0xd85a, 0xb30f, 0xb870, 0x3445, 0xf53b, 0x879e, 0x0, 0x0);
        gbc.writeMem(0xd85a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xb30f);
        EXPECT(gbc.pc(), 0xd85b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd85a), 0x8c);
        // 8C 0246
        gbc.setState(0xce9c, 0x4d8, 0xeb00, 0xcbb7, 0xb28f, 0xb617, 0x1, 0x1);
        gbc.writeMem(0xce9c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0xb2);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x4d8);
        EXPECT(gbc.pc(), 0xce9d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xce9c), 0x8c);
        // 8C 0247
        gbc.setState(0xe851, 0x64fb, 0x7160, 0x1dea, 0x3611, 0x346b, 0x1, 0x0);
        gbc.writeMem(0xe851, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x6b);
        EXPECT(gbc.sp(), 0x64fb);
        EXPECT(gbc.pc(), 0xe852);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe851), 0x8c);
        // 8C 0248
        gbc.setState(0x32e5, 0x3ee6, 0x3580, 0x7f55, 0xa004, 0x72b2, 0x0, 0x1);
        gbc.writeMem(0x32e5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa7);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0xa0);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x3ee6);
        EXPECT(gbc.pc(), 0x32e6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0249
        gbc.setState(0xb835, 0xbfb, 0x1180, 0xafbb, 0x4421, 0xc91, 0x1, 0x1);
        gbc.writeMem(0xb835, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1d);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x21);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x91);
        EXPECT(gbc.sp(), 0xbfb);
        EXPECT(gbc.pc(), 0xb836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb835), 0x8c);
        // 8C 024A
        gbc.setState(0x26a3, 0x9356, 0x84a0, 0x37bf, 0xece7, 0x77ef, 0x1, 0x1);
        gbc.writeMem(0x26a3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfb);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x9356);
        EXPECT(gbc.pc(), 0x26a4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 024B
        gbc.setState(0xe76b, 0x482d, 0x7430, 0xbae2, 0x938f, 0x8700, 0x1, 0x1);
        gbc.writeMem(0xe76b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfc);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0xe2);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0x482d);
        EXPECT(gbc.pc(), 0xe76c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe76b), 0x8c);
        // 8C 024C
        gbc.setState(0x9003, 0xcaf7, 0x4c90, 0xc1c3, 0x6170, 0xc384, 0x0, 0x0);
        gbc.writeMem(0x9003, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x70);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0xcaf7);
        EXPECT(gbc.pc(), 0x9004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9003), 0x8c);
        // 8C 024D
        gbc.setState(0x1f24, 0x982e, 0x62d0, 0xcd6c, 0xfe87, 0x3de5, 0x1, 0x0);
        gbc.writeMem(0x1f24, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x982e);
        EXPECT(gbc.pc(), 0x1f25);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 024E
        gbc.setState(0x50f9, 0xcf09, 0x1ae0, 0x835c, 0xa327, 0xa53a, 0x0, 0x0);
        gbc.writeMem(0x50f9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xa3);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xcf09);
        EXPECT(gbc.pc(), 0x50fa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 024F
        gbc.setState(0x3cd1, 0x5236, 0xa9d0, 0x72a9, 0x2ef7, 0xe015, 0x0, 0x1);
        gbc.writeMem(0x3cd1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0xe0);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x5236);
        EXPECT(gbc.pc(), 0x3cd2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0250
        gbc.setState(0xa3be, 0xfd16, 0xf810, 0x440a, 0xa8e9, 0x84ec, 0x0, 0x0);
        gbc.writeMem(0xa3be, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x44);
        EXPECT(gbc.c(),  0xa);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xe9);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xec);
        EXPECT(gbc.sp(), 0xfd16);
        EXPECT(gbc.pc(), 0xa3bf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa3be), 0x8c);
        // 8C 0251
        gbc.setState(0xbfc0, 0x543f, 0xb590, 0x70c2, 0x6bd3, 0x8b30, 0x0, 0x1);
        gbc.writeMem(0xbfc0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x6b);
        EXPECT(gbc.e(),  0xd3);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x30);
        EXPECT(gbc.sp(), 0x543f);
        EXPECT(gbc.pc(), 0xbfc1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfc0), 0x8c);
        // 8C 0252
        gbc.setState(0x5ee, 0x87fe, 0x5b00, 0x4693, 0x7743, 0x91a5, 0x0, 0x1);
        gbc.writeMem(0x5ee, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x87fe);
        EXPECT(gbc.pc(), 0x5ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0253
        gbc.setState(0xc83, 0x1fb1, 0x1000, 0xf21e, 0x6f13, 0x48b7, 0x1, 0x1);
        gbc.writeMem(0xc83, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x58);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x13);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x1fb1);
        EXPECT(gbc.pc(), 0xc84);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0254
        gbc.setState(0xb928, 0x8b27, 0x4850, 0x5010, 0x48fc, 0xc97f, 0x0, 0x0);
        gbc.writeMem(0xb928, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x12);
        EXPECT(gbc.b(),  0x50);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x7f);
        EXPECT(gbc.sp(), 0x8b27);
        EXPECT(gbc.pc(), 0xb929);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb928), 0x8c);
        // 8C 0257
        gbc.setState(0xa33b, 0xf55a, 0x3da0, 0xd4f2, 0x71bb, 0x2516, 0x1, 0x0);
        gbc.writeMem(0xa33b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x71);
        EXPECT(gbc.e(),  0xbb);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf55a);
        EXPECT(gbc.pc(), 0xa33c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa33b), 0x8c);
        // 8C 0258
        gbc.setState(0x3e22, 0x33db, 0x57b0, 0xd071, 0x5b50, 0xc606, 0x0, 0x1);
        gbc.writeMem(0x3e22, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0x50);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x33db);
        EXPECT(gbc.pc(), 0x3e23);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0259
        gbc.setState(0xd9b9, 0x5a84, 0xffb0, 0xa8f2, 0x524e, 0xea09, 0x0, 0x0);
        gbc.writeMem(0xd9b9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0x4e);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x9);
        EXPECT(gbc.sp(), 0x5a84);
        EXPECT(gbc.pc(), 0xd9ba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd9b9), 0x8c);
        // 8C 025A
        gbc.setState(0xa474, 0x8ea7, 0x1c40, 0x4cca, 0x61f6, 0xc106, 0x1, 0x0);
        gbc.writeMem(0xa474, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xf6);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x8ea7);
        EXPECT(gbc.pc(), 0xa475);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa474), 0x8c);
        // 8C 025B
        gbc.setState(0x3dd6, 0x4cc9, 0x3cb0, 0x7421, 0xa5d, 0xf380, 0x0, 0x1);
        gbc.writeMem(0x3dd6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x5d);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x4cc9);
        EXPECT(gbc.pc(), 0x3dd7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 025C
        gbc.setState(0x36c1, 0x7387, 0xd720, 0x8b31, 0xef86, 0x5c4a, 0x0, 0x1);
        gbc.writeMem(0x36c1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x33);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x5c);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0x7387);
        EXPECT(gbc.pc(), 0x36c2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 025D
        gbc.setState(0x6044, 0x645a, 0x2370, 0x2265, 0xe6f5, 0x3164, 0x1, 0x0);
        gbc.writeMem(0x6044, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x31);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0x645a);
        EXPECT(gbc.pc(), 0x6045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 025E
        gbc.setState(0x7fc, 0x735e, 0x3f0, 0x901b, 0xb99d, 0x6c4d, 0x0, 0x1);
        gbc.writeMem(0x7fc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0xb9);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x735e);
        EXPECT(gbc.pc(), 0x7fd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 025F
        gbc.setState(0xa6f6, 0xd72e, 0x72f0, 0x77ae, 0x9a8a, 0x76a5, 0x1, 0x0);
        gbc.writeMem(0xa6f6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x77);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x9a);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x76);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0xd72e);
        EXPECT(gbc.pc(), 0xa6f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f6), 0x8c);
        // 8C 0260
        gbc.setState(0x7e9b, 0x48a5, 0x6160, 0x3ac8, 0x392f, 0x564c, 0x1, 0x1);
        gbc.writeMem(0x7e9b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x4c);
        EXPECT(gbc.sp(), 0x48a5);
        EXPECT(gbc.pc(), 0x7e9c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0261
        gbc.setState(0x316f, 0x862b, 0x9890, 0x8acc, 0xc484, 0x10b0, 0x0, 0x0);
        gbc.writeMem(0x316f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xcc);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x84);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x862b);
        EXPECT(gbc.pc(), 0x3170);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0262
        gbc.setState(0xea41, 0xdeb6, 0xe870, 0x4e66, 0x6f15, 0x2729, 0x0, 0x0);
        gbc.writeMem(0xea41, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0x29);
        EXPECT(gbc.sp(), 0xdeb6);
        EXPECT(gbc.pc(), 0xea42);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea41), 0x8c);
        // 8C 0263
        gbc.setState(0xc7a4, 0xdaf7, 0xcf0, 0x2cda, 0x5163, 0xe169, 0x0, 0x0);
        gbc.writeMem(0xc7a4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xdaf7);
        EXPECT(gbc.pc(), 0xc7a5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc7a4), 0x8c);
        // 8C 0264
        gbc.setState(0xe2b8, 0xf0c6, 0x5200, 0x94b5, 0x6db1, 0xd749, 0x1, 0x0);
        gbc.writeMem(0xe2b8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0xb5);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xb1);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0xf0c6);
        EXPECT(gbc.pc(), 0xe2b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2b8), 0x8c);
        // 8C 0265
        gbc.setState(0x8dc, 0x5eb5, 0x76d0, 0x8fde, 0xa5ec, 0xbfe0, 0x1, 0x0);
        gbc.writeMem(0x8dc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x36);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xde);
        EXPECT(gbc.d(),  0xa5);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0xbf);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0x5eb5);
        EXPECT(gbc.pc(), 0x8dd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0266
        gbc.setState(0xa0bd, 0x5184, 0x9830, 0x194f, 0x3e2d, 0x8ef, 0x0, 0x0);
        gbc.writeMem(0xa0bd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x2d);
        EXPECT(gbc.h(),  0x8);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x5184);
        EXPECT(gbc.pc(), 0xa0be);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa0bd), 0x8c);
        // 8C 0267
        gbc.setState(0xc721, 0xca1e, 0x25b0, 0x86f0, 0xde14, 0xcad1, 0x0, 0x0);
        gbc.writeMem(0xc721, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf0);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xca1e);
        EXPECT(gbc.pc(), 0xc722);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc721), 0x8c);
        // 8C 0268
        gbc.setState(0x65d5, 0xd006, 0xcec0, 0xc4af, 0xa8eb, 0x1399, 0x1, 0x1);
        gbc.writeMem(0x65d5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xc4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x13);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xd006);
        EXPECT(gbc.pc(), 0x65d6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0269
        gbc.setState(0x1fea, 0xc576, 0x5280, 0x7d14, 0xe74d, 0xdd71, 0x1, 0x0);
        gbc.writeMem(0x1fea, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0xc576);
        EXPECT(gbc.pc(), 0x1feb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 026A
        gbc.setState(0xef9a, 0xb6b4, 0xaaa0, 0x3e97, 0xd641, 0x1e17, 0x0, 0x0);
        gbc.writeMem(0xef9a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x3e);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0xb6b4);
        EXPECT(gbc.pc(), 0xef9b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xef9a), 0x8c);
        // 8C 026B
        gbc.setState(0xadf6, 0xb2ec, 0xfc40, 0x4ac2, 0x655a, 0x343b, 0x1, 0x0);
        gbc.writeMem(0xadf6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x34);
        EXPECT(gbc.l(),  0x3b);
        EXPECT(gbc.sp(), 0xb2ec);
        EXPECT(gbc.pc(), 0xadf7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xadf6), 0x8c);
        // 8C 026C
        gbc.setState(0xb3aa, 0x8350, 0x290, 0x64e0, 0xb8d4, 0xc244, 0x1, 0x0);
        gbc.writeMem(0xb3aa, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xe0);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xd4);
        EXPECT(gbc.h(),  0xc2);
        EXPECT(gbc.l(),  0x44);
        EXPECT(gbc.sp(), 0x8350);
        EXPECT(gbc.pc(), 0xb3ab);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb3aa), 0x8c);
        // 8C 026D
        gbc.setState(0x29a, 0x8281, 0xeb60, 0xff0e, 0x139c, 0xa493, 0x1, 0x1);
        gbc.writeMem(0x29a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x13);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x8281);
        EXPECT(gbc.pc(), 0x29b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 026E
        gbc.setState(0xdeb9, 0x6785, 0x44b0, 0x715d, 0xe9f2, 0x870a, 0x0, 0x0);
        gbc.writeMem(0xdeb9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xe9);
        EXPECT(gbc.e(),  0xf2);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x6785);
        EXPECT(gbc.pc(), 0xdeba);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdeb9), 0x8c);
        // 8C 026F
        gbc.setState(0xc0d6, 0x9438, 0xab10, 0x14f9, 0x9e9a, 0x6f9c, 0x1, 0x1);
        gbc.writeMem(0xc0d6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1b);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x6f);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x9438);
        EXPECT(gbc.pc(), 0xc0d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc0d6), 0x8c);
        // 8C 0270
        gbc.setState(0x1e5c, 0x8d4, 0x2410, 0x2c58, 0xb588, 0x7fa7, 0x0, 0x1);
        gbc.writeMem(0x1e5c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x58);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x8d4);
        EXPECT(gbc.pc(), 0x1e5d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0271
        gbc.setState(0xa5f7, 0x2c1b, 0x7090, 0xc73a, 0x1d2e, 0x95fc, 0x0, 0x1);
        gbc.writeMem(0xa5f7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0x1d);
        EXPECT(gbc.e(),  0x2e);
        EXPECT(gbc.h(),  0x95);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x2c1b);
        EXPECT(gbc.pc(), 0xa5f8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa5f7), 0x8c);
        // 8C 0272
        gbc.setState(0x42fb, 0x17fd, 0xb7a0, 0xe5f, 0xf996, 0xaf9c, 0x0, 0x1);
        gbc.writeMem(0x42fb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x66);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x17fd);
        EXPECT(gbc.pc(), 0x42fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0273
        gbc.setState(0x7003, 0xe70, 0x62e0, 0xcd32, 0x8774, 0x3f20, 0x0, 0x0);
        gbc.writeMem(0x7003, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x74);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x20);
        EXPECT(gbc.sp(), 0xe70);
        EXPECT(gbc.pc(), 0x7004);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0274
        gbc.setState(0x8965, 0x4b33, 0x4bc0, 0xdb1f, 0x2af3, 0xaf4, 0x0, 0x1);
        gbc.writeMem(0x8965, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0xdb);
        EXPECT(gbc.c(),  0x1f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4b33);
        EXPECT(gbc.pc(), 0x8966);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8965), 0x8c);
        // 8C 0275
        gbc.setState(0xb6a8, 0x7c17, 0x5e80, 0x46c2, 0x118e, 0xfdfc, 0x1, 0x1);
        gbc.writeMem(0xb6a8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x7c17);
        EXPECT(gbc.pc(), 0xb6a9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb6a8), 0x8c);
        // 8C 0276
        gbc.setState(0xa9fc, 0xf1ab, 0x3a10, 0xdd20, 0xd782, 0x2dab, 0x1, 0x1);
        gbc.writeMem(0xa9fc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xf1ab);
        EXPECT(gbc.pc(), 0xa9fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa9fc), 0x8c);
        // 8C 0278
        gbc.setState(0x81b0, 0x151c, 0x22b0, 0xbee9, 0x3980, 0xe646, 0x0, 0x0);
        gbc.writeMem(0x81b0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0xe6);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x151c);
        EXPECT(gbc.pc(), 0x81b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x81b0), 0x8c);
        // 8C 0279
        gbc.setState(0x7fcc, 0x1f3c, 0x5120, 0x3921, 0x2c6f, 0x5706, 0x0, 0x0);
        gbc.writeMem(0x7fcc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x2c);
        EXPECT(gbc.e(),  0x6f);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0x1f3c);
        EXPECT(gbc.pc(), 0x7fcd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 027A
        gbc.setState(0x6bf4, 0x3aaa, 0x3460, 0xfbe3, 0xd139, 0xbe93, 0x0, 0x0);
        gbc.writeMem(0x6bf4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf2);
        EXPECT(gbc.b(),  0xfb);
        EXPECT(gbc.c(),  0xe3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x39);
        EXPECT(gbc.h(),  0xbe);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x3aaa);
        EXPECT(gbc.pc(), 0x6bf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 027B
        gbc.setState(0x1d40, 0x9920, 0x14e0, 0x6786, 0x9930, 0xedeb, 0x0, 0x0);
        gbc.writeMem(0x1d40, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0x30);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x9920);
        EXPECT(gbc.pc(), 0x1d41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 027C
        gbc.setState(0x195d, 0x8329, 0x6290, 0x7a39, 0x5ab8, 0x25b7, 0x0, 0x0);
        gbc.writeMem(0x195d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x8329);
        EXPECT(gbc.pc(), 0x195e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 027D
        gbc.setState(0xe23c, 0x499, 0x4710, 0x5b68, 0x2a5f, 0x442a, 0x1, 0x1);
        gbc.writeMem(0xe23c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x2a);
        EXPECT(gbc.sp(), 0x499);
        EXPECT(gbc.pc(), 0xe23d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe23c), 0x8c);
        // 8C 027E
        gbc.setState(0x1af7, 0x38b1, 0x2360, 0xec2c, 0xbaea, 0x1541, 0x0, 0x1);
        gbc.writeMem(0x1af7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xba);
        EXPECT(gbc.e(),  0xea);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x38b1);
        EXPECT(gbc.pc(), 0x1af8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 027F
        gbc.setState(0x4ff4, 0xb978, 0xf170, 0x2daa, 0xed77, 0x6c41, 0x1, 0x1);
        gbc.writeMem(0x4ff4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xb978);
        EXPECT(gbc.pc(), 0x4ff5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0280
        gbc.setState(0x4a3e, 0xb88a, 0xc0e0, 0x485d, 0xc5d7, 0xc1b8, 0x0, 0x0);
        gbc.writeMem(0x4a3e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x5d);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xd7);
        EXPECT(gbc.h(),  0xc1);
        EXPECT(gbc.l(),  0xb8);
        EXPECT(gbc.sp(), 0xb88a);
        EXPECT(gbc.pc(), 0x4a3f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0282
        gbc.setState(0x70d0, 0xc310, 0x270, 0x5990, 0x374c, 0x2d6f, 0x0, 0x1);
        gbc.writeMem(0x70d0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xc310);
        EXPECT(gbc.pc(), 0x70d1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0283
        gbc.setState(0x6ee3, 0x5031, 0x1570, 0xa17c, 0xcb10, 0x439c, 0x0, 0x1);
        gbc.writeMem(0x6ee3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x59);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x9c);
        EXPECT(gbc.sp(), 0x5031);
        EXPECT(gbc.pc(), 0x6ee4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0284
        gbc.setState(0x3822, 0x9c27, 0xe850, 0xd2be, 0xdb99, 0xcdb0, 0x1, 0x1);
        gbc.writeMem(0x3822, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb6);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9c27);
        EXPECT(gbc.pc(), 0x3823);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0285
        gbc.setState(0x51af, 0x214, 0x8d40, 0x63d6, 0x98d1, 0x5ee4, 0x0, 0x0);
        gbc.writeMem(0x51af, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xeb);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xd6);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x5e);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x214);
        EXPECT(gbc.pc(), 0x51b0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0286
        gbc.setState(0xefa1, 0x30c, 0x2e60, 0x305c, 0xde6c, 0x1027, 0x1, 0x0);
        gbc.writeMem(0xefa1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3e);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x5c);
        EXPECT(gbc.d(),  0xde);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0x10);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x30c);
        EXPECT(gbc.pc(), 0xefa2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefa1), 0x8c);
        // 8C 0287
        gbc.setState(0x85b3, 0xd367, 0xc750, 0x7091, 0x70e2, 0x1718, 0x0, 0x0);
        gbc.writeMem(0x85b3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0xd367);
        EXPECT(gbc.pc(), 0x85b4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x85b3), 0x8c);
        // 8C 0288
        gbc.setState(0xa61a, 0xaf4d, 0x1b30, 0xf844, 0xa52, 0xeda3, 0x0, 0x1);
        gbc.writeMem(0xa61a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x44);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0xa3);
        EXPECT(gbc.sp(), 0xaf4d);
        EXPECT(gbc.pc(), 0xa61b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa61a), 0x8c);
        // 8C 0289
        gbc.setState(0x882a, 0x89e, 0xbb60, 0x35da, 0xb662, 0xee88, 0x0, 0x1);
        gbc.writeMem(0x882a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa9);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0xb6);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xee);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x89e);
        EXPECT(gbc.pc(), 0x882b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x882a), 0x8c);
        // 8C 028A
        gbc.setState(0x444e, 0xd0d, 0xfc20, 0xe43a, 0xf126, 0xbd19, 0x0, 0x1);
        gbc.writeMem(0x444e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x3a);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x19);
        EXPECT(gbc.sp(), 0xd0d);
        EXPECT(gbc.pc(), 0x444f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 028B
        gbc.setState(0x4ef1, 0x5b29, 0x8f0, 0xd97c, 0x8365, 0xd8a0, 0x1, 0x1);
        gbc.writeMem(0x4ef1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x83);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x5b29);
        EXPECT(gbc.pc(), 0x4ef2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 028C
        gbc.setState(0xbd9, 0xd9fc, 0x76d0, 0xd59a, 0xdc16, 0xc03d, 0x1, 0x0);
        gbc.writeMem(0xbd9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x37);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x9a);
        EXPECT(gbc.d(),  0xdc);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xc0);
        EXPECT(gbc.l(),  0x3d);
        EXPECT(gbc.sp(), 0xd9fc);
        EXPECT(gbc.pc(), 0xbda);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 028D
        gbc.setState(0x630, 0xaa7a, 0x58b0, 0x96a0, 0xd652, 0x1ce, 0x1, 0x1);
        gbc.writeMem(0x630, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0x96);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xaa7a);
        EXPECT(gbc.pc(), 0x631);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 028F
        gbc.setState(0xa211, 0x31f5, 0xd880, 0x3cc1, 0xffc, 0x49c5, 0x1, 0x0);
        gbc.writeMem(0xa211, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0x49);
        EXPECT(gbc.l(),  0xc5);
        EXPECT(gbc.sp(), 0x31f5);
        EXPECT(gbc.pc(), 0xa212);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa211), 0x8c);
        // 8C 0290
        gbc.setState(0x74e0, 0x671d, 0x3e70, 0x58d9, 0xedb4, 0x7514, 0x0, 0x0);
        gbc.writeMem(0x74e0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x58);
        EXPECT(gbc.c(),  0xd9);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x14);
        EXPECT(gbc.sp(), 0x671d);
        EXPECT(gbc.pc(), 0x74e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0291
        gbc.setState(0x819c, 0x33e0, 0x1a40, 0x3b4d, 0x1797, 0xf16c, 0x0, 0x0);
        gbc.writeMem(0x819c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0x97);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x33e0);
        EXPECT(gbc.pc(), 0x819d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x819c), 0x8c);
        // 8C 0292
        gbc.setState(0xde41, 0x2f87, 0x9230, 0xb600, 0x4410, 0x721d, 0x1, 0x0);
        gbc.writeMem(0xde41, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0x0);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0x2f87);
        EXPECT(gbc.pc(), 0xde42);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xde41), 0x8c);
        // 8C 0293
        gbc.setState(0x14c7, 0xb4dc, 0xb4c0, 0xad8c, 0xa75c, 0xae3, 0x0, 0x1);
        gbc.writeMem(0x14c7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x8c);
        EXPECT(gbc.d(),  0xa7);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xb4dc);
        EXPECT(gbc.pc(), 0x14c8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0294
        gbc.setState(0xc2c4, 0x6224, 0x2250, 0x2f80, 0x3911, 0xbc9e, 0x1, 0x0);
        gbc.writeMem(0xc2c4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x6224);
        EXPECT(gbc.pc(), 0xc2c5);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2c4), 0x8c);
        // 8C 0295
        gbc.setState(0x4d76, 0xd622, 0xa10, 0xda02, 0x5a6a, 0x35e7, 0x0, 0x1);
        gbc.writeMem(0x4d76, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x6a);
        EXPECT(gbc.h(),  0x35);
        EXPECT(gbc.l(),  0xe7);
        EXPECT(gbc.sp(), 0xd622);
        EXPECT(gbc.pc(), 0x4d77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0296
        gbc.setState(0xd0, 0xcb2e, 0xce90, 0x71f3, 0xebbd, 0x1fc6, 0x1, 0x1);
        gbc.writeMem(0xd0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x71);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcb2e);
        EXPECT(gbc.pc(), 0xd1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0297
        gbc.setState(0xc45d, 0x4747, 0xafa0, 0xe39, 0xda44, 0xe5f4, 0x1, 0x1);
        gbc.writeMem(0xc45d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0xe);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xe5);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x4747);
        EXPECT(gbc.pc(), 0xc45e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc45d), 0x8c);
        // 8C 0298
        gbc.setState(0x6466, 0xe7ba, 0x2650, 0x5657, 0x2e79, 0xc6, 0x1, 0x1);
        gbc.writeMem(0x6466, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x57);
        EXPECT(gbc.d(),  0x2e);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xe7ba);
        EXPECT(gbc.pc(), 0x6467);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0299
        gbc.setState(0x9367, 0xfc99, 0x52c0, 0x65ed, 0xabcd, 0x187c, 0x1, 0x0);
        gbc.writeMem(0x9367, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xed);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0xfc99);
        EXPECT(gbc.pc(), 0x9368);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9367), 0x8c);
        // 8C 029A
        gbc.setState(0x866e, 0xff90, 0xc330, 0xa205, 0x5312, 0x561a, 0x1, 0x0);
        gbc.writeMem(0x866e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0xff90);
        EXPECT(gbc.pc(), 0x866f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x866e), 0x8c);
        // 8C 029B
        gbc.setState(0x465, 0xe51, 0x8310, 0x5b97, 0x9e0e, 0x21d6, 0x0, 0x1);
        gbc.writeMem(0x465, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x97);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0xe);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xe51);
        EXPECT(gbc.pc(), 0x466);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 029C
        gbc.setState(0xa5c9, 0x1a60, 0x52a0, 0x4d, 0x2547, 0xac9b, 0x1, 0x0);
        gbc.writeMem(0xa5c9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x25);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x1a60);
        EXPECT(gbc.pc(), 0xa5ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5c9), 0x8c);
        // 8C 029D
        gbc.setState(0x4e98, 0x474e, 0xf6d0, 0x6568, 0xf2c6, 0x81b3, 0x0, 0x0);
        gbc.writeMem(0x4e98, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x78);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0x68);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x474e);
        EXPECT(gbc.pc(), 0x4e99);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 029E
        gbc.setState(0xea29, 0xa2b1, 0xc9e0, 0x822b, 0xd7fd, 0xca6f, 0x1, 0x1);
        gbc.writeMem(0xea29, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x82);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0xd7);
        EXPECT(gbc.e(),  0xfd);
        EXPECT(gbc.h(),  0xca);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xa2b1);
        EXPECT(gbc.pc(), 0xea2a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xea29), 0x8c);
        // 8C 029F
        gbc.setState(0x54bc, 0xbda7, 0x55c0, 0xe8fb, 0xc70b, 0x717e, 0x1, 0x1);
        gbc.writeMem(0x54bc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc6);
        EXPECT(gbc.b(),  0xe8);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xbda7);
        EXPECT(gbc.pc(), 0x54bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 02A0
        gbc.setState(0x2366, 0xc43b, 0x87e0, 0x6214, 0xcf64, 0xd44b, 0x0, 0x0);
        gbc.writeMem(0x2366, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x62);
        EXPECT(gbc.c(),  0x14);
        EXPECT(gbc.d(),  0xcf);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0x4b);
        EXPECT(gbc.sp(), 0xc43b);
        EXPECT(gbc.pc(), 0x2367);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 02A1
        gbc.setState(0x7d51, 0x4f67, 0x2560, 0x252f, 0xf367, 0xa6bd, 0x0, 0x1);
        gbc.writeMem(0x7d51, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x25);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa6);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x4f67);
        EXPECT(gbc.pc(), 0x7d52);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 02A2
        gbc.setState(0xa5bf, 0xa6d5, 0x3d90, 0xb045, 0x3e8d, 0x4c70, 0x0, 0x1);
        gbc.writeMem(0xa5bf, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xa6d5);
        EXPECT(gbc.pc(), 0xa5c0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5bf), 0x8c);
        // 8C 02A3
        gbc.setState(0xeaf9, 0x58fa, 0x6490, 0xde5b, 0x7464, 0x60f1, 0x0, 0x0);
        gbc.writeMem(0xeaf9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xde);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x58fa);
        EXPECT(gbc.pc(), 0xeafa);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeaf9), 0x8c);
        // 8C 02A4
        gbc.setState(0x9e32, 0xac04, 0x1da0, 0xdf15, 0x37b4, 0x3225, 0x0, 0x0);
        gbc.writeMem(0x9e32, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xdf);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x37);
        EXPECT(gbc.e(),  0xb4);
        EXPECT(gbc.h(),  0x32);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0xac04);
        EXPECT(gbc.pc(), 0x9e33);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e32), 0x8c);
        // 8C 02A5
        gbc.setState(0x4ad9, 0x73fb, 0x50c0, 0xc7e8, 0xe1e4, 0x3b72, 0x1, 0x1);
        gbc.writeMem(0x4ad9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xe8);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x3b);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x73fb);
        EXPECT(gbc.pc(), 0x4ada);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 02A6
        gbc.setState(0x35f2, 0xd069, 0x76f0, 0xe2e5, 0xed34, 0xf4ad, 0x0, 0x1);
        gbc.writeMem(0x35f2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0xed);
        EXPECT(gbc.e(),  0x34);
        EXPECT(gbc.h(),  0xf4);
        EXPECT(gbc.l(),  0xad);
        EXPECT(gbc.sp(), 0xd069);
        EXPECT(gbc.pc(), 0x35f3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 02A7
        gbc.setState(0xb90d, 0xb13a, 0x1090, 0x3ada, 0x1abc, 0xfd1c, 0x0, 0x1);
        gbc.writeMem(0xb90d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe);
        EXPECT(gbc.b(),  0x3a);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0xb13a);
        EXPECT(gbc.pc(), 0xb90e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb90d), 0x8c);
        // 8C 02A8
        gbc.setState(0x9205, 0xcaac, 0x9f80, 0xaa1d, 0x79a7, 0x71b6, 0x0, 0x1);
        gbc.writeMem(0x9205, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xcaac);
        EXPECT(gbc.pc(), 0x9206);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9205), 0x8c);
        // 8C 02AA
        gbc.setState(0x89b4, 0xb313, 0x5680, 0xb0e7, 0x1bb8, 0x96c8, 0x0, 0x1);
        gbc.writeMem(0x89b4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xb8);
        EXPECT(gbc.h(),  0x96);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0xb313);
        EXPECT(gbc.pc(), 0x89b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x89b4), 0x8c);
        // 8C 02AB
        gbc.setState(0xc307, 0xc6b8, 0x24c0, 0x45da, 0x7556, 0xebed, 0x0, 0x1);
        gbc.writeMem(0xc307, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x56);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xed);
        EXPECT(gbc.sp(), 0xc6b8);
        EXPECT(gbc.pc(), 0xc308);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc307), 0x8c);
        // 8C 02AC
        gbc.setState(0x9a1c, 0xa6da, 0x3720, 0x4d5e, 0x6810, 0xbca2, 0x0, 0x0);
        gbc.writeMem(0x9a1c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf3);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0x5e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xa2);
        EXPECT(gbc.sp(), 0xa6da);
        EXPECT(gbc.pc(), 0x9a1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9a1c), 0x8c);
        // 8C 02AD
        gbc.setState(0xe33f, 0x8b64, 0xff20, 0x9b8d, 0x7d44, 0xefe2, 0x0, 0x0);
        gbc.writeMem(0xe33f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0x9b);
        EXPECT(gbc.c(),  0x8d);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x8b64);
        EXPECT(gbc.pc(), 0xe340);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe33f), 0x8c);
        // 8C 02AE
        gbc.setState(0xe2a7, 0x6625, 0x8f0, 0x6c02, 0xc7b6, 0xbb0b, 0x1, 0x0);
        gbc.writeMem(0xe2a7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc4);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0x6625);
        EXPECT(gbc.pc(), 0xe2a8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe2a7), 0x8c);
        // 8C 02AF
        gbc.setState(0x18de, 0xe167, 0x6840, 0x785b, 0x98ec, 0x1b06, 0x1, 0x1);
        gbc.writeMem(0x18de, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x98);
        EXPECT(gbc.e(),  0xec);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x6);
        EXPECT(gbc.sp(), 0xe167);
        EXPECT(gbc.pc(), 0x18df);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 02B0
        gbc.setState(0x518b, 0x968e, 0x2480, 0xb01d, 0xbdcb, 0xc3c0, 0x1, 0x0);
        gbc.writeMem(0x518b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe7);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0xbd);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xc0);
        EXPECT(gbc.sp(), 0x968e);
        EXPECT(gbc.pc(), 0x518c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 02B1
        gbc.setState(0xdc6, 0x3412, 0x7020, 0xe721, 0x99eb, 0xfb69, 0x1, 0x1);
        gbc.writeMem(0xdc6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0x21);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x3412);
        EXPECT(gbc.pc(), 0xdc7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 02B2
        gbc.setState(0x50c6, 0x559d, 0x7d60, 0x5427, 0x3a1f, 0x8ad6, 0x1, 0x0);
        gbc.writeMem(0x50c6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0x54);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x3a);
        EXPECT(gbc.e(),  0x1f);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0x559d);
        EXPECT(gbc.pc(), 0x50c7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 02B3
        gbc.setState(0xaa42, 0x10c9, 0xa7b0, 0x7ac0, 0x3940, 0x7b90, 0x1, 0x0);
        gbc.writeMem(0xaa42, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0x10c9);
        EXPECT(gbc.pc(), 0xaa43);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaa42), 0x8c);
        // 8C 02B4
        gbc.setState(0x53bc, 0x1744, 0x6f60, 0xf7fc, 0xd1b9, 0xc18, 0x0, 0x0);
        gbc.writeMem(0x53bc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7b);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x18);
        EXPECT(gbc.sp(), 0x1744);
        EXPECT(gbc.pc(), 0x53bd);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 02B5
        gbc.setState(0x73a7, 0xafc6, 0x94e0, 0x596c, 0x7710, 0x2c9d, 0x0, 0x0);
        gbc.writeMem(0x73a7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x6c);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0x2c);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0xafc6);
        EXPECT(gbc.pc(), 0x73a8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 02B6
        gbc.setState(0x6145, 0x1447, 0x2780, 0x3ce4, 0x3d18, 0xad69, 0x1, 0x0);
        gbc.writeMem(0x6145, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0x3c);
        EXPECT(gbc.c(),  0xe4);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0x1447);
        EXPECT(gbc.pc(), 0x6146);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 02B7
        gbc.setState(0x180d, 0x5d1, 0xce20, 0xab94, 0xcbc2, 0xdf7a, 0x1, 0x1);
        gbc.writeMem(0x180d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x5d1);
        EXPECT(gbc.pc(), 0x180e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 02B8
        gbc.setState(0x201e, 0x5dd4, 0xff90, 0xe7a0, 0x162, 0xfa55, 0x1, 0x1);
        gbc.writeMem(0x201e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xe7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0xfa);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x5dd4);
        EXPECT(gbc.pc(), 0x201f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 02B9
        gbc.setState(0x325d, 0x8484, 0xe3e0, 0xf4af, 0xc1cf, 0x6ab5, 0x0, 0x1);
        gbc.writeMem(0x325d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0xcf);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x8484);
        EXPECT(gbc.pc(), 0x325e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 02BA
        gbc.setState(0xa5ce, 0xf3ec, 0x7220, 0x4822, 0xa8bd, 0x2300, 0x0, 0x1);
        gbc.writeMem(0xa5ce, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0xbd);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0x0);
        EXPECT(gbc.sp(), 0xf3ec);
        EXPECT(gbc.pc(), 0xa5cf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa5ce), 0x8c);
        // 8C 02BB
        gbc.setState(0xd4bc, 0x4b16, 0x92f0, 0x52fb, 0xf3a5, 0x4398, 0x1, 0x0);
        gbc.writeMem(0xd4bc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd6);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x43);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x4b16);
        EXPECT(gbc.pc(), 0xd4bd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd4bc), 0x8c);
        // 8C 02BC
        gbc.setState(0xc92e, 0x5ed4, 0xc4c0, 0x48f3, 0xcb28, 0xa86f, 0x0, 0x0);
        gbc.writeMem(0xc92e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x5ed4);
        EXPECT(gbc.pc(), 0xc92f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc92e), 0x8c);
        // 8C 02BD
        gbc.setState(0x53d6, 0x7e0a, 0xcb60, 0x9d74, 0xd09f, 0x72cd, 0x0, 0x1);
        gbc.writeMem(0x53d6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xd0);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xcd);
        EXPECT(gbc.sp(), 0x7e0a);
        EXPECT(gbc.pc(), 0x53d7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 02BE
        gbc.setState(0x9ba7, 0xcc9b, 0x4190, 0x5b1d, 0x6f76, 0xa5f, 0x0, 0x0);
        gbc.writeMem(0x9ba7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x5b);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0xcc9b);
        EXPECT(gbc.pc(), 0x9ba8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9ba7), 0x8c);
        // 8C 02BF
        gbc.setState(0x4f6, 0x7c2c, 0xdc40, 0x53a0, 0x7fd0, 0xa960, 0x1, 0x1);
        gbc.writeMem(0x4f6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x7f);
        EXPECT(gbc.e(),  0xd0);
        EXPECT(gbc.h(),  0xa9);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0x7c2c);
        EXPECT(gbc.pc(), 0x4f7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 02C0
        gbc.setState(0x760f, 0x1f2b, 0xa9d0, 0xe2bb, 0xce87, 0x1517, 0x0, 0x1);
        gbc.writeMem(0x760f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbf);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x87);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x1f2b);
        EXPECT(gbc.pc(), 0x7610);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 02C1
        gbc.setState(0x2c58, 0x5c24, 0xe980, 0x780, 0x4e4d, 0xaaaa, 0x1, 0x1);
        gbc.writeMem(0x2c58, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x4e);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x5c24);
        EXPECT(gbc.pc(), 0x2c59);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 02C2
        gbc.setState(0x910c, 0xffd7, 0x76c0, 0x464, 0x99c3, 0xd069, 0x1, 0x0);
        gbc.writeMem(0x910c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x64);
        EXPECT(gbc.d(),  0x99);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x69);
        EXPECT(gbc.sp(), 0xffd7);
        EXPECT(gbc.pc(), 0x910d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x910c), 0x8c);
        // 8C 02C3
        gbc.setState(0x5172, 0x4786, 0x29a0, 0xbe75, 0x328e, 0xa0bf, 0x0, 0x0);
        gbc.writeMem(0x5172, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc9);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xbf);
        EXPECT(gbc.sp(), 0x4786);
        EXPECT(gbc.pc(), 0x5173);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 02C4
        gbc.setState(0x744d, 0x93ab, 0x7880, 0x8991, 0x21cc, 0xab07, 0x0, 0x1);
        gbc.writeMem(0x744d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0x21);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xab);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x93ab);
        EXPECT(gbc.pc(), 0x744e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 02C5
        gbc.setState(0x3b2f, 0x2989, 0xc490, 0xe272, 0xaefc, 0xc493, 0x1, 0x0);
        gbc.writeMem(0x3b2f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xae);
        EXPECT(gbc.e(),  0xfc);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0x93);
        EXPECT(gbc.sp(), 0x2989);
        EXPECT(gbc.pc(), 0x3b30);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 02C6
        gbc.setState(0xcf9b, 0x5fc4, 0xc510, 0xa649, 0xe7f3, 0x1639, 0x0, 0x0);
        gbc.writeMem(0xcf9b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0xe7);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x16);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x5fc4);
        EXPECT(gbc.pc(), 0xcf9c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf9b), 0x8c);
        // 8C 02C7
        gbc.setState(0x42e6, 0xf470, 0xd840, 0x8361, 0xa115, 0x9dd1, 0x0, 0x0);
        gbc.writeMem(0x42e6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x61);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0x15);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xf470);
        EXPECT(gbc.pc(), 0x42e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 02C8
        gbc.setState(0x9fb7, 0xab65, 0xe2f0, 0x8a65, 0xfe08, 0x5226, 0x1, 0x0);
        gbc.writeMem(0x9fb7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0x65);
        EXPECT(gbc.d(),  0xfe);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x52);
        EXPECT(gbc.l(),  0x26);
        EXPECT(gbc.sp(), 0xab65);
        EXPECT(gbc.pc(), 0x9fb8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9fb7), 0x8c);
        // 8C 02C9
        gbc.setState(0xe4df, 0xe6fa, 0xb370, 0xbd45, 0xcd20, 0xaa23, 0x0, 0x1);
        gbc.writeMem(0xe4df, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5e);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0xcd);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xaa);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0xe6fa);
        EXPECT(gbc.pc(), 0xe4e0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe4df), 0x8c);
        // 8C 02CA
        gbc.setState(0x3a10, 0xea7b, 0x6e60, 0x72f3, 0xd10c, 0x27ae, 0x0, 0x1);
        gbc.writeMem(0x3a10, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0xf3);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0xc);
        EXPECT(gbc.h(),  0x27);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xea7b);
        EXPECT(gbc.pc(), 0x3a11);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 02CB
        gbc.setState(0x9610, 0x6ff9, 0x5080, 0x811b, 0x3104, 0x9c56, 0x0, 0x0);
        gbc.writeMem(0x9610, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xec);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0x9c);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x6ff9);
        EXPECT(gbc.pc(), 0x9611);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9610), 0x8c);
        // 8C 02CC
        gbc.setState(0xd954, 0x3c7c, 0x3f50, 0x5d39, 0x5a95, 0xfb73, 0x1, 0x1);
        gbc.writeMem(0xd954, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0x5d);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0xfb);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0x3c7c);
        EXPECT(gbc.pc(), 0xd955);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd954), 0x8c);
        // 8C 02CD
        gbc.setState(0xcfa0, 0x35ef, 0xfee0, 0xf777, 0x2c3, 0xf15b, 0x1, 0x0);
        gbc.writeMem(0xcfa0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xef);
        EXPECT(gbc.b(),  0xf7);
        EXPECT(gbc.c(),  0x77);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc3);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x35ef);
        EXPECT(gbc.pc(), 0xcfa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcfa0), 0x8c);
        // 8C 02CF
        gbc.setState(0x6b4a, 0xebda, 0x920, 0x7a30, 0x1a98, 0xb25b, 0x1, 0x1);
        gbc.writeMem(0x6b4a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0xebda);
        EXPECT(gbc.pc(), 0x6b4b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 02D0
        gbc.setState(0xe9ec, 0x4841, 0x4710, 0xf62e, 0x6827, 0x2f15, 0x0, 0x0);
        gbc.writeMem(0xe9ec, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x77);
        EXPECT(gbc.b(),  0xf6);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x68);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0x4841);
        EXPECT(gbc.pc(), 0xe9ed);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe9ec), 0x8c);
        // 8C 02D1
        gbc.setState(0x6bcd, 0xa224, 0xb140, 0x79f0, 0x8b52, 0x91e0, 0x0, 0x1);
        gbc.writeMem(0x6bcd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xf0);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x91);
        EXPECT(gbc.l(),  0xe0);
        EXPECT(gbc.sp(), 0xa224);
        EXPECT(gbc.pc(), 0x6bce);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 02D2
        gbc.setState(0xe755, 0xa5f6, 0xb4b0, 0x11bf, 0x3314, 0x2873, 0x0, 0x0);
        gbc.writeMem(0xe755, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdd);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xbf);
        EXPECT(gbc.d(),  0x33);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x28);
        EXPECT(gbc.l(),  0x73);
        EXPECT(gbc.sp(), 0xa5f6);
        EXPECT(gbc.pc(), 0xe756);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe755), 0x8c);
        // 8C 02D3
        gbc.setState(0xcb61, 0x8714, 0x5ee0, 0xe539, 0x8c64, 0x4d80, 0x1, 0x0);
        gbc.writeMem(0xcb61, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xab);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x39);
        EXPECT(gbc.d(),  0x8c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0x4d);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x8714);
        EXPECT(gbc.pc(), 0xcb62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb61), 0x8c);
        // 8C 02D4
        gbc.setState(0x623c, 0x2351, 0xe9b0, 0x90f2, 0xd114, 0x4517, 0x0, 0x1);
        gbc.writeMem(0x623c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2f);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xf2);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x14);
        EXPECT(gbc.h(),  0x45);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x2351);
        EXPECT(gbc.pc(), 0x623d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 02D5
        gbc.setState(0x5646, 0xa03c, 0xa520, 0xeef1, 0x70ac, 0x32, 0x1, 0x0);
        gbc.writeMem(0x5646, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa5);
        EXPECT(gbc.b(),  0xee);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0x70);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xa03c);
        EXPECT(gbc.pc(), 0x5647);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 02D6
        gbc.setState(0xacc2, 0xee36, 0x98e0, 0x45f8, 0xe0e2, 0xc3d6, 0x1, 0x1);
        gbc.writeMem(0xacc2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x45);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0xe0);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0xc3);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xee36);
        EXPECT(gbc.pc(), 0xacc3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xacc2), 0x8c);
        // 8C 02D7
        gbc.setState(0xb831, 0xa3a9, 0xbe70, 0xff56, 0x6c5a, 0x619e, 0x0, 0x0);
        gbc.writeMem(0xb831, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x20);
        EXPECT(gbc.b(),  0xff);
        EXPECT(gbc.c(),  0x56);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x5a);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0xa3a9);
        EXPECT(gbc.pc(), 0xb832);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb831), 0x8c);
        // 8C 02D8
        gbc.setState(0xd91c, 0x2659, 0x58e0, 0x7f3b, 0xcb95, 0x30ef, 0x1, 0x0);
        gbc.writeMem(0xd91c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x88);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x3b);
        EXPECT(gbc.d(),  0xcb);
        EXPECT(gbc.e(),  0x95);
        EXPECT(gbc.h(),  0x30);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x2659);
        EXPECT(gbc.pc(), 0xd91d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd91c), 0x8c);
        // 8C 02D9
        gbc.setState(0xe9db, 0x6fb0, 0x9440, 0x2282, 0xaf8c, 0x8abb, 0x0, 0x1);
        gbc.writeMem(0xe9db, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1e);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xaf);
        EXPECT(gbc.e(),  0x8c);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0xbb);
        EXPECT(gbc.sp(), 0x6fb0);
        EXPECT(gbc.pc(), 0xe9dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe9db), 0x8c);
        // 8C 02DA
        gbc.setState(0x6408, 0xeb53, 0xc740, 0x834e, 0xf0a3, 0x9459, 0x0, 0x1);
        gbc.writeMem(0x6408, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5b);
        EXPECT(gbc.b(),  0x83);
        EXPECT(gbc.c(),  0x4e);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0xeb53);
        EXPECT(gbc.pc(), 0x6409);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 02DB
        gbc.setState(0xcb2b, 0x6e3, 0xe6e0, 0x4bb6, 0x51b6, 0xd898, 0x0, 0x1);
        gbc.writeMem(0xcb2b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbe);
        EXPECT(gbc.b(),  0x4b);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xb6);
        EXPECT(gbc.h(),  0xd8);
        EXPECT(gbc.l(),  0x98);
        EXPECT(gbc.sp(), 0x6e3);
        EXPECT(gbc.pc(), 0xcb2c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xcb2b), 0x8c);
        // 8C 02DC
        gbc.setState(0x17f9, 0x24d7, 0xaba0, 0x7a15, 0x5e1c, 0x8eeb, 0x1, 0x0);
        gbc.writeMem(0x17f9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x39);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x1c);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x24d7);
        EXPECT(gbc.pc(), 0x17fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 02DD
        gbc.setState(0xd6ea, 0x67c2, 0x5980, 0xe0ce, 0x9c40, 0x4ff7, 0x1, 0x1);
        gbc.writeMem(0xd6ea, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xe0);
        EXPECT(gbc.c(),  0xce);
        EXPECT(gbc.d(),  0x9c);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x67c2);
        EXPECT(gbc.pc(), 0xd6eb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6ea), 0x8c);
        // 8C 02DE
        gbc.setState(0xa472, 0x5920, 0xbed0, 0x5590, 0x64d5, 0xb85, 0x1, 0x0);
        gbc.writeMem(0xa472, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xca);
        EXPECT(gbc.b(),  0x55);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xb);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0x5920);
        EXPECT(gbc.pc(), 0xa473);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa472), 0x8c);
        // 8C 02DF
        gbc.setState(0xb524, 0x390, 0x9070, 0x63c5, 0xdb68, 0xb60a, 0x0, 0x0);
        gbc.writeMem(0xb524, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x63);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0xb6);
        EXPECT(gbc.l(),  0xa);
        EXPECT(gbc.sp(), 0x390);
        EXPECT(gbc.pc(), 0xb525);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb524), 0x8c);
        // 8C 02E0
        gbc.setState(0xd86d, 0xa8e7, 0xa660, 0xa011, 0xa6dd, 0x6b42, 0x0, 0x0);
        gbc.writeMem(0xd86d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xa0);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0xa6);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x42);
        EXPECT(gbc.sp(), 0xa8e7);
        EXPECT(gbc.pc(), 0xd86e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd86d), 0x8c);
        // 8C 02E1
        gbc.setState(0xd835, 0xdd96, 0xbff0, 0xbd99, 0x3b0, 0x6340, 0x1, 0x1);
        gbc.writeMem(0xd835, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x3);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xdd96);
        EXPECT(gbc.pc(), 0xd836);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd835), 0x8c);
        // 8C 02E2
        gbc.setState(0x926c, 0x9e47, 0x5310, 0x54, 0x5016, 0xd9e5, 0x1, 0x1);
        gbc.writeMem(0x926c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x0);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x9e47);
        EXPECT(gbc.pc(), 0x926d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x926c), 0x8c);
        // 8C 02E3
        gbc.setState(0xc515, 0x5cb4, 0x2a20, 0x3f35, 0x41b3, 0x82c6, 0x0, 0x1);
        gbc.writeMem(0xc515, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0x41);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0x5cb4);
        EXPECT(gbc.pc(), 0xc516);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc515), 0x8c);
        // 8C 02E4
        gbc.setState(0xb133, 0x9c3c, 0x9930, 0xa175, 0x44c, 0xd607, 0x1, 0x0);
        gbc.writeMem(0xb133, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x70);
        EXPECT(gbc.b(),  0xa1);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0x7);
        EXPECT(gbc.sp(), 0x9c3c);
        EXPECT(gbc.pc(), 0xb134);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb133), 0x8c);
        // 8C 02E5
        gbc.setState(0x800b, 0x1471, 0xa020, 0x567b, 0x1a53, 0x1537, 0x0, 0x1);
        gbc.writeMem(0x800b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb5);
        EXPECT(gbc.b(),  0x56);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0x15);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x1471);
        EXPECT(gbc.pc(), 0x800c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x800b), 0x8c);
        // 8C 02E6
        gbc.setState(0x9112, 0xe8dc, 0x6640, 0x6705, 0xfb2c, 0xdda7, 0x1, 0x0);
        gbc.writeMem(0x9112, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0xfb);
        EXPECT(gbc.e(),  0x2c);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0xe8dc);
        EXPECT(gbc.pc(), 0x9113);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9112), 0x8c);
        // 8C 02E7
        gbc.setState(0x6789, 0x262d, 0x4b60, 0x20c1, 0xebad, 0x368b, 0x1, 0x0);
        gbc.writeMem(0x6789, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x20);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0xad);
        EXPECT(gbc.h(),  0x36);
        EXPECT(gbc.l(),  0x8b);
        EXPECT(gbc.sp(), 0x262d);
        EXPECT(gbc.pc(), 0x678a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 02E8
        gbc.setState(0x4048, 0x1a54, 0x7f70, 0x74c8, 0xc5b0, 0x610d, 0x1, 0x1);
        gbc.writeMem(0x4048, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x74);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xc5);
        EXPECT(gbc.e(),  0xb0);
        EXPECT(gbc.h(),  0x61);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x1a54);
        EXPECT(gbc.pc(), 0x4049);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 02EA
        gbc.setState(0x17c8, 0x3652, 0xa330, 0xaa0e, 0x1f62, 0x2d75, 0x1, 0x0);
        gbc.writeMem(0x17c8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0x1f);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x75);
        EXPECT(gbc.sp(), 0x3652);
        EXPECT(gbc.pc(), 0x17c9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 02EB
        gbc.setState(0xa808, 0xe043, 0x7fa0, 0x64ca, 0x710, 0xc670, 0x1, 0x1);
        gbc.writeMem(0xa808, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x45);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xc6);
        EXPECT(gbc.l(),  0x70);
        EXPECT(gbc.sp(), 0xe043);
        EXPECT(gbc.pc(), 0xa809);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa808), 0x8c);
        // 8C 02EC
        gbc.setState(0x5c37, 0xb4d0, 0x29c0, 0xe520, 0xceac, 0x70ce, 0x1, 0x1);
        gbc.writeMem(0x5c37, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x99);
        EXPECT(gbc.b(),  0xe5);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0xac);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xb4d0);
        EXPECT(gbc.pc(), 0x5c38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 02ED
        gbc.setState(0xaa2, 0x5168, 0x71f0, 0x325f, 0x29b3, 0x25, 0x1, 0x1);
        gbc.writeMem(0xaa2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x32);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x25);
        EXPECT(gbc.sp(), 0x5168);
        EXPECT(gbc.pc(), 0xaa3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 02EE
        gbc.setState(0xa356, 0x43f6, 0x9fd0, 0x7310, 0x4381, 0x6527, 0x0, 0x0);
        gbc.writeMem(0xa356, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0x43);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0x27);
        EXPECT(gbc.sp(), 0x43f6);
        EXPECT(gbc.pc(), 0xa357);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa356), 0x8c);
        // 8C 02EF
        gbc.setState(0xa63a, 0x57fd, 0x4810, 0x9eef, 0x82e8, 0xe49e, 0x1, 0x1);
        gbc.writeMem(0xa63a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x82);
        EXPECT(gbc.e(),  0xe8);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x9e);
        EXPECT(gbc.sp(), 0x57fd);
        EXPECT(gbc.pc(), 0xa63b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa63a), 0x8c);
        // 8C 02F1
        gbc.setState(0x70f9, 0x9225, 0xd210, 0xfeba, 0xd185, 0x5592, 0x1, 0x0);
        gbc.writeMem(0x70f9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x28);
        EXPECT(gbc.b(),  0xfe);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0x9225);
        EXPECT(gbc.pc(), 0x70fa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 02F2
        gbc.setState(0x894b, 0x3331, 0xa800, 0xd533, 0xf35f, 0xea5f, 0x1, 0x0);
        gbc.writeMem(0x894b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0xd5);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xf3);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x5f);
        EXPECT(gbc.sp(), 0x3331);
        EXPECT(gbc.pc(), 0x894c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x894b), 0x8c);
        // 8C 02F3
        gbc.setState(0xc1b0, 0x6364, 0x3f50, 0xfd41, 0x5f66, 0x11e, 0x0, 0x0);
        gbc.writeMem(0xc1b0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0x41);
        EXPECT(gbc.d(),  0x5f);
        EXPECT(gbc.e(),  0x66);
        EXPECT(gbc.h(),  0x1);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x6364);
        EXPECT(gbc.pc(), 0xc1b1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc1b0), 0x8c);
        // 8C 02F4
        gbc.setState(0x4cf4, 0x1062, 0xa960, 0x932c, 0xb83, 0x8f9d, 0x0, 0x1);
        gbc.writeMem(0x4cf4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0x83);
        EXPECT(gbc.h(),  0x8f);
        EXPECT(gbc.l(),  0x9d);
        EXPECT(gbc.sp(), 0x1062);
        EXPECT(gbc.pc(), 0x4cf5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 02F5
        gbc.setState(0x680e, 0x3e6f, 0xa370, 0x7f22, 0x4d3d, 0xc817, 0x0, 0x0);
        gbc.writeMem(0x680e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x22);
        EXPECT(gbc.d(),  0x4d);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xc8);
        EXPECT(gbc.l(),  0x17);
        EXPECT(gbc.sp(), 0x3e6f);
        EXPECT(gbc.pc(), 0x680f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 02F6
        gbc.setState(0xcbb9, 0xac5d, 0x3e0, 0xd9c2, 0x5abc, 0xe1f8, 0x1, 0x1);
        gbc.writeMem(0xcbb9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe4);
        EXPECT(gbc.b(),  0xd9);
        EXPECT(gbc.c(),  0xc2);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0xbc);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0xac5d);
        EXPECT(gbc.pc(), 0xcbba);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcbb9), 0x8c);
        // 8C 02F9
        gbc.setState(0x37d, 0xdedf, 0xd970, 0x608, 0xd6eb, 0xe732, 0x1, 0x1);
        gbc.writeMem(0x37d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc1);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0xd6);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0xe7);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xdedf);
        EXPECT(gbc.pc(), 0x37e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 02FA
        gbc.setState(0xdcfd, 0x50db, 0x4ec0, 0x7dec, 0x6d0a, 0x14db, 0x1, 0x1);
        gbc.writeMem(0xdcfd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x62);
        EXPECT(gbc.b(),  0x7d);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xdb);
        EXPECT(gbc.sp(), 0x50db);
        EXPECT(gbc.pc(), 0xdcfe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xdcfd), 0x8c);
        // 8C 02FB
        gbc.setState(0x5505, 0xa78d, 0x1c70, 0xd899, 0xf98e, 0xf6e4, 0x0, 0x1);
        gbc.writeMem(0x5505, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x8e);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0xa78d);
        EXPECT(gbc.pc(), 0x5506);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 02FC
        gbc.setState(0x8970, 0xc5c, 0xa3c0, 0x4dca, 0x7775, 0xf301, 0x0, 0x0);
        gbc.writeMem(0x8970, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x4d);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x1);
        EXPECT(gbc.sp(), 0xc5c);
        EXPECT(gbc.pc(), 0x8971);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8970), 0x8c);
        // 8C 02FD
        gbc.setState(0x19d3, 0x647, 0x8640, 0xfcb6, 0x9b63, 0xb532, 0x1, 0x1);
        gbc.writeMem(0x19d3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3b);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x63);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x647);
        EXPECT(gbc.pc(), 0x19d4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 02FE
        gbc.setState(0x78ba, 0xe7d9, 0x3cf0, 0xe3c0, 0xee2, 0x5d, 0x1, 0x0);
        gbc.writeMem(0x78ba, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0xc0);
        EXPECT(gbc.d(),  0xe);
        EXPECT(gbc.e(),  0xe2);
        EXPECT(gbc.h(),  0x0);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xe7d9);
        EXPECT(gbc.pc(), 0x78bb);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 02FF
        gbc.setState(0xc2db, 0x883a, 0x650, 0x4ce7, 0xf916, 0x62f6, 0x0, 0x0);
        gbc.writeMem(0xc2db, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x69);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xe7);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0x62);
        EXPECT(gbc.l(),  0xf6);
        EXPECT(gbc.sp(), 0x883a);
        EXPECT(gbc.pc(), 0xc2dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc2db), 0x8c);
        // 8C 0300
        gbc.setState(0x5771, 0x5675, 0xce50, 0x3b7, 0x1b0a, 0x7b38, 0x1, 0x1);
        gbc.writeMem(0x5771, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4a);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0x5675);
        EXPECT(gbc.pc(), 0x5772);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0302
        gbc.setState(0x3f6c, 0xef87, 0x1c10, 0x942f, 0x79e0, 0x7531, 0x1, 0x1);
        gbc.writeMem(0x3f6c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x92);
        EXPECT(gbc.b(),  0x94);
        EXPECT(gbc.c(),  0x2f);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x31);
        EXPECT(gbc.sp(), 0xef87);
        EXPECT(gbc.pc(), 0x3f6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0303
        gbc.setState(0xa6f0, 0xff2c, 0x1a60, 0x923e, 0xee72, 0xae32, 0x0, 0x0);
        gbc.writeMem(0xa6f0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0x92);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xee);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0xff2c);
        EXPECT(gbc.pc(), 0xa6f1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6f0), 0x8c);
        // 8C 0304
        gbc.setState(0x6474, 0x5417, 0x88f0, 0x1ac5, 0x185c, 0xa858, 0x0, 0x1);
        gbc.writeMem(0x6474, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x1a);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x18);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x5417);
        EXPECT(gbc.pc(), 0x6475);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0305
        gbc.setState(0xba1, 0x41af, 0x6c30, 0xd313, 0xa1fb, 0x21fb, 0x0, 0x1);
        gbc.writeMem(0xba1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8e);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0xa1);
        EXPECT(gbc.e(),  0xfb);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xfb);
        EXPECT(gbc.sp(), 0x41af);
        EXPECT(gbc.pc(), 0xba2);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0306
        gbc.setState(0xc5d8, 0xdcdd, 0x9090, 0x1999, 0x29b9, 0xb541, 0x1, 0x1);
        gbc.writeMem(0xc5d8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x19);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xb9);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xdcdd);
        EXPECT(gbc.pc(), 0xc5d9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc5d8), 0x8c);
        // 8C 0307
        gbc.setState(0x911f, 0xd400, 0x9070, 0x6d9d, 0x1a4a, 0xac7a, 0x0, 0x1);
        gbc.writeMem(0x911f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x1a);
        EXPECT(gbc.e(),  0x4a);
        EXPECT(gbc.h(),  0xac);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0xd400);
        EXPECT(gbc.pc(), 0x9120);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x911f), 0x8c);
        // 8C 0308
        gbc.setState(0x3569, 0x95bb, 0x2730, 0xc1ee, 0x5404, 0xdf40, 0x0, 0x0);
        gbc.writeMem(0x3569, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7);
        EXPECT(gbc.b(),  0xc1);
        EXPECT(gbc.c(),  0xee);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x4);
        EXPECT(gbc.h(),  0xdf);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0x95bb);
        EXPECT(gbc.pc(), 0x356a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0309
        gbc.setState(0xb7b6, 0xea19, 0x3940, 0x2f99, 0xbbc4, 0xc57e, 0x0, 0x1);
        gbc.writeMem(0xb7b6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfe);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0x99);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0xc4);
        EXPECT(gbc.h(),  0xc5);
        EXPECT(gbc.l(),  0x7e);
        EXPECT(gbc.sp(), 0xea19);
        EXPECT(gbc.pc(), 0xb7b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb7b6), 0x8c);
        // 8C 030A
        gbc.setState(0x8637, 0x97ff, 0x3c70, 0xeb96, 0x92d5, 0x7a89, 0x0, 0x1);
        gbc.writeMem(0x8637, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb7);
        EXPECT(gbc.b(),  0xeb);
        EXPECT(gbc.c(),  0x96);
        EXPECT(gbc.d(),  0x92);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0x7a);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0x97ff);
        EXPECT(gbc.pc(), 0x8638);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8637), 0x8c);
        // 8C 030B
        gbc.setState(0xebf3, 0xc9e8, 0x4ca0, 0x817a, 0x6f00, 0x117b, 0x0, 0x0);
        gbc.writeMem(0xebf3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5d);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xc9e8);
        EXPECT(gbc.pc(), 0xebf4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebf3), 0x8c);
        // 8C 030D
        gbc.setState(0x8e37, 0x5d78, 0xe1e0, 0x304a, 0xf9a2, 0xa56c, 0x1, 0x1);
        gbc.writeMem(0x8e37, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x86);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0xf9);
        EXPECT(gbc.e(),  0xa2);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x6c);
        EXPECT(gbc.sp(), 0x5d78);
        EXPECT(gbc.pc(), 0x8e38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8e37), 0x8c);
        // 8C 030E
        gbc.setState(0xb9fb, 0x516b, 0xbe50, 0xad2d, 0xd302, 0xd07c, 0x1, 0x0);
        gbc.writeMem(0xb9fb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8f);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0x2);
        EXPECT(gbc.h(),  0xd0);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x516b);
        EXPECT(gbc.pc(), 0xb9fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb9fb), 0x8c);
        // 8C 030F
        gbc.setState(0xe563, 0xfee, 0x5b30, 0xabdf, 0x3017, 0x1724, 0x1, 0x0);
        gbc.writeMem(0xe563, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x73);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xdf);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x17);
        EXPECT(gbc.l(),  0x24);
        EXPECT(gbc.sp(), 0xfee);
        EXPECT(gbc.pc(), 0xe564);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe563), 0x8c);
        // 8C 0310
        gbc.setState(0x9bc5, 0xb825, 0x51d0, 0x95ab, 0xb359, 0x1ac6, 0x1, 0x1);
        gbc.writeMem(0x9bc5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x95);
        EXPECT(gbc.c(),  0xab);
        EXPECT(gbc.d(),  0xb3);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xb825);
        EXPECT(gbc.pc(), 0x9bc6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9bc5), 0x8c);
        // 8C 0311
        gbc.setState(0xd72, 0x891, 0x51d0, 0xb35, 0xecab, 0x1ab2, 0x0, 0x0);
        gbc.writeMem(0xd72, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xb);
        EXPECT(gbc.c(),  0x35);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x1a);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0x891);
        EXPECT(gbc.pc(), 0xd73);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0312
        gbc.setState(0x390, 0xabf4, 0xc1f0, 0x35a4, 0xb8b3, 0x899b, 0x0, 0x1);
        gbc.writeMem(0x390, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4b);
        EXPECT(gbc.b(),  0x35);
        EXPECT(gbc.c(),  0xa4);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0x89);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0xabf4);
        EXPECT(gbc.pc(), 0x391);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0314
        gbc.setState(0xbb88, 0x2ccf, 0x9650, 0xaafd, 0x7b60, 0x3ae9, 0x0, 0x0);
        gbc.writeMem(0xbb88, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd1);
        EXPECT(gbc.b(),  0xaa);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x7b);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x3a);
        EXPECT(gbc.l(),  0xe9);
        EXPECT(gbc.sp(), 0x2ccf);
        EXPECT(gbc.pc(), 0xbb89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbb88), 0x8c);
        // 8C 0315
        gbc.setState(0x7a56, 0xed46, 0xd110, 0x67f8, 0x74cb, 0x9d5a, 0x1, 0x1);
        gbc.writeMem(0x7a56, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0x67);
        EXPECT(gbc.c(),  0xf8);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0xcb);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x5a);
        EXPECT(gbc.sp(), 0xed46);
        EXPECT(gbc.pc(), 0x7a57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0316
        gbc.setState(0xa6de, 0x67f1, 0xf670, 0xec86, 0x3259, 0x20e4, 0x0, 0x0);
        gbc.writeMem(0xa6de, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x86);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x67f1);
        EXPECT(gbc.pc(), 0xa6df);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa6de), 0x8c);
        // 8C 0317
        gbc.setState(0x347b, 0x612b, 0x1260, 0x3fb2, 0x8693, 0x9b5b, 0x0, 0x1);
        gbc.writeMem(0x347b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xb2);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0x93);
        EXPECT(gbc.h(),  0x9b);
        EXPECT(gbc.l(),  0x5b);
        EXPECT(gbc.sp(), 0x612b);
        EXPECT(gbc.pc(), 0x347c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0318
        gbc.setState(0x9eb0, 0x866, 0xf5b0, 0x1355, 0x3260, 0xadf4, 0x1, 0x1);
        gbc.writeMem(0x9eb0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa3);
        EXPECT(gbc.b(),  0x13);
        EXPECT(gbc.c(),  0x55);
        EXPECT(gbc.d(),  0x32);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xf4);
        EXPECT(gbc.sp(), 0x866);
        EXPECT(gbc.pc(), 0x9eb1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9eb0), 0x8c);
        // 8C 0319
        gbc.setState(0x5c79, 0x412, 0x2370, 0x68c3, 0x8b85, 0x994d, 0x1, 0x1);
        gbc.writeMem(0x5c79, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbd);
        EXPECT(gbc.b(),  0x68);
        EXPECT(gbc.c(),  0xc3);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x85);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0x412);
        EXPECT(gbc.pc(), 0x5c7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 031B
        gbc.setState(0x127a, 0x64b, 0xe0f0, 0xd4af, 0xea4d, 0x86f3, 0x1, 0x0);
        gbc.writeMem(0x127a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x67);
        EXPECT(gbc.b(),  0xd4);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xea);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x86);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x64b);
        EXPECT(gbc.pc(), 0x127b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 031C
        gbc.setState(0xdbb6, 0xb814, 0x5a40, 0x4e69, 0x6688, 0xae68, 0x1, 0x0);
        gbc.writeMem(0xdbb6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x69);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x88);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0xb814);
        EXPECT(gbc.pc(), 0xdbb7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdbb6), 0x8c);
        // 8C 031D
        gbc.setState(0xa9fc, 0x8276, 0x35c0, 0x343e, 0xdfa9, 0xfc9b, 0x1, 0x0);
        gbc.writeMem(0xa9fc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x31);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0x3e);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x9b);
        EXPECT(gbc.sp(), 0x8276);
        EXPECT(gbc.pc(), 0xa9fd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9fc), 0x8c);
        // 8C 031E
        gbc.setState(0x99fb, 0xddf4, 0x7320, 0x15c4, 0x7936, 0xd4fd, 0x0, 0x0);
        gbc.writeMem(0x99fb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x47);
        EXPECT(gbc.b(),  0x15);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0x36);
        EXPECT(gbc.h(),  0xd4);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0xddf4);
        EXPECT(gbc.pc(), 0x99fc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x99fb), 0x8c);
        // 8C 031F
        gbc.setState(0x2334, 0x8ac8, 0x41e0, 0x7e20, 0x7480, 0x6bc8, 0x1, 0x0);
        gbc.writeMem(0x2334, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x7e);
        EXPECT(gbc.c(),  0x20);
        EXPECT(gbc.d(),  0x74);
        EXPECT(gbc.e(),  0x80);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0xc8);
        EXPECT(gbc.sp(), 0x8ac8);
        EXPECT(gbc.pc(), 0x2335);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0320
        gbc.setState(0x9370, 0x5de7, 0xf160, 0x8be, 0xf1e4, 0x72c4, 0x0, 0x1);
        gbc.writeMem(0x9370, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x8);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0xe4);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xc4);
        EXPECT(gbc.sp(), 0x5de7);
        EXPECT(gbc.pc(), 0x9371);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9370), 0x8c);
        // 8C 0321
        gbc.setState(0x2797, 0x734b, 0x61f0, 0xe674, 0x5917, 0x3f77, 0x1, 0x0);
        gbc.writeMem(0x2797, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa1);
        EXPECT(gbc.b(),  0xe6);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0x59);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0x77);
        EXPECT(gbc.sp(), 0x734b);
        EXPECT(gbc.pc(), 0x2798);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0323
        gbc.setState(0x8f37, 0x6df8, 0xeba0, 0x397b, 0x5443, 0x7d0d, 0x1, 0x1);
        gbc.writeMem(0x8f37, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x54);
        EXPECT(gbc.e(),  0x43);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x6df8);
        EXPECT(gbc.pc(), 0x8f38);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8f37), 0x8c);
        // 8C 0324
        gbc.setState(0x600c, 0x188b, 0x3e00, 0x4804, 0x531a, 0x7d03, 0x1, 0x0);
        gbc.writeMem(0x600c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbb);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0x1a);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x188b);
        EXPECT(gbc.pc(), 0x600d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0325
        gbc.setState(0xbdc9, 0x3b4b, 0x4aa0, 0xb449, 0x467b, 0xe41a, 0x1, 0x0);
        gbc.writeMem(0xbdc9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x49);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x7b);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x1a);
        EXPECT(gbc.sp(), 0x3b4b);
        EXPECT(gbc.pc(), 0xbdca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbdc9), 0x8c);
        // 8C 0326
        gbc.setState(0xa9fd, 0x8250, 0x81d0, 0x6c24, 0x47b5, 0x8797, 0x1, 0x1);
        gbc.writeMem(0xa9fd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9);
        EXPECT(gbc.b(),  0x6c);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x47);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x87);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0x8250);
        EXPECT(gbc.pc(), 0xa9fe);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa9fd), 0x8c);
        // 8C 0327
        gbc.setState(0x76ed, 0xd95a, 0xc1d0, 0x6e34, 0x61dd, 0x93d5, 0x0, 0x1);
        gbc.writeMem(0x76ed, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0x34);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0xdd);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0xd95a);
        EXPECT(gbc.pc(), 0x76ee);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0328
        gbc.setState(0x7c61, 0x9bf2, 0xbab0, 0xa201, 0x5e47, 0x946f, 0x1, 0x1);
        gbc.writeMem(0x7c61, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4f);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0x1);
        EXPECT(gbc.d(),  0x5e);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0x9bf2);
        EXPECT(gbc.pc(), 0x7c62);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0329
        gbc.setState(0xd286, 0x3cf7, 0xd0f0, 0xe318, 0xfeb, 0x55a8, 0x1, 0x0);
        gbc.writeMem(0xd286, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x26);
        EXPECT(gbc.b(),  0xe3);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xf);
        EXPECT(gbc.e(),  0xeb);
        EXPECT(gbc.h(),  0x55);
        EXPECT(gbc.l(),  0xa8);
        EXPECT(gbc.sp(), 0x3cf7);
        EXPECT(gbc.pc(), 0xd287);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd286), 0x8c);
        // 8C 032A
        gbc.setState(0x5a92, 0x790d, 0x7bb0, 0xedec, 0x6df0, 0x6c81, 0x0, 0x1);
        gbc.writeMem(0x5a92, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe8);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0xec);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xf0);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x81);
        EXPECT(gbc.sp(), 0x790d);
        EXPECT(gbc.pc(), 0x5a93);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 032B
        gbc.setState(0x6dd5, 0x3d14, 0x1f0, 0xcdd8, 0x53b2, 0x1da1, 0x1, 0x1);
        gbc.writeMem(0x6dd5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd8);
        EXPECT(gbc.d(),  0x53);
        EXPECT(gbc.e(),  0xb2);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x3d14);
        EXPECT(gbc.pc(), 0x6dd6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 032C
        gbc.setState(0x8eb2, 0xc058, 0xd630, 0x6ff7, 0xccab, 0x6633, 0x1, 0x1);
        gbc.writeMem(0x8eb2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3d);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0xf7);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xab);
        EXPECT(gbc.h(),  0x66);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xc058);
        EXPECT(gbc.pc(), 0x8eb3);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8eb2), 0x8c);
        // 8C 032D
        gbc.setState(0x9457, 0x262f, 0x810, 0xa62d, 0xe3a8, 0xb09f, 0x1, 0x1);
        gbc.writeMem(0x9457, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb9);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x2d);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0xb0);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0x262f);
        EXPECT(gbc.pc(), 0x9458);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9457), 0x8c);
        // 8C 032E
        gbc.setState(0xd1a, 0xe0ec, 0x45a0, 0xd071, 0x6c86, 0x638a, 0x1, 0x1);
        gbc.writeMem(0xd1a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa8);
        EXPECT(gbc.b(),  0xd0);
        EXPECT(gbc.c(),  0x71);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x63);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0xe0ec);
        EXPECT(gbc.pc(), 0xd1b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 032F
        gbc.setState(0xe984, 0x3a20, 0x71b0, 0xf30b, 0x3000, 0xed58, 0x1, 0x0);
        gbc.writeMem(0xe984, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0xf3);
        EXPECT(gbc.c(),  0xb);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x0);
        EXPECT(gbc.h(),  0xed);
        EXPECT(gbc.l(),  0x58);
        EXPECT(gbc.sp(), 0x3a20);
        EXPECT(gbc.pc(), 0xe985);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe984), 0x8c);
        // 8C 0330
        gbc.setState(0x3033, 0x2392, 0xe7b0, 0xad59, 0x6a6e, 0xe449, 0x0, 0x0);
        gbc.writeMem(0x3033, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xcc);
        EXPECT(gbc.b(),  0xad);
        EXPECT(gbc.c(),  0x59);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xe4);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x2392);
        EXPECT(gbc.pc(), 0x3034);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0331
        gbc.setState(0xddb6, 0x5de0, 0x39c0, 0x8754, 0xf53d, 0xae5, 0x0, 0x1);
        gbc.writeMem(0xddb6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x43);
        EXPECT(gbc.b(),  0x87);
        EXPECT(gbc.c(),  0x54);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0x3d);
        EXPECT(gbc.h(),  0xa);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0x5de0);
        EXPECT(gbc.pc(), 0xddb7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xddb6), 0x8c);
        // 8C 0332
        gbc.setState(0xedc8, 0x3d8b, 0x5130, 0x10fb, 0x894d, 0x6efc, 0x0, 0x1);
        gbc.writeMem(0xedc8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0xfb);
        EXPECT(gbc.d(),  0x89);
        EXPECT(gbc.e(),  0x4d);
        EXPECT(gbc.h(),  0x6e);
        EXPECT(gbc.l(),  0xfc);
        EXPECT(gbc.sp(), 0x3d8b);
        EXPECT(gbc.pc(), 0xedc9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xedc8), 0x8c);
        // 8C 0333
        gbc.setState(0x25fe, 0xaf4e, 0xa7d0, 0x2d19, 0x9f67, 0xa492, 0x0, 0x1);
        gbc.writeMem(0x25fe, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x9f);
        EXPECT(gbc.e(),  0x67);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0x92);
        EXPECT(gbc.sp(), 0xaf4e);
        EXPECT(gbc.pc(), 0x25ff);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0334
        gbc.setState(0x12b3, 0x36b2, 0x7dc0, 0x1fbd, 0x6220, 0x4abd, 0x1, 0x0);
        gbc.writeMem(0x12b3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc7);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0x62);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xbd);
        EXPECT(gbc.sp(), 0x36b2);
        EXPECT(gbc.pc(), 0x12b4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0335
        gbc.setState(0x5d7b, 0xf423, 0x5240, 0x80c8, 0xa35, 0x4438, 0x0, 0x1);
        gbc.writeMem(0x5d7b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xc8);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x44);
        EXPECT(gbc.l(),  0x38);
        EXPECT(gbc.sp(), 0xf423);
        EXPECT(gbc.pc(), 0x5d7c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0336
        gbc.setState(0x4a21, 0xc28b, 0x1c40, 0xf0af, 0xf8df, 0x3e1b, 0x1, 0x0);
        gbc.writeMem(0x4a21, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5a);
        EXPECT(gbc.b(),  0xf0);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0xf8);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x3e);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0xc28b);
        EXPECT(gbc.pc(), 0x4a22);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0339
        gbc.setState(0x9b76, 0x9295, 0x7390, 0xb60d, 0x2b6c, 0xcdb1, 0x0, 0x0);
        gbc.writeMem(0x9b76, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x41);
        EXPECT(gbc.b(),  0xb6);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x6c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x9295);
        EXPECT(gbc.pc(), 0x9b77);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9b76), 0x8c);
        // 8C 033A
        gbc.setState(0x584b, 0x8f1b, 0x5950, 0xdd05, 0x3bfe, 0xd6e4, 0x0, 0x1);
        gbc.writeMem(0x584b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0xd6);
        EXPECT(gbc.l(),  0xe4);
        EXPECT(gbc.sp(), 0x8f1b);
        EXPECT(gbc.pc(), 0x584c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 033B
        gbc.setState(0x2e3, 0xcb4b, 0x1250, 0xa4b1, 0xab6d, 0xe1c6, 0x0, 0x0);
        gbc.writeMem(0x2e3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xa4);
        EXPECT(gbc.c(),  0xb1);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x6d);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0xc6);
        EXPECT(gbc.sp(), 0xcb4b);
        EXPECT(gbc.pc(), 0x2e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 033C
        gbc.setState(0xb16c, 0xc51f, 0xba90, 0x7f18, 0xc3e3, 0xad0b, 0x1, 0x0);
        gbc.writeMem(0xb16c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x68);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x18);
        EXPECT(gbc.d(),  0xc3);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0xad);
        EXPECT(gbc.l(),  0xb);
        EXPECT(gbc.sp(), 0xc51f);
        EXPECT(gbc.pc(), 0xb16d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb16c), 0x8c);
        // 8C 033D
        gbc.setState(0xc9da, 0xa45c, 0x5fa0, 0x52bd, 0xd3a7, 0x71ff, 0x0, 0x0);
        gbc.writeMem(0xc9da, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd0);
        EXPECT(gbc.b(),  0x52);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xd3);
        EXPECT(gbc.e(),  0xa7);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0xff);
        EXPECT(gbc.sp(), 0xa45c);
        EXPECT(gbc.pc(), 0xc9db);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc9da), 0x8c);
        // 8C 033E
        gbc.setState(0xb320, 0xf9d9, 0x4c10, 0xbf52, 0x613a, 0x81b1, 0x0, 0x1);
        gbc.writeMem(0xb320, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xbf);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x61);
        EXPECT(gbc.e(),  0x3a);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0xf9d9);
        EXPECT(gbc.pc(), 0xb321);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb320), 0x8c);
        // 8C 033F
        gbc.setState(0x367e, 0x5d55, 0xe080, 0x30c7, 0x6c64, 0xff21, 0x1, 0x1);
        gbc.writeMem(0x367e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdf);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0xc7);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x64);
        EXPECT(gbc.h(),  0xff);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x5d55);
        EXPECT(gbc.pc(), 0x367f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0340
        gbc.setState(0x2787, 0x6fb2, 0x20b0, 0x6d2a, 0x899, 0xf688, 0x0, 0x1);
        gbc.writeMem(0x2787, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x8);
        EXPECT(gbc.e(),  0x99);
        EXPECT(gbc.h(),  0xf6);
        EXPECT(gbc.l(),  0x88);
        EXPECT(gbc.sp(), 0x6fb2);
        EXPECT(gbc.pc(), 0x2788);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0341
        gbc.setState(0x12ee, 0x34a7, 0xe3b0, 0xd347, 0x9b4b, 0x4c10, 0x0, 0x1);
        gbc.writeMem(0x12ee, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0xd3);
        EXPECT(gbc.c(),  0x47);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x4c);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x34a7);
        EXPECT(gbc.pc(), 0x12ef);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0342
        gbc.setState(0x348b, 0x8703, 0xff70, 0xf294, 0xf7d8, 0x8499, 0x1, 0x1);
        gbc.writeMem(0x348b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x94);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0x8703);
        EXPECT(gbc.pc(), 0x348c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0343
        gbc.setState(0x1109, 0xf0e3, 0xfc20, 0xb192, 0xc7da, 0x9fea, 0x1, 0x1);
        gbc.writeMem(0x1109, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x92);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0xda);
        EXPECT(gbc.h(),  0x9f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0xf0e3);
        EXPECT(gbc.pc(), 0x110a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0344
        gbc.setState(0xcf38, 0x9191, 0x6310, 0x2a87, 0xcce5, 0x7876, 0x0, 0x1);
        gbc.writeMem(0xcf38, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdc);
        EXPECT(gbc.b(),  0x2a);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0xcc);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x9191);
        EXPECT(gbc.pc(), 0xcf39);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcf38), 0x8c);
        // 8C 0345
        gbc.setState(0x57ef, 0x515a, 0x4d90, 0xf4c4, 0x4226, 0x48aa, 0x1, 0x0);
        gbc.writeMem(0x57ef, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x96);
        EXPECT(gbc.b(),  0xf4);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0x26);
        EXPECT(gbc.h(),  0x48);
        EXPECT(gbc.l(),  0xaa);
        EXPECT(gbc.sp(), 0x515a);
        EXPECT(gbc.pc(), 0x57f0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0346
        gbc.setState(0x3a91, 0x3109, 0x7dc0, 0xe4a5, 0xe64c, 0x56fa, 0x0, 0x0);
        gbc.writeMem(0x3a91, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd3);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xe6);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0x56);
        EXPECT(gbc.l(),  0xfa);
        EXPECT(gbc.sp(), 0x3109);
        EXPECT(gbc.pc(), 0x3a92);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0347
        gbc.setState(0xb64f, 0x5b7a, 0x9af0, 0x245, 0x7718, 0xae79, 0x0, 0x0);
        gbc.writeMem(0xb64f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2);
        EXPECT(gbc.c(),  0x45);
        EXPECT(gbc.d(),  0x77);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xae);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x5b7a);
        EXPECT(gbc.pc(), 0xb650);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb64f), 0x8c);
        // 8C 0348
        gbc.setState(0x4ecf, 0x9ed3, 0x240, 0x5f4, 0xc447, 0x37a, 0x1, 0x1);
        gbc.writeMem(0x4ecf, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5);
        EXPECT(gbc.b(),  0x5);
        EXPECT(gbc.c(),  0xf4);
        EXPECT(gbc.d(),  0xc4);
        EXPECT(gbc.e(),  0x47);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x7a);
        EXPECT(gbc.sp(), 0x9ed3);
        EXPECT(gbc.pc(), 0x4ed0);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 034A
        gbc.setState(0xda09, 0xec66, 0x9390, 0x7f4f, 0x2b3f, 0xa1ef, 0x0, 0x0);
        gbc.writeMem(0xda09, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x35);
        EXPECT(gbc.b(),  0x7f);
        EXPECT(gbc.c(),  0x4f);
        EXPECT(gbc.d(),  0x2b);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0xa1);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0xec66);
        EXPECT(gbc.pc(), 0xda0a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xda09), 0x8c);
        // 8C 034B
        gbc.setState(0x1947, 0x3719, 0xadb0, 0x33fc, 0x42c0, 0xe252, 0x0, 0x1);
        gbc.writeMem(0x1947, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x90);
        EXPECT(gbc.b(),  0x33);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x42);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xe2);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x3719);
        EXPECT(gbc.pc(), 0x1948);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 034C
        gbc.setState(0xda1e, 0x510, 0x290, 0x90d4, 0xf6cc, 0x827c, 0x0, 0x1);
        gbc.writeMem(0xda1e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x85);
        EXPECT(gbc.b(),  0x90);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0x82);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x510);
        EXPECT(gbc.pc(), 0xda1f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xda1e), 0x8c);
        // 8C 034D
        gbc.setState(0xc01b, 0x1f5f, 0x1fb0, 0xe2ea, 0xaa28, 0xb43c, 0x0, 0x0);
        gbc.writeMem(0xc01b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd4);
        EXPECT(gbc.b(),  0xe2);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0xaa);
        EXPECT(gbc.e(),  0x28);
        EXPECT(gbc.h(),  0xb4);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x1f5f);
        EXPECT(gbc.pc(), 0xc01c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc01b), 0x8c);
        // 8C 034E
        gbc.setState(0xd62e, 0x18c5, 0x34d0, 0x11ad, 0xf5d1, 0x37ef, 0x0, 0x1);
        gbc.writeMem(0xd62e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf5);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0xef);
        EXPECT(gbc.sp(), 0x18c5);
        EXPECT(gbc.pc(), 0xd62f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd62e), 0x8c);
        // 8C 034F
        gbc.setState(0xd7c0, 0x8bcc, 0xc6a0, 0x9c9f, 0x27be, 0xceb3, 0x0, 0x1);
        gbc.writeMem(0xd7c0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x94);
        EXPECT(gbc.b(),  0x9c);
        EXPECT(gbc.c(),  0x9f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0xce);
        EXPECT(gbc.l(),  0xb3);
        EXPECT(gbc.sp(), 0x8bcc);
        EXPECT(gbc.pc(), 0xd7c1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd7c0), 0x8c);
        // 8C 0350
        gbc.setState(0xd182, 0xfcc7, 0x9180, 0x64d4, 0x4848, 0x8015, 0x1, 0x1);
        gbc.writeMem(0xd182, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0x64);
        EXPECT(gbc.c(),  0xd4);
        EXPECT(gbc.d(),  0x48);
        EXPECT(gbc.e(),  0x48);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0x15);
        EXPECT(gbc.sp(), 0xfcc7);
        EXPECT(gbc.pc(), 0xd183);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xd182), 0x8c);
        // 8C 0352
        gbc.setState(0x10db, 0x36be, 0x3870, 0x486a, 0xe341, 0xf12b, 0x0, 0x1);
        gbc.writeMem(0x10db, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x48);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xf1);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0x36be);
        EXPECT(gbc.pc(), 0x10dc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0353
        gbc.setState(0xa556, 0xe6a3, 0xa2b0, 0xd23d, 0x3942, 0x84dd, 0x0, 0x0);
        gbc.writeMem(0xa556, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0xd2);
        EXPECT(gbc.c(),  0x3d);
        EXPECT(gbc.d(),  0x39);
        EXPECT(gbc.e(),  0x42);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0xe6a3);
        EXPECT(gbc.pc(), 0xa557);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa556), 0x8c);
        // 8C 0354
        gbc.setState(0x9faa, 0x251c, 0x2b70, 0x5f27, 0x4979, 0x78a9, 0x0, 0x1);
        gbc.writeMem(0x9faa, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa4);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x27);
        EXPECT(gbc.d(),  0x49);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0xa9);
        EXPECT(gbc.sp(), 0x251c);
        EXPECT(gbc.pc(), 0x9fab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9faa), 0x8c);
        // 8C 0355
        gbc.setState(0x4b40, 0xb125, 0x2e70, 0x4682, 0x8a86, 0xeba6, 0x0, 0x1);
        gbc.writeMem(0x4b40, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1a);
        EXPECT(gbc.b(),  0x46);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0x8a);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0xa6);
        EXPECT(gbc.sp(), 0xb125);
        EXPECT(gbc.pc(), 0x4b41);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0356
        gbc.setState(0x3eeb, 0x99a5, 0x8d00, 0x5f4a, 0x6dd8, 0x20f5, 0x1, 0x0);
        gbc.writeMem(0x3eeb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0x5f);
        EXPECT(gbc.c(),  0x4a);
        EXPECT(gbc.d(),  0x6d);
        EXPECT(gbc.e(),  0xd8);
        EXPECT(gbc.h(),  0x20);
        EXPECT(gbc.l(),  0xf5);
        EXPECT(gbc.sp(), 0x99a5);
        EXPECT(gbc.pc(), 0x3eec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0357
        gbc.setState(0x56f5, 0x51fa, 0xf780, 0xfda6, 0xaf7, 0x2541, 0x1, 0x0);
        gbc.writeMem(0x56f5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1c);
        EXPECT(gbc.b(),  0xfd);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xf7);
        EXPECT(gbc.h(),  0x25);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x51fa);
        EXPECT(gbc.pc(), 0x56f6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0358
        gbc.setState(0xefd7, 0x1f08, 0x3c80, 0xbe2c, 0x2d3b, 0x57f9, 0x0, 0x1);
        gbc.writeMem(0xefd7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x93);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x2d);
        EXPECT(gbc.e(),  0x3b);
        EXPECT(gbc.h(),  0x57);
        EXPECT(gbc.l(),  0xf9);
        EXPECT(gbc.sp(), 0x1f08);
        EXPECT(gbc.pc(), 0xefd8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xefd7), 0x8c);
        // 8C 0359
        gbc.setState(0x5d19, 0x3fbe, 0xdf40, 0x86d0, 0x75f, 0x4f8a, 0x1, 0x1);
        gbc.writeMem(0x5d19, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2e);
        EXPECT(gbc.b(),  0x86);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0x8a);
        EXPECT(gbc.sp(), 0x3fbe);
        EXPECT(gbc.pc(), 0x5d1a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 035A
        gbc.setState(0xbde8, 0x98da, 0x9520, 0x308, 0x4bca, 0x7f80, 0x0, 0x1);
        gbc.writeMem(0xbde8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0x3);
        EXPECT(gbc.c(),  0x8);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x7f);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0x98da);
        EXPECT(gbc.pc(), 0xbde9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbde8), 0x8c);
        // 8C 035B
        gbc.setState(0xa79, 0x3e8b, 0x83a0, 0x4e32, 0x1168, 0x8a1b, 0x1, 0x0);
        gbc.writeMem(0xa79, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x4e);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0x68);
        EXPECT(gbc.h(),  0x8a);
        EXPECT(gbc.l(),  0x1b);
        EXPECT(gbc.sp(), 0x3e8b);
        EXPECT(gbc.pc(), 0xa7a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 035C
        gbc.setState(0xb8d7, 0x4b65, 0xe080, 0xd106, 0x5bfe, 0x3737, 0x1, 0x1);
        gbc.writeMem(0xb8d7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x17);
        EXPECT(gbc.b(),  0xd1);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0x5b);
        EXPECT(gbc.e(),  0xfe);
        EXPECT(gbc.h(),  0x37);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0x4b65);
        EXPECT(gbc.pc(), 0xb8d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb8d7), 0x8c);
        // 8C 035D
        gbc.setState(0x3d95, 0x338, 0x4f50, 0x7925, 0x7d81, 0x93fe, 0x0, 0x1);
        gbc.writeMem(0x3d95, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0x81);
        EXPECT(gbc.h(),  0x93);
        EXPECT(gbc.l(),  0xfe);
        EXPECT(gbc.sp(), 0x338);
        EXPECT(gbc.pc(), 0x3d96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 035E
        gbc.setState(0xa776, 0xcef7, 0xfec0, 0xaba6, 0xc177, 0xda39, 0x1, 0x0);
        gbc.writeMem(0xa776, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0xab);
        EXPECT(gbc.c(),  0xa6);
        EXPECT(gbc.d(),  0xc1);
        EXPECT(gbc.e(),  0x77);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0xcef7);
        EXPECT(gbc.pc(), 0xa777);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa776), 0x8c);
        // 8C 035F
        gbc.setState(0x7d73, 0x9f1d, 0x7c20, 0x149d, 0x239f, 0x4fa4, 0x0, 0x1);
        gbc.writeMem(0x7d73, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xcb);
        EXPECT(gbc.b(),  0x14);
        EXPECT(gbc.c(),  0x9d);
        EXPECT(gbc.d(),  0x23);
        EXPECT(gbc.e(),  0x9f);
        EXPECT(gbc.h(),  0x4f);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x9f1d);
        EXPECT(gbc.pc(), 0x7d74);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0360
        gbc.setState(0x8ea6, 0xabbc, 0xdcb0, 0xba6b, 0x76cc, 0xbd2b, 0x1, 0x1);
        gbc.writeMem(0x8ea6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9a);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0x76);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xbd);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xabbc);
        EXPECT(gbc.pc(), 0x8ea7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8ea6), 0x8c);
        // 8C 0361
        gbc.setState(0x6c95, 0x6f7a, 0x7cf0, 0xdd2c, 0x788d, 0xce1, 0x0, 0x1);
        gbc.writeMem(0x6c95, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x89);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0x2c);
        EXPECT(gbc.d(),  0x78);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0x6f7a);
        EXPECT(gbc.pc(), 0x6c96);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0362
        gbc.setState(0xe7d, 0xed0b, 0x7170, 0xcba9, 0x121d, 0xfd90, 0x1, 0x1);
        gbc.writeMem(0xe7d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6f);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xa9);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xfd);
        EXPECT(gbc.l(),  0x90);
        EXPECT(gbc.sp(), 0xed0b);
        EXPECT(gbc.pc(), 0xe7e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0363
        gbc.setState(0xeae8, 0xc709, 0xa2d0, 0x3dba, 0x117, 0xcf4f, 0x1, 0x0);
        gbc.writeMem(0xeae8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x3d);
        EXPECT(gbc.c(),  0xba);
        EXPECT(gbc.d(),  0x1);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0x4f);
        EXPECT(gbc.sp(), 0xc709);
        EXPECT(gbc.pc(), 0xeae9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xeae8), 0x8c);
        // 8C 0364
        gbc.setState(0x722e, 0x5e3f, 0x4f70, 0x7382, 0xecc7, 0xf2f3, 0x0, 0x1);
        gbc.writeMem(0x722e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x42);
        EXPECT(gbc.b(),  0x73);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0xf2);
        EXPECT(gbc.l(),  0xf3);
        EXPECT(gbc.sp(), 0x5e3f);
        EXPECT(gbc.pc(), 0x722f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0365
        gbc.setState(0x74fe, 0xc457, 0x1ff0, 0x78cd, 0x17e0, 0x4a41, 0x1, 0x1);
        gbc.writeMem(0x74fe, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6a);
        EXPECT(gbc.b(),  0x78);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x17);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0xc457);
        EXPECT(gbc.pc(), 0x74ff);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0366
        gbc.setState(0x2bed, 0x5d9a, 0x4e70, 0xdaf9, 0x79a3, 0xdbd3, 0x1, 0x1);
        gbc.writeMem(0x2bed, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x79);
        EXPECT(gbc.e(),  0xa3);
        EXPECT(gbc.h(),  0xdb);
        EXPECT(gbc.l(),  0xd3);
        EXPECT(gbc.sp(), 0x5d9a);
        EXPECT(gbc.pc(), 0x2bee);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0367
        gbc.setState(0x86dd, 0x7d91, 0x9190, 0x704, 0x972, 0x462c, 0x1, 0x1);
        gbc.writeMem(0x86dd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd8);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x72);
        EXPECT(gbc.h(),  0x46);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0x7d91);
        EXPECT(gbc.pc(), 0x86de);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x86dd), 0x8c);
        // 8C 0368
        gbc.setState(0x9d80, 0xcea1, 0x1a30, 0xf552, 0x75a6, 0xa597, 0x1, 0x1);
        gbc.writeMem(0x9d80, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc0);
        EXPECT(gbc.b(),  0xf5);
        EXPECT(gbc.c(),  0x52);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x97);
        EXPECT(gbc.sp(), 0xcea1);
        EXPECT(gbc.pc(), 0x9d81);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9d80), 0x8c);
        // 8C 036A
        gbc.setState(0x69d9, 0x1703, 0x3f60, 0x11da, 0x468d, 0x181f, 0x0, 0x0);
        gbc.writeMem(0x69d9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x57);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0xda);
        EXPECT(gbc.d(),  0x46);
        EXPECT(gbc.e(),  0x8d);
        EXPECT(gbc.h(),  0x18);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x1703);
        EXPECT(gbc.pc(), 0x69da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 036B
        gbc.setState(0x91b7, 0x6d44, 0x4fe0, 0x34b7, 0x2435, 0x14b7, 0x0, 0x0);
        gbc.writeMem(0x91b7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x63);
        EXPECT(gbc.b(),  0x34);
        EXPECT(gbc.c(),  0xb7);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0x35);
        EXPECT(gbc.h(),  0x14);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x6d44);
        EXPECT(gbc.pc(), 0x91b8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x91b7), 0x8c);
        // 8C 036C
        gbc.setState(0x8c98, 0xb3f6, 0x4160, 0xe466, 0xbe65, 0x3fe5, 0x1, 0x0);
        gbc.writeMem(0x8c98, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0xe4);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0xbe);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x3f);
        EXPECT(gbc.l(),  0xe5);
        EXPECT(gbc.sp(), 0xb3f6);
        EXPECT(gbc.pc(), 0x8c99);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x8c98), 0x8c);
        // 8C 036D
        gbc.setState(0x635c, 0x7072, 0xc090, 0x412e, 0x4523, 0xa0e2, 0x1, 0x1);
        gbc.writeMem(0x635c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x61);
        EXPECT(gbc.b(),  0x41);
        EXPECT(gbc.c(),  0x2e);
        EXPECT(gbc.d(),  0x45);
        EXPECT(gbc.e(),  0x23);
        EXPECT(gbc.h(),  0xa0);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0x7072);
        EXPECT(gbc.pc(), 0x635d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 036E
        gbc.setState(0xa4e3, 0xed3c, 0x3500, 0x597c, 0x2c2, 0x9d1d, 0x0, 0x0);
        gbc.writeMem(0xa4e3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd2);
        EXPECT(gbc.b(),  0x59);
        EXPECT(gbc.c(),  0x7c);
        EXPECT(gbc.d(),  0x2);
        EXPECT(gbc.e(),  0xc2);
        EXPECT(gbc.h(),  0x9d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xed3c);
        EXPECT(gbc.pc(), 0xa4e4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa4e3), 0x8c);
        // 8C 036F
        gbc.setState(0x8a6, 0xf7c, 0x3bd0, 0xd893, 0xb85e, 0x1137, 0x1, 0x1);
        gbc.writeMem(0x8a6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4d);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x93);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x11);
        EXPECT(gbc.l(),  0x37);
        EXPECT(gbc.sp(), 0xf7c);
        EXPECT(gbc.pc(), 0x8a7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0370
        gbc.setState(0xb44d, 0x66ad, 0x390, 0x885b, 0x312f, 0x711e, 0x0, 0x1);
        gbc.writeMem(0xb44d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0x88);
        EXPECT(gbc.c(),  0x5b);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0x2f);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x66ad);
        EXPECT(gbc.pc(), 0xb44e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb44d), 0x8c);
        // 8C 0372
        gbc.setState(0xe91a, 0xdac4, 0xc5f0, 0xf288, 0xd93c, 0xaf89, 0x1, 0x1);
        gbc.writeMem(0xe91a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x75);
        EXPECT(gbc.b(),  0xf2);
        EXPECT(gbc.c(),  0x88);
        EXPECT(gbc.d(),  0xd9);
        EXPECT(gbc.e(),  0x3c);
        EXPECT(gbc.h(),  0xaf);
        EXPECT(gbc.l(),  0x89);
        EXPECT(gbc.sp(), 0xdac4);
        EXPECT(gbc.pc(), 0xe91b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe91a), 0x8c);
        // 8C 0373
        gbc.setState(0x3f56, 0x8459, 0x7750, 0xbdea, 0x140d, 0x9956, 0x1, 0x1);
        gbc.writeMem(0x3f56, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x11);
        EXPECT(gbc.b(),  0xbd);
        EXPECT(gbc.c(),  0xea);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xd);
        EXPECT(gbc.h(),  0x99);
        EXPECT(gbc.l(),  0x56);
        EXPECT(gbc.sp(), 0x8459);
        EXPECT(gbc.pc(), 0x3f57);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0374
        gbc.setState(0x6318, 0x6abb, 0x6d80, 0x3724, 0x9bf9, 0x541, 0x1, 0x1);
        gbc.writeMem(0x6318, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x72);
        EXPECT(gbc.b(),  0x37);
        EXPECT(gbc.c(),  0x24);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x41);
        EXPECT(gbc.sp(), 0x6abb);
        EXPECT(gbc.pc(), 0x6319);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0375
        gbc.setState(0xd52d, 0x64ed, 0x2e20, 0xc5f, 0x278a, 0x7121, 0x1, 0x0);
        gbc.writeMem(0xd52d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0xc);
        EXPECT(gbc.c(),  0x5f);
        EXPECT(gbc.d(),  0x27);
        EXPECT(gbc.e(),  0x8a);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x21);
        EXPECT(gbc.sp(), 0x64ed);
        EXPECT(gbc.pc(), 0xd52e);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd52d), 0x8c);
        // 8C 0376
        gbc.setState(0x3643, 0x3f15, 0x46c0, 0x106e, 0xf218, 0xde84, 0x0, 0x0);
        gbc.writeMem(0x3643, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x10);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x18);
        EXPECT(gbc.h(),  0xde);
        EXPECT(gbc.l(),  0x84);
        EXPECT(gbc.sp(), 0x3f15);
        EXPECT(gbc.pc(), 0x3644);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0377
        gbc.setState(0x7e33, 0xd3d2, 0xc650, 0x9802, 0x143f, 0x5a33, 0x1, 0x1);
        gbc.writeMem(0x7e33, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x98);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x3f);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0xd3d2);
        EXPECT(gbc.pc(), 0x7e34);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0378
        gbc.setState(0x9e08, 0x988, 0x2b30, 0x97a7, 0x5060, 0x4ab7, 0x0, 0x0);
        gbc.writeMem(0x9e08, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x76);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xa7);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x60);
        EXPECT(gbc.h(),  0x4a);
        EXPECT(gbc.l(),  0xb7);
        EXPECT(gbc.sp(), 0x988);
        EXPECT(gbc.pc(), 0x9e09);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9e08), 0x8c);
        // 8C 0379
        gbc.setState(0xb818, 0xf637, 0xdaf0, 0xfc11, 0x8b44, 0xf34, 0x0, 0x0);
        gbc.writeMem(0xb818, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0xfc);
        EXPECT(gbc.c(),  0x11);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x44);
        EXPECT(gbc.h(),  0xf);
        EXPECT(gbc.l(),  0x34);
        EXPECT(gbc.sp(), 0xf637);
        EXPECT(gbc.pc(), 0xb819);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb818), 0x8c);
        // 8C 037A
        gbc.setState(0xd9d6, 0x1c21, 0x3fc0, 0xa690, 0xcac6, 0x4bf2, 0x1, 0x0);
        gbc.writeMem(0xd9d6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8a);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0x90);
        EXPECT(gbc.d(),  0xca);
        EXPECT(gbc.e(),  0xc6);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x1c21);
        EXPECT(gbc.pc(), 0xd9d7);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd9d6), 0x8c);
        // 8C 037B
        gbc.setState(0xbfa8, 0x192d, 0xf990, 0xc332, 0xacc7, 0x2f55, 0x1, 0x1);
        gbc.writeMem(0xbfa8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x29);
        EXPECT(gbc.b(),  0xc3);
        EXPECT(gbc.c(),  0x32);
        EXPECT(gbc.d(),  0xac);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x2f);
        EXPECT(gbc.l(),  0x55);
        EXPECT(gbc.sp(), 0x192d);
        EXPECT(gbc.pc(), 0xbfa9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbfa8), 0x8c);
        // 8C 037D
        gbc.setState(0x5eb3, 0x1596, 0x2340, 0x70dc, 0x8bd9, 0x23a0, 0x1, 0x0);
        gbc.writeMem(0x5eb3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x46);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xdc);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x23);
        EXPECT(gbc.l(),  0xa0);
        EXPECT(gbc.sp(), 0x1596);
        EXPECT(gbc.pc(), 0x5eb4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 037E
        gbc.setState(0xcebd, 0x1b1, 0xfa0, 0xa940, 0x106b, 0x8d35, 0x0, 0x1);
        gbc.writeMem(0xcebd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9c);
        EXPECT(gbc.b(),  0xa9);
        EXPECT(gbc.c(),  0x40);
        EXPECT(gbc.d(),  0x10);
        EXPECT(gbc.e(),  0x6b);
        EXPECT(gbc.h(),  0x8d);
        EXPECT(gbc.l(),  0x35);
        EXPECT(gbc.sp(), 0x1b1);
        EXPECT(gbc.pc(), 0xcebe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcebd), 0x8c);
        // 8C 037F
        gbc.setState(0xe508, 0x59bd, 0x1640, 0x1806, 0xf7a9, 0x6776, 0x1, 0x1);
        gbc.writeMem(0xe508, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7d);
        EXPECT(gbc.b(),  0x18);
        EXPECT(gbc.c(),  0x6);
        EXPECT(gbc.d(),  0xf7);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x67);
        EXPECT(gbc.l(),  0x76);
        EXPECT(gbc.sp(), 0x59bd);
        EXPECT(gbc.pc(), 0xe509);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe508), 0x8c);
        // 8C 0380
        gbc.setState(0xb6d7, 0x5982, 0x4480, 0x47fe, 0xc733, 0x6aeb, 0x1, 0x0);
        gbc.writeMem(0xb6d7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xae);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xc7);
        EXPECT(gbc.e(),  0x33);
        EXPECT(gbc.h(),  0x6a);
        EXPECT(gbc.l(),  0xeb);
        EXPECT(gbc.sp(), 0x5982);
        EXPECT(gbc.pc(), 0xb6d8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb6d7), 0x8c);
        // 8C 0381
        gbc.setState(0x59d2, 0x2c38, 0x4d70, 0xf102, 0x3624, 0x8168, 0x0, 0x1);
        gbc.writeMem(0x59d2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xcf);
        EXPECT(gbc.b(),  0xf1);
        EXPECT(gbc.c(),  0x2);
        EXPECT(gbc.d(),  0x36);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0x68);
        EXPECT(gbc.sp(), 0x2c38);
        EXPECT(gbc.pc(), 0x59d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0382
        gbc.setState(0x8f0, 0xe519, 0x7e60, 0x8aa0, 0x31e0, 0xd7c7, 0x1, 0x1);
        gbc.writeMem(0x8f0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x55);
        EXPECT(gbc.b(),  0x8a);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x31);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xd7);
        EXPECT(gbc.l(),  0xc7);
        EXPECT(gbc.sp(), 0xe519);
        EXPECT(gbc.pc(), 0x8f1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0383
        gbc.setState(0xbd04, 0xcef, 0xc4b0, 0x1f03, 0x641e, 0x4b6d, 0x1, 0x1);
        gbc.writeMem(0xbd04, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x10);
        EXPECT(gbc.b(),  0x1f);
        EXPECT(gbc.c(),  0x3);
        EXPECT(gbc.d(),  0x64);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x4b);
        EXPECT(gbc.l(),  0x6d);
        EXPECT(gbc.sp(), 0xcef);
        EXPECT(gbc.pc(), 0xbd05);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbd04), 0x8c);
        // 8C 0384
        gbc.setState(0x50b8, 0x45b5, 0xaf70, 0x3b5a, 0x3db5, 0x47c, 0x1, 0x1);
        gbc.writeMem(0x50b8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb4);
        EXPECT(gbc.b(),  0x3b);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x3d);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x4);
        EXPECT(gbc.l(),  0x7c);
        EXPECT(gbc.sp(), 0x45b5);
        EXPECT(gbc.pc(), 0x50b9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0385
        gbc.setState(0xc3b4, 0xefad, 0xb700, 0x1bef, 0x4a5, 0x3372, 0x0, 0x1);
        gbc.writeMem(0xc3b4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xea);
        EXPECT(gbc.b(),  0x1b);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x4);
        EXPECT(gbc.e(),  0xa5);
        EXPECT(gbc.h(),  0x33);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0xefad);
        EXPECT(gbc.pc(), 0xc3b5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xc3b4), 0x8c);
        // 8C 0386
        gbc.setState(0x7914, 0x81c, 0x5590, 0xa60e, 0xdba9, 0x72f1, 0x0, 0x1);
        gbc.writeMem(0x7914, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc8);
        EXPECT(gbc.b(),  0xa6);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xdb);
        EXPECT(gbc.e(),  0xa9);
        EXPECT(gbc.h(),  0x72);
        EXPECT(gbc.l(),  0xf1);
        EXPECT(gbc.sp(), 0x81c);
        EXPECT(gbc.pc(), 0x7915);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0387
        gbc.setState(0x10c1, 0x8098, 0xd7e0, 0x675, 0x8b06, 0xc8e, 0x1, 0x1);
        gbc.writeMem(0x10c1, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe3);
        EXPECT(gbc.b(),  0x6);
        EXPECT(gbc.c(),  0x75);
        EXPECT(gbc.d(),  0x8b);
        EXPECT(gbc.e(),  0x6);
        EXPECT(gbc.h(),  0xc);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x8098);
        EXPECT(gbc.pc(), 0x10c2);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0388
        gbc.setState(0x712b, 0xb40e, 0xf2d0, 0xddfc, 0x304f, 0xb30c, 0x0, 0x0);
        gbc.writeMem(0x712b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0xdd);
        EXPECT(gbc.c(),  0xfc);
        EXPECT(gbc.d(),  0x30);
        EXPECT(gbc.e(),  0x4f);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0xc);
        EXPECT(gbc.sp(), 0xb40e);
        EXPECT(gbc.pc(), 0x712c);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0389
        gbc.setState(0xd0e3, 0xe751, 0x2420, 0x5a7d, 0x29f5, 0x7750, 0x1, 0x1);
        gbc.writeMem(0xd0e3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x7d);
        EXPECT(gbc.d(),  0x29);
        EXPECT(gbc.e(),  0xf5);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x50);
        EXPECT(gbc.sp(), 0xe751);
        EXPECT(gbc.pc(), 0xd0e4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd0e3), 0x8c);
        // 8C 038A
        gbc.setState(0xd212, 0xb293, 0x1090, 0xa823, 0xef86, 0x717b, 0x0, 0x0);
        gbc.writeMem(0xd212, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x82);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0xef);
        EXPECT(gbc.e(),  0x86);
        EXPECT(gbc.h(),  0x71);
        EXPECT(gbc.l(),  0x7b);
        EXPECT(gbc.sp(), 0xb293);
        EXPECT(gbc.pc(), 0xd213);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd212), 0x8c);
        // 8C 038B
        gbc.setState(0xb11a, 0x4836, 0x86e0, 0xb29c, 0x911b, 0xbadc, 0x1, 0x1);
        gbc.writeMem(0xb11a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x40);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0x9c);
        EXPECT(gbc.d(),  0x91);
        EXPECT(gbc.e(),  0x1b);
        EXPECT(gbc.h(),  0xba);
        EXPECT(gbc.l(),  0xdc);
        EXPECT(gbc.sp(), 0x4836);
        EXPECT(gbc.pc(), 0xb11b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb11a), 0x8c);
        // 8C 038C
        gbc.setState(0x950e, 0xb401, 0x7a0, 0x229e, 0x3ece, 0xb5c2, 0x1, 0x1);
        gbc.writeMem(0x950e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xbc);
        EXPECT(gbc.b(),  0x22);
        EXPECT(gbc.c(),  0x9e);
        EXPECT(gbc.d(),  0x3e);
        EXPECT(gbc.e(),  0xce);
        EXPECT(gbc.h(),  0xb5);
        EXPECT(gbc.l(),  0xc2);
        EXPECT(gbc.sp(), 0xb401);
        EXPECT(gbc.pc(), 0x950f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x950e), 0x8c);
        // 8C 038D
        gbc.setState(0x6cba, 0x7929, 0x7ec0, 0xaf10, 0xd240, 0x508d, 0x0, 0x0);
        gbc.writeMem(0x6cba, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xce);
        EXPECT(gbc.b(),  0xaf);
        EXPECT(gbc.c(),  0x10);
        EXPECT(gbc.d(),  0xd2);
        EXPECT(gbc.e(),  0x40);
        EXPECT(gbc.h(),  0x50);
        EXPECT(gbc.l(),  0x8d);
        EXPECT(gbc.sp(), 0x7929);
        EXPECT(gbc.pc(), 0x6cbb);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 038E
        gbc.setState(0xffb, 0xb1af, 0x4150, 0xc7a0, 0x5765, 0x41b6, 0x1, 0x1);
        gbc.writeMem(0xffb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0xa0);
        EXPECT(gbc.d(),  0x57);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0x41);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0xb1af);
        EXPECT(gbc.pc(), 0xffc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 038F
        gbc.setState(0xabc7, 0x192b, 0xa0a0, 0xc773, 0xb596, 0x751f, 0x0, 0x0);
        gbc.writeMem(0xabc7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0xc7);
        EXPECT(gbc.c(),  0x73);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x75);
        EXPECT(gbc.l(),  0x1f);
        EXPECT(gbc.sp(), 0x192b);
        EXPECT(gbc.pc(), 0xabc8);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xabc7), 0x8c);
        // 8C 0390
        gbc.setState(0x731c, 0x9496, 0xb710, 0xf82a, 0x6fc0, 0x84b5, 0x0, 0x1);
        gbc.writeMem(0x731c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3c);
        EXPECT(gbc.b(),  0xf8);
        EXPECT(gbc.c(),  0x2a);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0x84);
        EXPECT(gbc.l(),  0xb5);
        EXPECT(gbc.sp(), 0x9496);
        EXPECT(gbc.pc(), 0x731d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0391
        gbc.setState(0x517d, 0x132d, 0x7d20, 0xba62, 0x38d6, 0x1ef2, 0x0, 0x1);
        gbc.writeMem(0x517d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9b);
        EXPECT(gbc.b(),  0xba);
        EXPECT(gbc.c(),  0x62);
        EXPECT(gbc.d(),  0x38);
        EXPECT(gbc.e(),  0xd6);
        EXPECT(gbc.h(),  0x1e);
        EXPECT(gbc.l(),  0xf2);
        EXPECT(gbc.sp(), 0x132d);
        EXPECT(gbc.pc(), 0x517e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0392
        gbc.setState(0x37d, 0x2d96, 0xe50, 0x65f9, 0xa85c, 0xda67, 0x0, 0x1);
        gbc.writeMem(0x37d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x65);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x5c);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0x67);
        EXPECT(gbc.sp(), 0x2d96);
        EXPECT(gbc.pc(), 0x37e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0393
        gbc.setState(0x657a, 0x6dbe, 0xfb60, 0xda3c, 0xae0, 0xf387, 0x0, 0x1);
        gbc.writeMem(0x657a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xee);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x3c);
        EXPECT(gbc.d(),  0xa);
        EXPECT(gbc.e(),  0xe0);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x87);
        EXPECT(gbc.sp(), 0x6dbe);
        EXPECT(gbc.pc(), 0x657b);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 0394
        gbc.setState(0x3e1c, 0x32ed, 0x4fa0, 0x6f85, 0xbcd, 0x51a1, 0x0, 0x0);
        gbc.writeMem(0x3e1c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa0);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x85);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xcd);
        EXPECT(gbc.h(),  0x51);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0x32ed);
        EXPECT(gbc.pc(), 0x3e1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 0395
        gbc.setState(0x5d88, 0x93e2, 0x7b40, 0xa872, 0xab38, 0xc908, 0x0, 0x0);
        gbc.writeMem(0x5d88, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x44);
        EXPECT(gbc.b(),  0xa8);
        EXPECT(gbc.c(),  0x72);
        EXPECT(gbc.d(),  0xab);
        EXPECT(gbc.e(),  0x38);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0x8);
        EXPECT(gbc.sp(), 0x93e2);
        EXPECT(gbc.pc(), 0x5d89);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0396
        gbc.setState(0x4be3, 0xfb24, 0x82f0, 0xb47b, 0x6657, 0xcd8c, 0x0, 0x0);
        gbc.writeMem(0x4be3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x50);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0x57);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x8c);
        EXPECT(gbc.sp(), 0xfb24);
        EXPECT(gbc.pc(), 0x4be4);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 0397
        gbc.setState(0x6e48, 0xc015, 0x2920, 0x6b67, 0xf25f, 0x399, 0x0, 0x1);
        gbc.writeMem(0x6e48, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2c);
        EXPECT(gbc.b(),  0x6b);
        EXPECT(gbc.c(),  0x67);
        EXPECT(gbc.d(),  0xf2);
        EXPECT(gbc.e(),  0x5f);
        EXPECT(gbc.h(),  0x3);
        EXPECT(gbc.l(),  0x99);
        EXPECT(gbc.sp(), 0xc015);
        EXPECT(gbc.pc(), 0x6e49);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 0398
        gbc.setState(0xe2d2, 0xbd45, 0x4680, 0x3ffd, 0x24fa, 0xd211, 0x0, 0x1);
        gbc.writeMem(0xe2d2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0x3f);
        EXPECT(gbc.c(),  0xfd);
        EXPECT(gbc.d(),  0x24);
        EXPECT(gbc.e(),  0xfa);
        EXPECT(gbc.h(),  0xd2);
        EXPECT(gbc.l(),  0x11);
        EXPECT(gbc.sp(), 0xbd45);
        EXPECT(gbc.pc(), 0xe2d3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe2d2), 0x8c);
        // 8C 0399
        gbc.setState(0x7a27, 0x2d9a, 0xdbf0, 0x7a7b, 0xc620, 0xa88e, 0x0, 0x0);
        gbc.writeMem(0x7a27, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x84);
        EXPECT(gbc.b(),  0x7a);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc6);
        EXPECT(gbc.e(),  0x20);
        EXPECT(gbc.h(),  0xa8);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x2d9a);
        EXPECT(gbc.pc(), 0x7a28);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 039A
        gbc.setState(0x7618, 0xeb2e, 0x4520, 0x2c5a, 0x3512, 0x6cab, 0x0, 0x1);
        gbc.writeMem(0x7618, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x2c);
        EXPECT(gbc.c(),  0x5a);
        EXPECT(gbc.d(),  0x35);
        EXPECT(gbc.e(),  0x12);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0xab);
        EXPECT(gbc.sp(), 0xeb2e);
        EXPECT(gbc.pc(), 0x7619);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 039B
        gbc.setState(0x50a2, 0xaf37, 0xdf40, 0xed48, 0xeb24, 0x77d1, 0x0, 0x0);
        gbc.writeMem(0x50a2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x56);
        EXPECT(gbc.b(),  0xed);
        EXPECT(gbc.c(),  0x48);
        EXPECT(gbc.d(),  0xeb);
        EXPECT(gbc.e(),  0x24);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0xd1);
        EXPECT(gbc.sp(), 0xaf37);
        EXPECT(gbc.pc(), 0x50a3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 039C
        gbc.setState(0x767b, 0x7732, 0x1c40, 0x6d50, 0xa227, 0xf9f8, 0x1, 0x0);
        gbc.writeMem(0x767b, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x15);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0x50);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x27);
        EXPECT(gbc.h(),  0xf9);
        EXPECT(gbc.l(),  0xf8);
        EXPECT(gbc.sp(), 0x7732);
        EXPECT(gbc.pc(), 0x767c);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 039D
        gbc.setState(0xbe51, 0x6eda, 0x9780, 0x722b, 0x754c, 0xcd52, 0x1, 0x1);
        gbc.writeMem(0xbe51, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x64);
        EXPECT(gbc.b(),  0x72);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x75);
        EXPECT(gbc.e(),  0x4c);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x52);
        EXPECT(gbc.sp(), 0x6eda);
        EXPECT(gbc.pc(), 0xbe52);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbe51), 0x8c);
        // 8C 039E
        gbc.setState(0x34f4, 0xeb21, 0xd9c0, 0xda80, 0x20d9, 0x1b2c, 0x0, 0x1);
        gbc.writeMem(0x34f4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf4);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0x20);
        EXPECT(gbc.e(),  0xd9);
        EXPECT(gbc.h(),  0x1b);
        EXPECT(gbc.l(),  0x2c);
        EXPECT(gbc.sp(), 0xeb21);
        EXPECT(gbc.pc(), 0x34f5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 039F
        gbc.setState(0x9781, 0x91b7, 0x2370, 0xacef, 0x8eb3, 0xd1a7, 0x0, 0x1);
        gbc.writeMem(0x9781, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf5);
        EXPECT(gbc.b(),  0xac);
        EXPECT(gbc.c(),  0xef);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0xb3);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0xa7);
        EXPECT(gbc.sp(), 0x91b7);
        EXPECT(gbc.pc(), 0x9782);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9781), 0x8c);
        // 8C 03A0
        gbc.setState(0xeba8, 0x526a, 0x6860, 0xda30, 0x14ca, 0x8e0d, 0x1, 0x1);
        gbc.writeMem(0xeba8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xf6);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xca);
        EXPECT(gbc.h(),  0x8e);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0x526a);
        EXPECT(gbc.pc(), 0xeba9);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xeba8), 0x8c);
        // 8C 03A1
        gbc.setState(0x6090, 0xf254, 0xcd40, 0xbb33, 0xb53e, 0x2d1d, 0x0, 0x1);
        gbc.writeMem(0x6090, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfa);
        EXPECT(gbc.b(),  0xbb);
        EXPECT(gbc.c(),  0x33);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x3e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x1d);
        EXPECT(gbc.sp(), 0xf254);
        EXPECT(gbc.pc(), 0x6091);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 03A2
        gbc.setState(0xaeab, 0x3203, 0x5c50, 0x8982, 0xd116, 0xcd2d, 0x0, 0x1);
        gbc.writeMem(0xaeab, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x89);
        EXPECT(gbc.c(),  0x82);
        EXPECT(gbc.d(),  0xd1);
        EXPECT(gbc.e(),  0x16);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0x2d);
        EXPECT(gbc.sp(), 0x3203);
        EXPECT(gbc.pc(), 0xaeac);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaeab), 0x8c);
        // 8C 03A3
        gbc.setState(0xa7b2, 0x6481, 0x4570, 0xf930, 0x561d, 0xdd71, 0x0, 0x0);
        gbc.writeMem(0xa7b2, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x23);
        EXPECT(gbc.b(),  0xf9);
        EXPECT(gbc.c(),  0x30);
        EXPECT(gbc.d(),  0x56);
        EXPECT(gbc.e(),  0x1d);
        EXPECT(gbc.h(),  0xdd);
        EXPECT(gbc.l(),  0x71);
        EXPECT(gbc.sp(), 0x6481);
        EXPECT(gbc.pc(), 0xa7b3);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xa7b2), 0x8c);
        // 8C 03A4
        gbc.setState(0x6d6c, 0x7027, 0x8940, 0xa719, 0x5dbe, 0x2453, 0x1, 0x0);
        gbc.writeMem(0x6d6c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xad);
        EXPECT(gbc.b(),  0xa7);
        EXPECT(gbc.c(),  0x19);
        EXPECT(gbc.d(),  0x5d);
        EXPECT(gbc.e(),  0xbe);
        EXPECT(gbc.h(),  0x24);
        EXPECT(gbc.l(),  0x53);
        EXPECT(gbc.sp(), 0x7027);
        EXPECT(gbc.pc(), 0x6d6d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 03A5
        gbc.setState(0x5d69, 0x933f, 0x57d0, 0x811d, 0x5132, 0xdaf0, 0x1, 0x1);
        gbc.writeMem(0x5d69, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x32);
        EXPECT(gbc.b(),  0x81);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0xda);
        EXPECT(gbc.l(),  0xf0);
        EXPECT(gbc.sp(), 0x933f);
        EXPECT(gbc.pc(), 0x5d6a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03A7
        gbc.setState(0x123c, 0x3589, 0xb9a0, 0x694d, 0x8e98, 0x771e, 0x1, 0x1);
        gbc.writeMem(0x123c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x30);
        EXPECT(gbc.b(),  0x69);
        EXPECT(gbc.c(),  0x4d);
        EXPECT(gbc.d(),  0x8e);
        EXPECT(gbc.e(),  0x98);
        EXPECT(gbc.h(),  0x77);
        EXPECT(gbc.l(),  0x1e);
        EXPECT(gbc.sp(), 0x3589);
        EXPECT(gbc.pc(), 0x123d);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03A8
        gbc.setState(0x6358, 0x41c6, 0xad90, 0x9e0e, 0xa859, 0x6b51, 0x0, 0x1);
        gbc.writeMem(0x6358, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x19);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0xe);
        EXPECT(gbc.d(),  0xa8);
        EXPECT(gbc.e(),  0x59);
        EXPECT(gbc.h(),  0x6b);
        EXPECT(gbc.l(),  0x51);
        EXPECT(gbc.sp(), 0x41c6);
        EXPECT(gbc.pc(), 0x6359);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03A9
        gbc.setState(0x8c1c, 0xcdfc, 0xa9e0, 0xa2b6, 0x1ba6, 0x5bce, 0x0, 0x0);
        gbc.writeMem(0x8c1c, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0xa2);
        EXPECT(gbc.c(),  0xb6);
        EXPECT(gbc.d(),  0x1b);
        EXPECT(gbc.e(),  0xa6);
        EXPECT(gbc.h(),  0x5b);
        EXPECT(gbc.l(),  0xce);
        EXPECT(gbc.sp(), 0xcdfc);
        EXPECT(gbc.pc(), 0x8c1d);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x8c1c), 0x8c);
        // 8C 03AA
        gbc.setState(0x768e, 0x95fc, 0x6cc0, 0x931c, 0x7dc1, 0xbbbc, 0x1, 0x1);
        gbc.writeMem(0x768e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x27);
        EXPECT(gbc.b(),  0x93);
        EXPECT(gbc.c(),  0x1c);
        EXPECT(gbc.d(),  0x7d);
        EXPECT(gbc.e(),  0xc1);
        EXPECT(gbc.h(),  0xbb);
        EXPECT(gbc.l(),  0xbc);
        EXPECT(gbc.sp(), 0x95fc);
        EXPECT(gbc.pc(), 0x768f);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03AB
        gbc.setState(0x64fb, 0xc165, 0x6c60, 0x79d1, 0xb84b, 0x29e1, 0x1, 0x0);
        gbc.writeMem(0x64fb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x95);
        EXPECT(gbc.b(),  0x79);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xb8);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x29);
        EXPECT(gbc.l(),  0xe1);
        EXPECT(gbc.sp(), 0xc165);
        EXPECT(gbc.pc(), 0x64fc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 03AC
        gbc.setState(0xbc25, 0x3e5d, 0xae90, 0x800d, 0x3b53, 0xcbfd, 0x1, 0x0);
        gbc.writeMem(0xbc25, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0xd);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x53);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0xfd);
        EXPECT(gbc.sp(), 0x3e5d);
        EXPECT(gbc.pc(), 0xbc26);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc25), 0x8c);
        // 8C 03AD
        gbc.setState(0x79e7, 0xb86e, 0xc150, 0x76a, 0x6ab7, 0x199f, 0x1, 0x0);
        gbc.writeMem(0x79e7, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xdb);
        EXPECT(gbc.b(),  0x7);
        EXPECT(gbc.c(),  0x6a);
        EXPECT(gbc.d(),  0x6a);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x19);
        EXPECT(gbc.l(),  0x9f);
        EXPECT(gbc.sp(), 0xb86e);
        EXPECT(gbc.pc(), 0x79e8);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 03AE
        gbc.setState(0xecfd, 0x99ab, 0x4270, 0x2fc1, 0x9b76, 0x65c, 0x0, 0x0);
        gbc.writeMem(0xecfd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x49);
        EXPECT(gbc.b(),  0x2f);
        EXPECT(gbc.c(),  0xc1);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0x76);
        EXPECT(gbc.h(),  0x6);
        EXPECT(gbc.l(),  0x5c);
        EXPECT(gbc.sp(), 0x99ab);
        EXPECT(gbc.pc(), 0xecfe);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xecfd), 0x8c);
        // 8C 03AF
        gbc.setState(0xc55a, 0xa356, 0xc7f0, 0xd8e9, 0x66e5, 0xeb40, 0x1, 0x0);
        gbc.writeMem(0xc55a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb3);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xe9);
        EXPECT(gbc.d(),  0x66);
        EXPECT(gbc.e(),  0xe5);
        EXPECT(gbc.h(),  0xeb);
        EXPECT(gbc.l(),  0x40);
        EXPECT(gbc.sp(), 0xa356);
        EXPECT(gbc.pc(), 0xc55b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc55a), 0x8c);
        // 8C 03B0
        gbc.setState(0x2afc, 0xea51, 0xc3b0, 0x9e26, 0xe1f9, 0x6085, 0x1, 0x0);
        gbc.writeMem(0x2afc, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x24);
        EXPECT(gbc.b(),  0x9e);
        EXPECT(gbc.c(),  0x26);
        EXPECT(gbc.d(),  0xe1);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0x60);
        EXPECT(gbc.l(),  0x85);
        EXPECT(gbc.sp(), 0xea51);
        EXPECT(gbc.pc(), 0x2afd);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 03B1
        gbc.setState(0x3044, 0x411a, 0x9430, 0x801e, 0x4465, 0xa546, 0x1, 0x0);
        gbc.writeMem(0x3044, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3a);
        EXPECT(gbc.b(),  0x80);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0x44);
        EXPECT(gbc.e(),  0x65);
        EXPECT(gbc.h(),  0xa5);
        EXPECT(gbc.l(),  0x46);
        EXPECT(gbc.sp(), 0x411a);
        EXPECT(gbc.pc(), 0x3045);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 03B2
        gbc.setState(0x1da9, 0x1597, 0x4fc0, 0xe198, 0x87cc, 0xc9da, 0x1, 0x1);
        gbc.writeMem(0x1da9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x18);
        EXPECT(gbc.b(),  0xe1);
        EXPECT(gbc.c(),  0x98);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0xcc);
        EXPECT(gbc.h(),  0xc9);
        EXPECT(gbc.l(),  0xda);
        EXPECT(gbc.sp(), 0x1597);
        EXPECT(gbc.pc(), 0x1daa);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03B3
        gbc.setState(0xa6dd, 0xd1e1, 0xa6c0, 0x6a8b, 0xec96, 0x1de2, 0x0, 0x0);
        gbc.writeMem(0xa6dd, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc3);
        EXPECT(gbc.b(),  0x6a);
        EXPECT(gbc.c(),  0x8b);
        EXPECT(gbc.d(),  0xec);
        EXPECT(gbc.e(),  0x96);
        EXPECT(gbc.h(),  0x1d);
        EXPECT(gbc.l(),  0xe2);
        EXPECT(gbc.sp(), 0xd1e1);
        EXPECT(gbc.pc(), 0xa6de);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xa6dd), 0x8c);
        // 8C 03B4
        gbc.setState(0xb4e0, 0x7e41, 0x4f10, 0x1687, 0x1432, 0x2179, 0x0, 0x1);
        gbc.writeMem(0xb4e0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x71);
        EXPECT(gbc.b(),  0x16);
        EXPECT(gbc.c(),  0x87);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0x32);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0x79);
        EXPECT(gbc.sp(), 0x7e41);
        EXPECT(gbc.pc(), 0xb4e1);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xb4e0), 0x8c);
        // 8C 03B5
        gbc.setState(0xbfb8, 0xaa29, 0x2f80, 0x4791, 0xd9a, 0x543a, 0x0, 0x0);
        gbc.writeMem(0xbfb8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x83);
        EXPECT(gbc.b(),  0x47);
        EXPECT(gbc.c(),  0x91);
        EXPECT(gbc.d(),  0xd);
        EXPECT(gbc.e(),  0x9a);
        EXPECT(gbc.h(),  0x54);
        EXPECT(gbc.l(),  0x3a);
        EXPECT(gbc.sp(), 0xaa29);
        EXPECT(gbc.pc(), 0xbfb9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xbfb8), 0x8c);
        // 8C 03B6
        gbc.setState(0x409, 0xc969, 0xe3c0, 0x3923, 0x508f, 0x7c2b, 0x1, 0x1);
        gbc.writeMem(0x409, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x5f);
        EXPECT(gbc.b(),  0x39);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x50);
        EXPECT(gbc.e(),  0x8f);
        EXPECT(gbc.h(),  0x7c);
        EXPECT(gbc.l(),  0x2b);
        EXPECT(gbc.sp(), 0xc969);
        EXPECT(gbc.pc(), 0x40a);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 03B7
        gbc.setState(0x1da3, 0x29ac, 0xeee0, 0x2b13, 0x86d1, 0xb1b1, 0x1, 0x0);
        gbc.writeMem(0x1da3, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x9f);
        EXPECT(gbc.b(),  0x2b);
        EXPECT(gbc.c(),  0x13);
        EXPECT(gbc.d(),  0x86);
        EXPECT(gbc.e(),  0xd1);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xb1);
        EXPECT(gbc.sp(), 0x29ac);
        EXPECT(gbc.pc(), 0x1da4);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 03B8
        gbc.setState(0xd093, 0xc6c2, 0x5600, 0x5174, 0xa208, 0x8b4d, 0x1, 0x1);
        gbc.writeMem(0xd093, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x51);
        EXPECT(gbc.c(),  0x74);
        EXPECT(gbc.d(),  0xa2);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0x8b);
        EXPECT(gbc.l(),  0x4d);
        EXPECT(gbc.sp(), 0xc6c2);
        EXPECT(gbc.pc(), 0xd094);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd093), 0x8c);
        // 8C 03B9
        gbc.setState(0xe470, 0x3c99, 0xef0, 0x8515, 0xce79, 0x65d5, 0x0, 0x1);
        gbc.writeMem(0xe470, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0x85);
        EXPECT(gbc.c(),  0x15);
        EXPECT(gbc.d(),  0xce);
        EXPECT(gbc.e(),  0x79);
        EXPECT(gbc.h(),  0x65);
        EXPECT(gbc.l(),  0xd5);
        EXPECT(gbc.sp(), 0x3c99);
        EXPECT(gbc.pc(), 0xe471);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xe470), 0x8c);
        // 8C 03BA
        gbc.setState(0x9643, 0x889b, 0x3d40, 0x1d6e, 0xbb6e, 0xd9a5, 0x1, 0x0);
        gbc.writeMem(0x9643, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x1d);
        EXPECT(gbc.c(),  0x6e);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x6e);
        EXPECT(gbc.h(),  0xd9);
        EXPECT(gbc.l(),  0xa5);
        EXPECT(gbc.sp(), 0x889b);
        EXPECT(gbc.pc(), 0x9644);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9643), 0x8c);
        // 8C 03BB
        gbc.setState(0x7e6, 0x6245, 0xaff0, 0x4aaf, 0x6010, 0xe872, 0x0, 0x1);
        gbc.writeMem(0x7e6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x98);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0xaf);
        EXPECT(gbc.d(),  0x60);
        EXPECT(gbc.e(),  0x10);
        EXPECT(gbc.h(),  0xe8);
        EXPECT(gbc.l(),  0x72);
        EXPECT(gbc.sp(), 0x6245);
        EXPECT(gbc.pc(), 0x7e7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03BC
        gbc.setState(0x35e8, 0xa093, 0xc790, 0xb32b, 0x4bf9, 0xea60, 0x0, 0x0);
        gbc.writeMem(0x35e8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb2);
        EXPECT(gbc.b(),  0xb3);
        EXPECT(gbc.c(),  0x2b);
        EXPECT(gbc.d(),  0x4b);
        EXPECT(gbc.e(),  0xf9);
        EXPECT(gbc.h(),  0xea);
        EXPECT(gbc.l(),  0x60);
        EXPECT(gbc.sp(), 0xa093);
        EXPECT(gbc.pc(), 0x35e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03BD
        gbc.setState(0x9db8, 0x78b1, 0xa940, 0x617b, 0x6f37, 0x5a59, 0x0, 0x0);
        gbc.writeMem(0x9db8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x3);
        EXPECT(gbc.b(),  0x61);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0x6f);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0x5a);
        EXPECT(gbc.l(),  0x59);
        EXPECT(gbc.sp(), 0x78b1);
        EXPECT(gbc.pc(), 0x9db9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9db8), 0x8c);
        // 8C 03BE
        gbc.setState(0xebe0, 0x94c8, 0x2fc0, 0x6eb3, 0x6790, 0xb233, 0x1, 0x0);
        gbc.writeMem(0xebe0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe1);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xb3);
        EXPECT(gbc.d(),  0x67);
        EXPECT(gbc.e(),  0x90);
        EXPECT(gbc.h(),  0xb2);
        EXPECT(gbc.l(),  0x33);
        EXPECT(gbc.sp(), 0x94c8);
        EXPECT(gbc.pc(), 0xebe1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xebe0), 0x8c);
        // 8C 03BF
        gbc.setState(0x273d, 0xd38, 0xec30, 0x36ca, 0x9ba8, 0x94e3, 0x0, 0x1);
        gbc.writeMem(0x273d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x81);
        EXPECT(gbc.b(),  0x36);
        EXPECT(gbc.c(),  0xca);
        EXPECT(gbc.d(),  0x9b);
        EXPECT(gbc.e(),  0xa8);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0xe3);
        EXPECT(gbc.sp(), 0xd38);
        EXPECT(gbc.pc(), 0x273e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03C0
        gbc.setState(0xbc1d, 0xf1ab, 0x9940, 0xb004, 0x93b7, 0x7bae, 0x0, 0x1);
        gbc.writeMem(0xbc1d, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xb0);
        EXPECT(gbc.c(),  0x4);
        EXPECT(gbc.d(),  0x93);
        EXPECT(gbc.e(),  0xb7);
        EXPECT(gbc.h(),  0x7b);
        EXPECT(gbc.l(),  0xae);
        EXPECT(gbc.sp(), 0xf1ab);
        EXPECT(gbc.pc(), 0xbc1e);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc1d), 0x8c);
        // 8C 03C1
        gbc.setState(0x742, 0x7367, 0xcbd0, 0xbe1e, 0xf19c, 0x6c23, 0x1, 0x0);
        gbc.writeMem(0x742, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x38);
        EXPECT(gbc.b(),  0xbe);
        EXPECT(gbc.c(),  0x1e);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x9c);
        EXPECT(gbc.h(),  0x6c);
        EXPECT(gbc.l(),  0x23);
        EXPECT(gbc.sp(), 0x7367);
        EXPECT(gbc.pc(), 0x743);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03C2
        gbc.setState(0xe0f5, 0xa2d1, 0xd880, 0x3025, 0xf15e, 0x7480, 0x0, 0x0);
        gbc.writeMem(0xe0f5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4c);
        EXPECT(gbc.b(),  0x30);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0xf1);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0x74);
        EXPECT(gbc.l(),  0x80);
        EXPECT(gbc.sp(), 0xa2d1);
        EXPECT(gbc.pc(), 0xe0f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe0f5), 0x8c);
        // 8C 03C3
        gbc.setState(0xae93, 0x7a08, 0xe440, 0x6ef1, 0xdab5, 0x503, 0x1, 0x0);
        gbc.writeMem(0xae93, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe9);
        EXPECT(gbc.b(),  0x6e);
        EXPECT(gbc.c(),  0xf1);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xb5);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x3);
        EXPECT(gbc.sp(), 0x7a08);
        EXPECT(gbc.pc(), 0xae94);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xae93), 0x8c);
        // 8C 03C4
        gbc.setState(0x19d9, 0xcdc8, 0xeb80, 0x5a79, 0xb517, 0x80d6, 0x0, 0x1);
        gbc.writeMem(0x19d9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6b);
        EXPECT(gbc.b(),  0x5a);
        EXPECT(gbc.c(),  0x79);
        EXPECT(gbc.d(),  0xb5);
        EXPECT(gbc.e(),  0x17);
        EXPECT(gbc.h(),  0x80);
        EXPECT(gbc.l(),  0xd6);
        EXPECT(gbc.sp(), 0xcdc8);
        EXPECT(gbc.pc(), 0x19da);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 03C5
        gbc.setState(0x53f5, 0x9cbf, 0x4180, 0x9d8a, 0x268b, 0xbcb0, 0x0, 0x0);
        gbc.writeMem(0x53f5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x9d);
        EXPECT(gbc.c(),  0x8a);
        EXPECT(gbc.d(),  0x26);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0xb0);
        EXPECT(gbc.sp(), 0x9cbf);
        EXPECT(gbc.pc(), 0x53f6);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 03C6
        gbc.setState(0xdb94, 0x5625, 0x9500, 0x2366, 0x70f, 0x81dd, 0x1, 0x1);
        gbc.writeMem(0xdb94, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x16);
        EXPECT(gbc.b(),  0x23);
        EXPECT(gbc.c(),  0x66);
        EXPECT(gbc.d(),  0x7);
        EXPECT(gbc.e(),  0xf);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xdd);
        EXPECT(gbc.sp(), 0x5625);
        EXPECT(gbc.pc(), 0xdb95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xdb94), 0x8c);
        // 8C 03C7
        gbc.setState(0xcb02, 0x3c53, 0x4750, 0x6f7a, 0x5a52, 0x6939, 0x0, 0x1);
        gbc.writeMem(0xcb02, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb1);
        EXPECT(gbc.b(),  0x6f);
        EXPECT(gbc.c(),  0x7a);
        EXPECT(gbc.d(),  0x5a);
        EXPECT(gbc.e(),  0x52);
        EXPECT(gbc.h(),  0x69);
        EXPECT(gbc.l(),  0x39);
        EXPECT(gbc.sp(), 0x3c53);
        EXPECT(gbc.pc(), 0xcb03);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xcb02), 0x8c);
        // 8C 03C9
        gbc.setState(0x40c9, 0x6ef0, 0x34d0, 0xcbbe, 0x962, 0x83b6, 0x1, 0x0);
        gbc.writeMem(0x40c9, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xb8);
        EXPECT(gbc.b(),  0xcb);
        EXPECT(gbc.c(),  0xbe);
        EXPECT(gbc.d(),  0x9);
        EXPECT(gbc.e(),  0x62);
        EXPECT(gbc.h(),  0x83);
        EXPECT(gbc.l(),  0xb6);
        EXPECT(gbc.sp(), 0x6ef0);
        EXPECT(gbc.pc(), 0x40ca);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 03CA
        gbc.setState(0x3b48, 0xc665, 0xce90, 0xd825, 0x4f8b, 0xbc64, 0x1, 0x1);
        gbc.writeMem(0x3b48, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8b);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0x25);
        EXPECT(gbc.d(),  0x4f);
        EXPECT(gbc.e(),  0x8b);
        EXPECT(gbc.h(),  0xbc);
        EXPECT(gbc.l(),  0x64);
        EXPECT(gbc.sp(), 0xc665);
        EXPECT(gbc.pc(), 0x3b49);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03CB
        gbc.setState(0x24a, 0x6f23, 0x8b20, 0x1180, 0xbb7e, 0x21a4, 0x1, 0x0);
        gbc.writeMem(0x24a, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xac);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x80);
        EXPECT(gbc.d(),  0xbb);
        EXPECT(gbc.e(),  0x7e);
        EXPECT(gbc.h(),  0x21);
        EXPECT(gbc.l(),  0xa4);
        EXPECT(gbc.sp(), 0x6f23);
        EXPECT(gbc.pc(), 0x24b);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 03CC
        gbc.setState(0x707e, 0x4ad0, 0xcda0, 0xc9fe, 0xe405, 0x3d8e, 0x0, 0x1);
        gbc.writeMem(0x707e, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa);
        EXPECT(gbc.b(),  0xc9);
        EXPECT(gbc.c(),  0xfe);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x5);
        EXPECT(gbc.h(),  0x3d);
        EXPECT(gbc.l(),  0x8e);
        EXPECT(gbc.sp(), 0x4ad0);
        EXPECT(gbc.pc(), 0x707f);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03CD
        gbc.setState(0x7db, 0xb105, 0x200, 0x1123, 0x9e5e, 0xa4cc, 0x1, 0x1);
        gbc.writeMem(0x7db, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xa6);
        EXPECT(gbc.b(),  0x11);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x9e);
        EXPECT(gbc.e(),  0x5e);
        EXPECT(gbc.h(),  0xa4);
        EXPECT(gbc.l(),  0xcc);
        EXPECT(gbc.sp(), 0xb105);
        EXPECT(gbc.pc(), 0x7dc);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 03CE
        gbc.setState(0x3ccb, 0xc639, 0x46d0, 0xb4cd, 0x12df, 0x2d5d, 0x0, 0x0);
        gbc.writeMem(0x3ccb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x74);
        EXPECT(gbc.b(),  0xb4);
        EXPECT(gbc.c(),  0xcd);
        EXPECT(gbc.d(),  0x12);
        EXPECT(gbc.e(),  0xdf);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x5d);
        EXPECT(gbc.sp(), 0xc639);
        EXPECT(gbc.pc(), 0x3ccc);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 03CF
        gbc.setState(0xee94, 0x77d2, 0x60e0, 0xcdd1, 0xdde7, 0xcdf7, 0x1, 0x0);
        gbc.writeMem(0xee94, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2d);
        EXPECT(gbc.b(),  0xcd);
        EXPECT(gbc.c(),  0xd1);
        EXPECT(gbc.d(),  0xdd);
        EXPECT(gbc.e(),  0xe7);
        EXPECT(gbc.h(),  0xcd);
        EXPECT(gbc.l(),  0xf7);
        EXPECT(gbc.sp(), 0x77d2);
        EXPECT(gbc.pc(), 0xee95);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xee94), 0x8c);
        // 8C 03D0
        gbc.setState(0xedd4, 0x7ef7, 0xd470, 0x767b, 0xc1e, 0x2d32, 0x0, 0x1);
        gbc.writeMem(0xedd4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2);
        EXPECT(gbc.b(),  0x76);
        EXPECT(gbc.c(),  0x7b);
        EXPECT(gbc.d(),  0xc);
        EXPECT(gbc.e(),  0x1e);
        EXPECT(gbc.h(),  0x2d);
        EXPECT(gbc.l(),  0x32);
        EXPECT(gbc.sp(), 0x7ef7);
        EXPECT(gbc.pc(), 0xedd5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xedd4), 0x8c);
        // 8C 03D1
        gbc.setState(0xe432, 0x79c5, 0xf4b0, 0xec7f, 0x2a01, 0x1fea, 0x0, 0x0);
        gbc.writeMem(0xe432, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x14);
        EXPECT(gbc.b(),  0xec);
        EXPECT(gbc.c(),  0x7f);
        EXPECT(gbc.d(),  0x2a);
        EXPECT(gbc.e(),  0x1);
        EXPECT(gbc.h(),  0x1f);
        EXPECT(gbc.l(),  0xea);
        EXPECT(gbc.sp(), 0x79c5);
        EXPECT(gbc.pc(), 0xe433);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe432), 0x8c);
        // 8C 03D2
        gbc.setState(0x71aa, 0x3f7c, 0x1630, 0xb2c5, 0x3b41, 0xcb95, 0x0, 0x1);
        gbc.writeMem(0x71aa, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xe2);
        EXPECT(gbc.b(),  0xb2);
        EXPECT(gbc.c(),  0xc5);
        EXPECT(gbc.d(),  0x3b);
        EXPECT(gbc.e(),  0x41);
        EXPECT(gbc.h(),  0xcb);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x3f7c);
        EXPECT(gbc.pc(), 0x71ab);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 03D3
        gbc.setState(0x66b6, 0xf71f, 0xeae0, 0x2d1d, 0x140b, 0xef16, 0x0, 0x0);
        gbc.writeMem(0x66b6, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0x2d);
        EXPECT(gbc.c(),  0x1d);
        EXPECT(gbc.d(),  0x14);
        EXPECT(gbc.e(),  0xb);
        EXPECT(gbc.h(),  0xef);
        EXPECT(gbc.l(),  0x16);
        EXPECT(gbc.sp(), 0xf71f);
        EXPECT(gbc.pc(), 0x66b7);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03D5
        gbc.setState(0x9099, 0xe462, 0x8c0, 0x4331, 0xbc0, 0xfc4a, 0x0, 0x0);
        gbc.writeMem(0x9099, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x4);
        EXPECT(gbc.b(),  0x43);
        EXPECT(gbc.c(),  0x31);
        EXPECT(gbc.d(),  0xb);
        EXPECT(gbc.e(),  0xc0);
        EXPECT(gbc.h(),  0xfc);
        EXPECT(gbc.l(),  0x4a);
        EXPECT(gbc.sp(), 0xe462);
        EXPECT(gbc.pc(), 0x909a);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0x9099), 0x8c);
        // 8C 03D6
        gbc.setState(0xe5f8, 0x90bb, 0x37c0, 0x97bd, 0xdac8, 0xf378, 0x0, 0x0);
        gbc.writeMem(0xe5f8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x2a);
        EXPECT(gbc.b(),  0x97);
        EXPECT(gbc.c(),  0xbd);
        EXPECT(gbc.d(),  0xda);
        EXPECT(gbc.e(),  0xc8);
        EXPECT(gbc.h(),  0xf3);
        EXPECT(gbc.l(),  0x78);
        EXPECT(gbc.sp(), 0x90bb);
        EXPECT(gbc.pc(), 0xe5f9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe5f8), 0x8c);
        // 8C 03D7
        gbc.setState(0xd6b5, 0xf705, 0x5220, 0x70d0, 0x51c7, 0x70ac, 0x1, 0x1);
        gbc.writeMem(0xd6b5, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc2);
        EXPECT(gbc.b(),  0x70);
        EXPECT(gbc.c(),  0xd0);
        EXPECT(gbc.d(),  0x51);
        EXPECT(gbc.e(),  0xc7);
        EXPECT(gbc.h(),  0x70);
        EXPECT(gbc.l(),  0xac);
        EXPECT(gbc.sp(), 0xf705);
        EXPECT(gbc.pc(), 0xd6b6);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0xd6b5), 0x8c);
        // 8C 03D8
        gbc.setState(0x5b07, 0x49d8, 0x43a0, 0xaee5, 0x11e3, 0x2bcf, 0x0, 0x1);
        gbc.writeMem(0x5b07, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6e);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xe5);
        EXPECT(gbc.d(),  0x11);
        EXPECT(gbc.e(),  0xe3);
        EXPECT(gbc.h(),  0x2b);
        EXPECT(gbc.l(),  0xcf);
        EXPECT(gbc.sp(), 0x49d8);
        EXPECT(gbc.pc(), 0x5b08);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 03D9
        gbc.setState(0x9841, 0x4b06, 0x7f70, 0xb123, 0x6c9d, 0x5995, 0x0, 0x1);
        gbc.writeMem(0x9841, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd9);
        EXPECT(gbc.b(),  0xb1);
        EXPECT(gbc.c(),  0x23);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x9d);
        EXPECT(gbc.h(),  0x59);
        EXPECT(gbc.l(),  0x95);
        EXPECT(gbc.sp(), 0x4b06);
        EXPECT(gbc.pc(), 0x9842);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x9841), 0x8c);
        // 8C 03DA
        gbc.setState(0x4dff, 0x12ce, 0x570, 0xd6bb, 0x65f3, 0x7886, 0x1, 0x0);
        gbc.writeMem(0x4dff, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x7e);
        EXPECT(gbc.b(),  0xd6);
        EXPECT(gbc.c(),  0xbb);
        EXPECT(gbc.d(),  0x65);
        EXPECT(gbc.e(),  0xf3);
        EXPECT(gbc.h(),  0x78);
        EXPECT(gbc.l(),  0x86);
        EXPECT(gbc.sp(), 0x12ce);
        EXPECT(gbc.pc(), 0x4e00);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        // 8C 03DB
        gbc.setState(0xc9e8, 0x254e, 0xe230, 0x4a81, 0x6c55, 0x7d1c, 0x0, 0x1);
        gbc.writeMem(0xc9e8, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0x4a);
        EXPECT(gbc.c(),  0x81);
        EXPECT(gbc.d(),  0x6c);
        EXPECT(gbc.e(),  0x55);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x1c);
        EXPECT(gbc.sp(), 0x254e);
        EXPECT(gbc.pc(), 0xc9e9);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xc9e8), 0x8c);
        // 8C 03DC
        gbc.setState(0x88eb, 0x5d6c, 0x8020, 0x8b3f, 0xf671, 0x7d49, 0x1, 0x0);
        gbc.writeMem(0x88eb, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xfd);
        EXPECT(gbc.b(),  0x8b);
        EXPECT(gbc.c(),  0x3f);
        EXPECT(gbc.d(),  0xf6);
        EXPECT(gbc.e(),  0x71);
        EXPECT(gbc.h(),  0x7d);
        EXPECT(gbc.l(),  0x49);
        EXPECT(gbc.sp(), 0x5d6c);
        EXPECT(gbc.pc(), 0x88ec);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x88eb), 0x8c);
        // 8C 03DD
        gbc.setState(0xb503, 0xb12f, 0x4df0, 0x7ca5, 0xdf82, 0xd183, 0x1, 0x1);
        gbc.writeMem(0xb503, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x1f);
        EXPECT(gbc.b(),  0x7c);
        EXPECT(gbc.c(),  0xa5);
        EXPECT(gbc.d(),  0xdf);
        EXPECT(gbc.e(),  0x82);
        EXPECT(gbc.h(),  0xd1);
        EXPECT(gbc.l(),  0x83);
        EXPECT(gbc.sp(), 0xb12f);
        EXPECT(gbc.pc(), 0xb504);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xb503), 0x8c);
        // 8C 03DE
        gbc.setState(0xaaa0, 0x2689, 0x2b30, 0x6dd3, 0xa911, 0xe110, 0x1, 0x1);
        gbc.writeMem(0xaaa0, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xd);
        EXPECT(gbc.b(),  0x6d);
        EXPECT(gbc.c(),  0xd3);
        EXPECT(gbc.d(),  0xa9);
        EXPECT(gbc.e(),  0x11);
        EXPECT(gbc.h(),  0xe1);
        EXPECT(gbc.l(),  0x10);
        EXPECT(gbc.sp(), 0x2689);
        EXPECT(gbc.pc(), 0xaaa1);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xaaa0), 0x8c);
        // 8C 03DF
        gbc.setState(0x6840, 0xa740, 0xc770, 0x8fc4, 0xe491, 0xc4cb, 0x1, 0x1);
        gbc.writeMem(0x6840, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x8c);
        EXPECT(gbc.b(),  0x8f);
        EXPECT(gbc.c(),  0xc4);
        EXPECT(gbc.d(),  0xe4);
        EXPECT(gbc.e(),  0x91);
        EXPECT(gbc.h(),  0xc4);
        EXPECT(gbc.l(),  0xcb);
        EXPECT(gbc.sp(), 0xa740);
        EXPECT(gbc.pc(), 0x6841);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        // 8C 03E0
        gbc.setState(0x6ace, 0x4398, 0xd30, 0x53b9, 0x7e94, 0x548, 0x0, 0x1);
        gbc.writeMem(0x6ace, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x13);
        EXPECT(gbc.b(),  0x53);
        EXPECT(gbc.c(),  0xb9);
        EXPECT(gbc.d(),  0x7e);
        EXPECT(gbc.e(),  0x94);
        EXPECT(gbc.h(),  0x5);
        EXPECT(gbc.l(),  0x48);
        EXPECT(gbc.sp(), 0x4398);
        EXPECT(gbc.pc(), 0x6acf);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  false);
        // 8C 03E1
        gbc.setState(0x45c4, 0xa1c8, 0xdf00, 0xd8ad, 0xf04b, 0x81a1, 0x0, 0x0);
        gbc.writeMem(0x45c4, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x60);
        EXPECT(gbc.b(),  0xd8);
        EXPECT(gbc.c(),  0xad);
        EXPECT(gbc.d(),  0xf0);
        EXPECT(gbc.e(),  0x4b);
        EXPECT(gbc.h(),  0x81);
        EXPECT(gbc.l(),  0xa1);
        EXPECT(gbc.sp(), 0xa1c8);
        EXPECT(gbc.pc(), 0x45c5);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03E2
        gbc.setState(0xae75, 0xedce, 0xcd40, 0x4caa, 0x5808, 0xb36f, 0x1, 0x1);
        gbc.writeMem(0xae75, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x80);
        EXPECT(gbc.b(),  0x4c);
        EXPECT(gbc.c(),  0xaa);
        EXPECT(gbc.d(),  0x58);
        EXPECT(gbc.e(),  0x8);
        EXPECT(gbc.h(),  0xb3);
        EXPECT(gbc.l(),  0x6f);
        EXPECT(gbc.sp(), 0xedce);
        EXPECT(gbc.pc(), 0xae76);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xae75), 0x8c);
        // 8C 03E3
        gbc.setState(0x84ef, 0xfc27, 0x1400, 0xdaae, 0x8737, 0xb10d, 0x0, 0x0);
        gbc.writeMem(0x84ef, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0xc5);
        EXPECT(gbc.b(),  0xda);
        EXPECT(gbc.c(),  0xae);
        EXPECT(gbc.d(),  0x87);
        EXPECT(gbc.e(),  0x37);
        EXPECT(gbc.h(),  0xb1);
        EXPECT(gbc.l(),  0xd);
        EXPECT(gbc.sp(), 0xfc27);
        EXPECT(gbc.pc(), 0x84f0);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  false);
        EXPECT(gbc.readMem(0x84ef), 0x8c);
        // 8C 03E5
        gbc.setState(0x230, 0x4ec4, 0x8c10, 0x46b, 0xe375, 0x943c, 0x0, 0x0);
        gbc.writeMem(0x230, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x21);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0x6b);
        EXPECT(gbc.d(),  0xe3);
        EXPECT(gbc.e(),  0x75);
        EXPECT(gbc.h(),  0x94);
        EXPECT(gbc.l(),  0x3c);
        EXPECT(gbc.sp(), 0x4ec4);
        EXPECT(gbc.pc(), 0x231);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        // 8C 03E6
        gbc.setState(0xe427, 0x9bed, 0x9150, 0x4ff, 0xd8d5, 0xf522, 0x1, 0x0);
        gbc.writeMem(0xe427, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x87);
        EXPECT(gbc.b(),  0x4);
        EXPECT(gbc.c(),  0xff);
        EXPECT(gbc.d(),  0xd8);
        EXPECT(gbc.e(),  0xd5);
        EXPECT(gbc.h(),  0xf5);
        EXPECT(gbc.l(),  0x22);
        EXPECT(gbc.sp(), 0x9bed);
        EXPECT(gbc.pc(), 0xe428);
        EXPECT(gbc.ime(), 0x1);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  false);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xe427), 0x8c);
        // 8C 03E7
        gbc.setState(0xbc4f, 0xfa19, 0x9cd0, 0xaef9, 0x52ef, 0xcfb2, 0x0, 0x1);
        gbc.writeMem(0xbc4f, { 0x8c });
        gbc.step();
        EXPECT(gbc.a(),  0x6c);
        EXPECT(gbc.b(),  0xae);
        EXPECT(gbc.c(),  0xf9);
        EXPECT(gbc.d(),  0x52);
        EXPECT(gbc.e(),  0xef);
        EXPECT(gbc.h(),  0xcf);
        EXPECT(gbc.l(),  0xb2);
        EXPECT(gbc.sp(), 0xfa19);
        EXPECT(gbc.pc(), 0xbc50);
        EXPECT(gbc.ime(), 0x0);
        EXPECT(gbc.flagZ(),  false);
        EXPECT(gbc.flagN(),  false);
        EXPECT(gbc.flagH(),  true);
        EXPECT(gbc.flagC(),  true);
        EXPECT(gbc.readMem(0xbc4f), 0x8c);
    }
