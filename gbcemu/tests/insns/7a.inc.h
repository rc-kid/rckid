    TEST(gbcemu, opcode_7a) {
        GBCEmu gbc{"", nullptr};
        uint8_t cartridge[0x8000];
        cartridge[0x149] = 0x02; // 8kb external RAM
        gbc.loadCartridge(new FlashGamePak(cartridge));
        // 7A 0000
        gbc.setState(0x6862, 0x48e6, 0xedf0, 0x17d2, 0x297e, 0x640b, 0x1, 0x0);
        gbc.writeMem(0x6862, { 0x7a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x48e6, gbc.sp());
        EXPECT(0x6863, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0002
        gbc.setState(0x6380, 0xbe5d, 0xfc20, 0xb7f1, 0x2e9, 0x537e, 0x0, 0x0);
        gbc.writeMem(0x6380, { 0x7a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xbe5d, gbc.sp());
        EXPECT(0x6381, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0003
        gbc.setState(0x3704, 0xa6b2, 0x7530, 0xea10, 0x3077, 0x6342, 0x0, 0x1);
        gbc.writeMem(0x3704, { 0x7a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xa6b2, gbc.sp());
        EXPECT(0x3705, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0004
        gbc.setState(0x99e4, 0xceaa, 0x4ba0, 0xb732, 0xe79, 0x215f, 0x1, 0x1);
        gbc.writeMem(0x99e4, { 0x7a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xceaa, gbc.sp());
        EXPECT(0x99e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x99e4));
        // 7A 0005
        gbc.setState(0x6e54, 0x8ef7, 0xf690, 0x3f05, 0xb2cb, 0x2a50, 0x0, 0x1);
        gbc.writeMem(0x6e54, { 0x7a });
        gbc.step();
        EXPECT(0xb2, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb2, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x8ef7, gbc.sp());
        EXPECT(0x6e55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0006
        gbc.setState(0x73f7, 0x1cc4, 0x95a0, 0x107c, 0x72cf, 0x1e13, 0x0, 0x1);
        gbc.writeMem(0x73f7, { 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x1cc4, gbc.sp());
        EXPECT(0x73f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0007
        gbc.setState(0x2222, 0x7255, 0x610, 0xa01c, 0x5b0f, 0x89f4, 0x1, 0x1);
        gbc.writeMem(0x2222, { 0x7a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x7255, gbc.sp());
        EXPECT(0x2223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0008
        gbc.setState(0x46ac, 0xd1f5, 0x8150, 0x50e5, 0x36cf, 0xc8f7, 0x1, 0x0);
        gbc.writeMem(0x46ac, { 0x7a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xd1f5, gbc.sp());
        EXPECT(0x46ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0009
        gbc.setState(0x1e3e, 0x3ce, 0x6d90, 0x9e3, 0x8dee, 0xc3be, 0x1, 0x0);
        gbc.writeMem(0x1e3e, { 0x7a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x3ce, gbc.sp());
        EXPECT(0x1e3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 000A
        gbc.setState(0xcc86, 0xb8b3, 0xbf90, 0xb4cf, 0xf18d, 0xc675, 0x0, 0x1);
        gbc.writeMem(0xcc86, { 0x7a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb8b3, gbc.sp());
        EXPECT(0xcc87, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcc86));
        // 7A 000B
        gbc.setState(0x9d7c, 0x40ae, 0xce90, 0x7b31, 0x3a3b, 0x17f9, 0x0, 0x0);
        gbc.writeMem(0x9d7c, { 0x7a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x40ae, gbc.sp());
        EXPECT(0x9d7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9d7c));
        // 7A 000C
        gbc.setState(0xb914, 0x1655, 0xd390, 0x9b9c, 0x1ca0, 0x6500, 0x1, 0x0);
        gbc.writeMem(0xb914, { 0x7a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x0, gbc.l());
        EXPECT(0x1655, gbc.sp());
        EXPECT(0xb915, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb914));
        // 7A 000D
        gbc.setState(0x5c94, 0xf333, 0x8ba0, 0x9950, 0xb4db, 0xc9f5, 0x0, 0x1);
        gbc.writeMem(0x5c94, { 0x7a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xf333, gbc.sp());
        EXPECT(0x5c95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 000E
        gbc.setState(0xeb3c, 0x2d3, 0x59c0, 0x82b1, 0xb98f, 0x2b60, 0x0, 0x0);
        gbc.writeMem(0xeb3c, { 0x7a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xb1, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x2d3, gbc.sp());
        EXPECT(0xeb3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xeb3c));
        // 7A 000F
        gbc.setState(0xd2a7, 0x9a35, 0x8d30, 0x9110, 0x4603, 0xf15a, 0x0, 0x1);
        gbc.writeMem(0xd2a7, { 0x7a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x9a35, gbc.sp());
        EXPECT(0xd2a8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd2a7));
        // 7A 0010
        gbc.setState(0xece7, 0x18d, 0xeee0, 0x7dd, 0x34fc, 0x8c6e, 0x0, 0x0);
        gbc.writeMem(0xece7, { 0x7a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x18d, gbc.sp());
        EXPECT(0xece8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xece7));
        // 7A 0011
        gbc.setState(0x2a28, 0xc4e4, 0x2b90, 0x995e, 0x553f, 0x25c5, 0x0, 0x0);
        gbc.writeMem(0x2a28, { 0x7a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x99, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0xc5, gbc.l());
        EXPECT(0xc4e4, gbc.sp());
        EXPECT(0x2a29, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0012
        gbc.setState(0xb26a, 0xbf12, 0x20c0, 0x3a6b, 0x2cc9, 0xe6db, 0x1, 0x1);
        gbc.writeMem(0xb26a, { 0x7a });
        gbc.step();
        EXPECT(0x2c, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x2c, gbc.d());
        EXPECT(0xc9, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbf12, gbc.sp());
        EXPECT(0xb26b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb26a));
        // 7A 0013
        gbc.setState(0x14a4, 0xb9ec, 0x7f20, 0x7a6f, 0xf48a, 0x2a29, 0x1, 0x1);
        gbc.writeMem(0x14a4, { 0x7a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb9ec, gbc.sp());
        EXPECT(0x14a5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0014
        gbc.setState(0x14e4, 0x12d0, 0x510, 0xdebd, 0x7705, 0x46d, 0x1, 0x0);
        gbc.writeMem(0x14e4, { 0x7a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x12d0, gbc.sp());
        EXPECT(0x14e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0015
        gbc.setState(0x47eb, 0xc2dc, 0x7430, 0x536, 0x4645, 0x9a83, 0x1, 0x1);
        gbc.writeMem(0x47eb, { 0x7a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x36, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xc2dc, gbc.sp());
        EXPECT(0x47ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0016
        gbc.setState(0xe66f, 0x4a43, 0x7ef0, 0x1550, 0x708b, 0x89bd, 0x0, 0x1);
        gbc.writeMem(0xe66f, { 0x7a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x4a43, gbc.sp());
        EXPECT(0xe670, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe66f));
        // 7A 0017
        gbc.setState(0x550d, 0x82fb, 0xa510, 0xb243, 0x1435, 0xe240, 0x0, 0x0);
        gbc.writeMem(0x550d, { 0x7a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x82fb, gbc.sp());
        EXPECT(0x550e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0018
        gbc.setState(0xa73a, 0x3ad9, 0x4680, 0x9294, 0xc4b0, 0xf24e, 0x0, 0x0);
        gbc.writeMem(0xa73a, { 0x7a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x3ad9, gbc.sp());
        EXPECT(0xa73b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa73a));
        // 7A 0019
        gbc.setState(0x39f5, 0x6592, 0x1d70, 0xf82f, 0xe70, 0x4887, 0x0, 0x0);
        gbc.writeMem(0x39f5, { 0x7a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x6592, gbc.sp());
        EXPECT(0x39f6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 001A
        gbc.setState(0x54f6, 0xf4dc, 0xf990, 0xa577, 0xa6b5, 0x5302, 0x0, 0x0);
        gbc.writeMem(0x54f6, { 0x7a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0x2, gbc.l());
        EXPECT(0xf4dc, gbc.sp());
        EXPECT(0x54f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 001B
        gbc.setState(0x8d20, 0x6bd7, 0x7d0, 0x38f7, 0x8a85, 0x7eee, 0x0, 0x1);
        gbc.writeMem(0x8d20, { 0x7a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x6bd7, gbc.sp());
        EXPECT(0x8d21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8d20));
        // 7A 001C
        gbc.setState(0x79e7, 0x5324, 0x280, 0x961, 0xad34, 0x956c, 0x1, 0x1);
        gbc.writeMem(0x79e7, { 0x7a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x5324, gbc.sp());
        EXPECT(0x79e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 001D
        gbc.setState(0xb3fd, 0x90f5, 0xbbc0, 0x428c, 0x8e52, 0x21cc, 0x0, 0x1);
        gbc.writeMem(0xb3fd, { 0x7a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x90f5, gbc.sp());
        EXPECT(0xb3fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb3fd));
        // 7A 001E
        gbc.setState(0xbe4d, 0x4901, 0xb1d0, 0x9854, 0x6f07, 0x9d3f, 0x0, 0x0);
        gbc.writeMem(0xbe4d, { 0x7a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4901, gbc.sp());
        EXPECT(0xbe4e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbe4d));
        // 7A 001F
        gbc.setState(0xa5c1, 0x5b00, 0x7220, 0xbb1a, 0x68b9, 0xd615, 0x0, 0x1);
        gbc.writeMem(0xa5c1, { 0x7a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x5b00, gbc.sp());
        EXPECT(0xa5c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa5c1));
        // 7A 0020
        gbc.setState(0xd0ae, 0xa750, 0xdac0, 0x14e7, 0x22e7, 0x8a26, 0x1, 0x0);
        gbc.writeMem(0xd0ae, { 0x7a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x26, gbc.l());
        EXPECT(0xa750, gbc.sp());
        EXPECT(0xd0af, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd0ae));
        // 7A 0021
        gbc.setState(0xea1, 0x459e, 0xe380, 0xe541, 0xe77a, 0xf784, 0x1, 0x0);
        gbc.writeMem(0xea1, { 0x7a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x459e, gbc.sp());
        EXPECT(0xea2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0023
        gbc.setState(0x3085, 0x5fa9, 0xd3e0, 0xe995, 0xf19a, 0xd097, 0x0, 0x1);
        gbc.writeMem(0x3085, { 0x7a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x5fa9, gbc.sp());
        EXPECT(0x3086, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0024
        gbc.setState(0xe8b1, 0x81ac, 0x7c30, 0x560e, 0x1d7b, 0x4a78, 0x1, 0x1);
        gbc.writeMem(0xe8b1, { 0x7a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x81ac, gbc.sp());
        EXPECT(0xe8b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe8b1));
        // 7A 0025
        gbc.setState(0xad4d, 0xc157, 0x400, 0x97b3, 0x8d6c, 0xd2cd, 0x1, 0x0);
        gbc.writeMem(0xad4d, { 0x7a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc157, gbc.sp());
        EXPECT(0xad4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xad4d));
        // 7A 0026
        gbc.setState(0x6885, 0xc484, 0x1d70, 0x2ee7, 0x99bd, 0x597a, 0x0, 0x0);
        gbc.writeMem(0x6885, { 0x7a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x2e, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xc484, gbc.sp());
        EXPECT(0x6886, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0027
        gbc.setState(0x8fd4, 0x2246, 0x41c0, 0x8bbb, 0xffef, 0x8fd9, 0x1, 0x0);
        gbc.writeMem(0x8fd4, { 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x2246, gbc.sp());
        EXPECT(0x8fd5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8fd4));
        // 7A 0028
        gbc.setState(0xbaa5, 0x7934, 0x1f80, 0xb25e, 0xcf07, 0xc945, 0x0, 0x1);
        gbc.writeMem(0xbaa5, { 0x7a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x7934, gbc.sp());
        EXPECT(0xbaa6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbaa5));
        // 7A 0029
        gbc.setState(0xa393, 0xc9f4, 0x8060, 0x4cb3, 0xaf64, 0x38dc, 0x1, 0x1);
        gbc.writeMem(0xa393, { 0x7a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xc9f4, gbc.sp());
        EXPECT(0xa394, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa393));
        // 7A 002A
        gbc.setState(0x6aed, 0x4367, 0x4090, 0x912b, 0xe167, 0xa93e, 0x0, 0x0);
        gbc.writeMem(0x6aed, { 0x7a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x4367, gbc.sp());
        EXPECT(0x6aee, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 002B
        gbc.setState(0xa75b, 0x5270, 0x83c0, 0xef82, 0x758c, 0x3bd9, 0x0, 0x1);
        gbc.writeMem(0xa75b, { 0x7a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x82, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x5270, gbc.sp());
        EXPECT(0xa75c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa75b));
        // 7A 002C
        gbc.setState(0x33f5, 0xba58, 0x6fe0, 0x6779, 0x566d, 0xc790, 0x1, 0x0);
        gbc.writeMem(0x33f5, { 0x7a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xba58, gbc.sp());
        EXPECT(0x33f6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 002D
        gbc.setState(0x33cd, 0x64f1, 0x92a0, 0xa369, 0xc851, 0x4624, 0x0, 0x1);
        gbc.writeMem(0x33cd, { 0x7a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0x64f1, gbc.sp());
        EXPECT(0x33ce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 002E
        gbc.setState(0xac32, 0x572e, 0x3830, 0x48fa, 0x9f80, 0xd2ba, 0x1, 0x1);
        gbc.writeMem(0xac32, { 0x7a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xba, gbc.l());
        EXPECT(0x572e, gbc.sp());
        EXPECT(0xac33, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xac32));
        // 7A 002F
        gbc.setState(0x6daa, 0x17a4, 0xf310, 0x9fa3, 0xa288, 0xe664, 0x1, 0x1);
        gbc.writeMem(0x6daa, { 0x7a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x17a4, gbc.sp());
        EXPECT(0x6dab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0030
        gbc.setState(0x6a8e, 0xf76a, 0x3550, 0xad48, 0x2e2a, 0x684d, 0x0, 0x1);
        gbc.writeMem(0x6a8e, { 0x7a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xf76a, gbc.sp());
        EXPECT(0x6a8f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0031
        gbc.setState(0x6d6c, 0x6633, 0x70e0, 0xd6fb, 0x3704, 0xa16f, 0x0, 0x1);
        gbc.writeMem(0x6d6c, { 0x7a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x4, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6633, gbc.sp());
        EXPECT(0x6d6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0032
        gbc.setState(0x110b, 0xcc70, 0x7490, 0xb621, 0x668a, 0xc16c, 0x1, 0x0);
        gbc.writeMem(0x110b, { 0x7a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xcc70, gbc.sp());
        EXPECT(0x110c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0033
        gbc.setState(0x3c58, 0x4789, 0x390, 0x7570, 0xaceb, 0xcd45, 0x1, 0x0);
        gbc.writeMem(0x3c58, { 0x7a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4789, gbc.sp());
        EXPECT(0x3c59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0034
        gbc.setState(0x32c5, 0xac4b, 0x510, 0x49f, 0xf833, 0xc483, 0x0, 0x1);
        gbc.writeMem(0x32c5, { 0x7a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xac4b, gbc.sp());
        EXPECT(0x32c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0035
        gbc.setState(0x85ae, 0x4241, 0xbcd0, 0xcf12, 0x5ecc, 0x9d84, 0x0, 0x0);
        gbc.writeMem(0x85ae, { 0x7a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0x4241, gbc.sp());
        EXPECT(0x85af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x85ae));
        // 7A 0036
        gbc.setState(0x465d, 0x5a4f, 0xb170, 0xacf4, 0x97b, 0x7633, 0x1, 0x0);
        gbc.writeMem(0x465d, { 0x7a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5a4f, gbc.sp());
        EXPECT(0x465e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0037
        gbc.setState(0xe625, 0x99db, 0xceb0, 0x569d, 0xc372, 0x1aa7, 0x1, 0x1);
        gbc.writeMem(0xe625, { 0x7a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x99db, gbc.sp());
        EXPECT(0xe626, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe625));
        // 7A 0038
        gbc.setState(0xa60d, 0x25ef, 0x7ef0, 0xe186, 0x209e, 0x60e9, 0x0, 0x0);
        gbc.writeMem(0xa60d, { 0x7a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x25ef, gbc.sp());
        EXPECT(0xa60e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa60d));
        // 7A 0039
        gbc.setState(0xb2e9, 0xb979, 0xe890, 0xcadb, 0xe46e, 0xfe4f, 0x1, 0x0);
        gbc.writeMem(0xb2e9, { 0x7a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb979, gbc.sp());
        EXPECT(0xb2ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb2e9));
        // 7A 003A
        gbc.setState(0x6765, 0x9fdd, 0x3be0, 0xdbbb, 0x6ffa, 0x387a, 0x0, 0x0);
        gbc.writeMem(0x6765, { 0x7a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x9fdd, gbc.sp());
        EXPECT(0x6766, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 003B
        gbc.setState(0x5384, 0xa976, 0xd0, 0x4840, 0xb105, 0x6ffa, 0x0, 0x0);
        gbc.writeMem(0x5384, { 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xa976, gbc.sp());
        EXPECT(0x5385, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 003C
        gbc.setState(0xdc92, 0x4e46, 0xb2d0, 0xcdc5, 0xf52d, 0x71c1, 0x1, 0x0);
        gbc.writeMem(0xdc92, { 0x7a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xc1, gbc.l());
        EXPECT(0x4e46, gbc.sp());
        EXPECT(0xdc93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdc92));
        // 7A 003D
        gbc.setState(0x4c24, 0xd6c8, 0xdb70, 0x8b18, 0xf384, 0x23ac, 0x0, 0x1);
        gbc.writeMem(0x4c24, { 0x7a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xd6c8, gbc.sp());
        EXPECT(0x4c25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 003E
        gbc.setState(0xa7a8, 0xd875, 0xd430, 0xdebb, 0xd9f0, 0x8d1e, 0x0, 0x1);
        gbc.writeMem(0xa7a8, { 0x7a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0xd875, gbc.sp());
        EXPECT(0xa7a9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa7a8));
        // 7A 003F
        gbc.setState(0xb739, 0x5700, 0x690, 0xe80e, 0x21fe, 0x797b, 0x1, 0x1);
        gbc.writeMem(0xb739, { 0x7a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xe, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x5700, gbc.sp());
        EXPECT(0xb73a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb739));
        // 7A 0040
        gbc.setState(0x9092, 0xb88d, 0x6310, 0x37a, 0x22d4, 0xcdd7, 0x0, 0x1);
        gbc.writeMem(0x9092, { 0x7a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xb88d, gbc.sp());
        EXPECT(0x9093, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9092));
        // 7A 0042
        gbc.setState(0x6d86, 0x7c8c, 0xea50, 0x865e, 0x6aea, 0xcc6b, 0x1, 0x0);
        gbc.writeMem(0x6d86, { 0x7a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x7c8c, gbc.sp());
        EXPECT(0x6d87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0043
        gbc.setState(0x88d1, 0x6cf7, 0xa840, 0xdf27, 0x46e3, 0x94fa, 0x0, 0x0);
        gbc.writeMem(0x88d1, { 0x7a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x6cf7, gbc.sp());
        EXPECT(0x88d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x88d1));
        // 7A 0044
        gbc.setState(0x1286, 0x6990, 0x1290, 0xa879, 0xaab5, 0xae45, 0x0, 0x1);
        gbc.writeMem(0x1286, { 0x7a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x79, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x6990, gbc.sp());
        EXPECT(0x1287, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0045
        gbc.setState(0x3e03, 0x62d3, 0xefe0, 0xfda0, 0x48a6, 0xfae9, 0x1, 0x0);
        gbc.writeMem(0x3e03, { 0x7a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0x62d3, gbc.sp());
        EXPECT(0x3e04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0046
        gbc.setState(0x9f3a, 0x9a2c, 0xee30, 0x914f, 0x6347, 0xcf90, 0x0, 0x1);
        gbc.writeMem(0x9f3a, { 0x7a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0x9a2c, gbc.sp());
        EXPECT(0x9f3b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9f3a));
        // 7A 0047
        gbc.setState(0x2242, 0x5b9a, 0x8f80, 0xfb8b, 0xff67, 0x4b46, 0x0, 0x1);
        gbc.writeMem(0x2242, { 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x5b9a, gbc.sp());
        EXPECT(0x2243, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0048
        gbc.setState(0x5f7c, 0xa655, 0x9920, 0xc68d, 0x4ac6, 0xbf6e, 0x1, 0x0);
        gbc.writeMem(0x5f7c, { 0x7a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xa655, gbc.sp());
        EXPECT(0x5f7d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0049
        gbc.setState(0x8cf0, 0xdab6, 0xd2d0, 0x881a, 0x4d83, 0xa26c, 0x0, 0x1);
        gbc.writeMem(0x8cf0, { 0x7a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xa2, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xdab6, gbc.sp());
        EXPECT(0x8cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8cf0));
        // 7A 004A
        gbc.setState(0x9f84, 0x5128, 0xd510, 0xf7ed, 0x8899, 0x8688, 0x1, 0x1);
        gbc.writeMem(0x9f84, { 0x7a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5128, gbc.sp());
        EXPECT(0x9f85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9f84));
        // 7A 004B
        gbc.setState(0x7030, 0x2571, 0xe2f0, 0x30c1, 0x60eb, 0x9fb0, 0x1, 0x0);
        gbc.writeMem(0x7030, { 0x7a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x2571, gbc.sp());
        EXPECT(0x7031, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 004C
        gbc.setState(0x49c7, 0x5b51, 0xb6d0, 0xa640, 0x412d, 0xaede, 0x1, 0x0);
        gbc.writeMem(0x49c7, { 0x7a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x5b51, gbc.sp());
        EXPECT(0x49c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 004D
        gbc.setState(0xd2d2, 0xfe1e, 0xfc20, 0x66ef, 0x621d, 0xf5e2, 0x1, 0x1);
        gbc.writeMem(0xd2d2, { 0x7a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xfe1e, gbc.sp());
        EXPECT(0xd2d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd2d2));
        // 7A 004E
        gbc.setState(0x90a4, 0xb943, 0xdbf0, 0xddff, 0x5c29, 0x7741, 0x0, 0x0);
        gbc.writeMem(0x90a4, { 0x7a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0xb943, gbc.sp());
        EXPECT(0x90a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x90a4));
        // 7A 004F
        gbc.setState(0x1beb, 0x1376, 0xcfc0, 0x1afa, 0x4a66, 0xe710, 0x1, 0x0);
        gbc.writeMem(0x1beb, { 0x7a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xe7, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0x1376, gbc.sp());
        EXPECT(0x1bec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0050
        gbc.setState(0x50d, 0x7986, 0x6f00, 0x8f15, 0x35ec, 0x2949, 0x1, 0x0);
        gbc.writeMem(0x50d, { 0x7a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x7986, gbc.sp());
        EXPECT(0x50e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0051
        gbc.setState(0xb4c7, 0xd42e, 0xa910, 0xd160, 0x7e2, 0x320, 0x0, 0x0);
        gbc.writeMem(0xb4c7, { 0x7a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0xd42e, gbc.sp());
        EXPECT(0xb4c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb4c7));
        // 7A 0052
        gbc.setState(0x7b3d, 0x5fb6, 0xaf70, 0xf952, 0x9890, 0x4df8, 0x1, 0x1);
        gbc.writeMem(0x7b3d, { 0x7a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5fb6, gbc.sp());
        EXPECT(0x7b3e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0053
        gbc.setState(0x4d64, 0xebb4, 0xb10, 0x4c50, 0x7eb0, 0xeeef, 0x1, 0x1);
        gbc.writeMem(0x4d64, { 0x7a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xebb4, gbc.sp());
        EXPECT(0x4d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0054
        gbc.setState(0xeecb, 0x8af9, 0xab70, 0x4d9c, 0x2482, 0x32e7, 0x0, 0x1);
        gbc.writeMem(0xeecb, { 0x7a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x8af9, gbc.sp());
        EXPECT(0xeecc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xeecb));
        // 7A 0055
        gbc.setState(0xcea8, 0x8f48, 0x7c40, 0xca49, 0x738f, 0xec0, 0x1, 0x1);
        gbc.writeMem(0xcea8, { 0x7a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8f48, gbc.sp());
        EXPECT(0xcea9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcea8));
        // 7A 0056
        gbc.setState(0x60b5, 0xe044, 0xcad0, 0x68cc, 0xd75e, 0x8aa5, 0x1, 0x0);
        gbc.writeMem(0x60b5, { 0x7a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xe044, gbc.sp());
        EXPECT(0x60b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0057
        gbc.setState(0x6374, 0x905d, 0x2870, 0x5c17, 0x2e0, 0xf469, 0x1, 0x0);
        gbc.writeMem(0x6374, { 0x7a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x905d, gbc.sp());
        EXPECT(0x6375, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0058
        gbc.setState(0x9e48, 0x26a9, 0x57c0, 0x7b16, 0x1319, 0xaff2, 0x1, 0x1);
        gbc.writeMem(0x9e48, { 0x7a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x26a9, gbc.sp());
        EXPECT(0x9e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9e48));
        // 7A 0059
        gbc.setState(0xb2e9, 0x372d, 0xc500, 0x9392, 0x2244, 0x7a9, 0x0, 0x1);
        gbc.writeMem(0xb2e9, { 0x7a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x92, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x372d, gbc.sp());
        EXPECT(0xb2ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb2e9));
        // 7A 005A
        gbc.setState(0x793e, 0x774d, 0xcab0, 0xf41, 0x6056, 0x853b, 0x0, 0x0);
        gbc.writeMem(0x793e, { 0x7a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0x774d, gbc.sp());
        EXPECT(0x793f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 005B
        gbc.setState(0x419e, 0xd0a1, 0x8010, 0x663c, 0xdd2a, 0x3e50, 0x1, 0x0);
        gbc.writeMem(0x419e, { 0x7a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd0a1, gbc.sp());
        EXPECT(0x419f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 005C
        gbc.setState(0xbcb4, 0xd59a, 0xdbd0, 0x9329, 0x5635, 0x441f, 0x0, 0x0);
        gbc.writeMem(0xbcb4, { 0x7a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xd59a, gbc.sp());
        EXPECT(0xbcb5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbcb4));
        // 7A 005D
        gbc.setState(0x68da, 0xb8d0, 0x2f60, 0x1bde, 0x2afa, 0xd4b6, 0x0, 0x1);
        gbc.writeMem(0x68da, { 0x7a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xb8d0, gbc.sp());
        EXPECT(0x68db, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 005E
        gbc.setState(0xe7d2, 0xb9d1, 0xf3f0, 0xfc29, 0xaaf2, 0x871c, 0x1, 0x1);
        gbc.writeMem(0xe7d2, { 0x7a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xb9d1, gbc.sp());
        EXPECT(0xe7d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe7d2));
        // 7A 005F
        gbc.setState(0xdad7, 0xa73b, 0x1410, 0x1b0b, 0x2db6, 0xdda6, 0x0, 0x1);
        gbc.writeMem(0xdad7, { 0x7a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xa73b, gbc.sp());
        EXPECT(0xdad8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdad7));
        // 7A 0060
        gbc.setState(0x4ab2, 0xeb85, 0xb930, 0x88f5, 0x1042, 0x7d9e, 0x1, 0x1);
        gbc.writeMem(0x4ab2, { 0x7a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xeb85, gbc.sp());
        EXPECT(0x4ab3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0061
        gbc.setState(0x3035, 0x793c, 0x1110, 0xecee, 0x7618, 0x7493, 0x1, 0x1);
        gbc.writeMem(0x3035, { 0x7a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x793c, gbc.sp());
        EXPECT(0x3036, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0062
        gbc.setState(0xab53, 0xdbe2, 0x6830, 0xf1f1, 0x5b77, 0x68cd, 0x0, 0x1);
        gbc.writeMem(0xab53, { 0x7a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xdbe2, gbc.sp());
        EXPECT(0xab54, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xab53));
        // 7A 0063
        gbc.setState(0x6587, 0xe454, 0x3c0, 0xc7b, 0x7ab2, 0x8a1d, 0x0, 0x0);
        gbc.writeMem(0x6587, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xe454, gbc.sp());
        EXPECT(0x6588, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0064
        gbc.setState(0x51d7, 0xfd98, 0xe360, 0xc73e, 0x9b47, 0xd2be, 0x1, 0x1);
        gbc.writeMem(0x51d7, { 0x7a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0xfd98, gbc.sp());
        EXPECT(0x51d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0065
        gbc.setState(0x963b, 0x2fd8, 0xe450, 0x7a53, 0x15d7, 0x49b9, 0x0, 0x0);
        gbc.writeMem(0x963b, { 0x7a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x2fd8, gbc.sp());
        EXPECT(0x963c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x963b));
        // 7A 0066
        gbc.setState(0x5318, 0x78b0, 0x5fd0, 0x1c56, 0x67aa, 0xc37f, 0x1, 0x0);
        gbc.writeMem(0x5318, { 0x7a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x78b0, gbc.sp());
        EXPECT(0x5319, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0067
        gbc.setState(0x97ea, 0x7e01, 0x6ce0, 0xe0a5, 0x6f80, 0xb058, 0x1, 0x1);
        gbc.writeMem(0x97ea, { 0x7a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x7e01, gbc.sp());
        EXPECT(0x97eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x97ea));
        // 7A 0068
        gbc.setState(0x3b1e, 0x5c7, 0xea50, 0xb565, 0xb97, 0x4677, 0x1, 0x1);
        gbc.writeMem(0x3b1e, { 0x7a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x5c7, gbc.sp());
        EXPECT(0x3b1f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0069
        gbc.setState(0x40a5, 0xb01e, 0xf50, 0xe335, 0x1f1, 0x15bc, 0x0, 0x1);
        gbc.writeMem(0x40a5, { 0x7a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x15, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xb01e, gbc.sp());
        EXPECT(0x40a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 006A
        gbc.setState(0xdcda, 0x367, 0x5da0, 0x9147, 0xa567, 0xc1a2, 0x0, 0x0);
        gbc.writeMem(0xdcda, { 0x7a });
        gbc.step();
        EXPECT(0xa5, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xa5, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x367, gbc.sp());
        EXPECT(0xdcdb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdcda));
        // 7A 006B
        gbc.setState(0xa87a, 0x6202, 0xaeb0, 0x6dd8, 0x4446, 0x1797, 0x0, 0x1);
        gbc.writeMem(0xa87a, { 0x7a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x6202, gbc.sp());
        EXPECT(0xa87b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa87a));
        // 7A 006C
        gbc.setState(0x1f65, 0xe0c4, 0xd790, 0x3a14, 0xc144, 0xa7c9, 0x0, 0x0);
        gbc.writeMem(0x1f65, { 0x7a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xe0c4, gbc.sp());
        EXPECT(0x1f66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 006E
        gbc.setState(0xcd00, 0x4985, 0xada0, 0xb60, 0x57e9, 0x879f, 0x0, 0x0);
        gbc.writeMem(0xcd00, { 0x7a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x4985, gbc.sp());
        EXPECT(0xcd01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcd00));
        // 7A 006F
        gbc.setState(0x42a5, 0x63fc, 0xd7b0, 0x5ae, 0xa4ca, 0x2f53, 0x0, 0x0);
        gbc.writeMem(0x42a5, { 0x7a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x63fc, gbc.sp());
        EXPECT(0x42a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0070
        gbc.setState(0x6c1c, 0xe370, 0xcdc0, 0xa97d, 0x1de1, 0x10b1, 0x1, 0x1);
        gbc.writeMem(0x6c1c, { 0x7a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0xe370, gbc.sp());
        EXPECT(0x6c1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0071
        gbc.setState(0x119a, 0x9e69, 0x8220, 0x9631, 0x2f62, 0xa98c, 0x0, 0x1);
        gbc.writeMem(0x119a, { 0x7a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x9e69, gbc.sp());
        EXPECT(0x119b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0072
        gbc.setState(0x457b, 0x6bba, 0x5800, 0x235f, 0xa81, 0x995c, 0x1, 0x1);
        gbc.writeMem(0x457b, { 0x7a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0x6bba, gbc.sp());
        EXPECT(0x457c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0073
        gbc.setState(0x23ce, 0x278e, 0x1510, 0x6ecd, 0x7209, 0x7cab, 0x0, 0x0);
        gbc.writeMem(0x23ce, { 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x278e, gbc.sp());
        EXPECT(0x23cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0074
        gbc.setState(0x9f33, 0x34fa, 0x26b0, 0x5c6d, 0x5e2d, 0x811b, 0x1, 0x1);
        gbc.writeMem(0x9f33, { 0x7a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x34fa, gbc.sp());
        EXPECT(0x9f34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9f33));
        // 7A 0075
        gbc.setState(0x8265, 0x967f, 0x35a0, 0xf075, 0xbbf4, 0xe8e8, 0x1, 0x0);
        gbc.writeMem(0x8265, { 0x7a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x967f, gbc.sp());
        EXPECT(0x8266, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8265));
        // 7A 0076
        gbc.setState(0xdedf, 0x4ce3, 0xc360, 0xebf7, 0x86da, 0x3c95, 0x1, 0x0);
        gbc.writeMem(0xdedf, { 0x7a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x4ce3, gbc.sp());
        EXPECT(0xdee0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdedf));
        // 7A 0077
        gbc.setState(0xd781, 0xf7ce, 0x3ef0, 0x562d, 0x5889, 0x9485, 0x1, 0x0);
        gbc.writeMem(0xd781, { 0x7a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0xf7ce, gbc.sp());
        EXPECT(0xd782, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd781));
        // 7A 0078
        gbc.setState(0xbccc, 0x79c6, 0xed10, 0x403f, 0x6919, 0x93e3, 0x0, 0x0);
        gbc.writeMem(0xbccc, { 0x7a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0x79c6, gbc.sp());
        EXPECT(0xbccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbccc));
        // 7A 0079
        gbc.setState(0x4a91, 0xb84b, 0x3d0, 0x5977, 0x7d30, 0x9452, 0x0, 0x0);
        gbc.writeMem(0x4a91, { 0x7a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xb84b, gbc.sp());
        EXPECT(0x4a92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 007A
        gbc.setState(0x6047, 0x14ba, 0x2470, 0xa8d7, 0x823d, 0x37e1, 0x0, 0x0);
        gbc.writeMem(0x6047, { 0x7a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x14ba, gbc.sp());
        EXPECT(0x6048, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 007B
        gbc.setState(0x30e3, 0x7b5a, 0x3930, 0xd1d, 0x1e9c, 0x985e, 0x1, 0x1);
        gbc.writeMem(0x30e3, { 0x7a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x7b5a, gbc.sp());
        EXPECT(0x30e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 007C
        gbc.setState(0xefcf, 0x659a, 0x5020, 0x5440, 0x24cd, 0xbe6d, 0x1, 0x0);
        gbc.writeMem(0xefcf, { 0x7a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x659a, gbc.sp());
        EXPECT(0xefd0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xefcf));
        // 7A 007D
        gbc.setState(0xe02e, 0x274a, 0xad60, 0x3756, 0x43bc, 0xfdf9, 0x1, 0x0);
        gbc.writeMem(0xe02e, { 0x7a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x274a, gbc.sp());
        EXPECT(0xe02f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe02e));
        // 7A 007E
        gbc.setState(0x5063, 0xe802, 0x7080, 0xecde, 0x2d0e, 0xf042, 0x1, 0x0);
        gbc.writeMem(0x5063, { 0x7a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xe802, gbc.sp());
        EXPECT(0x5064, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 007F
        gbc.setState(0x81f0, 0xbe36, 0x89e0, 0x7769, 0xc37d, 0x1c35, 0x0, 0x0);
        gbc.writeMem(0x81f0, { 0x7a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xbe36, gbc.sp());
        EXPECT(0x81f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x81f0));
        // 7A 0080
        gbc.setState(0xe794, 0xc982, 0xe180, 0x91f9, 0x1f12, 0x3dec, 0x0, 0x0);
        gbc.writeMem(0xe794, { 0x7a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0x3d, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xc982, gbc.sp());
        EXPECT(0xe795, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe794));
        // 7A 0081
        gbc.setState(0x6145, 0x7524, 0x4400, 0xa677, 0x327e, 0x43d5, 0x0, 0x0);
        gbc.writeMem(0x6145, { 0x7a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x7524, gbc.sp());
        EXPECT(0x6146, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0082
        gbc.setState(0x6c16, 0x1a3f, 0x7bf0, 0x8984, 0x50a0, 0xddab, 0x0, 0x1);
        gbc.writeMem(0x6c16, { 0x7a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0x1a3f, gbc.sp());
        EXPECT(0x6c17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0084
        gbc.setState(0x5e2e, 0x70e2, 0xa310, 0xb1c7, 0x612e, 0x51d, 0x1, 0x0);
        gbc.writeMem(0x5e2e, { 0x7a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x70e2, gbc.sp());
        EXPECT(0x5e2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0085
        gbc.setState(0xa46b, 0xa9c7, 0x9400, 0x85af, 0xb19b, 0x722e, 0x1, 0x0);
        gbc.writeMem(0xa46b, { 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xa9c7, gbc.sp());
        EXPECT(0xa46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa46b));
        // 7A 0086
        gbc.setState(0x4e1d, 0x199a, 0xd0c0, 0x4f09, 0x627, 0x1ce0, 0x0, 0x1);
        gbc.writeMem(0x4e1d, { 0x7a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x199a, gbc.sp());
        EXPECT(0x4e1e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0087
        gbc.setState(0xc15, 0x70b4, 0xd460, 0x1761, 0xf19d, 0x9465, 0x0, 0x1);
        gbc.writeMem(0xc15, { 0x7a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x70b4, gbc.sp());
        EXPECT(0xc16, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0088
        gbc.setState(0x9656, 0xed16, 0xe9a0, 0x789f, 0xd5ab, 0xf023, 0x0, 0x0);
        gbc.writeMem(0x9656, { 0x7a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x78, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xed16, gbc.sp());
        EXPECT(0x9657, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9656));
        // 7A 0089
        gbc.setState(0xc205, 0xac9c, 0x8fe0, 0x476, 0x93c6, 0x9fac, 0x1, 0x1);
        gbc.writeMem(0xc205, { 0x7a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xac9c, gbc.sp());
        EXPECT(0xc206, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc205));
        // 7A 008A
        gbc.setState(0x76d, 0xed0b, 0xafe0, 0xd665, 0x8edc, 0x1610, 0x0, 0x0);
        gbc.writeMem(0x76d, { 0x7a });
        gbc.step();
        EXPECT(0x8e, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x8e, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xed0b, gbc.sp());
        EXPECT(0x76e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 008B
        gbc.setState(0x1316, 0x800e, 0xe980, 0xc6d, 0xd367, 0xd443, 0x1, 0x0);
        gbc.writeMem(0x1316, { 0x7a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x800e, gbc.sp());
        EXPECT(0x1317, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 008C
        gbc.setState(0x2195, 0xf116, 0x40e0, 0xfd4a, 0x6e99, 0x6c8e, 0x0, 0x0);
        gbc.writeMem(0x2195, { 0x7a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf116, gbc.sp());
        EXPECT(0x2196, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 008D
        gbc.setState(0x1e25, 0x108f, 0xfbc0, 0xa008, 0xc5b8, 0x53a, 0x1, 0x0);
        gbc.writeMem(0x1e25, { 0x7a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x3a, gbc.l());
        EXPECT(0x108f, gbc.sp());
        EXPECT(0x1e26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 008E
        gbc.setState(0xed6, 0x9b06, 0x6290, 0xe505, 0xa23d, 0x72b2, 0x1, 0x1);
        gbc.writeMem(0xed6, { 0x7a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x72, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0x9b06, gbc.sp());
        EXPECT(0xed7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 008F
        gbc.setState(0x2295, 0x9d84, 0xf530, 0x4b5a, 0x8603, 0x8754, 0x1, 0x1);
        gbc.writeMem(0x2295, { 0x7a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9d84, gbc.sp());
        EXPECT(0x2296, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0090
        gbc.setState(0xde9d, 0x964, 0xdb0, 0x6697, 0x2cf, 0x3a83, 0x0, 0x0);
        gbc.writeMem(0xde9d, { 0x7a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x964, gbc.sp());
        EXPECT(0xde9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xde9d));
        // 7A 0091
        gbc.setState(0x907e, 0xfbe6, 0x13b0, 0xe50f, 0xf716, 0x6d5f, 0x0, 0x1);
        gbc.writeMem(0x907e, { 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xfbe6, gbc.sp());
        EXPECT(0x907f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x907e));
        // 7A 0092
        gbc.setState(0x310e, 0x1a02, 0x80b0, 0x3f1e, 0x1bc, 0xd0ef, 0x0, 0x1);
        gbc.writeMem(0x310e, { 0x7a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1a02, gbc.sp());
        EXPECT(0x310f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0093
        gbc.setState(0xbf89, 0x39ce, 0x6060, 0x216b, 0x350c, 0x95d9, 0x0, 0x1);
        gbc.writeMem(0xbf89, { 0x7a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x39ce, gbc.sp());
        EXPECT(0xbf8a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbf89));
        // 7A 0094
        gbc.setState(0x6e81, 0x611a, 0x2b70, 0xfb27, 0x63da, 0x3fbd, 0x0, 0x1);
        gbc.writeMem(0x6e81, { 0x7a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x611a, gbc.sp());
        EXPECT(0x6e82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0095
        gbc.setState(0x5163, 0x1a34, 0x8070, 0x8a9, 0x61b1, 0x5588, 0x0, 0x0);
        gbc.writeMem(0x5163, { 0x7a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x1a34, gbc.sp());
        EXPECT(0x5164, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0096
        gbc.setState(0xb4fb, 0x85c0, 0xa9f0, 0xed3f, 0x43d8, 0xaf1c, 0x1, 0x1);
        gbc.writeMem(0xb4fb, { 0x7a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x85c0, gbc.sp());
        EXPECT(0xb4fc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb4fb));
        // 7A 0097
        gbc.setState(0x9ae6, 0xaf26, 0x2450, 0xb337, 0xf7be, 0xf943, 0x0, 0x1);
        gbc.writeMem(0x9ae6, { 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xaf26, gbc.sp());
        EXPECT(0x9ae7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9ae6));
        // 7A 0098
        gbc.setState(0x1453, 0x1251, 0xf010, 0x6113, 0x348c, 0xaad, 0x0, 0x0);
        gbc.writeMem(0x1453, { 0x7a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0x61, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1251, gbc.sp());
        EXPECT(0x1454, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0099
        gbc.setState(0x8786, 0x91b5, 0xdc30, 0x5906, 0x87da, 0x48cd, 0x0, 0x0);
        gbc.writeMem(0x8786, { 0x7a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x91b5, gbc.sp());
        EXPECT(0x8787, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8786));
        // 7A 009A
        gbc.setState(0x480c, 0x37c8, 0x1b0, 0x8a6d, 0x959b, 0x14c, 0x0, 0x1);
        gbc.writeMem(0x480c, { 0x7a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x37c8, gbc.sp());
        EXPECT(0x480d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 009B
        gbc.setState(0xb5b9, 0x2119, 0x9d30, 0x8494, 0x428c, 0x8635, 0x0, 0x0);
        gbc.writeMem(0xb5b9, { 0x7a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x2119, gbc.sp());
        EXPECT(0xb5ba, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb5b9));
        // 7A 009C
        gbc.setState(0x8cb, 0x786d, 0xaa40, 0xe539, 0x1d2e, 0x6a11, 0x0, 0x0);
        gbc.writeMem(0x8cb, { 0x7a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x786d, gbc.sp());
        EXPECT(0x8cc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 009D
        gbc.setState(0x5d19, 0x1ceb, 0x11f0, 0x74de, 0x405c, 0xf4, 0x0, 0x1);
        gbc.writeMem(0x5d19, { 0x7a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0x1ceb, gbc.sp());
        EXPECT(0x5d1a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 009E
        gbc.setState(0x7882, 0x3242, 0x2c30, 0x1051, 0xb3b1, 0x6bf3, 0x1, 0x0);
        gbc.writeMem(0x7882, { 0x7a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x3242, gbc.sp());
        EXPECT(0x7883, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 009F
        gbc.setState(0xe070, 0xfff1, 0x3570, 0xd3e1, 0xadcc, 0x1224, 0x1, 0x1);
        gbc.writeMem(0xe070, { 0x7a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0xcc, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xfff1, gbc.sp());
        EXPECT(0xe071, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe070));
        // 7A 00A1
        gbc.setState(0x623d, 0x483f, 0xe180, 0xb55, 0x41a3, 0x4295, 0x0, 0x1);
        gbc.writeMem(0x623d, { 0x7a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x42, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x483f, gbc.sp());
        EXPECT(0x623e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00A2
        gbc.setState(0x81c7, 0x580f, 0x2dd0, 0x38d4, 0x2054, 0x3fe1, 0x1, 0x1);
        gbc.writeMem(0x81c7, { 0x7a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x580f, gbc.sp());
        EXPECT(0x81c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x81c7));
        // 7A 00A3
        gbc.setState(0x818e, 0x17d8, 0x8940, 0xec9e, 0x4ef5, 0xb746, 0x0, 0x1);
        gbc.writeMem(0x818e, { 0x7a });
        gbc.step();
        EXPECT(0x4e, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x4e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x17d8, gbc.sp());
        EXPECT(0x818f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x818e));
        // 7A 00A4
        gbc.setState(0x2b4a, 0xd876, 0x9d20, 0x50d7, 0xa0aa, 0x2c3f, 0x0, 0x0);
        gbc.writeMem(0x2b4a, { 0x7a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xd876, gbc.sp());
        EXPECT(0x2b4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00A5
        gbc.setState(0x82a7, 0x3479, 0x2c10, 0x7526, 0x29c6, 0x1a08, 0x1, 0x1);
        gbc.writeMem(0x82a7, { 0x7a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x3479, gbc.sp());
        EXPECT(0x82a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x82a7));
        // 7A 00A6
        gbc.setState(0x849e, 0x9875, 0x6480, 0x9249, 0x4be3, 0x45cc, 0x1, 0x1);
        gbc.writeMem(0x849e, { 0x7a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x9875, gbc.sp());
        EXPECT(0x849f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x849e));
        // 7A 00A7
        gbc.setState(0xadf1, 0x5b44, 0x5f70, 0x96bd, 0xcbae, 0x24eb, 0x1, 0x1);
        gbc.writeMem(0xadf1, { 0x7a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xeb, gbc.l());
        EXPECT(0x5b44, gbc.sp());
        EXPECT(0xadf2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xadf1));
        // 7A 00A8
        gbc.setState(0x9480, 0x215f, 0xe890, 0xa051, 0x97ae, 0x7c15, 0x1, 0x1);
        gbc.writeMem(0x9480, { 0x7a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x215f, gbc.sp());
        EXPECT(0x9481, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9480));
        // 7A 00A9
        gbc.setState(0x1a35, 0xf33, 0xe150, 0xc0dd, 0xcd9, 0x28de, 0x1, 0x1);
        gbc.writeMem(0x1a35, { 0x7a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xf33, gbc.sp());
        EXPECT(0x1a36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00AA
        gbc.setState(0x14a0, 0x118c, 0x4b50, 0xbe15, 0x87e7, 0xbbaf, 0x0, 0x0);
        gbc.writeMem(0x14a0, { 0x7a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0x118c, gbc.sp());
        EXPECT(0x14a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00AB
        gbc.setState(0xbe08, 0x14d0, 0xa780, 0xaa21, 0x1a51, 0x5a, 0x0, 0x0);
        gbc.writeMem(0xbe08, { 0x7a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0x14d0, gbc.sp());
        EXPECT(0xbe09, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbe08));
        // 7A 00AC
        gbc.setState(0xc060, 0xd6c2, 0xbf90, 0x60d7, 0xfce8, 0x657a, 0x0, 0x1);
        gbc.writeMem(0xc060, { 0x7a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xd6c2, gbc.sp());
        EXPECT(0xc061, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc060));
        // 7A 00AD
        gbc.setState(0xe144, 0x1c16, 0x6620, 0x4e8e, 0xdaec, 0xb6ef, 0x1, 0x1);
        gbc.writeMem(0xe144, { 0x7a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0x1c16, gbc.sp());
        EXPECT(0xe145, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe144));
        // 7A 00AE
        gbc.setState(0xb246, 0x5910, 0x9fd0, 0x9a69, 0xf5ae, 0xb57d, 0x1, 0x1);
        gbc.writeMem(0xb246, { 0x7a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x5910, gbc.sp());
        EXPECT(0xb247, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb246));
        // 7A 00AF
        gbc.setState(0x4719, 0x4d0d, 0xab60, 0x4f71, 0xc323, 0xe2f2, 0x1, 0x0);
        gbc.writeMem(0x4719, { 0x7a });
        gbc.step();
        EXPECT(0xc3, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0xc3, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0x4d0d, gbc.sp());
        EXPECT(0x471a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00B0
        gbc.setState(0xbfd, 0xe35a, 0xaec0, 0x688a, 0x400, 0x47ee, 0x0, 0x1);
        gbc.writeMem(0xbfd, { 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0xe35a, gbc.sp());
        EXPECT(0xbfe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00B1
        gbc.setState(0x75b6, 0x83d7, 0x8590, 0x648e, 0xb823, 0x7141, 0x1, 0x1);
        gbc.writeMem(0x75b6, { 0x7a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x83d7, gbc.sp());
        EXPECT(0x75b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00B3
        gbc.setState(0x6b43, 0x7efb, 0x2b0, 0x246b, 0xafd3, 0x8e09, 0x1, 0x1);
        gbc.writeMem(0x6b43, { 0x7a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x7efb, gbc.sp());
        EXPECT(0x6b44, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00B4
        gbc.setState(0x327a, 0x2cb6, 0x7240, 0x34f4, 0x933e, 0xa303, 0x1, 0x0);
        gbc.writeMem(0x327a, { 0x7a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x2cb6, gbc.sp());
        EXPECT(0x327b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00B5
        gbc.setState(0xdf27, 0x9291, 0x4320, 0x9338, 0x44e5, 0xaf95, 0x1, 0x1);
        gbc.writeMem(0xdf27, { 0x7a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x9291, gbc.sp());
        EXPECT(0xdf28, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdf27));
        // 7A 00B6
        gbc.setState(0x9e5a, 0x2122, 0xd1a0, 0x8cce, 0x4d4, 0xee0d, 0x1, 0x0);
        gbc.writeMem(0x9e5a, { 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x2122, gbc.sp());
        EXPECT(0x9e5b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9e5a));
        // 7A 00B7
        gbc.setState(0x3b51, 0xa151, 0x3460, 0x1817, 0xf9b, 0xd0f5, 0x1, 0x0);
        gbc.writeMem(0x3b51, { 0x7a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0xa151, gbc.sp());
        EXPECT(0x3b52, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00B8
        gbc.setState(0x6273, 0x9104, 0x16e0, 0xe28d, 0x23d1, 0xf8ff, 0x0, 0x1);
        gbc.writeMem(0x6273, { 0x7a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9104, gbc.sp());
        EXPECT(0x6274, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00B9
        gbc.setState(0xcb06, 0x246d, 0x24f0, 0x5c11, 0x3113, 0xc93, 0x1, 0x0);
        gbc.writeMem(0xcb06, { 0x7a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xc, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x246d, gbc.sp());
        EXPECT(0xcb07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcb06));
        // 7A 00BA
        gbc.setState(0xeb66, 0xbd65, 0x7120, 0x82cf, 0xe64f, 0x212b, 0x0, 0x0);
        gbc.writeMem(0xeb66, { 0x7a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xbd65, gbc.sp());
        EXPECT(0xeb67, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xeb66));
        // 7A 00BB
        gbc.setState(0x87d5, 0x2249, 0x2450, 0xa256, 0x75e8, 0x24a3, 0x1, 0x1);
        gbc.writeMem(0x87d5, { 0x7a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x2249, gbc.sp());
        EXPECT(0x87d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x87d5));
        // 7A 00BC
        gbc.setState(0x2fc2, 0x5e79, 0xdfa0, 0xe74f, 0xf667, 0xefdb, 0x1, 0x1);
        gbc.writeMem(0x2fc2, { 0x7a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0x5e79, gbc.sp());
        EXPECT(0x2fc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00BD
        gbc.setState(0x30d6, 0xd397, 0x7710, 0x1869, 0xfd6f, 0xf677, 0x1, 0x0);
        gbc.writeMem(0x30d6, { 0x7a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0xd397, gbc.sp());
        EXPECT(0x30d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00BE
        gbc.setState(0x1a2, 0xe610, 0x1830, 0x1f8f, 0x22e0, 0x598a, 0x1, 0x1);
        gbc.writeMem(0x1a2, { 0x7a });
        gbc.step();
        EXPECT(0x22, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x22, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0xe610, gbc.sp());
        EXPECT(0x1a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00BF
        gbc.setState(0x70a3, 0xa9ef, 0xb600, 0x88fa, 0x60e3, 0x78fe, 0x1, 0x0);
        gbc.writeMem(0x70a3, { 0x7a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xa9ef, gbc.sp());
        EXPECT(0x70a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00C0
        gbc.setState(0xb0c2, 0xa2cb, 0x4080, 0x6ed9, 0x312e, 0xb40d, 0x0, 0x1);
        gbc.writeMem(0xb0c2, { 0x7a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa2cb, gbc.sp());
        EXPECT(0xb0c3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb0c2));
        // 7A 00C1
        gbc.setState(0x4e68, 0xaeb0, 0x1480, 0x2725, 0x88a5, 0x32cf, 0x0, 0x1);
        gbc.writeMem(0x4e68, { 0x7a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xaeb0, gbc.sp());
        EXPECT(0x4e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00C2
        gbc.setState(0x63e9, 0x45fa, 0x6ec0, 0x8bd2, 0x5976, 0xf2c0, 0x0, 0x0);
        gbc.writeMem(0x63e9, { 0x7a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x45fa, gbc.sp());
        EXPECT(0x63ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00C3
        gbc.setState(0xc3fe, 0xe70f, 0xf4d0, 0x932a, 0xd9b6, 0xc016, 0x1, 0x0);
        gbc.writeMem(0xc3fe, { 0x7a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xe70f, gbc.sp());
        EXPECT(0xc3ff, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc3fe));
        // 7A 00C4
        gbc.setState(0xc4db, 0x27a4, 0x14d0, 0xed7a, 0x9e4f, 0xf780, 0x1, 0x0);
        gbc.writeMem(0xc4db, { 0x7a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x27a4, gbc.sp());
        EXPECT(0xc4dc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc4db));
        // 7A 00C5
        gbc.setState(0x9923, 0x9ddc, 0x3830, 0xdfc2, 0xc968, 0x1c7f, 0x0, 0x0);
        gbc.writeMem(0x9923, { 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9ddc, gbc.sp());
        EXPECT(0x9924, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9923));
        // 7A 00C6
        gbc.setState(0x10c1, 0xb6a6, 0x5c10, 0xf9d1, 0x3e7, 0x29a8, 0x0, 0x1);
        gbc.writeMem(0x10c1, { 0x7a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xf9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xb6a6, gbc.sp());
        EXPECT(0x10c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00C8
        gbc.setState(0x8aae, 0xc905, 0x1da0, 0x30d3, 0x6d4d, 0xbc31, 0x1, 0x1);
        gbc.writeMem(0x8aae, { 0x7a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x31, gbc.l());
        EXPECT(0xc905, gbc.sp());
        EXPECT(0x8aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8aae));
        // 7A 00C9
        gbc.setState(0x1dfa, 0x53b9, 0xa200, 0x19f1, 0xa470, 0x4705, 0x1, 0x1);
        gbc.writeMem(0x1dfa, { 0x7a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x47, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0x53b9, gbc.sp());
        EXPECT(0x1dfb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00CA
        gbc.setState(0x468b, 0x9217, 0x1ff0, 0xa624, 0xd26b, 0xba3e, 0x1, 0x1);
        gbc.writeMem(0x468b, { 0x7a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x3e, gbc.l());
        EXPECT(0x9217, gbc.sp());
        EXPECT(0x468c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00CB
        gbc.setState(0x8084, 0x6df0, 0xc980, 0x714d, 0xe7fd, 0xe1e4, 0x1, 0x1);
        gbc.writeMem(0x8084, { 0x7a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x6df0, gbc.sp());
        EXPECT(0x8085, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8084));
        // 7A 00CC
        gbc.setState(0x4c86, 0xdd7b, 0x770, 0x4554, 0x4f9a, 0x7968, 0x1, 0x1);
        gbc.writeMem(0x4c86, { 0x7a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0xdd7b, gbc.sp());
        EXPECT(0x4c87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00CD
        gbc.setState(0xe82, 0x1065, 0xa400, 0xc6d8, 0x6f0a, 0xd1b5, 0x1, 0x1);
        gbc.writeMem(0xe82, { 0x7a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x1065, gbc.sp());
        EXPECT(0xe83, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00CE
        gbc.setState(0x7ec, 0x94a3, 0x5ea0, 0xd000, 0x25dd, 0x9e0e, 0x0, 0x0);
        gbc.writeMem(0x7ec, { 0x7a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x0, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x94a3, gbc.sp());
        EXPECT(0x7ed, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00CF
        gbc.setState(0xeb2b, 0xdfd3, 0x1eb0, 0x9c0b, 0xe9f1, 0x4a11, 0x1, 0x1);
        gbc.writeMem(0xeb2b, { 0x7a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xdfd3, gbc.sp());
        EXPECT(0xeb2c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xeb2b));
        // 7A 00D0
        gbc.setState(0xdb4d, 0x34f7, 0x5e70, 0x97cc, 0xeffe, 0xf96d, 0x1, 0x0);
        gbc.writeMem(0xdb4d, { 0x7a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x34f7, gbc.sp());
        EXPECT(0xdb4e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdb4d));
        // 7A 00D1
        gbc.setState(0x6108, 0x299e, 0x7690, 0x2b29, 0x4531, 0x67e4, 0x0, 0x1);
        gbc.writeMem(0x6108, { 0x7a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0x299e, gbc.sp());
        EXPECT(0x6109, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00D2
        gbc.setState(0x656e, 0x21f6, 0x2d70, 0x5f42, 0x363b, 0x6f60, 0x1, 0x0);
        gbc.writeMem(0x656e, { 0x7a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0x21f6, gbc.sp());
        EXPECT(0x656f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00D4
        gbc.setState(0x131d, 0xe271, 0xdc10, 0x7c6a, 0xf15d, 0x56cd, 0x1, 0x0);
        gbc.writeMem(0x131d, { 0x7a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xe271, gbc.sp());
        EXPECT(0x131e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00D5
        gbc.setState(0xaf15, 0x536a, 0x4540, 0xa25, 0x1fcf, 0x731d, 0x1, 0x1);
        gbc.writeMem(0xaf15, { 0x7a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x536a, gbc.sp());
        EXPECT(0xaf16, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xaf15));
        // 7A 00D6
        gbc.setState(0xc471, 0x47ac, 0x65c0, 0x9e34, 0x7b8e, 0x9364, 0x0, 0x0);
        gbc.writeMem(0xc471, { 0x7a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0x47ac, gbc.sp());
        EXPECT(0xc472, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc471));
        // 7A 00D7
        gbc.setState(0x267a, 0xf730, 0xed70, 0x2480, 0x7775, 0xd9dc, 0x0, 0x0);
        gbc.writeMem(0x267a, { 0x7a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xf730, gbc.sp());
        EXPECT(0x267b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00D8
        gbc.setState(0xb975, 0x481f, 0x9c10, 0x4915, 0xb749, 0xf4bd, 0x0, 0x0);
        gbc.writeMem(0xb975, { 0x7a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x481f, gbc.sp());
        EXPECT(0xb976, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb975));
        // 7A 00D9
        gbc.setState(0x2bf, 0x9716, 0x3fd0, 0x37b6, 0xdc83, 0x121, 0x1, 0x1);
        gbc.writeMem(0x2bf, { 0x7a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x9716, gbc.sp());
        EXPECT(0x2c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00DB
        gbc.setState(0x27d7, 0x6178, 0x4f10, 0xad16, 0xeb6d, 0xff71, 0x1, 0x1);
        gbc.writeMem(0x27d7, { 0x7a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x71, gbc.l());
        EXPECT(0x6178, gbc.sp());
        EXPECT(0x27d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00DC
        gbc.setState(0x4f7e, 0xc855, 0x5f50, 0xc61f, 0xe333, 0xa5e8, 0x1, 0x1);
        gbc.writeMem(0x4f7e, { 0x7a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x1f, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0xc855, gbc.sp());
        EXPECT(0x4f7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00DD
        gbc.setState(0x8326, 0x241a, 0x76e0, 0x4220, 0xd4dd, 0x997d, 0x0, 0x0);
        gbc.writeMem(0x8326, { 0x7a });
        gbc.step();
        EXPECT(0xd4, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xd4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x7d, gbc.l());
        EXPECT(0x241a, gbc.sp());
        EXPECT(0x8327, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8326));
        // 7A 00DE
        gbc.setState(0x5e92, 0xb475, 0x9b0, 0xbf, 0x39b7, 0x2b56, 0x0, 0x0);
        gbc.writeMem(0x5e92, { 0x7a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xb7, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xb475, gbc.sp());
        EXPECT(0x5e93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00DF
        gbc.setState(0x2ab6, 0xaa4f, 0x2650, 0xcab, 0xffb3, 0xa321, 0x0, 0x0);
        gbc.writeMem(0x2ab6, { 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xaa4f, gbc.sp());
        EXPECT(0x2ab7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00E0
        gbc.setState(0x1e9, 0x21f0, 0x2bd0, 0x30eb, 0x8997, 0x8d44, 0x1, 0x0);
        gbc.writeMem(0x1e9, { 0x7a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x97, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x21f0, gbc.sp());
        EXPECT(0x1ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00E1
        gbc.setState(0x2d37, 0xcf4a, 0xd4f0, 0x9df9, 0xfd4b, 0xa9da, 0x0, 0x0);
        gbc.writeMem(0x2d37, { 0x7a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xcf4a, gbc.sp());
        EXPECT(0x2d38, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00E2
        gbc.setState(0x772e, 0x5437, 0xad50, 0x3764, 0x11c3, 0x50a2, 0x0, 0x1);
        gbc.writeMem(0x772e, { 0x7a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x5437, gbc.sp());
        EXPECT(0x772f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00E3
        gbc.setState(0x82fc, 0x9bb, 0x3150, 0xcf30, 0xaafd, 0xbcf7, 0x1, 0x1);
        gbc.writeMem(0x82fc, { 0x7a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0x9bb, gbc.sp());
        EXPECT(0x82fd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x82fc));
        // 7A 00E4
        gbc.setState(0x2c89, 0x8c6b, 0x1580, 0x7b68, 0x387f, 0x3c7b, 0x1, 0x1);
        gbc.writeMem(0x2c89, { 0x7a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x8c6b, gbc.sp());
        EXPECT(0x2c8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00E5
        gbc.setState(0x52c1, 0x2c15, 0xae60, 0xa06d, 0x31d3, 0x430f, 0x1, 0x0);
        gbc.writeMem(0x52c1, { 0x7a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x2c15, gbc.sp());
        EXPECT(0x52c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00E6
        gbc.setState(0x8f0f, 0x8c0d, 0x65c0, 0x318, 0x6cd, 0x1b1, 0x0, 0x0);
        gbc.writeMem(0x8f0f, { 0x7a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xb1, gbc.l());
        EXPECT(0x8c0d, gbc.sp());
        EXPECT(0x8f10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8f0f));
        // 7A 00E7
        gbc.setState(0x793d, 0x5b41, 0xb8f0, 0x2f50, 0xde8, 0xb780, 0x1, 0x1);
        gbc.writeMem(0x793d, { 0x7a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xb7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5b41, gbc.sp());
        EXPECT(0x793e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00E9
        gbc.setState(0x3549, 0x92fb, 0xff30, 0xde88, 0x578e, 0xc822, 0x0, 0x1);
        gbc.writeMem(0x3549, { 0x7a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x92fb, gbc.sp());
        EXPECT(0x354a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00EA
        gbc.setState(0xd76f, 0x6d25, 0x45b0, 0x2aa7, 0x720c, 0xf409, 0x1, 0x1);
        gbc.writeMem(0xd76f, { 0x7a });
        gbc.step();
        EXPECT(0x72, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x72, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x6d25, gbc.sp());
        EXPECT(0xd770, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd76f));
        // 7A 00EB
        gbc.setState(0xe3f7, 0x9821, 0x4fb0, 0x2193, 0x9d65, 0x341e, 0x1, 0x0);
        gbc.writeMem(0xe3f7, { 0x7a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x9821, gbc.sp());
        EXPECT(0xe3f8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe3f7));
        // 7A 00EC
        gbc.setState(0x4fa2, 0xebf9, 0x47b0, 0x65cc, 0x1ec3, 0xa8d9, 0x1, 0x0);
        gbc.writeMem(0x4fa2, { 0x7a });
        gbc.step();
        EXPECT(0x1e, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x1e, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0xebf9, gbc.sp());
        EXPECT(0x4fa3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00ED
        gbc.setState(0x73d5, 0x4d19, 0x17b0, 0xb5c6, 0x3cb0, 0x7db0, 0x0, 0x0);
        gbc.writeMem(0x73d5, { 0x7a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x4d19, gbc.sp());
        EXPECT(0x73d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00EE
        gbc.setState(0x4398, 0xb6fd, 0x2070, 0x9f5b, 0x2552, 0xad5c, 0x0, 0x0);
        gbc.writeMem(0x4398, { 0x7a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xb6fd, gbc.sp());
        EXPECT(0x4399, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00EF
        gbc.setState(0xa0ba, 0xda1b, 0x9b80, 0xd34e, 0x5d7f, 0xa5ef, 0x0, 0x1);
        gbc.writeMem(0xa0ba, { 0x7a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xef, gbc.l());
        EXPECT(0xda1b, gbc.sp());
        EXPECT(0xa0bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa0ba));
        // 7A 00F0
        gbc.setState(0x5a1b, 0x78d7, 0x5750, 0xa357, 0xc866, 0xde67, 0x0, 0x1);
        gbc.writeMem(0x5a1b, { 0x7a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x57, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x78d7, gbc.sp());
        EXPECT(0x5a1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00F2
        gbc.setState(0x85d3, 0x9f2a, 0xb650, 0x344, 0x5fdb, 0xc46d, 0x0, 0x0);
        gbc.writeMem(0x85d3, { 0x7a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9f2a, gbc.sp());
        EXPECT(0x85d4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x85d3));
        // 7A 00F3
        gbc.setState(0x70d2, 0xb63, 0x22f0, 0x4cd9, 0x8361, 0x5766, 0x0, 0x1);
        gbc.writeMem(0x70d2, { 0x7a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x57, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xb63, gbc.sp());
        EXPECT(0x70d3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00F4
        gbc.setState(0xb845, 0x9982, 0x3570, 0x625b, 0x6233, 0x29bd, 0x1, 0x0);
        gbc.writeMem(0xb845, { 0x7a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x9982, gbc.sp());
        EXPECT(0xb846, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb845));
        // 7A 00F5
        gbc.setState(0x570c, 0xa7c7, 0x2fe0, 0xabb6, 0xdcc5, 0xd544, 0x1, 0x1);
        gbc.writeMem(0x570c, { 0x7a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xa7c7, gbc.sp());
        EXPECT(0x570d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00F6
        gbc.setState(0xad1b, 0x93b7, 0x730, 0x253a, 0xf89c, 0x734e, 0x1, 0x0);
        gbc.writeMem(0xad1b, { 0x7a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x4e, gbc.l());
        EXPECT(0x93b7, gbc.sp());
        EXPECT(0xad1c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xad1b));
        // 7A 00F7
        gbc.setState(0x2e68, 0x5500, 0x8490, 0xd17a, 0xba72, 0xba34, 0x0, 0x1);
        gbc.writeMem(0x2e68, { 0x7a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x5500, gbc.sp());
        EXPECT(0x2e69, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00F8
        gbc.setState(0xe28c, 0x99d4, 0x2770, 0xabdc, 0x64ed, 0xbd46, 0x1, 0x1);
        gbc.writeMem(0xe28c, { 0x7a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x99d4, gbc.sp());
        EXPECT(0xe28d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe28c));
        // 7A 00F9
        gbc.setState(0xe5c7, 0x8417, 0xff40, 0x7652, 0xd1ee, 0xc5fe, 0x0, 0x0);
        gbc.writeMem(0xe5c7, { 0x7a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x8417, gbc.sp());
        EXPECT(0xe5c8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe5c7));
        // 7A 00FA
        gbc.setState(0x8f14, 0x61fd, 0x6140, 0x5b48, 0xcce6, 0xaf9f, 0x0, 0x0);
        gbc.writeMem(0x8f14, { 0x7a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0xaf, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x61fd, gbc.sp());
        EXPECT(0x8f15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8f14));
        // 7A 00FB
        gbc.setState(0xdbe9, 0x7d68, 0x3d30, 0x426b, 0x8f6f, 0x7832, 0x1, 0x1);
        gbc.writeMem(0xdbe9, { 0x7a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x42, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x7d68, gbc.sp());
        EXPECT(0xdbea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdbe9));
        // 7A 00FC
        gbc.setState(0x743d, 0x41a5, 0x9600, 0xc6d2, 0xb322, 0xd97a, 0x1, 0x1);
        gbc.writeMem(0x743d, { 0x7a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0xd9, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x41a5, gbc.sp());
        EXPECT(0x743e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 00FD
        gbc.setState(0xdd8b, 0xfbb4, 0xaf0, 0x89b0, 0xbb4, 0xb03d, 0x0, 0x1);
        gbc.writeMem(0xdd8b, { 0x7a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0x3d, gbc.l());
        EXPECT(0xfbb4, gbc.sp());
        EXPECT(0xdd8c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdd8b));
        // 7A 00FE
        gbc.setState(0x3a74, 0xd301, 0x9c70, 0x607e, 0xd933, 0x5f7e, 0x1, 0x0);
        gbc.writeMem(0x3a74, { 0x7a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xd301, gbc.sp());
        EXPECT(0x3a75, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 00FF
        gbc.setState(0xab2d, 0xf7e2, 0x1100, 0x7781, 0x27a8, 0x438c, 0x1, 0x1);
        gbc.writeMem(0xab2d, { 0x7a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0xf7e2, gbc.sp());
        EXPECT(0xab2e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xab2d));
        // 7A 0100
        gbc.setState(0x6c1d, 0xf950, 0x84f0, 0xb142, 0x14a0, 0x696a, 0x1, 0x0);
        gbc.writeMem(0x6c1d, { 0x7a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xf950, gbc.sp());
        EXPECT(0x6c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0101
        gbc.setState(0xc49c, 0x88e9, 0xc600, 0xd4de, 0x4d36, 0xb0f, 0x1, 0x1);
        gbc.writeMem(0xc49c, { 0x7a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x88e9, gbc.sp());
        EXPECT(0xc49d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc49c));
        // 7A 0102
        gbc.setState(0xe81c, 0xce75, 0x1610, 0x8049, 0x10a8, 0xcff6, 0x0, 0x0);
        gbc.writeMem(0xe81c, { 0x7a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0xcf, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0xce75, gbc.sp());
        EXPECT(0xe81d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe81c));
        // 7A 0103
        gbc.setState(0x16bc, 0xacee, 0x1c0, 0xa32d, 0x8d3e, 0x7084, 0x0, 0x1);
        gbc.writeMem(0x16bc, { 0x7a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x70, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xacee, gbc.sp());
        EXPECT(0x16bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0104
        gbc.setState(0xc726, 0xa1dd, 0xb4e0, 0x7363, 0x75e, 0x1d5, 0x1, 0x0);
        gbc.writeMem(0xc726, { 0x7a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x5e, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0xa1dd, gbc.sp());
        EXPECT(0xc727, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc726));
        // 7A 0105
        gbc.setState(0x454a, 0x17be, 0xf400, 0x8e38, 0xff87, 0xeb22, 0x0, 0x0);
        gbc.writeMem(0x454a, { 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x8e, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x87, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0x17be, gbc.sp());
        EXPECT(0x454b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0106
        gbc.setState(0xb29a, 0xbe53, 0x5770, 0x3bea, 0xf541, 0xe005, 0x1, 0x1);
        gbc.writeMem(0xb29a, { 0x7a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xbe53, gbc.sp());
        EXPECT(0xb29b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb29a));
        // 7A 0107
        gbc.setState(0x3492, 0x5532, 0x13c0, 0x3789, 0x243a, 0xf48d, 0x1, 0x0);
        gbc.writeMem(0x3492, { 0x7a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x5532, gbc.sp());
        EXPECT(0x3493, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0108
        gbc.setState(0xb9dc, 0x33e2, 0x65e0, 0x13c, 0x8f5b, 0xa1ff, 0x1, 0x1);
        gbc.writeMem(0xb9dc, { 0x7a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x33e2, gbc.sp());
        EXPECT(0xb9dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb9dc));
        // 7A 0109
        gbc.setState(0xe084, 0x9fd6, 0x6230, 0x7c49, 0xdd1b, 0xd4f8, 0x0, 0x0);
        gbc.writeMem(0xe084, { 0x7a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x9fd6, gbc.sp());
        EXPECT(0xe085, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe084));
        // 7A 010A
        gbc.setState(0x9849, 0x9891, 0x3290, 0xa5a3, 0x981d, 0xeee1, 0x1, 0x1);
        gbc.writeMem(0x9849, { 0x7a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0x9891, gbc.sp());
        EXPECT(0x984a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9849));
        // 7A 010B
        gbc.setState(0x6092, 0xba5, 0x15a0, 0x677c, 0xd11b, 0x3f2d, 0x1, 0x1);
        gbc.writeMem(0x6092, { 0x7a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0xba5, gbc.sp());
        EXPECT(0x6093, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 010C
        gbc.setState(0x5dc1, 0x2e94, 0xe3a0, 0xc1ad, 0x6c25, 0x6263, 0x0, 0x0);
        gbc.writeMem(0x5dc1, { 0x7a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xad, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x62, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2e94, gbc.sp());
        EXPECT(0x5dc2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 010D
        gbc.setState(0xda44, 0xf5ed, 0x3360, 0x4d44, 0x45bc, 0x207b, 0x0, 0x1);
        gbc.writeMem(0xda44, { 0x7a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0xbc, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0xf5ed, gbc.sp());
        EXPECT(0xda45, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xda44));
        // 7A 010E
        gbc.setState(0x23b8, 0xcb8f, 0x44d0, 0x8669, 0x11fb, 0x2616, 0x1, 0x1);
        gbc.writeMem(0x23b8, { 0x7a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xcb8f, gbc.sp());
        EXPECT(0x23b9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 010F
        gbc.setState(0xf4, 0xeaf8, 0x7d50, 0x4b1c, 0xd8f6, 0x52d6, 0x1, 0x0);
        gbc.writeMem(0xf4, { 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0xd6, gbc.l());
        EXPECT(0xeaf8, gbc.sp());
        EXPECT(0xf5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0110
        gbc.setState(0x5d7, 0x8b83, 0xf760, 0xa2f3, 0xb10b, 0x91e0, 0x0, 0x1);
        gbc.writeMem(0x5d7, { 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x8b83, gbc.sp());
        EXPECT(0x5d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0111
        gbc.setState(0xa667, 0x9e56, 0x9dc0, 0x29a8, 0x9837, 0x105b, 0x0, 0x1);
        gbc.writeMem(0xa667, { 0x7a });
        gbc.step();
        EXPECT(0x98, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x98, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x5b, gbc.l());
        EXPECT(0x9e56, gbc.sp());
        EXPECT(0xa668, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa667));
        // 7A 0112
        gbc.setState(0x3a5f, 0x34f3, 0x70f0, 0x157d, 0x2576, 0x9e1d, 0x0, 0x0);
        gbc.writeMem(0x3a5f, { 0x7a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x34f3, gbc.sp());
        EXPECT(0x3a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0113
        gbc.setState(0x79aa, 0x4b1f, 0x2460, 0xb21b, 0x1944, 0xeb9, 0x1, 0x0);
        gbc.writeMem(0x79aa, { 0x7a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x44, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0x4b1f, gbc.sp());
        EXPECT(0x79ab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0114
        gbc.setState(0x789f, 0xd9fd, 0x380, 0x4f97, 0xc462, 0xe1ec, 0x0, 0x1);
        gbc.writeMem(0x789f, { 0x7a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xd9fd, gbc.sp());
        EXPECT(0x78a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0115
        gbc.setState(0x75db, 0x5511, 0x7f60, 0x90a2, 0x4229, 0xc774, 0x0, 0x0);
        gbc.writeMem(0x75db, { 0x7a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x29, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x5511, gbc.sp());
        EXPECT(0x75dc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0116
        gbc.setState(0x9803, 0xefcc, 0x9e10, 0xcd12, 0x1f0, 0x79da, 0x1, 0x1);
        gbc.writeMem(0x9803, { 0x7a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xefcc, gbc.sp());
        EXPECT(0x9804, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9803));
        // 7A 0117
        gbc.setState(0x752a, 0x31e7, 0xff30, 0xb61, 0x81c3, 0xd7b7, 0x1, 0x0);
        gbc.writeMem(0x752a, { 0x7a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x31e7, gbc.sp());
        EXPECT(0x752b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0118
        gbc.setState(0xd186, 0x49ea, 0x28f0, 0xcde3, 0x7a26, 0xd395, 0x1, 0x1);
        gbc.writeMem(0xd186, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x49ea, gbc.sp());
        EXPECT(0xd187, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd186));
        // 7A 0119
        gbc.setState(0x9016, 0xd1c8, 0x82b0, 0x3a5f, 0xb8f9, 0xee0, 0x1, 0x0);
        gbc.writeMem(0x9016, { 0x7a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xd1c8, gbc.sp());
        EXPECT(0x9017, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9016));
        // 7A 011A
        gbc.setState(0xd858, 0x2d45, 0xed90, 0xc603, 0x27a0, 0x9e75, 0x1, 0x1);
        gbc.writeMem(0xd858, { 0x7a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x2d45, gbc.sp());
        EXPECT(0xd859, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd858));
        // 7A 011B
        gbc.setState(0x8e52, 0xf6c6, 0xf8a0, 0x7952, 0x7ea1, 0x4e28, 0x1, 0x0);
        gbc.writeMem(0x8e52, { 0x7a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0xf6c6, gbc.sp());
        EXPECT(0x8e53, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8e52));
        // 7A 011C
        gbc.setState(0x9f34, 0x4240, 0x14b0, 0xabee, 0xc6d5, 0x869, 0x0, 0x0);
        gbc.writeMem(0x9f34, { 0x7a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xab, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x4240, gbc.sp());
        EXPECT(0x9f35, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9f34));
        // 7A 011D
        gbc.setState(0xa991, 0x2cc6, 0x6a20, 0xa497, 0x9bc6, 0x260c, 0x0, 0x0);
        gbc.writeMem(0xa991, { 0x7a });
        gbc.step();
        EXPECT(0x9b, gbc.a());
        EXPECT(0xa4, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x9b, gbc.d());
        EXPECT(0xc6, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x2cc6, gbc.sp());
        EXPECT(0xa992, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa991));
        // 7A 011E
        gbc.setState(0x2b85, 0x8db8, 0x59c0, 0x40f, 0xcd3e, 0x1fc0, 0x0, 0x1);
        gbc.writeMem(0x2b85, { 0x7a });
        gbc.step();
        EXPECT(0xcd, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xcd, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x8db8, gbc.sp());
        EXPECT(0x2b86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 011F
        gbc.setState(0x835e, 0xe6fa, 0x6f00, 0x2c71, 0x5149, 0x5af8, 0x1, 0x1);
        gbc.writeMem(0x835e, { 0x7a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xe6fa, gbc.sp());
        EXPECT(0x835f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x835e));
        // 7A 0120
        gbc.setState(0xbe76, 0x454f, 0xb690, 0xae89, 0x78e7, 0x1ee0, 0x1, 0x1);
        gbc.writeMem(0xbe76, { 0x7a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x454f, gbc.sp());
        EXPECT(0xbe77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbe76));
        // 7A 0121
        gbc.setState(0x76e5, 0x23bc, 0x5ba0, 0x85fa, 0xed27, 0x36c, 0x1, 0x1);
        gbc.writeMem(0x76e5, { 0x7a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x23bc, gbc.sp());
        EXPECT(0x76e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0122
        gbc.setState(0x2a3f, 0xd270, 0x1510, 0xc285, 0xc956, 0x6bcb, 0x1, 0x1);
        gbc.writeMem(0x2a3f, { 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0xd270, gbc.sp());
        EXPECT(0x2a40, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0123
        gbc.setState(0xdfb8, 0xb07d, 0x8c80, 0x6925, 0xb7a, 0x6a75, 0x0, 0x1);
        gbc.writeMem(0xdfb8, { 0x7a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xb07d, gbc.sp());
        EXPECT(0xdfb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdfb8));
        // 7A 0125
        gbc.setState(0xc37c, 0x3b02, 0xa940, 0xd56c, 0x51d1, 0xd507, 0x0, 0x1);
        gbc.writeMem(0xc37c, { 0x7a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0x3b02, gbc.sp());
        EXPECT(0xc37d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc37c));
        // 7A 0126
        gbc.setState(0x8489, 0x5a20, 0x68c0, 0x8cc7, 0x6ba7, 0x222d, 0x1, 0x0);
        gbc.writeMem(0x8489, { 0x7a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x2d, gbc.l());
        EXPECT(0x5a20, gbc.sp());
        EXPECT(0x848a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8489));
        // 7A 0127
        gbc.setState(0x61f0, 0x2bab, 0x3300, 0xc62a, 0x3c63, 0x378e, 0x0, 0x0);
        gbc.writeMem(0x61f0, { 0x7a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0xc6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0x2bab, gbc.sp());
        EXPECT(0x61f1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0129
        gbc.setState(0xe3d2, 0xe0f6, 0x7070, 0x5f6e, 0xfa93, 0x64af, 0x1, 0x1);
        gbc.writeMem(0xe3d2, { 0x7a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0xaf, gbc.l());
        EXPECT(0xe0f6, gbc.sp());
        EXPECT(0xe3d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe3d2));
        // 7A 012A
        gbc.setState(0x2c82, 0xbfa5, 0xa6a0, 0xd125, 0x6988, 0x8614, 0x0, 0x1);
        gbc.writeMem(0x2c82, { 0x7a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x86, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0xbfa5, gbc.sp());
        EXPECT(0x2c83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 012B
        gbc.setState(0x9965, 0xcccb, 0x45a0, 0xb89, 0xaa5a, 0xfa43, 0x0, 0x1);
        gbc.writeMem(0x9965, { 0x7a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0xb, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xcccb, gbc.sp());
        EXPECT(0x9966, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9965));
        // 7A 012C
        gbc.setState(0x8ad6, 0xc0e, 0x38b0, 0x9099, 0x80f7, 0xeccd, 0x1, 0x0);
        gbc.writeMem(0x8ad6, { 0x7a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x99, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xc0e, gbc.sp());
        EXPECT(0x8ad7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8ad6));
        // 7A 012D
        gbc.setState(0x8bb9, 0x7927, 0xc460, 0xaa34, 0x73e8, 0x98c9, 0x1, 0x0);
        gbc.writeMem(0x8bb9, { 0x7a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x7927, gbc.sp());
        EXPECT(0x8bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8bb9));
        // 7A 012E
        gbc.setState(0xb690, 0x9447, 0x81a0, 0xbc48, 0xf421, 0xb6a2, 0x1, 0x0);
        gbc.writeMem(0xb690, { 0x7a });
        gbc.step();
        EXPECT(0xf4, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xf4, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x9447, gbc.sp());
        EXPECT(0xb691, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb690));
        // 7A 012F
        gbc.setState(0x8ffd, 0x5824, 0xb650, 0x46fa, 0xffa9, 0xf5d3, 0x1, 0x0);
        gbc.writeMem(0x8ffd, { 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x5824, gbc.sp());
        EXPECT(0x8ffe, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8ffd));
        // 7A 0131
        gbc.setState(0x90a5, 0x7361, 0x6940, 0x4bcf, 0xeb, 0x63bd, 0x1, 0x1);
        gbc.writeMem(0x90a5, { 0x7a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x7361, gbc.sp());
        EXPECT(0x90a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x90a5));
        // 7A 0132
        gbc.setState(0x3b68, 0xe1db, 0xf100, 0x8ffb, 0xd2be, 0xed4d, 0x1, 0x1);
        gbc.writeMem(0x3b68, { 0x7a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xe1db, gbc.sp());
        EXPECT(0x3b69, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0133
        gbc.setState(0x7003, 0xe5be, 0xf100, 0x3b83, 0x3db5, 0x9be7, 0x0, 0x0);
        gbc.writeMem(0x7003, { 0x7a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xe5be, gbc.sp());
        EXPECT(0x7004, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0134
        gbc.setState(0x6d64, 0x8e94, 0x1cc0, 0xcde8, 0x4183, 0xeb77, 0x1, 0x0);
        gbc.writeMem(0x6d64, { 0x7a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x8e94, gbc.sp());
        EXPECT(0x6d65, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0135
        gbc.setState(0x1120, 0xfeab, 0xa600, 0xc3a8, 0x3aad, 0x46b9, 0x0, 0x1);
        gbc.writeMem(0x1120, { 0x7a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xfeab, gbc.sp());
        EXPECT(0x1121, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0136
        gbc.setState(0xd7b6, 0xbfa8, 0xf5f0, 0x93c1, 0x393d, 0x424, 0x1, 0x0);
        gbc.writeMem(0xd7b6, { 0x7a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0x3d, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x24, gbc.l());
        EXPECT(0xbfa8, gbc.sp());
        EXPECT(0xd7b7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd7b6));
        // 7A 0137
        gbc.setState(0xa5f4, 0x15d, 0xeac0, 0xa5d, 0x1d37, 0xd066, 0x1, 0x1);
        gbc.writeMem(0xa5f4, { 0x7a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0x37, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x15d, gbc.sp());
        EXPECT(0xa5f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa5f4));
        // 7A 0138
        gbc.setState(0xc8b7, 0x37ff, 0xe800, 0x8cee, 0x58ba, 0x7d37, 0x1, 0x0);
        gbc.writeMem(0xc8b7, { 0x7a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0x37ff, gbc.sp());
        EXPECT(0xc8b8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc8b7));
        // 7A 013A
        gbc.setState(0x233a, 0x30d0, 0x5850, 0xe42c, 0xf3b4, 0xff83, 0x0, 0x1);
        gbc.writeMem(0x233a, { 0x7a });
        gbc.step();
        EXPECT(0xf3, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf3, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0x30d0, gbc.sp());
        EXPECT(0x233b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 013B
        gbc.setState(0x806b, 0x9362, 0xe280, 0x1f5a, 0xff40, 0x7a7, 0x0, 0x1);
        gbc.writeMem(0x806b, { 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0x5a, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x9362, gbc.sp());
        EXPECT(0x806c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x806b));
        // 7A 013C
        gbc.setState(0xb4b, 0x8380, 0x3f80, 0xf28e, 0xc13e, 0xb13, 0x0, 0x1);
        gbc.writeMem(0xb4b, { 0x7a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8380, gbc.sp());
        EXPECT(0xb4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 013D
        gbc.setState(0xd5a7, 0x4b34, 0x3700, 0xdfdb, 0x97d7, 0xba45, 0x1, 0x1);
        gbc.writeMem(0xd5a7, { 0x7a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x4b34, gbc.sp());
        EXPECT(0xd5a8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd5a7));
        // 7A 013E
        gbc.setState(0x53fb, 0x7bd5, 0xcce0, 0x7360, 0x98f, 0x1380, 0x0, 0x1);
        gbc.writeMem(0x53fb, { 0x7a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x73, gbc.b());
        EXPECT(0x60, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x7bd5, gbc.sp());
        EXPECT(0x53fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 013F
        gbc.setState(0xbbcb, 0x54f5, 0x3f40, 0xdff3, 0x6a71, 0x2d09, 0x0, 0x1);
        gbc.writeMem(0xbbcb, { 0x7a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0xf3, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x54f5, gbc.sp());
        EXPECT(0xbbcc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbbcb));
        // 7A 0141
        gbc.setState(0xecdb, 0xe071, 0xa420, 0xa7ee, 0x6a2e, 0xe6f3, 0x0, 0x1);
        gbc.writeMem(0xecdb, { 0x7a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0xe6, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0xe071, gbc.sp());
        EXPECT(0xecdc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xecdb));
        // 7A 0142
        gbc.setState(0x64da, 0x52ae, 0xe00, 0x607, 0x4f8c, 0x29c3, 0x1, 0x1);
        gbc.writeMem(0x64da, { 0x7a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x52ae, gbc.sp());
        EXPECT(0x64db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0143
        gbc.setState(0xd175, 0xbfb2, 0x3190, 0xb813, 0x1bd1, 0xebb9, 0x1, 0x0);
        gbc.writeMem(0xd175, { 0x7a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xbfb2, gbc.sp());
        EXPECT(0xd176, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd175));
        // 7A 0144
        gbc.setState(0x9eae, 0xbb47, 0xa5b0, 0xf7b7, 0x1015, 0x5f4b, 0x1, 0x1);
        gbc.writeMem(0x9eae, { 0x7a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x15, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0xbb47, gbc.sp());
        EXPECT(0x9eaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9eae));
        // 7A 0145
        gbc.setState(0x877b, 0x14f2, 0x92c0, 0xd93b, 0x1340, 0x56f9, 0x0, 0x1);
        gbc.writeMem(0x877b, { 0x7a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x14f2, gbc.sp());
        EXPECT(0x877c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x877b));
        // 7A 0146
        gbc.setState(0xdab1, 0xcdb3, 0xfb30, 0x6a9b, 0x2177, 0x81aa, 0x0, 0x1);
        gbc.writeMem(0xdab1, { 0x7a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xcdb3, gbc.sp());
        EXPECT(0xdab2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdab1));
        // 7A 0147
        gbc.setState(0xb77d, 0xc9e5, 0xaf30, 0x7a2, 0xa7dd, 0xed8b, 0x0, 0x1);
        gbc.writeMem(0xb77d, { 0x7a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x7, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xc9e5, gbc.sp());
        EXPECT(0xb77e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb77d));
        // 7A 0148
        gbc.setState(0x1c8d, 0x8c66, 0x8af0, 0x19a6, 0xf69c, 0xc576, 0x0, 0x1);
        gbc.writeMem(0x1c8d, { 0x7a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0xc5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x8c66, gbc.sp());
        EXPECT(0x1c8e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0149
        gbc.setState(0x83be, 0x8232, 0xfe80, 0xe7e8, 0xdcda, 0x8e13, 0x0, 0x0);
        gbc.writeMem(0x83be, { 0x7a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe7, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x8232, gbc.sp());
        EXPECT(0x83bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x83be));
        // 7A 014A
        gbc.setState(0xc15c, 0x8ed3, 0x31d0, 0x3bda, 0x4d34, 0xc043, 0x0, 0x0);
        gbc.writeMem(0xc15c, { 0x7a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0xda, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0x8ed3, gbc.sp());
        EXPECT(0xc15d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc15c));
        // 7A 014B
        gbc.setState(0x6a19, 0x94d0, 0x1680, 0xeb8, 0x1ddb, 0x917a, 0x1, 0x0);
        gbc.writeMem(0x6a19, { 0x7a });
        gbc.step();
        EXPECT(0x1d, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0x1d, gbc.d());
        EXPECT(0xdb, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x94d0, gbc.sp());
        EXPECT(0x6a1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 014C
        gbc.setState(0x2654, 0xf0e9, 0xc8b0, 0x859f, 0x6d32, 0x4a54, 0x0, 0x1);
        gbc.writeMem(0x2654, { 0x7a });
        gbc.step();
        EXPECT(0x6d, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x6d, gbc.d());
        EXPECT(0x32, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0xf0e9, gbc.sp());
        EXPECT(0x2655, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 014D
        gbc.setState(0x3e36, 0xbb1d, 0xfab0, 0xcfe1, 0xae79, 0xc337, 0x1, 0x0);
        gbc.writeMem(0x3e36, { 0x7a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x37, gbc.l());
        EXPECT(0xbb1d, gbc.sp());
        EXPECT(0x3e37, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 014E
        gbc.setState(0xd53b, 0x6f10, 0x37c0, 0xe6ea, 0xb551, 0xe958, 0x1, 0x0);
        gbc.writeMem(0xd53b, { 0x7a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x6f10, gbc.sp());
        EXPECT(0xd53c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd53b));
        // 7A 014F
        gbc.setState(0xab6a, 0x601d, 0x4e60, 0xeafc, 0xa5a, 0xa576, 0x1, 0x0);
        gbc.writeMem(0xab6a, { 0x7a });
        gbc.step();
        EXPECT(0xa, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xa, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0x76, gbc.l());
        EXPECT(0x601d, gbc.sp());
        EXPECT(0xab6b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xab6a));
        // 7A 0150
        gbc.setState(0x40f2, 0x6352, 0xc080, 0x4977, 0x6f49, 0x9fcb, 0x1, 0x1);
        gbc.writeMem(0x40f2, { 0x7a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x77, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xcb, gbc.l());
        EXPECT(0x6352, gbc.sp());
        EXPECT(0x40f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0151
        gbc.setState(0xec16, 0xb8b1, 0xdcb0, 0xf84, 0x173b, 0x2503, 0x1, 0x0);
        gbc.writeMem(0xec16, { 0x7a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0xb8b1, gbc.sp());
        EXPECT(0xec17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xec16));
        // 7A 0152
        gbc.setState(0xbd93, 0xf248, 0x6290, 0x7644, 0x6938, 0x511, 0x0, 0x1);
        gbc.writeMem(0xbd93, { 0x7a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xf248, gbc.sp());
        EXPECT(0xbd94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbd93));
        // 7A 0153
        gbc.setState(0x6eaf, 0xcb26, 0x48f0, 0x1730, 0xa7e9, 0x6f10, 0x1, 0x0);
        gbc.writeMem(0x6eaf, { 0x7a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x30, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x10, gbc.l());
        EXPECT(0xcb26, gbc.sp());
        EXPECT(0x6eb0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0154
        gbc.setState(0x81dc, 0x8c54, 0x3800, 0x5c32, 0x474, 0x6dcd, 0x1, 0x0);
        gbc.writeMem(0x81dc, { 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8c54, gbc.sp());
        EXPECT(0x81dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x81dc));
        // 7A 0155
        gbc.setState(0xa3a2, 0x915b, 0x1710, 0x9f76, 0x81e9, 0xd835, 0x1, 0x1);
        gbc.writeMem(0xa3a2, { 0x7a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x915b, gbc.sp());
        EXPECT(0xa3a3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa3a2));
        // 7A 0156
        gbc.setState(0x2191, 0xe973, 0x32a0, 0xd9a9, 0xdcdd, 0xcc3f, 0x0, 0x1);
        gbc.writeMem(0x2191, { 0x7a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe973, gbc.sp());
        EXPECT(0x2192, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0157
        gbc.setState(0xcd54, 0x7890, 0x8840, 0x620f, 0xc533, 0x17c4, 0x0, 0x1);
        gbc.writeMem(0xcd54, { 0x7a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x7890, gbc.sp());
        EXPECT(0xcd55, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcd54));
        // 7A 0158
        gbc.setState(0x3e85, 0xe732, 0x37e0, 0x3414, 0x6205, 0x8463, 0x0, 0x1);
        gbc.writeMem(0x3e85, { 0x7a });
        gbc.step();
        EXPECT(0x62, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x62, gbc.d());
        EXPECT(0x5, gbc.e());
        EXPECT(0x84, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xe732, gbc.sp());
        EXPECT(0x3e86, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0159
        gbc.setState(0x948c, 0x52a, 0x3b30, 0xd831, 0x9046, 0xc994, 0x1, 0x1);
        gbc.writeMem(0x948c, { 0x7a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x52a, gbc.sp());
        EXPECT(0x948d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x948c));
        // 7A 015A
        gbc.setState(0x90fd, 0x38e8, 0xec70, 0x2b94, 0x5ef7, 0x282e, 0x0, 0x1);
        gbc.writeMem(0x90fd, { 0x7a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x38e8, gbc.sp());
        EXPECT(0x90fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x90fd));
        // 7A 015B
        gbc.setState(0x5d0d, 0xa500, 0xadc0, 0x30e2, 0x319, 0x2bcf, 0x1, 0x0);
        gbc.writeMem(0x5d0d, { 0x7a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xa500, gbc.sp());
        EXPECT(0x5d0e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 015C
        gbc.setState(0xdf4c, 0x211b, 0xb550, 0xcec2, 0x2e6f, 0xf797, 0x1, 0x1);
        gbc.writeMem(0xdf4c, { 0x7a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x211b, gbc.sp());
        EXPECT(0xdf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdf4c));
        // 7A 015D
        gbc.setState(0x651c, 0xa42b, 0x1cb0, 0x461b, 0xf7b8, 0xa918, 0x0, 0x1);
        gbc.writeMem(0x651c, { 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0xa42b, gbc.sp());
        EXPECT(0x651d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 015E
        gbc.setState(0x9fae, 0xe955, 0x3ff0, 0xccd3, 0x55f5, 0xfb83, 0x0, 0x0);
        gbc.writeMem(0x9fae, { 0x7a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xe955, gbc.sp());
        EXPECT(0x9faf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9fae));
        // 7A 015F
        gbc.setState(0x1b7c, 0x57e3, 0x99d0, 0xe820, 0xed3f, 0xc439, 0x0, 0x0);
        gbc.writeMem(0x1b7c, { 0x7a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x20, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x57e3, gbc.sp());
        EXPECT(0x1b7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0160
        gbc.setState(0x6198, 0x947d, 0x8190, 0xa512, 0xbf5a, 0xdbcd, 0x0, 0x1);
        gbc.writeMem(0x6198, { 0x7a });
        gbc.step();
        EXPECT(0xbf, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xbf, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x947d, gbc.sp());
        EXPECT(0x6199, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0161
        gbc.setState(0xbbcc, 0x21e7, 0xe000, 0x1407, 0xc967, 0x8d8a, 0x1, 0x0);
        gbc.writeMem(0xbbcc, { 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x21e7, gbc.sp());
        EXPECT(0xbbcd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbbcc));
        // 7A 0162
        gbc.setState(0x6bfb, 0xd82, 0x2d50, 0xe5bd, 0x31fa, 0x5fa0, 0x0, 0x0);
        gbc.writeMem(0x6bfb, { 0x7a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0xbd, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x5f, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd82, gbc.sp());
        EXPECT(0x6bfc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0163
        gbc.setState(0xd83, 0x979, 0x3c50, 0xc1f1, 0xb452, 0x4a53, 0x1, 0x1);
        gbc.writeMem(0xd83, { 0x7a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x979, gbc.sp());
        EXPECT(0xd84, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0165
        gbc.setState(0xee92, 0x47d6, 0x9060, 0x85aa, 0xe695, 0x9357, 0x0, 0x1);
        gbc.writeMem(0xee92, { 0x7a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x47d6, gbc.sp());
        EXPECT(0xee93, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xee92));
        // 7A 0166
        gbc.setState(0x7d6f, 0xdf0a, 0xcf10, 0x32df, 0x586b, 0x8ef8, 0x1, 0x1);
        gbc.writeMem(0x7d6f, { 0x7a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xdf0a, gbc.sp());
        EXPECT(0x7d70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0167
        gbc.setState(0x96b2, 0xeb1e, 0x3a20, 0x52cf, 0x9742, 0x6433, 0x1, 0x1);
        gbc.writeMem(0x96b2, { 0x7a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0xeb1e, gbc.sp());
        EXPECT(0x96b3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x96b2));
        // 7A 0168
        gbc.setState(0x2a16, 0x9815, 0x67f0, 0x201e, 0xe8d6, 0xa4c3, 0x0, 0x1);
        gbc.writeMem(0x2a16, { 0x7a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x1e, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x9815, gbc.sp());
        EXPECT(0x2a17, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0169
        gbc.setState(0x5bb9, 0x9a02, 0xfb40, 0x7907, 0xb94f, 0x2e5d, 0x1, 0x0);
        gbc.writeMem(0x5bb9, { 0x7a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x4f, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x9a02, gbc.sp());
        EXPECT(0x5bba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 016A
        gbc.setState(0xbb63, 0x119e, 0xb3b0, 0xb2dd, 0x807b, 0x4196, 0x1, 0x0);
        gbc.writeMem(0xbb63, { 0x7a });
        gbc.step();
        EXPECT(0x80, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xdd, gbc.c());
        EXPECT(0x80, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x119e, gbc.sp());
        EXPECT(0xbb64, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbb63));
        // 7A 016B
        gbc.setState(0x6e9f, 0xc095, 0x1650, 0x717f, 0xa3df, 0x9abf, 0x1, 0x0);
        gbc.writeMem(0x6e9f, { 0x7a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0x7f, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xc095, gbc.sp());
        EXPECT(0x6ea0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 016C
        gbc.setState(0x273f, 0xba88, 0x7270, 0xcfe2, 0x4401, 0xea78, 0x0, 0x0);
        gbc.writeMem(0x273f, { 0x7a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0xcf, gbc.b());
        EXPECT(0xe2, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xba88, gbc.sp());
        EXPECT(0x2740, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 016D
        gbc.setState(0x2ef9, 0x7031, 0xb350, 0x5605, 0x36dc, 0xd71b, 0x1, 0x1);
        gbc.writeMem(0x2ef9, { 0x7a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0x56, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0x7031, gbc.sp());
        EXPECT(0x2efa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 016E
        gbc.setState(0x96f2, 0xf23b, 0xea30, 0x33c, 0x2e30, 0x7cb9, 0x1, 0x1);
        gbc.writeMem(0x96f2, { 0x7a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xf23b, gbc.sp());
        EXPECT(0x96f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x96f2));
        // 7A 016F
        gbc.setState(0xd0a8, 0xf00, 0xc380, 0xee02, 0x5f1b, 0x3716, 0x1, 0x1);
        gbc.writeMem(0xd0a8, { 0x7a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xf00, gbc.sp());
        EXPECT(0xd0a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd0a8));
        // 7A 0170
        gbc.setState(0x5a55, 0x1749, 0x49c0, 0xc8c5, 0xda95, 0x88fe, 0x0, 0x0);
        gbc.writeMem(0x5a55, { 0x7a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xc5, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x1749, gbc.sp());
        EXPECT(0x5a56, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0171
        gbc.setState(0xeb18, 0xd6b4, 0xba40, 0xa164, 0xe428, 0x41c7, 0x0, 0x0);
        gbc.writeMem(0xeb18, { 0x7a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xd6b4, gbc.sp());
        EXPECT(0xeb19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xeb18));
        // 7A 0172
        gbc.setState(0x27b9, 0xa03c, 0x64e0, 0xc826, 0x6fb3, 0xc2b5, 0x1, 0x1);
        gbc.writeMem(0x27b9, { 0x7a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0xa03c, gbc.sp());
        EXPECT(0x27ba, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0173
        gbc.setState(0x93a5, 0xa648, 0x2280, 0xcb86, 0xdfb, 0xf6a7, 0x1, 0x1);
        gbc.writeMem(0x93a5, { 0x7a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xcb, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xa648, gbc.sp());
        EXPECT(0x93a6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x93a5));
        // 7A 0174
        gbc.setState(0xbcc4, 0x3a14, 0x28e0, 0x4ce0, 0x6131, 0x4e33, 0x1, 0x0);
        gbc.writeMem(0xbcc4, { 0x7a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3a14, gbc.sp());
        EXPECT(0xbcc5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbcc4));
        // 7A 0175
        gbc.setState(0x2a, 0x91b6, 0x3d60, 0xcdf, 0x26f3, 0xb155, 0x0, 0x0);
        gbc.writeMem(0x2a, { 0x7a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x91b6, gbc.sp());
        EXPECT(0x2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0176
        gbc.setState(0xb331, 0x3ae7, 0x1000, 0x5c3b, 0x7935, 0xde44, 0x0, 0x0);
        gbc.writeMem(0xb331, { 0x7a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x3ae7, gbc.sp());
        EXPECT(0xb332, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb331));
        // 7A 0177
        gbc.setState(0x8e0f, 0x41af, 0x1a30, 0xcd55, 0xffbb, 0x653f, 0x0, 0x0);
        gbc.writeMem(0x8e0f, { 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x41af, gbc.sp());
        EXPECT(0x8e10, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8e0f));
        // 7A 0178
        gbc.setState(0xbe35, 0x413e, 0x810, 0x8c4f, 0x5cec, 0xfba8, 0x0, 0x1);
        gbc.writeMem(0xbe35, { 0x7a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xec, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x413e, gbc.sp());
        EXPECT(0xbe36, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbe35));
        // 7A 0179
        gbc.setState(0x3a7e, 0x8b79, 0x8ff0, 0x5fae, 0x8977, 0x8c72, 0x1, 0x0);
        gbc.writeMem(0x3a7e, { 0x7a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8b79, gbc.sp());
        EXPECT(0x3a7f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 017A
        gbc.setState(0x5f94, 0x6598, 0xafe0, 0x3d4c, 0x4c28, 0x4d28, 0x1, 0x1);
        gbc.writeMem(0x5f94, { 0x7a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0x4d, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x6598, gbc.sp());
        EXPECT(0x5f95, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 017B
        gbc.setState(0x6be, 0xea30, 0x6bc0, 0xa6fb, 0xa1cb, 0xe8bf, 0x0, 0x1);
        gbc.writeMem(0x6be, { 0x7a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xea30, gbc.sp());
        EXPECT(0x6bf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 017C
        gbc.setState(0x2d93, 0x1588, 0x6220, 0x36a0, 0xaf7c, 0x449, 0x0, 0x0);
        gbc.writeMem(0x2d93, { 0x7a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x4, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x1588, gbc.sp());
        EXPECT(0x2d94, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 017D
        gbc.setState(0xb829, 0xa48b, 0xe100, 0xa66c, 0x1f90, 0x606a, 0x1, 0x0);
        gbc.writeMem(0xb829, { 0x7a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0xa48b, gbc.sp());
        EXPECT(0xb82a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb829));
        // 7A 017E
        gbc.setState(0x465b, 0x18de, 0xef70, 0x6761, 0x93dc, 0xf3e2, 0x1, 0x0);
        gbc.writeMem(0x465b, { 0x7a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x61, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x18de, gbc.sp());
        EXPECT(0x465c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 017F
        gbc.setState(0x5ec2, 0xd34a, 0xaca0, 0x5832, 0x84d9, 0x4f81, 0x0, 0x0);
        gbc.writeMem(0x5ec2, { 0x7a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xd34a, gbc.sp());
        EXPECT(0x5ec3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0180
        gbc.setState(0xd71d, 0x94f5, 0xfa0, 0x10f8, 0xae4d, 0x6018, 0x1, 0x0);
        gbc.writeMem(0xd71d, { 0x7a });
        gbc.step();
        EXPECT(0xae, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf8, gbc.c());
        EXPECT(0xae, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x60, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x94f5, gbc.sp());
        EXPECT(0xd71e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd71d));
        // 7A 0181
        gbc.setState(0x4338, 0x3f9e, 0x7a60, 0xe23a, 0xdc58, 0xa12f, 0x0, 0x1);
        gbc.writeMem(0x4338, { 0x7a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x3f9e, gbc.sp());
        EXPECT(0x4339, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0182
        gbc.setState(0x6c05, 0x4e92, 0x38b0, 0x7c8d, 0xf249, 0x7534, 0x0, 0x1);
        gbc.writeMem(0x6c05, { 0x7a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0x4e92, gbc.sp());
        EXPECT(0x6c06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0183
        gbc.setState(0xb341, 0x22fa, 0xba80, 0x65bc, 0xd792, 0xf1da, 0x0, 0x1);
        gbc.writeMem(0xb341, { 0x7a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0x22fa, gbc.sp());
        EXPECT(0xb342, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb341));
        // 7A 0184
        gbc.setState(0xc959, 0x8d0a, 0x77d0, 0x9440, 0xd5ee, 0xc09e, 0x1, 0x0);
        gbc.writeMem(0xc959, { 0x7a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x8d0a, gbc.sp());
        EXPECT(0xc95a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc959));
        // 7A 0185
        gbc.setState(0xa258, 0x2b7f, 0x6e40, 0x176c, 0x5fa, 0xfe79, 0x1, 0x1);
        gbc.writeMem(0xa258, { 0x7a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x6c, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x79, gbc.l());
        EXPECT(0x2b7f, gbc.sp());
        EXPECT(0xa259, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa258));
        // 7A 0186
        gbc.setState(0x5552, 0xb3e, 0x3230, 0xfd93, 0x9c6a, 0xf61b, 0x0, 0x1);
        gbc.writeMem(0x5552, { 0x7a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xfd, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x6a, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x1b, gbc.l());
        EXPECT(0xb3e, gbc.sp());
        EXPECT(0x5553, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0188
        gbc.setState(0x1b05, 0x4bec, 0xb270, 0x94a2, 0xe28f, 0xaa8c, 0x0, 0x0);
        gbc.writeMem(0x1b05, { 0x7a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x4bec, gbc.sp());
        EXPECT(0x1b06, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0189
        gbc.setState(0x9fd6, 0x777e, 0x5850, 0xc42, 0x26b0, 0xc4e5, 0x0, 0x1);
        gbc.writeMem(0x9fd6, { 0x7a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x777e, gbc.sp());
        EXPECT(0x9fd7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9fd6));
        // 7A 018A
        gbc.setState(0x1628, 0x9fb5, 0x9ee0, 0x4f9b, 0x78c4, 0x5516, 0x1, 0x0);
        gbc.writeMem(0x1628, { 0x7a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x4f, gbc.b());
        EXPECT(0x9b, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x55, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x9fb5, gbc.sp());
        EXPECT(0x1629, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 018B
        gbc.setState(0x8fef, 0x4072, 0x2f50, 0x968, 0x6a7d, 0xbd6e, 0x1, 0x0);
        gbc.writeMem(0x8fef, { 0x7a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0x4072, gbc.sp());
        EXPECT(0x8ff0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8fef));
        // 7A 018C
        gbc.setState(0x84e7, 0xe706, 0x4b60, 0x71d6, 0xef8f, 0x4af1, 0x0, 0x1);
        gbc.writeMem(0x84e7, { 0x7a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0xe706, gbc.sp());
        EXPECT(0x84e8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x84e7));
        // 7A 018D
        gbc.setState(0x255, 0x7b97, 0x99a0, 0x6314, 0x5b94, 0xf014, 0x1, 0x1);
        gbc.writeMem(0x255, { 0x7a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x14, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x7b97, gbc.sp());
        EXPECT(0x256, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 018E
        gbc.setState(0xc8ce, 0x68df, 0x1490, 0xcac0, 0xc556, 0xd761, 0x0, 0x1);
        gbc.writeMem(0xc8ce, { 0x7a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x68df, gbc.sp());
        EXPECT(0xc8cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc8ce));
        // 7A 018F
        gbc.setState(0x37ab, 0x31f3, 0x23f0, 0xe3de, 0xffe6, 0x331e, 0x0, 0x1);
        gbc.writeMem(0x37ab, { 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x31f3, gbc.sp());
        EXPECT(0x37ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0190
        gbc.setState(0xc77, 0x135c, 0x7a0, 0x1731, 0x8996, 0xd30e, 0x0, 0x1);
        gbc.writeMem(0xc77, { 0x7a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x17, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x135c, gbc.sp());
        EXPECT(0xc78, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0191
        gbc.setState(0x5ac9, 0x102, 0xffe0, 0xb45d, 0x6659, 0xb5cf, 0x1, 0x1);
        gbc.writeMem(0x5ac9, { 0x7a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0x102, gbc.sp());
        EXPECT(0x5aca, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0192
        gbc.setState(0x9aab, 0xb8c3, 0x2ec0, 0x6aa3, 0x54a7, 0xb409, 0x1, 0x1);
        gbc.writeMem(0x9aab, { 0x7a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0xb8c3, gbc.sp());
        EXPECT(0x9aac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9aab));
        // 7A 0193
        gbc.setState(0x53d5, 0x7408, 0x4ca0, 0xae52, 0xf968, 0xe873, 0x1, 0x1);
        gbc.writeMem(0x53d5, { 0x7a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x68, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x7408, gbc.sp());
        EXPECT(0x53d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0194
        gbc.setState(0xb1fb, 0x8f45, 0xc2f0, 0x3f24, 0xb819, 0x83a6, 0x0, 0x0);
        gbc.writeMem(0xb1fb, { 0x7a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x19, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x8f45, gbc.sp());
        EXPECT(0xb1fc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb1fb));
        // 7A 0195
        gbc.setState(0x6251, 0x84b0, 0x1750, 0xda02, 0x3e5f, 0xfdbe, 0x1, 0x0);
        gbc.writeMem(0x6251, { 0x7a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xbe, gbc.l());
        EXPECT(0x84b0, gbc.sp());
        EXPECT(0x6252, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0196
        gbc.setState(0xb3ee, 0x38e2, 0x12d0, 0x5fed, 0xa639, 0x6b52, 0x1, 0x1);
        gbc.writeMem(0xb3ee, { 0x7a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x38e2, gbc.sp());
        EXPECT(0xb3ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb3ee));
        // 7A 0197
        gbc.setState(0x7129, 0x38ac, 0x610, 0xd13f, 0x2853, 0x540, 0x1, 0x1);
        gbc.writeMem(0x7129, { 0x7a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0x38ac, gbc.sp());
        EXPECT(0x712a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0198
        gbc.setState(0xd4fc, 0xd875, 0x6190, 0x4c5c, 0x225, 0x66ab, 0x0, 0x1);
        gbc.writeMem(0xd4fc, { 0x7a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xd875, gbc.sp());
        EXPECT(0xd4fd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd4fc));
        // 7A 0199
        gbc.setState(0x5406, 0x957d, 0x59a0, 0x31b5, 0x4502, 0x6adf, 0x0, 0x1);
        gbc.writeMem(0x5406, { 0x7a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0xdf, gbc.l());
        EXPECT(0x957d, gbc.sp());
        EXPECT(0x5407, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 019A
        gbc.setState(0xb087, 0xdaba, 0xe5e0, 0xc9d9, 0xf0a1, 0x859, 0x1, 0x0);
        gbc.writeMem(0xb087, { 0x7a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x8, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xdaba, gbc.sp());
        EXPECT(0xb088, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb087));
        // 7A 019B
        gbc.setState(0xe4e4, 0xb05a, 0x84c0, 0x2a6f, 0xa747, 0x74b0, 0x1, 0x0);
        gbc.writeMem(0xe4e4, { 0x7a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xb05a, gbc.sp());
        EXPECT(0xe4e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe4e4));
        // 7A 019C
        gbc.setState(0x6c5, 0x172e, 0xc480, 0x41a7, 0x5545, 0x14b5, 0x1, 0x1);
        gbc.writeMem(0x6c5, { 0x7a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x41, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0xb5, gbc.l());
        EXPECT(0x172e, gbc.sp());
        EXPECT(0x6c6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 019D
        gbc.setState(0xbce, 0x8059, 0xd5e0, 0xa54, 0xafce, 0xdb15, 0x1, 0x0);
        gbc.writeMem(0xbce, { 0x7a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8059, gbc.sp());
        EXPECT(0xbcf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 019E
        gbc.setState(0xe65, 0xb1d4, 0x970, 0x45f4, 0x8d53, 0xad0c, 0x0, 0x1);
        gbc.writeMem(0xe65, { 0x7a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0xb1d4, gbc.sp());
        EXPECT(0xe66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 019F
        gbc.setState(0x1b45, 0xae9c, 0xec40, 0xb210, 0xd8e6, 0x565f, 0x1, 0x0);
        gbc.writeMem(0x1b45, { 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0xae9c, gbc.sp());
        EXPECT(0x1b46, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01A0
        gbc.setState(0xd9ee, 0x57a1, 0xee40, 0x5238, 0x50c7, 0x87e0, 0x1, 0x0);
        gbc.writeMem(0xd9ee, { 0x7a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x87, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x57a1, gbc.sp());
        EXPECT(0xd9ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd9ee));
        // 7A 01A1
        gbc.setState(0x9d59, 0x41e6, 0x9d90, 0xe3be, 0x6aa1, 0xa128, 0x0, 0x1);
        gbc.writeMem(0x9d59, { 0x7a });
        gbc.step();
        EXPECT(0x6a, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0x6a, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x41e6, gbc.sp());
        EXPECT(0x9d5a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9d59));
        // 7A 01A2
        gbc.setState(0xbb37, 0x687f, 0xad20, 0x2fdf, 0x90aa, 0xe299, 0x1, 0x1);
        gbc.writeMem(0xbb37, { 0x7a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xdf, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0x687f, gbc.sp());
        EXPECT(0xbb38, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbb37));
        // 7A 01A3
        gbc.setState(0xaf22, 0xca9, 0xb6e0, 0x77ed, 0xda94, 0x85e0, 0x1, 0x0);
        gbc.writeMem(0xaf22, { 0x7a });
        gbc.step();
        EXPECT(0xda, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0xda, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xca9, gbc.sp());
        EXPECT(0xaf23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xaf22));
        // 7A 01A4
        gbc.setState(0xb00e, 0x921a, 0x18f0, 0x2c98, 0x5b88, 0xa12e, 0x0, 0x1);
        gbc.writeMem(0xb00e, { 0x7a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x2c, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0x921a, gbc.sp());
        EXPECT(0xb00f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb00e));
        // 7A 01A5
        gbc.setState(0x455c, 0x989b, 0x8bd0, 0x8a5, 0x6317, 0x2895, 0x0, 0x0);
        gbc.writeMem(0x455c, { 0x7a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0x989b, gbc.sp());
        EXPECT(0x455d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01A6
        gbc.setState(0xdc97, 0xdbb4, 0xe8b0, 0xce3, 0x8402, 0xc7ec, 0x1, 0x1);
        gbc.writeMem(0xdc97, { 0x7a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xdbb4, gbc.sp());
        EXPECT(0xdc98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdc97));
        // 7A 01A7
        gbc.setState(0x6325, 0xa712, 0xbe60, 0xd87a, 0x16dd, 0x9875, 0x1, 0x0);
        gbc.writeMem(0x6325, { 0x7a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xa712, gbc.sp());
        EXPECT(0x6326, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01A8
        gbc.setState(0x47e, 0x8f51, 0x5f70, 0xd8a7, 0x2b96, 0x1cfd, 0x0, 0x1);
        gbc.writeMem(0x47e, { 0x7a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xd8, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x8f51, gbc.sp());
        EXPECT(0x47f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01A9
        gbc.setState(0x5e3, 0x2b22, 0xf370, 0x31f4, 0x4ca, 0x4618, 0x1, 0x0);
        gbc.writeMem(0x5e3, { 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x2b22, gbc.sp());
        EXPECT(0x5e4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01AA
        gbc.setState(0x28c0, 0x2da5, 0xfac0, 0xfa96, 0x1257, 0x345f, 0x1, 0x0);
        gbc.writeMem(0x28c0, { 0x7a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0x57, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x2da5, gbc.sp());
        EXPECT(0x28c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01AB
        gbc.setState(0x5209, 0xc543, 0xece0, 0x9f17, 0x9723, 0xdef2, 0x0, 0x1);
        gbc.writeMem(0x5209, { 0x7a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xf2, gbc.l());
        EXPECT(0xc543, gbc.sp());
        EXPECT(0x520a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01AC
        gbc.setState(0xada0, 0x19f4, 0x57e0, 0x10f0, 0x40b6, 0x4986, 0x0, 0x0);
        gbc.writeMem(0xada0, { 0x7a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x19f4, gbc.sp());
        EXPECT(0xada1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xada0));
        // 7A 01AD
        gbc.setState(0x6c1b, 0x81c8, 0x2620, 0x283, 0x5988, 0xbba6, 0x0, 0x1);
        gbc.writeMem(0x6c1b, { 0x7a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0x81c8, gbc.sp());
        EXPECT(0x6c1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01AE
        gbc.setState(0xb84d, 0x6e9d, 0xf5b0, 0x8637, 0x1ba8, 0x6b08, 0x1, 0x0);
        gbc.writeMem(0xb84d, { 0x7a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xa8, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0x6e9d, gbc.sp());
        EXPECT(0xb84e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb84d));
        // 7A 01AF
        gbc.setState(0x3a4f, 0x796f, 0x5e00, 0xc5e4, 0xa792, 0x5423, 0x0, 0x1);
        gbc.writeMem(0x3a4f, { 0x7a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xc5, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x796f, gbc.sp());
        EXPECT(0x3a50, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01B0
        gbc.setState(0xda04, 0xc6fa, 0x9280, 0xcddb, 0x573e, 0xb29f, 0x0, 0x1);
        gbc.writeMem(0xda04, { 0x7a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc6fa, gbc.sp());
        EXPECT(0xda05, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xda04));
        // 7A 01B1
        gbc.setState(0xc01a, 0xb869, 0x9d10, 0x9084, 0xf0c0, 0x3f53, 0x1, 0x1);
        gbc.writeMem(0xc01a, { 0x7a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb869, gbc.sp());
        EXPECT(0xc01b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc01a));
        // 7A 01B2
        gbc.setState(0x7b14, 0xa48e, 0x1280, 0xf86b, 0x4284, 0xfeac, 0x0, 0x0);
        gbc.writeMem(0x7b14, { 0x7a });
        gbc.step();
        EXPECT(0x42, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0x42, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xac, gbc.l());
        EXPECT(0xa48e, gbc.sp());
        EXPECT(0x7b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01B3
        gbc.setState(0x374b, 0x9b70, 0xa460, 0x211, 0xec5d, 0x4423, 0x0, 0x0);
        gbc.writeMem(0x374b, { 0x7a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x5d, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x9b70, gbc.sp());
        EXPECT(0x374c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01B4
        gbc.setState(0xed7f, 0xa823, 0x5ba0, 0xb1fa, 0xf8c, 0xc35e, 0x1, 0x0);
        gbc.writeMem(0xed7f, { 0x7a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0xa823, gbc.sp());
        EXPECT(0xed80, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xed7f));
        // 7A 01B5
        gbc.setState(0x3dca, 0xa705, 0x7de0, 0x77f1, 0xa328, 0xdfb2, 0x1, 0x0);
        gbc.writeMem(0x3dca, { 0x7a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x28, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xb2, gbc.l());
        EXPECT(0xa705, gbc.sp());
        EXPECT(0x3dcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01B6
        gbc.setState(0x2798, 0xa195, 0x8c30, 0x804e, 0x3d13, 0x3f97, 0x1, 0x1);
        gbc.writeMem(0x2798, { 0x7a });
        gbc.step();
        EXPECT(0x3d, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x3d, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0xa195, gbc.sp());
        EXPECT(0x2799, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01B7
        gbc.setState(0xd7d6, 0xc53e, 0xee30, 0x7a3b, 0x200a, 0x23c2, 0x1, 0x1);
        gbc.writeMem(0xd7d6, { 0x7a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xc53e, gbc.sp());
        EXPECT(0xd7d7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd7d6));
        // 7A 01B8
        gbc.setState(0xc6f8, 0x4f14, 0xc970, 0xde17, 0x1748, 0x5261, 0x0, 0x0);
        gbc.writeMem(0xc6f8, { 0x7a });
        gbc.step();
        EXPECT(0x17, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x17, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x4f14, gbc.sp());
        EXPECT(0xc6f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc6f8));
        // 7A 01B9
        gbc.setState(0xe14f, 0x485, 0xaf10, 0x221b, 0xb1a3, 0x7a54, 0x1, 0x1);
        gbc.writeMem(0xe14f, { 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x485, gbc.sp());
        EXPECT(0xe150, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe14f));
        // 7A 01BA
        gbc.setState(0xe9e9, 0xe1f1, 0xf330, 0xe065, 0xdb76, 0x1a7a, 0x1, 0x1);
        gbc.writeMem(0xe9e9, { 0x7a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x1a, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0xe1f1, gbc.sp());
        EXPECT(0xe9ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe9e9));
        // 7A 01BB
        gbc.setState(0xa33, 0xe23, 0x53e0, 0x456d, 0xfb0e, 0xaa7e, 0x1, 0x1);
        gbc.writeMem(0xa33, { 0x7a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x7e, gbc.l());
        EXPECT(0xe23, gbc.sp());
        EXPECT(0xa34, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01BC
        gbc.setState(0xc51d, 0x4a49, 0xaf60, 0xe3, 0xaf59, 0xae0d, 0x0, 0x0);
        gbc.writeMem(0xc51d, { 0x7a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x0, gbc.b());
        EXPECT(0xe3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x59, gbc.e());
        EXPECT(0xae, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0x4a49, gbc.sp());
        EXPECT(0xc51e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc51d));
        // 7A 01BD
        gbc.setState(0xeefa, 0xbed5, 0xa390, 0x2637, 0xe2c4, 0xf3db, 0x1, 0x1);
        gbc.writeMem(0xeefa, { 0x7a });
        gbc.step();
        EXPECT(0xe2, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0xe2, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xdb, gbc.l());
        EXPECT(0xbed5, gbc.sp());
        EXPECT(0xeefb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xeefa));
        // 7A 01BE
        gbc.setState(0x4887, 0x9e7d, 0x3b30, 0xfca4, 0x5dc7, 0xa662, 0x1, 0x1);
        gbc.writeMem(0x4887, { 0x7a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x9e7d, gbc.sp());
        EXPECT(0x4888, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01BF
        gbc.setState(0x535f, 0xcbf7, 0x7530, 0xe0c3, 0xb367, 0xfd06, 0x1, 0x0);
        gbc.writeMem(0x535f, { 0x7a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xc3, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0xcbf7, gbc.sp());
        EXPECT(0x5360, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01C0
        gbc.setState(0x93de, 0x7db, 0x82d0, 0xd6b6, 0x6866, 0x2204, 0x0, 0x0);
        gbc.writeMem(0x93de, { 0x7a });
        gbc.step();
        EXPECT(0x68, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x68, gbc.d());
        EXPECT(0x66, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0x7db, gbc.sp());
        EXPECT(0x93df, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x93de));
        // 7A 01C1
        gbc.setState(0x86df, 0x67a4, 0x23d0, 0x79d4, 0xfe4d, 0x221e, 0x1, 0x0);
        gbc.writeMem(0x86df, { 0x7a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x67a4, gbc.sp());
        EXPECT(0x86e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x86df));
        // 7A 01C2
        gbc.setState(0x90d9, 0x8dc1, 0xa840, 0x98a6, 0x58c5, 0xc96c, 0x1, 0x0);
        gbc.writeMem(0x90d9, { 0x7a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0x8dc1, gbc.sp());
        EXPECT(0x90da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x90d9));
        // 7A 01C3
        gbc.setState(0xd836, 0x47b4, 0x6110, 0xbb29, 0x3888, 0xde50, 0x1, 0x1);
        gbc.writeMem(0xd836, { 0x7a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x47b4, gbc.sp());
        EXPECT(0xd837, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd836));
        // 7A 01C4
        gbc.setState(0x1288, 0x1389, 0xb4a0, 0x91a7, 0xa03c, 0x4f0c, 0x0, 0x1);
        gbc.writeMem(0x1288, { 0x7a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xc, gbc.l());
        EXPECT(0x1389, gbc.sp());
        EXPECT(0x1289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01C5
        gbc.setState(0x78ab, 0x102f, 0xe080, 0xbdea, 0x5125, 0xdec7, 0x0, 0x0);
        gbc.writeMem(0x78ab, { 0x7a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x102f, gbc.sp());
        EXPECT(0x78ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01C6
        gbc.setState(0x91c1, 0xca02, 0x7e20, 0x3b5d, 0x423, 0x9596, 0x0, 0x1);
        gbc.writeMem(0x91c1, { 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x23, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0xca02, gbc.sp());
        EXPECT(0x91c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x91c1));
        // 7A 01C7
        gbc.setState(0x8559, 0xb820, 0x1960, 0xa390, 0x523e, 0xc2a2, 0x0, 0x1);
        gbc.writeMem(0x8559, { 0x7a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0xa3, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0x3e, gbc.e());
        EXPECT(0xc2, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xb820, gbc.sp());
        EXPECT(0x855a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8559));
        // 7A 01C8
        gbc.setState(0xd0bb, 0x5af6, 0x1650, 0xb069, 0xddba, 0xf470, 0x0, 0x0);
        gbc.writeMem(0xd0bb, { 0x7a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xb0, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x5af6, gbc.sp());
        EXPECT(0xd0bc, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd0bb));
        // 7A 01C9
        gbc.setState(0x3df3, 0x281f, 0xc1b0, 0x34af, 0x67ef, 0xeecc, 0x1, 0x1);
        gbc.writeMem(0x3df3, { 0x7a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0xef, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x281f, gbc.sp());
        EXPECT(0x3df4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01CA
        gbc.setState(0x4f00, 0x31de, 0xa4e0, 0xeacc, 0x79f, 0xf2c7, 0x0, 0x0);
        gbc.writeMem(0x4f00, { 0x7a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x31de, gbc.sp());
        EXPECT(0x4f01, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01CB
        gbc.setState(0x4518, 0x778e, 0x7ef0, 0xc0b, 0x7c2d, 0x8e4d, 0x1, 0x1);
        gbc.writeMem(0x4518, { 0x7a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x8e, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x778e, gbc.sp());
        EXPECT(0x4519, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01CC
        gbc.setState(0x57c0, 0x6b9f, 0xc200, 0x63b, 0x39c4, 0xd577, 0x1, 0x1);
        gbc.writeMem(0x57c0, { 0x7a });
        gbc.step();
        EXPECT(0x39, gbc.a());
        EXPECT(0x6, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0x39, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x6b9f, gbc.sp());
        EXPECT(0x57c1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01CD
        gbc.setState(0xe45b, 0xbc30, 0xe4e0, 0x1aa8, 0xbcf5, 0x6c4f, 0x0, 0x1);
        gbc.writeMem(0xe45b, { 0x7a });
        gbc.step();
        EXPECT(0xbc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xbc, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xbc30, gbc.sp());
        EXPECT(0xe45c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe45b));
        // 7A 01CE
        gbc.setState(0x69e4, 0xce5, 0xaef0, 0xebd0, 0xe31f, 0xffec, 0x1, 0x1);
        gbc.writeMem(0x69e4, { 0x7a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xeb, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x1f, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0xce5, gbc.sp());
        EXPECT(0x69e5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01CF
        gbc.setState(0xcccc, 0x9556, 0x5f20, 0x5aab, 0xc8cf, 0xeec6, 0x0, 0x1);
        gbc.writeMem(0xcccc, { 0x7a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xab, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0xee, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x9556, gbc.sp());
        EXPECT(0xcccd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcccc));
        // 7A 01D0
        gbc.setState(0x6e0f, 0x6aa3, 0xa280, 0xe94, 0xf721, 0x3d5, 0x1, 0x1);
        gbc.writeMem(0x6e0f, { 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x3, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x6aa3, gbc.sp());
        EXPECT(0x6e10, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01D1
        gbc.setState(0xc503, 0xcd23, 0x1e90, 0x60f7, 0x9e0c, 0xfa6f, 0x1, 0x0);
        gbc.writeMem(0xc503, { 0x7a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xcd23, gbc.sp());
        EXPECT(0xc504, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc503));
        // 7A 01D2
        gbc.setState(0x47c8, 0x7b5a, 0x57e0, 0x7c13, 0xdced, 0x50f, 0x1, 0x0);
        gbc.writeMem(0x47c8, { 0x7a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x7b5a, gbc.sp());
        EXPECT(0x47c9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01D3
        gbc.setState(0x9424, 0x2a27, 0xe850, 0x1229, 0x277c, 0x5a14, 0x1, 0x1);
        gbc.writeMem(0x9424, { 0x7a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x12, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2a27, gbc.sp());
        EXPECT(0x9425, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9424));
        // 7A 01D4
        gbc.setState(0xc7ce, 0xa4fb, 0xdec0, 0xfa18, 0x1c3c, 0x3784, 0x0, 0x0);
        gbc.writeMem(0xc7ce, { 0x7a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x84, gbc.l());
        EXPECT(0xa4fb, gbc.sp());
        EXPECT(0xc7cf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc7ce));
        // 7A 01D5
        gbc.setState(0xa10b, 0x58e2, 0x7a0, 0xeabb, 0x2848, 0x1fb4, 0x1, 0x0);
        gbc.writeMem(0xa10b, { 0x7a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0x48, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0x58e2, gbc.sp());
        EXPECT(0xa10c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa10b));
        // 7A 01D6
        gbc.setState(0x244d, 0xb1cc, 0x1ae0, 0x673e, 0x9f80, 0xa044, 0x1, 0x1);
        gbc.writeMem(0x244d, { 0x7a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xb1cc, gbc.sp());
        EXPECT(0x244e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01D7
        gbc.setState(0x72dc, 0x8c8b, 0x4c10, 0x380d, 0xc69d, 0x3467, 0x0, 0x0);
        gbc.writeMem(0x72dc, { 0x7a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x8c8b, gbc.sp());
        EXPECT(0x72dd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01D8
        gbc.setState(0xc7a1, 0x1996, 0x5310, 0xda87, 0xcca9, 0x9ead, 0x1, 0x1);
        gbc.writeMem(0xc7a1, { 0x7a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0x1996, gbc.sp());
        EXPECT(0xc7a2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc7a1));
        // 7A 01DA
        gbc.setState(0x33ce, 0xa337, 0x6880, 0x304f, 0x9461, 0xc42a, 0x1, 0x1);
        gbc.writeMem(0x33ce, { 0x7a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0xa337, gbc.sp());
        EXPECT(0x33cf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01DC
        gbc.setState(0xdccd, 0xa29b, 0xbe20, 0xe097, 0x6e84, 0x82da, 0x0, 0x0);
        gbc.writeMem(0xdccd, { 0x7a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xda, gbc.l());
        EXPECT(0xa29b, gbc.sp());
        EXPECT(0xdcce, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdccd));
        // 7A 01DD
        gbc.setState(0x8ff1, 0x91f5, 0x9720, 0xa53b, 0xd285, 0xa636, 0x1, 0x1);
        gbc.writeMem(0x8ff1, { 0x7a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x3b, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xa6, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x91f5, gbc.sp());
        EXPECT(0x8ff2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8ff1));
        // 7A 01DE
        gbc.setState(0x978e, 0x1c4e, 0x7440, 0x6974, 0x8ffe, 0xd714, 0x0, 0x1);
        gbc.writeMem(0x978e, { 0x7a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x1c4e, gbc.sp());
        EXPECT(0x978f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x978e));
        // 7A 01DF
        gbc.setState(0x36e5, 0x74, 0x850, 0x6288, 0xbbed, 0x6733, 0x1, 0x0);
        gbc.writeMem(0x36e5, { 0x7a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x74, gbc.sp());
        EXPECT(0x36e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01E0
        gbc.setState(0xda17, 0x9092, 0xba0, 0x9270, 0xdd26, 0x5dff, 0x0, 0x0);
        gbc.writeMem(0xda17, { 0x7a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9092, gbc.sp());
        EXPECT(0xda18, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xda17));
        // 7A 01E1
        gbc.setState(0x48a, 0xa60, 0x7e50, 0xb571, 0x58c4, 0xdc0b, 0x1, 0x0);
        gbc.writeMem(0x48a, { 0x7a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xa60, gbc.sp());
        EXPECT(0x48b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01E2
        gbc.setState(0x23f4, 0xd0ba, 0xb360, 0x184a, 0x9f77, 0x6fad, 0x1, 0x0);
        gbc.writeMem(0x23f4, { 0x7a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x18, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xad, gbc.l());
        EXPECT(0xd0ba, gbc.sp());
        EXPECT(0x23f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01E3
        gbc.setState(0x7637, 0x47cf, 0xbb70, 0xaf5, 0x71a, 0x2a47, 0x0, 0x0);
        gbc.writeMem(0x7637, { 0x7a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x2a, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0x47cf, gbc.sp());
        EXPECT(0x7638, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01E4
        gbc.setState(0x76ae, 0x45c4, 0x6bc0, 0xb30d, 0xfcdd, 0xf3fb, 0x0, 0x0);
        gbc.writeMem(0x76ae, { 0x7a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x45c4, gbc.sp());
        EXPECT(0x76af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01E5
        gbc.setState(0xb881, 0x1f2f, 0x11c0, 0x25b6, 0xc07c, 0x293c, 0x1, 0x1);
        gbc.writeMem(0xb881, { 0x7a });
        gbc.step();
        EXPECT(0xc0, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0xc0, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x1f2f, gbc.sp());
        EXPECT(0xb882, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb881));
        // 7A 01E6
        gbc.setState(0xec92, 0x294c, 0x6250, 0x4acf, 0x1c25, 0xb2e0, 0x1, 0x0);
        gbc.writeMem(0xec92, { 0x7a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xcf, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x294c, gbc.sp());
        EXPECT(0xec93, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xec92));
        // 7A 01E7
        gbc.setState(0x858e, 0x9c5c, 0x8350, 0x79cb, 0x9935, 0x6b4b, 0x0, 0x0);
        gbc.writeMem(0x858e, { 0x7a });
        gbc.step();
        EXPECT(0x99, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0x99, gbc.d());
        EXPECT(0x35, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x9c5c, gbc.sp());
        EXPECT(0x858f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x858e));
        // 7A 01E8
        gbc.setState(0xd16c, 0xbffa, 0x9360, 0x8cd0, 0xf207, 0xeccc, 0x1, 0x0);
        gbc.writeMem(0xd16c, { 0x7a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xbffa, gbc.sp());
        EXPECT(0xd16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd16c));
        // 7A 01E9
        gbc.setState(0xad6b, 0x8cac, 0xfad0, 0xeebb, 0xb501, 0xbb56, 0x0, 0x0);
        gbc.writeMem(0xad6b, { 0x7a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0xee, gbc.b());
        EXPECT(0xbb, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0x8cac, gbc.sp());
        EXPECT(0xad6c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xad6b));
        // 7A 01EA
        gbc.setState(0xca03, 0x141c, 0x84d0, 0x97d9, 0xa145, 0xa832, 0x1, 0x0);
        gbc.writeMem(0xca03, { 0x7a });
        gbc.step();
        EXPECT(0xa1, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xa1, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0x32, gbc.l());
        EXPECT(0x141c, gbc.sp());
        EXPECT(0xca04, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xca03));
        // 7A 01EB
        gbc.setState(0xbc58, 0x5cc3, 0x9220, 0xc3d8, 0x2b22, 0x82e8, 0x1, 0x0);
        gbc.writeMem(0xbc58, { 0x7a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x22, gbc.e());
        EXPECT(0x82, gbc.h());
        EXPECT(0xe8, gbc.l());
        EXPECT(0x5cc3, gbc.sp());
        EXPECT(0xbc59, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbc58));
        // 7A 01EC
        gbc.setState(0xbdbf, 0x7b10, 0xbc30, 0x80c8, 0xe8f7, 0x11dc, 0x1, 0x1);
        gbc.writeMem(0xbdbf, { 0x7a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x7b10, gbc.sp());
        EXPECT(0xbdc0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbdbf));
        // 7A 01ED
        gbc.setState(0x7789, 0xc30, 0x1ff0, 0x95c1, 0x4bb5, 0x672b, 0x1, 0x0);
        gbc.writeMem(0x7789, { 0x7a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x95, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x67, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xc30, gbc.sp());
        EXPECT(0x778a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01EE
        gbc.setState(0xba41, 0xcbd1, 0xbfb0, 0xcf9, 0x7326, 0xfa82, 0x0, 0x0);
        gbc.writeMem(0xba41, { 0x7a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xcbd1, gbc.sp());
        EXPECT(0xba42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xba41));
        // 7A 01EF
        gbc.setState(0x15e6, 0xda17, 0xf330, 0xc9ca, 0x8e8, 0xd15, 0x0, 0x0);
        gbc.writeMem(0x15e6, { 0x7a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xc9, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xe8, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xda17, gbc.sp());
        EXPECT(0x15e7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01F0
        gbc.setState(0x765c, 0x7248, 0x14d0, 0xca5, 0x9c8a, 0x2fae, 0x0, 0x0);
        gbc.writeMem(0x765c, { 0x7a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0xa5, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x8a, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7248, gbc.sp());
        EXPECT(0x765d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01F1
        gbc.setState(0x3e97, 0x398c, 0x630, 0x3c18, 0xf7a1, 0x48b6, 0x1, 0x0);
        gbc.writeMem(0x3e97, { 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x18, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0x398c, gbc.sp());
        EXPECT(0x3e98, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01F2
        gbc.setState(0xac61, 0xc7b1, 0xda20, 0xec43, 0x205f, 0x5a8, 0x1, 0x1);
        gbc.writeMem(0xac61, { 0x7a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xc7b1, gbc.sp());
        EXPECT(0xac62, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xac61));
        // 7A 01F3
        gbc.setState(0x342f, 0xd71, 0xf2a0, 0xc01c, 0xe4b5, 0x48d2, 0x1, 0x0);
        gbc.writeMem(0x342f, { 0x7a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd71, gbc.sp());
        EXPECT(0x3430, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01F4
        gbc.setState(0x9eba, 0x9a2, 0x28c0, 0x4038, 0xaf3a, 0x22a8, 0x0, 0x1);
        gbc.writeMem(0x9eba, { 0x7a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x40, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x22, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9a2, gbc.sp());
        EXPECT(0x9ebb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9eba));
        // 7A 01F5
        gbc.setState(0x62e1, 0x87c9, 0x4d40, 0xe20c, 0xd261, 0x3136, 0x0, 0x1);
        gbc.writeMem(0x62e1, { 0x7a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xe2, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x36, gbc.l());
        EXPECT(0x87c9, gbc.sp());
        EXPECT(0x62e2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01F7
        gbc.setState(0x83e3, 0x80ca, 0xd7f0, 0xd0b, 0x4cea, 0xa789, 0x0, 0x1);
        gbc.writeMem(0x83e3, { 0x7a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x80ca, gbc.sp());
        EXPECT(0x83e4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x83e3));
        // 7A 01F8
        gbc.setState(0x7104, 0x8661, 0x9530, 0x6ff6, 0x917a, 0xb153, 0x1, 0x0);
        gbc.writeMem(0x7104, { 0x7a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb1, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x8661, gbc.sp());
        EXPECT(0x7105, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01F9
        gbc.setState(0x3649, 0xf7b2, 0x9680, 0x75fb, 0x2adf, 0xc456, 0x0, 0x0);
        gbc.writeMem(0x3649, { 0x7a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x75, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xdf, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x56, gbc.l());
        EXPECT(0xf7b2, gbc.sp());
        EXPECT(0x364a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01FA
        gbc.setState(0xf70, 0x9d6a, 0xf60, 0x4e70, 0xfdae, 0x9c03, 0x1, 0x0);
        gbc.writeMem(0xf70, { 0x7a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xae, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x3, gbc.l());
        EXPECT(0x9d6a, gbc.sp());
        EXPECT(0xf71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01FB
        gbc.setState(0x48b0, 0xf6b7, 0x5d60, 0x6966, 0x56e5, 0xe48, 0x1, 0x0);
        gbc.writeMem(0x48b0, { 0x7a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x66, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0xe5, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0x48, gbc.l());
        EXPECT(0xf6b7, gbc.sp());
        EXPECT(0x48b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01FC
        gbc.setState(0xc82d, 0x86da, 0x8f30, 0x1980, 0x3c2f, 0x122b, 0x0, 0x1);
        gbc.writeMem(0xc82d, { 0x7a });
        gbc.step();
        EXPECT(0x3c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x80, gbc.c());
        EXPECT(0x3c, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x86da, gbc.sp());
        EXPECT(0xc82e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc82d));
        // 7A 01FD
        gbc.setState(0x5dec, 0xe13e, 0xb060, 0xa83e, 0x71c, 0xfc40, 0x0, 0x1);
        gbc.writeMem(0x5dec, { 0x7a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x40, gbc.l());
        EXPECT(0xe13e, gbc.sp());
        EXPECT(0x5ded, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 01FE
        gbc.setState(0x1c, 0x1f28, 0x5550, 0xc178, 0x1f3, 0x53c7, 0x1, 0x0);
        gbc.writeMem(0x1c, { 0x7a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x53, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0x1f28, gbc.sp());
        EXPECT(0x1d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 01FF
        gbc.setState(0x563a, 0x2aa7, 0x1700, 0xdb75, 0x1bf7, 0xc141, 0x1, 0x1);
        gbc.writeMem(0x563a, { 0x7a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2aa7, gbc.sp());
        EXPECT(0x563b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0200
        gbc.setState(0x4d0a, 0x457d, 0x79a0, 0x3c5c, 0x5072, 0x904f, 0x1, 0x0);
        gbc.writeMem(0x4d0a, { 0x7a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0x457d, gbc.sp());
        EXPECT(0x4d0b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0201
        gbc.setState(0x459a, 0x980a, 0xe290, 0x1147, 0xbd07, 0x5b67, 0x0, 0x1);
        gbc.writeMem(0x459a, { 0x7a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x980a, gbc.sp());
        EXPECT(0x459b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0202
        gbc.setState(0xdb58, 0x3f0b, 0xfab0, 0x8784, 0xb438, 0xb249, 0x0, 0x1);
        gbc.writeMem(0xdb58, { 0x7a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x3f0b, gbc.sp());
        EXPECT(0xdb59, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdb58));
        // 7A 0203
        gbc.setState(0x56a4, 0x3502, 0xc350, 0xeff6, 0x473b, 0x9c13, 0x0, 0x1);
        gbc.writeMem(0x56a4, { 0x7a });
        gbc.step();
        EXPECT(0x47, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0x47, gbc.d());
        EXPECT(0x3b, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0x3502, gbc.sp());
        EXPECT(0x56a5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0204
        gbc.setState(0x7609, 0x4248, 0x7220, 0xac35, 0x36af, 0x635, 0x1, 0x0);
        gbc.writeMem(0x7609, { 0x7a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0xaf, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x4248, gbc.sp());
        EXPECT(0x760a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0205
        gbc.setState(0x6b97, 0x5ca2, 0x910, 0xdb94, 0xbe9e, 0xe26b, 0x0, 0x0);
        gbc.writeMem(0x6b97, { 0x7a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x5ca2, gbc.sp());
        EXPECT(0x6b98, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0206
        gbc.setState(0x45, 0x9393, 0x1540, 0x2a2c, 0xf521, 0x6386, 0x0, 0x0);
        gbc.writeMem(0x45, { 0x7a });
        gbc.step();
        EXPECT(0xf5, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xf5, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x9393, gbc.sp());
        EXPECT(0x46, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0207
        gbc.setState(0xe99d, 0x44a6, 0x7820, 0xac6f, 0x306c, 0x6cea, 0x1, 0x0);
        gbc.writeMem(0xe99d, { 0x7a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xac, gbc.b());
        EXPECT(0x6f, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0xea, gbc.l());
        EXPECT(0x44a6, gbc.sp());
        EXPECT(0xe99e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe99d));
        // 7A 0208
        gbc.setState(0x44ae, 0xed8e, 0xbdb0, 0xef94, 0x8818, 0xc181, 0x0, 0x0);
        gbc.writeMem(0x44ae, { 0x7a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xc1, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xed8e, gbc.sp());
        EXPECT(0x44af, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0209
        gbc.setState(0xe666, 0xf5c3, 0xfb40, 0x604d, 0x55a3, 0x1c9a, 0x0, 0x1);
        gbc.writeMem(0xe666, { 0x7a });
        gbc.step();
        EXPECT(0x55, gbc.a());
        EXPECT(0x60, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x55, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0xf5c3, gbc.sp());
        EXPECT(0xe667, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe666));
        // 7A 020B
        gbc.setState(0xbc76, 0x5466, 0xb400, 0x5c10, 0x54d7, 0xbf75, 0x1, 0x0);
        gbc.writeMem(0xbc76, { 0x7a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd7, gbc.e());
        EXPECT(0xbf, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0x5466, gbc.sp());
        EXPECT(0xbc77, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbc76));
        // 7A 020C
        gbc.setState(0xcc2a, 0x6107, 0xff40, 0x405, 0x6cb0, 0x7117, 0x0, 0x0);
        gbc.writeMem(0xcc2a, { 0x7a });
        gbc.step();
        EXPECT(0x6c, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x6c, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x6107, gbc.sp());
        EXPECT(0xcc2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcc2a));
        // 7A 020D
        gbc.setState(0xdbc9, 0xb2db, 0x30a0, 0x9e55, 0x52b3, 0xa71f, 0x0, 0x0);
        gbc.writeMem(0xdbc9, { 0x7a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0xb2db, gbc.sp());
        EXPECT(0xdbca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdbc9));
        // 7A 020E
        gbc.setState(0x9369, 0x81d9, 0x48d0, 0x3aa0, 0x183a, 0x8d45, 0x1, 0x1);
        gbc.writeMem(0x9369, { 0x7a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0xa0, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x81d9, gbc.sp());
        EXPECT(0x936a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9369));
        // 7A 020F
        gbc.setState(0x6059, 0x360e, 0x4280, 0x2749, 0xac2e, 0x65f1, 0x1, 0x0);
        gbc.writeMem(0x6059, { 0x7a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x27, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x360e, gbc.sp());
        EXPECT(0x605a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0210
        gbc.setState(0x6ac4, 0xa5ca, 0x1dd0, 0x3e56, 0x3ad2, 0x657f, 0x1, 0x1);
        gbc.writeMem(0x6ac4, { 0x7a });
        gbc.step();
        EXPECT(0x3a, gbc.a());
        EXPECT(0x3e, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x3a, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0x65, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xa5ca, gbc.sp());
        EXPECT(0x6ac5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0211
        gbc.setState(0xc114, 0x2b30, 0x9b10, 0x9319, 0xef0d, 0xc797, 0x1, 0x1);
        gbc.writeMem(0xc114, { 0x7a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0xc7, gbc.h());
        EXPECT(0x97, gbc.l());
        EXPECT(0x2b30, gbc.sp());
        EXPECT(0xc115, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc114));
        // 7A 0212
        gbc.setState(0xebd0, 0x24bf, 0xfd60, 0xe097, 0xb854, 0x3885, 0x0, 0x1);
        gbc.writeMem(0xebd0, { 0x7a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x24bf, gbc.sp());
        EXPECT(0xebd1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xebd0));
        // 7A 0213
        gbc.setState(0x9b87, 0x149f, 0xe440, 0xc74b, 0xec3, 0x5a2f, 0x0, 0x1);
        gbc.writeMem(0x9b87, { 0x7a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x2f, gbc.l());
        EXPECT(0x149f, gbc.sp());
        EXPECT(0x9b88, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9b87));
        // 7A 0214
        gbc.setState(0xa93, 0x61a0, 0xb600, 0xb12f, 0x73c5, 0xbc01, 0x1, 0x0);
        gbc.writeMem(0xa93, { 0x7a });
        gbc.step();
        EXPECT(0x73, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x73, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x61a0, gbc.sp());
        EXPECT(0xa94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0215
        gbc.setState(0x13a3, 0x518d, 0x9730, 0x8b5e, 0x8a6, 0xa3b8, 0x1, 0x0);
        gbc.writeMem(0x13a3, { 0x7a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xb8, gbc.l());
        EXPECT(0x518d, gbc.sp());
        EXPECT(0x13a4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0216
        gbc.setState(0xf50, 0x299a, 0x1c50, 0x116e, 0xead3, 0xdbc4, 0x0, 0x1);
        gbc.writeMem(0xf50, { 0x7a });
        gbc.step();
        EXPECT(0xea, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x6e, gbc.c());
        EXPECT(0xea, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x299a, gbc.sp());
        EXPECT(0xf51, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0217
        gbc.setState(0xf3, 0x221f, 0xe8c0, 0x6fec, 0x3816, 0xbe9d, 0x1, 0x1);
        gbc.writeMem(0xf3, { 0x7a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0x221f, gbc.sp());
        EXPECT(0xf4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0218
        gbc.setState(0x3dea, 0xa249, 0x7310, 0x4317, 0xf84e, 0xeb0d, 0x1, 0x1);
        gbc.writeMem(0x3dea, { 0x7a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xeb, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa249, gbc.sp());
        EXPECT(0x3deb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0219
        gbc.setState(0x1d35, 0x6cc3, 0x8950, 0xd704, 0x3231, 0xfcfd, 0x1, 0x0);
        gbc.writeMem(0x1d35, { 0x7a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0x6cc3, gbc.sp());
        EXPECT(0x1d36, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 021A
        gbc.setState(0xc2c, 0xf92c, 0xed40, 0xd5ce, 0x879b, 0x1eed, 0x0, 0x0);
        gbc.writeMem(0xc2c, { 0x7a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xf92c, gbc.sp());
        EXPECT(0xc2d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 021B
        gbc.setState(0xda82, 0xacc7, 0x260, 0x3715, 0xa6e1, 0x5d5c, 0x0, 0x1);
        gbc.writeMem(0xda82, { 0x7a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0xe1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xacc7, gbc.sp());
        EXPECT(0xda83, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xda82));
        // 7A 021C
        gbc.setState(0x6115, 0x3271, 0x7150, 0x5d91, 0xd295, 0xbe69, 0x1, 0x1);
        gbc.writeMem(0x6115, { 0x7a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x69, gbc.l());
        EXPECT(0x3271, gbc.sp());
        EXPECT(0x6116, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 021D
        gbc.setState(0x4b9c, 0xa9d9, 0xb4c0, 0x192b, 0x4c77, 0xd5bc, 0x0, 0x0);
        gbc.writeMem(0x4b9c, { 0x7a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xa9d9, gbc.sp());
        EXPECT(0x4b9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 021E
        gbc.setState(0x40f8, 0x1ea9, 0x26c0, 0x4de, 0xc57e, 0x7f6, 0x0, 0x1);
        gbc.writeMem(0x40f8, { 0x7a });
        gbc.step();
        EXPECT(0xc5, gbc.a());
        EXPECT(0x4, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0xc5, gbc.d());
        EXPECT(0x7e, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xf6, gbc.l());
        EXPECT(0x1ea9, gbc.sp());
        EXPECT(0x40f9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 021F
        gbc.setState(0xcee9, 0x8fd8, 0x4ac0, 0x8447, 0xcc91, 0x34e2, 0x1, 0x1);
        gbc.writeMem(0xcee9, { 0x7a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x47, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x8fd8, gbc.sp());
        EXPECT(0xceea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcee9));
        // 7A 0220
        gbc.setState(0x1ff7, 0x50ff, 0x9320, 0x9b97, 0xaaf2, 0xe0ce, 0x1, 0x1);
        gbc.writeMem(0x1ff7, { 0x7a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x50ff, gbc.sp());
        EXPECT(0x1ff8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0221
        gbc.setState(0x6a02, 0xf9fe, 0xf580, 0x94ae, 0x9c5b, 0xbd5c, 0x1, 0x0);
        gbc.writeMem(0x6a02, { 0x7a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xf9fe, gbc.sp());
        EXPECT(0x6a03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0222
        gbc.setState(0xe1f4, 0x224e, 0x4f20, 0xccd3, 0x3486, 0xfd53, 0x1, 0x1);
        gbc.writeMem(0xe1f4, { 0x7a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x224e, gbc.sp());
        EXPECT(0xe1f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe1f4));
        // 7A 0223
        gbc.setState(0x68cd, 0xd4c8, 0x4d20, 0xa92b, 0xdb13, 0x46fe, 0x1, 0x1);
        gbc.writeMem(0x68cd, { 0x7a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xd4c8, gbc.sp());
        EXPECT(0x68ce, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0224
        gbc.setState(0xb8ab, 0x300f, 0x7420, 0xd70b, 0x19c8, 0x6f54, 0x1, 0x1);
        gbc.writeMem(0xb8ab, { 0x7a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xd7, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x300f, gbc.sp());
        EXPECT(0xb8ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb8ab));
        // 7A 0225
        gbc.setState(0xcee5, 0x5b07, 0x2590, 0x7493, 0x1ff1, 0x6d5f, 0x1, 0x1);
        gbc.writeMem(0xcee5, { 0x7a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0x93, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0x6d, gbc.h());
        EXPECT(0x5f, gbc.l());
        EXPECT(0x5b07, gbc.sp());
        EXPECT(0xcee6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcee5));
        // 7A 0226
        gbc.setState(0xade0, 0xf785, 0x8190, 0x5d67, 0xd9b0, 0x2e67, 0x0, 0x1);
        gbc.writeMem(0xade0, { 0x7a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x67, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xf785, gbc.sp());
        EXPECT(0xade1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xade0));
        // 7A 0227
        gbc.setState(0xc635, 0xcdd8, 0xc390, 0x7ffe, 0xc2b2, 0x6b3b, 0x1, 0x1);
        gbc.writeMem(0xc635, { 0x7a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xb2, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0x3b, gbc.l());
        EXPECT(0xcdd8, gbc.sp());
        EXPECT(0xc636, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc635));
        // 7A 0228
        gbc.setState(0x3b29, 0xa671, 0x5ae0, 0xfe4a, 0x41b9, 0xfea8, 0x1, 0x1);
        gbc.writeMem(0x3b29, { 0x7a });
        gbc.step();
        EXPECT(0x41, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x41, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0xa671, gbc.sp());
        EXPECT(0x3b2a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0229
        gbc.setState(0xd3e, 0xb459, 0x1880, 0x7cc4, 0xe44c, 0xd095, 0x1, 0x0);
        gbc.writeMem(0xd3e, { 0x7a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x95, gbc.l());
        EXPECT(0xb459, gbc.sp());
        EXPECT(0xd3f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 022A
        gbc.setState(0x55eb, 0x4537, 0xb420, 0x3b05, 0xe12f, 0xdc1f, 0x0, 0x1);
        gbc.writeMem(0x55eb, { 0x7a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2f, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x1f, gbc.l());
        EXPECT(0x4537, gbc.sp());
        EXPECT(0x55ec, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 022B
        gbc.setState(0xaeb1, 0x380, 0x2580, 0x59ed, 0x9ef5, 0xa5d0, 0x1, 0x1);
        gbc.writeMem(0xaeb1, { 0x7a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xa5, gbc.h());
        EXPECT(0xd0, gbc.l());
        EXPECT(0x380, gbc.sp());
        EXPECT(0xaeb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xaeb1));
        // 7A 022D
        gbc.setState(0xdf7d, 0xb7ae, 0x7f50, 0x9d13, 0x7fd1, 0xf34f, 0x1, 0x1);
        gbc.writeMem(0xdf7d, { 0x7a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x4f, gbc.l());
        EXPECT(0xb7ae, gbc.sp());
        EXPECT(0xdf7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdf7d));
        // 7A 022E
        gbc.setState(0x6c7c, 0x3a7e, 0x5fc0, 0xc2e6, 0x745, 0x8f5d, 0x0, 0x1);
        gbc.writeMem(0x6c7c, { 0x7a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x45, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x3a7e, gbc.sp());
        EXPECT(0x6c7d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 022F
        gbc.setState(0x9759, 0xca76, 0x6710, 0xbdfc, 0xb758, 0xf615, 0x1, 0x0);
        gbc.writeMem(0x9759, { 0x7a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0xf6, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0xca76, gbc.sp());
        EXPECT(0x975a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9759));
        // 7A 0230
        gbc.setState(0xb055, 0x73a0, 0xb440, 0xfad4, 0xf6da, 0x1194, 0x1, 0x0);
        gbc.writeMem(0xb055, { 0x7a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x11, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x73a0, gbc.sp());
        EXPECT(0xb056, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb055));
        // 7A 0231
        gbc.setState(0x5d1, 0x4cca, 0xe7f0, 0xe9aa, 0xe12b, 0x710e, 0x0, 0x1);
        gbc.writeMem(0x5d1, { 0x7a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x4cca, gbc.sp());
        EXPECT(0x5d2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0232
        gbc.setState(0x625f, 0x9db2, 0xd3a0, 0xb108, 0x2033, 0xb959, 0x0, 0x1);
        gbc.writeMem(0x625f, { 0x7a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0x9db2, gbc.sp());
        EXPECT(0x6260, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0233
        gbc.setState(0x91de, 0x16a4, 0x2420, 0xa81d, 0x19d2, 0xa0d4, 0x1, 0x1);
        gbc.writeMem(0x91de, { 0x7a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x1d, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x16a4, gbc.sp());
        EXPECT(0x91df, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x91de));
        // 7A 0234
        gbc.setState(0x162f, 0x82aa, 0x3870, 0x8fc2, 0xabce, 0x3086, 0x1, 0x0);
        gbc.writeMem(0x162f, { 0x7a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x82aa, gbc.sp());
        EXPECT(0x1630, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0235
        gbc.setState(0xdc4e, 0x133e, 0x6270, 0xbc8f, 0x70f5, 0xb401, 0x1, 0x1);
        gbc.writeMem(0xdc4e, { 0x7a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x8f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x133e, gbc.sp());
        EXPECT(0xdc4f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdc4e));
        // 7A 0236
        gbc.setState(0x762c, 0x5c5d, 0x9090, 0x43f1, 0xe96c, 0xfe11, 0x1, 0x0);
        gbc.writeMem(0x762c, { 0x7a });
        gbc.step();
        EXPECT(0xe9, gbc.a());
        EXPECT(0x43, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0xe9, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xfe, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0x5c5d, gbc.sp());
        EXPECT(0x762d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0237
        gbc.setState(0x45ad, 0xd60c, 0x1c70, 0xc239, 0x5e65, 0x7116, 0x0, 0x1);
        gbc.writeMem(0x45ad, { 0x7a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x71, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0xd60c, gbc.sp());
        EXPECT(0x45ae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0238
        gbc.setState(0x5352, 0x18f0, 0x750, 0xe9d1, 0x8f92, 0x16b0, 0x0, 0x1);
        gbc.writeMem(0x5352, { 0x7a });
        gbc.step();
        EXPECT(0x8f, gbc.a());
        EXPECT(0xe9, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0x8f, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x18f0, gbc.sp());
        EXPECT(0x5353, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 023A
        gbc.setState(0xb4f6, 0xd5c2, 0x4820, 0x3a2a, 0x3118, 0x35cd, 0x1, 0x1);
        gbc.writeMem(0xb4f6, { 0x7a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x35, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0xd5c2, gbc.sp());
        EXPECT(0xb4f7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb4f6));
        // 7A 023C
        gbc.setState(0x4cd1, 0x219f, 0x6aa0, 0x9719, 0x10d2, 0xf33f, 0x0, 0x1);
        gbc.writeMem(0x4cd1, { 0x7a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x219f, gbc.sp());
        EXPECT(0x4cd2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 023D
        gbc.setState(0x1c17, 0x7f77, 0x75d0, 0xf40b, 0xb742, 0x1f33, 0x1, 0x0);
        gbc.writeMem(0x1c17, { 0x7a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0xf4, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x7f77, gbc.sp());
        EXPECT(0x1c18, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 023F
        gbc.setState(0xb42, 0x68fa, 0x2490, 0x7d2f, 0x49fe, 0xad2c, 0x1, 0x0);
        gbc.writeMem(0xb42, { 0x7a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x68fa, gbc.sp());
        EXPECT(0xb43, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0240
        gbc.setState(0xa16c, 0x7162, 0xe320, 0x4668, 0x166b, 0x56ec, 0x1, 0x0);
        gbc.writeMem(0xa16c, { 0x7a });
        gbc.step();
        EXPECT(0x16, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0x16, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xec, gbc.l());
        EXPECT(0x7162, gbc.sp());
        EXPECT(0xa16d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa16c));
        // 7A 0241
        gbc.setState(0xba20, 0x5277, 0x1e00, 0x2385, 0x209e, 0xc088, 0x0, 0x1);
        gbc.writeMem(0xba20, { 0x7a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0x23, gbc.b());
        EXPECT(0x85, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x5277, gbc.sp());
        EXPECT(0xba21, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xba20));
        // 7A 0242
        gbc.setState(0x926, 0xce70, 0x2d30, 0x92dc, 0xd026, 0x202b, 0x1, 0x1);
        gbc.writeMem(0x926, { 0x7a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xce70, gbc.sp());
        EXPECT(0x927, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0243
        gbc.setState(0x37e7, 0x18eb, 0x4160, 0xfcf0, 0xcbd8, 0x3e67, 0x1, 0x0);
        gbc.writeMem(0x37e7, { 0x7a });
        gbc.step();
        EXPECT(0xcb, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xcb, gbc.d());
        EXPECT(0xd8, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x18eb, gbc.sp());
        EXPECT(0x37e8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0245
        gbc.setState(0x4127, 0x7c3a, 0xecc0, 0x1ad4, 0xfc12, 0xf3ee, 0x1, 0x0);
        gbc.writeMem(0x4127, { 0x7a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x1a, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xf3, gbc.h());
        EXPECT(0xee, gbc.l());
        EXPECT(0x7c3a, gbc.sp());
        EXPECT(0x4128, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0246
        gbc.setState(0xaa7, 0x62b, 0x2ed0, 0x162c, 0xc15f, 0x24d3, 0x1, 0x1);
        gbc.writeMem(0xaa7, { 0x7a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0x5f, gbc.e());
        EXPECT(0x24, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0x62b, gbc.sp());
        EXPECT(0xaa8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0247
        gbc.setState(0x236f, 0xbced, 0x2cd0, 0x1540, 0x2903, 0x3761, 0x1, 0x0);
        gbc.writeMem(0x236f, { 0x7a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0xbced, gbc.sp());
        EXPECT(0x2370, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0248
        gbc.setState(0xc30c, 0x810b, 0x1c40, 0xe3e9, 0x2777, 0x8c1a, 0x1, 0x0);
        gbc.writeMem(0xc30c, { 0x7a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x8c, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x810b, gbc.sp());
        EXPECT(0xc30d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc30c));
        // 7A 0249
        gbc.setState(0x4969, 0x2c2e, 0xdbe0, 0x6987, 0x3813, 0xd4c6, 0x1, 0x0);
        gbc.writeMem(0x4969, { 0x7a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xd4, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x2c2e, gbc.sp());
        EXPECT(0x496a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 024B
        gbc.setState(0xa057, 0x6aff, 0x9d60, 0xdf1a, 0xba73, 0xa3fb, 0x1, 0x0);
        gbc.writeMem(0xa057, { 0x7a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x6aff, gbc.sp());
        EXPECT(0xa058, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa057));
        // 7A 024C
        gbc.setState(0x30a5, 0x76ee, 0xf350, 0x88a8, 0xe3e2, 0x134c, 0x0, 0x1);
        gbc.writeMem(0x30a5, { 0x7a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0xa8, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x4c, gbc.l());
        EXPECT(0x76ee, gbc.sp());
        EXPECT(0x30a6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 024D
        gbc.setState(0xb247, 0x7e94, 0x31f0, 0x9b32, 0xe711, 0x4fae, 0x1, 0x1);
        gbc.writeMem(0xb247, { 0x7a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x7e94, gbc.sp());
        EXPECT(0xb248, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb247));
        // 7A 024E
        gbc.setState(0x5990, 0xffcb, 0xfa60, 0xdb84, 0xe052, 0x3eaa, 0x1, 0x0);
        gbc.writeMem(0x5990, { 0x7a });
        gbc.step();
        EXPECT(0xe0, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x84, gbc.c());
        EXPECT(0xe0, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0xffcb, gbc.sp());
        EXPECT(0x5991, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 024F
        gbc.setState(0x85e5, 0x23ef, 0x1f80, 0x6206, 0x1fd9, 0xa320, 0x0, 0x0);
        gbc.writeMem(0x85e5, { 0x7a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x6, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x23ef, gbc.sp());
        EXPECT(0x85e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x85e5));
        // 7A 0250
        gbc.setState(0x3bb2, 0xe102, 0x1940, 0x9f05, 0xb1bb, 0xc66c, 0x1, 0x0);
        gbc.writeMem(0x3bb2, { 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0x6c, gbc.l());
        EXPECT(0xe102, gbc.sp());
        EXPECT(0x3bb3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0251
        gbc.setState(0x8f0b, 0x631b, 0x3100, 0xcab0, 0xf23a, 0x6a, 0x0, 0x0);
        gbc.writeMem(0x8f0b, { 0x7a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb0, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x3a, gbc.e());
        EXPECT(0x0, gbc.h());
        EXPECT(0x6a, gbc.l());
        EXPECT(0x631b, gbc.sp());
        EXPECT(0x8f0c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8f0b));
        // 7A 0252
        gbc.setState(0x7922, 0x2f41, 0x7730, 0x6849, 0x58f0, 0x17b7, 0x1, 0x0);
        gbc.writeMem(0x7922, { 0x7a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x49, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x2f41, gbc.sp());
        EXPECT(0x7923, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0254
        gbc.setState(0x1684, 0xb8f0, 0xa560, 0xc122, 0x8414, 0x1029, 0x0, 0x1);
        gbc.writeMem(0x1684, { 0x7a });
        gbc.step();
        EXPECT(0x84, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0x84, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xb8f0, gbc.sp());
        EXPECT(0x1685, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0255
        gbc.setState(0x7f94, 0x2cb6, 0x9510, 0x13e8, 0xacc7, 0xa378, 0x0, 0x1);
        gbc.writeMem(0x7f94, { 0x7a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0x2cb6, gbc.sp());
        EXPECT(0x7f95, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0256
        gbc.setState(0x8a93, 0xaa5f, 0xbf30, 0x79d7, 0x85ca, 0x4151, 0x1, 0x0);
        gbc.writeMem(0x8a93, { 0x7a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x41, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xaa5f, gbc.sp());
        EXPECT(0x8a94, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8a93));
        // 7A 0257
        gbc.setState(0x1ed, 0xcf09, 0xb2d0, 0x9c2, 0x2ddd, 0x968b, 0x1, 0x0);
        gbc.writeMem(0x1ed, { 0x7a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x9, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x96, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0xcf09, gbc.sp());
        EXPECT(0x1ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0259
        gbc.setState(0x9a6f, 0xf6e9, 0x5f50, 0x8d51, 0x44fb, 0x595a, 0x1, 0x1);
        gbc.writeMem(0x9a6f, { 0x7a });
        gbc.step();
        EXPECT(0x44, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x51, gbc.c());
        EXPECT(0x44, gbc.d());
        EXPECT(0xfb, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xf6e9, gbc.sp());
        EXPECT(0x9a70, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9a6f));
        // 7A 025A
        gbc.setState(0x2053, 0xd706, 0x1770, 0xd3ca, 0x3fda, 0x9a50, 0x1, 0x0);
        gbc.writeMem(0x2053, { 0x7a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0xda, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd706, gbc.sp());
        EXPECT(0x2054, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 025B
        gbc.setState(0x22b, 0xc5f5, 0x9b0, 0x5b4f, 0x9df4, 0x9a78, 0x0, 0x0);
        gbc.writeMem(0x22b, { 0x7a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0x78, gbc.l());
        EXPECT(0xc5f5, gbc.sp());
        EXPECT(0x22c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 025C
        gbc.setState(0x3d5a, 0x2914, 0xc3f0, 0x68f9, 0xaaf3, 0x8365, 0x0, 0x0);
        gbc.writeMem(0x3d5a, { 0x7a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0x65, gbc.l());
        EXPECT(0x2914, gbc.sp());
        EXPECT(0x3d5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 025D
        gbc.setState(0x471f, 0x3276, 0x2020, 0x9005, 0x9a3f, 0xa366, 0x0, 0x0);
        gbc.writeMem(0x471f, { 0x7a });
        gbc.step();
        EXPECT(0x9a, gbc.a());
        EXPECT(0x90, gbc.b());
        EXPECT(0x5, gbc.c());
        EXPECT(0x9a, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x3276, gbc.sp());
        EXPECT(0x4720, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 025E
        gbc.setState(0xb978, 0xc77c, 0x8ad0, 0x71d4, 0x69ea, 0x496f, 0x0, 0x0);
        gbc.writeMem(0xb978, { 0x7a });
        gbc.step();
        EXPECT(0x69, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x69, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0xc77c, gbc.sp());
        EXPECT(0xb979, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb978));
        // 7A 025F
        gbc.setState(0xdde, 0x7ed2, 0x2670, 0x9774, 0x5b30, 0x74b7, 0x0, 0x1);
        gbc.writeMem(0xdde, { 0x7a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x30, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x7ed2, gbc.sp());
        EXPECT(0xddf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0260
        gbc.setState(0x6ae2, 0xf908, 0xa5a0, 0xa0db, 0xf0f, 0xff87, 0x0, 0x0);
        gbc.writeMem(0x6ae2, { 0x7a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xa0, gbc.b());
        EXPECT(0xdb, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0xf908, gbc.sp());
        EXPECT(0x6ae3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0261
        gbc.setState(0xd10e, 0x70ed, 0xee90, 0x16c2, 0xbb67, 0x3373, 0x1, 0x0);
        gbc.writeMem(0xd10e, { 0x7a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x70ed, gbc.sp());
        EXPECT(0xd10f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd10e));
        // 7A 0262
        gbc.setState(0x2c1d, 0xd5b3, 0x7d70, 0xa73d, 0xac7d, 0xdb23, 0x1, 0x0);
        gbc.writeMem(0x2c1d, { 0x7a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xa7, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xd5b3, gbc.sp());
        EXPECT(0x2c1e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0263
        gbc.setState(0x400a, 0x1bcf, 0xb250, 0x5040, 0x53e2, 0x1bd4, 0x0, 0x0);
        gbc.writeMem(0x400a, { 0x7a });
        gbc.step();
        EXPECT(0x53, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x53, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x1bcf, gbc.sp());
        EXPECT(0x400b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0265
        gbc.setState(0xe283, 0xb2db, 0x3280, 0x198, 0xd017, 0x93cc, 0x1, 0x1);
        gbc.writeMem(0xe283, { 0x7a });
        gbc.step();
        EXPECT(0xd0, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0xd0, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xb2db, gbc.sp());
        EXPECT(0xe284, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe283));
        // 7A 0266
        gbc.setState(0x1d91, 0x5668, 0x4da0, 0x34ce, 0x4343, 0xd8fa, 0x0, 0x1);
        gbc.writeMem(0x1d91, { 0x7a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0x34, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0xd8, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x5668, gbc.sp());
        EXPECT(0x1d92, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0267
        gbc.setState(0x4c5b, 0x4eec, 0xf880, 0xb1ba, 0x5151, 0x3e8f, 0x1, 0x0);
        gbc.writeMem(0x4c5b, { 0x7a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x51, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x4eec, gbc.sp());
        EXPECT(0x4c5c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0268
        gbc.setState(0x9572, 0xfa44, 0x2830, 0xd628, 0x75fc, 0x9066, 0x1, 0x0);
        gbc.writeMem(0x9572, { 0x7a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xfa44, gbc.sp());
        EXPECT(0x9573, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9572));
        // 7A 0269
        gbc.setState(0x813c, 0xe4a4, 0x2750, 0x3815, 0xa0d0, 0x21fe, 0x0, 0x1);
        gbc.writeMem(0x813c, { 0x7a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x38, gbc.b());
        EXPECT(0x15, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xe4a4, gbc.sp());
        EXPECT(0x813d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x813c));
        // 7A 026B
        gbc.setState(0xef7d, 0x12de, 0x3a70, 0x8a40, 0x6054, 0xd672, 0x1, 0x1);
        gbc.writeMem(0xef7d, { 0x7a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x8a, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x12de, gbc.sp());
        EXPECT(0xef7e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xef7d));
        // 7A 026C
        gbc.setState(0x6611, 0x3884, 0x2e90, 0x703c, 0xa91d, 0xb54, 0x1, 0x1);
        gbc.writeMem(0x6611, { 0x7a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3884, gbc.sp());
        EXPECT(0x6612, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 026D
        gbc.setState(0x512b, 0x104f, 0xc090, 0x7c40, 0x319b, 0xc3ff, 0x1, 0x0);
        gbc.writeMem(0x512b, { 0x7a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x40, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x104f, gbc.sp());
        EXPECT(0x512c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 026E
        gbc.setState(0xdfb1, 0x486f, 0xeca0, 0xa10d, 0xbd5, 0x5b25, 0x1, 0x1);
        gbc.writeMem(0xdfb1, { 0x7a });
        gbc.step();
        EXPECT(0xb, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xb, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x486f, gbc.sp());
        EXPECT(0xdfb2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdfb1));
        // 7A 026F
        gbc.setState(0x13a8, 0x49ff, 0x3aa0, 0xd413, 0x567b, 0xe05d, 0x1, 0x1);
        gbc.writeMem(0x13a8, { 0x7a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x7b, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0x49ff, gbc.sp());
        EXPECT(0x13a9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0270
        gbc.setState(0x959e, 0xeed8, 0x940, 0x825, 0xce65, 0x7392, 0x0, 0x0);
        gbc.writeMem(0x959e, { 0x7a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x25, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xeed8, gbc.sp());
        EXPECT(0x959f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x959e));
        // 7A 0271
        gbc.setState(0x1e48, 0x3708, 0x5690, 0xe581, 0xfe63, 0x9af9, 0x1, 0x1);
        gbc.writeMem(0x1e48, { 0x7a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xe5, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x9a, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3708, gbc.sp());
        EXPECT(0x1e49, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0272
        gbc.setState(0x5e89, 0xe31, 0xea30, 0x2144, 0x7091, 0xfc59, 0x1, 0x1);
        gbc.writeMem(0x5e89, { 0x7a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x91, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0x59, gbc.l());
        EXPECT(0xe31, gbc.sp());
        EXPECT(0x5e8a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0273
        gbc.setState(0xa6b0, 0x55d6, 0x6480, 0x5e55, 0x5bbd, 0xfdb0, 0x0, 0x1);
        gbc.writeMem(0xa6b0, { 0x7a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5e, gbc.b());
        EXPECT(0x55, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0x55d6, gbc.sp());
        EXPECT(0xa6b1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa6b0));
        // 7A 0274
        gbc.setState(0x3e16, 0x5f6a, 0xe5d0, 0x6409, 0x12d9, 0x4fa8, 0x1, 0x1);
        gbc.writeMem(0x3e16, { 0x7a });
        gbc.step();
        EXPECT(0x12, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0x12, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x5f6a, gbc.sp());
        EXPECT(0x3e17, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0275
        gbc.setState(0x6fd0, 0xe1c2, 0xad20, 0xd43, 0x8a99, 0xe811, 0x1, 0x1);
        gbc.writeMem(0x6fd0, { 0x7a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xe1c2, gbc.sp());
        EXPECT(0x6fd1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0276
        gbc.setState(0x46b, 0xe5b8, 0x9540, 0x2950, 0x116b, 0x1d3f, 0x1, 0x1);
        gbc.writeMem(0x46b, { 0x7a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x50, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0xe5b8, gbc.sp());
        EXPECT(0x46c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0277
        gbc.setState(0xbf84, 0x35da, 0x8d20, 0x7978, 0xeb4a, 0x89ce, 0x0, 0x0);
        gbc.writeMem(0xbf84, { 0x7a });
        gbc.step();
        EXPECT(0xeb, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x78, gbc.c());
        EXPECT(0xeb, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x35da, gbc.sp());
        EXPECT(0xbf85, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbf84));
        // 7A 0278
        gbc.setState(0x6e9c, 0xfcaa, 0xb50, 0x77e7, 0xbe49, 0x9363, 0x0, 0x1);
        gbc.writeMem(0x6e9c, { 0x7a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0xe7, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xfcaa, gbc.sp());
        EXPECT(0x6e9d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0279
        gbc.setState(0xdf6e, 0x114c, 0xf730, 0x2a3, 0x5c42, 0x33f5, 0x1, 0x0);
        gbc.writeMem(0xdf6e, { 0x7a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x33, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x114c, gbc.sp());
        EXPECT(0xdf6f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdf6e));
        // 7A 027A
        gbc.setState(0xa949, 0xe554, 0xe940, 0xc3d5, 0xf6e6, 0x58b0, 0x1, 0x0);
        gbc.writeMem(0xa949, { 0x7a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xb0, gbc.l());
        EXPECT(0xe554, gbc.sp());
        EXPECT(0xa94a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa949));
        // 7A 027B
        gbc.setState(0x7c14, 0x90eb, 0x2570, 0x530f, 0x88c7, 0x9b77, 0x1, 0x0);
        gbc.writeMem(0x7c14, { 0x7a });
        gbc.step();
        EXPECT(0x88, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0xf, gbc.c());
        EXPECT(0x88, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x90eb, gbc.sp());
        EXPECT(0x7c15, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 027C
        gbc.setState(0x39b4, 0x740c, 0x89f0, 0x4b11, 0x8c84, 0xc8d4, 0x1, 0x0);
        gbc.writeMem(0x39b4, { 0x7a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0x4b, gbc.b());
        EXPECT(0x11, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0x84, gbc.e());
        EXPECT(0xc8, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x740c, gbc.sp());
        EXPECT(0x39b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 027D
        gbc.setState(0x15c5, 0x370a, 0x18b0, 0x86b5, 0xb3f8, 0x4930, 0x0, 0x0);
        gbc.writeMem(0x15c5, { 0x7a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xf8, gbc.e());
        EXPECT(0x49, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x370a, gbc.sp());
        EXPECT(0x15c6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 027E
        gbc.setState(0x8caa, 0xc32a, 0xd7a0, 0xa5eb, 0x9fe7, 0xfcd4, 0x1, 0x1);
        gbc.writeMem(0x8caa, { 0x7a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0xfc, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0xc32a, gbc.sp());
        EXPECT(0x8cab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8caa));
        // 7A 027F
        gbc.setState(0x211d, 0x1347, 0xb620, 0xd18c, 0x8a63, 0x2b4b, 0x0, 0x1);
        gbc.writeMem(0x211d, { 0x7a });
        gbc.step();
        EXPECT(0x8a, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x8c, gbc.c());
        EXPECT(0x8a, gbc.d());
        EXPECT(0x63, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x1347, gbc.sp());
        EXPECT(0x211e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0280
        gbc.setState(0x91d7, 0xc4be, 0xe1b0, 0x17b, 0xace2, 0xbe1c, 0x0, 0x1);
        gbc.writeMem(0x91d7, { 0x7a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x7b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xe2, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0xc4be, gbc.sp());
        EXPECT(0x91d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x91d7));
        // 7A 0281
        gbc.setState(0xc47e, 0x8328, 0xca70, 0xf82b, 0x49a6, 0xb25e, 0x1, 0x0);
        gbc.writeMem(0xc47e, { 0x7a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0xb2, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x8328, gbc.sp());
        EXPECT(0xc47f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc47e));
        // 7A 0282
        gbc.setState(0xa5aa, 0x1a30, 0x5bc0, 0xa598, 0x97c4, 0x9b68, 0x0, 0x1);
        gbc.writeMem(0xa5aa, { 0x7a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x68, gbc.l());
        EXPECT(0x1a30, gbc.sp());
        EXPECT(0xa5ab, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa5aa));
        // 7A 0283
        gbc.setState(0x344d, 0x8dbc, 0xd0f0, 0x4e89, 0x752, 0x9427, 0x1, 0x1);
        gbc.writeMem(0x344d, { 0x7a });
        gbc.step();
        EXPECT(0x7, gbc.a());
        EXPECT(0x4e, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x7, gbc.d());
        EXPECT(0x52, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x8dbc, gbc.sp());
        EXPECT(0x344e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0284
        gbc.setState(0x5040, 0xfcfe, 0xc040, 0x28f5, 0xff03, 0x4870, 0x1, 0x0);
        gbc.writeMem(0x5040, { 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0x28, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x48, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0xfcfe, gbc.sp());
        EXPECT(0x5041, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0285
        gbc.setState(0x1d0e, 0xea, 0xe8e0, 0xe48a, 0x3626, 0x4abb, 0x0, 0x1);
        gbc.writeMem(0x1d0e, { 0x7a });
        gbc.step();
        EXPECT(0x36, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0x36, gbc.d());
        EXPECT(0x26, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0xbb, gbc.l());
        EXPECT(0xea, gbc.sp());
        EXPECT(0x1d0f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0286
        gbc.setState(0xc0f4, 0x4a26, 0x6750, 0x4ad8, 0xd3, 0xccc4, 0x1, 0x1);
        gbc.writeMem(0xc0f4, { 0x7a });
        gbc.step();
        EXPECT(0x0, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x0, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xcc, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x4a26, gbc.sp());
        EXPECT(0xc0f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc0f4));
        // 7A 0287
        gbc.setState(0x3068, 0x7dde, 0x63d0, 0xb30d, 0x9278, 0x5c6, 0x1, 0x0);
        gbc.writeMem(0x3068, { 0x7a });
        gbc.step();
        EXPECT(0x92, gbc.a());
        EXPECT(0xb3, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x92, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x5, gbc.h());
        EXPECT(0xc6, gbc.l());
        EXPECT(0x7dde, gbc.sp());
        EXPECT(0x3069, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0288
        gbc.setState(0xb5b1, 0x676e, 0xfb60, 0x6864, 0x464c, 0x66c0, 0x1, 0x1);
        gbc.writeMem(0xb5b1, { 0x7a });
        gbc.step();
        EXPECT(0x46, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x46, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x676e, gbc.sp());
        EXPECT(0xb5b2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb5b1));
        // 7A 0289
        gbc.setState(0x8b5a, 0xefc, 0x97b0, 0x1b70, 0xb5de, 0x9d34, 0x0, 0x0);
        gbc.writeMem(0x8b5a, { 0x7a });
        gbc.step();
        EXPECT(0xb5, gbc.a());
        EXPECT(0x1b, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb5, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xefc, gbc.sp());
        EXPECT(0x8b5b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8b5a));
        // 7A 028A
        gbc.setState(0xea81, 0xeeb3, 0x7d20, 0x55b4, 0xf818, 0x74d8, 0x0, 0x1);
        gbc.writeMem(0xea81, { 0x7a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xeeb3, gbc.sp());
        EXPECT(0xea82, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xea81));
        // 7A 028B
        gbc.setState(0xb787, 0xaf8a, 0x7520, 0x3fd9, 0xb1d0, 0x4ced, 0x0, 0x1);
        gbc.writeMem(0xb787, { 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x3f, gbc.b());
        EXPECT(0xd9, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xd0, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xed, gbc.l());
        EXPECT(0xaf8a, gbc.sp());
        EXPECT(0xb788, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb787));
        // 7A 028C
        gbc.setState(0x51a9, 0x47c4, 0x4340, 0x84cc, 0xe4c1, 0xc6a5, 0x1, 0x0);
        gbc.writeMem(0x51a9, { 0x7a });
        gbc.step();
        EXPECT(0xe4, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xcc, gbc.c());
        EXPECT(0xe4, gbc.d());
        EXPECT(0xc1, gbc.e());
        EXPECT(0xc6, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x47c4, gbc.sp());
        EXPECT(0x51aa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 028D
        gbc.setState(0x2051, 0x2b26, 0x5d60, 0x7738, 0x64ac, 0x6be2, 0x1, 0x0);
        gbc.writeMem(0x2051, { 0x7a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6b, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0x2b26, gbc.sp());
        EXPECT(0x2052, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 028E
        gbc.setState(0x689f, 0x5771, 0x76d0, 0x36af, 0xcf0b, 0x2e0b, 0x1, 0x1);
        gbc.writeMem(0x689f, { 0x7a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0x5771, gbc.sp());
        EXPECT(0x68a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 028F
        gbc.setState(0x1f25, 0x47bb, 0x1b80, 0x9c8b, 0x3dd, 0xce94, 0x1, 0x1);
        gbc.writeMem(0x1f25, { 0x7a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0x9c, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x47bb, gbc.sp());
        EXPECT(0x1f26, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0290
        gbc.setState(0x4709, 0x3aa6, 0x3aa0, 0x2ab4, 0x1cc4, 0xca20, 0x1, 0x0);
        gbc.writeMem(0x4709, { 0x7a });
        gbc.step();
        EXPECT(0x1c, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0x1c, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x3aa6, gbc.sp());
        EXPECT(0x470a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0291
        gbc.setState(0x9043, 0x3238, 0xc8b0, 0x92aa, 0xba61, 0x1228, 0x1, 0x1);
        gbc.writeMem(0x9043, { 0x7a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x92, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x12, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x3238, gbc.sp());
        EXPECT(0x9044, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9043));
        // 7A 0292
        gbc.setState(0x2173, 0xbf29, 0xa140, 0x491a, 0x63bb, 0x639e, 0x0, 0x1);
        gbc.writeMem(0x2173, { 0x7a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xbb, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0xbf29, gbc.sp());
        EXPECT(0x2174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0293
        gbc.setState(0xbead, 0x2369, 0x77f0, 0x5d2f, 0x9495, 0x3e61, 0x0, 0x1);
        gbc.writeMem(0xbead, { 0x7a });
        gbc.step();
        EXPECT(0x94, gbc.a());
        EXPECT(0x5d, gbc.b());
        EXPECT(0x2f, gbc.c());
        EXPECT(0x94, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x2369, gbc.sp());
        EXPECT(0xbeae, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbead));
        // 7A 0294
        gbc.setState(0x632f, 0xdaa9, 0x9bd0, 0xd317, 0x1fee, 0xb83, 0x1, 0x1);
        gbc.writeMem(0x632f, { 0x7a });
        gbc.step();
        EXPECT(0x1f, gbc.a());
        EXPECT(0xd3, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0x1f, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x83, gbc.l());
        EXPECT(0xdaa9, gbc.sp());
        EXPECT(0x6330, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0295
        gbc.setState(0x3eaa, 0xe457, 0x730, 0x5768, 0xabbe, 0x2882, 0x1, 0x0);
        gbc.writeMem(0x3eaa, { 0x7a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0x57, gbc.b());
        EXPECT(0x68, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x82, gbc.l());
        EXPECT(0xe457, gbc.sp());
        EXPECT(0x3eab, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0296
        gbc.setState(0x33fa, 0x2858, 0xef50, 0x5439, 0xa043, 0x5d49, 0x0, 0x0);
        gbc.writeMem(0x33fa, { 0x7a });
        gbc.step();
        EXPECT(0xa0, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0xa0, gbc.d());
        EXPECT(0x43, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x2858, gbc.sp());
        EXPECT(0x33fb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0297
        gbc.setState(0xd1ca, 0x4e, 0x2830, 0x1cf1, 0x7f6f, 0xb0d4, 0x0, 0x1);
        gbc.writeMem(0xd1ca, { 0x7a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0xf1, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0x6f, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xd4, gbc.l());
        EXPECT(0x4e, gbc.sp());
        EXPECT(0xd1cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd1ca));
        // 7A 0298
        gbc.setState(0xc043, 0x39a1, 0xe2f0, 0x4542, 0x7918, 0x7a72, 0x0, 0x0);
        gbc.writeMem(0xc043, { 0x7a });
        gbc.step();
        EXPECT(0x79, gbc.a());
        EXPECT(0x45, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x79, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x39a1, gbc.sp());
        EXPECT(0xc044, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc043));
        // 7A 0299
        gbc.setState(0x9aae, 0xa1b5, 0x6e50, 0xd5d5, 0x121, 0x7b9, 0x1, 0x1);
        gbc.writeMem(0x9aae, { 0x7a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xd5, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x21, gbc.e());
        EXPECT(0x7, gbc.h());
        EXPECT(0xb9, gbc.l());
        EXPECT(0xa1b5, gbc.sp());
        EXPECT(0x9aaf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9aae));
        // 7A 029A
        gbc.setState(0x542a, 0xc342, 0xe9f0, 0x3c87, 0x2180, 0x506e, 0x1, 0x0);
        gbc.writeMem(0x542a, { 0x7a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x80, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0x6e, gbc.l());
        EXPECT(0xc342, gbc.sp());
        EXPECT(0x542b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 029B
        gbc.setState(0xde07, 0xe65, 0xd2b0, 0x7a17, 0xb4c2, 0x50d8, 0x1, 0x1);
        gbc.writeMem(0xde07, { 0x7a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xe65, gbc.sp());
        EXPECT(0xde08, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xde07));
        // 7A 029C
        gbc.setState(0x910a, 0x7e24, 0xa0, 0x9be4, 0xb3e9, 0x7e4b, 0x1, 0x1);
        gbc.writeMem(0x910a, { 0x7a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xe9, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x4b, gbc.l());
        EXPECT(0x7e24, gbc.sp());
        EXPECT(0x910b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x910a));
        // 7A 029D
        gbc.setState(0x12a2, 0xa618, 0xce70, 0xdf33, 0x6433, 0x380d, 0x0, 0x0);
        gbc.writeMem(0x12a2, { 0x7a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xdf, gbc.b());
        EXPECT(0x33, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xa618, gbc.sp());
        EXPECT(0x12a3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 029E
        gbc.setState(0x9869, 0x2f29, 0xcb30, 0x1c13, 0xcfe, 0x2c7f, 0x1, 0x0);
        gbc.writeMem(0x9869, { 0x7a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xfe, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x2f29, gbc.sp());
        EXPECT(0x986a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9869));
        // 7A 029F
        gbc.setState(0x86d7, 0x1263, 0xfef0, 0x7910, 0xc97f, 0x887a, 0x1, 0x1);
        gbc.writeMem(0x86d7, { 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x7a, gbc.l());
        EXPECT(0x1263, gbc.sp());
        EXPECT(0x86d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x86d7));
        // 7A 02A1
        gbc.setState(0x7399, 0x23d9, 0x88a0, 0xecc4, 0x59ee, 0xaa9c, 0x0, 0x1);
        gbc.writeMem(0x7399, { 0x7a });
        gbc.step();
        EXPECT(0x59, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x59, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0x9c, gbc.l());
        EXPECT(0x23d9, gbc.sp());
        EXPECT(0x739a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02A2
        gbc.setState(0x9edc, 0x5676, 0x82c0, 0xe0a1, 0xff89, 0xddc2, 0x0, 0x1);
        gbc.writeMem(0x9edc, { 0x7a });
        gbc.step();
        EXPECT(0xff, gbc.a());
        EXPECT(0xe0, gbc.b());
        EXPECT(0xa1, gbc.c());
        EXPECT(0xff, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0x5676, gbc.sp());
        EXPECT(0x9edd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9edc));
        // 7A 02A3
        gbc.setState(0xd25e, 0x1604, 0x95e0, 0x8583, 0xc974, 0xc920, 0x1, 0x1);
        gbc.writeMem(0xd25e, { 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x85, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0x20, gbc.l());
        EXPECT(0x1604, gbc.sp());
        EXPECT(0xd25f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd25e));
        // 7A 02A4
        gbc.setState(0x178d, 0xf230, 0xbdf0, 0x89a9, 0xbdf4, 0xadbc, 0x0, 0x0);
        gbc.writeMem(0x178d, { 0x7a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbc, gbc.l());
        EXPECT(0xf230, gbc.sp());
        EXPECT(0x178e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02A5
        gbc.setState(0x6ad2, 0xa337, 0x5590, 0x1ef6, 0xba71, 0x2ce1, 0x0, 0x1);
        gbc.writeMem(0x6ad2, { 0x7a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1e, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xa337, gbc.sp());
        EXPECT(0x6ad3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02A6
        gbc.setState(0xeb6c, 0x9792, 0x2070, 0x8bbc, 0xfa31, 0x7591, 0x0, 0x1);
        gbc.writeMem(0xeb6c, { 0x7a });
        gbc.step();
        EXPECT(0xfa, gbc.a());
        EXPECT(0x8b, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0xfa, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9792, gbc.sp());
        EXPECT(0xeb6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xeb6c));
        // 7A 02A7
        gbc.setState(0xb95a, 0xb5c4, 0x4eb0, 0x6fde, 0x7c16, 0x8a04, 0x1, 0x1);
        gbc.writeMem(0xb95a, { 0x7a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0x6f, gbc.b());
        EXPECT(0xde, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x8a, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xb5c4, gbc.sp());
        EXPECT(0xb95b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb95a));
        // 7A 02A8
        gbc.setState(0x21e8, 0xd02f, 0x55e0, 0xfb7c, 0xc4a, 0xaba0, 0x0, 0x1);
        gbc.writeMem(0x21e8, { 0x7a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x7c, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0x4a, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xd02f, gbc.sp());
        EXPECT(0x21e9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02A9
        gbc.setState(0xbec7, 0x35a, 0x53e0, 0x6738, 0xf07a, 0xb49e, 0x0, 0x0);
        gbc.writeMem(0xbec7, { 0x7a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x67, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x35a, gbc.sp());
        EXPECT(0xbec8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbec7));
        // 7A 02AA
        gbc.setState(0x1107, 0x6f91, 0x7030, 0x158b, 0x335a, 0xbeaa, 0x1, 0x0);
        gbc.writeMem(0x1107, { 0x7a });
        gbc.step();
        EXPECT(0x33, gbc.a());
        EXPECT(0x15, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x33, gbc.d());
        EXPECT(0x5a, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x6f91, gbc.sp());
        EXPECT(0x1108, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02AB
        gbc.setState(0x7fa3, 0xaef7, 0xd090, 0xf764, 0x7556, 0x61dc, 0x0, 0x0);
        gbc.writeMem(0x7fa3, { 0x7a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0x64, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xaef7, gbc.sp());
        EXPECT(0x7fa4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02AC
        gbc.setState(0x9f8a, 0xc49e, 0x1310, 0x98d2, 0x2495, 0x830b, 0x1, 0x0);
        gbc.writeMem(0x9f8a, { 0x7a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x98, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xb, gbc.l());
        EXPECT(0xc49e, gbc.sp());
        EXPECT(0x9f8b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9f8a));
        // 7A 02AD
        gbc.setState(0x6fef, 0xf4ef, 0xfad0, 0x548a, 0xd74e, 0x5890, 0x0, 0x1);
        gbc.writeMem(0x6fef, { 0x7a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x90, gbc.l());
        EXPECT(0xf4ef, gbc.sp());
        EXPECT(0x6ff0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02AE
        gbc.setState(0x4276, 0xefa2, 0xa300, 0xaed, 0x549c, 0x2ca3, 0x0, 0x0);
        gbc.writeMem(0x4276, { 0x7a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0xa, gbc.b());
        EXPECT(0xed, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0xefa2, gbc.sp());
        EXPECT(0x4277, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02AF
        gbc.setState(0x50f7, 0xd897, 0xf090, 0x48d3, 0xafd1, 0x4a34, 0x0, 0x1);
        gbc.writeMem(0x50f7, { 0x7a });
        gbc.step();
        EXPECT(0xaf, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0xaf, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0x4a, gbc.h());
        EXPECT(0x34, gbc.l());
        EXPECT(0xd897, gbc.sp());
        EXPECT(0x50f8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02B0
        gbc.setState(0x78ff, 0x5a59, 0xbaa0, 0x94c7, 0x9f8d, 0x2044, 0x0, 0x1);
        gbc.writeMem(0x78ff, { 0x7a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0x94, gbc.b());
        EXPECT(0xc7, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x8d, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x5a59, gbc.sp());
        EXPECT(0x7900, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02B1
        gbc.setState(0xedea, 0xb5e6, 0x83a0, 0xcaa2, 0xc4c0, 0xff42, 0x1, 0x1);
        gbc.writeMem(0xedea, { 0x7a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xa2, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x42, gbc.l());
        EXPECT(0xb5e6, gbc.sp());
        EXPECT(0xedeb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xedea));
        // 7A 02B2
        gbc.setState(0x5799, 0xc7da, 0x7720, 0x4dbe, 0xe14, 0x45d3, 0x0, 0x0);
        gbc.writeMem(0x5799, { 0x7a });
        gbc.step();
        EXPECT(0xe, gbc.a());
        EXPECT(0x4d, gbc.b());
        EXPECT(0xbe, gbc.c());
        EXPECT(0xe, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0xd3, gbc.l());
        EXPECT(0xc7da, gbc.sp());
        EXPECT(0x579a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02B3
        gbc.setState(0x3fba, 0xf009, 0xb4d0, 0xe11a, 0x43c8, 0xb88e, 0x0, 0x0);
        gbc.writeMem(0x3fba, { 0x7a });
        gbc.step();
        EXPECT(0x43, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x43, gbc.d());
        EXPECT(0xc8, gbc.e());
        EXPECT(0xb8, gbc.h());
        EXPECT(0x8e, gbc.l());
        EXPECT(0xf009, gbc.sp());
        EXPECT(0x3fbb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02B5
        gbc.setState(0xbeb3, 0x1958, 0xc050, 0x33f2, 0x6009, 0x73a8, 0x1, 0x1);
        gbc.writeMem(0xbeb3, { 0x7a });
        gbc.step();
        EXPECT(0x60, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0x60, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x1958, gbc.sp());
        EXPECT(0xbeb4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbeb3));
        // 7A 02B6
        gbc.setState(0xc614, 0x83f6, 0xb8d0, 0x2fba, 0xf736, 0x7852, 0x1, 0x0);
        gbc.writeMem(0xc614, { 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0x83f6, gbc.sp());
        EXPECT(0xc615, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc614));
        // 7A 02B7
        gbc.setState(0x2c55, 0x9ab, 0x9670, 0x7fae, 0xd5b1, 0xf16d, 0x1, 0x1);
        gbc.writeMem(0x2c55, { 0x7a });
        gbc.step();
        EXPECT(0xd5, gbc.a());
        EXPECT(0x7f, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xd5, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0xf1, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x9ab, gbc.sp());
        EXPECT(0x2c56, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02B8
        gbc.setState(0x60f6, 0x968a, 0x81f0, 0xa9d6, 0xad1b, 0xc4f8, 0x0, 0x1);
        gbc.writeMem(0x60f6, { 0x7a });
        gbc.step();
        EXPECT(0xad, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0xd6, gbc.c());
        EXPECT(0xad, gbc.d());
        EXPECT(0x1b, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x968a, gbc.sp());
        EXPECT(0x60f7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02B9
        gbc.setState(0x3904, 0x3caa, 0xcbb0, 0xaefb, 0x6575, 0x908a, 0x0, 0x0);
        gbc.writeMem(0x3904, { 0x7a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xae, gbc.b());
        EXPECT(0xfb, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x8a, gbc.l());
        EXPECT(0x3caa, gbc.sp());
        EXPECT(0x3905, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02BA
        gbc.setState(0x7579, 0x9845, 0x6420, 0x8312, 0xd982, 0x2f09, 0x0, 0x1);
        gbc.writeMem(0x7579, { 0x7a });
        gbc.step();
        EXPECT(0xd9, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0xd9, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0x9, gbc.l());
        EXPECT(0x9845, gbc.sp());
        EXPECT(0x757a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02BB
        gbc.setState(0x3f88, 0xee4a, 0xa840, 0x3062, 0x4acb, 0xa0a0, 0x0, 0x0);
        gbc.writeMem(0x3f88, { 0x7a });
        gbc.step();
        EXPECT(0x4a, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x62, gbc.c());
        EXPECT(0x4a, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0xee4a, gbc.sp());
        EXPECT(0x3f89, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02BC
        gbc.setState(0x4dd2, 0x7a4, 0xe670, 0xb8f2, 0xb453, 0x288f, 0x1, 0x1);
        gbc.writeMem(0x4dd2, { 0x7a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xf2, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0x28, gbc.h());
        EXPECT(0x8f, gbc.l());
        EXPECT(0x7a4, gbc.sp());
        EXPECT(0x4dd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02BD
        gbc.setState(0xb6e8, 0xdbc9, 0xa4e0, 0x1689, 0x82f9, 0x589f, 0x1, 0x1);
        gbc.writeMem(0xb6e8, { 0x7a });
        gbc.step();
        EXPECT(0x82, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x82, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xdbc9, gbc.sp());
        EXPECT(0xb6e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb6e8));
        // 7A 02BE
        gbc.setState(0xcead, 0xf1b3, 0x3c80, 0x2d9e, 0x3801, 0xef21, 0x1, 0x1);
        gbc.writeMem(0xcead, { 0x7a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x9e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0xef, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xf1b3, gbc.sp());
        EXPECT(0xceae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcead));
        // 7A 02BF
        gbc.setState(0x40d4, 0xe7cc, 0xd810, 0x5044, 0xa4fa, 0xe9ff, 0x1, 0x0);
        gbc.writeMem(0x40d4, { 0x7a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0x44, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0xe7cc, gbc.sp());
        EXPECT(0x40d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02C0
        gbc.setState(0xad66, 0xfb1b, 0xba50, 0x3690, 0x83ee, 0xfb11, 0x1, 0x1);
        gbc.writeMem(0xad66, { 0x7a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x90, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xfb1b, gbc.sp());
        EXPECT(0xad67, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xad66));
        // 7A 02C1
        gbc.setState(0x89ea, 0x1cea, 0xc660, 0x323c, 0x7dac, 0x4caa, 0x1, 0x1);
        gbc.writeMem(0x89ea, { 0x7a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x32, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x1cea, gbc.sp());
        EXPECT(0x89eb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x89ea));
        // 7A 02C2
        gbc.setState(0x8b84, 0x9160, 0x8c0, 0x39e8, 0xb3cb, 0xa330, 0x1, 0x1);
        gbc.writeMem(0x8b84, { 0x7a });
        gbc.step();
        EXPECT(0xb3, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xb3, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x30, gbc.l());
        EXPECT(0x9160, gbc.sp());
        EXPECT(0x8b85, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8b84));
        // 7A 02C3
        gbc.setState(0xccbe, 0x87f0, 0x1b60, 0x3383, 0x26b4, 0x8dc9, 0x1, 0x0);
        gbc.writeMem(0xccbe, { 0x7a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x33, gbc.b());
        EXPECT(0x83, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0x87f0, gbc.sp());
        EXPECT(0xccbf, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xccbe));
        // 7A 02C4
        gbc.setState(0x91fd, 0xa50f, 0x2360, 0x30e0, 0xdeee, 0xd15a, 0x0, 0x1);
        gbc.writeMem(0x91fd, { 0x7a });
        gbc.step();
        EXPECT(0xde, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0xde, gbc.d());
        EXPECT(0xee, gbc.e());
        EXPECT(0xd1, gbc.h());
        EXPECT(0x5a, gbc.l());
        EXPECT(0xa50f, gbc.sp());
        EXPECT(0x91fe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x91fd));
        // 7A 02C5
        gbc.setState(0x452a, 0x194c, 0xd970, 0xb213, 0xa4dd, 0x9115, 0x0, 0x1);
        gbc.writeMem(0x452a, { 0x7a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x194c, gbc.sp());
        EXPECT(0x452b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02C6
        gbc.setState(0x3af0, 0xdd75, 0xcc60, 0xb1d4, 0xee1d, 0x17fe, 0x1, 0x0);
        gbc.writeMem(0x3af0, { 0x7a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x17, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0xdd75, gbc.sp());
        EXPECT(0x3af1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02C7
        gbc.setState(0x108, 0x2317, 0x4840, 0x31fa, 0xc913, 0x3c14, 0x1, 0x1);
        gbc.writeMem(0x108, { 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x3c, gbc.h());
        EXPECT(0x14, gbc.l());
        EXPECT(0x2317, gbc.sp());
        EXPECT(0x109, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02C8
        gbc.setState(0x3741, 0x38b2, 0x4030, 0x8404, 0x4d18, 0xa70a, 0x1, 0x1);
        gbc.writeMem(0x3741, { 0x7a });
        gbc.step();
        EXPECT(0x4d, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0x4d, gbc.d());
        EXPECT(0x18, gbc.e());
        EXPECT(0xa7, gbc.h());
        EXPECT(0xa, gbc.l());
        EXPECT(0x38b2, gbc.sp());
        EXPECT(0x3742, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02C9
        gbc.setState(0x6a5e, 0x9816, 0x4ae0, 0xf5b9, 0x5b9a, 0x16a3, 0x0, 0x1);
        gbc.writeMem(0x6a5e, { 0x7a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0x16, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x9816, gbc.sp());
        EXPECT(0x6a5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02CA
        gbc.setState(0x506a, 0x83cd, 0xc8d0, 0x1ff7, 0xba2d, 0x69c4, 0x1, 0x1);
        gbc.writeMem(0x506a, { 0x7a });
        gbc.step();
        EXPECT(0xba, gbc.a());
        EXPECT(0x1f, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0xba, gbc.d());
        EXPECT(0x2d, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xc4, gbc.l());
        EXPECT(0x83cd, gbc.sp());
        EXPECT(0x506b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02CB
        gbc.setState(0x312a, 0xf158, 0xec20, 0x97b2, 0x5cce, 0x6fbf, 0x0, 0x0);
        gbc.writeMem(0x312a, { 0x7a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0xf158, gbc.sp());
        EXPECT(0x312b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02CC
        gbc.setState(0xd4e0, 0xf80a, 0x65f0, 0x70eb, 0xdc20, 0x7dfc, 0x0, 0x0);
        gbc.writeMem(0xd4e0, { 0x7a });
        gbc.step();
        EXPECT(0xdc, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0xdc, gbc.d());
        EXPECT(0x20, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xfc, gbc.l());
        EXPECT(0xf80a, gbc.sp());
        EXPECT(0xd4e1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd4e0));
        // 7A 02CD
        gbc.setState(0x5568, 0x727a, 0x88a0, 0x3d7d, 0xd1a5, 0xbcd8, 0x1, 0x0);
        gbc.writeMem(0x5568, { 0x7a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0x727a, gbc.sp());
        EXPECT(0x5569, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02CE
        gbc.setState(0x30c7, 0x1e59, 0x1780, 0x643c, 0x86ed, 0xfda9, 0x1, 0x0);
        gbc.writeMem(0x30c7, { 0x7a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x64, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xa9, gbc.l());
        EXPECT(0x1e59, gbc.sp());
        EXPECT(0x30c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02CF
        gbc.setState(0xdce9, 0x7d23, 0xb980, 0x5ad2, 0x11c4, 0xa4cc, 0x0, 0x0);
        gbc.writeMem(0xdce9, { 0x7a });
        gbc.step();
        EXPECT(0x11, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x11, gbc.d());
        EXPECT(0xc4, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0x7d23, gbc.sp());
        EXPECT(0xdcea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdce9));
        // 7A 02D0
        gbc.setState(0x38a0, 0x1be8, 0x54a0, 0xbae4, 0xa31d, 0x1c2a, 0x0, 0x1);
        gbc.writeMem(0x38a0, { 0x7a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xe4, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x1be8, gbc.sp());
        EXPECT(0x38a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02D1
        gbc.setState(0x1839, 0x8510, 0xab60, 0x916a, 0x5054, 0xe0ae, 0x0, 0x1);
        gbc.writeMem(0x1839, { 0x7a });
        gbc.step();
        EXPECT(0x50, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x50, gbc.d());
        EXPECT(0x54, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0xae, gbc.l());
        EXPECT(0x8510, gbc.sp());
        EXPECT(0x183a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02D2
        gbc.setState(0xa5bf, 0x7fe9, 0xd730, 0xbfcd, 0xd89c, 0x6c1d, 0x1, 0x0);
        gbc.writeMem(0xa5bf, { 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xbf, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x6c, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0x7fe9, gbc.sp());
        EXPECT(0xa5c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa5bf));
        // 7A 02D3
        gbc.setState(0xb40e, 0xc038, 0x5710, 0x5fa4, 0xd774, 0x3251, 0x0, 0x1);
        gbc.writeMem(0xb40e, { 0x7a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0x5f, gbc.b());
        EXPECT(0xa4, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x74, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0xc038, gbc.sp());
        EXPECT(0xb40f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb40e));
        // 7A 02D4
        gbc.setState(0x347c, 0x7b64, 0x7830, 0xf531, 0x5f73, 0x4b53, 0x1, 0x0);
        gbc.writeMem(0x347c, { 0x7a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xf5, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x73, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0x7b64, gbc.sp());
        EXPECT(0x347d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02D6
        gbc.setState(0x3a56, 0x38a5, 0xb770, 0xb2a7, 0x61dc, 0xd9f, 0x1, 0x0);
        gbc.writeMem(0x3a56, { 0x7a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0xb2, gbc.b());
        EXPECT(0xa7, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0x38a5, gbc.sp());
        EXPECT(0x3a57, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02D7
        gbc.setState(0xb1f9, 0xafe7, 0xb910, 0x1c59, 0x4ed, 0x1043, 0x1, 0x0);
        gbc.writeMem(0xb1f9, { 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0x1c, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0xed, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0x43, gbc.l());
        EXPECT(0xafe7, gbc.sp());
        EXPECT(0xb1fa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb1f9));
        // 7A 02D9
        gbc.setState(0x7d95, 0xcf69, 0xfb50, 0x82f4, 0x31ab, 0x3464, 0x0, 0x1);
        gbc.writeMem(0x7d95, { 0x7a });
        gbc.step();
        EXPECT(0x31, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0xf4, gbc.c());
        EXPECT(0x31, gbc.d());
        EXPECT(0xab, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xcf69, gbc.sp());
        EXPECT(0x7d96, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02DA
        gbc.setState(0x5201, 0x79d1, 0xfeb0, 0xd104, 0xfeaa, 0xfdde, 0x0, 0x0);
        gbc.writeMem(0x5201, { 0x7a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xd1, gbc.b());
        EXPECT(0x4, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xaa, gbc.e());
        EXPECT(0xfd, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0x79d1, gbc.sp());
        EXPECT(0x5202, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02DB
        gbc.setState(0x7ebd, 0x6743, 0x4e60, 0x8948, 0xda0, 0xdfd9, 0x0, 0x1);
        gbc.writeMem(0x7ebd, { 0x7a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xa0, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0xd9, gbc.l());
        EXPECT(0x6743, gbc.sp());
        EXPECT(0x7ebe, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02DC
        gbc.setState(0x29bb, 0x963c, 0x8df0, 0xd41c, 0xcfb1, 0x8945, 0x1, 0x0);
        gbc.writeMem(0x29bb, { 0x7a });
        gbc.step();
        EXPECT(0xcf, gbc.a());
        EXPECT(0xd4, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0xcf, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x45, gbc.l());
        EXPECT(0x963c, gbc.sp());
        EXPECT(0x29bc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02DD
        gbc.setState(0xee30, 0xd71, 0x9d90, 0x498d, 0x2602, 0xd663, 0x0, 0x1);
        gbc.writeMem(0xee30, { 0x7a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd6, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xd71, gbc.sp());
        EXPECT(0xee31, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xee30));
        // 7A 02DE
        gbc.setState(0xe093, 0x8023, 0xf540, 0x69cd, 0xf740, 0x2e39, 0x1, 0x0);
        gbc.writeMem(0xe093, { 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0xcd, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x40, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x8023, gbc.sp());
        EXPECT(0xe094, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe093));
        // 7A 02E0
        gbc.setState(0xe0d7, 0xe9ac, 0x3f70, 0x6870, 0xa713, 0x5da7, 0x0, 0x0);
        gbc.writeMem(0xe0d7, { 0x7a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0x68, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0xe9ac, gbc.sp());
        EXPECT(0xe0d8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe0d7));
        // 7A 02E1
        gbc.setState(0x5876, 0x1c9, 0xa2b0, 0x1497, 0xbda3, 0x68a3, 0x0, 0x1);
        gbc.writeMem(0x5876, { 0x7a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x1c9, gbc.sp());
        EXPECT(0x5877, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02E2
        gbc.setState(0x555f, 0x1ce6, 0xa5c0, 0xc5e, 0x4f38, 0xe4d2, 0x1, 0x0);
        gbc.writeMem(0x555f, { 0x7a });
        gbc.step();
        EXPECT(0x4f, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x4f, gbc.d());
        EXPECT(0x38, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0x1ce6, gbc.sp());
        EXPECT(0x5560, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02E3
        gbc.setState(0xddf3, 0x9402, 0x2090, 0x4c9f, 0x4506, 0x8587, 0x0, 0x0);
        gbc.writeMem(0xddf3, { 0x7a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0x9f, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x6, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x87, gbc.l());
        EXPECT(0x9402, gbc.sp());
        EXPECT(0xddf4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xddf3));
        // 7A 02E4
        gbc.setState(0x8105, 0x50b2, 0xb770, 0x853, 0xfc99, 0xd09a, 0x0, 0x0);
        gbc.writeMem(0x8105, { 0x7a });
        gbc.step();
        EXPECT(0xfc, gbc.a());
        EXPECT(0x8, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0xfc, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x9a, gbc.l());
        EXPECT(0x50b2, gbc.sp());
        EXPECT(0x8106, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8105));
        // 7A 02E5
        gbc.setState(0x9e5f, 0x2e8a, 0x7470, 0x2f43, 0xcee0, 0xdedd, 0x0, 0x0);
        gbc.writeMem(0x9e5f, { 0x7a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x2f, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x2e8a, gbc.sp());
        EXPECT(0x9e60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9e5f));
        // 7A 02E6
        gbc.setState(0x1b96, 0xd640, 0x65b0, 0xe43d, 0x3b4d, 0xf598, 0x1, 0x1);
        gbc.writeMem(0x1b96, { 0x7a });
        gbc.step();
        EXPECT(0x3b, gbc.a());
        EXPECT(0xe4, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0x3b, gbc.d());
        EXPECT(0x4d, gbc.e());
        EXPECT(0xf5, gbc.h());
        EXPECT(0x98, gbc.l());
        EXPECT(0xd640, gbc.sp());
        EXPECT(0x1b97, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02E7
        gbc.setState(0x47d9, 0x704c, 0x55e0, 0x9a38, 0x4999, 0x9950, 0x1, 0x1);
        gbc.writeMem(0x47d9, { 0x7a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x704c, gbc.sp());
        EXPECT(0x47da, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02E8
        gbc.setState(0x14e2, 0x525f, 0xfc00, 0xb526, 0xf26e, 0xd246, 0x1, 0x0);
        gbc.writeMem(0x14e2, { 0x7a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0xd2, gbc.h());
        EXPECT(0x46, gbc.l());
        EXPECT(0x525f, gbc.sp());
        EXPECT(0x14e3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02E9
        gbc.setState(0xdf4c, 0xc46e, 0xf580, 0x7935, 0xaaa2, 0xd7f0, 0x1, 0x0);
        gbc.writeMem(0xdf4c, { 0x7a });
        gbc.step();
        EXPECT(0xaa, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0xaa, gbc.d());
        EXPECT(0xa2, gbc.e());
        EXPECT(0xd7, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0xc46e, gbc.sp());
        EXPECT(0xdf4d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdf4c));
        // 7A 02EA
        gbc.setState(0x41f4, 0xd117, 0x3940, 0xceca, 0xec92, 0x5244, 0x1, 0x0);
        gbc.writeMem(0x41f4, { 0x7a });
        gbc.step();
        EXPECT(0xec, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0xec, gbc.d());
        EXPECT(0x92, gbc.e());
        EXPECT(0x52, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0xd117, gbc.sp());
        EXPECT(0x41f5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02EB
        gbc.setState(0xe6, 0x3e1f, 0x5560, 0xf3b5, 0xa7bf, 0xdc6b, 0x0, 0x0);
        gbc.writeMem(0xe6, { 0x7a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xf3, gbc.b());
        EXPECT(0xb5, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xdc, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x3e1f, gbc.sp());
        EXPECT(0xe7, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02EC
        gbc.setState(0x8a5f, 0x2e81, 0x1e20, 0x6dd2, 0x54d9, 0xdf2b, 0x0, 0x0);
        gbc.writeMem(0x8a5f, { 0x7a });
        gbc.step();
        EXPECT(0x54, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x54, gbc.d());
        EXPECT(0xd9, gbc.e());
        EXPECT(0xdf, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0x2e81, gbc.sp());
        EXPECT(0x8a60, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8a5f));
        // 7A 02ED
        gbc.setState(0x8c70, 0xd015, 0x9d20, 0xfc53, 0x8df5, 0xdeb6, 0x1, 0x0);
        gbc.writeMem(0x8c70, { 0x7a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0xde, gbc.h());
        EXPECT(0xb6, gbc.l());
        EXPECT(0xd015, gbc.sp());
        EXPECT(0x8c71, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8c70));
        // 7A 02EE
        gbc.setState(0x775f, 0x52d3, 0x8ef0, 0x3d09, 0xd167, 0x59f1, 0x0, 0x0);
        gbc.writeMem(0x775f, { 0x7a });
        gbc.step();
        EXPECT(0xd1, gbc.a());
        EXPECT(0x3d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd1, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x59, gbc.h());
        EXPECT(0xf1, gbc.l());
        EXPECT(0x52d3, gbc.sp());
        EXPECT(0x7760, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02EF
        gbc.setState(0xcd1b, 0x3a7f, 0xc960, 0xfa16, 0xa283, 0x7a73, 0x0, 0x0);
        gbc.writeMem(0xcd1b, { 0x7a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x73, gbc.l());
        EXPECT(0x3a7f, gbc.sp());
        EXPECT(0xcd1c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcd1b));
        // 7A 02F0
        gbc.setState(0x681c, 0x5081, 0x4540, 0x49fa, 0x9634, 0x5a38, 0x1, 0x0);
        gbc.writeMem(0x681c, { 0x7a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x5081, gbc.sp());
        EXPECT(0x681d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02F1
        gbc.setState(0x8b14, 0xde53, 0x32f0, 0x9ebf, 0x7ee3, 0x81e9, 0x0, 0x1);
        gbc.writeMem(0x8b14, { 0x7a });
        gbc.step();
        EXPECT(0x7e, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xbf, gbc.c());
        EXPECT(0x7e, gbc.d());
        EXPECT(0xe3, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xe9, gbc.l());
        EXPECT(0xde53, gbc.sp());
        EXPECT(0x8b15, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8b14));
        // 7A 02F2
        gbc.setState(0x54d2, 0x58b1, 0xb730, 0xf2d2, 0x9f79, 0x69cd, 0x1, 0x1);
        gbc.writeMem(0x54d2, { 0x7a });
        gbc.step();
        EXPECT(0x9f, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xd2, gbc.c());
        EXPECT(0x9f, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x58b1, gbc.sp());
        EXPECT(0x54d3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02F3
        gbc.setState(0x62df, 0x405d, 0x8e10, 0xf632, 0xe164, 0x51fb, 0x0, 0x0);
        gbc.writeMem(0x62df, { 0x7a });
        gbc.step();
        EXPECT(0xe1, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0xe1, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x51, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0x405d, gbc.sp());
        EXPECT(0x62e0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02F4
        gbc.setState(0x101f, 0xb0f1, 0xb00, 0xaab6, 0x7590, 0x6ab, 0x0, 0x1);
        gbc.writeMem(0x101f, { 0x7a });
        gbc.step();
        EXPECT(0x75, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xb6, gbc.c());
        EXPECT(0x75, gbc.d());
        EXPECT(0x90, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0xab, gbc.l());
        EXPECT(0xb0f1, gbc.sp());
        EXPECT(0x1020, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02F5
        gbc.setState(0x716b, 0x5df5, 0x19b0, 0x71c9, 0x2313, 0xad2c, 0x0, 0x0);
        gbc.writeMem(0x716b, { 0x7a });
        gbc.step();
        EXPECT(0x23, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x23, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x5df5, gbc.sp());
        EXPECT(0x716c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02F6
        gbc.setState(0xd01c, 0xa569, 0xb080, 0xd86, 0x4ce0, 0x7a81, 0x1, 0x0);
        gbc.writeMem(0xd01c, { 0x7a });
        gbc.step();
        EXPECT(0x4c, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0x86, gbc.c());
        EXPECT(0x4c, gbc.d());
        EXPECT(0xe0, gbc.e());
        EXPECT(0x7a, gbc.h());
        EXPECT(0x81, gbc.l());
        EXPECT(0xa569, gbc.sp());
        EXPECT(0xd01d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd01c));
        // 7A 02F7
        gbc.setState(0x7938, 0xcb48, 0x73a0, 0xdad5, 0x1556, 0xf0e2, 0x1, 0x1);
        gbc.writeMem(0x7938, { 0x7a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0xe2, gbc.l());
        EXPECT(0xcb48, gbc.sp());
        EXPECT(0x7939, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02F8
        gbc.setState(0x9ceb, 0x5828, 0xc470, 0xb40c, 0x1adc, 0x75e7, 0x1, 0x0);
        gbc.writeMem(0x9ceb, { 0x7a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0x5828, gbc.sp());
        EXPECT(0x9cec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9ceb));
        // 7A 02F9
        gbc.setState(0x31b0, 0x8fbc, 0xad90, 0xdb88, 0x304b, 0x5b3c, 0x1, 0x1);
        gbc.writeMem(0x31b0, { 0x7a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0xdb, gbc.b());
        EXPECT(0x88, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0x4b, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x3c, gbc.l());
        EXPECT(0x8fbc, gbc.sp());
        EXPECT(0x31b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02FA
        gbc.setState(0x4fdd, 0xaa2a, 0xa9b0, 0xcc94, 0xdb5b, 0x77f9, 0x1, 0x1);
        gbc.writeMem(0x4fdd, { 0x7a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xcc, gbc.b());
        EXPECT(0x94, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0xaa2a, gbc.sp());
        EXPECT(0x4fde, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 02FB
        gbc.setState(0xeae3, 0xc97a, 0xc7d0, 0x3cec, 0x459e, 0x1322, 0x1, 0x0);
        gbc.writeMem(0xeae3, { 0x7a });
        gbc.step();
        EXPECT(0x45, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0x45, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x22, gbc.l());
        EXPECT(0xc97a, gbc.sp());
        EXPECT(0xeae4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xeae3));
        // 7A 02FC
        gbc.setState(0x3167, 0xd510, 0xc0e0, 0xa2cb, 0xe5c0, 0xf450, 0x1, 0x1);
        gbc.writeMem(0x3167, { 0x7a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa2, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0xc0, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0xd510, gbc.sp());
        EXPECT(0x3168, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 02FD
        gbc.setState(0xcc20, 0xe53, 0x7930, 0x8ffe, 0xa824, 0xa367, 0x1, 0x0);
        gbc.writeMem(0xcc20, { 0x7a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0xfe, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0x24, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0xe53, gbc.sp());
        EXPECT(0xcc21, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcc20));
        // 7A 02FE
        gbc.setState(0x8eb8, 0x3e75, 0xf400, 0x9bb3, 0x5d82, 0x9458, 0x0, 0x1);
        gbc.writeMem(0x8eb8, { 0x7a });
        gbc.step();
        EXPECT(0x5d, gbc.a());
        EXPECT(0x9b, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0x5d, gbc.d());
        EXPECT(0x82, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x3e75, gbc.sp());
        EXPECT(0x8eb9, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8eb8));
        // 7A 02FF
        gbc.setState(0x83cb, 0x3a00, 0xc360, 0xc269, 0x9d39, 0x7ca8, 0x1, 0x1);
        gbc.writeMem(0x83cb, { 0x7a });
        gbc.step();
        EXPECT(0x9d, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0x69, gbc.c());
        EXPECT(0x9d, gbc.d());
        EXPECT(0x39, gbc.e());
        EXPECT(0x7c, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x3a00, gbc.sp());
        EXPECT(0x83cc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x83cb));
        // 7A 0300
        gbc.setState(0xae3c, 0xde1b, 0xef10, 0x6634, 0x49f0, 0x50f8, 0x0, 0x0);
        gbc.writeMem(0xae3c, { 0x7a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x66, gbc.b());
        EXPECT(0x34, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xf0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0xde1b, gbc.sp());
        EXPECT(0xae3d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xae3c));
        // 7A 0301
        gbc.setState(0x7419, 0x9301, 0x5940, 0x19d1, 0xe6f7, 0x7fdc, 0x1, 0x0);
        gbc.writeMem(0x7419, { 0x7a });
        gbc.step();
        EXPECT(0xe6, gbc.a());
        EXPECT(0x19, gbc.b());
        EXPECT(0xd1, gbc.c());
        EXPECT(0xe6, gbc.d());
        EXPECT(0xf7, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x9301, gbc.sp());
        EXPECT(0x741a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0302
        gbc.setState(0x6fd7, 0x5ece, 0x9120, 0xc8f7, 0x28fa, 0x7de0, 0x1, 0x0);
        gbc.writeMem(0x6fd7, { 0x7a });
        gbc.step();
        EXPECT(0x28, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x28, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x5ece, gbc.sp());
        EXPECT(0x6fd8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0303
        gbc.setState(0x4b4b, 0xd801, 0xb740, 0x195, 0x7d16, 0x9cf4, 0x0, 0x1);
        gbc.writeMem(0x4b4b, { 0x7a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0x1, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xf4, gbc.l());
        EXPECT(0xd801, gbc.sp());
        EXPECT(0x4b4c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0304
        gbc.setState(0x7560, 0x669b, 0x6b0, 0xe1e5, 0xdb02, 0x886b, 0x1, 0x1);
        gbc.writeMem(0x7560, { 0x7a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xe5, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0x88, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x669b, gbc.sp());
        EXPECT(0x7561, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0305
        gbc.setState(0xa14b, 0x26a3, 0x92d0, 0x2b38, 0xfbb1, 0x5d7c, 0x1, 0x1);
        gbc.writeMem(0xa14b, { 0x7a });
        gbc.step();
        EXPECT(0xfb, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x38, gbc.c());
        EXPECT(0xfb, gbc.d());
        EXPECT(0xb1, gbc.e());
        EXPECT(0x5d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x26a3, gbc.sp());
        EXPECT(0xa14c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa14b));
        // 7A 0306
        gbc.setState(0xb57c, 0x2cdb, 0x4e70, 0x86c6, 0x743c, 0x8d16, 0x0, 0x1);
        gbc.writeMem(0xb57c, { 0x7a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x86, gbc.b());
        EXPECT(0xc6, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x3c, gbc.e());
        EXPECT(0x8d, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x2cdb, gbc.sp());
        EXPECT(0xb57d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb57c));
        // 7A 0307
        gbc.setState(0xd0ca, 0x2113, 0x7850, 0xb8eb, 0x12c, 0x100e, 0x0, 0x0);
        gbc.writeMem(0xd0ca, { 0x7a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0x10, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0x2113, gbc.sp());
        EXPECT(0xd0cb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd0ca));
        // 7A 0308
        gbc.setState(0x13fa, 0x9131, 0x80e0, 0x7c54, 0x3f4c, 0x9394, 0x1, 0x1);
        gbc.writeMem(0x13fa, { 0x7a });
        gbc.step();
        EXPECT(0x3f, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x3f, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0x93, gbc.h());
        EXPECT(0x94, gbc.l());
        EXPECT(0x9131, gbc.sp());
        EXPECT(0x13fb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0309
        gbc.setState(0xaf24, 0xdcf, 0x2210, 0xe14d, 0xedc7, 0xbccf, 0x0, 0x1);
        gbc.writeMem(0xaf24, { 0x7a });
        gbc.step();
        EXPECT(0xed, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0xed, gbc.d());
        EXPECT(0xc7, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0xcf, gbc.l());
        EXPECT(0xdcf, gbc.sp());
        EXPECT(0xaf25, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xaf24));
        // 7A 030A
        gbc.setState(0x7fca, 0xdfbd, 0x60f0, 0x8354, 0x6ec2, 0x995d, 0x1, 0x0);
        gbc.writeMem(0x7fca, { 0x7a });
        gbc.step();
        EXPECT(0x6e, gbc.a());
        EXPECT(0x83, gbc.b());
        EXPECT(0x54, gbc.c());
        EXPECT(0x6e, gbc.d());
        EXPECT(0xc2, gbc.e());
        EXPECT(0x99, gbc.h());
        EXPECT(0x5d, gbc.l());
        EXPECT(0xdfbd, gbc.sp());
        EXPECT(0x7fcb, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 030B
        gbc.setState(0xcb22, 0x32af, 0x66e0, 0x9f0d, 0xfe88, 0xa1d5, 0x1, 0x1);
        gbc.writeMem(0xcb22, { 0x7a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0xa1, gbc.h());
        EXPECT(0xd5, gbc.l());
        EXPECT(0x32af, gbc.sp());
        EXPECT(0xcb23, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcb22));
        // 7A 030C
        gbc.setState(0x9496, 0xd0aa, 0xb7d0, 0x211c, 0x2198, 0x2b4d, 0x1, 0x0);
        gbc.writeMem(0x9496, { 0x7a });
        gbc.step();
        EXPECT(0x21, gbc.a());
        EXPECT(0x21, gbc.b());
        EXPECT(0x1c, gbc.c());
        EXPECT(0x21, gbc.d());
        EXPECT(0x98, gbc.e());
        EXPECT(0x2b, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xd0aa, gbc.sp());
        EXPECT(0x9497, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9496));
        // 7A 030D
        gbc.setState(0x195d, 0xee2b, 0xe580, 0xc37, 0x9c2a, 0x8f63, 0x1, 0x1);
        gbc.writeMem(0x195d, { 0x7a });
        gbc.step();
        EXPECT(0x9c, gbc.a());
        EXPECT(0xc, gbc.b());
        EXPECT(0x37, gbc.c());
        EXPECT(0x9c, gbc.d());
        EXPECT(0x2a, gbc.e());
        EXPECT(0x8f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0xee2b, gbc.sp());
        EXPECT(0x195e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 030E
        gbc.setState(0x7d41, 0xb411, 0xb3c0, 0x8232, 0x969a, 0xd5a5, 0x0, 0x1);
        gbc.writeMem(0x7d41, { 0x7a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x82, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x9a, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0xb411, gbc.sp());
        EXPECT(0x7d42, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 030F
        gbc.setState(0xe9c1, 0x1282, 0x7d20, 0xa63a, 0x189e, 0x58a5, 0x0, 0x0);
        gbc.writeMem(0xe9c1, { 0x7a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x3a, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0xa5, gbc.l());
        EXPECT(0x1282, gbc.sp());
        EXPECT(0xe9c2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe9c1));
        // 7A 0310
        gbc.setState(0xe0ad, 0xc3f9, 0xc240, 0xd9eb, 0x93a5, 0x2d52, 0x1, 0x0);
        gbc.writeMem(0xe0ad, { 0x7a });
        gbc.step();
        EXPECT(0x93, gbc.a());
        EXPECT(0xd9, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x93, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x2d, gbc.h());
        EXPECT(0x52, gbc.l());
        EXPECT(0xc3f9, gbc.sp());
        EXPECT(0xe0ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe0ad));
        // 7A 0311
        gbc.setState(0x4ec3, 0xc496, 0x4fa0, 0xded7, 0x90c5, 0x9b58, 0x0, 0x0);
        gbc.writeMem(0x4ec3, { 0x7a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0xd7, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0xc5, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0xc496, gbc.sp());
        EXPECT(0x4ec4, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0312
        gbc.setState(0x6eb7, 0xe09f, 0xab0, 0xda8d, 0x7a25, 0xca9d, 0x1, 0x0);
        gbc.writeMem(0x6eb7, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x25, gbc.e());
        EXPECT(0xca, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xe09f, gbc.sp());
        EXPECT(0x6eb8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0313
        gbc.setState(0xc920, 0xfd15, 0x3cb0, 0xfa6d, 0x5c69, 0x66fd, 0x0, 0x0);
        gbc.writeMem(0xc920, { 0x7a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xfa, gbc.b());
        EXPECT(0x6d, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x69, gbc.e());
        EXPECT(0x66, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xfd15, gbc.sp());
        EXPECT(0xc921, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc920));
        // 7A 0314
        gbc.setState(0x325d, 0xf46b, 0xc960, 0x6c3f, 0x8541, 0x8112, 0x1, 0x1);
        gbc.writeMem(0x325d, { 0x7a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x6c, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0xf46b, gbc.sp());
        EXPECT(0x325e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0315
        gbc.setState(0x7173, 0x37cf, 0xd800, 0x8839, 0x1ace, 0xff86, 0x0, 0x0);
        gbc.writeMem(0x7173, { 0x7a });
        gbc.step();
        EXPECT(0x1a, gbc.a());
        EXPECT(0x88, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x1a, gbc.d());
        EXPECT(0xce, gbc.e());
        EXPECT(0xff, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x37cf, gbc.sp());
        EXPECT(0x7174, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0316
        gbc.setState(0x49bf, 0x5d55, 0x7b10, 0xdae8, 0x9ea9, 0x3e18, 0x0, 0x1);
        gbc.writeMem(0x49bf, { 0x7a });
        gbc.step();
        EXPECT(0x9e, gbc.a());
        EXPECT(0xda, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0x9e, gbc.d());
        EXPECT(0xa9, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x5d55, gbc.sp());
        EXPECT(0x49c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0317
        gbc.setState(0x5f2f, 0x3ff6, 0xf610, 0x50b7, 0x5b89, 0xe41a, 0x1, 0x0);
        gbc.writeMem(0x5f2f, { 0x7a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x89, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x1a, gbc.l());
        EXPECT(0x3ff6, gbc.sp());
        EXPECT(0x5f30, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0319
        gbc.setState(0x50e5, 0x4c78, 0xb10, 0xadbc, 0x9056, 0x3263, 0x0, 0x0);
        gbc.writeMem(0x50e5, { 0x7a });
        gbc.step();
        EXPECT(0x90, gbc.a());
        EXPECT(0xad, gbc.b());
        EXPECT(0xbc, gbc.c());
        EXPECT(0x90, gbc.d());
        EXPECT(0x56, gbc.e());
        EXPECT(0x32, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x4c78, gbc.sp());
        EXPECT(0x50e6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 031B
        gbc.setState(0xa80d, 0xc800, 0xde30, 0xe13f, 0x2e49, 0xe9fd, 0x0, 0x0);
        gbc.writeMem(0xa80d, { 0x7a });
        gbc.step();
        EXPECT(0x2e, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x2e, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xe9, gbc.h());
        EXPECT(0xfd, gbc.l());
        EXPECT(0xc800, gbc.sp());
        EXPECT(0xa80e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa80d));
        // 7A 031C
        gbc.setState(0x1421, 0xa567, 0x2340, 0x6281, 0xce4c, 0xb52b, 0x0, 0x1);
        gbc.writeMem(0x1421, { 0x7a });
        gbc.step();
        EXPECT(0xce, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xce, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xa567, gbc.sp());
        EXPECT(0x1422, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 031D
        gbc.setState(0x2807, 0x5f27, 0x3e00, 0xf62a, 0x6f10, 0x2cf8, 0x1, 0x1);
        gbc.writeMem(0x2807, { 0x7a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x2a, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0x2c, gbc.h());
        EXPECT(0xf8, gbc.l());
        EXPECT(0x5f27, gbc.sp());
        EXPECT(0x2808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 031E
        gbc.setState(0x60df, 0x9067, 0x2b10, 0xa51b, 0x8cba, 0x7d54, 0x1, 0x1);
        gbc.writeMem(0x60df, { 0x7a });
        gbc.step();
        EXPECT(0x8c, gbc.a());
        EXPECT(0xa5, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0x8c, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x7d, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x9067, gbc.sp());
        EXPECT(0x60e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 031F
        gbc.setState(0x218a, 0x6aba, 0xf2c0, 0x694f, 0x701a, 0x78bf, 0x0, 0x0);
        gbc.writeMem(0x218a, { 0x7a });
        gbc.step();
        EXPECT(0x70, gbc.a());
        EXPECT(0x69, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x70, gbc.d());
        EXPECT(0x1a, gbc.e());
        EXPECT(0x78, gbc.h());
        EXPECT(0xbf, gbc.l());
        EXPECT(0x6aba, gbc.sp());
        EXPECT(0x218b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0320
        gbc.setState(0xcd2, 0x5922, 0x7d10, 0xaaf6, 0xfed3, 0xdb5e, 0x1, 0x1);
        gbc.writeMem(0xcd2, { 0x7a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0xf6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0x5e, gbc.l());
        EXPECT(0x5922, gbc.sp());
        EXPECT(0xcd3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0321
        gbc.setState(0xd0b5, 0x71e7, 0x4cc0, 0x26e6, 0xd00, 0xb957, 0x1, 0x0);
        gbc.writeMem(0xd0b5, { 0x7a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0x26, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0xb9, gbc.h());
        EXPECT(0x57, gbc.l());
        EXPECT(0x71e7, gbc.sp());
        EXPECT(0xd0b6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd0b5));
        // 7A 0322
        gbc.setState(0xc9d7, 0xc872, 0xbae0, 0x2d6a, 0x1b58, 0x6199, 0x1, 0x1);
        gbc.writeMem(0xc9d7, { 0x7a });
        gbc.step();
        EXPECT(0x1b, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x6a, gbc.c());
        EXPECT(0x1b, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x61, gbc.h());
        EXPECT(0x99, gbc.l());
        EXPECT(0xc872, gbc.sp());
        EXPECT(0xc9d8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc9d7));
        // 7A 0323
        gbc.setState(0xb224, 0x8738, 0xc260, 0x5135, 0x2d93, 0x8972, 0x1, 0x1);
        gbc.writeMem(0xb224, { 0x7a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x51, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x8738, gbc.sp());
        EXPECT(0xb225, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb224));
        // 7A 0324
        gbc.setState(0x5d02, 0xd9da, 0x6c50, 0xdd5, 0xd703, 0x9ee7, 0x1, 0x0);
        gbc.writeMem(0x5d02, { 0x7a });
        gbc.step();
        EXPECT(0xd7, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xd5, gbc.c());
        EXPECT(0xd7, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0x9e, gbc.h());
        EXPECT(0xe7, gbc.l());
        EXPECT(0xd9da, gbc.sp());
        EXPECT(0x5d03, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0325
        gbc.setState(0xa761, 0xc421, 0x7880, 0x4948, 0x85c3, 0x8907, 0x1, 0x1);
        gbc.writeMem(0xa761, { 0x7a });
        gbc.step();
        EXPECT(0x85, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x85, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7, gbc.l());
        EXPECT(0xc421, gbc.sp());
        EXPECT(0xa762, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa761));
        // 7A 0326
        gbc.setState(0xf8c, 0x8c5e, 0x2770, 0xa97e, 0xfdbd, 0xc3e5, 0x1, 0x0);
        gbc.writeMem(0xf8c, { 0x7a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0xa9, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0xe5, gbc.l());
        EXPECT(0x8c5e, gbc.sp());
        EXPECT(0xf8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0327
        gbc.setState(0x107c, 0xc144, 0xa060, 0xb1fa, 0xc8fc, 0x6f9f, 0x0, 0x1);
        gbc.writeMem(0x107c, { 0x7a });
        gbc.step();
        EXPECT(0xc8, gbc.a());
        EXPECT(0xb1, gbc.b());
        EXPECT(0xfa, gbc.c());
        EXPECT(0xc8, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x9f, gbc.l());
        EXPECT(0xc144, gbc.sp());
        EXPECT(0x107d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0329
        gbc.setState(0xe9d, 0xc033, 0x7af0, 0x293f, 0x1975, 0x2564, 0x1, 0x0);
        gbc.writeMem(0xe9d, { 0x7a });
        gbc.step();
        EXPECT(0x19, gbc.a());
        EXPECT(0x29, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x19, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0x25, gbc.h());
        EXPECT(0x64, gbc.l());
        EXPECT(0xc033, gbc.sp());
        EXPECT(0xe9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 032A
        gbc.setState(0xc369, 0x3fe5, 0x2a50, 0xfcd0, 0x32ca, 0xa927, 0x0, 0x1);
        gbc.writeMem(0xc369, { 0x7a });
        gbc.step();
        EXPECT(0x32, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x32, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x27, gbc.l());
        EXPECT(0x3fe5, gbc.sp());
        EXPECT(0xc36a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc369));
        // 7A 032B
        gbc.setState(0xedd6, 0xfd8b, 0x1b50, 0xf0f5, 0x8161, 0x9123, 0x1, 0x0);
        gbc.writeMem(0xedd6, { 0x7a });
        gbc.step();
        EXPECT(0x81, gbc.a());
        EXPECT(0xf0, gbc.b());
        EXPECT(0xf5, gbc.c());
        EXPECT(0x81, gbc.d());
        EXPECT(0x61, gbc.e());
        EXPECT(0x91, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0xfd8b, gbc.sp());
        EXPECT(0xedd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xedd6));
        // 7A 032C
        gbc.setState(0xe7a1, 0x4e0c, 0xf9d0, 0x4959, 0x3e99, 0x36fa, 0x0, 0x1);
        gbc.writeMem(0xe7a1, { 0x7a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x49, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x99, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0x4e0c, gbc.sp());
        EXPECT(0xe7a2, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe7a1));
        // 7A 032D
        gbc.setState(0x4d8a, 0x5d4b, 0x27e0, 0x5c97, 0xf69c, 0x4586, 0x0, 0x1);
        gbc.writeMem(0x4d8a, { 0x7a });
        gbc.step();
        EXPECT(0xf6, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x97, gbc.c());
        EXPECT(0xf6, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5d4b, gbc.sp());
        EXPECT(0x4d8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 032E
        gbc.setState(0xb778, 0xb150, 0xe620, 0x72c1, 0x52dd, 0x747f, 0x0, 0x0);
        gbc.writeMem(0xb778, { 0x7a });
        gbc.step();
        EXPECT(0x52, gbc.a());
        EXPECT(0x72, gbc.b());
        EXPECT(0xc1, gbc.c());
        EXPECT(0x52, gbc.d());
        EXPECT(0xdd, gbc.e());
        EXPECT(0x74, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xb150, gbc.sp());
        EXPECT(0xb779, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb778));
        // 7A 0330
        gbc.setState(0x5a3e, 0x7360, 0x70a0, 0xfb5e, 0x38cd, 0xec1c, 0x0, 0x1);
        gbc.writeMem(0x5a3e, { 0x7a });
        gbc.step();
        EXPECT(0x38, gbc.a());
        EXPECT(0xfb, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0x38, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0xec, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x7360, gbc.sp());
        EXPECT(0x5a3f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0331
        gbc.setState(0x77f3, 0x9ae3, 0x3220, 0xa1c0, 0xa8ff, 0x95ff, 0x1, 0x1);
        gbc.writeMem(0x77f3, { 0x7a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0xa1, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0xff, gbc.l());
        EXPECT(0x9ae3, gbc.sp());
        EXPECT(0x77f4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0332
        gbc.setState(0x1bdf, 0x7a4f, 0xa310, 0xf7ee, 0x37b4, 0xf444, 0x0, 0x1);
        gbc.writeMem(0x1bdf, { 0x7a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xf7, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x44, gbc.l());
        EXPECT(0x7a4f, gbc.sp());
        EXPECT(0x1be0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0333
        gbc.setState(0xccf0, 0x6b77, 0x5120, 0x80cb, 0xc9f4, 0xadd, 0x0, 0x0);
        gbc.writeMem(0xccf0, { 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xcb, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xa, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x6b77, gbc.sp());
        EXPECT(0xccf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xccf0));
        // 7A 0334
        gbc.setState(0xbc59, 0x3aa6, 0xf3e0, 0x3c73, 0x6b07, 0x3133, 0x1, 0x1);
        gbc.writeMem(0xbc59, { 0x7a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x3c, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x31, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x3aa6, gbc.sp());
        EXPECT(0xbc5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbc59));
        // 7A 0335
        gbc.setState(0x8bcc, 0xe751, 0x2be0, 0x9d96, 0x150, 0x467f, 0x0, 0x0);
        gbc.writeMem(0x8bcc, { 0x7a });
        gbc.step();
        EXPECT(0x1, gbc.a());
        EXPECT(0x9d, gbc.b());
        EXPECT(0x96, gbc.c());
        EXPECT(0x1, gbc.d());
        EXPECT(0x50, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0xe751, gbc.sp());
        EXPECT(0x8bcd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8bcc));
        // 7A 0336
        gbc.setState(0x5d5, 0x4689, 0xa7b0, 0x5ac8, 0x5efd, 0xd089, 0x1, 0x1);
        gbc.writeMem(0x5d5, { 0x7a });
        gbc.step();
        EXPECT(0x5e, gbc.a());
        EXPECT(0x5a, gbc.b());
        EXPECT(0xc8, gbc.c());
        EXPECT(0x5e, gbc.d());
        EXPECT(0xfd, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x4689, gbc.sp());
        EXPECT(0x5d6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0337
        gbc.setState(0x6ce2, 0x4b80, 0x5a70, 0xced3, 0x277f, 0x206b, 0x0, 0x0);
        gbc.writeMem(0x6ce2, { 0x7a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0xd3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0x7f, gbc.e());
        EXPECT(0x20, gbc.h());
        EXPECT(0x6b, gbc.l());
        EXPECT(0x4b80, gbc.sp());
        EXPECT(0x6ce3, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0338
        gbc.setState(0x55ab, 0x14e3, 0xdb40, 0xcab7, 0x4b7d, 0xe416, 0x1, 0x0);
        gbc.writeMem(0x55ab, { 0x7a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x7d, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0x16, gbc.l());
        EXPECT(0x14e3, gbc.sp());
        EXPECT(0x55ac, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0339
        gbc.setState(0x46ba, 0x733f, 0xafd0, 0x552c, 0x91ac, 0x4474, 0x0, 0x1);
        gbc.writeMem(0x46ba, { 0x7a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x2c, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0x733f, gbc.sp());
        EXPECT(0x46bb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 033A
        gbc.setState(0x18c7, 0xab8d, 0xca70, 0x814b, 0x1049, 0xf092, 0x1, 0x1);
        gbc.writeMem(0x18c7, { 0x7a });
        gbc.step();
        EXPECT(0x10, gbc.a());
        EXPECT(0x81, gbc.b());
        EXPECT(0x4b, gbc.c());
        EXPECT(0x10, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0xf0, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0xab8d, gbc.sp());
        EXPECT(0x18c8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 033B
        gbc.setState(0x6b01, 0x3dad, 0xd30, 0x5389, 0x6617, 0xbc21, 0x1, 0x1);
        gbc.writeMem(0x6b01, { 0x7a });
        gbc.step();
        EXPECT(0x66, gbc.a());
        EXPECT(0x53, gbc.b());
        EXPECT(0x89, gbc.c());
        EXPECT(0x66, gbc.d());
        EXPECT(0x17, gbc.e());
        EXPECT(0xbc, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x3dad, gbc.sp());
        EXPECT(0x6b02, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 033C
        gbc.setState(0x3884, 0x1aa7, 0x5460, 0xce21, 0xd2c3, 0x6f93, 0x1, 0x1);
        gbc.writeMem(0x3884, { 0x7a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xce, gbc.b());
        EXPECT(0x21, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xc3, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x1aa7, gbc.sp());
        EXPECT(0x3885, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 033D
        gbc.setState(0x6966, 0x3d43, 0x3de0, 0x9731, 0xee5b, 0xda54, 0x1, 0x0);
        gbc.writeMem(0x6966, { 0x7a });
        gbc.step();
        EXPECT(0xee, gbc.a());
        EXPECT(0x97, gbc.b());
        EXPECT(0x31, gbc.c());
        EXPECT(0xee, gbc.d());
        EXPECT(0x5b, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0x54, gbc.l());
        EXPECT(0x3d43, gbc.sp());
        EXPECT(0x6967, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 033E
        gbc.setState(0xa589, 0xf383, 0x7210, 0xc2b3, 0xb89f, 0x830e, 0x0, 0x1);
        gbc.writeMem(0xa589, { 0x7a });
        gbc.step();
        EXPECT(0xb8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb3, gbc.c());
        EXPECT(0xb8, gbc.d());
        EXPECT(0x9f, gbc.e());
        EXPECT(0x83, gbc.h());
        EXPECT(0xe, gbc.l());
        EXPECT(0xf383, gbc.sp());
        EXPECT(0xa58a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa589));
        // 7A 033F
        gbc.setState(0x3630, 0x1f37, 0xcd70, 0x274, 0xc296, 0x9cce, 0x0, 0x0);
        gbc.writeMem(0x3630, { 0x7a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x2, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0x96, gbc.e());
        EXPECT(0x9c, gbc.h());
        EXPECT(0xce, gbc.l());
        EXPECT(0x1f37, gbc.sp());
        EXPECT(0x3631, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0340
        gbc.setState(0xe013, 0xd837, 0xe5d0, 0x1170, 0xb40e, 0xed7, 0x1, 0x1);
        gbc.writeMem(0xe013, { 0x7a });
        gbc.step();
        EXPECT(0xb4, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xb4, gbc.d());
        EXPECT(0xe, gbc.e());
        EXPECT(0xe, gbc.h());
        EXPECT(0xd7, gbc.l());
        EXPECT(0xd837, gbc.sp());
        EXPECT(0xe014, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe013));
        // 7A 0341
        gbc.setState(0x576d, 0x6caa, 0x2350, 0xf2e8, 0xd24c, 0xfa50, 0x0, 0x1);
        gbc.writeMem(0x576d, { 0x7a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0xe8, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0x4c, gbc.e());
        EXPECT(0xfa, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x6caa, gbc.sp());
        EXPECT(0x576e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0342
        gbc.setState(0x4a59, 0x9eb6, 0x1ce0, 0xf24, 0x1501, 0x34a0, 0x1, 0x1);
        gbc.writeMem(0x4a59, { 0x7a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0xf, gbc.b());
        EXPECT(0x24, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x1, gbc.e());
        EXPECT(0x34, gbc.h());
        EXPECT(0xa0, gbc.l());
        EXPECT(0x9eb6, gbc.sp());
        EXPECT(0x4a5a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0343
        gbc.setState(0xdfae, 0x32dc, 0x96e0, 0xa607, 0x7fac, 0x6e21, 0x0, 0x0);
        gbc.writeMem(0xdfae, { 0x7a });
        gbc.step();
        EXPECT(0x7f, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x7f, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0x32dc, gbc.sp());
        EXPECT(0xdfaf, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdfae));
        // 7A 0344
        gbc.setState(0xd64b, 0xc994, 0x5f30, 0x9113, 0xcc11, 0xc429, 0x1, 0x0);
        gbc.writeMem(0xd64b, { 0x7a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0x11, gbc.e());
        EXPECT(0xc4, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xc994, gbc.sp());
        EXPECT(0xd64c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd64b));
        // 7A 0345
        gbc.setState(0x44c9, 0xb5e8, 0xa560, 0xc0d8, 0x359b, 0x132b, 0x0, 0x1);
        gbc.writeMem(0x44c9, { 0x7a });
        gbc.step();
        EXPECT(0x35, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x35, gbc.d());
        EXPECT(0x9b, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb5e8, gbc.sp());
        EXPECT(0x44ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0346
        gbc.setState(0x2b2a, 0xab47, 0x2880, 0x6d09, 0xd3f9, 0x301d, 0x0, 0x0);
        gbc.writeMem(0x2b2a, { 0x7a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x6d, gbc.b());
        EXPECT(0x9, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x30, gbc.h());
        EXPECT(0x1d, gbc.l());
        EXPECT(0xab47, gbc.sp());
        EXPECT(0x2b2b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0347
        gbc.setState(0x8a8c, 0x94f, 0x3730, 0x3781, 0xccbe, 0x1d18, 0x1, 0x1);
        gbc.writeMem(0x8a8c, { 0x7a });
        gbc.step();
        EXPECT(0xcc, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0xcc, gbc.d());
        EXPECT(0xbe, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x18, gbc.l());
        EXPECT(0x94f, gbc.sp());
        EXPECT(0x8a8d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8a8c));
        // 7A 0348
        gbc.setState(0x5900, 0x4749, 0x340, 0x870d, 0x5c09, 0xa406, 0x0, 0x1);
        gbc.writeMem(0x5900, { 0x7a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0x87, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0x9, gbc.e());
        EXPECT(0xa4, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4749, gbc.sp());
        EXPECT(0x5901, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0349
        gbc.setState(0x6790, 0x2dbb, 0xfd40, 0x960c, 0x74d6, 0x6f63, 0x1, 0x1);
        gbc.writeMem(0x6790, { 0x7a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x96, gbc.b());
        EXPECT(0xc, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x63, gbc.l());
        EXPECT(0x2dbb, gbc.sp());
        EXPECT(0x6791, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 034A
        gbc.setState(0x5ca4, 0x3385, 0x7a90, 0xc17a, 0xc2fc, 0x1b72, 0x0, 0x1);
        gbc.writeMem(0x5ca4, { 0x7a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x7a, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xfc, gbc.e());
        EXPECT(0x1b, gbc.h());
        EXPECT(0x72, gbc.l());
        EXPECT(0x3385, gbc.sp());
        EXPECT(0x5ca5, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 034C
        gbc.setState(0x41ee, 0xaadb, 0x9c40, 0xc323, 0x5765, 0x6447, 0x1, 0x0);
        gbc.writeMem(0x41ee, { 0x7a });
        gbc.step();
        EXPECT(0x57, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0x23, gbc.c());
        EXPECT(0x57, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x64, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xaadb, gbc.sp());
        EXPECT(0x41ef, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 034D
        gbc.setState(0xaacd, 0xf2e5, 0xee80, 0xaa74, 0x7a72, 0x7bd1, 0x0, 0x0);
        gbc.writeMem(0xaacd, { 0x7a });
        gbc.step();
        EXPECT(0x7a, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x74, gbc.c());
        EXPECT(0x7a, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0xf2e5, gbc.sp());
        EXPECT(0xaace, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xaacd));
        // 7A 034E
        gbc.setState(0xe9ed, 0x12d3, 0xeb90, 0xc2b4, 0xd88e, 0x6f4d, 0x1, 0x1);
        gbc.writeMem(0xe9ed, { 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0xc2, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8e, gbc.e());
        EXPECT(0x6f, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0x12d3, gbc.sp());
        EXPECT(0xe9ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe9ed));
        // 7A 034F
        gbc.setState(0xedc7, 0x9e76, 0x5de0, 0x6a19, 0x5f83, 0xcd17, 0x1, 0x0);
        gbc.writeMem(0xedc7, { 0x7a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x83, gbc.e());
        EXPECT(0xcd, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9e76, gbc.sp());
        EXPECT(0xedc8, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xedc7));
        // 7A 0350
        gbc.setState(0xc272, 0xeb8b, 0x1220, 0xf25c, 0xf100, 0x75e4, 0x0, 0x0);
        gbc.writeMem(0xc272, { 0x7a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xf2, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0xe4, gbc.l());
        EXPECT(0xeb8b, gbc.sp());
        EXPECT(0xc273, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc272));
        // 7A 0351
        gbc.setState(0xc9ab, 0x4b25, 0xd4d0, 0x4a73, 0x863f, 0x793f, 0x0, 0x0);
        gbc.writeMem(0xc9ab, { 0x7a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0x4a, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x3f, gbc.l());
        EXPECT(0x4b25, gbc.sp());
        EXPECT(0xc9ac, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc9ab));
        // 7A 0353
        gbc.setState(0xc2bc, 0xcc4f, 0x4740, 0x6308, 0x8395, 0xab29, 0x0, 0x0);
        gbc.writeMem(0xc2bc, { 0x7a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x95, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcc4f, gbc.sp());
        EXPECT(0xc2bd, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc2bc));
        // 7A 0354
        gbc.setState(0xd388, 0x9ee1, 0x9d30, 0x2543, 0xe87a, 0x6a25, 0x1, 0x0);
        gbc.writeMem(0xd388, { 0x7a });
        gbc.step();
        EXPECT(0xe8, gbc.a());
        EXPECT(0x25, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0xe8, gbc.d());
        EXPECT(0x7a, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x25, gbc.l());
        EXPECT(0x9ee1, gbc.sp());
        EXPECT(0xd389, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd388));
        // 7A 0355
        gbc.setState(0xe6b0, 0x2334, 0xfef0, 0xbe32, 0x404e, 0x1cfe, 0x1, 0x0);
        gbc.writeMem(0xe6b0, { 0x7a });
        gbc.step();
        EXPECT(0x40, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x32, gbc.c());
        EXPECT(0x40, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x2334, gbc.sp());
        EXPECT(0xe6b1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe6b0));
        // 7A 0356
        gbc.setState(0xc122, 0x490f, 0x5af0, 0x9f3c, 0xa8a6, 0x73c3, 0x1, 0x1);
        gbc.writeMem(0xc122, { 0x7a });
        gbc.step();
        EXPECT(0xa8, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0x3c, gbc.c());
        EXPECT(0xa8, gbc.d());
        EXPECT(0xa6, gbc.e());
        EXPECT(0x73, gbc.h());
        EXPECT(0xc3, gbc.l());
        EXPECT(0x490f, gbc.sp());
        EXPECT(0xc123, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc122));
        // 7A 0357
        gbc.setState(0x6091, 0x9b74, 0xf2a0, 0x6ac9, 0x25d5, 0x1458, 0x0, 0x0);
        gbc.writeMem(0x6091, { 0x7a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xc9, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x14, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x9b74, gbc.sp());
        EXPECT(0x6092, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0358
        gbc.setState(0x8719, 0x78cf, 0xa9e0, 0x65f7, 0x1527, 0xed70, 0x1, 0x0);
        gbc.writeMem(0x8719, { 0x7a });
        gbc.step();
        EXPECT(0x15, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x15, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0xed, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x78cf, gbc.sp());
        EXPECT(0x871a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8719));
        // 7A 0359
        gbc.setState(0x9f5e, 0x1bbd, 0x3320, 0x71d0, 0x2b85, 0xf423, 0x0, 0x0);
        gbc.writeMem(0x9f5e, { 0x7a });
        gbc.step();
        EXPECT(0x2b, gbc.a());
        EXPECT(0x71, gbc.b());
        EXPECT(0xd0, gbc.c());
        EXPECT(0x2b, gbc.d());
        EXPECT(0x85, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x1bbd, gbc.sp());
        EXPECT(0x9f5f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9f5e));
        // 7A 035A
        gbc.setState(0xd820, 0x9669, 0x54c0, 0x7aa3, 0x27f9, 0x4670, 0x1, 0x0);
        gbc.writeMem(0xd820, { 0x7a });
        gbc.step();
        EXPECT(0x27, gbc.a());
        EXPECT(0x7a, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0x27, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x46, gbc.h());
        EXPECT(0x70, gbc.l());
        EXPECT(0x9669, gbc.sp());
        EXPECT(0xd821, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd820));
        // 7A 035C
        gbc.setState(0x819, 0xb3a0, 0xfb90, 0x31dc, 0x8341, 0x4c21, 0x0, 0x0);
        gbc.writeMem(0x819, { 0x7a });
        gbc.step();
        EXPECT(0x83, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0x83, gbc.d());
        EXPECT(0x41, gbc.e());
        EXPECT(0x4c, gbc.h());
        EXPECT(0x21, gbc.l());
        EXPECT(0xb3a0, gbc.sp());
        EXPECT(0x81a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 035D
        gbc.setState(0x66ad, 0x485a, 0x5770, 0xafaf, 0xa707, 0x4301, 0x1, 0x1);
        gbc.writeMem(0x66ad, { 0x7a });
        gbc.step();
        EXPECT(0xa7, gbc.a());
        EXPECT(0xaf, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xa7, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0x43, gbc.h());
        EXPECT(0x1, gbc.l());
        EXPECT(0x485a, gbc.sp());
        EXPECT(0x66ae, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 035E
        gbc.setState(0x9ffa, 0x1c77, 0x94c0, 0xa852, 0xe594, 0xb42c, 0x0, 0x0);
        gbc.writeMem(0x9ffa, { 0x7a });
        gbc.step();
        EXPECT(0xe5, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x52, gbc.c());
        EXPECT(0xe5, gbc.d());
        EXPECT(0x94, gbc.e());
        EXPECT(0xb4, gbc.h());
        EXPECT(0x2c, gbc.l());
        EXPECT(0x1c77, gbc.sp());
        EXPECT(0x9ffb, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9ffa));
        // 7A 035F
        gbc.setState(0x960b, 0x4697, 0x6f30, 0x3a17, 0xd88f, 0x606, 0x1, 0x0);
        gbc.writeMem(0x960b, { 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x3a, gbc.b());
        EXPECT(0x17, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x8f, gbc.e());
        EXPECT(0x6, gbc.h());
        EXPECT(0x6, gbc.l());
        EXPECT(0x4697, gbc.sp());
        EXPECT(0x960c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x960b));
        // 7A 0360
        gbc.setState(0xd94a, 0xba0, 0x68b0, 0x2d71, 0x8d9d, 0x942b, 0x1, 0x0);
        gbc.writeMem(0xd94a, { 0x7a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x9d, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xba0, gbc.sp());
        EXPECT(0xd94b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd94a));
        // 7A 0362
        gbc.setState(0xaf09, 0x9139, 0x7280, 0xc18a, 0xf2ca, 0x112, 0x0, 0x1);
        gbc.writeMem(0xaf09, { 0x7a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0x8a, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0xca, gbc.e());
        EXPECT(0x1, gbc.h());
        EXPECT(0x12, gbc.l());
        EXPECT(0x9139, gbc.sp());
        EXPECT(0xaf0a, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xaf09));
        // 7A 0363
        gbc.setState(0x58bf, 0x9ea1, 0x80, 0xde42, 0x5f71, 0xc361, 0x1, 0x1);
        gbc.writeMem(0x58bf, { 0x7a });
        gbc.step();
        EXPECT(0x5f, gbc.a());
        EXPECT(0xde, gbc.b());
        EXPECT(0x42, gbc.c());
        EXPECT(0x5f, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0xc3, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x9ea1, gbc.sp());
        EXPECT(0x58c0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0364
        gbc.setState(0xa014, 0x149b, 0xef50, 0xc81a, 0x7b07, 0xab0f, 0x1, 0x1);
        gbc.writeMem(0xa014, { 0x7a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0xc8, gbc.b());
        EXPECT(0x1a, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0x7, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xf, gbc.l());
        EXPECT(0x149b, gbc.sp());
        EXPECT(0xa015, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa014));
        // 7A 0368
        gbc.setState(0x3895, 0x885e, 0x3ad0, 0x8f02, 0xbd8c, 0x26b3, 0x1, 0x1);
        gbc.writeMem(0x3895, { 0x7a });
        gbc.step();
        EXPECT(0xbd, gbc.a());
        EXPECT(0x8f, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0xbd, gbc.d());
        EXPECT(0x8c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0xb3, gbc.l());
        EXPECT(0x885e, gbc.sp());
        EXPECT(0x3896, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0369
        gbc.setState(0x5adf, 0xb264, 0x9ee0, 0xbe5e, 0xc986, 0xb47, 0x0, 0x1);
        gbc.writeMem(0x5adf, { 0x7a });
        gbc.step();
        EXPECT(0xc9, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x5e, gbc.c());
        EXPECT(0xc9, gbc.d());
        EXPECT(0x86, gbc.e());
        EXPECT(0xb, gbc.h());
        EXPECT(0x47, gbc.l());
        EXPECT(0xb264, gbc.sp());
        EXPECT(0x5ae0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 036A
        gbc.setState(0x35e0, 0x9bef, 0xe260, 0xec4c, 0xbbcb, 0x5af5, 0x1, 0x0);
        gbc.writeMem(0x35e0, { 0x7a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x4c, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcb, gbc.e());
        EXPECT(0x5a, gbc.h());
        EXPECT(0xf5, gbc.l());
        EXPECT(0x9bef, gbc.sp());
        EXPECT(0x35e1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 036B
        gbc.setState(0x6cf0, 0xb8ce, 0x8690, 0xd0f0, 0xa36d, 0x1d2b, 0x0, 0x0);
        gbc.writeMem(0x6cf0, { 0x7a });
        gbc.step();
        EXPECT(0xa3, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xa3, gbc.d());
        EXPECT(0x6d, gbc.e());
        EXPECT(0x1d, gbc.h());
        EXPECT(0x2b, gbc.l());
        EXPECT(0xb8ce, gbc.sp());
        EXPECT(0x6cf1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 036C
        gbc.setState(0x81c1, 0x7413, 0x56d0, 0xb845, 0xf712, 0xb5aa, 0x1, 0x0);
        gbc.writeMem(0x81c1, { 0x7a });
        gbc.step();
        EXPECT(0xf7, gbc.a());
        EXPECT(0xb8, gbc.b());
        EXPECT(0x45, gbc.c());
        EXPECT(0xf7, gbc.d());
        EXPECT(0x12, gbc.e());
        EXPECT(0xb5, gbc.h());
        EXPECT(0xaa, gbc.l());
        EXPECT(0x7413, gbc.sp());
        EXPECT(0x81c2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x81c1));
        // 7A 036D
        gbc.setState(0xdcc0, 0xdb21, 0x1e70, 0x2a5f, 0x7462, 0x56de, 0x0, 0x0);
        gbc.writeMem(0xdcc0, { 0x7a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x2a, gbc.b());
        EXPECT(0x5f, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0x62, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0xde, gbc.l());
        EXPECT(0xdb21, gbc.sp());
        EXPECT(0xdcc1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdcc0));
        // 7A 036E
        gbc.setState(0x76e9, 0x4e78, 0xea80, 0x79f0, 0x9647, 0x897f, 0x1, 0x0);
        gbc.writeMem(0x76e9, { 0x7a });
        gbc.step();
        EXPECT(0x96, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0x96, gbc.d());
        EXPECT(0x47, gbc.e());
        EXPECT(0x89, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x4e78, gbc.sp());
        EXPECT(0x76ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 036F
        gbc.setState(0x6828, 0xa932, 0xa7e0, 0x3198, 0x933, 0xa0e6, 0x0, 0x1);
        gbc.writeMem(0x6828, { 0x7a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0x31, gbc.b());
        EXPECT(0x98, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe6, gbc.l());
        EXPECT(0xa932, gbc.sp());
        EXPECT(0x6829, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0370
        gbc.setState(0x9c2e, 0xd02c, 0x9a80, 0x2b41, 0xa62e, 0x19dc, 0x1, 0x0);
        gbc.writeMem(0x9c2e, { 0x7a });
        gbc.step();
        EXPECT(0xa6, gbc.a());
        EXPECT(0x2b, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xa6, gbc.d());
        EXPECT(0x2e, gbc.e());
        EXPECT(0x19, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0xd02c, gbc.sp());
        EXPECT(0x9c2f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9c2e));
        // 7A 0372
        gbc.setState(0xa498, 0x8093, 0x54a0, 0xe14f, 0x603, 0xf4a7, 0x0, 0x0);
        gbc.writeMem(0xa498, { 0x7a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0x4f, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x3, gbc.e());
        EXPECT(0xf4, gbc.h());
        EXPECT(0xa7, gbc.l());
        EXPECT(0x8093, gbc.sp());
        EXPECT(0xa499, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa498));
        // 7A 0373
        gbc.setState(0x5567, 0xe9df, 0x3e20, 0x367e, 0x300a, 0x4b04, 0x0, 0x0);
        gbc.writeMem(0x5567, { 0x7a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x36, gbc.b());
        EXPECT(0x7e, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0x4b, gbc.h());
        EXPECT(0x4, gbc.l());
        EXPECT(0xe9df, gbc.sp());
        EXPECT(0x5568, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0374
        gbc.setState(0x5dc2, 0x9392, 0x16b0, 0xc3d8, 0x49b9, 0x98a8, 0x1, 0x0);
        gbc.writeMem(0x5dc2, { 0x7a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0xc3, gbc.b());
        EXPECT(0xd8, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xa8, gbc.l());
        EXPECT(0x9392, gbc.sp());
        EXPECT(0x5dc3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0375
        gbc.setState(0x29c9, 0xc33a, 0xc9e0, 0xbb76, 0xa9fa, 0xddfa, 0x0, 0x1);
        gbc.writeMem(0x29c9, { 0x7a });
        gbc.step();
        EXPECT(0xa9, gbc.a());
        EXPECT(0xbb, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0xa9, gbc.d());
        EXPECT(0xfa, gbc.e());
        EXPECT(0xdd, gbc.h());
        EXPECT(0xfa, gbc.l());
        EXPECT(0xc33a, gbc.sp());
        EXPECT(0x29ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0376
        gbc.setState(0x59e5, 0xf247, 0x1900, 0xbdd4, 0x48b8, 0xdbe3, 0x1, 0x1);
        gbc.writeMem(0x59e5, { 0x7a });
        gbc.step();
        EXPECT(0x48, gbc.a());
        EXPECT(0xbd, gbc.b());
        EXPECT(0xd4, gbc.c());
        EXPECT(0x48, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0xdb, gbc.h());
        EXPECT(0xe3, gbc.l());
        EXPECT(0xf247, gbc.sp());
        EXPECT(0x59e6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0377
        gbc.setState(0x73dd, 0xff87, 0x1120, 0xec87, 0xddac, 0x24d, 0x1, 0x0);
        gbc.writeMem(0x73dd, { 0x7a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xec, gbc.b());
        EXPECT(0x87, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x4d, gbc.l());
        EXPECT(0xff87, gbc.sp());
        EXPECT(0x73de, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0378
        gbc.setState(0x5211, 0x4fc9, 0xeb0, 0x1d02, 0x891c, 0x779e, 0x0, 0x0);
        gbc.writeMem(0x5211, { 0x7a });
        gbc.step();
        EXPECT(0x89, gbc.a());
        EXPECT(0x1d, gbc.b());
        EXPECT(0x2, gbc.c());
        EXPECT(0x89, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0x77, gbc.h());
        EXPECT(0x9e, gbc.l());
        EXPECT(0x4fc9, gbc.sp());
        EXPECT(0x5212, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0379
        gbc.setState(0x549f, 0x4a39, 0xfb00, 0xedef, 0x5cb4, 0x3e49, 0x1, 0x0);
        gbc.writeMem(0x549f, { 0x7a });
        gbc.step();
        EXPECT(0x5c, gbc.a());
        EXPECT(0xed, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x5c, gbc.d());
        EXPECT(0xb4, gbc.e());
        EXPECT(0x3e, gbc.h());
        EXPECT(0x49, gbc.l());
        EXPECT(0x4a39, gbc.sp());
        EXPECT(0x54a0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 037A
        gbc.setState(0x4111, 0xcdba, 0xae70, 0xaa48, 0x7d3f, 0x7bd8, 0x1, 0x0);
        gbc.writeMem(0x4111, { 0x7a });
        gbc.step();
        EXPECT(0x7d, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x48, gbc.c());
        EXPECT(0x7d, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x7b, gbc.h());
        EXPECT(0xd8, gbc.l());
        EXPECT(0xcdba, gbc.sp());
        EXPECT(0x4112, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 037B
        gbc.setState(0x31fe, 0x5b2d, 0xab10, 0x3b3d, 0xe36b, 0x29d1, 0x0, 0x1);
        gbc.writeMem(0x31fe, { 0x7a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0x3b, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0x29, gbc.h());
        EXPECT(0xd1, gbc.l());
        EXPECT(0x5b2d, gbc.sp());
        EXPECT(0x31ff, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 037D
        gbc.setState(0x4d18, 0xddb5, 0x8390, 0x8926, 0x63b9, 0xe174, 0x0, 0x1);
        gbc.writeMem(0x4d18, { 0x7a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x89, gbc.b());
        EXPECT(0x26, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xb9, gbc.e());
        EXPECT(0xe1, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xddb5, gbc.sp());
        EXPECT(0x4d19, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 037E
        gbc.setState(0xe080, 0x3684, 0xae00, 0x7db4, 0xd853, 0xadbd, 0x1, 0x1);
        gbc.writeMem(0xe080, { 0x7a });
        gbc.step();
        EXPECT(0xd8, gbc.a());
        EXPECT(0x7d, gbc.b());
        EXPECT(0xb4, gbc.c());
        EXPECT(0xd8, gbc.d());
        EXPECT(0x53, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0xbd, gbc.l());
        EXPECT(0x3684, gbc.sp());
        EXPECT(0xe081, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe080));
        // 7A 037F
        gbc.setState(0xc62e, 0xff2c, 0xb5f0, 0xf8a3, 0xdd78, 0x2fe0, 0x0, 0x1);
        gbc.writeMem(0xc62e, { 0x7a });
        gbc.step();
        EXPECT(0xdd, gbc.a());
        EXPECT(0xf8, gbc.b());
        EXPECT(0xa3, gbc.c());
        EXPECT(0xdd, gbc.d());
        EXPECT(0x78, gbc.e());
        EXPECT(0x2f, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0xff2c, gbc.sp());
        EXPECT(0xc62f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc62e));
        // 7A 0380
        gbc.setState(0x860e, 0x7b89, 0x4b50, 0x6210, 0x2914, 0x4461, 0x1, 0x1);
        gbc.writeMem(0x860e, { 0x7a });
        gbc.step();
        EXPECT(0x29, gbc.a());
        EXPECT(0x62, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x29, gbc.d());
        EXPECT(0x14, gbc.e());
        EXPECT(0x44, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7b89, gbc.sp());
        EXPECT(0x860f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x860e));
        // 7A 0382
        gbc.setState(0x445f, 0x4a28, 0xf170, 0xb6fd, 0x348b, 0x1c88, 0x0, 0x1);
        gbc.writeMem(0x445f, { 0x7a });
        gbc.step();
        EXPECT(0x34, gbc.a());
        EXPECT(0xb6, gbc.b());
        EXPECT(0xfd, gbc.c());
        EXPECT(0x34, gbc.d());
        EXPECT(0x8b, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0x88, gbc.l());
        EXPECT(0x4a28, gbc.sp());
        EXPECT(0x4460, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0383
        gbc.setState(0x52eb, 0x86e6, 0xfd20, 0x84f7, 0x4b34, 0xe02a, 0x1, 0x0);
        gbc.writeMem(0x52eb, { 0x7a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0xe0, gbc.h());
        EXPECT(0x2a, gbc.l());
        EXPECT(0x86e6, gbc.sp());
        EXPECT(0x52ec, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0384
        gbc.setState(0xb807, 0xd222, 0x5fa0, 0xf69c, 0xef58, 0x408d, 0x1, 0x0);
        gbc.writeMem(0xb807, { 0x7a });
        gbc.step();
        EXPECT(0xef, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x9c, gbc.c());
        EXPECT(0xef, gbc.d());
        EXPECT(0x58, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0xd222, gbc.sp());
        EXPECT(0xb808, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb807));
        // 7A 0385
        gbc.setState(0x3986, 0xeca9, 0xb590, 0x4ceb, 0x62b, 0xb0a2, 0x1, 0x1);
        gbc.writeMem(0x3986, { 0x7a });
        gbc.step();
        EXPECT(0x6, gbc.a());
        EXPECT(0x4c, gbc.b());
        EXPECT(0xeb, gbc.c());
        EXPECT(0x6, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xb0, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0xeca9, gbc.sp());
        EXPECT(0x3987, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0386
        gbc.setState(0xa727, 0xac23, 0xbeb0, 0x80ea, 0xc410, 0xbec2, 0x1, 0x0);
        gbc.writeMem(0xa727, { 0x7a });
        gbc.step();
        EXPECT(0xc4, gbc.a());
        EXPECT(0x80, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0xc4, gbc.d());
        EXPECT(0x10, gbc.e());
        EXPECT(0xbe, gbc.h());
        EXPECT(0xc2, gbc.l());
        EXPECT(0xac23, gbc.sp());
        EXPECT(0xa728, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa727));
        // 7A 0387
        gbc.setState(0xb930, 0x93d9, 0xcd70, 0x8d3d, 0xb776, 0x5b8b, 0x1, 0x0);
        gbc.writeMem(0xb930, { 0x7a });
        gbc.step();
        EXPECT(0xb7, gbc.a());
        EXPECT(0x8d, gbc.b());
        EXPECT(0x3d, gbc.c());
        EXPECT(0xb7, gbc.d());
        EXPECT(0x76, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0x8b, gbc.l());
        EXPECT(0x93d9, gbc.sp());
        EXPECT(0xb931, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb930));
        // 7A 0388
        gbc.setState(0xe400, 0xe7ff, 0xb600, 0x3558, 0x4bb6, 0x810d, 0x1, 0x0);
        gbc.writeMem(0xe400, { 0x7a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x58, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xb6, gbc.e());
        EXPECT(0x81, gbc.h());
        EXPECT(0xd, gbc.l());
        EXPECT(0xe7ff, gbc.sp());
        EXPECT(0xe401, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe400));
        // 7A 0389
        gbc.setState(0x6182, 0x7afc, 0x7740, 0x50b2, 0x2ae4, 0x4f35, 0x0, 0x0);
        gbc.writeMem(0x6182, { 0x7a });
        gbc.step();
        EXPECT(0x2a, gbc.a());
        EXPECT(0x50, gbc.b());
        EXPECT(0xb2, gbc.c());
        EXPECT(0x2a, gbc.d());
        EXPECT(0xe4, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0x7afc, gbc.sp());
        EXPECT(0x6183, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 038A
        gbc.setState(0x21c4, 0x9aea, 0x1390, 0xfcca, 0x2571, 0x6939, 0x1, 0x0);
        gbc.writeMem(0x21c4, { 0x7a });
        gbc.step();
        EXPECT(0x25, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x25, gbc.d());
        EXPECT(0x71, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x39, gbc.l());
        EXPECT(0x9aea, gbc.sp());
        EXPECT(0x21c5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 038C
        gbc.setState(0x5bc0, 0x4ab0, 0x8510, 0x70ff, 0x18f6, 0xfbe0, 0x1, 0x0);
        gbc.writeMem(0x5bc0, { 0x7a });
        gbc.step();
        EXPECT(0x18, gbc.a());
        EXPECT(0x70, gbc.b());
        EXPECT(0xff, gbc.c());
        EXPECT(0x18, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x4ab0, gbc.sp());
        EXPECT(0x5bc1, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 038D
        gbc.setState(0x68ac, 0x5170, 0x6f80, 0x363, 0x6777, 0x23fe, 0x1, 0x0);
        gbc.writeMem(0x68ac, { 0x7a });
        gbc.step();
        EXPECT(0x67, gbc.a());
        EXPECT(0x3, gbc.b());
        EXPECT(0x63, gbc.c());
        EXPECT(0x67, gbc.d());
        EXPECT(0x77, gbc.e());
        EXPECT(0x23, gbc.h());
        EXPECT(0xfe, gbc.l());
        EXPECT(0x5170, gbc.sp());
        EXPECT(0x68ad, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 038E
        gbc.setState(0x5d80, 0x970e, 0x7b60, 0xa6dc, 0xc1ba, 0x7523, 0x1, 0x0);
        gbc.writeMem(0x5d80, { 0x7a });
        gbc.step();
        EXPECT(0xc1, gbc.a());
        EXPECT(0xa6, gbc.b());
        EXPECT(0xdc, gbc.c());
        EXPECT(0xc1, gbc.d());
        EXPECT(0xba, gbc.e());
        EXPECT(0x75, gbc.h());
        EXPECT(0x23, gbc.l());
        EXPECT(0x970e, gbc.sp());
        EXPECT(0x5d81, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 038F
        gbc.setState(0xa337, 0x6740, 0xa600, 0x104a, 0x2f31, 0xa396, 0x1, 0x1);
        gbc.writeMem(0xa337, { 0x7a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x10, gbc.b());
        EXPECT(0x4a, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x31, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x96, gbc.l());
        EXPECT(0x6740, gbc.sp());
        EXPECT(0xa338, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa337));
        // 7A 0391
        gbc.setState(0x968a, 0xcf2d, 0x2e60, 0x22ae, 0xc2d2, 0xf929, 0x0, 0x1);
        gbc.writeMem(0x968a, { 0x7a });
        gbc.step();
        EXPECT(0xc2, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xae, gbc.c());
        EXPECT(0xc2, gbc.d());
        EXPECT(0xd2, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0x29, gbc.l());
        EXPECT(0xcf2d, gbc.sp());
        EXPECT(0x968b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x968a));
        // 7A 0392
        gbc.setState(0x9bd6, 0xc634, 0x7210, 0x9a8b, 0x499e, 0x632e, 0x1, 0x1);
        gbc.writeMem(0x9bd6, { 0x7a });
        gbc.step();
        EXPECT(0x49, gbc.a());
        EXPECT(0x9a, gbc.b());
        EXPECT(0x8b, gbc.c());
        EXPECT(0x49, gbc.d());
        EXPECT(0x9e, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x2e, gbc.l());
        EXPECT(0xc634, gbc.sp());
        EXPECT(0x9bd7, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9bd6));
        // 7A 0393
        gbc.setState(0xced5, 0xc4b7, 0x3c20, 0x8c16, 0x95f5, 0x6360, 0x1, 0x0);
        gbc.writeMem(0xced5, { 0x7a });
        gbc.step();
        EXPECT(0x95, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0x16, gbc.c());
        EXPECT(0x95, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x63, gbc.h());
        EXPECT(0x60, gbc.l());
        EXPECT(0xc4b7, gbc.sp());
        EXPECT(0xced6, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xced5));
        // 7A 0394
        gbc.setState(0x2d3b, 0x9801, 0xf840, 0xb42d, 0x97a7, 0x3a17, 0x1, 0x0);
        gbc.writeMem(0x2d3b, { 0x7a });
        gbc.step();
        EXPECT(0x97, gbc.a());
        EXPECT(0xb4, gbc.b());
        EXPECT(0x2d, gbc.c());
        EXPECT(0x97, gbc.d());
        EXPECT(0xa7, gbc.e());
        EXPECT(0x3a, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x9801, gbc.sp());
        EXPECT(0x2d3c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0395
        gbc.setState(0x2a0c, 0x23fa, 0x6c20, 0x59fc, 0xc75c, 0x3689, 0x0, 0x1);
        gbc.writeMem(0x2a0c, { 0x7a });
        gbc.step();
        EXPECT(0xc7, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc7, gbc.d());
        EXPECT(0x5c, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x89, gbc.l());
        EXPECT(0x23fa, gbc.sp());
        EXPECT(0x2a0d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0396
        gbc.setState(0x466d, 0x3623, 0x8d0, 0xbee6, 0xe7dc, 0xad6d, 0x1, 0x1);
        gbc.writeMem(0x466d, { 0x7a });
        gbc.step();
        EXPECT(0xe7, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0xe6, gbc.c());
        EXPECT(0xe7, gbc.d());
        EXPECT(0xdc, gbc.e());
        EXPECT(0xad, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x3623, gbc.sp());
        EXPECT(0x466e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 0397
        gbc.setState(0x99e8, 0x9273, 0xdae0, 0xe1b9, 0xff3, 0xbb19, 0x1, 0x0);
        gbc.writeMem(0x99e8, { 0x7a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0xe1, gbc.b());
        EXPECT(0xb9, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xf3, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x19, gbc.l());
        EXPECT(0x9273, gbc.sp());
        EXPECT(0x99e9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x99e8));
        // 7A 0398
        gbc.setState(0x702f, 0x3223, 0xb5e0, 0x6e7d, 0xcb0, 0xa0e0, 0x1, 0x1);
        gbc.writeMem(0x702f, { 0x7a });
        gbc.step();
        EXPECT(0xc, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x7d, gbc.c());
        EXPECT(0xc, gbc.d());
        EXPECT(0xb0, gbc.e());
        EXPECT(0xa0, gbc.h());
        EXPECT(0xe0, gbc.l());
        EXPECT(0x3223, gbc.sp());
        EXPECT(0x7030, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 0399
        gbc.setState(0x22da, 0x97d3, 0x6c30, 0x84aa, 0x6342, 0x6985, 0x1, 0x0);
        gbc.writeMem(0x22da, { 0x7a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0x84, gbc.b());
        EXPECT(0xaa, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0x42, gbc.e());
        EXPECT(0x69, gbc.h());
        EXPECT(0x85, gbc.l());
        EXPECT(0x97d3, gbc.sp());
        EXPECT(0x22db, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 039A
        gbc.setState(0x2288, 0x8192, 0x73e0, 0x540b, 0x300a, 0xaccd, 0x0, 0x1);
        gbc.writeMem(0x2288, { 0x7a });
        gbc.step();
        EXPECT(0x30, gbc.a());
        EXPECT(0x54, gbc.b());
        EXPECT(0xb, gbc.c());
        EXPECT(0x30, gbc.d());
        EXPECT(0xa, gbc.e());
        EXPECT(0xac, gbc.h());
        EXPECT(0xcd, gbc.l());
        EXPECT(0x8192, gbc.sp());
        EXPECT(0x2289, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 039C
        gbc.setState(0xecef, 0x92e1, 0x8e20, 0xf61b, 0xbbcd, 0x3655, 0x0, 0x1);
        gbc.writeMem(0xecef, { 0x7a });
        gbc.step();
        EXPECT(0xbb, gbc.a());
        EXPECT(0xf6, gbc.b());
        EXPECT(0x1b, gbc.c());
        EXPECT(0xbb, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x36, gbc.h());
        EXPECT(0x55, gbc.l());
        EXPECT(0x92e1, gbc.sp());
        EXPECT(0xecf0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xecef));
        // 7A 039D
        gbc.setState(0xb94f, 0x4ed5, 0x7ee0, 0xc076, 0x488, 0x4017, 0x1, 0x0);
        gbc.writeMem(0xb94f, { 0x7a });
        gbc.step();
        EXPECT(0x4, gbc.a());
        EXPECT(0xc0, gbc.b());
        EXPECT(0x76, gbc.c());
        EXPECT(0x4, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x40, gbc.h());
        EXPECT(0x17, gbc.l());
        EXPECT(0x4ed5, gbc.sp());
        EXPECT(0xb950, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb94f));
        // 7A 039E
        gbc.setState(0xed9d, 0x76e6, 0xf750, 0x65ee, 0x510c, 0x4ff3, 0x1, 0x0);
        gbc.writeMem(0xed9d, { 0x7a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x65, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xc, gbc.e());
        EXPECT(0x4f, gbc.h());
        EXPECT(0xf3, gbc.l());
        EXPECT(0x76e6, gbc.sp());
        EXPECT(0xed9e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xed9d));
        // 7A 039F
        gbc.setState(0x4e40, 0x8d6e, 0x3c60, 0x6ae9, 0xbe00, 0x50a3, 0x1, 0x0);
        gbc.writeMem(0x4e40, { 0x7a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x6a, gbc.b());
        EXPECT(0xe9, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x0, gbc.e());
        EXPECT(0x50, gbc.h());
        EXPECT(0xa3, gbc.l());
        EXPECT(0x8d6e, gbc.sp());
        EXPECT(0x4e41, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03A0
        gbc.setState(0x7e65, 0xc2e3, 0x3330, 0xeaf7, 0x9f4, 0xfba1, 0x0, 0x1);
        gbc.writeMem(0x7e65, { 0x7a });
        gbc.step();
        EXPECT(0x9, gbc.a());
        EXPECT(0xea, gbc.b());
        EXPECT(0xf7, gbc.c());
        EXPECT(0x9, gbc.d());
        EXPECT(0xf4, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xa1, gbc.l());
        EXPECT(0xc2e3, gbc.sp());
        EXPECT(0x7e66, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03A1
        gbc.setState(0x1743, 0x5c42, 0x4350, 0xe68d, 0xac02, 0xda4, 0x0, 0x1);
        gbc.writeMem(0x1743, { 0x7a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0xe6, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xd, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x5c42, gbc.sp());
        EXPECT(0x1744, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03A2
        gbc.setState(0x91cf, 0x5286, 0xcbf0, 0xe8fc, 0xc675, 0xf780, 0x1, 0x1);
        gbc.writeMem(0x91cf, { 0x7a });
        gbc.step();
        EXPECT(0xc6, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0xfc, gbc.c());
        EXPECT(0xc6, gbc.d());
        EXPECT(0x75, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x80, gbc.l());
        EXPECT(0x5286, gbc.sp());
        EXPECT(0x91d0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x91cf));
        // 7A 03A3
        gbc.setState(0xb81f, 0xdae0, 0xf5c0, 0x9365, 0x6ff9, 0x1ea6, 0x1, 0x1);
        gbc.writeMem(0xb81f, { 0x7a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0x93, gbc.b());
        EXPECT(0x65, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0xf9, gbc.e());
        EXPECT(0x1e, gbc.h());
        EXPECT(0xa6, gbc.l());
        EXPECT(0xdae0, gbc.sp());
        EXPECT(0xb820, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb81f));
        // 7A 03A4
        gbc.setState(0x779d, 0xe838, 0x1090, 0xc781, 0x86f5, 0x94e1, 0x1, 0x1);
        gbc.writeMem(0x779d, { 0x7a });
        gbc.step();
        EXPECT(0x86, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x81, gbc.c());
        EXPECT(0x86, gbc.d());
        EXPECT(0xf5, gbc.e());
        EXPECT(0x94, gbc.h());
        EXPECT(0xe1, gbc.l());
        EXPECT(0xe838, gbc.sp());
        EXPECT(0x779e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03A5
        gbc.setState(0xb8dc, 0xe3f0, 0x3e60, 0xd09d, 0x770f, 0x3b5c, 0x1, 0x1);
        gbc.writeMem(0xb8dc, { 0x7a });
        gbc.step();
        EXPECT(0x77, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0x9d, gbc.c());
        EXPECT(0x77, gbc.d());
        EXPECT(0xf, gbc.e());
        EXPECT(0x3b, gbc.h());
        EXPECT(0x5c, gbc.l());
        EXPECT(0xe3f0, gbc.sp());
        EXPECT(0xb8dd, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb8dc));
        // 7A 03A6
        gbc.setState(0x9312, 0xefaf, 0x750, 0xd63e, 0x4bd5, 0x98c0, 0x0, 0x1);
        gbc.writeMem(0x9312, { 0x7a });
        gbc.step();
        EXPECT(0x4b, gbc.a());
        EXPECT(0xd6, gbc.b());
        EXPECT(0x3e, gbc.c());
        EXPECT(0x4b, gbc.d());
        EXPECT(0xd5, gbc.e());
        EXPECT(0x98, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xefaf, gbc.sp());
        EXPECT(0x9313, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9312));
        // 7A 03A7
        gbc.setState(0xe4ed, 0xc7c8, 0x52b0, 0xc795, 0xabe7, 0x5bd2, 0x1, 0x1);
        gbc.writeMem(0xe4ed, { 0x7a });
        gbc.step();
        EXPECT(0xab, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0xab, gbc.d());
        EXPECT(0xe7, gbc.e());
        EXPECT(0x5b, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xc7c8, gbc.sp());
        EXPECT(0xe4ee, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe4ed));
        // 7A 03A8
        gbc.setState(0xd529, 0xb407, 0xf460, 0xaa19, 0x3772, 0x5c53, 0x1, 0x1);
        gbc.writeMem(0xd529, { 0x7a });
        gbc.step();
        EXPECT(0x37, gbc.a());
        EXPECT(0xaa, gbc.b());
        EXPECT(0x19, gbc.c());
        EXPECT(0x37, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0x5c, gbc.h());
        EXPECT(0x53, gbc.l());
        EXPECT(0xb407, gbc.sp());
        EXPECT(0xd52a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xd529));
        // 7A 03A9
        gbc.setState(0x6bd1, 0xb2ac, 0xdf30, 0xc1ce, 0x63f2, 0xe805, 0x1, 0x1);
        gbc.writeMem(0x6bd1, { 0x7a });
        gbc.step();
        EXPECT(0x63, gbc.a());
        EXPECT(0xc1, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x63, gbc.d());
        EXPECT(0xf2, gbc.e());
        EXPECT(0xe8, gbc.h());
        EXPECT(0x5, gbc.l());
        EXPECT(0xb2ac, gbc.sp());
        EXPECT(0x6bd2, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03AA
        gbc.setState(0x622, 0x5c7b, 0x9c0, 0x8cb8, 0xfd4, 0x21c, 0x1, 0x0);
        gbc.writeMem(0x622, { 0x7a });
        gbc.step();
        EXPECT(0xf, gbc.a());
        EXPECT(0x8c, gbc.b());
        EXPECT(0xb8, gbc.c());
        EXPECT(0xf, gbc.d());
        EXPECT(0xd4, gbc.e());
        EXPECT(0x2, gbc.h());
        EXPECT(0x1c, gbc.l());
        EXPECT(0x5c7b, gbc.sp());
        EXPECT(0x623, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03AB
        gbc.setState(0xde86, 0x4d79, 0xd240, 0xca70, 0xf24e, 0x7993, 0x1, 0x0);
        gbc.writeMem(0xde86, { 0x7a });
        gbc.step();
        EXPECT(0xf2, gbc.a());
        EXPECT(0xca, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xf2, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0x79, gbc.h());
        EXPECT(0x93, gbc.l());
        EXPECT(0x4d79, gbc.sp());
        EXPECT(0xde87, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xde86));
        // 7A 03AC
        gbc.setState(0x16d5, 0x3085, 0x5790, 0xc775, 0x7c13, 0x7f38, 0x0, 0x1);
        gbc.writeMem(0x16d5, { 0x7a });
        gbc.step();
        EXPECT(0x7c, gbc.a());
        EXPECT(0xc7, gbc.b());
        EXPECT(0x75, gbc.c());
        EXPECT(0x7c, gbc.d());
        EXPECT(0x13, gbc.e());
        EXPECT(0x7f, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x3085, gbc.sp());
        EXPECT(0x16d6, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03AD
        gbc.setState(0x9403, 0x7cee, 0x9220, 0x7739, 0x2f33, 0xf828, 0x1, 0x0);
        gbc.writeMem(0x9403, { 0x7a });
        gbc.step();
        EXPECT(0x2f, gbc.a());
        EXPECT(0x77, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x2f, gbc.d());
        EXPECT(0x33, gbc.e());
        EXPECT(0xf8, gbc.h());
        EXPECT(0x28, gbc.l());
        EXPECT(0x7cee, gbc.sp());
        EXPECT(0x9404, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9403));
        // 7A 03AE
        gbc.setState(0x5c9b, 0xb971, 0x3ee0, 0xe27, 0x65f6, 0xa908, 0x0, 0x1);
        gbc.writeMem(0x5c9b, { 0x7a });
        gbc.step();
        EXPECT(0x65, gbc.a());
        EXPECT(0xe, gbc.b());
        EXPECT(0x27, gbc.c());
        EXPECT(0x65, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xa9, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xb971, gbc.sp());
        EXPECT(0x5c9c, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03AF
        gbc.setState(0xc4a0, 0xba5e, 0x400, 0xb512, 0x136e, 0x4586, 0x0, 0x1);
        gbc.writeMem(0xc4a0, { 0x7a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0xb5, gbc.b());
        EXPECT(0x12, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0x6e, gbc.e());
        EXPECT(0x45, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0xba5e, gbc.sp());
        EXPECT(0xc4a1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc4a0));
        // 7A 03B0
        gbc.setState(0x9c06, 0xd4e0, 0x7e90, 0x22ba, 0xf91c, 0xa36d, 0x1, 0x0);
        gbc.writeMem(0x9c06, { 0x7a });
        gbc.step();
        EXPECT(0xf9, gbc.a());
        EXPECT(0x22, gbc.b());
        EXPECT(0xba, gbc.c());
        EXPECT(0xf9, gbc.d());
        EXPECT(0x1c, gbc.e());
        EXPECT(0xa3, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0xd4e0, gbc.sp());
        EXPECT(0x9c07, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9c06));
        // 7A 03B1
        gbc.setState(0x468e, 0x2808, 0xfc30, 0x7e5c, 0xd3ea, 0xd5dc, 0x0, 0x0);
        gbc.writeMem(0x468e, { 0x7a });
        gbc.step();
        EXPECT(0xd3, gbc.a());
        EXPECT(0x7e, gbc.b());
        EXPECT(0x5c, gbc.c());
        EXPECT(0xd3, gbc.d());
        EXPECT(0xea, gbc.e());
        EXPECT(0xd5, gbc.h());
        EXPECT(0xdc, gbc.l());
        EXPECT(0x2808, gbc.sp());
        EXPECT(0x468f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03B2
        gbc.setState(0x1237, 0x73ed, 0x7f10, 0x46ce, 0x8764, 0x397b, 0x1, 0x0);
        gbc.writeMem(0x1237, { 0x7a });
        gbc.step();
        EXPECT(0x87, gbc.a());
        EXPECT(0x46, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x87, gbc.d());
        EXPECT(0x64, gbc.e());
        EXPECT(0x39, gbc.h());
        EXPECT(0x7b, gbc.l());
        EXPECT(0x73ed, gbc.sp());
        EXPECT(0x1238, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03B3
        gbc.setState(0x52c3, 0x3a50, 0x93c0, 0x3008, 0x910d, 0x21f9, 0x1, 0x0);
        gbc.writeMem(0x52c3, { 0x7a });
        gbc.step();
        EXPECT(0x91, gbc.a());
        EXPECT(0x30, gbc.b());
        EXPECT(0x8, gbc.c());
        EXPECT(0x91, gbc.d());
        EXPECT(0xd, gbc.e());
        EXPECT(0x21, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x3a50, gbc.sp());
        EXPECT(0x52c4, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03B4
        gbc.setState(0x5cdb, 0x3b0, 0xcf00, 0x205b, 0x51b8, 0x6a92, 0x1, 0x1);
        gbc.writeMem(0x5cdb, { 0x7a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x5b, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0xb8, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x92, gbc.l());
        EXPECT(0x3b0, gbc.sp());
        EXPECT(0x5cdc, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03B5
        gbc.setState(0xb4df, 0xe62d, 0x4910, 0x485d, 0x3ee6, 0x1cc7, 0x1, 0x0);
        gbc.writeMem(0xb4df, { 0x7a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0x48, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1c, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xe62d, gbc.sp());
        EXPECT(0xb4e0, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb4df));
        // 7A 03B6
        gbc.setState(0xa29d, 0x1743, 0x6520, 0x24f0, 0xbe7c, 0x768d, 0x0, 0x0);
        gbc.writeMem(0xa29d, { 0x7a });
        gbc.step();
        EXPECT(0xbe, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0xf0, gbc.c());
        EXPECT(0xbe, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x76, gbc.h());
        EXPECT(0x8d, gbc.l());
        EXPECT(0x1743, gbc.sp());
        EXPECT(0xa29e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xa29d));
        // 7A 03B7
        gbc.setState(0x73c9, 0x33b1, 0x43c0, 0xfca6, 0xe316, 0x9b51, 0x0, 0x0);
        gbc.writeMem(0x73c9, { 0x7a });
        gbc.step();
        EXPECT(0xe3, gbc.a());
        EXPECT(0xfc, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xe3, gbc.d());
        EXPECT(0x16, gbc.e());
        EXPECT(0x9b, gbc.h());
        EXPECT(0x51, gbc.l());
        EXPECT(0x33b1, gbc.sp());
        EXPECT(0x73ca, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03B8
        gbc.setState(0x39ff, 0x7a55, 0xd5c0, 0xd0e0, 0x867, 0x9561, 0x1, 0x1);
        gbc.writeMem(0x39ff, { 0x7a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0xd0, gbc.b());
        EXPECT(0xe0, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x95, gbc.h());
        EXPECT(0x61, gbc.l());
        EXPECT(0x7a55, gbc.sp());
        EXPECT(0x3a00, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03B9
        gbc.setState(0x9269, 0x33a7, 0x4490, 0x79b7, 0xb1eb, 0x3f77, 0x1, 0x0);
        gbc.writeMem(0x9269, { 0x7a });
        gbc.step();
        EXPECT(0xb1, gbc.a());
        EXPECT(0x79, gbc.b());
        EXPECT(0xb7, gbc.c());
        EXPECT(0xb1, gbc.d());
        EXPECT(0xeb, gbc.e());
        EXPECT(0x3f, gbc.h());
        EXPECT(0x77, gbc.l());
        EXPECT(0x33a7, gbc.sp());
        EXPECT(0x926a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9269));
        // 7A 03BA
        gbc.setState(0xbb9d, 0x2a20, 0x3430, 0x2d39, 0x7665, 0x9d7c, 0x0, 0x1);
        gbc.writeMem(0xbb9d, { 0x7a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x2d, gbc.b());
        EXPECT(0x39, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x65, gbc.e());
        EXPECT(0x9d, gbc.h());
        EXPECT(0x7c, gbc.l());
        EXPECT(0x2a20, gbc.sp());
        EXPECT(0xbb9e, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xbb9d));
        // 7A 03BB
        gbc.setState(0x1f67, 0xea20, 0x4630, 0x2007, 0x581d, 0x9ff7, 0x1, 0x1);
        gbc.writeMem(0x1f67, { 0x7a });
        gbc.step();
        EXPECT(0x58, gbc.a());
        EXPECT(0x20, gbc.b());
        EXPECT(0x7, gbc.c());
        EXPECT(0x58, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0xf7, gbc.l());
        EXPECT(0xea20, gbc.sp());
        EXPECT(0x1f68, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03BD
        gbc.setState(0xf4a, 0x9b38, 0xd260, 0x5529, 0xf0cf, 0x8538, 0x0, 0x0);
        gbc.writeMem(0xf4a, { 0x7a });
        gbc.step();
        EXPECT(0xf0, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x29, gbc.c());
        EXPECT(0xf0, gbc.d());
        EXPECT(0xcf, gbc.e());
        EXPECT(0x85, gbc.h());
        EXPECT(0x38, gbc.l());
        EXPECT(0x9b38, gbc.sp());
        EXPECT(0xf4b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03BE
        gbc.setState(0xaa19, 0x32c8, 0x3390, 0x5b5d, 0x593, 0x6edd, 0x1, 0x0);
        gbc.writeMem(0xaa19, { 0x7a });
        gbc.step();
        EXPECT(0x5, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0x5d, gbc.c());
        EXPECT(0x5, gbc.d());
        EXPECT(0x93, gbc.e());
        EXPECT(0x6e, gbc.h());
        EXPECT(0xdd, gbc.l());
        EXPECT(0x32c8, gbc.sp());
        EXPECT(0xaa1a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xaa19));
        // 7A 03BF
        gbc.setState(0x8f96, 0xab71, 0x2a0, 0x16ef, 0x2d2c, 0xd075, 0x0, 0x0);
        gbc.writeMem(0x8f96, { 0x7a });
        gbc.step();
        EXPECT(0x2d, gbc.a());
        EXPECT(0x16, gbc.b());
        EXPECT(0xef, gbc.c());
        EXPECT(0x2d, gbc.d());
        EXPECT(0x2c, gbc.e());
        EXPECT(0xd0, gbc.h());
        EXPECT(0x75, gbc.l());
        EXPECT(0xab71, gbc.sp());
        EXPECT(0x8f97, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x8f96));
        // 7A 03C0
        gbc.setState(0x777e, 0x95c0, 0x3d00, 0x7c0d, 0x6b3f, 0x9f50, 0x0, 0x1);
        gbc.writeMem(0x777e, { 0x7a });
        gbc.step();
        EXPECT(0x6b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xd, gbc.c());
        EXPECT(0x6b, gbc.d());
        EXPECT(0x3f, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x50, gbc.l());
        EXPECT(0x95c0, gbc.sp());
        EXPECT(0x777f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03C1
        gbc.setState(0xb9d0, 0xf156, 0xefa0, 0x7622, 0xa2d3, 0x13b4, 0x0, 0x0);
        gbc.writeMem(0xb9d0, { 0x7a });
        gbc.step();
        EXPECT(0xa2, gbc.a());
        EXPECT(0x76, gbc.b());
        EXPECT(0x22, gbc.c());
        EXPECT(0xa2, gbc.d());
        EXPECT(0xd3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0xb4, gbc.l());
        EXPECT(0xf156, gbc.sp());
        EXPECT(0xb9d1, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb9d0));
        // 7A 03C2
        gbc.setState(0x619f, 0xec83, 0xe30, 0x7b28, 0x74bf, 0xe266, 0x0, 0x0);
        gbc.writeMem(0x619f, { 0x7a });
        gbc.step();
        EXPECT(0x74, gbc.a());
        EXPECT(0x7b, gbc.b());
        EXPECT(0x28, gbc.c());
        EXPECT(0x74, gbc.d());
        EXPECT(0xbf, gbc.e());
        EXPECT(0xe2, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0xec83, gbc.sp());
        EXPECT(0x61a0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03C3
        gbc.setState(0xb499, 0xc50d, 0x95a0, 0xe843, 0x20d1, 0xd3c0, 0x1, 0x1);
        gbc.writeMem(0xb499, { 0x7a });
        gbc.step();
        EXPECT(0x20, gbc.a());
        EXPECT(0xe8, gbc.b());
        EXPECT(0x43, gbc.c());
        EXPECT(0x20, gbc.d());
        EXPECT(0xd1, gbc.e());
        EXPECT(0xd3, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0xc50d, gbc.sp());
        EXPECT(0xb49a, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb499));
        // 7A 03C4
        gbc.setState(0xb9f2, 0xb3a6, 0x62e0, 0x5c35, 0x5b2b, 0xf29d, 0x1, 0x0);
        gbc.writeMem(0xb9f2, { 0x7a });
        gbc.step();
        EXPECT(0x5b, gbc.a());
        EXPECT(0x5c, gbc.b());
        EXPECT(0x35, gbc.c());
        EXPECT(0x5b, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0xf2, gbc.h());
        EXPECT(0x9d, gbc.l());
        EXPECT(0xb3a6, gbc.sp());
        EXPECT(0xb9f3, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb9f2));
        // 7A 03C5
        gbc.setState(0x3d0a, 0x2eba, 0xa4c0, 0x5856, 0x8cd, 0x6a41, 0x0, 0x1);
        gbc.writeMem(0x3d0a, { 0x7a });
        gbc.step();
        EXPECT(0x8, gbc.a());
        EXPECT(0x58, gbc.b());
        EXPECT(0x56, gbc.c());
        EXPECT(0x8, gbc.d());
        EXPECT(0xcd, gbc.e());
        EXPECT(0x6a, gbc.h());
        EXPECT(0x41, gbc.l());
        EXPECT(0x2eba, gbc.sp());
        EXPECT(0x3d0b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03C6
        gbc.setState(0xe84e, 0x95e3, 0x3990, 0xbc70, 0xd2f6, 0xaba2, 0x0, 0x0);
        gbc.writeMem(0xe84e, { 0x7a });
        gbc.step();
        EXPECT(0xd2, gbc.a());
        EXPECT(0xbc, gbc.b());
        EXPECT(0x70, gbc.c());
        EXPECT(0xd2, gbc.d());
        EXPECT(0xf6, gbc.e());
        EXPECT(0xab, gbc.h());
        EXPECT(0xa2, gbc.l());
        EXPECT(0x95e3, gbc.sp());
        EXPECT(0xe84f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xe84e));
        // 7A 03C7
        gbc.setState(0xb6b7, 0x5a6d, 0x4b00, 0x373f, 0x14ad, 0xa8b7, 0x0, 0x0);
        gbc.writeMem(0xb6b7, { 0x7a });
        gbc.step();
        EXPECT(0x14, gbc.a());
        EXPECT(0x37, gbc.b());
        EXPECT(0x3f, gbc.c());
        EXPECT(0x14, gbc.d());
        EXPECT(0xad, gbc.e());
        EXPECT(0xa8, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x5a6d, gbc.sp());
        EXPECT(0xb6b8, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb6b7));
        // 7A 03C8
        gbc.setState(0x878d, 0xff5, 0x1a0, 0x3510, 0x512b, 0x9011, 0x1, 0x0);
        gbc.writeMem(0x878d, { 0x7a });
        gbc.step();
        EXPECT(0x51, gbc.a());
        EXPECT(0x35, gbc.b());
        EXPECT(0x10, gbc.c());
        EXPECT(0x51, gbc.d());
        EXPECT(0x2b, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0x11, gbc.l());
        EXPECT(0xff5, gbc.sp());
        EXPECT(0x878e, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x878d));
        // 7A 03C9
        gbc.setState(0x473e, 0x96ae, 0x1200, 0xe34e, 0x6f70, 0x3786, 0x0, 0x0);
        gbc.writeMem(0x473e, { 0x7a });
        gbc.step();
        EXPECT(0x6f, gbc.a());
        EXPECT(0xe3, gbc.b());
        EXPECT(0x4e, gbc.c());
        EXPECT(0x6f, gbc.d());
        EXPECT(0x70, gbc.e());
        EXPECT(0x37, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x96ae, gbc.sp());
        EXPECT(0x473f, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03CA
        gbc.setState(0x1913, 0x676c, 0x75c0, 0x7cca, 0x7bb3, 0xf9b7, 0x0, 0x1);
        gbc.writeMem(0x1913, { 0x7a });
        gbc.step();
        EXPECT(0x7b, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0xca, gbc.c());
        EXPECT(0x7b, gbc.d());
        EXPECT(0xb3, gbc.e());
        EXPECT(0xf9, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0x676c, gbc.sp());
        EXPECT(0x1914, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03CB
        gbc.setState(0xb547, 0x6c8d, 0xc0c0, 0x1191, 0xdb4e, 0xb66f, 0x0, 0x1);
        gbc.writeMem(0xb547, { 0x7a });
        gbc.step();
        EXPECT(0xdb, gbc.a());
        EXPECT(0x11, gbc.b());
        EXPECT(0x91, gbc.c());
        EXPECT(0xdb, gbc.d());
        EXPECT(0x4e, gbc.e());
        EXPECT(0xb6, gbc.h());
        EXPECT(0x6f, gbc.l());
        EXPECT(0x6c8d, gbc.sp());
        EXPECT(0xb548, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb547));
        // 7A 03CC
        gbc.setState(0xdba9, 0xc438, 0x5f00, 0xdc2, 0x64ff, 0x5635, 0x1, 0x1);
        gbc.writeMem(0xdba9, { 0x7a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0xd, gbc.b());
        EXPECT(0xc2, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xff, gbc.e());
        EXPECT(0x56, gbc.h());
        EXPECT(0x35, gbc.l());
        EXPECT(0xc438, gbc.sp());
        EXPECT(0xdbaa, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xdba9));
        // 7A 03CD
        gbc.setState(0xab34, 0x2234, 0x5ac0, 0x1313, 0x7688, 0x5858, 0x1, 0x0);
        gbc.writeMem(0xab34, { 0x7a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x13, gbc.b());
        EXPECT(0x13, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0x88, gbc.e());
        EXPECT(0x58, gbc.h());
        EXPECT(0x58, gbc.l());
        EXPECT(0x2234, gbc.sp());
        EXPECT(0xab35, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xab34));
        // 7A 03CE
        gbc.setState(0xb88b, 0xeac, 0x8920, 0xfeee, 0xb0de, 0xbd74, 0x1, 0x1);
        gbc.writeMem(0xb88b, { 0x7a });
        gbc.step();
        EXPECT(0xb0, gbc.a());
        EXPECT(0xfe, gbc.b());
        EXPECT(0xee, gbc.c());
        EXPECT(0xb0, gbc.d());
        EXPECT(0xde, gbc.e());
        EXPECT(0xbd, gbc.h());
        EXPECT(0x74, gbc.l());
        EXPECT(0xeac, gbc.sp());
        EXPECT(0xb88c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xb88b));
        // 7A 03CF
        gbc.setState(0x6536, 0x3aa1, 0xa060, 0x3971, 0x61e6, 0x1f86, 0x1, 0x1);
        gbc.writeMem(0x6536, { 0x7a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x39, gbc.b());
        EXPECT(0x71, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0xe6, gbc.e());
        EXPECT(0x1f, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x3aa1, gbc.sp());
        EXPECT(0x6537, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03D0
        gbc.setState(0x100f, 0xe8ab, 0x59a0, 0xef4d, 0x36c, 0xce13, 0x1, 0x1);
        gbc.writeMem(0x100f, { 0x7a });
        gbc.step();
        EXPECT(0x3, gbc.a());
        EXPECT(0xef, gbc.b());
        EXPECT(0x4d, gbc.c());
        EXPECT(0x3, gbc.d());
        EXPECT(0x6c, gbc.e());
        EXPECT(0xce, gbc.h());
        EXPECT(0x13, gbc.l());
        EXPECT(0xe8ab, gbc.sp());
        EXPECT(0x1010, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03D1
        gbc.setState(0x9222, 0x5edc, 0x7a80, 0x59c0, 0xca79, 0x2733, 0x1, 0x1);
        gbc.writeMem(0x9222, { 0x7a });
        gbc.step();
        EXPECT(0xca, gbc.a());
        EXPECT(0x59, gbc.b());
        EXPECT(0xc0, gbc.c());
        EXPECT(0xca, gbc.d());
        EXPECT(0x79, gbc.e());
        EXPECT(0x27, gbc.h());
        EXPECT(0x33, gbc.l());
        EXPECT(0x5edc, gbc.sp());
        EXPECT(0x9223, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9222));
        // 7A 03D3
        gbc.setState(0x98d4, 0x15cc, 0x410, 0x5b0a, 0x76a5, 0x38f0, 0x1, 0x0);
        gbc.writeMem(0x98d4, { 0x7a });
        gbc.step();
        EXPECT(0x76, gbc.a());
        EXPECT(0x5b, gbc.b());
        EXPECT(0xa, gbc.c());
        EXPECT(0x76, gbc.d());
        EXPECT(0xa5, gbc.e());
        EXPECT(0x38, gbc.h());
        EXPECT(0xf0, gbc.l());
        EXPECT(0x15cc, gbc.sp());
        EXPECT(0x98d5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x98d4));
        // 7A 03D4
        gbc.setState(0x4d02, 0x72b5, 0xba00, 0x9ff9, 0x64ac, 0xbb66, 0x0, 0x0);
        gbc.writeMem(0x4d02, { 0x7a });
        gbc.step();
        EXPECT(0x64, gbc.a());
        EXPECT(0x9f, gbc.b());
        EXPECT(0xf9, gbc.c());
        EXPECT(0x64, gbc.d());
        EXPECT(0xac, gbc.e());
        EXPECT(0xbb, gbc.h());
        EXPECT(0x66, gbc.l());
        EXPECT(0x72b5, gbc.sp());
        EXPECT(0x4d03, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03D5
        gbc.setState(0x29e9, 0x9cc9, 0x2e0, 0x52af, 0xf87c, 0x2691, 0x0, 0x1);
        gbc.writeMem(0x29e9, { 0x7a });
        gbc.step();
        EXPECT(0xf8, gbc.a());
        EXPECT(0x52, gbc.b());
        EXPECT(0xaf, gbc.c());
        EXPECT(0xf8, gbc.d());
        EXPECT(0x7c, gbc.e());
        EXPECT(0x26, gbc.h());
        EXPECT(0x91, gbc.l());
        EXPECT(0x9cc9, gbc.sp());
        EXPECT(0x29ea, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03D6
        gbc.setState(0x870a, 0xfac4, 0x320, 0x242b, 0xacb5, 0x54b7, 0x1, 0x1);
        gbc.writeMem(0x870a, { 0x7a });
        gbc.step();
        EXPECT(0xac, gbc.a());
        EXPECT(0x24, gbc.b());
        EXPECT(0x2b, gbc.c());
        EXPECT(0xac, gbc.d());
        EXPECT(0xb5, gbc.e());
        EXPECT(0x54, gbc.h());
        EXPECT(0xb7, gbc.l());
        EXPECT(0xfac4, gbc.sp());
        EXPECT(0x870b, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x870a));
        // 7A 03D7
        gbc.setState(0x489e, 0x2e0d, 0x2600, 0x7c8e, 0xa427, 0x7e62, 0x1, 0x0);
        gbc.writeMem(0x489e, { 0x7a });
        gbc.step();
        EXPECT(0xa4, gbc.a());
        EXPECT(0x7c, gbc.b());
        EXPECT(0x8e, gbc.c());
        EXPECT(0xa4, gbc.d());
        EXPECT(0x27, gbc.e());
        EXPECT(0x7e, gbc.h());
        EXPECT(0x62, gbc.l());
        EXPECT(0x2e0d, gbc.sp());
        EXPECT(0x489f, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03D8
        gbc.setState(0x1657, 0x9ae1, 0x7130, 0xdd59, 0x5672, 0xea7f, 0x1, 0x1);
        gbc.writeMem(0x1657, { 0x7a });
        gbc.step();
        EXPECT(0x56, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x59, gbc.c());
        EXPECT(0x56, gbc.d());
        EXPECT(0x72, gbc.e());
        EXPECT(0xea, gbc.h());
        EXPECT(0x7f, gbc.l());
        EXPECT(0x9ae1, gbc.sp());
        EXPECT(0x1658, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03D9
        gbc.setState(0x2c6c, 0xb631, 0xb5d0, 0x9ea9, 0x6102, 0xaac9, 0x0, 0x1);
        gbc.writeMem(0x2c6c, { 0x7a });
        gbc.step();
        EXPECT(0x61, gbc.a());
        EXPECT(0x9e, gbc.b());
        EXPECT(0xa9, gbc.c());
        EXPECT(0x61, gbc.d());
        EXPECT(0x2, gbc.e());
        EXPECT(0xaa, gbc.h());
        EXPECT(0xc9, gbc.l());
        EXPECT(0xb631, gbc.sp());
        EXPECT(0x2c6d, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03DA
        gbc.setState(0x596b, 0xf085, 0x42a0, 0x74e1, 0x2634, 0x2e08, 0x1, 0x1);
        gbc.writeMem(0x596b, { 0x7a });
        gbc.step();
        EXPECT(0x26, gbc.a());
        EXPECT(0x74, gbc.b());
        EXPECT(0xe1, gbc.c());
        EXPECT(0x26, gbc.d());
        EXPECT(0x34, gbc.e());
        EXPECT(0x2e, gbc.h());
        EXPECT(0x8, gbc.l());
        EXPECT(0xf085, gbc.sp());
        EXPECT(0x596c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03DB
        gbc.setState(0x6e9, 0x71a, 0x6af0, 0x91a6, 0xfe1d, 0xba67, 0x1, 0x1);
        gbc.writeMem(0x6e9, { 0x7a });
        gbc.step();
        EXPECT(0xfe, gbc.a());
        EXPECT(0x91, gbc.b());
        EXPECT(0xa6, gbc.c());
        EXPECT(0xfe, gbc.d());
        EXPECT(0x1d, gbc.e());
        EXPECT(0xba, gbc.h());
        EXPECT(0x67, gbc.l());
        EXPECT(0x71a, gbc.sp());
        EXPECT(0x6ea, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03DC
        gbc.setState(0x2bf, 0xd4fb, 0xfc00, 0xa873, 0xdd6, 0xfbd2, 0x0, 0x0);
        gbc.writeMem(0x2bf, { 0x7a });
        gbc.step();
        EXPECT(0xd, gbc.a());
        EXPECT(0xa8, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0xd, gbc.d());
        EXPECT(0xd6, gbc.e());
        EXPECT(0xfb, gbc.h());
        EXPECT(0xd2, gbc.l());
        EXPECT(0xd4fb, gbc.sp());
        EXPECT(0x2c0, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03DD
        gbc.setState(0xcf7b, 0x20c, 0xa8b0, 0xcd8d, 0x7149, 0x90f9, 0x1, 0x1);
        gbc.writeMem(0xcf7b, { 0x7a });
        gbc.step();
        EXPECT(0x71, gbc.a());
        EXPECT(0xcd, gbc.b());
        EXPECT(0x8d, gbc.c());
        EXPECT(0x71, gbc.d());
        EXPECT(0x49, gbc.e());
        EXPECT(0x90, gbc.h());
        EXPECT(0xf9, gbc.l());
        EXPECT(0x20c, gbc.sp());
        EXPECT(0xcf7c, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xcf7b));
        // 7A 03DE
        gbc.setState(0x4055, 0xdca4, 0x7880, 0x556b, 0xfd67, 0x4ecc, 0x0, 0x1);
        gbc.writeMem(0x4055, { 0x7a });
        gbc.step();
        EXPECT(0xfd, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0x6b, gbc.c());
        EXPECT(0xfd, gbc.d());
        EXPECT(0x67, gbc.e());
        EXPECT(0x4e, gbc.h());
        EXPECT(0xcc, gbc.l());
        EXPECT(0xdca4, gbc.sp());
        EXPECT(0x4056, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03DF
        gbc.setState(0x9715, 0x6ec3, 0x9d60, 0x63ec, 0xb96b, 0xf76d, 0x1, 0x0);
        gbc.writeMem(0x9715, { 0x7a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0x63, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0x6b, gbc.e());
        EXPECT(0xf7, gbc.h());
        EXPECT(0x6d, gbc.l());
        EXPECT(0x6ec3, gbc.sp());
        EXPECT(0x9716, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9715));
        // 7A 03E0
        gbc.setState(0x2651, 0xf8da, 0x47e0, 0xdd95, 0x3e46, 0xc9c7, 0x0, 0x0);
        gbc.writeMem(0x2651, { 0x7a });
        gbc.step();
        EXPECT(0x3e, gbc.a());
        EXPECT(0xdd, gbc.b());
        EXPECT(0x95, gbc.c());
        EXPECT(0x3e, gbc.d());
        EXPECT(0x46, gbc.e());
        EXPECT(0xc9, gbc.h());
        EXPECT(0xc7, gbc.l());
        EXPECT(0xf8da, gbc.sp());
        EXPECT(0x2652, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03E1
        gbc.setState(0x89f8, 0x8b0b, 0xaea0, 0x6e73, 0x78a3, 0x1315, 0x1, 0x0);
        gbc.writeMem(0x89f8, { 0x7a });
        gbc.step();
        EXPECT(0x78, gbc.a());
        EXPECT(0x6e, gbc.b());
        EXPECT(0x73, gbc.c());
        EXPECT(0x78, gbc.d());
        EXPECT(0xa3, gbc.e());
        EXPECT(0x13, gbc.h());
        EXPECT(0x15, gbc.l());
        EXPECT(0x8b0b, gbc.sp());
        EXPECT(0x89f9, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x89f8));
        // 7A 03E2
        gbc.setState(0x7e8a, 0xd20c, 0x98f0, 0xbaec, 0xb9f1, 0xe4fb, 0x0, 0x0);
        gbc.writeMem(0x7e8a, { 0x7a });
        gbc.step();
        EXPECT(0xb9, gbc.a());
        EXPECT(0xba, gbc.b());
        EXPECT(0xec, gbc.c());
        EXPECT(0xb9, gbc.d());
        EXPECT(0xf1, gbc.e());
        EXPECT(0xe4, gbc.h());
        EXPECT(0xfb, gbc.l());
        EXPECT(0xd20c, gbc.sp());
        EXPECT(0x7e8b, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03E3
        gbc.setState(0x99b4, 0x55c9, 0xc200, 0x553, 0x249c, 0x8b8c, 0x1, 0x1);
        gbc.writeMem(0x99b4, { 0x7a });
        gbc.step();
        EXPECT(0x24, gbc.a());
        EXPECT(0x5, gbc.b());
        EXPECT(0x53, gbc.c());
        EXPECT(0x24, gbc.d());
        EXPECT(0x9c, gbc.e());
        EXPECT(0x8b, gbc.h());
        EXPECT(0x8c, gbc.l());
        EXPECT(0x55c9, gbc.sp());
        EXPECT(0x99b5, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x99b4));
        // 7A 03E4
        gbc.setState(0x86c, 0x438a, 0xe8a0, 0x14ea, 0x8d81, 0x9f1e, 0x1, 0x0);
        gbc.writeMem(0x86c, { 0x7a });
        gbc.step();
        EXPECT(0x8d, gbc.a());
        EXPECT(0x14, gbc.b());
        EXPECT(0xea, gbc.c());
        EXPECT(0x8d, gbc.d());
        EXPECT(0x81, gbc.e());
        EXPECT(0x9f, gbc.h());
        EXPECT(0x1e, gbc.l());
        EXPECT(0x438a, gbc.sp());
        EXPECT(0x86d, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(false, gbc.flagC());
        // 7A 03E5
        gbc.setState(0x9651, 0x4f83, 0x5e30, 0xb7c4, 0x2a1, 0xc0a4, 0x1, 0x1);
        gbc.writeMem(0x9651, { 0x7a });
        gbc.step();
        EXPECT(0x2, gbc.a());
        EXPECT(0xb7, gbc.b());
        EXPECT(0xc4, gbc.c());
        EXPECT(0x2, gbc.d());
        EXPECT(0xa1, gbc.e());
        EXPECT(0xc0, gbc.h());
        EXPECT(0xa4, gbc.l());
        EXPECT(0x4f83, gbc.sp());
        EXPECT(0x9652, gbc.pc());
        EXPECT(0x1, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(false, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0x9651));
        // 7A 03E6
        gbc.setState(0x2200, 0x5d1a, 0x1f0, 0x55ce, 0x13bd, 0x6886, 0x0, 0x0);
        gbc.writeMem(0x2200, { 0x7a });
        gbc.step();
        EXPECT(0x13, gbc.a());
        EXPECT(0x55, gbc.b());
        EXPECT(0xce, gbc.c());
        EXPECT(0x13, gbc.d());
        EXPECT(0xbd, gbc.e());
        EXPECT(0x68, gbc.h());
        EXPECT(0x86, gbc.l());
        EXPECT(0x5d1a, gbc.sp());
        EXPECT(0x2201, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(true, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(true, gbc.flagH());
        EXPECT(true, gbc.flagC());
        // 7A 03E7
        gbc.setState(0xc472, 0x45ec, 0xed40, 0xbe41, 0xf136, 0xdac0, 0x0, 0x1);
        gbc.writeMem(0xc472, { 0x7a });
        gbc.step();
        EXPECT(0xf1, gbc.a());
        EXPECT(0xbe, gbc.b());
        EXPECT(0x41, gbc.c());
        EXPECT(0xf1, gbc.d());
        EXPECT(0x36, gbc.e());
        EXPECT(0xda, gbc.h());
        EXPECT(0xc0, gbc.l());
        EXPECT(0x45ec, gbc.sp());
        EXPECT(0xc473, gbc.pc());
        EXPECT(0x0, gbc.ime());
        EXPECT(false, gbc.flagZ());
        EXPECT(true, gbc.flagN());
        EXPECT(false, gbc.flagH());
        EXPECT(false, gbc.flagC());
        EXPECT(0x7a, gbc.readMem(0xc472));
    }
